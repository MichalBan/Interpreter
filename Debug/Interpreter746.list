
Interpreter746.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000290f4  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000013c4  080292c8  080292c8  000392c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0802a68c  0802a68c  000401e8  2**0
                  CONTENTS
  4 .ARM          00000008  0802a68c  0802a68c  0003a68c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0802a694  0802a694  000401e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   0000003c  0802a694  0802a694  0003a694  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   0000003c  0802a6d0  0802a6d0  0003a6d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  0802a70c  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000704  200001e8  0802a8f4  000401e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200008ec  0802a8f4  000408ec  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000401e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0030b447  00000000  00000000  00040218  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000116fb  00000000  00000000  0034b65f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00010848  00000000  00000000  0035cd60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000106a0  00000000  00000000  0036d5a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0003202e  00000000  00000000  0037dc48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00063da3  00000000  00000000  003afc76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    001f9da5  00000000  00000000  00413a19  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0060d7be  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000516ec  00000000  00000000  0060d814  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001e8 	.word	0x200001e8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080292ac 	.word	0x080292ac

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001ec 	.word	0x200001ec
 800020c:	080292ac 	.word	0x080292ac

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cdc:	f000 b9a4 	b.w	8001028 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f83c 	bl	8000d64 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_d2lz>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	460d      	mov	r5, r1
 8000d02:	f7ff ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8000d06:	b928      	cbnz	r0, 8000d14 <__aeabi_d2lz+0x1c>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d10:	f000 b80a 	b.w	8000d28 <__aeabi_d2ulz>
 8000d14:	4620      	mov	r0, r4
 8000d16:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000d1a:	f000 f805 	bl	8000d28 <__aeabi_d2ulz>
 8000d1e:	4240      	negs	r0, r0
 8000d20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop

08000d28 <__aeabi_d2ulz>:
 8000d28:	b5d0      	push	{r4, r6, r7, lr}
 8000d2a:	4b0c      	ldr	r3, [pc, #48]	; (8000d5c <__aeabi_d2ulz+0x34>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460f      	mov	r7, r1
 8000d32:	f7ff fc81 	bl	8000638 <__aeabi_dmul>
 8000d36:	f7ff ff57 	bl	8000be8 <__aeabi_d2uiz>
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f7ff fc02 	bl	8000544 <__aeabi_ui2d>
 8000d40:	4b07      	ldr	r3, [pc, #28]	; (8000d60 <__aeabi_d2ulz+0x38>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	f7ff fc78 	bl	8000638 <__aeabi_dmul>
 8000d48:	4602      	mov	r2, r0
 8000d4a:	460b      	mov	r3, r1
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	4639      	mov	r1, r7
 8000d50:	f7ff faba 	bl	80002c8 <__aeabi_dsub>
 8000d54:	f7ff ff48 	bl	8000be8 <__aeabi_d2uiz>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d5c:	3df00000 	.word	0x3df00000
 8000d60:	41f00000 	.word	0x41f00000

08000d64 <__udivmoddi4>:
 8000d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d68:	9d08      	ldr	r5, [sp, #32]
 8000d6a:	4604      	mov	r4, r0
 8000d6c:	468c      	mov	ip, r1
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	f040 8083 	bne.w	8000e7a <__udivmoddi4+0x116>
 8000d74:	428a      	cmp	r2, r1
 8000d76:	4617      	mov	r7, r2
 8000d78:	d947      	bls.n	8000e0a <__udivmoddi4+0xa6>
 8000d7a:	fab2 f282 	clz	r2, r2
 8000d7e:	b142      	cbz	r2, 8000d92 <__udivmoddi4+0x2e>
 8000d80:	f1c2 0020 	rsb	r0, r2, #32
 8000d84:	fa24 f000 	lsr.w	r0, r4, r0
 8000d88:	4091      	lsls	r1, r2
 8000d8a:	4097      	lsls	r7, r2
 8000d8c:	ea40 0c01 	orr.w	ip, r0, r1
 8000d90:	4094      	lsls	r4, r2
 8000d92:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000d96:	0c23      	lsrs	r3, r4, #16
 8000d98:	fbbc f6f8 	udiv	r6, ip, r8
 8000d9c:	fa1f fe87 	uxth.w	lr, r7
 8000da0:	fb08 c116 	mls	r1, r8, r6, ip
 8000da4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000da8:	fb06 f10e 	mul.w	r1, r6, lr
 8000dac:	4299      	cmp	r1, r3
 8000dae:	d909      	bls.n	8000dc4 <__udivmoddi4+0x60>
 8000db0:	18fb      	adds	r3, r7, r3
 8000db2:	f106 30ff 	add.w	r0, r6, #4294967295
 8000db6:	f080 8119 	bcs.w	8000fec <__udivmoddi4+0x288>
 8000dba:	4299      	cmp	r1, r3
 8000dbc:	f240 8116 	bls.w	8000fec <__udivmoddi4+0x288>
 8000dc0:	3e02      	subs	r6, #2
 8000dc2:	443b      	add	r3, r7
 8000dc4:	1a5b      	subs	r3, r3, r1
 8000dc6:	b2a4      	uxth	r4, r4
 8000dc8:	fbb3 f0f8 	udiv	r0, r3, r8
 8000dcc:	fb08 3310 	mls	r3, r8, r0, r3
 8000dd0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000dd4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dd8:	45a6      	cmp	lr, r4
 8000dda:	d909      	bls.n	8000df0 <__udivmoddi4+0x8c>
 8000ddc:	193c      	adds	r4, r7, r4
 8000dde:	f100 33ff 	add.w	r3, r0, #4294967295
 8000de2:	f080 8105 	bcs.w	8000ff0 <__udivmoddi4+0x28c>
 8000de6:	45a6      	cmp	lr, r4
 8000de8:	f240 8102 	bls.w	8000ff0 <__udivmoddi4+0x28c>
 8000dec:	3802      	subs	r0, #2
 8000dee:	443c      	add	r4, r7
 8000df0:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000df4:	eba4 040e 	sub.w	r4, r4, lr
 8000df8:	2600      	movs	r6, #0
 8000dfa:	b11d      	cbz	r5, 8000e04 <__udivmoddi4+0xa0>
 8000dfc:	40d4      	lsrs	r4, r2
 8000dfe:	2300      	movs	r3, #0
 8000e00:	e9c5 4300 	strd	r4, r3, [r5]
 8000e04:	4631      	mov	r1, r6
 8000e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0a:	b902      	cbnz	r2, 8000e0e <__udivmoddi4+0xaa>
 8000e0c:	deff      	udf	#255	; 0xff
 8000e0e:	fab2 f282 	clz	r2, r2
 8000e12:	2a00      	cmp	r2, #0
 8000e14:	d150      	bne.n	8000eb8 <__udivmoddi4+0x154>
 8000e16:	1bcb      	subs	r3, r1, r7
 8000e18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e1c:	fa1f f887 	uxth.w	r8, r7
 8000e20:	2601      	movs	r6, #1
 8000e22:	fbb3 fcfe 	udiv	ip, r3, lr
 8000e26:	0c21      	lsrs	r1, r4, #16
 8000e28:	fb0e 331c 	mls	r3, lr, ip, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb08 f30c 	mul.w	r3, r8, ip
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d907      	bls.n	8000e48 <__udivmoddi4+0xe4>
 8000e38:	1879      	adds	r1, r7, r1
 8000e3a:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000e3e:	d202      	bcs.n	8000e46 <__udivmoddi4+0xe2>
 8000e40:	428b      	cmp	r3, r1
 8000e42:	f200 80e9 	bhi.w	8001018 <__udivmoddi4+0x2b4>
 8000e46:	4684      	mov	ip, r0
 8000e48:	1ac9      	subs	r1, r1, r3
 8000e4a:	b2a3      	uxth	r3, r4
 8000e4c:	fbb1 f0fe 	udiv	r0, r1, lr
 8000e50:	fb0e 1110 	mls	r1, lr, r0, r1
 8000e54:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000e58:	fb08 f800 	mul.w	r8, r8, r0
 8000e5c:	45a0      	cmp	r8, r4
 8000e5e:	d907      	bls.n	8000e70 <__udivmoddi4+0x10c>
 8000e60:	193c      	adds	r4, r7, r4
 8000e62:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e66:	d202      	bcs.n	8000e6e <__udivmoddi4+0x10a>
 8000e68:	45a0      	cmp	r8, r4
 8000e6a:	f200 80d9 	bhi.w	8001020 <__udivmoddi4+0x2bc>
 8000e6e:	4618      	mov	r0, r3
 8000e70:	eba4 0408 	sub.w	r4, r4, r8
 8000e74:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000e78:	e7bf      	b.n	8000dfa <__udivmoddi4+0x96>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d909      	bls.n	8000e92 <__udivmoddi4+0x12e>
 8000e7e:	2d00      	cmp	r5, #0
 8000e80:	f000 80b1 	beq.w	8000fe6 <__udivmoddi4+0x282>
 8000e84:	2600      	movs	r6, #0
 8000e86:	e9c5 0100 	strd	r0, r1, [r5]
 8000e8a:	4630      	mov	r0, r6
 8000e8c:	4631      	mov	r1, r6
 8000e8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e92:	fab3 f683 	clz	r6, r3
 8000e96:	2e00      	cmp	r6, #0
 8000e98:	d14a      	bne.n	8000f30 <__udivmoddi4+0x1cc>
 8000e9a:	428b      	cmp	r3, r1
 8000e9c:	d302      	bcc.n	8000ea4 <__udivmoddi4+0x140>
 8000e9e:	4282      	cmp	r2, r0
 8000ea0:	f200 80b8 	bhi.w	8001014 <__udivmoddi4+0x2b0>
 8000ea4:	1a84      	subs	r4, r0, r2
 8000ea6:	eb61 0103 	sbc.w	r1, r1, r3
 8000eaa:	2001      	movs	r0, #1
 8000eac:	468c      	mov	ip, r1
 8000eae:	2d00      	cmp	r5, #0
 8000eb0:	d0a8      	beq.n	8000e04 <__udivmoddi4+0xa0>
 8000eb2:	e9c5 4c00 	strd	r4, ip, [r5]
 8000eb6:	e7a5      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000eb8:	f1c2 0320 	rsb	r3, r2, #32
 8000ebc:	fa20 f603 	lsr.w	r6, r0, r3
 8000ec0:	4097      	lsls	r7, r2
 8000ec2:	fa01 f002 	lsl.w	r0, r1, r2
 8000ec6:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000eca:	40d9      	lsrs	r1, r3
 8000ecc:	4330      	orrs	r0, r6
 8000ece:	0c03      	lsrs	r3, r0, #16
 8000ed0:	fbb1 f6fe 	udiv	r6, r1, lr
 8000ed4:	fa1f f887 	uxth.w	r8, r7
 8000ed8:	fb0e 1116 	mls	r1, lr, r6, r1
 8000edc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ee0:	fb06 f108 	mul.w	r1, r6, r8
 8000ee4:	4299      	cmp	r1, r3
 8000ee6:	fa04 f402 	lsl.w	r4, r4, r2
 8000eea:	d909      	bls.n	8000f00 <__udivmoddi4+0x19c>
 8000eec:	18fb      	adds	r3, r7, r3
 8000eee:	f106 3cff 	add.w	ip, r6, #4294967295
 8000ef2:	f080 808d 	bcs.w	8001010 <__udivmoddi4+0x2ac>
 8000ef6:	4299      	cmp	r1, r3
 8000ef8:	f240 808a 	bls.w	8001010 <__udivmoddi4+0x2ac>
 8000efc:	3e02      	subs	r6, #2
 8000efe:	443b      	add	r3, r7
 8000f00:	1a5b      	subs	r3, r3, r1
 8000f02:	b281      	uxth	r1, r0
 8000f04:	fbb3 f0fe 	udiv	r0, r3, lr
 8000f08:	fb0e 3310 	mls	r3, lr, r0, r3
 8000f0c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f10:	fb00 f308 	mul.w	r3, r0, r8
 8000f14:	428b      	cmp	r3, r1
 8000f16:	d907      	bls.n	8000f28 <__udivmoddi4+0x1c4>
 8000f18:	1879      	adds	r1, r7, r1
 8000f1a:	f100 3cff 	add.w	ip, r0, #4294967295
 8000f1e:	d273      	bcs.n	8001008 <__udivmoddi4+0x2a4>
 8000f20:	428b      	cmp	r3, r1
 8000f22:	d971      	bls.n	8001008 <__udivmoddi4+0x2a4>
 8000f24:	3802      	subs	r0, #2
 8000f26:	4439      	add	r1, r7
 8000f28:	1acb      	subs	r3, r1, r3
 8000f2a:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000f2e:	e778      	b.n	8000e22 <__udivmoddi4+0xbe>
 8000f30:	f1c6 0c20 	rsb	ip, r6, #32
 8000f34:	fa03 f406 	lsl.w	r4, r3, r6
 8000f38:	fa22 f30c 	lsr.w	r3, r2, ip
 8000f3c:	431c      	orrs	r4, r3
 8000f3e:	fa20 f70c 	lsr.w	r7, r0, ip
 8000f42:	fa01 f306 	lsl.w	r3, r1, r6
 8000f46:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000f4a:	fa21 f10c 	lsr.w	r1, r1, ip
 8000f4e:	431f      	orrs	r7, r3
 8000f50:	0c3b      	lsrs	r3, r7, #16
 8000f52:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f56:	fa1f f884 	uxth.w	r8, r4
 8000f5a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000f62:	fb09 fa08 	mul.w	sl, r9, r8
 8000f66:	458a      	cmp	sl, r1
 8000f68:	fa02 f206 	lsl.w	r2, r2, r6
 8000f6c:	fa00 f306 	lsl.w	r3, r0, r6
 8000f70:	d908      	bls.n	8000f84 <__udivmoddi4+0x220>
 8000f72:	1861      	adds	r1, r4, r1
 8000f74:	f109 30ff 	add.w	r0, r9, #4294967295
 8000f78:	d248      	bcs.n	800100c <__udivmoddi4+0x2a8>
 8000f7a:	458a      	cmp	sl, r1
 8000f7c:	d946      	bls.n	800100c <__udivmoddi4+0x2a8>
 8000f7e:	f1a9 0902 	sub.w	r9, r9, #2
 8000f82:	4421      	add	r1, r4
 8000f84:	eba1 010a 	sub.w	r1, r1, sl
 8000f88:	b2bf      	uxth	r7, r7
 8000f8a:	fbb1 f0fe 	udiv	r0, r1, lr
 8000f8e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000f92:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000f96:	fb00 f808 	mul.w	r8, r0, r8
 8000f9a:	45b8      	cmp	r8, r7
 8000f9c:	d907      	bls.n	8000fae <__udivmoddi4+0x24a>
 8000f9e:	19e7      	adds	r7, r4, r7
 8000fa0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000fa4:	d22e      	bcs.n	8001004 <__udivmoddi4+0x2a0>
 8000fa6:	45b8      	cmp	r8, r7
 8000fa8:	d92c      	bls.n	8001004 <__udivmoddi4+0x2a0>
 8000faa:	3802      	subs	r0, #2
 8000fac:	4427      	add	r7, r4
 8000fae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000fb2:	eba7 0708 	sub.w	r7, r7, r8
 8000fb6:	fba0 8902 	umull	r8, r9, r0, r2
 8000fba:	454f      	cmp	r7, r9
 8000fbc:	46c6      	mov	lr, r8
 8000fbe:	4649      	mov	r1, r9
 8000fc0:	d31a      	bcc.n	8000ff8 <__udivmoddi4+0x294>
 8000fc2:	d017      	beq.n	8000ff4 <__udivmoddi4+0x290>
 8000fc4:	b15d      	cbz	r5, 8000fde <__udivmoddi4+0x27a>
 8000fc6:	ebb3 020e 	subs.w	r2, r3, lr
 8000fca:	eb67 0701 	sbc.w	r7, r7, r1
 8000fce:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000fd2:	40f2      	lsrs	r2, r6
 8000fd4:	ea4c 0202 	orr.w	r2, ip, r2
 8000fd8:	40f7      	lsrs	r7, r6
 8000fda:	e9c5 2700 	strd	r2, r7, [r5]
 8000fde:	2600      	movs	r6, #0
 8000fe0:	4631      	mov	r1, r6
 8000fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fe6:	462e      	mov	r6, r5
 8000fe8:	4628      	mov	r0, r5
 8000fea:	e70b      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000fec:	4606      	mov	r6, r0
 8000fee:	e6e9      	b.n	8000dc4 <__udivmoddi4+0x60>
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	e6fd      	b.n	8000df0 <__udivmoddi4+0x8c>
 8000ff4:	4543      	cmp	r3, r8
 8000ff6:	d2e5      	bcs.n	8000fc4 <__udivmoddi4+0x260>
 8000ff8:	ebb8 0e02 	subs.w	lr, r8, r2
 8000ffc:	eb69 0104 	sbc.w	r1, r9, r4
 8001000:	3801      	subs	r0, #1
 8001002:	e7df      	b.n	8000fc4 <__udivmoddi4+0x260>
 8001004:	4608      	mov	r0, r1
 8001006:	e7d2      	b.n	8000fae <__udivmoddi4+0x24a>
 8001008:	4660      	mov	r0, ip
 800100a:	e78d      	b.n	8000f28 <__udivmoddi4+0x1c4>
 800100c:	4681      	mov	r9, r0
 800100e:	e7b9      	b.n	8000f84 <__udivmoddi4+0x220>
 8001010:	4666      	mov	r6, ip
 8001012:	e775      	b.n	8000f00 <__udivmoddi4+0x19c>
 8001014:	4630      	mov	r0, r6
 8001016:	e74a      	b.n	8000eae <__udivmoddi4+0x14a>
 8001018:	f1ac 0c02 	sub.w	ip, ip, #2
 800101c:	4439      	add	r1, r7
 800101e:	e713      	b.n	8000e48 <__udivmoddi4+0xe4>
 8001020:	3802      	subs	r0, #2
 8001022:	443c      	add	r4, r7
 8001024:	e724      	b.n	8000e70 <__udivmoddi4+0x10c>
 8001026:	bf00      	nop

08001028 <__aeabi_idiv0>:
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop

0800102c <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
 800102c:	b580      	push	{r7, lr}
 800102e:	b084      	sub	sp, #16
 8001030:	af00      	add	r7, sp, #0
 8001032:	6078      	str	r0, [r7, #4]
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	60fb      	str	r3, [r7, #12]
      return __builtin_is_constant_evaluated();
 8001038:	2300      	movs	r3, #0
      {
#if __cplusplus >= 201703L
	if (__constant_string_p(__s))
 800103a:	2b00      	cmp	r3, #0
 800103c:	d004      	beq.n	8001048 <_ZNSt11char_traitsIcE6lengthEPKc+0x1c>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
 800103e:	6878      	ldr	r0, [r7, #4]
 8001040:	f000 fe64 	bl	8001d0c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
 8001044:	4603      	mov	r3, r0
 8001046:	e004      	b.n	8001052 <_ZNSt11char_traitsIcE6lengthEPKc+0x26>
#endif
	return __builtin_strlen(__s);
 8001048:	6878      	ldr	r0, [r7, #4]
 800104a:	f7ff f931 	bl	80002b0 <strlen>
 800104e:	4603      	mov	r3, r0
 8001050:	bf00      	nop
      }
 8001052:	4618      	mov	r0, r3
 8001054:	3710      	adds	r7, #16
 8001056:	46bd      	mov	sp, r7
 8001058:	bd80      	pop	{r7, pc}

0800105a <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800105a:	b480      	push	{r7}
 800105c:	b083      	sub	sp, #12
 800105e:	af00      	add	r7, sp, #0
 8001060:	6078      	str	r0, [r7, #4]
 8001062:	6039      	str	r1, [r7, #0]
 8001064:	683b      	ldr	r3, [r7, #0]
 8001066:	4618      	mov	r0, r3
 8001068:	370c      	adds	r7, #12
 800106a:	46bd      	mov	sp, r7
 800106c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001070:	4770      	bx	lr

08001072 <_ZSt26__throw_bad_variant_accessPKc>:
    friend void __throw_bad_variant_access(const char* __what);
  };

  inline void
  __throw_bad_variant_access(const char* __what)
  { _GLIBCXX_THROW_OR_ABORT(bad_variant_access(__what)); }
 8001072:	b580      	push	{r7, lr}
 8001074:	b082      	sub	sp, #8
 8001076:	af00      	add	r7, sp, #0
 8001078:	6078      	str	r0, [r7, #4]
 800107a:	f023 fd4f 	bl	8024b1c <abort>

0800107e <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
 800107e:	b580      	push	{r7, lr}
 8001080:	b082      	sub	sp, #8
 8001082:	af00      	add	r7, sp, #0
 8001084:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_color = _S_red;
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	2200      	movs	r2, #0
 800108a:	701a      	strb	r2, [r3, #0]
      _M_reset();
 800108c:	6878      	ldr	r0, [r7, #4]
 800108e:	f000 f805 	bl	800109c <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
 8001092:	687b      	ldr	r3, [r7, #4]
 8001094:	4618      	mov	r0, r3
 8001096:	3708      	adds	r7, #8
 8001098:	46bd      	mov	sp, r7
 800109a:	bd80      	pop	{r7, pc}

0800109c <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
 800109c:	b480      	push	{r7}
 800109e:	b083      	sub	sp, #12
 80010a0:	af00      	add	r7, sp, #0
 80010a2:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_parent = 0;
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	2200      	movs	r2, #0
 80010a8:	605a      	str	r2, [r3, #4]
      _M_header._M_left = &_M_header;
 80010aa:	687a      	ldr	r2, [r7, #4]
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	609a      	str	r2, [r3, #8]
      _M_header._M_right = &_M_header;
 80010b0:	687a      	ldr	r2, [r7, #4]
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	60da      	str	r2, [r3, #12]
      _M_node_count = 0;
 80010b6:	687b      	ldr	r3, [r7, #4]
 80010b8:	2200      	movs	r2, #0
 80010ba:	611a      	str	r2, [r3, #16]
    }
 80010bc:	bf00      	nop
 80010be:	370c      	adds	r7, #12
 80010c0:	46bd      	mov	sp, r7
 80010c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c6:	4770      	bx	lr

080010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	4618      	mov	r0, r3
 80010d4:	370c      	adds	r7, #12
 80010d6:	46bd      	mov	sp, r7
 80010d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010dc:	4770      	bx	lr

080010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>:
   *
   *  @tparam _T1  Type of first object.
   *  @tparam _T2  Type of second object.
   */
  template<typename _T1, typename _T2>
    struct pair
 80010de:	b580      	push	{r7, lr}
 80010e0:	b082      	sub	sp, #8
 80010e2:	af00      	add	r7, sp, #0
 80010e4:	6078      	str	r0, [r7, #4]
 80010e6:	687b      	ldr	r3, [r7, #4]
 80010e8:	4618      	mov	r0, r3
 80010ea:	f022 fb7a 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	4618      	mov	r0, r3
 80010f2:	3708      	adds	r7, #8
 80010f4:	46bd      	mov	sp, r7
 80010f6:	bd80      	pop	{r7, pc}

080010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
 80010f8:	b5b0      	push	{r4, r5, r7, lr}
 80010fa:	b086      	sub	sp, #24
 80010fc:	af00      	add	r7, sp, #0
 80010fe:	60f8      	str	r0, [r7, #12]
 8001100:	60b9      	str	r1, [r7, #8]
 8001102:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001104:	68fc      	ldr	r4, [r7, #12]
 8001106:	68b8      	ldr	r0, [r7, #8]
 8001108:	f000 fe68 	bl	8001ddc <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800110c:	4605      	mov	r5, r0
 800110e:	f107 0314 	add.w	r3, r7, #20
 8001112:	4618      	mov	r0, r3
 8001114:	f022 f8d4 	bl	80232c0 <_ZNSaIcEC1Ev>
 8001118:	f107 0314 	add.w	r3, r7, #20
 800111c:	461a      	mov	r2, r3
 800111e:	4629      	mov	r1, r5
 8001120:	4620      	mov	r0, r4
 8001122:	f000 fe66 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001126:	f107 0314 	add.w	r3, r7, #20
 800112a:	4618      	mov	r0, r3
 800112c:	f022 f8c9 	bl	80232c2 <_ZNSaIcED1Ev>
 8001130:	6878      	ldr	r0, [r7, #4]
 8001132:	f7ff ffc9 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001136:	4603      	mov	r3, r0
 8001138:	781a      	ldrb	r2, [r3, #0]
 800113a:	68fb      	ldr	r3, [r7, #12]
 800113c:	761a      	strb	r2, [r3, #24]
 800113e:	68fb      	ldr	r3, [r7, #12]
 8001140:	4618      	mov	r0, r3
 8001142:	3718      	adds	r7, #24
 8001144:	46bd      	mov	sp, r7
 8001146:	bdb0      	pop	{r4, r5, r7, pc}

08001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001148:	b5b0      	push	{r4, r5, r7, lr}
 800114a:	b086      	sub	sp, #24
 800114c:	af00      	add	r7, sp, #0
 800114e:	60f8      	str	r0, [r7, #12]
 8001150:	60b9      	str	r1, [r7, #8]
 8001152:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001154:	68fc      	ldr	r4, [r7, #12]
 8001156:	68b8      	ldr	r0, [r7, #8]
 8001158:	f000 fe71 	bl	8001e3e <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800115c:	4605      	mov	r5, r0
 800115e:	f107 0314 	add.w	r3, r7, #20
 8001162:	4618      	mov	r0, r3
 8001164:	f022 f8ac 	bl	80232c0 <_ZNSaIcEC1Ev>
 8001168:	f107 0314 	add.w	r3, r7, #20
 800116c:	461a      	mov	r2, r3
 800116e:	4629      	mov	r1, r5
 8001170:	4620      	mov	r0, r4
 8001172:	f000 fe3e 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001176:	f107 0314 	add.w	r3, r7, #20
 800117a:	4618      	mov	r0, r3
 800117c:	f022 f8a1 	bl	80232c2 <_ZNSaIcED1Ev>
 8001180:	6878      	ldr	r0, [r7, #4]
 8001182:	f7ff ffa1 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001186:	4603      	mov	r3, r0
 8001188:	781a      	ldrb	r2, [r3, #0]
 800118a:	68fb      	ldr	r3, [r7, #12]
 800118c:	761a      	strb	r2, [r3, #24]
 800118e:	68fb      	ldr	r3, [r7, #12]
 8001190:	4618      	mov	r0, r3
 8001192:	3718      	adds	r7, #24
 8001194:	46bd      	mov	sp, r7
 8001196:	bdb0      	pop	{r4, r5, r7, pc}

08001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001198:	b5b0      	push	{r4, r5, r7, lr}
 800119a:	b086      	sub	sp, #24
 800119c:	af00      	add	r7, sp, #0
 800119e:	60f8      	str	r0, [r7, #12]
 80011a0:	60b9      	str	r1, [r7, #8]
 80011a2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011a4:	68fc      	ldr	r4, [r7, #12]
 80011a6:	68b8      	ldr	r0, [r7, #8]
 80011a8:	f000 fe54 	bl	8001e54 <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011ac:	4605      	mov	r5, r0
 80011ae:	f107 0314 	add.w	r3, r7, #20
 80011b2:	4618      	mov	r0, r3
 80011b4:	f022 f884 	bl	80232c0 <_ZNSaIcEC1Ev>
 80011b8:	f107 0314 	add.w	r3, r7, #20
 80011bc:	461a      	mov	r2, r3
 80011be:	4629      	mov	r1, r5
 80011c0:	4620      	mov	r0, r4
 80011c2:	f000 fe16 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80011c6:	f107 0314 	add.w	r3, r7, #20
 80011ca:	4618      	mov	r0, r3
 80011cc:	f022 f879 	bl	80232c2 <_ZNSaIcED1Ev>
 80011d0:	6878      	ldr	r0, [r7, #4]
 80011d2:	f7ff ff79 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 80011d6:	4603      	mov	r3, r0
 80011d8:	781a      	ldrb	r2, [r3, #0]
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	761a      	strb	r2, [r3, #24]
 80011de:	68fb      	ldr	r3, [r7, #12]
 80011e0:	4618      	mov	r0, r3
 80011e2:	3718      	adds	r7, #24
 80011e4:	46bd      	mov	sp, r7
 80011e6:	bdb0      	pop	{r4, r5, r7, pc}

080011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80011e8:	b5b0      	push	{r4, r5, r7, lr}
 80011ea:	b086      	sub	sp, #24
 80011ec:	af00      	add	r7, sp, #0
 80011ee:	60f8      	str	r0, [r7, #12]
 80011f0:	60b9      	str	r1, [r7, #8]
 80011f2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011f4:	68fc      	ldr	r4, [r7, #12]
 80011f6:	68b8      	ldr	r0, [r7, #8]
 80011f8:	f000 fe37 	bl	8001e6a <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011fc:	4605      	mov	r5, r0
 80011fe:	f107 0314 	add.w	r3, r7, #20
 8001202:	4618      	mov	r0, r3
 8001204:	f022 f85c 	bl	80232c0 <_ZNSaIcEC1Ev>
 8001208:	f107 0314 	add.w	r3, r7, #20
 800120c:	461a      	mov	r2, r3
 800120e:	4629      	mov	r1, r5
 8001210:	4620      	mov	r0, r4
 8001212:	f000 fdee 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001216:	f107 0314 	add.w	r3, r7, #20
 800121a:	4618      	mov	r0, r3
 800121c:	f022 f851 	bl	80232c2 <_ZNSaIcED1Ev>
 8001220:	6878      	ldr	r0, [r7, #4]
 8001222:	f7ff ff51 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001226:	4603      	mov	r3, r0
 8001228:	781a      	ldrb	r2, [r3, #0]
 800122a:	68fb      	ldr	r3, [r7, #12]
 800122c:	761a      	strb	r2, [r3, #24]
 800122e:	68fb      	ldr	r3, [r7, #12]
 8001230:	4618      	mov	r0, r3
 8001232:	3718      	adds	r7, #24
 8001234:	46bd      	mov	sp, r7
 8001236:	bdb0      	pop	{r4, r5, r7, pc}

08001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8001238:	b5b0      	push	{r4, r5, r7, lr}
 800123a:	b086      	sub	sp, #24
 800123c:	af00      	add	r7, sp, #0
 800123e:	60f8      	str	r0, [r7, #12]
 8001240:	60b9      	str	r1, [r7, #8]
 8001242:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001244:	68fc      	ldr	r4, [r7, #12]
 8001246:	68b8      	ldr	r0, [r7, #8]
 8001248:	f000 fe1a 	bl	8001e80 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 800124c:	4605      	mov	r5, r0
 800124e:	f107 0314 	add.w	r3, r7, #20
 8001252:	4618      	mov	r0, r3
 8001254:	f022 f834 	bl	80232c0 <_ZNSaIcEC1Ev>
 8001258:	f107 0314 	add.w	r3, r7, #20
 800125c:	461a      	mov	r2, r3
 800125e:	4629      	mov	r1, r5
 8001260:	4620      	mov	r0, r4
 8001262:	f000 fdc6 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001266:	f107 0314 	add.w	r3, r7, #20
 800126a:	4618      	mov	r0, r3
 800126c:	f022 f829 	bl	80232c2 <_ZNSaIcED1Ev>
 8001270:	6878      	ldr	r0, [r7, #4]
 8001272:	f7ff ff29 	bl	80010c8 <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 8001276:	4603      	mov	r3, r0
 8001278:	781a      	ldrb	r2, [r3, #0]
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	761a      	strb	r2, [r3, #24]
 800127e:	68fb      	ldr	r3, [r7, #12]
 8001280:	4618      	mov	r0, r3
 8001282:	3718      	adds	r7, #24
 8001284:	46bd      	mov	sp, r7
 8001286:	bdb0      	pop	{r4, r5, r7, pc}

08001288 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>:
    { return _Base_type::propagate_on_container_move_assignment::value; }

    static constexpr bool _S_propagate_on_swap()
    { return _Base_type::propagate_on_container_swap::value; }

    static constexpr bool _S_always_equal()
 8001288:	b480      	push	{r7}
 800128a:	af00      	add	r7, sp, #0
    { return _Base_type::is_always_equal::value; }
 800128c:	2301      	movs	r3, #1
 800128e:	4618      	mov	r0, r3
 8001290:	46bd      	mov	sp, r7
 8001292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001296:	4770      	bx	lr

08001298 <_ZN8ExecutorC1Ev>:
#include <Executor.h>

Executor::Executor()
 8001298:	b480      	push	{r7}
 800129a:	b083      	sub	sp, #12
 800129c:	af00      	add	r7, sp, #0
 800129e:	6078      	str	r0, [r7, #4]
{

}
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	4618      	mov	r0, r3
 80012a4:	370c      	adds	r7, #12
 80012a6:	46bd      	mov	sp, r7
 80012a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ac:	4770      	bx	lr
	...

080012b0 <_ZN8Executor12get_instanceEv>:

Executor& Executor::get_instance()
{
 80012b0:	b580      	push	{r7, lr}
 80012b2:	af00      	add	r7, sp, #0
	static Executor instance;
 80012b4:	4b10      	ldr	r3, [pc, #64]	; (80012f8 <_ZN8Executor12get_instanceEv+0x48>)
 80012b6:	781b      	ldrb	r3, [r3, #0]
 80012b8:	f3bf 8f5b 	dmb	ish
 80012bc:	b2db      	uxtb	r3, r3
 80012be:	f003 0301 	and.w	r3, r3, #1
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	bf0c      	ite	eq
 80012c6:	2301      	moveq	r3, #1
 80012c8:	2300      	movne	r3, #0
 80012ca:	b2db      	uxtb	r3, r3
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d010      	beq.n	80012f2 <_ZN8Executor12get_instanceEv+0x42>
 80012d0:	4809      	ldr	r0, [pc, #36]	; (80012f8 <_ZN8Executor12get_instanceEv+0x48>)
 80012d2:	f021 ffd5 	bl	8023280 <__cxa_guard_acquire>
 80012d6:	4603      	mov	r3, r0
 80012d8:	2b00      	cmp	r3, #0
 80012da:	bf14      	ite	ne
 80012dc:	2301      	movne	r3, #1
 80012de:	2300      	moveq	r3, #0
 80012e0:	b2db      	uxtb	r3, r3
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d005      	beq.n	80012f2 <_ZN8Executor12get_instanceEv+0x42>
 80012e6:	4805      	ldr	r0, [pc, #20]	; (80012fc <_ZN8Executor12get_instanceEv+0x4c>)
 80012e8:	f7ff ffd6 	bl	8001298 <_ZN8ExecutorC1Ev>
 80012ec:	4802      	ldr	r0, [pc, #8]	; (80012f8 <_ZN8Executor12get_instanceEv+0x48>)
 80012ee:	f021 ffd3 	bl	8023298 <__cxa_guard_release>
	return instance;
 80012f2:	4b02      	ldr	r3, [pc, #8]	; (80012fc <_ZN8Executor12get_instanceEv+0x4c>)
}
 80012f4:	4618      	mov	r0, r3
 80012f6:	bd80      	pop	{r7, pc}
 80012f8:	20000250 	.word	0x20000250
 80012fc:	2000024c 	.word	0x2000024c

08001300 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 8001300:	b580      	push	{r7, lr}
 8001302:	b082      	sub	sp, #8
 8001304:	af00      	add	r7, sp, #0
 8001306:	6078      	str	r0, [r7, #4]
 8001308:	687b      	ldr	r3, [r7, #4]
 800130a:	4618      	mov	r0, r3
 800130c:	f000 fe53 	bl	8001fb6 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001310:	687b      	ldr	r3, [r7, #4]
 8001312:	4618      	mov	r0, r3
 8001314:	3708      	adds	r7, #8
 8001316:	46bd      	mov	sp, r7
 8001318:	bd80      	pop	{r7, pc}

0800131a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 800131a:	b580      	push	{r7, lr}
 800131c:	b082      	sub	sp, #8
 800131e:	af00      	add	r7, sp, #0
 8001320:	6078      	str	r0, [r7, #4]
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	4618      	mov	r0, r3
 8001326:	f7ff ffeb 	bl	8001300 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	4618      	mov	r0, r3
 800132e:	3708      	adds	r7, #8
 8001330:	46bd      	mov	sp, r7
 8001332:	bd80      	pop	{r7, pc}

08001334 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8001334:	b580      	push	{r7, lr}
 8001336:	b082      	sub	sp, #8
 8001338:	af00      	add	r7, sp, #0
 800133a:	6078      	str	r0, [r7, #4]
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	4618      	mov	r0, r3
 8001340:	f7ff ffeb 	bl	800131a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001344:	687b      	ldr	r3, [r7, #4]
 8001346:	4618      	mov	r0, r3
 8001348:	3708      	adds	r7, #8
 800134a:	46bd      	mov	sp, r7
 800134c:	bd80      	pop	{r7, pc}

0800134e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 800134e:	b580      	push	{r7, lr}
 8001350:	b082      	sub	sp, #8
 8001352:	af00      	add	r7, sp, #0
 8001354:	6078      	str	r0, [r7, #4]
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	4618      	mov	r0, r3
 800135a:	f7ff ffeb 	bl	8001334 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	4618      	mov	r0, r3
 8001362:	3708      	adds	r7, #8
 8001364:	46bd      	mov	sp, r7
 8001366:	bd80      	pop	{r7, pc}

08001368 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8001368:	b580      	push	{r7, lr}
 800136a:	b082      	sub	sp, #8
 800136c:	af00      	add	r7, sp, #0
 800136e:	6078      	str	r0, [r7, #4]
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	4618      	mov	r0, r3
 8001374:	f7ff ffeb 	bl	800134e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	4618      	mov	r0, r3
 800137c:	3708      	adds	r7, #8
 800137e:	46bd      	mov	sp, r7
 8001380:	bd80      	pop	{r7, pc}

08001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>:
      variant() = default;
      variant(const variant& __rhs) = default;
      variant(variant&&) = default;
      variant& operator=(const variant&) = default;
      variant& operator=(variant&&) = default;
      ~variant() = default;
 8001382:	b580      	push	{r7, lr}
 8001384:	b082      	sub	sp, #8
 8001386:	af00      	add	r7, sp, #0
 8001388:	6078      	str	r0, [r7, #4]
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	4618      	mov	r0, r3
 800138e:	f7ff ffeb 	bl	8001368 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	4618      	mov	r0, r3
 8001396:	3708      	adds	r7, #8
 8001398:	46bd      	mov	sp, r7
 800139a:	bd80      	pop	{r7, pc}

0800139c <_ZN6SymbolD1Ev>:
typedef enum
{
	SYMBOL_INT, SYMBOL_FLOAT, SYMBOL_BOOL, SYMBOL_STRING, SYMBOL_CONTAINER,
} symbol_type;

class Symbol
 800139c:	b580      	push	{r7, lr}
 800139e:	b082      	sub	sp, #8
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	6078      	str	r0, [r7, #4]
 80013a4:	687b      	ldr	r3, [r7, #4]
 80013a6:	3304      	adds	r3, #4
 80013a8:	4618      	mov	r0, r3
 80013aa:	f7ff ffea 	bl	8001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	4618      	mov	r0, r3
 80013b2:	3708      	adds	r7, #8
 80013b4:	46bd      	mov	sp, r7
 80013b6:	bd80      	pop	{r7, pc}

080013b8 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 80013b8:	b580      	push	{r7, lr}
 80013ba:	b082      	sub	sp, #8
 80013bc:	af00      	add	r7, sp, #0
 80013be:	6078      	str	r0, [r7, #4]
 80013c0:	6039      	str	r1, [r7, #0]
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	683a      	ldr	r2, [r7, #0]
 80013c6:	4611      	mov	r1, r2
 80013c8:	4618      	mov	r0, r3
 80013ca:	f000 fe00 	bl	8001fce <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	4618      	mov	r0, r3
 80013d2:	3708      	adds	r7, #8
 80013d4:	46bd      	mov	sp, r7
 80013d6:	bd80      	pop	{r7, pc}

080013d8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 80013d8:	b580      	push	{r7, lr}
 80013da:	b082      	sub	sp, #8
 80013dc:	af00      	add	r7, sp, #0
 80013de:	6078      	str	r0, [r7, #4]
 80013e0:	6039      	str	r1, [r7, #0]
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	683a      	ldr	r2, [r7, #0]
 80013e6:	4611      	mov	r1, r2
 80013e8:	4618      	mov	r0, r3
 80013ea:	f7ff ffe5 	bl	80013b8 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	4618      	mov	r0, r3
 80013f2:	3708      	adds	r7, #8
 80013f4:	46bd      	mov	sp, r7
 80013f6:	bd80      	pop	{r7, pc}

080013f8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 80013f8:	b580      	push	{r7, lr}
 80013fa:	b082      	sub	sp, #8
 80013fc:	af00      	add	r7, sp, #0
 80013fe:	6078      	str	r0, [r7, #4]
 8001400:	6039      	str	r1, [r7, #0]
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	683a      	ldr	r2, [r7, #0]
 8001406:	4611      	mov	r1, r2
 8001408:	4618      	mov	r0, r3
 800140a:	f7ff ffe5 	bl	80013d8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	4618      	mov	r0, r3
 8001412:	3708      	adds	r7, #8
 8001414:	46bd      	mov	sp, r7
 8001416:	bd80      	pop	{r7, pc}

08001418 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Variant_base(const _Variant_base&) = default;
 8001418:	b580      	push	{r7, lr}
 800141a:	b082      	sub	sp, #8
 800141c:	af00      	add	r7, sp, #0
 800141e:	6078      	str	r0, [r7, #4]
 8001420:	6039      	str	r1, [r7, #0]
 8001422:	687b      	ldr	r3, [r7, #4]
 8001424:	683a      	ldr	r2, [r7, #0]
 8001426:	4611      	mov	r1, r2
 8001428:	4618      	mov	r0, r3
 800142a:	f7ff ffe5 	bl	80013f8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 800142e:	687b      	ldr	r3, [r7, #4]
 8001430:	4618      	mov	r0, r3
 8001432:	3708      	adds	r7, #8
 8001434:	46bd      	mov	sp, r7
 8001436:	bd80      	pop	{r7, pc}

08001438 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ERKSA_>:
      variant(const variant& __rhs) = default;
 8001438:	b580      	push	{r7, lr}
 800143a:	b082      	sub	sp, #8
 800143c:	af00      	add	r7, sp, #0
 800143e:	6078      	str	r0, [r7, #4]
 8001440:	6039      	str	r1, [r7, #0]
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	683a      	ldr	r2, [r7, #0]
 8001446:	4611      	mov	r1, r2
 8001448:	4618      	mov	r0, r3
 800144a:	f7ff ffe5 	bl	8001418 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	4618      	mov	r0, r3
 8001452:	3708      	adds	r7, #8
 8001454:	46bd      	mov	sp, r7
 8001456:	bd80      	pop	{r7, pc}

08001458 <_ZN6SymbolC1ERKS_>:
 8001458:	b580      	push	{r7, lr}
 800145a:	b082      	sub	sp, #8
 800145c:	af00      	add	r7, sp, #0
 800145e:	6078      	str	r0, [r7, #4]
 8001460:	6039      	str	r1, [r7, #0]
 8001462:	683b      	ldr	r3, [r7, #0]
 8001464:	781a      	ldrb	r2, [r3, #0]
 8001466:	687b      	ldr	r3, [r7, #4]
 8001468:	701a      	strb	r2, [r3, #0]
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	1d1a      	adds	r2, r3, #4
 800146e:	683b      	ldr	r3, [r7, #0]
 8001470:	3304      	adds	r3, #4
 8001472:	4619      	mov	r1, r3
 8001474:	4610      	mov	r0, r2
 8001476:	f7ff ffdf 	bl	8001438 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ERKSA_>
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	4618      	mov	r0, r3
 800147e:	3708      	adds	r7, #8
 8001480:	46bd      	mov	sp, r7
 8001482:	bd80      	pop	{r7, pc}

08001484 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8001484:	b580      	push	{r7, lr}
 8001486:	b082      	sub	sp, #8
 8001488:	af00      	add	r7, sp, #0
 800148a:	6078      	str	r0, [r7, #4]
 800148c:	6039      	str	r1, [r7, #0]
 800148e:	687b      	ldr	r3, [r7, #4]
 8001490:	683a      	ldr	r2, [r7, #0]
 8001492:	4611      	mov	r1, r2
 8001494:	4618      	mov	r0, r3
 8001496:	f001 f8e3 	bl	8002660 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>
 800149a:	687b      	ldr	r3, [r7, #4]
 800149c:	4618      	mov	r0, r3
 800149e:	3708      	adds	r7, #8
 80014a0:	46bd      	mov	sp, r7
 80014a2:	bd80      	pop	{r7, pc}

080014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>:
    class variant
 80014a4:	b580      	push	{r7, lr}
 80014a6:	b082      	sub	sp, #8
 80014a8:	af00      	add	r7, sp, #0
 80014aa:	6078      	str	r0, [r7, #4]
 80014ac:	6039      	str	r1, [r7, #0]
 80014ae:	687b      	ldr	r3, [r7, #4]
 80014b0:	683a      	ldr	r2, [r7, #0]
 80014b2:	4611      	mov	r1, r2
 80014b4:	4618      	mov	r0, r3
 80014b6:	f7ff ffe5 	bl	8001484 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	4618      	mov	r0, r3
 80014be:	3708      	adds	r7, #8
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bd80      	pop	{r7, pc}

080014c4 <_ZN6SymbolaSEOS_>:
 80014c4:	b580      	push	{r7, lr}
 80014c6:	b082      	sub	sp, #8
 80014c8:	af00      	add	r7, sp, #0
 80014ca:	6078      	str	r0, [r7, #4]
 80014cc:	6039      	str	r1, [r7, #0]
 80014ce:	683b      	ldr	r3, [r7, #0]
 80014d0:	781a      	ldrb	r2, [r3, #0]
 80014d2:	687b      	ldr	r3, [r7, #4]
 80014d4:	701a      	strb	r2, [r3, #0]
 80014d6:	683b      	ldr	r3, [r7, #0]
 80014d8:	1d1a      	adds	r2, r3, #4
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	3304      	adds	r3, #4
 80014de:	4611      	mov	r1, r2
 80014e0:	4618      	mov	r0, r3
 80014e2:	f7ff ffdf 	bl	80014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	4618      	mov	r0, r3
 80014ea:	3708      	adds	r7, #8
 80014ec:	46bd      	mov	sp, r7
 80014ee:	bd80      	pop	{r7, pc}

080014f0 <_ZN8Executor12execute_loopEP4Body>:

void Executor::execute_loop(Body *loop)
{
 80014f0:	b590      	push	{r4, r7, lr}
 80014f2:	b0cb      	sub	sp, #300	; 0x12c
 80014f4:	af00      	add	r7, sp, #0
 80014f6:	1d3b      	adds	r3, r7, #4
 80014f8:	6018      	str	r0, [r3, #0]
 80014fa:	463b      	mov	r3, r7
 80014fc:	6019      	str	r1, [r3, #0]
	Symbol &loops = Variable_handler::get_instance().get_local("loops");
 80014fe:	f017 fcab 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 8001502:	4604      	mov	r4, r0
 8001504:	f107 0320 	add.w	r3, r7, #32
 8001508:	4618      	mov	r0, r3
 800150a:	f021 fed9 	bl	80232c0 <_ZNSaIcEC1Ev>
 800150e:	f107 0220 	add.w	r2, r7, #32
 8001512:	f107 0308 	add.w	r3, r7, #8
 8001516:	495a      	ldr	r1, [pc, #360]	; (8001680 <_ZN8Executor12execute_loopEP4Body+0x190>)
 8001518:	4618      	mov	r0, r3
 800151a:	f000 fc6a 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800151e:	f107 0308 	add.w	r3, r7, #8
 8001522:	4619      	mov	r1, r3
 8001524:	4620      	mov	r0, r4
 8001526:	f017 fd5d 	bl	8018fe4 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800152a:	f8c7 0124 	str.w	r0, [r7, #292]	; 0x124
 800152e:	f107 0308 	add.w	r3, r7, #8
 8001532:	4618      	mov	r0, r3
 8001534:	f022 f955 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001538:	f107 0320 	add.w	r3, r7, #32
 800153c:	4618      	mov	r0, r3
 800153e:	f021 fec0 	bl	80232c2 <_ZNSaIcED1Ev>
	Symbol &max_loops = Variable_handler::get_instance().get_local("max_loops");
 8001542:	f017 fc89 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 8001546:	4604      	mov	r4, r0
 8001548:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800154c:	4618      	mov	r0, r3
 800154e:	f021 feb7 	bl	80232c0 <_ZNSaIcEC1Ev>
 8001552:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8001556:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800155a:	494a      	ldr	r1, [pc, #296]	; (8001684 <_ZN8Executor12execute_loopEP4Body+0x194>)
 800155c:	4618      	mov	r0, r3
 800155e:	f000 fc48 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001562:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001566:	4619      	mov	r1, r3
 8001568:	4620      	mov	r0, r4
 800156a:	f017 fd3b 	bl	8018fe4 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800156e:	f8c7 0120 	str.w	r0, [r7, #288]	; 0x120
 8001572:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001576:	4618      	mov	r0, r3
 8001578:	f022 f933 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800157c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001580:	4618      	mov	r0, r3
 8001582:	f021 fe9e 	bl	80232c2 <_ZNSaIcED1Ev>
	while ((max_loops == 0 || loops < max_loops).get_bool())
 8001586:	f107 0380 	add.w	r3, r7, #128	; 0x80
 800158a:	2100      	movs	r1, #0
 800158c:	4618      	mov	r0, r3
 800158e:	f015 fc0d 	bl	8016dac <_ZN6SymbolC1Ei>
 8001592:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8001596:	f107 0280 	add.w	r2, r7, #128	; 0x80
 800159a:	f8d7 1120 	ldr.w	r1, [r7, #288]	; 0x120
 800159e:	4618      	mov	r0, r3
 80015a0:	f016 f8b2 	bl	8017708 <_ZN6SymboleqES_>
 80015a4:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 80015a8:	f8d7 1120 	ldr.w	r1, [r7, #288]	; 0x120
 80015ac:	4618      	mov	r0, r3
 80015ae:	f7ff ff53 	bl	8001458 <_ZN6SymbolC1ERKS_>
 80015b2:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80015b6:	f107 02c0 	add.w	r2, r7, #192	; 0xc0
 80015ba:	f8d7 1124 	ldr.w	r1, [r7, #292]	; 0x124
 80015be:	4618      	mov	r0, r3
 80015c0:	f015 ffc2 	bl	8017548 <_ZN6SymbolltES_>
 80015c4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80015c8:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 80015cc:	f107 0160 	add.w	r1, r7, #96	; 0x60
 80015d0:	4618      	mov	r0, r3
 80015d2:	f015 fe55 	bl	8017280 <_ZN6SymbolooES_>
 80015d6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80015da:	4618      	mov	r0, r3
 80015dc:	f016 fb24 	bl	8017c28 <_ZN6Symbol8get_boolEv>
 80015e0:	4603      	mov	r3, r0
 80015e2:	461c      	mov	r4, r3
 80015e4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80015e8:	4618      	mov	r0, r3
 80015ea:	f7ff fed7 	bl	800139c <_ZN6SymbolD1Ev>
 80015ee:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80015f2:	4618      	mov	r0, r3
 80015f4:	f7ff fed2 	bl	800139c <_ZN6SymbolD1Ev>
 80015f8:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 80015fc:	4618      	mov	r0, r3
 80015fe:	f7ff fecd 	bl	800139c <_ZN6SymbolD1Ev>
 8001602:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8001606:	4618      	mov	r0, r3
 8001608:	f7ff fec8 	bl	800139c <_ZN6SymbolD1Ev>
 800160c:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8001610:	4618      	mov	r0, r3
 8001612:	f7ff fec3 	bl	800139c <_ZN6SymbolD1Ev>
 8001616:	2c00      	cmp	r4, #0
 8001618:	d02c      	beq.n	8001674 <_ZN8Executor12execute_loopEP4Body+0x184>
	{
		execute(loop);
 800161a:	463a      	mov	r2, r7
 800161c:	1d3b      	adds	r3, r7, #4
 800161e:	6811      	ldr	r1, [r2, #0]
 8001620:	6818      	ldr	r0, [r3, #0]
 8001622:	f000 f86d 	bl	8001700 <_ZN8Executor7executeEP4Body>
		Variable_handler::get_instance().transmit_variables();
 8001626:	f017 fc17 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 800162a:	4603      	mov	r3, r0
 800162c:	4618      	mov	r0, r3
 800162e:	f017 fd6b 	bl	8019108 <_ZN16Variable_handler18transmit_variablesEv>
		loops = loops + 1;
 8001632:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8001636:	2101      	movs	r1, #1
 8001638:	4618      	mov	r0, r3
 800163a:	f015 fbb7 	bl	8016dac <_ZN6SymbolC1Ei>
 800163e:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 8001642:	f507 7280 	add.w	r2, r7, #256	; 0x100
 8001646:	f8d7 1124 	ldr.w	r1, [r7, #292]	; 0x124
 800164a:	4618      	mov	r0, r3
 800164c:	f015 fcc2 	bl	8016fd4 <_ZN6SymbolplES_>
 8001650:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 8001654:	4619      	mov	r1, r3
 8001656:	f8d7 0124 	ldr.w	r0, [r7, #292]	; 0x124
 800165a:	f7ff ff33 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800165e:	f107 03e0 	add.w	r3, r7, #224	; 0xe0
 8001662:	4618      	mov	r0, r3
 8001664:	f7ff fe9a 	bl	800139c <_ZN6SymbolD1Ev>
 8001668:	f507 7380 	add.w	r3, r7, #256	; 0x100
 800166c:	4618      	mov	r0, r3
 800166e:	f7ff fe95 	bl	800139c <_ZN6SymbolD1Ev>
	while ((max_loops == 0 || loops < max_loops).get_bool())
 8001672:	e788      	b.n	8001586 <_ZN8Executor12execute_loopEP4Body+0x96>
	}
}
 8001674:	bf00      	nop
 8001676:	f507 7796 	add.w	r7, r7, #300	; 0x12c
 800167a:	46bd      	mov	sp, r7
 800167c:	bd90      	pop	{r4, r7, pc}
 800167e:	bf00      	nop
 8001680:	080292c8 	.word	0x080292c8
 8001684:	080292d0 	.word	0x080292d0

08001688 <_ZN8Executor7executeEP7Program>:

void Executor::execute(Program *p)
{
 8001688:	b580      	push	{r7, lr}
 800168a:	b08a      	sub	sp, #40	; 0x28
 800168c:	af00      	add	r7, sp, #0
 800168e:	6078      	str	r0, [r7, #4]
 8001690:	6039      	str	r1, [r7, #0]
	this->p = p;
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	683a      	ldr	r2, [r7, #0]
 8001696:	601a      	str	r2, [r3, #0]
	execute(p->setup);
 8001698:	683b      	ldr	r3, [r7, #0]
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	4619      	mov	r1, r3
 800169e:	6878      	ldr	r0, [r7, #4]
 80016a0:	f000 f82e 	bl	8001700 <_ZN8Executor7executeEP4Body>
	execute_loop(p->loop);
 80016a4:	683b      	ldr	r3, [r7, #0]
 80016a6:	685b      	ldr	r3, [r3, #4]
 80016a8:	4619      	mov	r1, r3
 80016aa:	6878      	ldr	r0, [r7, #4]
 80016ac:	f7ff ff20 	bl	80014f0 <_ZN8Executor12execute_loopEP4Body>
	Transmitter::send_string("fin\n");
 80016b0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80016b4:	4618      	mov	r0, r3
 80016b6:	f021 fe03 	bl	80232c0 <_ZNSaIcEC1Ev>
 80016ba:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80016be:	f107 030c 	add.w	r3, r7, #12
 80016c2:	490e      	ldr	r1, [pc, #56]	; (80016fc <_ZN8Executor7executeEP7Program+0x74>)
 80016c4:	4618      	mov	r0, r3
 80016c6:	f000 fb94 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80016ca:	f107 030c 	add.w	r3, r7, #12
 80016ce:	4618      	mov	r0, r3
 80016d0:	f017 f908 	bl	80188e4 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80016d4:	f107 030c 	add.w	r3, r7, #12
 80016d8:	4618      	mov	r0, r3
 80016da:	f022 f882 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80016de:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80016e2:	4618      	mov	r0, r3
 80016e4:	f021 fded 	bl	80232c2 <_ZNSaIcED1Ev>
	execute(p->finish);
 80016e8:	683b      	ldr	r3, [r7, #0]
 80016ea:	689b      	ldr	r3, [r3, #8]
 80016ec:	4619      	mov	r1, r3
 80016ee:	6878      	ldr	r0, [r7, #4]
 80016f0:	f000 f806 	bl	8001700 <_ZN8Executor7executeEP4Body>
}
 80016f4:	bf00      	nop
 80016f6:	3728      	adds	r7, #40	; 0x28
 80016f8:	46bd      	mov	sp, r7
 80016fa:	bd80      	pop	{r7, pc}
 80016fc:	080292dc 	.word	0x080292dc

08001700 <_ZN8Executor7executeEP4Body>:

void Executor::execute(Body *bod)
{
 8001700:	b580      	push	{r7, lr}
 8001702:	b086      	sub	sp, #24
 8001704:	af00      	add	r7, sp, #0
 8001706:	6078      	str	r0, [r7, #4]
 8001708:	6039      	str	r1, [r7, #0]
	for (Statement *s : bod->statements)
 800170a:	683b      	ldr	r3, [r7, #0]
 800170c:	617b      	str	r3, [r7, #20]
 800170e:	6978      	ldr	r0, [r7, #20]
 8001710:	f000 ffbc 	bl	800268c <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 8001714:	4603      	mov	r3, r0
 8001716:	60fb      	str	r3, [r7, #12]
 8001718:	6978      	ldr	r0, [r7, #20]
 800171a:	f000 ffc7 	bl	80026ac <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 800171e:	4603      	mov	r3, r0
 8001720:	60bb      	str	r3, [r7, #8]
 8001722:	f107 0208 	add.w	r2, r7, #8
 8001726:	f107 030c 	add.w	r3, r7, #12
 800172a:	4611      	mov	r1, r2
 800172c:	4618      	mov	r0, r3
 800172e:	f000 ffce 	bl	80026ce <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8001732:	4603      	mov	r3, r0
 8001734:	2b00      	cmp	r3, #0
 8001736:	d011      	beq.n	800175c <_ZN8Executor7executeEP4Body+0x5c>
 8001738:	f107 030c 	add.w	r3, r7, #12
 800173c:	4618      	mov	r0, r3
 800173e:	f000 ffee 	bl	800271e <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 8001742:	4603      	mov	r3, r0
 8001744:	681b      	ldr	r3, [r3, #0]
 8001746:	613b      	str	r3, [r7, #16]
	{
		execute(s);
 8001748:	6939      	ldr	r1, [r7, #16]
 800174a:	6878      	ldr	r0, [r7, #4]
 800174c:	f000 f80a 	bl	8001764 <_ZN8Executor7executeEP9Statement>
	for (Statement *s : bod->statements)
 8001750:	f107 030c 	add.w	r3, r7, #12
 8001754:	4618      	mov	r0, r3
 8001756:	f000 ffd2 	bl	80026fe <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>
 800175a:	e7e2      	b.n	8001722 <_ZN8Executor7executeEP4Body+0x22>
	}
}
 800175c:	bf00      	nop
 800175e:	3718      	adds	r7, #24
 8001760:	46bd      	mov	sp, r7
 8001762:	bd80      	pop	{r7, pc}

08001764 <_ZN8Executor7executeEP9Statement>:

void Executor::execute(Statement *stat)
{
 8001764:	b580      	push	{r7, lr}
 8001766:	b082      	sub	sp, #8
 8001768:	af00      	add	r7, sp, #0
 800176a:	6078      	str	r0, [r7, #4]
 800176c:	6039      	str	r1, [r7, #0]
	switch (stat->type)
 800176e:	683b      	ldr	r3, [r7, #0]
 8001770:	781b      	ldrb	r3, [r3, #0]
 8001772:	2b04      	cmp	r3, #4
 8001774:	d848      	bhi.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
 8001776:	a201      	add	r2, pc, #4	; (adr r2, 800177c <_ZN8Executor7executeEP9Statement+0x18>)
 8001778:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800177c:	08001791 	.word	0x08001791
 8001780:	080017a9 	.word	0x080017a9
 8001784:	080017c1 	.word	0x080017c1
 8001788:	080017d9 	.word	0x080017d9
 800178c:	080017f1 	.word	0x080017f1
	{
	case STATEMENT_ASSIGNMENT:
		execute(std::get<Assignment*>(stat->content));
 8001790:	683b      	ldr	r3, [r7, #0]
 8001792:	3304      	adds	r3, #4
 8001794:	4618      	mov	r0, r3
 8001796:	f000 ffce 	bl	8002736 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 800179a:	4603      	mov	r3, r0
 800179c:	681b      	ldr	r3, [r3, #0]
 800179e:	4619      	mov	r1, r3
 80017a0:	6878      	ldr	r0, [r7, #4]
 80017a2:	f000 f949 	bl	8001a38 <_ZN8Executor7executeEP10Assignment>
		break;
 80017a6:	e02f      	b.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_FUNCTION_CALL:
		execute(std::get<Function_call*>(stat->content));
 80017a8:	683b      	ldr	r3, [r7, #0]
 80017aa:	3304      	adds	r3, #4
 80017ac:	4618      	mov	r0, r3
 80017ae:	f000 ffce 	bl	800274e <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 80017b2:	4603      	mov	r3, r0
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	4619      	mov	r1, r3
 80017b8:	6878      	ldr	r0, [r7, #4]
 80017ba:	f000 f8c9 	bl	8001950 <_ZN8Executor7executeEP13Function_call>
		break;
 80017be:	e023      	b.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_METHOD_CALL:
		execute(std::get<Method_call*>(stat->content));
 80017c0:	683b      	ldr	r3, [r7, #0]
 80017c2:	3304      	adds	r3, #4
 80017c4:	4618      	mov	r0, r3
 80017c6:	f000 ffce 	bl	8002766 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 80017ca:	4603      	mov	r3, r0
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	4619      	mov	r1, r3
 80017d0:	6878      	ldr	r0, [r7, #4]
 80017d2:	f000 f8b1 	bl	8001938 <_ZN8Executor7executeEP11Method_call>
		break;
 80017d6:	e017      	b.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_WHILE:
		execute(std::get<While_statement*>(stat->content));
 80017d8:	683b      	ldr	r3, [r7, #0]
 80017da:	3304      	adds	r3, #4
 80017dc:	4618      	mov	r0, r3
 80017de:	f000 ffce 	bl	800277e <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>
 80017e2:	4603      	mov	r3, r0
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	4619      	mov	r1, r3
 80017e8:	6878      	ldr	r0, [r7, #4]
 80017ea:	f000 f877 	bl	80018dc <_ZN8Executor7executeEP15While_statement>
		break;
 80017ee:	e00b      	b.n	8001808 <_ZN8Executor7executeEP9Statement+0xa4>
	case STATEMENT_IF:
		execute(std::get<If_statement*>(stat->content));
 80017f0:	683b      	ldr	r3, [r7, #0]
 80017f2:	3304      	adds	r3, #4
 80017f4:	4618      	mov	r0, r3
 80017f6:	f000 ffce 	bl	8002796 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>
 80017fa:	4603      	mov	r3, r0
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	4619      	mov	r1, r3
 8001800:	6878      	ldr	r0, [r7, #4]
 8001802:	f000 f805 	bl	8001810 <_ZN8Executor7executeEP12If_statement>
		break;
 8001806:	bf00      	nop
	}
}
 8001808:	bf00      	nop
 800180a:	3708      	adds	r7, #8
 800180c:	46bd      	mov	sp, r7
 800180e:	bd80      	pop	{r7, pc}

08001810 <_ZN8Executor7executeEP12If_statement>:

void Executor::execute(If_statement *ifst)
{
 8001810:	b590      	push	{r4, r7, lr}
 8001812:	b08d      	sub	sp, #52	; 0x34
 8001814:	af00      	add	r7, sp, #0
 8001816:	6078      	str	r0, [r7, #4]
 8001818:	6039      	str	r1, [r7, #0]
	for (unsigned int i = 0; i < ifst->conditions.size(); ++i)
 800181a:	2300      	movs	r3, #0
 800181c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800181e:	683b      	ldr	r3, [r7, #0]
 8001820:	4618      	mov	r0, r3
 8001822:	f000 ffc4 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8001826:	4602      	mov	r2, r0
 8001828:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800182a:	4293      	cmp	r3, r2
 800182c:	bf34      	ite	cc
 800182e:	2301      	movcc	r3, #1
 8001830:	2300      	movcs	r3, #0
 8001832:	b2db      	uxtb	r3, r3
 8001834:	2b00      	cmp	r3, #0
 8001836:	d031      	beq.n	800189c <_ZN8Executor7executeEP12If_statement+0x8c>
	{
		Symbol condition_symbol = EVALUATE(ifst->conditions[i]);
 8001838:	f00a fc38 	bl	800c0ac <_ZN21Expression_calculator12get_instanceEv>
 800183c:	4604      	mov	r4, r0
 800183e:	683b      	ldr	r3, [r7, #0]
 8001840:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8001842:	4618      	mov	r0, r3
 8001844:	f000 ffc3 	bl	80027ce <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 8001848:	4603      	mov	r3, r0
 800184a:	681a      	ldr	r2, [r3, #0]
 800184c:	f107 030c 	add.w	r3, r7, #12
 8001850:	4621      	mov	r1, r4
 8001852:	4618      	mov	r0, r3
 8001854:	f00a fca8 	bl	800c1a8 <_ZN21Expression_calculator8evaluateEP10Expression>
		if (condition_symbol.get_bool())
 8001858:	f107 030c 	add.w	r3, r7, #12
 800185c:	4618      	mov	r0, r3
 800185e:	f016 f9e3 	bl	8017c28 <_ZN6Symbol8get_boolEv>
 8001862:	4603      	mov	r3, r0
 8001864:	2b00      	cmp	r3, #0
 8001866:	d00d      	beq.n	8001884 <_ZN8Executor7executeEP12If_statement+0x74>
		{
			execute(ifst->if_bodies[i]);
 8001868:	683b      	ldr	r3, [r7, #0]
 800186a:	330c      	adds	r3, #12
 800186c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800186e:	4618      	mov	r0, r3
 8001870:	f000 ffbd 	bl	80027ee <_ZNSt6vectorIP4BodySaIS1_EEixEj>
 8001874:	4603      	mov	r3, r0
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	4619      	mov	r1, r3
 800187a:	6878      	ldr	r0, [r7, #4]
 800187c:	f7ff ff40 	bl	8001700 <_ZN8Executor7executeEP4Body>
 8001880:	2400      	movs	r4, #0
			return;
 8001882:	e000      	b.n	8001886 <_ZN8Executor7executeEP12If_statement+0x76>
		Symbol condition_symbol = EVALUATE(ifst->conditions[i]);
 8001884:	2401      	movs	r4, #1
 8001886:	f107 030c 	add.w	r3, r7, #12
 800188a:	4618      	mov	r0, r3
 800188c:	f7ff fd86 	bl	800139c <_ZN6SymbolD1Ev>
 8001890:	2c01      	cmp	r4, #1
 8001892:	d120      	bne.n	80018d6 <_ZN8Executor7executeEP12If_statement+0xc6>
	for (unsigned int i = 0; i < ifst->conditions.size(); ++i)
 8001894:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001896:	3301      	adds	r3, #1
 8001898:	62fb      	str	r3, [r7, #44]	; 0x2c
 800189a:	e7c0      	b.n	800181e <_ZN8Executor7executeEP12If_statement+0xe>
		}
	}

	if (ifst->conditions.size() < ifst->if_bodies.size())
 800189c:	683b      	ldr	r3, [r7, #0]
 800189e:	4618      	mov	r0, r3
 80018a0:	f000 ff85 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80018a4:	4604      	mov	r4, r0
 80018a6:	683b      	ldr	r3, [r7, #0]
 80018a8:	330c      	adds	r3, #12
 80018aa:	4618      	mov	r0, r3
 80018ac:	f000 ffaf 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80018b0:	4603      	mov	r3, r0
 80018b2:	429c      	cmp	r4, r3
 80018b4:	bf34      	ite	cc
 80018b6:	2301      	movcc	r3, #1
 80018b8:	2300      	movcs	r3, #0
 80018ba:	b2db      	uxtb	r3, r3
 80018bc:	2b00      	cmp	r3, #0
 80018be:	d00a      	beq.n	80018d6 <_ZN8Executor7executeEP12If_statement+0xc6>
	{
		execute(ifst->if_bodies.back());
 80018c0:	683b      	ldr	r3, [r7, #0]
 80018c2:	330c      	adds	r3, #12
 80018c4:	4618      	mov	r0, r3
 80018c6:	f000 ffb2 	bl	800282e <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 80018ca:	4603      	mov	r3, r0
 80018cc:	681b      	ldr	r3, [r3, #0]
 80018ce:	4619      	mov	r1, r3
 80018d0:	6878      	ldr	r0, [r7, #4]
 80018d2:	f7ff ff15 	bl	8001700 <_ZN8Executor7executeEP4Body>
	}
}
 80018d6:	3734      	adds	r7, #52	; 0x34
 80018d8:	46bd      	mov	sp, r7
 80018da:	bd90      	pop	{r4, r7, pc}

080018dc <_ZN8Executor7executeEP15While_statement>:

void Executor::execute(While_statement *whist)
{
 80018dc:	b580      	push	{r7, lr}
 80018de:	b08c      	sub	sp, #48	; 0x30
 80018e0:	af00      	add	r7, sp, #0
 80018e2:	6078      	str	r0, [r7, #4]
 80018e4:	6039      	str	r1, [r7, #0]
	bool condition = true;
 80018e6:	2301      	movs	r3, #1
 80018e8:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	while (condition)
 80018ec:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80018f0:	2b00      	cmp	r3, #0
 80018f2:	d01d      	beq.n	8001930 <_ZN8Executor7executeEP15While_statement+0x54>
	{
		execute(whist->while_body);
 80018f4:	683b      	ldr	r3, [r7, #0]
 80018f6:	685b      	ldr	r3, [r3, #4]
 80018f8:	4619      	mov	r1, r3
 80018fa:	6878      	ldr	r0, [r7, #4]
 80018fc:	f7ff ff00 	bl	8001700 <_ZN8Executor7executeEP4Body>
		Symbol condition_symbol = EVALUATE(whist->condition);
 8001900:	f00a fbd4 	bl	800c0ac <_ZN21Expression_calculator12get_instanceEv>
 8001904:	4601      	mov	r1, r0
 8001906:	683b      	ldr	r3, [r7, #0]
 8001908:	681a      	ldr	r2, [r3, #0]
 800190a:	f107 030c 	add.w	r3, r7, #12
 800190e:	4618      	mov	r0, r3
 8001910:	f00a fc4a 	bl	800c1a8 <_ZN21Expression_calculator8evaluateEP10Expression>
		condition = condition_symbol.get_bool();
 8001914:	f107 030c 	add.w	r3, r7, #12
 8001918:	4618      	mov	r0, r3
 800191a:	f016 f985 	bl	8017c28 <_ZN6Symbol8get_boolEv>
 800191e:	4603      	mov	r3, r0
 8001920:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		Symbol condition_symbol = EVALUATE(whist->condition);
 8001924:	f107 030c 	add.w	r3, r7, #12
 8001928:	4618      	mov	r0, r3
 800192a:	f7ff fd37 	bl	800139c <_ZN6SymbolD1Ev>
	while (condition)
 800192e:	e7dd      	b.n	80018ec <_ZN8Executor7executeEP15While_statement+0x10>
	}
}
 8001930:	bf00      	nop
 8001932:	3730      	adds	r7, #48	; 0x30
 8001934:	46bd      	mov	sp, r7
 8001936:	bd80      	pop	{r7, pc}

08001938 <_ZN8Executor7executeEP11Method_call>:

void Executor::execute(Method_call *mcall)
{
 8001938:	b580      	push	{r7, lr}
 800193a:	b082      	sub	sp, #8
 800193c:	af00      	add	r7, sp, #0
 800193e:	6078      	str	r0, [r7, #4]
 8001940:	6039      	str	r1, [r7, #0]
	Method_handler::run_method(mcall);
 8001942:	6838      	ldr	r0, [r7, #0]
 8001944:	f010 fbd8 	bl	80120f8 <_ZN14Method_handler10run_methodEP11Method_call>
}
 8001948:	bf00      	nop
 800194a:	3708      	adds	r7, #8
 800194c:	46bd      	mov	sp, r7
 800194e:	bd80      	pop	{r7, pc}

08001950 <_ZN8Executor7executeEP13Function_call>:

void Executor::execute(Function_call *fcall)
{
 8001950:	b580      	push	{r7, lr}
 8001952:	b08a      	sub	sp, #40	; 0x28
 8001954:	af00      	add	r7, sp, #0
 8001956:	6078      	str	r0, [r7, #4]
 8001958:	6039      	str	r1, [r7, #0]
	Function_handler::run_function(fcall);
 800195a:	f107 0308 	add.w	r3, r7, #8
 800195e:	6839      	ldr	r1, [r7, #0]
 8001960:	4618      	mov	r0, r3
 8001962:	f00c fb1d 	bl	800dfa0 <_ZN16Function_handler12run_functionEP13Function_call>
 8001966:	f107 0308 	add.w	r3, r7, #8
 800196a:	4618      	mov	r0, r3
 800196c:	f7ff fd16 	bl	800139c <_ZN6SymbolD1Ev>
}
 8001970:	bf00      	nop
 8001972:	3728      	adds	r7, #40	; 0x28
 8001974:	46bd      	mov	sp, r7
 8001976:	bd80      	pop	{r7, pc}

08001978 <_ZN8VariableC1ERKS_>:
	VARIABLE_LOCAL,
	VARIABLE_ARG,
	VARIABLE_PAR,
}variable_type;

class Variable
 8001978:	b580      	push	{r7, lr}
 800197a:	b082      	sub	sp, #8
 800197c:	af00      	add	r7, sp, #0
 800197e:	6078      	str	r0, [r7, #4]
 8001980:	6039      	str	r1, [r7, #0]
 8001982:	683b      	ldr	r3, [r7, #0]
 8001984:	781a      	ldrb	r2, [r3, #0]
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	701a      	strb	r2, [r3, #0]
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	1d1a      	adds	r2, r3, #4
 800198e:	683b      	ldr	r3, [r7, #0]
 8001990:	3304      	adds	r3, #4
 8001992:	4619      	mov	r1, r3
 8001994:	4610      	mov	r0, r2
 8001996:	f022 f8f3 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800199a:	683b      	ldr	r3, [r7, #0]
 800199c:	69da      	ldr	r2, [r3, #28]
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	61da      	str	r2, [r3, #28]
 80019a2:	687b      	ldr	r3, [r7, #4]
 80019a4:	4618      	mov	r0, r3
 80019a6:	3708      	adds	r7, #8
 80019a8:	46bd      	mov	sp, r7
 80019aa:	bd80      	pop	{r7, pc}

080019ac <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 80019ac:	b580      	push	{r7, lr}
 80019ae:	b082      	sub	sp, #8
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	6078      	str	r0, [r7, #4]
 80019b4:	6039      	str	r1, [r7, #0]
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	683a      	ldr	r2, [r7, #0]
 80019ba:	4611      	mov	r1, r2
 80019bc:	4618      	mov	r0, r3
 80019be:	f001 faa9 	bl	8002f14 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	4618      	mov	r0, r3
 80019c6:	3708      	adds	r7, #8
 80019c8:	46bd      	mov	sp, r7
 80019ca:	bd80      	pop	{r7, pc}

080019cc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80019cc:	b580      	push	{r7, lr}
 80019ce:	b082      	sub	sp, #8
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	6078      	str	r0, [r7, #4]
 80019d4:	6039      	str	r1, [r7, #0]
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	683a      	ldr	r2, [r7, #0]
 80019da:	4611      	mov	r1, r2
 80019dc:	4618      	mov	r0, r3
 80019de:	f7ff ffe5 	bl	80019ac <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	4618      	mov	r0, r3
 80019e6:	3708      	adds	r7, #8
 80019e8:	46bd      	mov	sp, r7
 80019ea:	bd80      	pop	{r7, pc}

080019ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSERKSA_>:
    class variant
 80019ec:	b580      	push	{r7, lr}
 80019ee:	b082      	sub	sp, #8
 80019f0:	af00      	add	r7, sp, #0
 80019f2:	6078      	str	r0, [r7, #4]
 80019f4:	6039      	str	r1, [r7, #0]
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	683a      	ldr	r2, [r7, #0]
 80019fa:	4611      	mov	r1, r2
 80019fc:	4618      	mov	r0, r3
 80019fe:	f7ff ffe5 	bl	80019cc <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	4618      	mov	r0, r3
 8001a06:	3708      	adds	r7, #8
 8001a08:	46bd      	mov	sp, r7
 8001a0a:	bd80      	pop	{r7, pc}

08001a0c <_ZN6SymbolaSERKS_>:
 8001a0c:	b580      	push	{r7, lr}
 8001a0e:	b082      	sub	sp, #8
 8001a10:	af00      	add	r7, sp, #0
 8001a12:	6078      	str	r0, [r7, #4]
 8001a14:	6039      	str	r1, [r7, #0]
 8001a16:	683b      	ldr	r3, [r7, #0]
 8001a18:	781a      	ldrb	r2, [r3, #0]
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	701a      	strb	r2, [r3, #0]
 8001a1e:	683b      	ldr	r3, [r7, #0]
 8001a20:	1d1a      	adds	r2, r3, #4
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	3304      	adds	r3, #4
 8001a26:	4611      	mov	r1, r2
 8001a28:	4618      	mov	r0, r3
 8001a2a:	f7ff ffdf 	bl	80019ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSERKSA_>
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	4618      	mov	r0, r3
 8001a32:	3708      	adds	r7, #8
 8001a34:	46bd      	mov	sp, r7
 8001a36:	bd80      	pop	{r7, pc}

08001a38 <_ZN8Executor7executeEP10Assignment>:

void Executor::execute(Assignment *assign)
{
 8001a38:	b590      	push	{r4, r7, lr}
 8001a3a:	b09d      	sub	sp, #116	; 0x74
 8001a3c:	af00      	add	r7, sp, #0
 8001a3e:	6078      	str	r0, [r7, #4]
 8001a40:	6039      	str	r1, [r7, #0]
	Symbol &variable = Variable_handler::get_instance().get_symbol(
 8001a42:	f017 fa09 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 8001a46:	4604      	mov	r4, r0
			*assign->var);
 8001a48:	683b      	ldr	r3, [r7, #0]
 8001a4a:	681a      	ldr	r2, [r3, #0]
 8001a4c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001a50:	4611      	mov	r1, r2
 8001a52:	4618      	mov	r0, r3
 8001a54:	f7ff ff90 	bl	8001978 <_ZN8VariableC1ERKS_>
 8001a58:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001a5c:	4619      	mov	r1, r3
 8001a5e:	4620      	mov	r0, r4
 8001a60:	f017 facf 	bl	8019002 <_ZN16Variable_handler10get_symbolE8Variable>
 8001a64:	66f8      	str	r0, [r7, #108]	; 0x6c
 8001a66:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001a6a:	4618      	mov	r0, r3
 8001a6c:	f014 ff70 	bl	8016950 <_ZN8VariableD1Ev>
	Symbol value = EVALUATE(assign->value);
 8001a70:	f00a fb1c 	bl	800c0ac <_ZN21Expression_calculator12get_instanceEv>
 8001a74:	4601      	mov	r1, r0
 8001a76:	683b      	ldr	r3, [r7, #0]
 8001a78:	685a      	ldr	r2, [r3, #4]
 8001a7a:	f107 0308 	add.w	r3, r7, #8
 8001a7e:	4618      	mov	r0, r3
 8001a80:	f00a fb92 	bl	800c1a8 <_ZN21Expression_calculator8evaluateEP10Expression>

	if (assign->var->index)
 8001a84:	683b      	ldr	r3, [r7, #0]
 8001a86:	681b      	ldr	r3, [r3, #0]
 8001a88:	69db      	ldr	r3, [r3, #28]
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d029      	beq.n	8001ae2 <_ZN8Executor7executeEP10Assignment+0xaa>
	{
		variable.type = SYMBOL_CONTAINER;
 8001a8e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001a90:	2204      	movs	r2, #4
 8001a92:	701a      	strb	r2, [r3, #0]
		int idx = check_index(assign->var->index);
 8001a94:	683b      	ldr	r3, [r7, #0]
 8001a96:	681b      	ldr	r3, [r3, #0]
 8001a98:	69db      	ldr	r3, [r3, #28]
 8001a9a:	4619      	mov	r1, r3
 8001a9c:	6878      	ldr	r0, [r7, #4]
 8001a9e:	f000 f88d 	bl	8001bbc <_ZN8Executor11check_indexEP10Expression>
 8001aa2:	66b8      	str	r0, [r7, #104]	; 0x68
		variable.resize(idx + 1);
 8001aa4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8001aa6:	3301      	adds	r3, #1
 8001aa8:	4619      	mov	r1, r3
 8001aaa:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8001aac:	f016 f92c 	bl	8017d08 <_ZN6Symbol6resizeEi>
		variable[idx] = value;
 8001ab0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001ab4:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8001ab6:	4618      	mov	r0, r3
 8001ab8:	f015 f978 	bl	8016dac <_ZN6SymbolC1Ei>
 8001abc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001ac0:	4619      	mov	r1, r3
 8001ac2:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8001ac4:	f015 f9f8 	bl	8016eb8 <_ZN6SymbolixES_>
 8001ac8:	4602      	mov	r2, r0
 8001aca:	f107 0308 	add.w	r3, r7, #8
 8001ace:	4619      	mov	r1, r3
 8001ad0:	4610      	mov	r0, r2
 8001ad2:	f7ff ff9b 	bl	8001a0c <_ZN6SymbolaSERKS_>
 8001ad6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001ada:	4618      	mov	r0, r3
 8001adc:	f7ff fc5e 	bl	800139c <_ZN6SymbolD1Ev>
 8001ae0:	e005      	b.n	8001aee <_ZN8Executor7executeEP10Assignment+0xb6>
	}
	else
	{
		variable = value;
 8001ae2:	f107 0308 	add.w	r3, r7, #8
 8001ae6:	4619      	mov	r1, r3
 8001ae8:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 8001aea:	f7ff ff8f 	bl	8001a0c <_ZN6SymbolaSERKS_>
	Symbol value = EVALUATE(assign->value);
 8001aee:	f107 0308 	add.w	r3, r7, #8
 8001af2:	4618      	mov	r0, r3
 8001af4:	f7ff fc52 	bl	800139c <_ZN6SymbolD1Ev>
	}
}
 8001af8:	bf00      	nop
 8001afa:	3774      	adds	r7, #116	; 0x74
 8001afc:	46bd      	mov	sp, r7
 8001afe:	bd90      	pop	{r4, r7, pc}

08001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8001b00:	b580      	push	{r7, lr}
 8001b02:	b082      	sub	sp, #8
 8001b04:	af00      	add	r7, sp, #0
 8001b06:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8001b08:	6878      	ldr	r0, [r7, #4]
 8001b0a:	f000 f83b 	bl	8001b84 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8001b0e:	4603      	mov	r3, r0
    }
 8001b10:	4618      	mov	r0, r3
 8001b12:	3708      	adds	r7, #8
 8001b14:	46bd      	mov	sp, r7
 8001b16:	bd80      	pop	{r7, pc}

08001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>:
	}

      constexpr bool valueless_by_exception() const noexcept
      { return !this->_M_valid(); }

      constexpr size_t index() const noexcept
 8001b18:	b480      	push	{r7}
 8001b1a:	b083      	sub	sp, #12
 8001b1c:	af00      	add	r7, sp, #0
 8001b1e:	6078      	str	r0, [r7, #4]
      {
	if (this->_M_index ==
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	7e1b      	ldrb	r3, [r3, #24]
 8001b24:	2bff      	cmp	r3, #255	; 0xff
 8001b26:	d102      	bne.n	8001b2e <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv+0x16>
	    typename _Base::__index_type(variant_npos))
	  return variant_npos;
 8001b28:	f04f 33ff 	mov.w	r3, #4294967295
 8001b2c:	e001      	b.n	8001b32 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv+0x1a>
	return this->_M_index;
 8001b2e:	687b      	ldr	r3, [r7, #4]
 8001b30:	7e1b      	ldrb	r3, [r3, #24]
      }
 8001b32:	4618      	mov	r0, r3
 8001b34:	370c      	adds	r7, #12
 8001b36:	46bd      	mov	sp, r7
 8001b38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b3c:	4770      	bx	lr

08001b3e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8001b3e:	b580      	push	{r7, lr}
 8001b40:	b082      	sub	sp, #8
 8001b42:	af00      	add	r7, sp, #0
 8001b44:	7138      	strb	r0, [r7, #4]
 8001b46:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8001b48:	6838      	ldr	r0, [r7, #0]
 8001b4a:	f001 fa04 	bl	8002f56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8001b4e:	4603      	mov	r3, r0
 8001b50:	4618      	mov	r0, r3
 8001b52:	f001 fa0b 	bl	8002f6c <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8001b56:	4603      	mov	r3, r0
 8001b58:	4618      	mov	r0, r3
 8001b5a:	3708      	adds	r7, #8
 8001b5c:	46bd      	mov	sp, r7
 8001b5e:	bd80      	pop	{r7, pc}

08001b60 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8001b60:	b590      	push	{r4, r7, lr}
 8001b62:	b083      	sub	sp, #12
 8001b64:	af00      	add	r7, sp, #0
 8001b66:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8001b68:	6878      	ldr	r0, [r7, #4]
 8001b6a:	f001 f9e9 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8001b6e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8001b70:	4619      	mov	r1, r3
 8001b72:	4620      	mov	r0, r4
 8001b74:	f7ff ffe3 	bl	8001b3e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8001b78:	4603      	mov	r3, r0
    }
 8001b7a:	4618      	mov	r0, r3
 8001b7c:	370c      	adds	r7, #12
 8001b7e:	46bd      	mov	sp, r7
 8001b80:	bd90      	pop	{r4, r7, pc}
	...

08001b84 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
#undef _VARIANT_RELATION_FUNCTION_TEMPLATE
    };

  template<size_t _Np, typename... _Types>
    constexpr variant_alternative_t<_Np, variant<_Types...>>&
    get(variant<_Types...>& __v)
 8001b84:	b580      	push	{r7, lr}
 8001b86:	b082      	sub	sp, #8
 8001b88:	af00      	add	r7, sp, #0
 8001b8a:	6078      	str	r0, [r7, #4]
    {
      static_assert(_Np < sizeof...(_Types),
		    "The index should be in [0, number of alternatives)");
      if (__v.index() != _Np)
 8001b8c:	6878      	ldr	r0, [r7, #4]
 8001b8e:	f7ff ffc3 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8001b92:	4603      	mov	r3, r0
 8001b94:	2b00      	cmp	r3, #0
 8001b96:	bf14      	ite	ne
 8001b98:	2301      	movne	r3, #1
 8001b9a:	2300      	moveq	r3, #0
 8001b9c:	b2db      	uxtb	r3, r3
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d002      	beq.n	8001ba8 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8001ba2:	4805      	ldr	r0, [pc, #20]	; (8001bb8 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8001ba4:	f7ff fa65 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8001ba8:	6878      	ldr	r0, [r7, #4]
 8001baa:	f7ff ffd9 	bl	8001b60 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8001bae:	4603      	mov	r3, r0
    }
 8001bb0:	4618      	mov	r0, r3
 8001bb2:	3708      	adds	r7, #8
 8001bb4:	46bd      	mov	sp, r7
 8001bb6:	bd80      	pop	{r7, pc}
 8001bb8:	080292e4 	.word	0x080292e4

08001bbc <_ZN8Executor11check_indexEP10Expression>:

int Executor::check_index(Expression *exp)
{
 8001bbc:	b590      	push	{r4, r7, lr}
 8001bbe:	b093      	sub	sp, #76	; 0x4c
 8001bc0:	af00      	add	r7, sp, #0
 8001bc2:	6078      	str	r0, [r7, #4]
 8001bc4:	6039      	str	r1, [r7, #0]
	Symbol idx_symbol = EVALUATE(exp);
 8001bc6:	f00a fa71 	bl	800c0ac <_ZN21Expression_calculator12get_instanceEv>
 8001bca:	4601      	mov	r1, r0
 8001bcc:	f107 0308 	add.w	r3, r7, #8
 8001bd0:	683a      	ldr	r2, [r7, #0]
 8001bd2:	4618      	mov	r0, r3
 8001bd4:	f00a fae8 	bl	800c1a8 <_ZN21Expression_calculator8evaluateEP10Expression>
	int i = std::get<int>(idx_symbol.value);
 8001bd8:	f107 0308 	add.w	r3, r7, #8
 8001bdc:	3304      	adds	r3, #4
 8001bde:	4618      	mov	r0, r3
 8001be0:	f7ff ff8e 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8001be4:	4603      	mov	r3, r0
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	647b      	str	r3, [r7, #68]	; 0x44
	if (i < 0)
 8001bea:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001bec:	2b00      	cmp	r3, #0
 8001bee:	da1b      	bge.n	8001c28 <_ZN8Executor11check_indexEP10Expression+0x6c>
	{
		Transmitter::report_error("index can not be negative");
 8001bf0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	f021 fb63 	bl	80232c0 <_ZNSaIcEC1Ev>
 8001bfa:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8001bfe:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001c02:	490f      	ldr	r1, [pc, #60]	; (8001c40 <_ZN8Executor11check_indexEP10Expression+0x84>)
 8001c04:	4618      	mov	r0, r3
 8001c06:	f000 f8f4 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001c0a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001c0e:	4618      	mov	r0, r3
 8001c10:	f016 fdb8 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8001c14:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001c18:	4618      	mov	r0, r3
 8001c1a:	f021 fde2 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001c1e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001c22:	4618      	mov	r0, r3
 8001c24:	f021 fb4d 	bl	80232c2 <_ZNSaIcED1Ev>
	}
	return i;
 8001c28:	6c7c      	ldr	r4, [r7, #68]	; 0x44
	Symbol idx_symbol = EVALUATE(exp);
 8001c2a:	f107 0308 	add.w	r3, r7, #8
 8001c2e:	4618      	mov	r0, r3
 8001c30:	f7ff fbb4 	bl	800139c <_ZN6SymbolD1Ev>
	return i;
 8001c34:	4623      	mov	r3, r4
}
 8001c36:	4618      	mov	r0, r3
 8001c38:	374c      	adds	r7, #76	; 0x4c
 8001c3a:	46bd      	mov	sp, r7
 8001c3c:	bd90      	pop	{r4, r7, pc}
 8001c3e:	bf00      	nop
 8001c40:	080292f8 	.word	0x080292f8

08001c44 <_ZN8Executor5abortEv>:

void Executor::abort()
{
 8001c44:	b580      	push	{r7, lr}
 8001c46:	b090      	sub	sp, #64	; 0x40
 8001c48:	af00      	add	r7, sp, #0
 8001c4a:	6078      	str	r0, [r7, #4]
	if (p)
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	2b00      	cmp	r3, #0
 8001c52:	d006      	beq.n	8001c62 <_ZN8Executor5abortEv+0x1e>
	{
		execute(p->finish);
 8001c54:	687b      	ldr	r3, [r7, #4]
 8001c56:	681b      	ldr	r3, [r3, #0]
 8001c58:	689b      	ldr	r3, [r3, #8]
 8001c5a:	4619      	mov	r1, r3
 8001c5c:	6878      	ldr	r0, [r7, #4]
 8001c5e:	f7ff fd4f 	bl	8001700 <_ZN8Executor7executeEP4Body>
	}
	Transmitter::send_string("fin\n");
 8001c62:	f107 0320 	add.w	r3, r7, #32
 8001c66:	4618      	mov	r0, r3
 8001c68:	f021 fb2a 	bl	80232c0 <_ZNSaIcEC1Ev>
 8001c6c:	f107 0220 	add.w	r2, r7, #32
 8001c70:	f107 0308 	add.w	r3, r7, #8
 8001c74:	4919      	ldr	r1, [pc, #100]	; (8001cdc <_ZN8Executor5abortEv+0x98>)
 8001c76:	4618      	mov	r0, r3
 8001c78:	f000 f8bb 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001c7c:	f107 0308 	add.w	r3, r7, #8
 8001c80:	4618      	mov	r0, r3
 8001c82:	f016 fe2f 	bl	80188e4 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8001c86:	f107 0308 	add.w	r3, r7, #8
 8001c8a:	4618      	mov	r0, r3
 8001c8c:	f021 fda9 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001c90:	f107 0320 	add.w	r3, r7, #32
 8001c94:	4618      	mov	r0, r3
 8001c96:	f021 fb14 	bl	80232c2 <_ZNSaIcED1Ev>
	Transmitter::report_error("aborted by user");
 8001c9a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001c9e:	4618      	mov	r0, r3
 8001ca0:	f021 fb0e 	bl	80232c0 <_ZNSaIcEC1Ev>
 8001ca4:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8001ca8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001cac:	490c      	ldr	r1, [pc, #48]	; (8001ce0 <_ZN8Executor5abortEv+0x9c>)
 8001cae:	4618      	mov	r0, r3
 8001cb0:	f000 f89f 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8001cb4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001cb8:	4618      	mov	r0, r3
 8001cba:	f016 fd63 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8001cbe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001cc2:	4618      	mov	r0, r3
 8001cc4:	f021 fd8d 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8001cc8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001ccc:	4618      	mov	r0, r3
 8001cce:	f021 faf8 	bl	80232c2 <_ZNSaIcED1Ev>
}
 8001cd2:	bf00      	nop
 8001cd4:	3740      	adds	r7, #64	; 0x40
 8001cd6:	46bd      	mov	sp, r7
 8001cd8:	bd80      	pop	{r7, pc}
 8001cda:	bf00      	nop
 8001cdc:	080292dc 	.word	0x080292dc
 8001ce0:	08029314 	.word	0x08029314

08001ce4 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
 8001ce4:	b480      	push	{r7}
 8001ce6:	b083      	sub	sp, #12
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	6078      	str	r0, [r7, #4]
 8001cec:	6039      	str	r1, [r7, #0]
      { return __c1 == __c2; }
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	781a      	ldrb	r2, [r3, #0]
 8001cf2:	683b      	ldr	r3, [r7, #0]
 8001cf4:	781b      	ldrb	r3, [r3, #0]
 8001cf6:	429a      	cmp	r2, r3
 8001cf8:	bf0c      	ite	eq
 8001cfa:	2301      	moveq	r3, #1
 8001cfc:	2300      	movne	r3, #0
 8001cfe:	b2db      	uxtb	r3, r3
 8001d00:	4618      	mov	r0, r3
 8001d02:	370c      	adds	r7, #12
 8001d04:	46bd      	mov	sp, r7
 8001d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d0a:	4770      	bx	lr

08001d0c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
 8001d0c:	b580      	push	{r7, lr}
 8001d0e:	b084      	sub	sp, #16
 8001d10:	af00      	add	r7, sp, #0
 8001d12:	6078      	str	r0, [r7, #4]
      std::size_t __i = 0;
 8001d14:	2300      	movs	r3, #0
 8001d16:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 8001d18:	687a      	ldr	r2, [r7, #4]
 8001d1a:	68fb      	ldr	r3, [r7, #12]
 8001d1c:	4413      	add	r3, r2
 8001d1e:	2200      	movs	r2, #0
 8001d20:	72fa      	strb	r2, [r7, #11]
 8001d22:	f107 020b 	add.w	r2, r7, #11
 8001d26:	4611      	mov	r1, r2
 8001d28:	4618      	mov	r0, r3
 8001d2a:	f7ff ffdb 	bl	8001ce4 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
 8001d2e:	4603      	mov	r3, r0
 8001d30:	f083 0301 	eor.w	r3, r3, #1
 8001d34:	b2db      	uxtb	r3, r3
 8001d36:	2b00      	cmp	r3, #0
 8001d38:	d003      	beq.n	8001d42 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x36>
        ++__i;
 8001d3a:	68fb      	ldr	r3, [r7, #12]
 8001d3c:	3301      	adds	r3, #1
 8001d3e:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 8001d40:	e7ea      	b.n	8001d18 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0xc>
      return __i;
 8001d42:	68fb      	ldr	r3, [r7, #12]
    }
 8001d44:	4618      	mov	r0, r3
 8001d46:	3710      	adds	r7, #16
 8001d48:	46bd      	mov	sp, r7
 8001d4a:	bd80      	pop	{r7, pc}

08001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
 8001d4c:	b580      	push	{r7, lr}
 8001d4e:	b082      	sub	sp, #8
 8001d50:	af00      	add	r7, sp, #0
 8001d52:	6078      	str	r0, [r7, #4]
 8001d54:	6878      	ldr	r0, [r7, #4]
 8001d56:	f001 f923 	bl	8002fa0 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	4618      	mov	r0, r3
 8001d5e:	3708      	adds	r7, #8
 8001d60:	46bd      	mov	sp, r7
 8001d62:	bd80      	pop	{r7, pc}

08001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

      ~allocator() _GLIBCXX_NOTHROW { }
 8001d64:	b580      	push	{r7, lr}
 8001d66:	b082      	sub	sp, #8
 8001d68:	af00      	add	r7, sp, #0
 8001d6a:	6078      	str	r0, [r7, #4]
 8001d6c:	6878      	ldr	r0, [r7, #4]
 8001d6e:	f001 f922 	bl	8002fb6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>
 8001d72:	687b      	ldr	r3, [r7, #4]
 8001d74:	4618      	mov	r0, r3
 8001d76:	3708      	adds	r7, #8
 8001d78:	46bd      	mov	sp, r7
 8001d7a:	bd80      	pop	{r7, pc}

08001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
       *  Create a %map consisting of copies of the elements in the
       *  initializer_list @a __l.
       *  This is linear in N if the range is already sorted, and NlogN
       *  otherwise (where N is @a __l.size()).
       */
      map(initializer_list<value_type> __l,
 8001d7c:	b5b0      	push	{r4, r5, r7, lr}
 8001d7e:	b086      	sub	sp, #24
 8001d80:	af00      	add	r7, sp, #0
 8001d82:	60f8      	str	r0, [r7, #12]
 8001d84:	1d38      	adds	r0, r7, #4
 8001d86:	e880 0006 	stmia.w	r0, {r1, r2}
 8001d8a:	603b      	str	r3, [r7, #0]
	  const _Compare& __comp = _Compare(),
	  const allocator_type& __a = allocator_type())
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001d8c:	68fc      	ldr	r4, [r7, #12]
 8001d8e:	f107 0314 	add.w	r3, r7, #20
 8001d92:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001d94:	4618      	mov	r0, r3
 8001d96:	f001 f919 	bl	8002fcc <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>
 8001d9a:	f107 0314 	add.w	r3, r7, #20
 8001d9e:	461a      	mov	r2, r3
 8001da0:	6839      	ldr	r1, [r7, #0]
 8001da2:	4620      	mov	r0, r4
 8001da4:	f001 f92c 	bl	8003000 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001da8:	f107 0314 	add.w	r3, r7, #20
 8001dac:	4618      	mov	r0, r3
 8001dae:	f7ff ffd9 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001db2:	68fc      	ldr	r4, [r7, #12]
 8001db4:	1d3b      	adds	r3, r7, #4
 8001db6:	4618      	mov	r0, r3
 8001db8:	f001 f955 	bl	8003066 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8001dbc:	4605      	mov	r5, r0
 8001dbe:	1d3b      	adds	r3, r7, #4
 8001dc0:	4618      	mov	r0, r3
 8001dc2:	f001 f95c 	bl	800307e <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>
 8001dc6:	4603      	mov	r3, r0
 8001dc8:	461a      	mov	r2, r3
 8001dca:	4629      	mov	r1, r5
 8001dcc:	4620      	mov	r0, r4
 8001dce:	f001 f968 	bl	80030a2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001dd2:	68fb      	ldr	r3, [r7, #12]
 8001dd4:	4618      	mov	r0, r3
 8001dd6:	3718      	adds	r7, #24
 8001dd8:	46bd      	mov	sp, r7
 8001dda:	bdb0      	pop	{r4, r5, r7, pc}

08001ddc <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001ddc:	b480      	push	{r7}
 8001dde:	b083      	sub	sp, #12
 8001de0:	af00      	add	r7, sp, #0
 8001de2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	4618      	mov	r0, r3
 8001de8:	370c      	adds	r7, #12
 8001dea:	46bd      	mov	sp, r7
 8001dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001df0:	4770      	bx	lr

08001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
#if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 8001df2:	b590      	push	{r4, r7, lr}
 8001df4:	b085      	sub	sp, #20
 8001df6:	af00      	add	r7, sp, #0
 8001df8:	60f8      	str	r0, [r7, #12]
 8001dfa:	60b9      	str	r1, [r7, #8]
 8001dfc:	607a      	str	r2, [r7, #4]
      : _M_dataplus(_M_local_data(), __a)
 8001dfe:	68fc      	ldr	r4, [r7, #12]
 8001e00:	68f8      	ldr	r0, [r7, #12]
 8001e02:	f021 fbdd 	bl	80235c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 8001e06:	4603      	mov	r3, r0
 8001e08:	687a      	ldr	r2, [r7, #4]
 8001e0a:	4619      	mov	r1, r3
 8001e0c:	4620      	mov	r0, r4
 8001e0e:	f021 feb5 	bl	8023b7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
      { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 8001e12:	68bb      	ldr	r3, [r7, #8]
 8001e14:	2b00      	cmp	r3, #0
 8001e16:	d006      	beq.n	8001e26 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x34>
 8001e18:	68b8      	ldr	r0, [r7, #8]
 8001e1a:	f7ff f907 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 8001e1e:	4602      	mov	r2, r0
 8001e20:	68bb      	ldr	r3, [r7, #8]
 8001e22:	4413      	add	r3, r2
 8001e24:	e001      	b.n	8001e2a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x38>
 8001e26:	68bb      	ldr	r3, [r7, #8]
 8001e28:	3b01      	subs	r3, #1
 8001e2a:	461a      	mov	r2, r3
 8001e2c:	68b9      	ldr	r1, [r7, #8]
 8001e2e:	68f8      	ldr	r0, [r7, #12]
 8001e30:	f001 f8a7 	bl	8002f82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>
 8001e34:	68fb      	ldr	r3, [r7, #12]
 8001e36:	4618      	mov	r0, r3
 8001e38:	3714      	adds	r7, #20
 8001e3a:	46bd      	mov	sp, r7
 8001e3c:	bd90      	pop	{r4, r7, pc}

08001e3e <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001e3e:	b480      	push	{r7}
 8001e40:	b083      	sub	sp, #12
 8001e42:	af00      	add	r7, sp, #0
 8001e44:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	4618      	mov	r0, r3
 8001e4a:	370c      	adds	r7, #12
 8001e4c:	46bd      	mov	sp, r7
 8001e4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e52:	4770      	bx	lr

08001e54 <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001e54:	b480      	push	{r7}
 8001e56:	b083      	sub	sp, #12
 8001e58:	af00      	add	r7, sp, #0
 8001e5a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001e5c:	687b      	ldr	r3, [r7, #4]
 8001e5e:	4618      	mov	r0, r3
 8001e60:	370c      	adds	r7, #12
 8001e62:	46bd      	mov	sp, r7
 8001e64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e68:	4770      	bx	lr

08001e6a <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001e6a:	b480      	push	{r7}
 8001e6c:	b083      	sub	sp, #12
 8001e6e:	af00      	add	r7, sp, #0
 8001e70:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	4618      	mov	r0, r3
 8001e76:	370c      	adds	r7, #12
 8001e78:	46bd      	mov	sp, r7
 8001e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e7e:	4770      	bx	lr

08001e80 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001e80:	b480      	push	{r7}
 8001e82:	b083      	sub	sp, #12
 8001e84:	af00      	add	r7, sp, #0
 8001e86:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	4618      	mov	r0, r3
 8001e8c:	370c      	adds	r7, #12
 8001e8e:	46bd      	mov	sp, r7
 8001e90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e94:	4770      	bx	lr

08001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8001e96:	b580      	push	{r7, lr}
 8001e98:	b082      	sub	sp, #8
 8001e9a:	af00      	add	r7, sp, #0
 8001e9c:	6078      	str	r0, [r7, #4]
 8001e9e:	6878      	ldr	r0, [r7, #4]
 8001ea0:	f001 f92b 	bl	80030fa <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	4618      	mov	r0, r3
 8001ea8:	3708      	adds	r7, #8
 8001eaa:	46bd      	mov	sp, r7
 8001eac:	bd80      	pop	{r7, pc}

08001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001eae:	b580      	push	{r7, lr}
 8001eb0:	b082      	sub	sp, #8
 8001eb2:	af00      	add	r7, sp, #0
 8001eb4:	6078      	str	r0, [r7, #4]
 8001eb6:	6878      	ldr	r0, [r7, #4]
 8001eb8:	f001 f92a 	bl	8003110 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	4618      	mov	r0, r3
 8001ec0:	3708      	adds	r7, #8
 8001ec2:	46bd      	mov	sp, r7
 8001ec4:	bd80      	pop	{r7, pc}

08001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>:
      map(initializer_list<value_type> __l,
 8001ec6:	b5b0      	push	{r4, r5, r7, lr}
 8001ec8:	b086      	sub	sp, #24
 8001eca:	af00      	add	r7, sp, #0
 8001ecc:	60f8      	str	r0, [r7, #12]
 8001ece:	1d38      	adds	r0, r7, #4
 8001ed0:	e880 0006 	stmia.w	r0, {r1, r2}
 8001ed4:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001ed6:	68fc      	ldr	r4, [r7, #12]
 8001ed8:	f107 0314 	add.w	r3, r7, #20
 8001edc:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001ede:	4618      	mov	r0, r3
 8001ee0:	f001 f921 	bl	8003126 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>
 8001ee4:	f107 0314 	add.w	r3, r7, #20
 8001ee8:	461a      	mov	r2, r3
 8001eea:	6839      	ldr	r1, [r7, #0]
 8001eec:	4620      	mov	r0, r4
 8001eee:	f001 f934 	bl	800315a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>
 8001ef2:	f107 0314 	add.w	r3, r7, #20
 8001ef6:	4618      	mov	r0, r3
 8001ef8:	f7ff ffd9 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001efc:	68fc      	ldr	r4, [r7, #12]
 8001efe:	1d3b      	adds	r3, r7, #4
 8001f00:	4618      	mov	r0, r3
 8001f02:	f001 f95d 	bl	80031c0 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 8001f06:	4605      	mov	r5, r0
 8001f08:	1d3b      	adds	r3, r7, #4
 8001f0a:	4618      	mov	r0, r3
 8001f0c:	f001 f964 	bl	80031d8 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>
 8001f10:	4603      	mov	r3, r0
 8001f12:	461a      	mov	r2, r3
 8001f14:	4629      	mov	r1, r5
 8001f16:	4620      	mov	r0, r4
 8001f18:	f001 f973 	bl	8003202 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>
 8001f1c:	68fb      	ldr	r3, [r7, #12]
 8001f1e:	4618      	mov	r0, r3
 8001f20:	3718      	adds	r7, #24
 8001f22:	46bd      	mov	sp, r7
 8001f24:	bdb0      	pop	{r4, r5, r7, pc}

08001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8001f26:	b580      	push	{r7, lr}
 8001f28:	b082      	sub	sp, #8
 8001f2a:	af00      	add	r7, sp, #0
 8001f2c:	6078      	str	r0, [r7, #4]
 8001f2e:	6878      	ldr	r0, [r7, #4]
 8001f30:	f001 f993 	bl	800325a <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	4618      	mov	r0, r3
 8001f38:	3708      	adds	r7, #8
 8001f3a:	46bd      	mov	sp, r7
 8001f3c:	bd80      	pop	{r7, pc}

08001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001f3e:	b580      	push	{r7, lr}
 8001f40:	b082      	sub	sp, #8
 8001f42:	af00      	add	r7, sp, #0
 8001f44:	6078      	str	r0, [r7, #4]
 8001f46:	6878      	ldr	r0, [r7, #4]
 8001f48:	f001 f992 	bl	8003270 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	4618      	mov	r0, r3
 8001f50:	3708      	adds	r7, #8
 8001f52:	46bd      	mov	sp, r7
 8001f54:	bd80      	pop	{r7, pc}

08001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
      map(initializer_list<value_type> __l,
 8001f56:	b5b0      	push	{r4, r5, r7, lr}
 8001f58:	b086      	sub	sp, #24
 8001f5a:	af00      	add	r7, sp, #0
 8001f5c:	60f8      	str	r0, [r7, #12]
 8001f5e:	1d38      	adds	r0, r7, #4
 8001f60:	e880 0006 	stmia.w	r0, {r1, r2}
 8001f64:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001f66:	68fc      	ldr	r4, [r7, #12]
 8001f68:	f107 0314 	add.w	r3, r7, #20
 8001f6c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001f6e:	4618      	mov	r0, r3
 8001f70:	f001 f989 	bl	8003286 <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>
 8001f74:	f107 0314 	add.w	r3, r7, #20
 8001f78:	461a      	mov	r2, r3
 8001f7a:	6839      	ldr	r1, [r7, #0]
 8001f7c:	4620      	mov	r0, r4
 8001f7e:	f001 f99c 	bl	80032ba <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001f82:	f107 0314 	add.w	r3, r7, #20
 8001f86:	4618      	mov	r0, r3
 8001f88:	f7ff ffd9 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001f8c:	68fc      	ldr	r4, [r7, #12]
 8001f8e:	1d3b      	adds	r3, r7, #4
 8001f90:	4618      	mov	r0, r3
 8001f92:	f001 f9c5 	bl	8003320 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 8001f96:	4605      	mov	r5, r0
 8001f98:	1d3b      	adds	r3, r7, #4
 8001f9a:	4618      	mov	r0, r3
 8001f9c:	f001 f9cc 	bl	8003338 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>
 8001fa0:	4603      	mov	r3, r0
 8001fa2:	461a      	mov	r2, r3
 8001fa4:	4629      	mov	r1, r5
 8001fa6:	4620      	mov	r0, r4
 8001fa8:	f001 f9da 	bl	8003360 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001fac:	68fb      	ldr	r3, [r7, #12]
 8001fae:	4618      	mov	r0, r3
 8001fb0:	3718      	adds	r7, #24
 8001fb2:	46bd      	mov	sp, r7
 8001fb4:	bdb0      	pop	{r4, r5, r7, pc}

08001fb6 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEED1Ev>:
      ~_Variant_storage()
 8001fb6:	b580      	push	{r7, lr}
 8001fb8:	b082      	sub	sp, #8
 8001fba:	af00      	add	r7, sp, #0
 8001fbc:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8001fbe:	6878      	ldr	r0, [r7, #4]
 8001fc0:	f001 f9fa 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	4618      	mov	r0, r3
 8001fc8:	3708      	adds	r7, #8
 8001fca:	46bd      	mov	sp, r7
 8001fcc:	bd80      	pop	{r7, pc}

08001fce <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ERKSC_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 8001fce:	b580      	push	{r7, lr}
 8001fd0:	b082      	sub	sp, #8
 8001fd2:	af00      	add	r7, sp, #0
 8001fd4:	6078      	str	r0, [r7, #4]
 8001fd6:	6039      	str	r1, [r7, #0]
      {
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	4618      	mov	r0, r3
 8001fdc:	f001 fa07 	bl	80033ee <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 8001fe0:	6839      	ldr	r1, [r7, #0]
 8001fe2:	6878      	ldr	r0, [r7, #4]
 8001fe4:	f001 fc04 	bl	80037f0 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_>
      }
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	4618      	mov	r0, r3
 8001fec:	3708      	adds	r7, #8
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	bd80      	pop	{r7, pc}

08001ff2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8001ff2:	b480      	push	{r7}
 8001ff4:	b083      	sub	sp, #12
 8001ff6:	af00      	add	r7, sp, #0
 8001ff8:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8001ffa:	687b      	ldr	r3, [r7, #4]
    }
 8001ffc:	4618      	mov	r0, r3
 8001ffe:	370c      	adds	r7, #12
 8002000:	46bd      	mov	sp, r7
 8002002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002006:	4770      	bx	lr

08002008 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002008:	b580      	push	{r7, lr}
 800200a:	b082      	sub	sp, #8
 800200c:	af00      	add	r7, sp, #0
 800200e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002010:	6878      	ldr	r0, [r7, #4]
 8002012:	f000 ff95 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002016:	4603      	mov	r3, r0
 8002018:	4618      	mov	r0, r3
 800201a:	f7ff fda1 	bl	8001b60 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800201e:	4603      	mov	r3, r0
	}
 8002020:	4618      	mov	r0, r3
 8002022:	3708      	adds	r7, #8
 8002024:	46bd      	mov	sp, r7
 8002026:	bd80      	pop	{r7, pc}

08002028 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002028:	b5b0      	push	{r4, r5, r7, lr}
 800202a:	b084      	sub	sp, #16
 800202c:	af00      	add	r7, sp, #0
 800202e:	6078      	str	r0, [r7, #4]
 8002030:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002032:	6878      	ldr	r0, [r7, #4]
 8002034:	f001 fbf9 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002038:	4604      	mov	r4, r0
 800203a:	6838      	ldr	r0, [r7, #0]
 800203c:	f000 ff80 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002040:	4603      	mov	r3, r0
 8002042:	4618      	mov	r0, r3
 8002044:	f7ff ffe0 	bl	8002008 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESO_EEDcOSJ_>
 8002048:	4601      	mov	r1, r0
 800204a:	f107 030c 	add.w	r3, r7, #12
 800204e:	461a      	mov	r2, r3
 8002050:	4620      	mov	r0, r4
 8002052:	f001 fbf5 	bl	8003840 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 8002056:	462b      	mov	r3, r5
      }
 8002058:	4618      	mov	r0, r3
 800205a:	3710      	adds	r7, #16
 800205c:	46bd      	mov	sp, r7
 800205e:	bdb0      	pop	{r4, r5, r7, pc}

08002060 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002060:	b5b0      	push	{r4, r5, r7, lr}
 8002062:	b082      	sub	sp, #8
 8002064:	af00      	add	r7, sp, #0
 8002066:	6078      	str	r0, [r7, #4]
 8002068:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800206a:	6878      	ldr	r0, [r7, #4]
 800206c:	f001 fbdd 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002070:	4604      	mov	r4, r0
 8002072:	6838      	ldr	r0, [r7, #0]
 8002074:	f000 ff64 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002078:	4603      	mov	r3, r0
 800207a:	4619      	mov	r1, r3
 800207c:	4620      	mov	r0, r4
 800207e:	f7ff ffd3 	bl	8002028 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8002082:	462b      	mov	r3, r5
      }
 8002084:	4618      	mov	r0, r3
 8002086:	3708      	adds	r7, #8
 8002088:	46bd      	mov	sp, r7
 800208a:	bdb0      	pop	{r4, r5, r7, pc}

0800208c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800208c:	b5b0      	push	{r4, r5, r7, lr}
 800208e:	b082      	sub	sp, #8
 8002090:	af00      	add	r7, sp, #0
 8002092:	6078      	str	r0, [r7, #4]
 8002094:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002096:	6878      	ldr	r0, [r7, #4]
 8002098:	f001 fbc7 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800209c:	4604      	mov	r4, r0
 800209e:	6838      	ldr	r0, [r7, #0]
 80020a0:	f000 ff4e 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80020a4:	4603      	mov	r3, r0
 80020a6:	4619      	mov	r1, r3
 80020a8:	4620      	mov	r0, r4
 80020aa:	f7ff ffd9 	bl	8002060 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80020ae:	462b      	mov	r3, r5
      }
 80020b0:	4618      	mov	r0, r3
 80020b2:	3708      	adds	r7, #8
 80020b4:	46bd      	mov	sp, r7
 80020b6:	bdb0      	pop	{r4, r5, r7, pc}

080020b8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80020b8:	b580      	push	{r7, lr}
 80020ba:	b082      	sub	sp, #8
 80020bc:	af00      	add	r7, sp, #0
 80020be:	7138      	strb	r0, [r7, #4]
 80020c0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80020c2:	6838      	ldr	r0, [r7, #0]
 80020c4:	f001 fbda 	bl	800387c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80020c8:	4603      	mov	r3, r0
 80020ca:	4618      	mov	r0, r3
 80020cc:	f001 fbe1 	bl	8003892 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 80020d0:	4603      	mov	r3, r0
 80020d2:	4618      	mov	r0, r3
 80020d4:	3708      	adds	r7, #8
 80020d6:	46bd      	mov	sp, r7
 80020d8:	bd80      	pop	{r7, pc}

080020da <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80020da:	b590      	push	{r4, r7, lr}
 80020dc:	b083      	sub	sp, #12
 80020de:	af00      	add	r7, sp, #0
 80020e0:	7138      	strb	r0, [r7, #4]
 80020e2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80020e4:	6838      	ldr	r0, [r7, #0]
 80020e6:	f000 ff36 	bl	8002f56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80020ea:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80020ec:	4619      	mov	r1, r3
 80020ee:	4620      	mov	r0, r4
 80020f0:	f7ff ffe2 	bl	80020b8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80020f4:	4603      	mov	r3, r0
    }
 80020f6:	4618      	mov	r0, r3
 80020f8:	370c      	adds	r7, #12
 80020fa:	46bd      	mov	sp, r7
 80020fc:	bd90      	pop	{r4, r7, pc}

080020fe <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80020fe:	b590      	push	{r4, r7, lr}
 8002100:	b083      	sub	sp, #12
 8002102:	af00      	add	r7, sp, #0
 8002104:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002106:	6878      	ldr	r0, [r7, #4]
 8002108:	f000 ff1a 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800210c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800210e:	4619      	mov	r1, r3
 8002110:	4620      	mov	r0, r4
 8002112:	f7ff ffe2 	bl	80020da <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002116:	4603      	mov	r3, r0
    }
 8002118:	4618      	mov	r0, r3
 800211a:	370c      	adds	r7, #12
 800211c:	46bd      	mov	sp, r7
 800211e:	bd90      	pop	{r4, r7, pc}

08002120 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002120:	b580      	push	{r7, lr}
 8002122:	b082      	sub	sp, #8
 8002124:	af00      	add	r7, sp, #0
 8002126:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002128:	6878      	ldr	r0, [r7, #4]
 800212a:	f000 ff09 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800212e:	4603      	mov	r3, r0
 8002130:	4618      	mov	r0, r3
 8002132:	f7ff ffe4 	bl	80020fe <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002136:	4603      	mov	r3, r0
	}
 8002138:	4618      	mov	r0, r3
 800213a:	3708      	adds	r7, #8
 800213c:	46bd      	mov	sp, r7
 800213e:	bd80      	pop	{r7, pc}

08002140 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002140:	b5b0      	push	{r4, r5, r7, lr}
 8002142:	b084      	sub	sp, #16
 8002144:	af00      	add	r7, sp, #0
 8002146:	6078      	str	r0, [r7, #4]
 8002148:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800214a:	6878      	ldr	r0, [r7, #4]
 800214c:	f001 fb6d 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002150:	4604      	mov	r4, r0
 8002152:	6838      	ldr	r0, [r7, #0]
 8002154:	f000 fef4 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002158:	4603      	mov	r3, r0
 800215a:	4618      	mov	r0, r3
 800215c:	f7ff ffe0 	bl	8002120 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESO_EEDcOSJ_>
 8002160:	4601      	mov	r1, r0
 8002162:	f107 030c 	add.w	r3, r7, #12
 8002166:	461a      	mov	r2, r3
 8002168:	4620      	mov	r0, r4
 800216a:	f001 fb9d 	bl	80038a8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 800216e:	462b      	mov	r3, r5
      }
 8002170:	4618      	mov	r0, r3
 8002172:	3710      	adds	r7, #16
 8002174:	46bd      	mov	sp, r7
 8002176:	bdb0      	pop	{r4, r5, r7, pc}

08002178 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002178:	b5b0      	push	{r4, r5, r7, lr}
 800217a:	b082      	sub	sp, #8
 800217c:	af00      	add	r7, sp, #0
 800217e:	6078      	str	r0, [r7, #4]
 8002180:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002182:	6878      	ldr	r0, [r7, #4]
 8002184:	f001 fb51 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002188:	4604      	mov	r4, r0
 800218a:	6838      	ldr	r0, [r7, #0]
 800218c:	f000 fed8 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002190:	4603      	mov	r3, r0
 8002192:	4619      	mov	r1, r3
 8002194:	4620      	mov	r0, r4
 8002196:	f7ff ffd3 	bl	8002140 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 800219a:	462b      	mov	r3, r5
      }
 800219c:	4618      	mov	r0, r3
 800219e:	3708      	adds	r7, #8
 80021a0:	46bd      	mov	sp, r7
 80021a2:	bdb0      	pop	{r4, r5, r7, pc}

080021a4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80021a4:	b5b0      	push	{r4, r5, r7, lr}
 80021a6:	b082      	sub	sp, #8
 80021a8:	af00      	add	r7, sp, #0
 80021aa:	6078      	str	r0, [r7, #4]
 80021ac:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80021ae:	6878      	ldr	r0, [r7, #4]
 80021b0:	f001 fb3b 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80021b4:	4604      	mov	r4, r0
 80021b6:	6838      	ldr	r0, [r7, #0]
 80021b8:	f000 fec2 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80021bc:	4603      	mov	r3, r0
 80021be:	4619      	mov	r1, r3
 80021c0:	4620      	mov	r0, r4
 80021c2:	f7ff ffd9 	bl	8002178 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80021c6:	462b      	mov	r3, r5
      }
 80021c8:	4618      	mov	r0, r3
 80021ca:	3708      	adds	r7, #8
 80021cc:	46bd      	mov	sp, r7
 80021ce:	bdb0      	pop	{r4, r5, r7, pc}

080021d0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80021d0:	b580      	push	{r7, lr}
 80021d2:	b082      	sub	sp, #8
 80021d4:	af00      	add	r7, sp, #0
 80021d6:	7138      	strb	r0, [r7, #4]
 80021d8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80021da:	6838      	ldr	r0, [r7, #0]
 80021dc:	f001 fb82 	bl	80038e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80021e0:	4603      	mov	r3, r0
 80021e2:	4618      	mov	r0, r3
 80021e4:	f001 fb89 	bl	80038fa <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 80021e8:	4603      	mov	r3, r0
 80021ea:	4618      	mov	r0, r3
 80021ec:	3708      	adds	r7, #8
 80021ee:	46bd      	mov	sp, r7
 80021f0:	bd80      	pop	{r7, pc}

080021f2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80021f2:	b590      	push	{r4, r7, lr}
 80021f4:	b083      	sub	sp, #12
 80021f6:	af00      	add	r7, sp, #0
 80021f8:	7138      	strb	r0, [r7, #4]
 80021fa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80021fc:	6838      	ldr	r0, [r7, #0]
 80021fe:	f001 fb3d 	bl	800387c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002202:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002204:	4619      	mov	r1, r3
 8002206:	4620      	mov	r0, r4
 8002208:	f7ff ffe2 	bl	80021d0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800220c:	4603      	mov	r3, r0
    }
 800220e:	4618      	mov	r0, r3
 8002210:	370c      	adds	r7, #12
 8002212:	46bd      	mov	sp, r7
 8002214:	bd90      	pop	{r4, r7, pc}

08002216 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002216:	b590      	push	{r4, r7, lr}
 8002218:	b083      	sub	sp, #12
 800221a:	af00      	add	r7, sp, #0
 800221c:	7138      	strb	r0, [r7, #4]
 800221e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002220:	6838      	ldr	r0, [r7, #0]
 8002222:	f000 fe98 	bl	8002f56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002226:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002228:	4619      	mov	r1, r3
 800222a:	4620      	mov	r0, r4
 800222c:	f7ff ffe1 	bl	80021f2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002230:	4603      	mov	r3, r0
    }
 8002232:	4618      	mov	r0, r3
 8002234:	370c      	adds	r7, #12
 8002236:	46bd      	mov	sp, r7
 8002238:	bd90      	pop	{r4, r7, pc}

0800223a <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800223a:	b590      	push	{r4, r7, lr}
 800223c:	b083      	sub	sp, #12
 800223e:	af00      	add	r7, sp, #0
 8002240:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002242:	6878      	ldr	r0, [r7, #4]
 8002244:	f000 fe7c 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002248:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800224a:	4619      	mov	r1, r3
 800224c:	4620      	mov	r0, r4
 800224e:	f7ff ffe2 	bl	8002216 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002252:	4603      	mov	r3, r0
    }
 8002254:	4618      	mov	r0, r3
 8002256:	370c      	adds	r7, #12
 8002258:	46bd      	mov	sp, r7
 800225a:	bd90      	pop	{r4, r7, pc}

0800225c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800225c:	b580      	push	{r7, lr}
 800225e:	b082      	sub	sp, #8
 8002260:	af00      	add	r7, sp, #0
 8002262:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002264:	6878      	ldr	r0, [r7, #4]
 8002266:	f000 fe6b 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800226a:	4603      	mov	r3, r0
 800226c:	4618      	mov	r0, r3
 800226e:	f7ff ffe4 	bl	800223a <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002272:	4603      	mov	r3, r0
	}
 8002274:	4618      	mov	r0, r3
 8002276:	3708      	adds	r7, #8
 8002278:	46bd      	mov	sp, r7
 800227a:	bd80      	pop	{r7, pc}

0800227c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800227c:	b5b0      	push	{r4, r5, r7, lr}
 800227e:	b084      	sub	sp, #16
 8002280:	af00      	add	r7, sp, #0
 8002282:	6078      	str	r0, [r7, #4]
 8002284:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002286:	6878      	ldr	r0, [r7, #4]
 8002288:	f001 facf 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 800228c:	4604      	mov	r4, r0
 800228e:	6838      	ldr	r0, [r7, #0]
 8002290:	f000 fe56 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002294:	4603      	mov	r3, r0
 8002296:	4618      	mov	r0, r3
 8002298:	f7ff ffe0 	bl	800225c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESO_EEDcOSJ_>
 800229c:	4601      	mov	r1, r0
 800229e:	f107 030c 	add.w	r3, r7, #12
 80022a2:	461a      	mov	r2, r3
 80022a4:	4620      	mov	r0, r4
 80022a6:	f001 fb33 	bl	8003910 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 80022aa:	462b      	mov	r3, r5
      }
 80022ac:	4618      	mov	r0, r3
 80022ae:	3710      	adds	r7, #16
 80022b0:	46bd      	mov	sp, r7
 80022b2:	bdb0      	pop	{r4, r5, r7, pc}

080022b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80022b4:	b5b0      	push	{r4, r5, r7, lr}
 80022b6:	b082      	sub	sp, #8
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	6078      	str	r0, [r7, #4]
 80022bc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80022be:	6878      	ldr	r0, [r7, #4]
 80022c0:	f001 fab3 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80022c4:	4604      	mov	r4, r0
 80022c6:	6838      	ldr	r0, [r7, #0]
 80022c8:	f000 fe3a 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80022cc:	4603      	mov	r3, r0
 80022ce:	4619      	mov	r1, r3
 80022d0:	4620      	mov	r0, r4
 80022d2:	f7ff ffd3 	bl	800227c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80022d6:	462b      	mov	r3, r5
      }
 80022d8:	4618      	mov	r0, r3
 80022da:	3708      	adds	r7, #8
 80022dc:	46bd      	mov	sp, r7
 80022de:	bdb0      	pop	{r4, r5, r7, pc}

080022e0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80022e0:	b5b0      	push	{r4, r5, r7, lr}
 80022e2:	b082      	sub	sp, #8
 80022e4:	af00      	add	r7, sp, #0
 80022e6:	6078      	str	r0, [r7, #4]
 80022e8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80022ea:	6878      	ldr	r0, [r7, #4]
 80022ec:	f001 fa9d 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80022f0:	4604      	mov	r4, r0
 80022f2:	6838      	ldr	r0, [r7, #0]
 80022f4:	f000 fe24 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80022f8:	4603      	mov	r3, r0
 80022fa:	4619      	mov	r1, r3
 80022fc:	4620      	mov	r0, r4
 80022fe:	f7ff ffd9 	bl	80022b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8002302:	462b      	mov	r3, r5
      }
 8002304:	4618      	mov	r0, r3
 8002306:	3708      	adds	r7, #8
 8002308:	46bd      	mov	sp, r7
 800230a:	bdb0      	pop	{r4, r5, r7, pc}

0800230c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800230c:	b580      	push	{r7, lr}
 800230e:	b082      	sub	sp, #8
 8002310:	af00      	add	r7, sp, #0
 8002312:	7138      	strb	r0, [r7, #4]
 8002314:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002316:	6838      	ldr	r0, [r7, #0]
 8002318:	f001 fb18 	bl	800394c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800231c:	4603      	mov	r3, r0
 800231e:	4618      	mov	r0, r3
 8002320:	f001 fb1f 	bl	8003962 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8002324:	4603      	mov	r3, r0
 8002326:	4618      	mov	r0, r3
 8002328:	3708      	adds	r7, #8
 800232a:	46bd      	mov	sp, r7
 800232c:	bd80      	pop	{r7, pc}

0800232e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800232e:	b590      	push	{r4, r7, lr}
 8002330:	b083      	sub	sp, #12
 8002332:	af00      	add	r7, sp, #0
 8002334:	7138      	strb	r0, [r7, #4]
 8002336:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002338:	6838      	ldr	r0, [r7, #0]
 800233a:	f001 fad3 	bl	80038e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800233e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002340:	4619      	mov	r1, r3
 8002342:	4620      	mov	r0, r4
 8002344:	f7ff ffe2 	bl	800230c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002348:	4603      	mov	r3, r0
    }
 800234a:	4618      	mov	r0, r3
 800234c:	370c      	adds	r7, #12
 800234e:	46bd      	mov	sp, r7
 8002350:	bd90      	pop	{r4, r7, pc}

08002352 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002352:	b590      	push	{r4, r7, lr}
 8002354:	b083      	sub	sp, #12
 8002356:	af00      	add	r7, sp, #0
 8002358:	7138      	strb	r0, [r7, #4]
 800235a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800235c:	6838      	ldr	r0, [r7, #0]
 800235e:	f001 fa8d 	bl	800387c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002362:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002364:	4619      	mov	r1, r3
 8002366:	4620      	mov	r0, r4
 8002368:	f7ff ffe1 	bl	800232e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800236c:	4603      	mov	r3, r0
    }
 800236e:	4618      	mov	r0, r3
 8002370:	370c      	adds	r7, #12
 8002372:	46bd      	mov	sp, r7
 8002374:	bd90      	pop	{r4, r7, pc}

08002376 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002376:	b590      	push	{r4, r7, lr}
 8002378:	b083      	sub	sp, #12
 800237a:	af00      	add	r7, sp, #0
 800237c:	7138      	strb	r0, [r7, #4]
 800237e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002380:	6838      	ldr	r0, [r7, #0]
 8002382:	f000 fde8 	bl	8002f56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8002386:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002388:	4619      	mov	r1, r3
 800238a:	4620      	mov	r0, r4
 800238c:	f7ff ffe1 	bl	8002352 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002390:	4603      	mov	r3, r0
    }
 8002392:	4618      	mov	r0, r3
 8002394:	370c      	adds	r7, #12
 8002396:	46bd      	mov	sp, r7
 8002398:	bd90      	pop	{r4, r7, pc}

0800239a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800239a:	b590      	push	{r4, r7, lr}
 800239c:	b083      	sub	sp, #12
 800239e:	af00      	add	r7, sp, #0
 80023a0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80023a2:	6878      	ldr	r0, [r7, #4]
 80023a4:	f000 fdcc 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80023a8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80023aa:	4619      	mov	r1, r3
 80023ac:	4620      	mov	r0, r4
 80023ae:	f7ff ffe2 	bl	8002376 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80023b2:	4603      	mov	r3, r0
    }
 80023b4:	4618      	mov	r0, r3
 80023b6:	370c      	adds	r7, #12
 80023b8:	46bd      	mov	sp, r7
 80023ba:	bd90      	pop	{r4, r7, pc}

080023bc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80023bc:	b580      	push	{r7, lr}
 80023be:	b082      	sub	sp, #8
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80023c4:	6878      	ldr	r0, [r7, #4]
 80023c6:	f000 fdbb 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80023ca:	4603      	mov	r3, r0
 80023cc:	4618      	mov	r0, r3
 80023ce:	f7ff ffe4 	bl	800239a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80023d2:	4603      	mov	r3, r0
	}
 80023d4:	4618      	mov	r0, r3
 80023d6:	3708      	adds	r7, #8
 80023d8:	46bd      	mov	sp, r7
 80023da:	bd80      	pop	{r7, pc}

080023dc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80023dc:	b5b0      	push	{r4, r5, r7, lr}
 80023de:	b084      	sub	sp, #16
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	6078      	str	r0, [r7, #4]
 80023e4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80023e6:	6878      	ldr	r0, [r7, #4]
 80023e8:	f001 fa1f 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80023ec:	4604      	mov	r4, r0
 80023ee:	6838      	ldr	r0, [r7, #0]
 80023f0:	f000 fda6 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80023f4:	4603      	mov	r3, r0
 80023f6:	4618      	mov	r0, r3
 80023f8:	f7ff ffe0 	bl	80023bc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESO_EEDcOSJ_>
 80023fc:	4601      	mov	r1, r0
 80023fe:	f107 030c 	add.w	r3, r7, #12
 8002402:	461a      	mov	r2, r3
 8002404:	4620      	mov	r0, r4
 8002406:	f001 fab9 	bl	800397c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 800240a:	462b      	mov	r3, r5
      }
 800240c:	4618      	mov	r0, r3
 800240e:	3710      	adds	r7, #16
 8002410:	46bd      	mov	sp, r7
 8002412:	bdb0      	pop	{r4, r5, r7, pc}

08002414 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002414:	b5b0      	push	{r4, r5, r7, lr}
 8002416:	b082      	sub	sp, #8
 8002418:	af00      	add	r7, sp, #0
 800241a:	6078      	str	r0, [r7, #4]
 800241c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800241e:	6878      	ldr	r0, [r7, #4]
 8002420:	f001 fa03 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002424:	4604      	mov	r4, r0
 8002426:	6838      	ldr	r0, [r7, #0]
 8002428:	f000 fd8a 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800242c:	4603      	mov	r3, r0
 800242e:	4619      	mov	r1, r3
 8002430:	4620      	mov	r0, r4
 8002432:	f7ff ffd3 	bl	80023dc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8002436:	462b      	mov	r3, r5
      }
 8002438:	4618      	mov	r0, r3
 800243a:	3708      	adds	r7, #8
 800243c:	46bd      	mov	sp, r7
 800243e:	bdb0      	pop	{r4, r5, r7, pc}

08002440 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002440:	b5b0      	push	{r4, r5, r7, lr}
 8002442:	b082      	sub	sp, #8
 8002444:	af00      	add	r7, sp, #0
 8002446:	6078      	str	r0, [r7, #4]
 8002448:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800244a:	6878      	ldr	r0, [r7, #4]
 800244c:	f001 f9ed 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002450:	4604      	mov	r4, r0
 8002452:	6838      	ldr	r0, [r7, #0]
 8002454:	f000 fd74 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002458:	4603      	mov	r3, r0
 800245a:	4619      	mov	r1, r3
 800245c:	4620      	mov	r0, r4
 800245e:	f7ff ffd9 	bl	8002414 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 8002462:	462b      	mov	r3, r5
      }
 8002464:	4618      	mov	r0, r3
 8002466:	3708      	adds	r7, #8
 8002468:	46bd      	mov	sp, r7
 800246a:	bdb0      	pop	{r4, r5, r7, pc}

0800246c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800246c:	b580      	push	{r7, lr}
 800246e:	b082      	sub	sp, #8
 8002470:	af00      	add	r7, sp, #0
 8002472:	7138      	strb	r0, [r7, #4]
 8002474:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002476:	6838      	ldr	r0, [r7, #0]
 8002478:	f001 fa9e 	bl	80039b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800247c:	4603      	mov	r3, r0
 800247e:	4618      	mov	r0, r3
 8002480:	f001 faa5 	bl	80039ce <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 8002484:	4603      	mov	r3, r0
 8002486:	4618      	mov	r0, r3
 8002488:	3708      	adds	r7, #8
 800248a:	46bd      	mov	sp, r7
 800248c:	bd80      	pop	{r7, pc}

0800248e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800248e:	b590      	push	{r4, r7, lr}
 8002490:	b083      	sub	sp, #12
 8002492:	af00      	add	r7, sp, #0
 8002494:	7138      	strb	r0, [r7, #4]
 8002496:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002498:	6838      	ldr	r0, [r7, #0]
 800249a:	f001 fa57 	bl	800394c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800249e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024a0:	4619      	mov	r1, r3
 80024a2:	4620      	mov	r0, r4
 80024a4:	f7ff ffe2 	bl	800246c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80024a8:	4603      	mov	r3, r0
    }
 80024aa:	4618      	mov	r0, r3
 80024ac:	370c      	adds	r7, #12
 80024ae:	46bd      	mov	sp, r7
 80024b0:	bd90      	pop	{r4, r7, pc}

080024b2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80024b2:	b590      	push	{r4, r7, lr}
 80024b4:	b083      	sub	sp, #12
 80024b6:	af00      	add	r7, sp, #0
 80024b8:	7138      	strb	r0, [r7, #4]
 80024ba:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80024bc:	6838      	ldr	r0, [r7, #0]
 80024be:	f001 fa11 	bl	80038e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80024c2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024c4:	4619      	mov	r1, r3
 80024c6:	4620      	mov	r0, r4
 80024c8:	f7ff ffe1 	bl	800248e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80024cc:	4603      	mov	r3, r0
    }
 80024ce:	4618      	mov	r0, r3
 80024d0:	370c      	adds	r7, #12
 80024d2:	46bd      	mov	sp, r7
 80024d4:	bd90      	pop	{r4, r7, pc}

080024d6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80024d6:	b590      	push	{r4, r7, lr}
 80024d8:	b083      	sub	sp, #12
 80024da:	af00      	add	r7, sp, #0
 80024dc:	7138      	strb	r0, [r7, #4]
 80024de:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80024e0:	6838      	ldr	r0, [r7, #0]
 80024e2:	f001 f9cb 	bl	800387c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80024e6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80024e8:	4619      	mov	r1, r3
 80024ea:	4620      	mov	r0, r4
 80024ec:	f7ff ffe1 	bl	80024b2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80024f0:	4603      	mov	r3, r0
    }
 80024f2:	4618      	mov	r0, r3
 80024f4:	370c      	adds	r7, #12
 80024f6:	46bd      	mov	sp, r7
 80024f8:	bd90      	pop	{r4, r7, pc}

080024fa <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80024fa:	b590      	push	{r4, r7, lr}
 80024fc:	b083      	sub	sp, #12
 80024fe:	af00      	add	r7, sp, #0
 8002500:	7138      	strb	r0, [r7, #4]
 8002502:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002504:	6838      	ldr	r0, [r7, #0]
 8002506:	f000 fd26 	bl	8002f56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800250a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800250c:	4619      	mov	r1, r3
 800250e:	4620      	mov	r0, r4
 8002510:	f7ff ffe1 	bl	80024d6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002514:	4603      	mov	r3, r0
    }
 8002516:	4618      	mov	r0, r3
 8002518:	370c      	adds	r7, #12
 800251a:	46bd      	mov	sp, r7
 800251c:	bd90      	pop	{r4, r7, pc}

0800251e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800251e:	b590      	push	{r4, r7, lr}
 8002520:	b083      	sub	sp, #12
 8002522:	af00      	add	r7, sp, #0
 8002524:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002526:	6878      	ldr	r0, [r7, #4]
 8002528:	f000 fd0a 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800252c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800252e:	4619      	mov	r1, r3
 8002530:	4620      	mov	r0, r4
 8002532:	f7ff ffe2 	bl	80024fa <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002536:	4603      	mov	r3, r0
    }
 8002538:	4618      	mov	r0, r3
 800253a:	370c      	adds	r7, #12
 800253c:	46bd      	mov	sp, r7
 800253e:	bd90      	pop	{r4, r7, pc}

08002540 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002540:	b580      	push	{r7, lr}
 8002542:	b082      	sub	sp, #8
 8002544:	af00      	add	r7, sp, #0
 8002546:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002548:	6878      	ldr	r0, [r7, #4]
 800254a:	f000 fcf9 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800254e:	4603      	mov	r3, r0
 8002550:	4618      	mov	r0, r3
 8002552:	f7ff ffe4 	bl	800251e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002556:	4603      	mov	r3, r0
	}
 8002558:	4618      	mov	r0, r3
 800255a:	3708      	adds	r7, #8
 800255c:	46bd      	mov	sp, r7
 800255e:	bd80      	pop	{r7, pc}

08002560 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002560:	b5b0      	push	{r4, r5, r7, lr}
 8002562:	b084      	sub	sp, #16
 8002564:	af00      	add	r7, sp, #0
 8002566:	6078      	str	r0, [r7, #4]
 8002568:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800256a:	6878      	ldr	r0, [r7, #4]
 800256c:	f001 f95d 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002570:	4604      	mov	r4, r0
 8002572:	6838      	ldr	r0, [r7, #0]
 8002574:	f000 fce4 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002578:	4603      	mov	r3, r0
 800257a:	4618      	mov	r0, r3
 800257c:	f7ff ffe0 	bl	8002540 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESO_EEDcOSJ_>
 8002580:	4601      	mov	r1, r0
 8002582:	f107 030c 	add.w	r3, r7, #12
 8002586:	461a      	mov	r2, r3
 8002588:	4620      	mov	r0, r4
 800258a:	f001 fa2d 	bl	80039e8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>
	      integral_constant<size_t, __indices>()...);
 800258e:	462b      	mov	r3, r5
      }
 8002590:	4618      	mov	r0, r3
 8002592:	3710      	adds	r7, #16
 8002594:	46bd      	mov	sp, r7
 8002596:	bdb0      	pop	{r4, r5, r7, pc}

08002598 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002598:	b5b0      	push	{r4, r5, r7, lr}
 800259a:	b082      	sub	sp, #8
 800259c:	af00      	add	r7, sp, #0
 800259e:	6078      	str	r0, [r7, #4]
 80025a0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80025a2:	6878      	ldr	r0, [r7, #4]
 80025a4:	f001 f941 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80025a8:	4604      	mov	r4, r0
 80025aa:	6838      	ldr	r0, [r7, #0]
 80025ac:	f000 fcc8 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80025b0:	4603      	mov	r3, r0
 80025b2:	4619      	mov	r1, r3
 80025b4:	4620      	mov	r0, r4
 80025b6:	f7ff ffd3 	bl	8002560 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80025ba:	462b      	mov	r3, r5
      }
 80025bc:	4618      	mov	r0, r3
 80025be:	3708      	adds	r7, #8
 80025c0:	46bd      	mov	sp, r7
 80025c2:	bdb0      	pop	{r4, r5, r7, pc}

080025c4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESL_SO_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80025c4:	b5b0      	push	{r4, r5, r7, lr}
 80025c6:	b082      	sub	sp, #8
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	6078      	str	r0, [r7, #4]
 80025cc:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80025ce:	6878      	ldr	r0, [r7, #4]
 80025d0:	f001 f92b 	bl	800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80025d4:	4604      	mov	r4, r0
 80025d6:	6838      	ldr	r0, [r7, #0]
 80025d8:	f000 fcb2 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80025dc:	4603      	mov	r3, r0
 80025de:	4619      	mov	r1, r3
 80025e0:	4620      	mov	r0, r4
 80025e2:	f7ff ffd9 	bl	8002598 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSEOSF_EUlOT_T0_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSO_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESL_SO_>
				   std::forward<_Variants>(__vars)...);
 80025e6:	462b      	mov	r3, r5
      }
 80025e8:	4618      	mov	r0, r3
 80025ea:	3708      	adds	r7, #8
 80025ec:	46bd      	mov	sp, r7
 80025ee:	bdb0      	pop	{r4, r5, r7, pc}

080025f0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSP_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 80025f0:	b580      	push	{r7, lr}
 80025f2:	b082      	sub	sp, #8
 80025f4:	af00      	add	r7, sp, #0
 80025f6:	6078      	str	r0, [r7, #4]
 80025f8:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 80025fa:	683b      	ldr	r3, [r7, #0]
 80025fc:	009b      	lsls	r3, r3, #2
 80025fe:	687a      	ldr	r2, [r7, #4]
 8002600:	4413      	add	r3, r2
 8002602:	4618      	mov	r0, r3
 8002604:	f001 fa0e 	bl	8003a24 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8002608:	4603      	mov	r3, r0
	}
 800260a:	4618      	mov	r0, r3
 800260c:	3708      	adds	r7, #8
 800260e:	46bd      	mov	sp, r7
 8002610:	bd80      	pop	{r7, pc}
	...

08002614 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:

  template<bool __use_index,
	   bool __same_return_types,
	   typename _Visitor, typename... _Variants>
    constexpr decltype(auto)
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8002614:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002616:	b085      	sub	sp, #20
 8002618:	af00      	add	r7, sp, #0
 800261a:	6078      	str	r0, [r7, #4]
 800261c:	6039      	str	r1, [r7, #0]

      using _Result_type = typename std::conditional_t<__use_index,
	__detail::__variant::__variant_idx_cookie,
	_Deduced_type>::type;

      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800261e:	4b0f      	ldr	r3, [pc, #60]	; (800265c <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8002620:	60fb      	str	r3, [r7, #12]
	__same_return_types,
	_Result_type, _Visitor&&, _Variants&&...>::_S_vtable;

      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8002622:	6838      	ldr	r0, [r7, #0]
 8002624:	f7ff fa78 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8002628:	4603      	mov	r3, r0
 800262a:	4619      	mov	r1, r3
 800262c:	68f8      	ldr	r0, [r7, #12]
 800262e:	f7ff ffdf 	bl	80025f0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSP_jDpT_>
 8002632:	4603      	mov	r3, r0
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8002638:	68bc      	ldr	r4, [r7, #8]
 800263a:	6878      	ldr	r0, [r7, #4]
 800263c:	f001 f9fd 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8002640:	4605      	mov	r5, r0
 8002642:	6838      	ldr	r0, [r7, #0]
 8002644:	f000 fc7c 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8002648:	4603      	mov	r3, r0
 800264a:	4619      	mov	r1, r3
 800264c:	4628      	mov	r0, r5
 800264e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8002650:	4633      	mov	r3, r6
    }
 8002652:	4618      	mov	r0, r3
 8002654:	3714      	adds	r7, #20
 8002656:	46bd      	mov	sp, r7
 8002658:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800265a:	bf00      	nop
 800265c:	08029fb0 	.word	0x08029fb0

08002660 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_>:
      operator=(_Move_assign_base&& __rhs)
 8002660:	b580      	push	{r7, lr}
 8002662:	b084      	sub	sp, #16
 8002664:	af00      	add	r7, sp, #0
 8002666:	6078      	str	r0, [r7, #4]
 8002668:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	60fb      	str	r3, [r7, #12]
 800266e:	6838      	ldr	r0, [r7, #0]
 8002670:	f7ff fcbf 	bl	8001ff2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8002674:	4602      	mov	r2, r0
 8002676:	f107 030c 	add.w	r3, r7, #12
 800267a:	4611      	mov	r1, r2
 800267c:	4618      	mov	r0, r3
 800267e:	f7ff ffc9 	bl	8002614 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
	return *this;
 8002682:	687b      	ldr	r3, [r7, #4]
      }
 8002684:	4618      	mov	r0, r3
 8002686:	3710      	adds	r7, #16
 8002688:	46bd      	mov	sp, r7
 800268a:	bd80      	pop	{r7, pc}

0800268c <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>:
       *  Returns a read/write iterator that points to the first
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      begin() _GLIBCXX_NOEXCEPT
 800268c:	b580      	push	{r7, lr}
 800268e:	b084      	sub	sp, #16
 8002690:	af00      	add	r7, sp, #0
 8002692:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8002694:	687a      	ldr	r2, [r7, #4]
 8002696:	f107 030c 	add.w	r3, r7, #12
 800269a:	4611      	mov	r1, r2
 800269c:	4618      	mov	r0, r3
 800269e:	f001 f9d7 	bl	8003a50 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80026a2:	68fb      	ldr	r3, [r7, #12]
 80026a4:	4618      	mov	r0, r3
 80026a6:	3710      	adds	r7, #16
 80026a8:	46bd      	mov	sp, r7
 80026aa:	bd80      	pop	{r7, pc}

080026ac <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      end() _GLIBCXX_NOEXCEPT
 80026ac:	b580      	push	{r7, lr}
 80026ae:	b084      	sub	sp, #16
 80026b0:	af00      	add	r7, sp, #0
 80026b2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	1d1a      	adds	r2, r3, #4
 80026b8:	f107 030c 	add.w	r3, r7, #12
 80026bc:	4611      	mov	r1, r2
 80026be:	4618      	mov	r0, r3
 80026c0:	f001 f9c6 	bl	8003a50 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	4618      	mov	r0, r3
 80026c8:	3710      	adds	r7, #16
 80026ca:	46bd      	mov	sp, r7
 80026cc:	bd80      	pop	{r7, pc}

080026ce <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80026ce:	b590      	push	{r4, r7, lr}
 80026d0:	b083      	sub	sp, #12
 80026d2:	af00      	add	r7, sp, #0
 80026d4:	6078      	str	r0, [r7, #4]
 80026d6:	6039      	str	r1, [r7, #0]
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
 80026d8:	6878      	ldr	r0, [r7, #4]
 80026da:	f001 f9c9 	bl	8003a70 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 80026de:	4603      	mov	r3, r0
 80026e0:	681c      	ldr	r4, [r3, #0]
 80026e2:	6838      	ldr	r0, [r7, #0]
 80026e4:	f001 f9c4 	bl	8003a70 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 80026e8:	4603      	mov	r3, r0
 80026ea:	681b      	ldr	r3, [r3, #0]
 80026ec:	429c      	cmp	r4, r3
 80026ee:	bf14      	ite	ne
 80026f0:	2301      	movne	r3, #1
 80026f2:	2300      	moveq	r3, #0
 80026f4:	b2db      	uxtb	r3, r3
 80026f6:	4618      	mov	r0, r3
 80026f8:	370c      	adds	r7, #12
 80026fa:	46bd      	mov	sp, r7
 80026fc:	bd90      	pop	{r4, r7, pc}

080026fe <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80026fe:	b480      	push	{r7}
 8002700:	b083      	sub	sp, #12
 8002702:	af00      	add	r7, sp, #0
 8002704:	6078      	str	r0, [r7, #4]
	++_M_current;
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	1d1a      	adds	r2, r3, #4
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	601a      	str	r2, [r3, #0]
	return *this;
 8002710:	687b      	ldr	r3, [r7, #4]
      }
 8002712:	4618      	mov	r0, r3
 8002714:	370c      	adds	r7, #12
 8002716:	46bd      	mov	sp, r7
 8002718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800271c:	4770      	bx	lr

0800271e <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800271e:	b480      	push	{r7}
 8002720:	b083      	sub	sp, #12
 8002722:	af00      	add	r7, sp, #0
 8002724:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	681b      	ldr	r3, [r3, #0]
 800272a:	4618      	mov	r0, r3
 800272c:	370c      	adds	r7, #12
 800272e:	46bd      	mov	sp, r7
 8002730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002734:	4770      	bx	lr

08002736 <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8002736:	b580      	push	{r7, lr}
 8002738:	b082      	sub	sp, #8
 800273a:	af00      	add	r7, sp, #0
 800273c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800273e:	6878      	ldr	r0, [r7, #4]
 8002740:	f001 f9d6 	bl	8003af0 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8002744:	4603      	mov	r3, r0
    }
 8002746:	4618      	mov	r0, r3
 8002748:	3708      	adds	r7, #8
 800274a:	46bd      	mov	sp, r7
 800274c:	bd80      	pop	{r7, pc}

0800274e <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800274e:	b580      	push	{r7, lr}
 8002750:	b082      	sub	sp, #8
 8002752:	af00      	add	r7, sp, #0
 8002754:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8002756:	6878      	ldr	r0, [r7, #4]
 8002758:	f001 fa1a 	bl	8003b90 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800275c:	4603      	mov	r3, r0
    }
 800275e:	4618      	mov	r0, r3
 8002760:	3708      	adds	r7, #8
 8002762:	46bd      	mov	sp, r7
 8002764:	bd80      	pop	{r7, pc}

08002766 <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8002766:	b580      	push	{r7, lr}
 8002768:	b082      	sub	sp, #8
 800276a:	af00      	add	r7, sp, #0
 800276c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800276e:	6878      	ldr	r0, [r7, #4]
 8002770:	f001 fa70 	bl	8003c54 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8002774:	4603      	mov	r3, r0
    }
 8002776:	4618      	mov	r0, r3
 8002778:	3708      	adds	r7, #8
 800277a:	46bd      	mov	sp, r7
 800277c:	bd80      	pop	{r7, pc}

0800277e <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800277e:	b580      	push	{r7, lr}
 8002780:	b082      	sub	sp, #8
 8002782:	af00      	add	r7, sp, #0
 8002784:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8002786:	6878      	ldr	r0, [r7, #4]
 8002788:	f001 fad8 	bl	8003d3c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800278c:	4603      	mov	r3, r0
    }
 800278e:	4618      	mov	r0, r3
 8002790:	3708      	adds	r7, #8
 8002792:	46bd      	mov	sp, r7
 8002794:	bd80      	pop	{r7, pc}

08002796 <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8002796:	b580      	push	{r7, lr}
 8002798:	b082      	sub	sp, #8
 800279a:	af00      	add	r7, sp, #0
 800279c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800279e:	6878      	ldr	r0, [r7, #4]
 80027a0:	f001 fb52 	bl	8003e48 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80027a4:	4603      	mov	r3, r0
    }
 80027a6:	4618      	mov	r0, r3
 80027a8:	3708      	adds	r7, #8
 80027aa:	46bd      	mov	sp, r7
 80027ac:	bd80      	pop	{r7, pc}

080027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>:
#endif

      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      size_type
      size() const _GLIBCXX_NOEXCEPT
 80027ae:	b480      	push	{r7}
 80027b0:	b083      	sub	sp, #12
 80027b2:	af00      	add	r7, sp, #0
 80027b4:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	685a      	ldr	r2, [r3, #4]
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	681b      	ldr	r3, [r3, #0]
 80027be:	1ad3      	subs	r3, r2, r3
 80027c0:	109b      	asrs	r3, r3, #2
 80027c2:	4618      	mov	r0, r3
 80027c4:	370c      	adds	r7, #12
 80027c6:	46bd      	mov	sp, r7
 80027c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027cc:	4770      	bx	lr

080027ce <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>:
       *  Note that data access with this operator is unchecked and
       *  out_of_range lookups are not defined. (For checked lookups
       *  see at().)
       */
      reference
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 80027ce:	b480      	push	{r7}
 80027d0:	b083      	sub	sp, #12
 80027d2:	af00      	add	r7, sp, #0
 80027d4:	6078      	str	r0, [r7, #4]
 80027d6:	6039      	str	r1, [r7, #0]
      {
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	681a      	ldr	r2, [r3, #0]
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	009b      	lsls	r3, r3, #2
 80027e0:	4413      	add	r3, r2
      }
 80027e2:	4618      	mov	r0, r3
 80027e4:	370c      	adds	r7, #12
 80027e6:	46bd      	mov	sp, r7
 80027e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027ec:	4770      	bx	lr

080027ee <_ZNSt6vectorIP4BodySaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 80027ee:	b480      	push	{r7}
 80027f0:	b083      	sub	sp, #12
 80027f2:	af00      	add	r7, sp, #0
 80027f4:	6078      	str	r0, [r7, #4]
 80027f6:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	681a      	ldr	r2, [r3, #0]
 80027fc:	683b      	ldr	r3, [r7, #0]
 80027fe:	009b      	lsls	r3, r3, #2
 8002800:	4413      	add	r3, r2
      }
 8002802:	4618      	mov	r0, r3
 8002804:	370c      	adds	r7, #12
 8002806:	46bd      	mov	sp, r7
 8002808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800280c:	4770      	bx	lr

0800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800280e:	b480      	push	{r7}
 8002810:	b083      	sub	sp, #12
 8002812:	af00      	add	r7, sp, #0
 8002814:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	685a      	ldr	r2, [r3, #4]
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	1ad3      	subs	r3, r2, r3
 8002820:	109b      	asrs	r3, r3, #2
 8002822:	4618      	mov	r0, r3
 8002824:	370c      	adds	r7, #12
 8002826:	46bd      	mov	sp, r7
 8002828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282c:	4770      	bx	lr

0800282e <_ZNSt6vectorIP4BodySaIS1_EE4backEv>:
      /**
       *  Returns a read/write reference to the data at the last
       *  element of the %vector.
       */
      reference
      back() _GLIBCXX_NOEXCEPT
 800282e:	b580      	push	{r7, lr}
 8002830:	b084      	sub	sp, #16
 8002832:	af00      	add	r7, sp, #0
 8002834:	6078      	str	r0, [r7, #4]
      {
	__glibcxx_requires_nonempty();
	return *(end() - 1);
 8002836:	6878      	ldr	r0, [r7, #4]
 8002838:	f001 fb22 	bl	8003e80 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 800283c:	4603      	mov	r3, r0
 800283e:	60fb      	str	r3, [r7, #12]
 8002840:	f107 030c 	add.w	r3, r7, #12
 8002844:	2101      	movs	r1, #1
 8002846:	4618      	mov	r0, r3
 8002848:	f001 fb2b 	bl	8003ea2 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>
 800284c:	4603      	mov	r3, r0
 800284e:	60bb      	str	r3, [r7, #8]
 8002850:	f107 0308 	add.w	r3, r7, #8
 8002854:	4618      	mov	r0, r3
 8002856:	f001 fb3d 	bl	8003ed4 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>
 800285a:	4603      	mov	r3, r0
      }
 800285c:	4618      	mov	r0, r3
 800285e:	3710      	adds	r7, #16
 8002860:	46bd      	mov	sp, r7
 8002862:	bd80      	pop	{r7, pc}

08002864 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8002864:	b480      	push	{r7}
 8002866:	b083      	sub	sp, #12
 8002868:	af00      	add	r7, sp, #0
 800286a:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 800286c:	687b      	ldr	r3, [r7, #4]
    }
 800286e:	4618      	mov	r0, r3
 8002870:	370c      	adds	r7, #12
 8002872:	46bd      	mov	sp, r7
 8002874:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002878:	4770      	bx	lr

0800287a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800287a:	b580      	push	{r7, lr}
 800287c:	b082      	sub	sp, #8
 800287e:	af00      	add	r7, sp, #0
 8002880:	7138      	strb	r0, [r7, #4]
 8002882:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002884:	6838      	ldr	r0, [r7, #0]
 8002886:	f001 fb47 	bl	8003f18 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800288a:	4603      	mov	r3, r0
 800288c:	4618      	mov	r0, r3
 800288e:	f001 fb4e 	bl	8003f2e <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8002892:	4603      	mov	r3, r0
 8002894:	4618      	mov	r0, r3
 8002896:	3708      	adds	r7, #8
 8002898:	46bd      	mov	sp, r7
 800289a:	bd80      	pop	{r7, pc}

0800289c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800289c:	b590      	push	{r4, r7, lr}
 800289e:	b083      	sub	sp, #12
 80028a0:	af00      	add	r7, sp, #0
 80028a2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80028a4:	6878      	ldr	r0, [r7, #4]
 80028a6:	f001 fb2c 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80028aa:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80028ac:	4619      	mov	r1, r3
 80028ae:	4620      	mov	r0, r4
 80028b0:	f7ff ffe3 	bl	800287a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80028b4:	4603      	mov	r3, r0
    }
 80028b6:	4618      	mov	r0, r3
 80028b8:	370c      	adds	r7, #12
 80028ba:	46bd      	mov	sp, r7
 80028bc:	bd90      	pop	{r4, r7, pc}

080028be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80028be:	b580      	push	{r7, lr}
 80028c0:	b082      	sub	sp, #8
 80028c2:	af00      	add	r7, sp, #0
 80028c4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80028c6:	6878      	ldr	r0, [r7, #4]
 80028c8:	f001 fb1b 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80028cc:	4603      	mov	r3, r0
 80028ce:	4618      	mov	r0, r3
 80028d0:	f7ff ffe4 	bl	800289c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80028d4:	4603      	mov	r3, r0
	}
 80028d6:	4618      	mov	r0, r3
 80028d8:	3708      	adds	r7, #8
 80028da:	46bd      	mov	sp, r7
 80028dc:	bd80      	pop	{r7, pc}

080028de <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80028de:	b5b0      	push	{r4, r5, r7, lr}
 80028e0:	b084      	sub	sp, #16
 80028e2:	af00      	add	r7, sp, #0
 80028e4:	6078      	str	r0, [r7, #4]
 80028e6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80028e8:	6878      	ldr	r0, [r7, #4]
 80028ea:	f001 faff 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80028ee:	4604      	mov	r4, r0
 80028f0:	6838      	ldr	r0, [r7, #0]
 80028f2:	f001 fb06 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80028f6:	4603      	mov	r3, r0
 80028f8:	4618      	mov	r0, r3
 80028fa:	f7ff ffe0 	bl	80028be <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESQ_EEDcOSK_>
 80028fe:	4601      	mov	r1, r0
 8002900:	f107 030c 	add.w	r3, r7, #12
 8002904:	461a      	mov	r2, r3
 8002906:	4620      	mov	r0, r4
 8002908:	f001 fb1c 	bl	8003f44 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 800290c:	462b      	mov	r3, r5
      }
 800290e:	4618      	mov	r0, r3
 8002910:	3710      	adds	r7, #16
 8002912:	46bd      	mov	sp, r7
 8002914:	bdb0      	pop	{r4, r5, r7, pc}

08002916 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002916:	b5b0      	push	{r4, r5, r7, lr}
 8002918:	b082      	sub	sp, #8
 800291a:	af00      	add	r7, sp, #0
 800291c:	6078      	str	r0, [r7, #4]
 800291e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002920:	6878      	ldr	r0, [r7, #4]
 8002922:	f001 fae3 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002926:	4604      	mov	r4, r0
 8002928:	6838      	ldr	r0, [r7, #0]
 800292a:	f001 faea 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800292e:	4603      	mov	r3, r0
 8002930:	4619      	mov	r1, r3
 8002932:	4620      	mov	r0, r4
 8002934:	f7ff ffd3 	bl	80028de <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002938:	462b      	mov	r3, r5
      }
 800293a:	4618      	mov	r0, r3
 800293c:	3708      	adds	r7, #8
 800293e:	46bd      	mov	sp, r7
 8002940:	bdb0      	pop	{r4, r5, r7, pc}

08002942 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002942:	b5b0      	push	{r4, r5, r7, lr}
 8002944:	b082      	sub	sp, #8
 8002946:	af00      	add	r7, sp, #0
 8002948:	6078      	str	r0, [r7, #4]
 800294a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800294c:	6878      	ldr	r0, [r7, #4]
 800294e:	f001 facd 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002952:	4604      	mov	r4, r0
 8002954:	6838      	ldr	r0, [r7, #0]
 8002956:	f001 fad4 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800295a:	4603      	mov	r3, r0
 800295c:	4619      	mov	r1, r3
 800295e:	4620      	mov	r0, r4
 8002960:	f7ff ffd9 	bl	8002916 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002964:	462b      	mov	r3, r5
      }
 8002966:	4618      	mov	r0, r3
 8002968:	3708      	adds	r7, #8
 800296a:	46bd      	mov	sp, r7
 800296c:	bdb0      	pop	{r4, r5, r7, pc}

0800296e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800296e:	b580      	push	{r7, lr}
 8002970:	b082      	sub	sp, #8
 8002972:	af00      	add	r7, sp, #0
 8002974:	7138      	strb	r0, [r7, #4]
 8002976:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002978:	6838      	ldr	r0, [r7, #0]
 800297a:	f001 fb01 	bl	8003f80 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800297e:	4603      	mov	r3, r0
 8002980:	4618      	mov	r0, r3
 8002982:	f001 fb08 	bl	8003f96 <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8002986:	4603      	mov	r3, r0
 8002988:	4618      	mov	r0, r3
 800298a:	3708      	adds	r7, #8
 800298c:	46bd      	mov	sp, r7
 800298e:	bd80      	pop	{r7, pc}

08002990 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002990:	b590      	push	{r4, r7, lr}
 8002992:	b083      	sub	sp, #12
 8002994:	af00      	add	r7, sp, #0
 8002996:	7138      	strb	r0, [r7, #4]
 8002998:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800299a:	6838      	ldr	r0, [r7, #0]
 800299c:	f001 fabc 	bl	8003f18 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 80029a0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80029a2:	4619      	mov	r1, r3
 80029a4:	4620      	mov	r0, r4
 80029a6:	f7ff ffe2 	bl	800296e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80029aa:	4603      	mov	r3, r0
    }
 80029ac:	4618      	mov	r0, r3
 80029ae:	370c      	adds	r7, #12
 80029b0:	46bd      	mov	sp, r7
 80029b2:	bd90      	pop	{r4, r7, pc}

080029b4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80029b4:	b590      	push	{r4, r7, lr}
 80029b6:	b083      	sub	sp, #12
 80029b8:	af00      	add	r7, sp, #0
 80029ba:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80029bc:	6878      	ldr	r0, [r7, #4]
 80029be:	f001 faa0 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80029c2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80029c4:	4619      	mov	r1, r3
 80029c6:	4620      	mov	r0, r4
 80029c8:	f7ff ffe2 	bl	8002990 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80029cc:	4603      	mov	r3, r0
    }
 80029ce:	4618      	mov	r0, r3
 80029d0:	370c      	adds	r7, #12
 80029d2:	46bd      	mov	sp, r7
 80029d4:	bd90      	pop	{r4, r7, pc}

080029d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80029d6:	b580      	push	{r7, lr}
 80029d8:	b082      	sub	sp, #8
 80029da:	af00      	add	r7, sp, #0
 80029dc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80029de:	6878      	ldr	r0, [r7, #4]
 80029e0:	f001 fa8f 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80029e4:	4603      	mov	r3, r0
 80029e6:	4618      	mov	r0, r3
 80029e8:	f7ff ffe4 	bl	80029b4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80029ec:	4603      	mov	r3, r0
	}
 80029ee:	4618      	mov	r0, r3
 80029f0:	3708      	adds	r7, #8
 80029f2:	46bd      	mov	sp, r7
 80029f4:	bd80      	pop	{r7, pc}

080029f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80029f6:	b5b0      	push	{r4, r5, r7, lr}
 80029f8:	b084      	sub	sp, #16
 80029fa:	af00      	add	r7, sp, #0
 80029fc:	6078      	str	r0, [r7, #4]
 80029fe:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002a00:	6878      	ldr	r0, [r7, #4]
 8002a02:	f001 fa73 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002a06:	4604      	mov	r4, r0
 8002a08:	6838      	ldr	r0, [r7, #0]
 8002a0a:	f001 fa7a 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002a0e:	4603      	mov	r3, r0
 8002a10:	4618      	mov	r0, r3
 8002a12:	f7ff ffe0 	bl	80029d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESQ_EEDcOSK_>
 8002a16:	4601      	mov	r1, r0
 8002a18:	f107 030c 	add.w	r3, r7, #12
 8002a1c:	461a      	mov	r2, r3
 8002a1e:	4620      	mov	r0, r4
 8002a20:	f001 fac4 	bl	8003fac <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002a24:	462b      	mov	r3, r5
      }
 8002a26:	4618      	mov	r0, r3
 8002a28:	3710      	adds	r7, #16
 8002a2a:	46bd      	mov	sp, r7
 8002a2c:	bdb0      	pop	{r4, r5, r7, pc}

08002a2e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002a2e:	b5b0      	push	{r4, r5, r7, lr}
 8002a30:	b082      	sub	sp, #8
 8002a32:	af00      	add	r7, sp, #0
 8002a34:	6078      	str	r0, [r7, #4]
 8002a36:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002a38:	6878      	ldr	r0, [r7, #4]
 8002a3a:	f001 fa57 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002a3e:	4604      	mov	r4, r0
 8002a40:	6838      	ldr	r0, [r7, #0]
 8002a42:	f001 fa5e 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002a46:	4603      	mov	r3, r0
 8002a48:	4619      	mov	r1, r3
 8002a4a:	4620      	mov	r0, r4
 8002a4c:	f7ff ffd3 	bl	80029f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002a50:	462b      	mov	r3, r5
      }
 8002a52:	4618      	mov	r0, r3
 8002a54:	3708      	adds	r7, #8
 8002a56:	46bd      	mov	sp, r7
 8002a58:	bdb0      	pop	{r4, r5, r7, pc}

08002a5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002a5a:	b5b0      	push	{r4, r5, r7, lr}
 8002a5c:	b082      	sub	sp, #8
 8002a5e:	af00      	add	r7, sp, #0
 8002a60:	6078      	str	r0, [r7, #4]
 8002a62:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002a64:	6878      	ldr	r0, [r7, #4]
 8002a66:	f001 fa41 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002a6a:	4604      	mov	r4, r0
 8002a6c:	6838      	ldr	r0, [r7, #0]
 8002a6e:	f001 fa48 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002a72:	4603      	mov	r3, r0
 8002a74:	4619      	mov	r1, r3
 8002a76:	4620      	mov	r0, r4
 8002a78:	f7ff ffd9 	bl	8002a2e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002a7c:	462b      	mov	r3, r5
      }
 8002a7e:	4618      	mov	r0, r3
 8002a80:	3708      	adds	r7, #8
 8002a82:	46bd      	mov	sp, r7
 8002a84:	bdb0      	pop	{r4, r5, r7, pc}

08002a86 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002a86:	b580      	push	{r7, lr}
 8002a88:	b082      	sub	sp, #8
 8002a8a:	af00      	add	r7, sp, #0
 8002a8c:	7138      	strb	r0, [r7, #4]
 8002a8e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002a90:	6838      	ldr	r0, [r7, #0]
 8002a92:	f001 faa9 	bl	8003fe8 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002a96:	4603      	mov	r3, r0
 8002a98:	4618      	mov	r0, r3
 8002a9a:	f001 fab0 	bl	8003ffe <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8002a9e:	4603      	mov	r3, r0
 8002aa0:	4618      	mov	r0, r3
 8002aa2:	3708      	adds	r7, #8
 8002aa4:	46bd      	mov	sp, r7
 8002aa6:	bd80      	pop	{r7, pc}

08002aa8 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002aa8:	b590      	push	{r4, r7, lr}
 8002aaa:	b083      	sub	sp, #12
 8002aac:	af00      	add	r7, sp, #0
 8002aae:	7138      	strb	r0, [r7, #4]
 8002ab0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002ab2:	6838      	ldr	r0, [r7, #0]
 8002ab4:	f001 fa64 	bl	8003f80 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002ab8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002aba:	4619      	mov	r1, r3
 8002abc:	4620      	mov	r0, r4
 8002abe:	f7ff ffe2 	bl	8002a86 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002ac2:	4603      	mov	r3, r0
    }
 8002ac4:	4618      	mov	r0, r3
 8002ac6:	370c      	adds	r7, #12
 8002ac8:	46bd      	mov	sp, r7
 8002aca:	bd90      	pop	{r4, r7, pc}

08002acc <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002acc:	b590      	push	{r4, r7, lr}
 8002ace:	b083      	sub	sp, #12
 8002ad0:	af00      	add	r7, sp, #0
 8002ad2:	7138      	strb	r0, [r7, #4]
 8002ad4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002ad6:	6838      	ldr	r0, [r7, #0]
 8002ad8:	f001 fa1e 	bl	8003f18 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002adc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002ade:	4619      	mov	r1, r3
 8002ae0:	4620      	mov	r0, r4
 8002ae2:	f7ff ffe1 	bl	8002aa8 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002ae6:	4603      	mov	r3, r0
    }
 8002ae8:	4618      	mov	r0, r3
 8002aea:	370c      	adds	r7, #12
 8002aec:	46bd      	mov	sp, r7
 8002aee:	bd90      	pop	{r4, r7, pc}

08002af0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002af0:	b590      	push	{r4, r7, lr}
 8002af2:	b083      	sub	sp, #12
 8002af4:	af00      	add	r7, sp, #0
 8002af6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002af8:	6878      	ldr	r0, [r7, #4]
 8002afa:	f001 fa02 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002afe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002b00:	4619      	mov	r1, r3
 8002b02:	4620      	mov	r0, r4
 8002b04:	f7ff ffe2 	bl	8002acc <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002b08:	4603      	mov	r3, r0
    }
 8002b0a:	4618      	mov	r0, r3
 8002b0c:	370c      	adds	r7, #12
 8002b0e:	46bd      	mov	sp, r7
 8002b10:	bd90      	pop	{r4, r7, pc}

08002b12 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002b12:	b580      	push	{r7, lr}
 8002b14:	b082      	sub	sp, #8
 8002b16:	af00      	add	r7, sp, #0
 8002b18:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002b1a:	6878      	ldr	r0, [r7, #4]
 8002b1c:	f001 f9f1 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002b20:	4603      	mov	r3, r0
 8002b22:	4618      	mov	r0, r3
 8002b24:	f7ff ffe4 	bl	8002af0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002b28:	4603      	mov	r3, r0
	}
 8002b2a:	4618      	mov	r0, r3
 8002b2c:	3708      	adds	r7, #8
 8002b2e:	46bd      	mov	sp, r7
 8002b30:	bd80      	pop	{r7, pc}

08002b32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002b32:	b5b0      	push	{r4, r5, r7, lr}
 8002b34:	b084      	sub	sp, #16
 8002b36:	af00      	add	r7, sp, #0
 8002b38:	6078      	str	r0, [r7, #4]
 8002b3a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002b3c:	6878      	ldr	r0, [r7, #4]
 8002b3e:	f001 f9d5 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002b42:	4604      	mov	r4, r0
 8002b44:	6838      	ldr	r0, [r7, #0]
 8002b46:	f001 f9dc 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002b4a:	4603      	mov	r3, r0
 8002b4c:	4618      	mov	r0, r3
 8002b4e:	f7ff ffe0 	bl	8002b12 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESQ_EEDcOSK_>
 8002b52:	4601      	mov	r1, r0
 8002b54:	f107 030c 	add.w	r3, r7, #12
 8002b58:	461a      	mov	r2, r3
 8002b5a:	4620      	mov	r0, r4
 8002b5c:	f001 fa5a 	bl	8004014 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002b60:	462b      	mov	r3, r5
      }
 8002b62:	4618      	mov	r0, r3
 8002b64:	3710      	adds	r7, #16
 8002b66:	46bd      	mov	sp, r7
 8002b68:	bdb0      	pop	{r4, r5, r7, pc}

08002b6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002b6a:	b5b0      	push	{r4, r5, r7, lr}
 8002b6c:	b082      	sub	sp, #8
 8002b6e:	af00      	add	r7, sp, #0
 8002b70:	6078      	str	r0, [r7, #4]
 8002b72:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002b74:	6878      	ldr	r0, [r7, #4]
 8002b76:	f001 f9b9 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002b7a:	4604      	mov	r4, r0
 8002b7c:	6838      	ldr	r0, [r7, #0]
 8002b7e:	f001 f9c0 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002b82:	4603      	mov	r3, r0
 8002b84:	4619      	mov	r1, r3
 8002b86:	4620      	mov	r0, r4
 8002b88:	f7ff ffd3 	bl	8002b32 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002b8c:	462b      	mov	r3, r5
      }
 8002b8e:	4618      	mov	r0, r3
 8002b90:	3708      	adds	r7, #8
 8002b92:	46bd      	mov	sp, r7
 8002b94:	bdb0      	pop	{r4, r5, r7, pc}

08002b96 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002b96:	b5b0      	push	{r4, r5, r7, lr}
 8002b98:	b082      	sub	sp, #8
 8002b9a:	af00      	add	r7, sp, #0
 8002b9c:	6078      	str	r0, [r7, #4]
 8002b9e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002ba0:	6878      	ldr	r0, [r7, #4]
 8002ba2:	f001 f9a3 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002ba6:	4604      	mov	r4, r0
 8002ba8:	6838      	ldr	r0, [r7, #0]
 8002baa:	f001 f9aa 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002bae:	4603      	mov	r3, r0
 8002bb0:	4619      	mov	r1, r3
 8002bb2:	4620      	mov	r0, r4
 8002bb4:	f7ff ffd9 	bl	8002b6a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002bb8:	462b      	mov	r3, r5
      }
 8002bba:	4618      	mov	r0, r3
 8002bbc:	3708      	adds	r7, #8
 8002bbe:	46bd      	mov	sp, r7
 8002bc0:	bdb0      	pop	{r4, r5, r7, pc}

08002bc2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002bc2:	b580      	push	{r7, lr}
 8002bc4:	b082      	sub	sp, #8
 8002bc6:	af00      	add	r7, sp, #0
 8002bc8:	7138      	strb	r0, [r7, #4]
 8002bca:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002bcc:	6838      	ldr	r0, [r7, #0]
 8002bce:	f001 fa3f 	bl	8004050 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002bd2:	4603      	mov	r3, r0
 8002bd4:	4618      	mov	r0, r3
 8002bd6:	f001 fa46 	bl	8004066 <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8002bda:	4603      	mov	r3, r0
 8002bdc:	4618      	mov	r0, r3
 8002bde:	3708      	adds	r7, #8
 8002be0:	46bd      	mov	sp, r7
 8002be2:	bd80      	pop	{r7, pc}

08002be4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002be4:	b590      	push	{r4, r7, lr}
 8002be6:	b083      	sub	sp, #12
 8002be8:	af00      	add	r7, sp, #0
 8002bea:	7138      	strb	r0, [r7, #4]
 8002bec:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002bee:	6838      	ldr	r0, [r7, #0]
 8002bf0:	f001 f9fa 	bl	8003fe8 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002bf4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002bf6:	4619      	mov	r1, r3
 8002bf8:	4620      	mov	r0, r4
 8002bfa:	f7ff ffe2 	bl	8002bc2 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002bfe:	4603      	mov	r3, r0
    }
 8002c00:	4618      	mov	r0, r3
 8002c02:	370c      	adds	r7, #12
 8002c04:	46bd      	mov	sp, r7
 8002c06:	bd90      	pop	{r4, r7, pc}

08002c08 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002c08:	b590      	push	{r4, r7, lr}
 8002c0a:	b083      	sub	sp, #12
 8002c0c:	af00      	add	r7, sp, #0
 8002c0e:	7138      	strb	r0, [r7, #4]
 8002c10:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002c12:	6838      	ldr	r0, [r7, #0]
 8002c14:	f001 f9b4 	bl	8003f80 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002c18:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002c1a:	4619      	mov	r1, r3
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	f7ff ffe1 	bl	8002be4 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002c22:	4603      	mov	r3, r0
    }
 8002c24:	4618      	mov	r0, r3
 8002c26:	370c      	adds	r7, #12
 8002c28:	46bd      	mov	sp, r7
 8002c2a:	bd90      	pop	{r4, r7, pc}

08002c2c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002c2c:	b590      	push	{r4, r7, lr}
 8002c2e:	b083      	sub	sp, #12
 8002c30:	af00      	add	r7, sp, #0
 8002c32:	7138      	strb	r0, [r7, #4]
 8002c34:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002c36:	6838      	ldr	r0, [r7, #0]
 8002c38:	f001 f96e 	bl	8003f18 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002c3c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002c3e:	4619      	mov	r1, r3
 8002c40:	4620      	mov	r0, r4
 8002c42:	f7ff ffe1 	bl	8002c08 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002c46:	4603      	mov	r3, r0
    }
 8002c48:	4618      	mov	r0, r3
 8002c4a:	370c      	adds	r7, #12
 8002c4c:	46bd      	mov	sp, r7
 8002c4e:	bd90      	pop	{r4, r7, pc}

08002c50 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002c50:	b590      	push	{r4, r7, lr}
 8002c52:	b083      	sub	sp, #12
 8002c54:	af00      	add	r7, sp, #0
 8002c56:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002c58:	6878      	ldr	r0, [r7, #4]
 8002c5a:	f001 f952 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002c5e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002c60:	4619      	mov	r1, r3
 8002c62:	4620      	mov	r0, r4
 8002c64:	f7ff ffe2 	bl	8002c2c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002c68:	4603      	mov	r3, r0
    }
 8002c6a:	4618      	mov	r0, r3
 8002c6c:	370c      	adds	r7, #12
 8002c6e:	46bd      	mov	sp, r7
 8002c70:	bd90      	pop	{r4, r7, pc}

08002c72 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002c72:	b580      	push	{r7, lr}
 8002c74:	b082      	sub	sp, #8
 8002c76:	af00      	add	r7, sp, #0
 8002c78:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002c7a:	6878      	ldr	r0, [r7, #4]
 8002c7c:	f001 f941 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002c80:	4603      	mov	r3, r0
 8002c82:	4618      	mov	r0, r3
 8002c84:	f7ff ffe4 	bl	8002c50 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002c88:	4603      	mov	r3, r0
	}
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	3708      	adds	r7, #8
 8002c8e:	46bd      	mov	sp, r7
 8002c90:	bd80      	pop	{r7, pc}

08002c92 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002c92:	b5b0      	push	{r4, r5, r7, lr}
 8002c94:	b084      	sub	sp, #16
 8002c96:	af00      	add	r7, sp, #0
 8002c98:	6078      	str	r0, [r7, #4]
 8002c9a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002c9c:	6878      	ldr	r0, [r7, #4]
 8002c9e:	f001 f925 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002ca2:	4604      	mov	r4, r0
 8002ca4:	6838      	ldr	r0, [r7, #0]
 8002ca6:	f001 f92c 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002caa:	4603      	mov	r3, r0
 8002cac:	4618      	mov	r0, r3
 8002cae:	f7ff ffe0 	bl	8002c72 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESQ_EEDcOSK_>
 8002cb2:	4601      	mov	r1, r0
 8002cb4:	f107 030c 	add.w	r3, r7, #12
 8002cb8:	461a      	mov	r2, r3
 8002cba:	4620      	mov	r0, r4
 8002cbc:	f001 f9e0 	bl	8004080 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002cc0:	462b      	mov	r3, r5
      }
 8002cc2:	4618      	mov	r0, r3
 8002cc4:	3710      	adds	r7, #16
 8002cc6:	46bd      	mov	sp, r7
 8002cc8:	bdb0      	pop	{r4, r5, r7, pc}

08002cca <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002cca:	b5b0      	push	{r4, r5, r7, lr}
 8002ccc:	b082      	sub	sp, #8
 8002cce:	af00      	add	r7, sp, #0
 8002cd0:	6078      	str	r0, [r7, #4]
 8002cd2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002cd4:	6878      	ldr	r0, [r7, #4]
 8002cd6:	f001 f909 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002cda:	4604      	mov	r4, r0
 8002cdc:	6838      	ldr	r0, [r7, #0]
 8002cde:	f001 f910 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002ce2:	4603      	mov	r3, r0
 8002ce4:	4619      	mov	r1, r3
 8002ce6:	4620      	mov	r0, r4
 8002ce8:	f7ff ffd3 	bl	8002c92 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002cec:	462b      	mov	r3, r5
      }
 8002cee:	4618      	mov	r0, r3
 8002cf0:	3708      	adds	r7, #8
 8002cf2:	46bd      	mov	sp, r7
 8002cf4:	bdb0      	pop	{r4, r5, r7, pc}

08002cf6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002cf6:	b5b0      	push	{r4, r5, r7, lr}
 8002cf8:	b082      	sub	sp, #8
 8002cfa:	af00      	add	r7, sp, #0
 8002cfc:	6078      	str	r0, [r7, #4]
 8002cfe:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002d00:	6878      	ldr	r0, [r7, #4]
 8002d02:	f001 f8f3 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002d06:	4604      	mov	r4, r0
 8002d08:	6838      	ldr	r0, [r7, #0]
 8002d0a:	f001 f8fa 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002d0e:	4603      	mov	r3, r0
 8002d10:	4619      	mov	r1, r3
 8002d12:	4620      	mov	r0, r4
 8002d14:	f7ff ffd9 	bl	8002cca <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002d18:	462b      	mov	r3, r5
      }
 8002d1a:	4618      	mov	r0, r3
 8002d1c:	3708      	adds	r7, #8
 8002d1e:	46bd      	mov	sp, r7
 8002d20:	bdb0      	pop	{r4, r5, r7, pc}

08002d22 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8002d22:	b580      	push	{r7, lr}
 8002d24:	b082      	sub	sp, #8
 8002d26:	af00      	add	r7, sp, #0
 8002d28:	7138      	strb	r0, [r7, #4]
 8002d2a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8002d2c:	6838      	ldr	r0, [r7, #0]
 8002d2e:	f001 f9c5 	bl	80040bc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8002d32:	4603      	mov	r3, r0
 8002d34:	4618      	mov	r0, r3
 8002d36:	f001 f9cc 	bl	80040d2 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 8002d3a:	4603      	mov	r3, r0
 8002d3c:	4618      	mov	r0, r3
 8002d3e:	3708      	adds	r7, #8
 8002d40:	46bd      	mov	sp, r7
 8002d42:	bd80      	pop	{r7, pc}

08002d44 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d44:	b590      	push	{r4, r7, lr}
 8002d46:	b083      	sub	sp, #12
 8002d48:	af00      	add	r7, sp, #0
 8002d4a:	7138      	strb	r0, [r7, #4]
 8002d4c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d4e:	6838      	ldr	r0, [r7, #0]
 8002d50:	f001 f97e 	bl	8004050 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002d54:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d56:	4619      	mov	r1, r3
 8002d58:	4620      	mov	r0, r4
 8002d5a:	f7ff ffe2 	bl	8002d22 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8002d5e:	4603      	mov	r3, r0
    }
 8002d60:	4618      	mov	r0, r3
 8002d62:	370c      	adds	r7, #12
 8002d64:	46bd      	mov	sp, r7
 8002d66:	bd90      	pop	{r4, r7, pc}

08002d68 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d68:	b590      	push	{r4, r7, lr}
 8002d6a:	b083      	sub	sp, #12
 8002d6c:	af00      	add	r7, sp, #0
 8002d6e:	7138      	strb	r0, [r7, #4]
 8002d70:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d72:	6838      	ldr	r0, [r7, #0]
 8002d74:	f001 f938 	bl	8003fe8 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002d78:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d7a:	4619      	mov	r1, r3
 8002d7c:	4620      	mov	r0, r4
 8002d7e:	f7ff ffe1 	bl	8002d44 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002d82:	4603      	mov	r3, r0
    }
 8002d84:	4618      	mov	r0, r3
 8002d86:	370c      	adds	r7, #12
 8002d88:	46bd      	mov	sp, r7
 8002d8a:	bd90      	pop	{r4, r7, pc}

08002d8c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002d8c:	b590      	push	{r4, r7, lr}
 8002d8e:	b083      	sub	sp, #12
 8002d90:	af00      	add	r7, sp, #0
 8002d92:	7138      	strb	r0, [r7, #4]
 8002d94:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002d96:	6838      	ldr	r0, [r7, #0]
 8002d98:	f001 f8f2 	bl	8003f80 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002d9c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002d9e:	4619      	mov	r1, r3
 8002da0:	4620      	mov	r0, r4
 8002da2:	f7ff ffe1 	bl	8002d68 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002da6:	4603      	mov	r3, r0
    }
 8002da8:	4618      	mov	r0, r3
 8002daa:	370c      	adds	r7, #12
 8002dac:	46bd      	mov	sp, r7
 8002dae:	bd90      	pop	{r4, r7, pc}

08002db0 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8002db0:	b590      	push	{r4, r7, lr}
 8002db2:	b083      	sub	sp, #12
 8002db4:	af00      	add	r7, sp, #0
 8002db6:	7138      	strb	r0, [r7, #4]
 8002db8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8002dba:	6838      	ldr	r0, [r7, #0]
 8002dbc:	f001 f8ac 	bl	8003f18 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 8002dc0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8002dc2:	4619      	mov	r1, r3
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	f7ff ffe1 	bl	8002d8c <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002dca:	4603      	mov	r3, r0
    }
 8002dcc:	4618      	mov	r0, r3
 8002dce:	370c      	adds	r7, #12
 8002dd0:	46bd      	mov	sp, r7
 8002dd2:	bd90      	pop	{r4, r7, pc}

08002dd4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8002dd4:	b590      	push	{r4, r7, lr}
 8002dd6:	b083      	sub	sp, #12
 8002dd8:	af00      	add	r7, sp, #0
 8002dda:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8002ddc:	6878      	ldr	r0, [r7, #4]
 8002dde:	f001 f890 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002de2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8002de4:	4619      	mov	r1, r3
 8002de6:	4620      	mov	r0, r4
 8002de8:	f7ff ffe2 	bl	8002db0 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8002dec:	4603      	mov	r3, r0
    }
 8002dee:	4618      	mov	r0, r3
 8002df0:	370c      	adds	r7, #12
 8002df2:	46bd      	mov	sp, r7
 8002df4:	bd90      	pop	{r4, r7, pc}

08002df6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSK_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8002df6:	b580      	push	{r7, lr}
 8002df8:	b082      	sub	sp, #8
 8002dfa:	af00      	add	r7, sp, #0
 8002dfc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8002dfe:	6878      	ldr	r0, [r7, #4]
 8002e00:	f001 f87f 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002e04:	4603      	mov	r3, r0
 8002e06:	4618      	mov	r0, r3
 8002e08:	f7ff ffe4 	bl	8002dd4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8002e0c:	4603      	mov	r3, r0
	}
 8002e0e:	4618      	mov	r0, r3
 8002e10:	3708      	adds	r7, #8
 8002e12:	46bd      	mov	sp, r7
 8002e14:	bd80      	pop	{r7, pc}

08002e16 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESM_SQ_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8002e16:	b5b0      	push	{r4, r5, r7, lr}
 8002e18:	b084      	sub	sp, #16
 8002e1a:	af00      	add	r7, sp, #0
 8002e1c:	6078      	str	r0, [r7, #4]
 8002e1e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8002e20:	6878      	ldr	r0, [r7, #4]
 8002e22:	f001 f863 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002e26:	4604      	mov	r4, r0
 8002e28:	6838      	ldr	r0, [r7, #0]
 8002e2a:	f001 f86a 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002e2e:	4603      	mov	r3, r0
 8002e30:	4618      	mov	r0, r3
 8002e32:	f7ff ffe0 	bl	8002df6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESQ_EEDcOSK_>
 8002e36:	4601      	mov	r1, r0
 8002e38:	f107 030c 	add.w	r3, r7, #12
 8002e3c:	461a      	mov	r2, r3
 8002e3e:	4620      	mov	r0, r4
 8002e40:	f001 f954 	bl	80040ec <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>
	      integral_constant<size_t, __indices>()...);
 8002e44:	462b      	mov	r3, r5
      }
 8002e46:	4618      	mov	r0, r3
 8002e48:	3710      	adds	r7, #16
 8002e4a:	46bd      	mov	sp, r7
 8002e4c:	bdb0      	pop	{r4, r5, r7, pc}

08002e4e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESM_SQ_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002e4e:	b5b0      	push	{r4, r5, r7, lr}
 8002e50:	b082      	sub	sp, #8
 8002e52:	af00      	add	r7, sp, #0
 8002e54:	6078      	str	r0, [r7, #4]
 8002e56:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8002e58:	6878      	ldr	r0, [r7, #4]
 8002e5a:	f001 f847 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002e5e:	4604      	mov	r4, r0
 8002e60:	6838      	ldr	r0, [r7, #0]
 8002e62:	f001 f84e 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002e66:	4603      	mov	r3, r0
 8002e68:	4619      	mov	r1, r3
 8002e6a:	4620      	mov	r0, r4
 8002e6c:	f7ff ffd3 	bl	8002e16 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002e70:	462b      	mov	r3, r5
      }
 8002e72:	4618      	mov	r0, r3
 8002e74:	3708      	adds	r7, #8
 8002e76:	46bd      	mov	sp, r7
 8002e78:	bdb0      	pop	{r4, r5, r7, pc}

08002e7a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESM_SQ_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8002e7a:	b5b0      	push	{r4, r5, r7, lr}
 8002e7c:	b082      	sub	sp, #8
 8002e7e:	af00      	add	r7, sp, #0
 8002e80:	6078      	str	r0, [r7, #4]
 8002e82:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8002e84:	6878      	ldr	r0, [r7, #4]
 8002e86:	f001 f831 	bl	8003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002e8a:	4604      	mov	r4, r0
 8002e8c:	6838      	ldr	r0, [r7, #0]
 8002e8e:	f001 f838 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002e92:	4603      	mov	r3, r0
 8002e94:	4619      	mov	r1, r3
 8002e96:	4620      	mov	r0, r4
 8002e98:	f7ff ffd9 	bl	8002e4e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEEaSERKSF_EUlOT_T0_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESM_SQ_>
				   std::forward<_Variants>(__vars)...);
 8002e9c:	462b      	mov	r3, r5
      }
 8002e9e:	4618      	mov	r0, r3
 8002ea0:	3708      	adds	r7, #8
 8002ea2:	46bd      	mov	sp, r7
 8002ea4:	bdb0      	pop	{r4, r5, r7, pc}

08002ea6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSR_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8002ea6:	b580      	push	{r7, lr}
 8002ea8:	b082      	sub	sp, #8
 8002eaa:	af00      	add	r7, sp, #0
 8002eac:	6078      	str	r0, [r7, #4]
 8002eae:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8002eb0:	683b      	ldr	r3, [r7, #0]
 8002eb2:	009b      	lsls	r3, r3, #2
 8002eb4:	687a      	ldr	r2, [r7, #4]
 8002eb6:	4413      	add	r3, r2
 8002eb8:	4618      	mov	r0, r3
 8002eba:	f001 f935 	bl	8004128 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8002ebe:	4603      	mov	r3, r0
	}
 8002ec0:	4618      	mov	r0, r3
 8002ec2:	3708      	adds	r7, #8
 8002ec4:	46bd      	mov	sp, r7
 8002ec6:	bd80      	pop	{r7, pc}

08002ec8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8002ec8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002eca:	b085      	sub	sp, #20
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	6078      	str	r0, [r7, #4]
 8002ed0:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8002ed2:	4b0f      	ldr	r3, [pc, #60]	; (8002f10 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8002ed4:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8002ed6:	6838      	ldr	r0, [r7, #0]
 8002ed8:	f7fe fe1e 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8002edc:	4603      	mov	r3, r0
 8002ede:	4619      	mov	r1, r3
 8002ee0:	68f8      	ldr	r0, [r7, #12]
 8002ee2:	f7ff ffe0 	bl	8002ea6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSR_jDpT_>
 8002ee6:	4603      	mov	r3, r0
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8002eec:	68bc      	ldr	r4, [r7, #8]
 8002eee:	6878      	ldr	r0, [r7, #4]
 8002ef0:	f001 f925 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8002ef4:	4605      	mov	r5, r0
 8002ef6:	6838      	ldr	r0, [r7, #0]
 8002ef8:	f001 f803 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8002efc:	4603      	mov	r3, r0
 8002efe:	4619      	mov	r1, r3
 8002f00:	4628      	mov	r0, r5
 8002f02:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8002f04:	4633      	mov	r3, r6
    }
 8002f06:	4618      	mov	r0, r3
 8002f08:	3714      	adds	r7, #20
 8002f0a:	46bd      	mov	sp, r7
 8002f0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002f0e:	bf00      	nop
 8002f10:	08029fc4 	.word	0x08029fc4

08002f14 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_>:
      operator=(const _Copy_assign_base& __rhs)
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b084      	sub	sp, #16
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	6078      	str	r0, [r7, #4]
 8002f1c:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	60fb      	str	r3, [r7, #12]
 8002f22:	6838      	ldr	r0, [r7, #0]
 8002f24:	f7ff fc9e 	bl	8002864 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8002f28:	4602      	mov	r2, r0
 8002f2a:	f107 030c 	add.w	r3, r7, #12
 8002f2e:	4611      	mov	r1, r2
 8002f30:	4618      	mov	r0, r3
 8002f32:	f7ff ffc9 	bl	8002ec8 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
	return *this;
 8002f36:	687b      	ldr	r3, [r7, #4]
      }
 8002f38:	4618      	mov	r0, r3
 8002f3a:	3710      	adds	r7, #16
 8002f3c:	46bd      	mov	sp, r7
 8002f3e:	bd80      	pop	{r7, pc}

08002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002f40:	b480      	push	{r7}
 8002f42:	b083      	sub	sp, #12
 8002f44:	af00      	add	r7, sp, #0
 8002f46:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	4618      	mov	r0, r3
 8002f4c:	370c      	adds	r7, #12
 8002f4e:	46bd      	mov	sp, r7
 8002f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f54:	4770      	bx	lr

08002f56 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002f56:	b480      	push	{r7}
 8002f58:	b083      	sub	sp, #12
 8002f5a:	af00      	add	r7, sp, #0
 8002f5c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	4618      	mov	r0, r3
 8002f62:	370c      	adds	r7, #12
 8002f64:	46bd      	mov	sp, r7
 8002f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f6a:	4770      	bx	lr

08002f6c <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8002f6c:	b480      	push	{r7}
 8002f6e:	b083      	sub	sp, #12
 8002f70:	af00      	add	r7, sp, #0
 8002f72:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	4618      	mov	r0, r3
 8002f78:	370c      	adds	r7, #12
 8002f7a:	46bd      	mov	sp, r7
 8002f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f80:	4770      	bx	lr

08002f82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 8002f82:	b580      	push	{r7, lr}
 8002f84:	b084      	sub	sp, #16
 8002f86:	af00      	add	r7, sp, #0
 8002f88:	60f8      	str	r0, [r7, #12]
 8002f8a:	60b9      	str	r1, [r7, #8]
 8002f8c:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 8002f8e:	687a      	ldr	r2, [r7, #4]
 8002f90:	68b9      	ldr	r1, [r7, #8]
 8002f92:	68f8      	ldr	r0, [r7, #12]
 8002f94:	f001 f8de 	bl	8004154 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>
        }
 8002f98:	bf00      	nop
 8002f9a:	3710      	adds	r7, #16
 8002f9c:	46bd      	mov	sp, r7
 8002f9e:	bd80      	pop	{r7, pc}

08002fa0 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002fa0:	b480      	push	{r7}
 8002fa2:	b083      	sub	sp, #12
 8002fa4:	af00      	add	r7, sp, #0
 8002fa6:	6078      	str	r0, [r7, #4]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	4618      	mov	r0, r3
 8002fac:	370c      	adds	r7, #12
 8002fae:	46bd      	mov	sp, r7
 8002fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fb4:	4770      	bx	lr

08002fb6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002fb6:	b480      	push	{r7}
 8002fb8:	b083      	sub	sp, #12
 8002fba:	af00      	add	r7, sp, #0
 8002fbc:	6078      	str	r0, [r7, #4]
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	4618      	mov	r0, r3
 8002fc2:	370c      	adds	r7, #12
 8002fc4:	46bd      	mov	sp, r7
 8002fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fca:	4770      	bx	lr

08002fcc <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8002fcc:	b580      	push	{r7, lr}
 8002fce:	b082      	sub	sp, #8
 8002fd0:	af00      	add	r7, sp, #0
 8002fd2:	6078      	str	r0, [r7, #4]
 8002fd4:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8002fd6:	6839      	ldr	r1, [r7, #0]
 8002fd8:	6878      	ldr	r0, [r7, #4]
 8002fda:	f001 f8cc 	bl	8004176 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	4618      	mov	r0, r3
 8002fe2:	3708      	adds	r7, #8
 8002fe4:	46bd      	mov	sp, r7
 8002fe6:	bd80      	pop	{r7, pc}

08002fe8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
 8002fe8:	b580      	push	{r7, lr}
 8002fea:	b082      	sub	sp, #8
 8002fec:	af00      	add	r7, sp, #0
 8002fee:	6078      	str	r0, [r7, #4]
 8002ff0:	6878      	ldr	r0, [r7, #4]
 8002ff2:	f001 f8d9 	bl	80041a8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	4618      	mov	r0, r3
 8002ffa:	3708      	adds	r7, #8
 8002ffc:	46bd      	mov	sp, r7
 8002ffe:	bd80      	pop	{r7, pc}

08003000 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree() { }
#else
      _Rb_tree() = default;
#endif

      _Rb_tree(const _Compare& __comp,
 8003000:	b590      	push	{r4, r7, lr}
 8003002:	b087      	sub	sp, #28
 8003004:	af00      	add	r7, sp, #0
 8003006:	60f8      	str	r0, [r7, #12]
 8003008:	60b9      	str	r1, [r7, #8]
 800300a:	607a      	str	r2, [r7, #4]
	       const allocator_type& __a = allocator_type())
      : _M_impl(__comp, _Node_allocator(__a)) { }
 800300c:	68fc      	ldr	r4, [r7, #12]
 800300e:	f107 0314 	add.w	r3, r7, #20
 8003012:	6879      	ldr	r1, [r7, #4]
 8003014:	4618      	mov	r0, r3
 8003016:	f001 f8ba 	bl	800418e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>
 800301a:	f107 0314 	add.w	r3, r7, #20
 800301e:	461a      	mov	r2, r3
 8003020:	68b9      	ldr	r1, [r7, #8]
 8003022:	4620      	mov	r0, r4
 8003024:	f001 f8cc 	bl	80041c0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 8003028:	f107 0314 	add.w	r3, r7, #20
 800302c:	4618      	mov	r0, r3
 800302e:	f001 f8bb 	bl	80041a8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 8003032:	68fb      	ldr	r3, [r7, #12]
 8003034:	4618      	mov	r0, r3
 8003036:	371c      	adds	r7, #28
 8003038:	46bd      	mov	sp, r7
 800303a:	bd90      	pop	{r4, r7, pc}

0800303c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 800303c:	b580      	push	{r7, lr}
 800303e:	b082      	sub	sp, #8
 8003040:	af00      	add	r7, sp, #0
 8003042:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8003044:	6878      	ldr	r0, [r7, #4]
 8003046:	f001 f8f7 	bl	8004238 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 800304a:	4603      	mov	r3, r0
 800304c:	4619      	mov	r1, r3
 800304e:	6878      	ldr	r0, [r7, #4]
 8003050:	f001 f8d3 	bl	80041fa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	4618      	mov	r0, r3
 8003058:	f7ff ffc6 	bl	8002fe8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	4618      	mov	r0, r3
 8003060:	3708      	adds	r7, #8
 8003062:	46bd      	mov	sp, r7
 8003064:	bd80      	pop	{r7, pc}

08003066 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
 8003066:	b480      	push	{r7}
 8003068:	b083      	sub	sp, #12
 800306a:	af00      	add	r7, sp, #0
 800306c:	6078      	str	r0, [r7, #4]
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	4618      	mov	r0, r3
 8003074:	370c      	adds	r7, #12
 8003076:	46bd      	mov	sp, r7
 8003078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800307c:	4770      	bx	lr

0800307e <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
 800307e:	b590      	push	{r4, r7, lr}
 8003080:	b083      	sub	sp, #12
 8003082:	af00      	add	r7, sp, #0
 8003084:	6078      	str	r0, [r7, #4]
 8003086:	6878      	ldr	r0, [r7, #4]
 8003088:	f7ff ffed 	bl	8003066 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 800308c:	4604      	mov	r4, r0
 800308e:	6878      	ldr	r0, [r7, #4]
 8003090:	f001 f8de 	bl	8004250 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>
 8003094:	4603      	mov	r3, r0
 8003096:	005b      	lsls	r3, r3, #1
 8003098:	4423      	add	r3, r4
 800309a:	4618      	mov	r0, r3
 800309c:	370c      	adds	r7, #12
 800309e:	46bd      	mov	sp, r7
 80030a0:	bd90      	pop	{r4, r7, pc}

080030a2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	using __same_value_type
	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;

      template<typename _InputIterator>
	__enable_if_t<__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 80030a2:	b580      	push	{r7, lr}
 80030a4:	b088      	sub	sp, #32
 80030a6:	af00      	add	r7, sp, #0
 80030a8:	60f8      	str	r0, [r7, #12]
 80030aa:	60b9      	str	r1, [r7, #8]
 80030ac:	607a      	str	r2, [r7, #4]
	{
	  _Alloc_node __an(*this);
 80030ae:	f107 0314 	add.w	r3, r7, #20
 80030b2:	68f9      	ldr	r1, [r7, #12]
 80030b4:	4618      	mov	r0, r3
 80030b6:	f001 f8d7 	bl	8004268 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 80030ba:	68ba      	ldr	r2, [r7, #8]
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	429a      	cmp	r2, r3
 80030c0:	d017      	beq.n	80030f2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 80030c2:	68f8      	ldr	r0, [r7, #12]
 80030c4:	f001 f8df 	bl	8004286 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 80030c8:	4603      	mov	r3, r0
 80030ca:	61fb      	str	r3, [r7, #28]
 80030cc:	f107 021c 	add.w	r2, r7, #28
 80030d0:	f107 0318 	add.w	r3, r7, #24
 80030d4:	4611      	mov	r1, r2
 80030d6:	4618      	mov	r0, r3
 80030d8:	f001 f8e6 	bl	80042a8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 80030dc:	f107 0314 	add.w	r3, r7, #20
 80030e0:	68ba      	ldr	r2, [r7, #8]
 80030e2:	69b9      	ldr	r1, [r7, #24]
 80030e4:	68f8      	ldr	r0, [r7, #12]
 80030e6:	f001 f8ef 	bl	80042c8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 80030ea:	68bb      	ldr	r3, [r7, #8]
 80030ec:	3302      	adds	r3, #2
 80030ee:	60bb      	str	r3, [r7, #8]
 80030f0:	e7e3      	b.n	80030ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 80030f2:	bf00      	nop
 80030f4:	3720      	adds	r7, #32
 80030f6:	46bd      	mov	sp, r7
 80030f8:	bd80      	pop	{r7, pc}

080030fa <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80030fa:	b480      	push	{r7}
 80030fc:	b083      	sub	sp, #12
 80030fe:	af00      	add	r7, sp, #0
 8003100:	6078      	str	r0, [r7, #4]
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	4618      	mov	r0, r3
 8003106:	370c      	adds	r7, #12
 8003108:	46bd      	mov	sp, r7
 800310a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800310e:	4770      	bx	lr

08003110 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8003110:	b480      	push	{r7}
 8003112:	b083      	sub	sp, #12
 8003114:	af00      	add	r7, sp, #0
 8003116:	6078      	str	r0, [r7, #4]
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	4618      	mov	r0, r3
 800311c:	370c      	adds	r7, #12
 800311e:	46bd      	mov	sp, r7
 8003120:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003124:	4770      	bx	lr

08003126 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8003126:	b580      	push	{r7, lr}
 8003128:	b082      	sub	sp, #8
 800312a:	af00      	add	r7, sp, #0
 800312c:	6078      	str	r0, [r7, #4]
 800312e:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8003130:	6839      	ldr	r1, [r7, #0]
 8003132:	6878      	ldr	r0, [r7, #4]
 8003134:	f001 f8fb 	bl	800432e <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	4618      	mov	r0, r3
 800313c:	3708      	adds	r7, #8
 800313e:	46bd      	mov	sp, r7
 8003140:	bd80      	pop	{r7, pc}

08003142 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8003142:	b580      	push	{r7, lr}
 8003144:	b082      	sub	sp, #8
 8003146:	af00      	add	r7, sp, #0
 8003148:	6078      	str	r0, [r7, #4]
 800314a:	6878      	ldr	r0, [r7, #4]
 800314c:	f001 f908 	bl	8004360 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	4618      	mov	r0, r3
 8003154:	3708      	adds	r7, #8
 8003156:	46bd      	mov	sp, r7
 8003158:	bd80      	pop	{r7, pc}

0800315a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>:
      _Rb_tree(const _Compare& __comp,
 800315a:	b590      	push	{r4, r7, lr}
 800315c:	b087      	sub	sp, #28
 800315e:	af00      	add	r7, sp, #0
 8003160:	60f8      	str	r0, [r7, #12]
 8003162:	60b9      	str	r1, [r7, #8]
 8003164:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 8003166:	68fc      	ldr	r4, [r7, #12]
 8003168:	f107 0314 	add.w	r3, r7, #20
 800316c:	6879      	ldr	r1, [r7, #4]
 800316e:	4618      	mov	r0, r3
 8003170:	f001 f8e9 	bl	8004346 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>
 8003174:	f107 0314 	add.w	r3, r7, #20
 8003178:	461a      	mov	r2, r3
 800317a:	68b9      	ldr	r1, [r7, #8]
 800317c:	4620      	mov	r0, r4
 800317e:	f001 f8fb 	bl	8004378 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>
 8003182:	f107 0314 	add.w	r3, r7, #20
 8003186:	4618      	mov	r0, r3
 8003188:	f001 f8ea 	bl	8004360 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 800318c:	68fb      	ldr	r3, [r7, #12]
 800318e:	4618      	mov	r0, r3
 8003190:	371c      	adds	r7, #28
 8003192:	46bd      	mov	sp, r7
 8003194:	bd90      	pop	{r4, r7, pc}

08003196 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8003196:	b580      	push	{r7, lr}
 8003198:	b082      	sub	sp, #8
 800319a:	af00      	add	r7, sp, #0
 800319c:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800319e:	6878      	ldr	r0, [r7, #4]
 80031a0:	f001 f926 	bl	80043f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 80031a4:	4603      	mov	r3, r0
 80031a6:	4619      	mov	r1, r3
 80031a8:	6878      	ldr	r0, [r7, #4]
 80031aa:	f001 f902 	bl	80043b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 80031ae:	687b      	ldr	r3, [r7, #4]
 80031b0:	4618      	mov	r0, r3
 80031b2:	f7ff ffc6 	bl	8003142 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	4618      	mov	r0, r3
 80031ba:	3708      	adds	r7, #8
 80031bc:	46bd      	mov	sp, r7
 80031be:	bd80      	pop	{r7, pc}

080031c0 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>:
      begin() const noexcept { return _M_array; }
 80031c0:	b480      	push	{r7}
 80031c2:	b083      	sub	sp, #12
 80031c4:	af00      	add	r7, sp, #0
 80031c6:	6078      	str	r0, [r7, #4]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	681b      	ldr	r3, [r3, #0]
 80031cc:	4618      	mov	r0, r3
 80031ce:	370c      	adds	r7, #12
 80031d0:	46bd      	mov	sp, r7
 80031d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031d6:	4770      	bx	lr

080031d8 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>:
      end() const noexcept { return begin() + size(); }
 80031d8:	b590      	push	{r4, r7, lr}
 80031da:	b083      	sub	sp, #12
 80031dc:	af00      	add	r7, sp, #0
 80031de:	6078      	str	r0, [r7, #4]
 80031e0:	6878      	ldr	r0, [r7, #4]
 80031e2:	f7ff ffed 	bl	80031c0 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 80031e6:	4604      	mov	r4, r0
 80031e8:	6878      	ldr	r0, [r7, #4]
 80031ea:	f001 f90d 	bl	8004408 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>
 80031ee:	4602      	mov	r2, r0
 80031f0:	4613      	mov	r3, r2
 80031f2:	00db      	lsls	r3, r3, #3
 80031f4:	1a9b      	subs	r3, r3, r2
 80031f6:	009b      	lsls	r3, r3, #2
 80031f8:	4423      	add	r3, r4
 80031fa:	4618      	mov	r0, r3
 80031fc:	370c      	adds	r7, #12
 80031fe:	46bd      	mov	sp, r7
 8003200:	bd90      	pop	{r4, r7, pc}

08003202 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 8003202:	b580      	push	{r7, lr}
 8003204:	b088      	sub	sp, #32
 8003206:	af00      	add	r7, sp, #0
 8003208:	60f8      	str	r0, [r7, #12]
 800320a:	60b9      	str	r1, [r7, #8]
 800320c:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 800320e:	f107 0314 	add.w	r3, r7, #20
 8003212:	68f9      	ldr	r1, [r7, #12]
 8003214:	4618      	mov	r0, r3
 8003216:	f001 f903 	bl	8004420 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  for (; __first != __last; ++__first)
 800321a:	68ba      	ldr	r2, [r7, #8]
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	429a      	cmp	r2, r3
 8003220:	d017      	beq.n	8003252 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 8003222:	68f8      	ldr	r0, [r7, #12]
 8003224:	f001 f90b 	bl	800443e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8003228:	4603      	mov	r3, r0
 800322a:	61fb      	str	r3, [r7, #28]
 800322c:	f107 021c 	add.w	r2, r7, #28
 8003230:	f107 0318 	add.w	r3, r7, #24
 8003234:	4611      	mov	r1, r2
 8003236:	4618      	mov	r0, r3
 8003238:	f001 f912 	bl	8004460 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 800323c:	f107 0314 	add.w	r3, r7, #20
 8003240:	68ba      	ldr	r2, [r7, #8]
 8003242:	69b9      	ldr	r1, [r7, #24]
 8003244:	68f8      	ldr	r0, [r7, #12]
 8003246:	f001 f91b 	bl	8004480 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>
	  for (; __first != __last; ++__first)
 800324a:	68bb      	ldr	r3, [r7, #8]
 800324c:	331c      	adds	r3, #28
 800324e:	60bb      	str	r3, [r7, #8]
 8003250:	e7e3      	b.n	800321a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x18>
	}
 8003252:	bf00      	nop
 8003254:	3720      	adds	r7, #32
 8003256:	46bd      	mov	sp, r7
 8003258:	bd80      	pop	{r7, pc}

0800325a <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800325a:	b480      	push	{r7}
 800325c:	b083      	sub	sp, #12
 800325e:	af00      	add	r7, sp, #0
 8003260:	6078      	str	r0, [r7, #4]
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	4618      	mov	r0, r3
 8003266:	370c      	adds	r7, #12
 8003268:	46bd      	mov	sp, r7
 800326a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800326e:	4770      	bx	lr

08003270 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8003270:	b480      	push	{r7}
 8003272:	b083      	sub	sp, #12
 8003274:	af00      	add	r7, sp, #0
 8003276:	6078      	str	r0, [r7, #4]
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	4618      	mov	r0, r3
 800327c:	370c      	adds	r7, #12
 800327e:	46bd      	mov	sp, r7
 8003280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003284:	4770      	bx	lr

08003286 <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8003286:	b580      	push	{r7, lr}
 8003288:	b082      	sub	sp, #8
 800328a:	af00      	add	r7, sp, #0
 800328c:	6078      	str	r0, [r7, #4]
 800328e:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8003290:	6839      	ldr	r1, [r7, #0]
 8003292:	6878      	ldr	r0, [r7, #4]
 8003294:	f001 f927 	bl	80044e6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	4618      	mov	r0, r3
 800329c:	3708      	adds	r7, #8
 800329e:	46bd      	mov	sp, r7
 80032a0:	bd80      	pop	{r7, pc}

080032a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
	struct _Rb_tree_impl
 80032a2:	b580      	push	{r7, lr}
 80032a4:	b082      	sub	sp, #8
 80032a6:	af00      	add	r7, sp, #0
 80032a8:	6078      	str	r0, [r7, #4]
 80032aa:	6878      	ldr	r0, [r7, #4]
 80032ac:	f001 f934 	bl	8004518 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	4618      	mov	r0, r3
 80032b4:	3708      	adds	r7, #8
 80032b6:	46bd      	mov	sp, r7
 80032b8:	bd80      	pop	{r7, pc}

080032ba <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree(const _Compare& __comp,
 80032ba:	b590      	push	{r4, r7, lr}
 80032bc:	b087      	sub	sp, #28
 80032be:	af00      	add	r7, sp, #0
 80032c0:	60f8      	str	r0, [r7, #12]
 80032c2:	60b9      	str	r1, [r7, #8]
 80032c4:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 80032c6:	68fc      	ldr	r4, [r7, #12]
 80032c8:	f107 0314 	add.w	r3, r7, #20
 80032cc:	6879      	ldr	r1, [r7, #4]
 80032ce:	4618      	mov	r0, r3
 80032d0:	f001 f915 	bl	80044fe <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>
 80032d4:	f107 0314 	add.w	r3, r7, #20
 80032d8:	461a      	mov	r2, r3
 80032da:	68b9      	ldr	r1, [r7, #8]
 80032dc:	4620      	mov	r0, r4
 80032de:	f001 f927 	bl	8004530 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 80032e2:	f107 0314 	add.w	r3, r7, #20
 80032e6:	4618      	mov	r0, r3
 80032e8:	f001 f916 	bl	8004518 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	4618      	mov	r0, r3
 80032f0:	371c      	adds	r7, #28
 80032f2:	46bd      	mov	sp, r7
 80032f4:	bd90      	pop	{r4, r7, pc}

080032f6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80032f6:	b580      	push	{r7, lr}
 80032f8:	b082      	sub	sp, #8
 80032fa:	af00      	add	r7, sp, #0
 80032fc:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80032fe:	6878      	ldr	r0, [r7, #4]
 8003300:	f001 f952 	bl	80045a8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8003304:	4603      	mov	r3, r0
 8003306:	4619      	mov	r1, r3
 8003308:	6878      	ldr	r0, [r7, #4]
 800330a:	f001 f92e 	bl	800456a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 800330e:	687b      	ldr	r3, [r7, #4]
 8003310:	4618      	mov	r0, r3
 8003312:	f7ff ffc6 	bl	80032a2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 8003316:	687b      	ldr	r3, [r7, #4]
 8003318:	4618      	mov	r0, r3
 800331a:	3708      	adds	r7, #8
 800331c:	46bd      	mov	sp, r7
 800331e:	bd80      	pop	{r7, pc}

08003320 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>:
      begin() const noexcept { return _M_array; }
 8003320:	b480      	push	{r7}
 8003322:	b083      	sub	sp, #12
 8003324:	af00      	add	r7, sp, #0
 8003326:	6078      	str	r0, [r7, #4]
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	4618      	mov	r0, r3
 800332e:	370c      	adds	r7, #12
 8003330:	46bd      	mov	sp, r7
 8003332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003336:	4770      	bx	lr

08003338 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>:
      end() const noexcept { return begin() + size(); }
 8003338:	b590      	push	{r4, r7, lr}
 800333a:	b083      	sub	sp, #12
 800333c:	af00      	add	r7, sp, #0
 800333e:	6078      	str	r0, [r7, #4]
 8003340:	6878      	ldr	r0, [r7, #4]
 8003342:	f7ff ffed 	bl	8003320 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 8003346:	4604      	mov	r4, r0
 8003348:	6878      	ldr	r0, [r7, #4]
 800334a:	f001 f939 	bl	80045c0 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>
 800334e:	4602      	mov	r2, r0
 8003350:	4613      	mov	r3, r2
 8003352:	005b      	lsls	r3, r3, #1
 8003354:	4413      	add	r3, r2
 8003356:	4423      	add	r3, r4
 8003358:	4618      	mov	r0, r3
 800335a:	370c      	adds	r7, #12
 800335c:	46bd      	mov	sp, r7
 800335e:	bd90      	pop	{r4, r7, pc}

08003360 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 8003360:	b580      	push	{r7, lr}
 8003362:	b088      	sub	sp, #32
 8003364:	af00      	add	r7, sp, #0
 8003366:	60f8      	str	r0, [r7, #12]
 8003368:	60b9      	str	r1, [r7, #8]
 800336a:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 800336c:	f107 0314 	add.w	r3, r7, #20
 8003370:	68f9      	ldr	r1, [r7, #12]
 8003372:	4618      	mov	r0, r3
 8003374:	f001 f930 	bl	80045d8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 8003378:	68ba      	ldr	r2, [r7, #8]
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	429a      	cmp	r2, r3
 800337e:	d017      	beq.n	80033b0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 8003380:	68f8      	ldr	r0, [r7, #12]
 8003382:	f001 f938 	bl	80045f6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8003386:	4603      	mov	r3, r0
 8003388:	61fb      	str	r3, [r7, #28]
 800338a:	f107 021c 	add.w	r2, r7, #28
 800338e:	f107 0318 	add.w	r3, r7, #24
 8003392:	4611      	mov	r1, r2
 8003394:	4618      	mov	r0, r3
 8003396:	f001 f93f 	bl	8004618 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 800339a:	f107 0314 	add.w	r3, r7, #20
 800339e:	68ba      	ldr	r2, [r7, #8]
 80033a0:	69b9      	ldr	r1, [r7, #24]
 80033a2:	68f8      	ldr	r0, [r7, #12]
 80033a4:	f001 f948 	bl	8004638 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 80033a8:	68bb      	ldr	r3, [r7, #8]
 80033aa:	3303      	adds	r3, #3
 80033ac:	60bb      	str	r3, [r7, #8]
 80033ae:	e7e3      	b.n	8003378 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 80033b0:	bf00      	nop
 80033b2:	3720      	adds	r7, #32
 80033b4:	46bd      	mov	sp, r7
 80033b6:	bd80      	pop	{r7, pc}

080033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>:
      void _M_reset()
 80033b8:	b580      	push	{r7, lr}
 80033ba:	b082      	sub	sp, #8
 80033bc:	af00      	add	r7, sp, #0
 80033be:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 80033c0:	6878      	ldr	r0, [r7, #4]
 80033c2:	f001 fb5d 	bl	8004a80 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEv>
	_M_index = variant_npos;
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	22ff      	movs	r2, #255	; 0xff
 80033ca:	761a      	strb	r2, [r3, #24]
      }
 80033cc:	bf00      	nop
 80033ce:	3708      	adds	r7, #8
 80033d0:	46bd      	mov	sp, r7
 80033d2:	bd80      	pop	{r7, pc}

080033d4 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 80033d4:	b580      	push	{r7, lr}
 80033d6:	b082      	sub	sp, #8
 80033d8:	af00      	add	r7, sp, #0
 80033da:	6078      	str	r0, [r7, #4]
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	4618      	mov	r0, r3
 80033e0:	f001 fb60 	bl	8004aa4 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	4618      	mov	r0, r3
 80033e8:	3708      	adds	r7, #8
 80033ea:	46bd      	mov	sp, r7
 80033ec:	bd80      	pop	{r7, pc}

080033ee <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 80033ee:	b580      	push	{r7, lr}
 80033f0:	b082      	sub	sp, #8
 80033f2:	af00      	add	r7, sp, #0
 80033f4:	6078      	str	r0, [r7, #4]
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	4618      	mov	r0, r3
 80033fa:	f7ff ffeb 	bl	80033d4 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	22ff      	movs	r2, #255	; 0xff
 8003402:	761a      	strb	r2, [r3, #24]
 8003404:	687b      	ldr	r3, [r7, #4]
 8003406:	4618      	mov	r0, r3
 8003408:	3708      	adds	r7, #8
 800340a:	46bd      	mov	sp, r7
 800340c:	bd80      	pop	{r7, pc}

0800340e <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800340e:	b480      	push	{r7}
 8003410:	b083      	sub	sp, #12
 8003412:	af00      	add	r7, sp, #0
 8003414:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 8003416:	687b      	ldr	r3, [r7, #4]
    }
 8003418:	4618      	mov	r0, r3
 800341a:	370c      	adds	r7, #12
 800341c:	46bd      	mov	sp, r7
 800341e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003422:	4770      	bx	lr

08003424 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003424:	b580      	push	{r7, lr}
 8003426:	b082      	sub	sp, #8
 8003428:	af00      	add	r7, sp, #0
 800342a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800342c:	6878      	ldr	r0, [r7, #4]
 800342e:	f000 fd68 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003432:	4603      	mov	r3, r0
 8003434:	4618      	mov	r0, r3
 8003436:	f7ff fa31 	bl	800289c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800343a:	4603      	mov	r3, r0
	}
 800343c:	4618      	mov	r0, r3
 800343e:	3708      	adds	r7, #8
 8003440:	46bd      	mov	sp, r7
 8003442:	bd80      	pop	{r7, pc}

08003444 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003444:	b5b0      	push	{r4, r5, r7, lr}
 8003446:	b082      	sub	sp, #8
 8003448:	af00      	add	r7, sp, #0
 800344a:	6078      	str	r0, [r7, #4]
 800344c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800344e:	6878      	ldr	r0, [r7, #4]
 8003450:	f001 fb40 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003454:	4604      	mov	r4, r0
 8003456:	6838      	ldr	r0, [r7, #0]
 8003458:	f000 fd53 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800345c:	4603      	mov	r3, r0
 800345e:	4618      	mov	r0, r3
 8003460:	f7ff ffe0 	bl	8003424 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESV_EEDcSL_>
 8003464:	4603      	mov	r3, r0
 8003466:	4619      	mov	r1, r3
 8003468:	4620      	mov	r0, r4
 800346a:	f001 fb3e 	bl	8004aea <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 800346e:	462b      	mov	r3, r5
      }
 8003470:	4618      	mov	r0, r3
 8003472:	3708      	adds	r7, #8
 8003474:	46bd      	mov	sp, r7
 8003476:	bdb0      	pop	{r4, r5, r7, pc}

08003478 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003478:	b5b0      	push	{r4, r5, r7, lr}
 800347a:	b082      	sub	sp, #8
 800347c:	af00      	add	r7, sp, #0
 800347e:	6078      	str	r0, [r7, #4]
 8003480:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003482:	6878      	ldr	r0, [r7, #4]
 8003484:	f001 fb26 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003488:	4604      	mov	r4, r0
 800348a:	6838      	ldr	r0, [r7, #0]
 800348c:	f000 fd39 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003490:	4603      	mov	r3, r0
 8003492:	4619      	mov	r1, r3
 8003494:	4620      	mov	r0, r4
 8003496:	f7ff ffd5 	bl	8003444 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 800349a:	462b      	mov	r3, r5
      }
 800349c:	4618      	mov	r0, r3
 800349e:	3708      	adds	r7, #8
 80034a0:	46bd      	mov	sp, r7
 80034a2:	bdb0      	pop	{r4, r5, r7, pc}

080034a4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80034a4:	b5b0      	push	{r4, r5, r7, lr}
 80034a6:	b082      	sub	sp, #8
 80034a8:	af00      	add	r7, sp, #0
 80034aa:	6078      	str	r0, [r7, #4]
 80034ac:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80034ae:	6878      	ldr	r0, [r7, #4]
 80034b0:	f001 fb10 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80034b4:	4604      	mov	r4, r0
 80034b6:	6838      	ldr	r0, [r7, #0]
 80034b8:	f000 fd23 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80034bc:	4603      	mov	r3, r0
 80034be:	4619      	mov	r1, r3
 80034c0:	4620      	mov	r0, r4
 80034c2:	f7ff ffd9 	bl	8003478 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 80034c6:	462b      	mov	r3, r5
      }
 80034c8:	4618      	mov	r0, r3
 80034ca:	3708      	adds	r7, #8
 80034cc:	46bd      	mov	sp, r7
 80034ce:	bdb0      	pop	{r4, r5, r7, pc}

080034d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80034d0:	b580      	push	{r7, lr}
 80034d2:	b082      	sub	sp, #8
 80034d4:	af00      	add	r7, sp, #0
 80034d6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80034d8:	6878      	ldr	r0, [r7, #4]
 80034da:	f000 fd12 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80034de:	4603      	mov	r3, r0
 80034e0:	4618      	mov	r0, r3
 80034e2:	f7ff fa67 	bl	80029b4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80034e6:	4603      	mov	r3, r0
	}
 80034e8:	4618      	mov	r0, r3
 80034ea:	3708      	adds	r7, #8
 80034ec:	46bd      	mov	sp, r7
 80034ee:	bd80      	pop	{r7, pc}

080034f0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80034f0:	b5b0      	push	{r4, r5, r7, lr}
 80034f2:	b082      	sub	sp, #8
 80034f4:	af00      	add	r7, sp, #0
 80034f6:	6078      	str	r0, [r7, #4]
 80034f8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80034fa:	6878      	ldr	r0, [r7, #4]
 80034fc:	f001 faea 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003500:	4604      	mov	r4, r0
 8003502:	6838      	ldr	r0, [r7, #0]
 8003504:	f000 fcfd 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003508:	4603      	mov	r3, r0
 800350a:	4618      	mov	r0, r3
 800350c:	f7ff ffe0 	bl	80034d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESV_EEDcSL_>
 8003510:	4603      	mov	r3, r0
 8003512:	4619      	mov	r1, r3
 8003514:	4620      	mov	r0, r4
 8003516:	f001 faff 	bl	8004b18 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 800351a:	462b      	mov	r3, r5
      }
 800351c:	4618      	mov	r0, r3
 800351e:	3708      	adds	r7, #8
 8003520:	46bd      	mov	sp, r7
 8003522:	bdb0      	pop	{r4, r5, r7, pc}

08003524 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003524:	b5b0      	push	{r4, r5, r7, lr}
 8003526:	b082      	sub	sp, #8
 8003528:	af00      	add	r7, sp, #0
 800352a:	6078      	str	r0, [r7, #4]
 800352c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800352e:	6878      	ldr	r0, [r7, #4]
 8003530:	f001 fad0 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003534:	4604      	mov	r4, r0
 8003536:	6838      	ldr	r0, [r7, #0]
 8003538:	f000 fce3 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800353c:	4603      	mov	r3, r0
 800353e:	4619      	mov	r1, r3
 8003540:	4620      	mov	r0, r4
 8003542:	f7ff ffd5 	bl	80034f0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8003546:	462b      	mov	r3, r5
      }
 8003548:	4618      	mov	r0, r3
 800354a:	3708      	adds	r7, #8
 800354c:	46bd      	mov	sp, r7
 800354e:	bdb0      	pop	{r4, r5, r7, pc}

08003550 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003550:	b5b0      	push	{r4, r5, r7, lr}
 8003552:	b082      	sub	sp, #8
 8003554:	af00      	add	r7, sp, #0
 8003556:	6078      	str	r0, [r7, #4]
 8003558:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800355a:	6878      	ldr	r0, [r7, #4]
 800355c:	f001 faba 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003560:	4604      	mov	r4, r0
 8003562:	6838      	ldr	r0, [r7, #0]
 8003564:	f000 fccd 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003568:	4603      	mov	r3, r0
 800356a:	4619      	mov	r1, r3
 800356c:	4620      	mov	r0, r4
 800356e:	f7ff ffd9 	bl	8003524 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8003572:	462b      	mov	r3, r5
      }
 8003574:	4618      	mov	r0, r3
 8003576:	3708      	adds	r7, #8
 8003578:	46bd      	mov	sp, r7
 800357a:	bdb0      	pop	{r4, r5, r7, pc}

0800357c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800357c:	b580      	push	{r7, lr}
 800357e:	b082      	sub	sp, #8
 8003580:	af00      	add	r7, sp, #0
 8003582:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8003584:	6878      	ldr	r0, [r7, #4]
 8003586:	f000 fcbc 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800358a:	4603      	mov	r3, r0
 800358c:	4618      	mov	r0, r3
 800358e:	f7ff faaf 	bl	8002af0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8003592:	4603      	mov	r3, r0
	}
 8003594:	4618      	mov	r0, r3
 8003596:	3708      	adds	r7, #8
 8003598:	46bd      	mov	sp, r7
 800359a:	bd80      	pop	{r7, pc}

0800359c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800359c:	b5b0      	push	{r4, r5, r7, lr}
 800359e:	b082      	sub	sp, #8
 80035a0:	af00      	add	r7, sp, #0
 80035a2:	6078      	str	r0, [r7, #4]
 80035a4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80035a6:	6878      	ldr	r0, [r7, #4]
 80035a8:	f001 fa94 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80035ac:	4604      	mov	r4, r0
 80035ae:	6838      	ldr	r0, [r7, #0]
 80035b0:	f000 fca7 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80035b4:	4603      	mov	r3, r0
 80035b6:	4618      	mov	r0, r3
 80035b8:	f7ff ffe0 	bl	800357c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESV_EEDcSL_>
 80035bc:	4603      	mov	r3, r0
 80035be:	4619      	mov	r1, r3
 80035c0:	4620      	mov	r0, r4
 80035c2:	f001 fac0 	bl	8004b46 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 80035c6:	462b      	mov	r3, r5
      }
 80035c8:	4618      	mov	r0, r3
 80035ca:	3708      	adds	r7, #8
 80035cc:	46bd      	mov	sp, r7
 80035ce:	bdb0      	pop	{r4, r5, r7, pc}

080035d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80035d0:	b5b0      	push	{r4, r5, r7, lr}
 80035d2:	b082      	sub	sp, #8
 80035d4:	af00      	add	r7, sp, #0
 80035d6:	6078      	str	r0, [r7, #4]
 80035d8:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80035da:	6878      	ldr	r0, [r7, #4]
 80035dc:	f001 fa7a 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80035e0:	4604      	mov	r4, r0
 80035e2:	6838      	ldr	r0, [r7, #0]
 80035e4:	f000 fc8d 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80035e8:	4603      	mov	r3, r0
 80035ea:	4619      	mov	r1, r3
 80035ec:	4620      	mov	r0, r4
 80035ee:	f7ff ffd5 	bl	800359c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 80035f2:	462b      	mov	r3, r5
      }
 80035f4:	4618      	mov	r0, r3
 80035f6:	3708      	adds	r7, #8
 80035f8:	46bd      	mov	sp, r7
 80035fa:	bdb0      	pop	{r4, r5, r7, pc}

080035fc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80035fc:	b5b0      	push	{r4, r5, r7, lr}
 80035fe:	b082      	sub	sp, #8
 8003600:	af00      	add	r7, sp, #0
 8003602:	6078      	str	r0, [r7, #4]
 8003604:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8003606:	6878      	ldr	r0, [r7, #4]
 8003608:	f001 fa64 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800360c:	4604      	mov	r4, r0
 800360e:	6838      	ldr	r0, [r7, #0]
 8003610:	f000 fc77 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003614:	4603      	mov	r3, r0
 8003616:	4619      	mov	r1, r3
 8003618:	4620      	mov	r0, r4
 800361a:	f7ff ffd9 	bl	80035d0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 800361e:	462b      	mov	r3, r5
      }
 8003620:	4618      	mov	r0, r3
 8003622:	3708      	adds	r7, #8
 8003624:	46bd      	mov	sp, r7
 8003626:	bdb0      	pop	{r4, r5, r7, pc}

08003628 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8003628:	b580      	push	{r7, lr}
 800362a:	b082      	sub	sp, #8
 800362c:	af00      	add	r7, sp, #0
 800362e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8003630:	6878      	ldr	r0, [r7, #4]
 8003632:	f000 fc66 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003636:	4603      	mov	r3, r0
 8003638:	4618      	mov	r0, r3
 800363a:	f7ff fb09 	bl	8002c50 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800363e:	4603      	mov	r3, r0
	}
 8003640:	4618      	mov	r0, r3
 8003642:	3708      	adds	r7, #8
 8003644:	46bd      	mov	sp, r7
 8003646:	bd80      	pop	{r7, pc}

08003648 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8003648:	b5b0      	push	{r4, r5, r7, lr}
 800364a:	b082      	sub	sp, #8
 800364c:	af00      	add	r7, sp, #0
 800364e:	6078      	str	r0, [r7, #4]
 8003650:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8003652:	6878      	ldr	r0, [r7, #4]
 8003654:	f001 fa3e 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003658:	4604      	mov	r4, r0
 800365a:	6838      	ldr	r0, [r7, #0]
 800365c:	f000 fc51 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003660:	4603      	mov	r3, r0
 8003662:	4618      	mov	r0, r3
 8003664:	f7ff ffe0 	bl	8003628 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESV_EEDcSL_>
 8003668:	4603      	mov	r3, r0
 800366a:	4619      	mov	r1, r3
 800366c:	4620      	mov	r0, r4
 800366e:	f001 fa81 	bl	8004b74 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 8003672:	462b      	mov	r3, r5
      }
 8003674:	4618      	mov	r0, r3
 8003676:	3708      	adds	r7, #8
 8003678:	46bd      	mov	sp, r7
 800367a:	bdb0      	pop	{r4, r5, r7, pc}

0800367c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800367c:	b5b0      	push	{r4, r5, r7, lr}
 800367e:	b082      	sub	sp, #8
 8003680:	af00      	add	r7, sp, #0
 8003682:	6078      	str	r0, [r7, #4]
 8003684:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003686:	6878      	ldr	r0, [r7, #4]
 8003688:	f001 fa24 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 800368c:	4604      	mov	r4, r0
 800368e:	6838      	ldr	r0, [r7, #0]
 8003690:	f000 fc37 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003694:	4603      	mov	r3, r0
 8003696:	4619      	mov	r1, r3
 8003698:	4620      	mov	r0, r4
 800369a:	f7ff ffd5 	bl	8003648 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 800369e:	462b      	mov	r3, r5
      }
 80036a0:	4618      	mov	r0, r3
 80036a2:	3708      	adds	r7, #8
 80036a4:	46bd      	mov	sp, r7
 80036a6:	bdb0      	pop	{r4, r5, r7, pc}

080036a8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80036a8:	b5b0      	push	{r4, r5, r7, lr}
 80036aa:	b082      	sub	sp, #8
 80036ac:	af00      	add	r7, sp, #0
 80036ae:	6078      	str	r0, [r7, #4]
 80036b0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80036b2:	6878      	ldr	r0, [r7, #4]
 80036b4:	f001 fa0e 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80036b8:	4604      	mov	r4, r0
 80036ba:	6838      	ldr	r0, [r7, #0]
 80036bc:	f000 fc21 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80036c0:	4603      	mov	r3, r0
 80036c2:	4619      	mov	r1, r3
 80036c4:	4620      	mov	r0, r4
 80036c6:	f7ff ffd9 	bl	800367c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 80036ca:	462b      	mov	r3, r5
      }
 80036cc:	4618      	mov	r0, r3
 80036ce:	3708      	adds	r7, #8
 80036d0:	46bd      	mov	sp, r7
 80036d2:	bdb0      	pop	{r4, r5, r7, pc}

080036d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESV_EEDcSL_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80036d4:	b580      	push	{r7, lr}
 80036d6:	b082      	sub	sp, #8
 80036d8:	af00      	add	r7, sp, #0
 80036da:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80036dc:	6878      	ldr	r0, [r7, #4]
 80036de:	f000 fc10 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80036e2:	4603      	mov	r3, r0
 80036e4:	4618      	mov	r0, r3
 80036e6:	f7ff fb75 	bl	8002dd4 <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80036ea:	4603      	mov	r3, r0
	}
 80036ec:	4618      	mov	r0, r3
 80036ee:	3708      	adds	r7, #8
 80036f0:	46bd      	mov	sp, r7
 80036f2:	bd80      	pop	{r7, pc}

080036f4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SV_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80036f4:	b5b0      	push	{r4, r5, r7, lr}
 80036f6:	b082      	sub	sp, #8
 80036f8:	af00      	add	r7, sp, #0
 80036fa:	6078      	str	r0, [r7, #4]
 80036fc:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80036fe:	6878      	ldr	r0, [r7, #4]
 8003700:	f001 f9e8 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003704:	4604      	mov	r4, r0
 8003706:	6838      	ldr	r0, [r7, #0]
 8003708:	f000 fbfb 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800370c:	4603      	mov	r3, r0
 800370e:	4618      	mov	r0, r3
 8003710:	f7ff ffe0 	bl	80036d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESV_EEDcSL_>
 8003714:	4603      	mov	r3, r0
 8003716:	4619      	mov	r1, r3
 8003718:	4620      	mov	r0, r4
 800371a:	f001 fa42 	bl	8004ba2 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSC_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>
		std::forward<_Variants>(__vars))...);
 800371e:	462b      	mov	r3, r5
      }
 8003720:	4618      	mov	r0, r3
 8003722:	3708      	adds	r7, #8
 8003724:	46bd      	mov	sp, r7
 8003726:	bdb0      	pop	{r4, r5, r7, pc}

08003728 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SV_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003728:	b5b0      	push	{r4, r5, r7, lr}
 800372a:	b082      	sub	sp, #8
 800372c:	af00      	add	r7, sp, #0
 800372e:	6078      	str	r0, [r7, #4]
 8003730:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8003732:	6878      	ldr	r0, [r7, #4]
 8003734:	f001 f9ce 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003738:	4604      	mov	r4, r0
 800373a:	6838      	ldr	r0, [r7, #0]
 800373c:	f000 fbe1 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003740:	4603      	mov	r3, r0
 8003742:	4619      	mov	r1, r3
 8003744:	4620      	mov	r0, r4
 8003746:	f7ff ffd5 	bl	80036f4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESR_SV_>
				   std::forward<_Variants>(__vars)...);
 800374a:	462b      	mov	r3, r5
      }
 800374c:	4618      	mov	r0, r3
 800374e:	3708      	adds	r7, #8
 8003750:	46bd      	mov	sp, r7
 8003752:	bdb0      	pop	{r4, r5, r7, pc}

08003754 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESR_SV_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8003754:	b5b0      	push	{r4, r5, r7, lr}
 8003756:	b082      	sub	sp, #8
 8003758:	af00      	add	r7, sp, #0
 800375a:	6078      	str	r0, [r7, #4]
 800375c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800375e:	6878      	ldr	r0, [r7, #4]
 8003760:	f001 f9b8 	bl	8004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8003764:	4604      	mov	r4, r0
 8003766:	6838      	ldr	r0, [r7, #0]
 8003768:	f000 fbcb 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800376c:	4603      	mov	r3, r0
 800376e:	4619      	mov	r1, r3
 8003770:	4620      	mov	r0, r4
 8003772:	f7ff ffd9 	bl	8003728 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Copy_ctor_baseILb0EJifbSA_SE_EEERKSG_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSV_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESR_SV_>
				   std::forward<_Variants>(__vars)...);
 8003776:	462b      	mov	r3, r5
      }
 8003778:	4618      	mov	r0, r3
 800377a:	3708      	adds	r7, #8
 800377c:	46bd      	mov	sp, r7
 800377e:	bdb0      	pop	{r4, r5, r7, pc}

08003780 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSW_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8003780:	b580      	push	{r7, lr}
 8003782:	b082      	sub	sp, #8
 8003784:	af00      	add	r7, sp, #0
 8003786:	6078      	str	r0, [r7, #4]
 8003788:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800378a:	683b      	ldr	r3, [r7, #0]
 800378c:	009b      	lsls	r3, r3, #2
 800378e:	687a      	ldr	r2, [r7, #4]
 8003790:	4413      	add	r3, r2
 8003792:	4618      	mov	r0, r3
 8003794:	f001 fa1c 	bl	8004bd0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8003798:	4603      	mov	r3, r0
	}
 800379a:	4618      	mov	r0, r3
 800379c:	3708      	adds	r7, #8
 800379e:	46bd      	mov	sp, r7
 80037a0:	bd80      	pop	{r7, pc}
	...

080037a4 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 80037a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037a6:	b085      	sub	sp, #20
 80037a8:	af00      	add	r7, sp, #0
 80037aa:	6078      	str	r0, [r7, #4]
 80037ac:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 80037ae:	4b0f      	ldr	r3, [pc, #60]	; (80037ec <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_+0x48>)
 80037b0:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80037b2:	6838      	ldr	r0, [r7, #0]
 80037b4:	f7fe f9b0 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80037b8:	4603      	mov	r3, r0
 80037ba:	4619      	mov	r1, r3
 80037bc:	68f8      	ldr	r0, [r7, #12]
 80037be:	f7ff ffdf 	bl	8003780 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSW_jDpT_>
 80037c2:	4603      	mov	r3, r0
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80037c8:	68bc      	ldr	r4, [r7, #8]
 80037ca:	6878      	ldr	r0, [r7, #4]
 80037cc:	f001 fa0b 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 80037d0:	4605      	mov	r5, r0
 80037d2:	6838      	ldr	r0, [r7, #0]
 80037d4:	f000 fb95 	bl	8003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>
 80037d8:	4603      	mov	r3, r0
 80037da:	4619      	mov	r1, r3
 80037dc:	4628      	mov	r0, r5
 80037de:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80037e0:	4633      	mov	r3, r6
    }
 80037e2:	4618      	mov	r0, r3
 80037e4:	3714      	adds	r7, #20
 80037e6:	46bd      	mov	sp, r7
 80037e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037ea:	bf00      	nop
 80037ec:	08029fd8 	.word	0x08029fd8

080037f0 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 80037f0:	b580      	push	{r7, lr}
 80037f2:	b084      	sub	sp, #16
 80037f4:	af00      	add	r7, sp, #0
 80037f6:	6078      	str	r0, [r7, #4]
 80037f8:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 80037fa:	683b      	ldr	r3, [r7, #0]
 80037fc:	7e1a      	ldrb	r2, [r3, #24]
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	60fb      	str	r3, [r7, #12]
 8003806:	6838      	ldr	r0, [r7, #0]
 8003808:	f001 f959 	bl	8004abe <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>
 800380c:	4603      	mov	r3, r0
 800380e:	4618      	mov	r0, r3
 8003810:	f7ff fdfd 	bl	800340e <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8003814:	4602      	mov	r2, r0
 8003816:	f107 030c 	add.w	r3, r7, #12
 800381a:	4611      	mov	r1, r2
 800381c:	4618      	mov	r0, r3
 800381e:	f7ff ffc1 	bl	80037a4 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SC_EEEEDcSL_DpOT2_>
    }
 8003822:	bf00      	nop
 8003824:	3710      	adds	r7, #16
 8003826:	46bd      	mov	sp, r7
 8003828:	bd80      	pop	{r7, pc}

0800382a <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800382a:	b480      	push	{r7}
 800382c:	b083      	sub	sp, #12
 800382e:	af00      	add	r7, sp, #0
 8003830:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	4618      	mov	r0, r3
 8003836:	370c      	adds	r7, #12
 8003838:	46bd      	mov	sp, r7
 800383a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800383e:	4770      	bx	lr

08003840 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    { return (*std::forward<_Tp>(__t)).*__f; }

  /// Invoke a callable object.
  template<typename _Callable, typename... _Args>
    constexpr typename __invoke_result<_Callable, _Args...>::type
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003844:	b084      	sub	sp, #16
 8003846:	af00      	add	r7, sp, #0
 8003848:	60f8      	str	r0, [r7, #12]
 800384a:	60b9      	str	r1, [r7, #8]
 800384c:	607a      	str	r2, [r7, #4]
    noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800384e:	68f8      	ldr	r0, [r7, #12]
 8003850:	f000 f8f3 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8003854:	4604      	mov	r4, r0
 8003856:	68b8      	ldr	r0, [r7, #8]
 8003858:	f001 f9d0 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800385c:	4605      	mov	r5, r0
 800385e:	6878      	ldr	r0, [r7, #4]
 8003860:	f001 f9d7 	bl	8004c12 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003864:	4603      	mov	r3, r0
 8003866:	462a      	mov	r2, r5
 8003868:	4621      	mov	r1, r4
 800386a:	4630      	mov	r0, r6
 800386c:	f001 f9dc 	bl	8004c28 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8003870:	4643      	mov	r3, r8
    }
 8003872:	4618      	mov	r0, r3
 8003874:	3710      	adds	r7, #16
 8003876:	46bd      	mov	sp, r7
 8003878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800387c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800387c:	b480      	push	{r7}
 800387e:	b083      	sub	sp, #12
 8003880:	af00      	add	r7, sp, #0
 8003882:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	4618      	mov	r0, r3
 8003888:	370c      	adds	r7, #12
 800388a:	46bd      	mov	sp, r7
 800388c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003890:	4770      	bx	lr

08003892 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8003892:	b480      	push	{r7}
 8003894:	b083      	sub	sp, #12
 8003896:	af00      	add	r7, sp, #0
 8003898:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	4618      	mov	r0, r3
 800389e:	370c      	adds	r7, #12
 80038a0:	46bd      	mov	sp, r7
 80038a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038a6:	4770      	bx	lr

080038a8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80038a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038ac:	b084      	sub	sp, #16
 80038ae:	af00      	add	r7, sp, #0
 80038b0:	60f8      	str	r0, [r7, #12]
 80038b2:	60b9      	str	r1, [r7, #8]
 80038b4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80038b6:	68f8      	ldr	r0, [r7, #12]
 80038b8:	f000 f8bf 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80038bc:	4604      	mov	r4, r0
 80038be:	68b8      	ldr	r0, [r7, #8]
 80038c0:	f001 f9d0 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80038c4:	4605      	mov	r5, r0
 80038c6:	6878      	ldr	r0, [r7, #4]
 80038c8:	f001 f9d7 	bl	8004c7a <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80038cc:	4603      	mov	r3, r0
 80038ce:	462a      	mov	r2, r5
 80038d0:	4621      	mov	r1, r4
 80038d2:	4630      	mov	r0, r6
 80038d4:	f001 f9dc 	bl	8004c90 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 80038d8:	4643      	mov	r3, r8
    }
 80038da:	4618      	mov	r0, r3
 80038dc:	3710      	adds	r7, #16
 80038de:	46bd      	mov	sp, r7
 80038e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080038e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80038e4:	b480      	push	{r7}
 80038e6:	b083      	sub	sp, #12
 80038e8:	af00      	add	r7, sp, #0
 80038ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	4618      	mov	r0, r3
 80038f0:	370c      	adds	r7, #12
 80038f2:	46bd      	mov	sp, r7
 80038f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038f8:	4770      	bx	lr

080038fa <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 80038fa:	b480      	push	{r7}
 80038fc:	b083      	sub	sp, #12
 80038fe:	af00      	add	r7, sp, #0
 8003900:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	4618      	mov	r0, r3
 8003906:	370c      	adds	r7, #12
 8003908:	46bd      	mov	sp, r7
 800390a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800390e:	4770      	bx	lr

08003910 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003910:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003914:	b084      	sub	sp, #16
 8003916:	af00      	add	r7, sp, #0
 8003918:	60f8      	str	r0, [r7, #12]
 800391a:	60b9      	str	r1, [r7, #8]
 800391c:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800391e:	68f8      	ldr	r0, [r7, #12]
 8003920:	f000 f88b 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8003924:	4604      	mov	r4, r0
 8003926:	68b8      	ldr	r0, [r7, #8]
 8003928:	f001 f9d0 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800392c:	4605      	mov	r5, r0
 800392e:	6878      	ldr	r0, [r7, #4]
 8003930:	f001 f9d7 	bl	8004ce2 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003934:	4603      	mov	r3, r0
 8003936:	462a      	mov	r2, r5
 8003938:	4621      	mov	r1, r4
 800393a:	4630      	mov	r0, r6
 800393c:	f001 f9dc 	bl	8004cf8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8003940:	4643      	mov	r3, r8
    }
 8003942:	4618      	mov	r0, r3
 8003944:	3710      	adds	r7, #16
 8003946:	46bd      	mov	sp, r7
 8003948:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800394c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800394c:	b480      	push	{r7}
 800394e:	b083      	sub	sp, #12
 8003950:	af00      	add	r7, sp, #0
 8003952:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	4618      	mov	r0, r3
 8003958:	370c      	adds	r7, #12
 800395a:	46bd      	mov	sp, r7
 800395c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003960:	4770      	bx	lr

08003962 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8003962:	b580      	push	{r7, lr}
 8003964:	b082      	sub	sp, #8
 8003966:	af00      	add	r7, sp, #0
 8003968:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	4618      	mov	r0, r3
 800396e:	f001 f9e1 	bl	8004d34 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 8003972:	4603      	mov	r3, r0
 8003974:	4618      	mov	r0, r3
 8003976:	3708      	adds	r7, #8
 8003978:	46bd      	mov	sp, r7
 800397a:	bd80      	pop	{r7, pc}

0800397c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800397c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003980:	b084      	sub	sp, #16
 8003982:	af00      	add	r7, sp, #0
 8003984:	60f8      	str	r0, [r7, #12]
 8003986:	60b9      	str	r1, [r7, #8]
 8003988:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800398a:	68f8      	ldr	r0, [r7, #12]
 800398c:	f000 f855 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8003990:	4604      	mov	r4, r0
 8003992:	68b8      	ldr	r0, [r7, #8]
 8003994:	f001 f9da 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8003998:	4605      	mov	r5, r0
 800399a:	6878      	ldr	r0, [r7, #4]
 800399c:	f001 f9e1 	bl	8004d62 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80039a0:	4603      	mov	r3, r0
 80039a2:	462a      	mov	r2, r5
 80039a4:	4621      	mov	r1, r4
 80039a6:	4630      	mov	r0, r6
 80039a8:	f001 f9e6 	bl	8004d78 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 80039ac:	4643      	mov	r3, r8
    }
 80039ae:	4618      	mov	r0, r3
 80039b0:	3710      	adds	r7, #16
 80039b2:	46bd      	mov	sp, r7
 80039b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080039b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80039b8:	b480      	push	{r7}
 80039ba:	b083      	sub	sp, #12
 80039bc:	af00      	add	r7, sp, #0
 80039be:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	4618      	mov	r0, r3
 80039c4:	370c      	adds	r7, #12
 80039c6:	46bd      	mov	sp, r7
 80039c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039cc:	4770      	bx	lr

080039ce <_ZNRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 80039ce:	b580      	push	{r7, lr}
 80039d0:	b082      	sub	sp, #8
 80039d2:	af00      	add	r7, sp, #0
 80039d4:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	4618      	mov	r0, r3
 80039da:	f001 f9eb 	bl	8004db4 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 80039de:	4603      	mov	r3, r0
 80039e0:	4618      	mov	r0, r3
 80039e2:	3708      	adds	r7, #8
 80039e4:	46bd      	mov	sp, r7
 80039e6:	bd80      	pop	{r7, pc}

080039e8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_JRSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISF_JDpT0_EE4typeESG_DpOSN_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80039e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039ec:	b084      	sub	sp, #16
 80039ee:	af00      	add	r7, sp, #0
 80039f0:	60f8      	str	r0, [r7, #12]
 80039f2:	60b9      	str	r1, [r7, #8]
 80039f4:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80039f6:	68f8      	ldr	r0, [r7, #12]
 80039f8:	f000 f81f 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 80039fc:	4604      	mov	r4, r0
 80039fe:	68b8      	ldr	r0, [r7, #8]
 8003a00:	f001 f9e4 	bl	8004dcc <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8003a04:	4605      	mov	r5, r0
 8003a06:	6878      	ldr	r0, [r7, #4]
 8003a08:	f001 f9eb 	bl	8004de2 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003a0c:	4603      	mov	r3, r0
 8003a0e:	462a      	mov	r2, r5
 8003a10:	4621      	mov	r1, r4
 8003a12:	4630      	mov	r0, r6
 8003a14:	f001 f9f0 	bl	8004df8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRSD_St17integral_constantIjLj4EEEESG_St14__invoke_otherOSI_DpOT1_>
					std::forward<_Args>(__args)...);
 8003a18:	4643      	mov	r3, r8
    }
 8003a1a:	4618      	mov	r0, r3
 8003a1c:	3710      	adds	r7, #16
 8003a1e:	46bd      	mov	sp, r7
 8003a20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003a24 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8003a24:	b480      	push	{r7}
 8003a26:	b083      	sub	sp, #12
 8003a28:	af00      	add	r7, sp, #0
 8003a2a:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	4618      	mov	r0, r3
 8003a30:	370c      	adds	r7, #12
 8003a32:	46bd      	mov	sp, r7
 8003a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a38:	4770      	bx	lr

08003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003a3a:	b480      	push	{r7}
 8003a3c:	b083      	sub	sp, #12
 8003a3e:	af00      	add	r7, sp, #0
 8003a40:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003a42:	687b      	ldr	r3, [r7, #4]
 8003a44:	4618      	mov	r0, r3
 8003a46:	370c      	adds	r7, #12
 8003a48:	46bd      	mov	sp, r7
 8003a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a4e:	4770      	bx	lr

08003a50 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8003a50:	b480      	push	{r7}
 8003a52:	b083      	sub	sp, #12
 8003a54:	af00      	add	r7, sp, #0
 8003a56:	6078      	str	r0, [r7, #4]
 8003a58:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8003a5a:	683b      	ldr	r3, [r7, #0]
 8003a5c:	681a      	ldr	r2, [r3, #0]
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	601a      	str	r2, [r3, #0]
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	4618      	mov	r0, r3
 8003a66:	370c      	adds	r7, #12
 8003a68:	46bd      	mov	sp, r7
 8003a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a6e:	4770      	bx	lr

08003a70 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8003a70:	b480      	push	{r7}
 8003a72:	b083      	sub	sp, #12
 8003a74:	af00      	add	r7, sp, #0
 8003a76:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	4618      	mov	r0, r3
 8003a7c:	370c      	adds	r7, #12
 8003a7e:	46bd      	mov	sp, r7
 8003a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a84:	4770      	bx	lr

08003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>:
      constexpr size_t index() const noexcept
 8003a86:	b480      	push	{r7}
 8003a88:	b083      	sub	sp, #12
 8003a8a:	af00      	add	r7, sp, #0
 8003a8c:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	791b      	ldrb	r3, [r3, #4]
 8003a92:	2bff      	cmp	r3, #255	; 0xff
 8003a94:	d102      	bne.n	8003a9c <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x16>
	  return variant_npos;
 8003a96:	f04f 33ff 	mov.w	r3, #4294967295
 8003a9a:	e001      	b.n	8003aa0 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x1a>
	return this->_M_index;
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	791b      	ldrb	r3, [r3, #4]
      }
 8003aa0:	4618      	mov	r0, r3
 8003aa2:	370c      	adds	r7, #12
 8003aa4:	46bd      	mov	sp, r7
 8003aa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003aaa:	4770      	bx	lr

08003aac <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003aac:	b580      	push	{r7, lr}
 8003aae:	b082      	sub	sp, #8
 8003ab0:	af00      	add	r7, sp, #0
 8003ab2:	7138      	strb	r0, [r7, #4]
 8003ab4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003ab6:	6838      	ldr	r0, [r7, #0]
 8003ab8:	f001 f9c7 	bl	8004e4a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003abc:	4603      	mov	r3, r0
 8003abe:	4618      	mov	r0, r3
 8003ac0:	f001 f9ce 	bl	8004e60 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>
 8003ac4:	4603      	mov	r3, r0
 8003ac6:	4618      	mov	r0, r3
 8003ac8:	3708      	adds	r7, #8
 8003aca:	46bd      	mov	sp, r7
 8003acc:	bd80      	pop	{r7, pc}

08003ace <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003ace:	b590      	push	{r4, r7, lr}
 8003ad0:	b083      	sub	sp, #12
 8003ad2:	af00      	add	r7, sp, #0
 8003ad4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003ad6:	6878      	ldr	r0, [r7, #4]
 8003ad8:	f001 f9ac 	bl	8004e34 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003adc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003ade:	4619      	mov	r1, r3
 8003ae0:	4620      	mov	r0, r4
 8003ae2:	f7ff ffe3 	bl	8003aac <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003ae6:	4603      	mov	r3, r0
    }
 8003ae8:	4618      	mov	r0, r3
 8003aea:	370c      	adds	r7, #12
 8003aec:	46bd      	mov	sp, r7
 8003aee:	bd90      	pop	{r4, r7, pc}

08003af0 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003af0:	b580      	push	{r7, lr}
 8003af2:	b082      	sub	sp, #8
 8003af4:	af00      	add	r7, sp, #0
 8003af6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003af8:	6878      	ldr	r0, [r7, #4]
 8003afa:	f7ff ffc4 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003afe:	4603      	mov	r3, r0
 8003b00:	2b00      	cmp	r3, #0
 8003b02:	bf14      	ite	ne
 8003b04:	2301      	movne	r3, #1
 8003b06:	2300      	moveq	r3, #0
 8003b08:	b2db      	uxtb	r3, r3
 8003b0a:	2b00      	cmp	r3, #0
 8003b0c:	d002      	beq.n	8003b14 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003b0e:	4805      	ldr	r0, [pc, #20]	; (8003b24 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003b10:	f7fd faaf 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003b14:	6878      	ldr	r0, [r7, #4]
 8003b16:	f7ff ffda 	bl	8003ace <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003b1a:	4603      	mov	r3, r0
    }
 8003b1c:	4618      	mov	r0, r3
 8003b1e:	3708      	adds	r7, #8
 8003b20:	46bd      	mov	sp, r7
 8003b22:	bd80      	pop	{r7, pc}
 8003b24:	080292e4 	.word	0x080292e4

08003b28 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003b28:	b580      	push	{r7, lr}
 8003b2a:	b082      	sub	sp, #8
 8003b2c:	af00      	add	r7, sp, #0
 8003b2e:	7138      	strb	r0, [r7, #4]
 8003b30:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003b32:	6838      	ldr	r0, [r7, #0]
 8003b34:	f001 f99f 	bl	8004e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b38:	4603      	mov	r3, r0
 8003b3a:	4618      	mov	r0, r3
 8003b3c:	f001 f9a6 	bl	8004e8c <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 8003b40:	4603      	mov	r3, r0
 8003b42:	4618      	mov	r0, r3
 8003b44:	3708      	adds	r7, #8
 8003b46:	46bd      	mov	sp, r7
 8003b48:	bd80      	pop	{r7, pc}

08003b4a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003b4a:	b590      	push	{r4, r7, lr}
 8003b4c:	b083      	sub	sp, #12
 8003b4e:	af00      	add	r7, sp, #0
 8003b50:	7138      	strb	r0, [r7, #4]
 8003b52:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003b54:	6838      	ldr	r0, [r7, #0]
 8003b56:	f001 f978 	bl	8004e4a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003b5a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003b5c:	4619      	mov	r1, r3
 8003b5e:	4620      	mov	r0, r4
 8003b60:	f7ff ffe2 	bl	8003b28 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003b64:	4603      	mov	r3, r0
    }
 8003b66:	4618      	mov	r0, r3
 8003b68:	370c      	adds	r7, #12
 8003b6a:	46bd      	mov	sp, r7
 8003b6c:	bd90      	pop	{r4, r7, pc}

08003b6e <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003b6e:	b590      	push	{r4, r7, lr}
 8003b70:	b083      	sub	sp, #12
 8003b72:	af00      	add	r7, sp, #0
 8003b74:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003b76:	6878      	ldr	r0, [r7, #4]
 8003b78:	f001 f95c 	bl	8004e34 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003b7c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003b7e:	4619      	mov	r1, r3
 8003b80:	4620      	mov	r0, r4
 8003b82:	f7ff ffe2 	bl	8003b4a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003b86:	4603      	mov	r3, r0
    }
 8003b88:	4618      	mov	r0, r3
 8003b8a:	370c      	adds	r7, #12
 8003b8c:	46bd      	mov	sp, r7
 8003b8e:	bd90      	pop	{r4, r7, pc}

08003b90 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003b90:	b580      	push	{r7, lr}
 8003b92:	b082      	sub	sp, #8
 8003b94:	af00      	add	r7, sp, #0
 8003b96:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003b98:	6878      	ldr	r0, [r7, #4]
 8003b9a:	f7ff ff74 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003b9e:	4603      	mov	r3, r0
 8003ba0:	2b01      	cmp	r3, #1
 8003ba2:	bf14      	ite	ne
 8003ba4:	2301      	movne	r3, #1
 8003ba6:	2300      	moveq	r3, #0
 8003ba8:	b2db      	uxtb	r3, r3
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d002      	beq.n	8003bb4 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003bae:	4805      	ldr	r0, [pc, #20]	; (8003bc4 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003bb0:	f7fd fa5f 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003bb4:	6878      	ldr	r0, [r7, #4]
 8003bb6:	f7ff ffda 	bl	8003b6e <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003bba:	4603      	mov	r3, r0
    }
 8003bbc:	4618      	mov	r0, r3
 8003bbe:	3708      	adds	r7, #8
 8003bc0:	46bd      	mov	sp, r7
 8003bc2:	bd80      	pop	{r7, pc}
 8003bc4:	080292e4 	.word	0x080292e4

08003bc8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003bc8:	b580      	push	{r7, lr}
 8003bca:	b082      	sub	sp, #8
 8003bcc:	af00      	add	r7, sp, #0
 8003bce:	7138      	strb	r0, [r7, #4]
 8003bd0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003bd2:	6838      	ldr	r0, [r7, #0]
 8003bd4:	f001 f965 	bl	8004ea2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8003bd8:	4603      	mov	r3, r0
 8003bda:	4618      	mov	r0, r3
 8003bdc:	f001 f96c 	bl	8004eb8 <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>
 8003be0:	4603      	mov	r3, r0
 8003be2:	4618      	mov	r0, r3
 8003be4:	3708      	adds	r7, #8
 8003be6:	46bd      	mov	sp, r7
 8003be8:	bd80      	pop	{r7, pc}

08003bea <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003bea:	b590      	push	{r4, r7, lr}
 8003bec:	b083      	sub	sp, #12
 8003bee:	af00      	add	r7, sp, #0
 8003bf0:	7138      	strb	r0, [r7, #4]
 8003bf2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003bf4:	6838      	ldr	r0, [r7, #0]
 8003bf6:	f001 f93e 	bl	8004e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003bfa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003bfc:	4619      	mov	r1, r3
 8003bfe:	4620      	mov	r0, r4
 8003c00:	f7ff ffe2 	bl	8003bc8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003c04:	4603      	mov	r3, r0
    }
 8003c06:	4618      	mov	r0, r3
 8003c08:	370c      	adds	r7, #12
 8003c0a:	46bd      	mov	sp, r7
 8003c0c:	bd90      	pop	{r4, r7, pc}

08003c0e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003c0e:	b590      	push	{r4, r7, lr}
 8003c10:	b083      	sub	sp, #12
 8003c12:	af00      	add	r7, sp, #0
 8003c14:	7138      	strb	r0, [r7, #4]
 8003c16:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003c18:	6838      	ldr	r0, [r7, #0]
 8003c1a:	f001 f916 	bl	8004e4a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003c1e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003c20:	4619      	mov	r1, r3
 8003c22:	4620      	mov	r0, r4
 8003c24:	f7ff ffe1 	bl	8003bea <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c28:	4603      	mov	r3, r0
    }
 8003c2a:	4618      	mov	r0, r3
 8003c2c:	370c      	adds	r7, #12
 8003c2e:	46bd      	mov	sp, r7
 8003c30:	bd90      	pop	{r4, r7, pc}

08003c32 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003c32:	b590      	push	{r4, r7, lr}
 8003c34:	b083      	sub	sp, #12
 8003c36:	af00      	add	r7, sp, #0
 8003c38:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003c3a:	6878      	ldr	r0, [r7, #4]
 8003c3c:	f001 f8fa 	bl	8004e34 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003c40:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003c42:	4619      	mov	r1, r3
 8003c44:	4620      	mov	r0, r4
 8003c46:	f7ff ffe2 	bl	8003c0e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003c4a:	4603      	mov	r3, r0
    }
 8003c4c:	4618      	mov	r0, r3
 8003c4e:	370c      	adds	r7, #12
 8003c50:	46bd      	mov	sp, r7
 8003c52:	bd90      	pop	{r4, r7, pc}

08003c54 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003c54:	b580      	push	{r7, lr}
 8003c56:	b082      	sub	sp, #8
 8003c58:	af00      	add	r7, sp, #0
 8003c5a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003c5c:	6878      	ldr	r0, [r7, #4]
 8003c5e:	f7ff ff12 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003c62:	4603      	mov	r3, r0
 8003c64:	2b02      	cmp	r3, #2
 8003c66:	bf14      	ite	ne
 8003c68:	2301      	movne	r3, #1
 8003c6a:	2300      	moveq	r3, #0
 8003c6c:	b2db      	uxtb	r3, r3
 8003c6e:	2b00      	cmp	r3, #0
 8003c70:	d002      	beq.n	8003c78 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003c72:	4805      	ldr	r0, [pc, #20]	; (8003c88 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003c74:	f7fd f9fd 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003c78:	6878      	ldr	r0, [r7, #4]
 8003c7a:	f7ff ffda 	bl	8003c32 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003c7e:	4603      	mov	r3, r0
    }
 8003c80:	4618      	mov	r0, r3
 8003c82:	3708      	adds	r7, #8
 8003c84:	46bd      	mov	sp, r7
 8003c86:	bd80      	pop	{r7, pc}
 8003c88:	080292e4 	.word	0x080292e4

08003c8c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	b082      	sub	sp, #8
 8003c90:	af00      	add	r7, sp, #0
 8003c92:	7138      	strb	r0, [r7, #4]
 8003c94:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003c96:	6838      	ldr	r0, [r7, #0]
 8003c98:	f001 f919 	bl	8004ece <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8003c9c:	4603      	mov	r3, r0
 8003c9e:	4618      	mov	r0, r3
 8003ca0:	f001 f920 	bl	8004ee4 <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>
 8003ca4:	4603      	mov	r3, r0
 8003ca6:	4618      	mov	r0, r3
 8003ca8:	3708      	adds	r7, #8
 8003caa:	46bd      	mov	sp, r7
 8003cac:	bd80      	pop	{r7, pc}

08003cae <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003cae:	b590      	push	{r4, r7, lr}
 8003cb0:	b083      	sub	sp, #12
 8003cb2:	af00      	add	r7, sp, #0
 8003cb4:	7138      	strb	r0, [r7, #4]
 8003cb6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003cb8:	6838      	ldr	r0, [r7, #0]
 8003cba:	f001 f8f2 	bl	8004ea2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8003cbe:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003cc0:	4619      	mov	r1, r3
 8003cc2:	4620      	mov	r0, r4
 8003cc4:	f7ff ffe2 	bl	8003c8c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003cc8:	4603      	mov	r3, r0
    }
 8003cca:	4618      	mov	r0, r3
 8003ccc:	370c      	adds	r7, #12
 8003cce:	46bd      	mov	sp, r7
 8003cd0:	bd90      	pop	{r4, r7, pc}

08003cd2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003cd2:	b590      	push	{r4, r7, lr}
 8003cd4:	b083      	sub	sp, #12
 8003cd6:	af00      	add	r7, sp, #0
 8003cd8:	7138      	strb	r0, [r7, #4]
 8003cda:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003cdc:	6838      	ldr	r0, [r7, #0]
 8003cde:	f001 f8ca 	bl	8004e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003ce2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003ce4:	4619      	mov	r1, r3
 8003ce6:	4620      	mov	r0, r4
 8003ce8:	f7ff ffe1 	bl	8003cae <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003cec:	4603      	mov	r3, r0
    }
 8003cee:	4618      	mov	r0, r3
 8003cf0:	370c      	adds	r7, #12
 8003cf2:	46bd      	mov	sp, r7
 8003cf4:	bd90      	pop	{r4, r7, pc}

08003cf6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003cf6:	b590      	push	{r4, r7, lr}
 8003cf8:	b083      	sub	sp, #12
 8003cfa:	af00      	add	r7, sp, #0
 8003cfc:	7138      	strb	r0, [r7, #4]
 8003cfe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003d00:	6838      	ldr	r0, [r7, #0]
 8003d02:	f001 f8a2 	bl	8004e4a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003d06:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003d08:	4619      	mov	r1, r3
 8003d0a:	4620      	mov	r0, r4
 8003d0c:	f7ff ffe1 	bl	8003cd2 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003d10:	4603      	mov	r3, r0
    }
 8003d12:	4618      	mov	r0, r3
 8003d14:	370c      	adds	r7, #12
 8003d16:	46bd      	mov	sp, r7
 8003d18:	bd90      	pop	{r4, r7, pc}

08003d1a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003d1a:	b590      	push	{r4, r7, lr}
 8003d1c:	b083      	sub	sp, #12
 8003d1e:	af00      	add	r7, sp, #0
 8003d20:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003d22:	6878      	ldr	r0, [r7, #4]
 8003d24:	f001 f886 	bl	8004e34 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003d28:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003d2a:	4619      	mov	r1, r3
 8003d2c:	4620      	mov	r0, r4
 8003d2e:	f7ff ffe2 	bl	8003cf6 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003d32:	4603      	mov	r3, r0
    }
 8003d34:	4618      	mov	r0, r3
 8003d36:	370c      	adds	r7, #12
 8003d38:	46bd      	mov	sp, r7
 8003d3a:	bd90      	pop	{r4, r7, pc}

08003d3c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003d3c:	b580      	push	{r7, lr}
 8003d3e:	b082      	sub	sp, #8
 8003d40:	af00      	add	r7, sp, #0
 8003d42:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003d44:	6878      	ldr	r0, [r7, #4]
 8003d46:	f7ff fe9e 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003d4a:	4603      	mov	r3, r0
 8003d4c:	2b03      	cmp	r3, #3
 8003d4e:	bf14      	ite	ne
 8003d50:	2301      	movne	r3, #1
 8003d52:	2300      	moveq	r3, #0
 8003d54:	b2db      	uxtb	r3, r3
 8003d56:	2b00      	cmp	r3, #0
 8003d58:	d002      	beq.n	8003d60 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003d5a:	4805      	ldr	r0, [pc, #20]	; (8003d70 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003d5c:	f7fd f989 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003d60:	6878      	ldr	r0, [r7, #4]
 8003d62:	f7ff ffda 	bl	8003d1a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003d66:	4603      	mov	r3, r0
    }
 8003d68:	4618      	mov	r0, r3
 8003d6a:	3708      	adds	r7, #8
 8003d6c:	46bd      	mov	sp, r7
 8003d6e:	bd80      	pop	{r7, pc}
 8003d70:	080292e4 	.word	0x080292e4

08003d74 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8003d74:	b580      	push	{r7, lr}
 8003d76:	b082      	sub	sp, #8
 8003d78:	af00      	add	r7, sp, #0
 8003d7a:	7138      	strb	r0, [r7, #4]
 8003d7c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8003d7e:	6838      	ldr	r0, [r7, #0]
 8003d80:	f001 f8bb 	bl	8004efa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8003d84:	4603      	mov	r3, r0
 8003d86:	4618      	mov	r0, r3
 8003d88:	f001 f8c2 	bl	8004f10 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>
 8003d8c:	4603      	mov	r3, r0
 8003d8e:	4618      	mov	r0, r3
 8003d90:	3708      	adds	r7, #8
 8003d92:	46bd      	mov	sp, r7
 8003d94:	bd80      	pop	{r7, pc}

08003d96 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003d96:	b590      	push	{r4, r7, lr}
 8003d98:	b083      	sub	sp, #12
 8003d9a:	af00      	add	r7, sp, #0
 8003d9c:	7138      	strb	r0, [r7, #4]
 8003d9e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003da0:	6838      	ldr	r0, [r7, #0]
 8003da2:	f001 f894 	bl	8004ece <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8003da6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003da8:	4619      	mov	r1, r3
 8003daa:	4620      	mov	r0, r4
 8003dac:	f7ff ffe2 	bl	8003d74 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 8003db0:	4603      	mov	r3, r0
    }
 8003db2:	4618      	mov	r0, r3
 8003db4:	370c      	adds	r7, #12
 8003db6:	46bd      	mov	sp, r7
 8003db8:	bd90      	pop	{r4, r7, pc}

08003dba <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003dba:	b590      	push	{r4, r7, lr}
 8003dbc:	b083      	sub	sp, #12
 8003dbe:	af00      	add	r7, sp, #0
 8003dc0:	7138      	strb	r0, [r7, #4]
 8003dc2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003dc4:	6838      	ldr	r0, [r7, #0]
 8003dc6:	f001 f86c 	bl	8004ea2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8003dca:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003dcc:	4619      	mov	r1, r3
 8003dce:	4620      	mov	r0, r4
 8003dd0:	f7ff ffe1 	bl	8003d96 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003dd4:	4603      	mov	r3, r0
    }
 8003dd6:	4618      	mov	r0, r3
 8003dd8:	370c      	adds	r7, #12
 8003dda:	46bd      	mov	sp, r7
 8003ddc:	bd90      	pop	{r4, r7, pc}

08003dde <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003dde:	b590      	push	{r4, r7, lr}
 8003de0:	b083      	sub	sp, #12
 8003de2:	af00      	add	r7, sp, #0
 8003de4:	7138      	strb	r0, [r7, #4]
 8003de6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003de8:	6838      	ldr	r0, [r7, #0]
 8003dea:	f001 f844 	bl	8004e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003dee:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003df0:	4619      	mov	r1, r3
 8003df2:	4620      	mov	r0, r4
 8003df4:	f7ff ffe1 	bl	8003dba <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003df8:	4603      	mov	r3, r0
    }
 8003dfa:	4618      	mov	r0, r3
 8003dfc:	370c      	adds	r7, #12
 8003dfe:	46bd      	mov	sp, r7
 8003e00:	bd90      	pop	{r4, r7, pc}

08003e02 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8003e02:	b590      	push	{r4, r7, lr}
 8003e04:	b083      	sub	sp, #12
 8003e06:	af00      	add	r7, sp, #0
 8003e08:	7138      	strb	r0, [r7, #4]
 8003e0a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8003e0c:	6838      	ldr	r0, [r7, #0]
 8003e0e:	f001 f81c 	bl	8004e4a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8003e12:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8003e14:	4619      	mov	r1, r3
 8003e16:	4620      	mov	r0, r4
 8003e18:	f7ff ffe1 	bl	8003dde <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003e1c:	4603      	mov	r3, r0
    }
 8003e1e:	4618      	mov	r0, r3
 8003e20:	370c      	adds	r7, #12
 8003e22:	46bd      	mov	sp, r7
 8003e24:	bd90      	pop	{r4, r7, pc}

08003e26 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8003e26:	b590      	push	{r4, r7, lr}
 8003e28:	b083      	sub	sp, #12
 8003e2a:	af00      	add	r7, sp, #0
 8003e2c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8003e2e:	6878      	ldr	r0, [r7, #4]
 8003e30:	f001 f800 	bl	8004e34 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 8003e34:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8003e36:	4619      	mov	r1, r3
 8003e38:	4620      	mov	r0, r4
 8003e3a:	f7ff ffe2 	bl	8003e02 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8003e3e:	4603      	mov	r3, r0
    }
 8003e40:	4618      	mov	r0, r3
 8003e42:	370c      	adds	r7, #12
 8003e44:	46bd      	mov	sp, r7
 8003e46:	bd90      	pop	{r4, r7, pc}

08003e48 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8003e48:	b580      	push	{r7, lr}
 8003e4a:	b082      	sub	sp, #8
 8003e4c:	af00      	add	r7, sp, #0
 8003e4e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8003e50:	6878      	ldr	r0, [r7, #4]
 8003e52:	f7ff fe18 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8003e56:	4603      	mov	r3, r0
 8003e58:	2b04      	cmp	r3, #4
 8003e5a:	bf14      	ite	ne
 8003e5c:	2301      	movne	r3, #1
 8003e5e:	2300      	moveq	r3, #0
 8003e60:	b2db      	uxtb	r3, r3
 8003e62:	2b00      	cmp	r3, #0
 8003e64:	d002      	beq.n	8003e6c <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8003e66:	4805      	ldr	r0, [pc, #20]	; (8003e7c <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8003e68:	f7fd f903 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8003e6c:	6878      	ldr	r0, [r7, #4]
 8003e6e:	f7ff ffda 	bl	8003e26 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8003e72:	4603      	mov	r3, r0
    }
 8003e74:	4618      	mov	r0, r3
 8003e76:	3708      	adds	r7, #8
 8003e78:	46bd      	mov	sp, r7
 8003e7a:	bd80      	pop	{r7, pc}
 8003e7c:	080292e4 	.word	0x080292e4

08003e80 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8003e80:	b580      	push	{r7, lr}
 8003e82:	b084      	sub	sp, #16
 8003e84:	af00      	add	r7, sp, #0
 8003e86:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	1d1a      	adds	r2, r3, #4
 8003e8c:	f107 030c 	add.w	r3, r7, #12
 8003e90:	4611      	mov	r1, r2
 8003e92:	4618      	mov	r0, r3
 8003e94:	f001 f847 	bl	8004f26 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8003e98:	68fb      	ldr	r3, [r7, #12]
 8003e9a:	4618      	mov	r0, r3
 8003e9c:	3710      	adds	r7, #16
 8003e9e:	46bd      	mov	sp, r7
 8003ea0:	bd80      	pop	{r7, pc}

08003ea2 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8003ea2:	b580      	push	{r7, lr}
 8003ea4:	b084      	sub	sp, #16
 8003ea6:	af00      	add	r7, sp, #0
 8003ea8:	6078      	str	r0, [r7, #4]
 8003eaa:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681a      	ldr	r2, [r3, #0]
 8003eb0:	683b      	ldr	r3, [r7, #0]
 8003eb2:	009b      	lsls	r3, r3, #2
 8003eb4:	425b      	negs	r3, r3
 8003eb6:	4413      	add	r3, r2
 8003eb8:	60fb      	str	r3, [r7, #12]
 8003eba:	f107 020c 	add.w	r2, r7, #12
 8003ebe:	f107 0308 	add.w	r3, r7, #8
 8003ec2:	4611      	mov	r1, r2
 8003ec4:	4618      	mov	r0, r3
 8003ec6:	f001 f82e 	bl	8004f26 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8003eca:	68bb      	ldr	r3, [r7, #8]
 8003ecc:	4618      	mov	r0, r3
 8003ece:	3710      	adds	r7, #16
 8003ed0:	46bd      	mov	sp, r7
 8003ed2:	bd80      	pop	{r7, pc}

08003ed4 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8003ed4:	b480      	push	{r7}
 8003ed6:	b083      	sub	sp, #12
 8003ed8:	af00      	add	r7, sp, #0
 8003eda:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	4618      	mov	r0, r3
 8003ee2:	370c      	adds	r7, #12
 8003ee4:	46bd      	mov	sp, r7
 8003ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eea:	4770      	bx	lr

08003eec <_ZSt7forwardIOZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003eec:	b480      	push	{r7}
 8003eee:	b083      	sub	sp, #12
 8003ef0:	af00      	add	r7, sp, #0
 8003ef2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	4618      	mov	r0, r3
 8003ef8:	370c      	adds	r7, #12
 8003efa:	46bd      	mov	sp, r7
 8003efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f00:	4770      	bx	lr

08003f02 <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f02:	b480      	push	{r7}
 8003f04:	b083      	sub	sp, #12
 8003f06:	af00      	add	r7, sp, #0
 8003f08:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	4618      	mov	r0, r3
 8003f0e:	370c      	adds	r7, #12
 8003f10:	46bd      	mov	sp, r7
 8003f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f16:	4770      	bx	lr

08003f18 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f18:	b480      	push	{r7}
 8003f1a:	b083      	sub	sp, #12
 8003f1c:	af00      	add	r7, sp, #0
 8003f1e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	4618      	mov	r0, r3
 8003f24:	370c      	adds	r7, #12
 8003f26:	46bd      	mov	sp, r7
 8003f28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f2c:	4770      	bx	lr

08003f2e <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8003f2e:	b480      	push	{r7}
 8003f30:	b083      	sub	sp, #12
 8003f32:	af00      	add	r7, sp, #0
 8003f34:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	4618      	mov	r0, r3
 8003f3a:	370c      	adds	r7, #12
 8003f3c:	46bd      	mov	sp, r7
 8003f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f42:	4770      	bx	lr

08003f44 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003f44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f48:	b084      	sub	sp, #16
 8003f4a:	af00      	add	r7, sp, #0
 8003f4c:	60f8      	str	r0, [r7, #12]
 8003f4e:	60b9      	str	r1, [r7, #8]
 8003f50:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8003f52:	68f8      	ldr	r0, [r7, #12]
 8003f54:	f000 f8f3 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003f58:	4604      	mov	r4, r0
 8003f5a:	68b8      	ldr	r0, [r7, #8]
 8003f5c:	f000 fff3 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8003f60:	4605      	mov	r5, r0
 8003f62:	6878      	ldr	r0, [r7, #4]
 8003f64:	f000 fe55 	bl	8004c12 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003f68:	4603      	mov	r3, r0
 8003f6a:	462a      	mov	r2, r5
 8003f6c:	4621      	mov	r1, r4
 8003f6e:	4630      	mov	r0, r6
 8003f70:	f000 fff4 	bl	8004f5c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8003f74:	4643      	mov	r3, r8
    }
 8003f76:	4618      	mov	r0, r3
 8003f78:	3710      	adds	r7, #16
 8003f7a:	46bd      	mov	sp, r7
 8003f7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003f80 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003f80:	b480      	push	{r7}
 8003f82:	b083      	sub	sp, #12
 8003f84:	af00      	add	r7, sp, #0
 8003f86:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003f88:	687b      	ldr	r3, [r7, #4]
 8003f8a:	4618      	mov	r0, r3
 8003f8c:	370c      	adds	r7, #12
 8003f8e:	46bd      	mov	sp, r7
 8003f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f94:	4770      	bx	lr

08003f96 <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8003f96:	b480      	push	{r7}
 8003f98:	b083      	sub	sp, #12
 8003f9a:	af00      	add	r7, sp, #0
 8003f9c:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	4618      	mov	r0, r3
 8003fa2:	370c      	adds	r7, #12
 8003fa4:	46bd      	mov	sp, r7
 8003fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003faa:	4770      	bx	lr

08003fac <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8003fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003fb0:	b084      	sub	sp, #16
 8003fb2:	af00      	add	r7, sp, #0
 8003fb4:	60f8      	str	r0, [r7, #12]
 8003fb6:	60b9      	str	r1, [r7, #8]
 8003fb8:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8003fba:	68f8      	ldr	r0, [r7, #12]
 8003fbc:	f000 f8bf 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8003fc0:	4604      	mov	r4, r0
 8003fc2:	68b8      	ldr	r0, [r7, #8]
 8003fc4:	f000 ffe8 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8003fc8:	4605      	mov	r5, r0
 8003fca:	6878      	ldr	r0, [r7, #4]
 8003fcc:	f000 fe55 	bl	8004c7a <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8003fd0:	4603      	mov	r3, r0
 8003fd2:	462a      	mov	r2, r5
 8003fd4:	4621      	mov	r1, r4
 8003fd6:	4630      	mov	r0, r6
 8003fd8:	f000 ffe9 	bl	8004fae <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8003fdc:	4643      	mov	r3, r8
    }
 8003fde:	4618      	mov	r0, r3
 8003fe0:	3710      	adds	r7, #16
 8003fe2:	46bd      	mov	sp, r7
 8003fe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003fe8 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003fe8:	b480      	push	{r7}
 8003fea:	b083      	sub	sp, #12
 8003fec:	af00      	add	r7, sp, #0
 8003fee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	4618      	mov	r0, r3
 8003ff4:	370c      	adds	r7, #12
 8003ff6:	46bd      	mov	sp, r7
 8003ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ffc:	4770      	bx	lr

08003ffe <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 8003ffe:	b480      	push	{r7}
 8004000:	b083      	sub	sp, #12
 8004002:	af00      	add	r7, sp, #0
 8004004:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	4618      	mov	r0, r3
 800400a:	370c      	adds	r7, #12
 800400c:	46bd      	mov	sp, r7
 800400e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004012:	4770      	bx	lr

08004014 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004014:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004018:	b084      	sub	sp, #16
 800401a:	af00      	add	r7, sp, #0
 800401c:	60f8      	str	r0, [r7, #12]
 800401e:	60b9      	str	r1, [r7, #8]
 8004020:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004022:	68f8      	ldr	r0, [r7, #12]
 8004024:	f000 f88b 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8004028:	4604      	mov	r4, r0
 800402a:	68b8      	ldr	r0, [r7, #8]
 800402c:	f000 ffdd 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8004030:	4605      	mov	r5, r0
 8004032:	6878      	ldr	r0, [r7, #4]
 8004034:	f000 fe55 	bl	8004ce2 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004038:	4603      	mov	r3, r0
 800403a:	462a      	mov	r2, r5
 800403c:	4621      	mov	r1, r4
 800403e:	4630      	mov	r0, r6
 8004040:	f000 ffde 	bl	8005000 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 8004044:	4643      	mov	r3, r8
    }
 8004046:	4618      	mov	r0, r3
 8004048:	3710      	adds	r7, #16
 800404a:	46bd      	mov	sp, r7
 800404c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004050 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004050:	b480      	push	{r7}
 8004052:	b083      	sub	sp, #12
 8004054:	af00      	add	r7, sp, #0
 8004056:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004058:	687b      	ldr	r3, [r7, #4]
 800405a:	4618      	mov	r0, r3
 800405c:	370c      	adds	r7, #12
 800405e:	46bd      	mov	sp, r7
 8004060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004064:	4770      	bx	lr

08004066 <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 8004066:	b580      	push	{r7, lr}
 8004068:	b082      	sub	sp, #8
 800406a:	af00      	add	r7, sp, #0
 800406c:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	4618      	mov	r0, r3
 8004072:	f000 ffe3 	bl	800503c <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 8004076:	4603      	mov	r3, r0
 8004078:	4618      	mov	r0, r3
 800407a:	3708      	adds	r7, #8
 800407c:	46bd      	mov	sp, r7
 800407e:	bd80      	pop	{r7, pc}

08004080 <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKS8_St17integral_constantIjLj3EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004080:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004084:	b084      	sub	sp, #16
 8004086:	af00      	add	r7, sp, #0
 8004088:	60f8      	str	r0, [r7, #12]
 800408a:	60b9      	str	r1, [r7, #8]
 800408c:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800408e:	68f8      	ldr	r0, [r7, #12]
 8004090:	f000 f855 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8004094:	4604      	mov	r4, r0
 8004096:	68b8      	ldr	r0, [r7, #8]
 8004098:	f000 ffdc 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800409c:	4605      	mov	r5, r0
 800409e:	6878      	ldr	r0, [r7, #4]
 80040a0:	f000 fe5f 	bl	8004d62 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80040a4:	4603      	mov	r3, r0
 80040a6:	462a      	mov	r2, r5
 80040a8:	4621      	mov	r1, r4
 80040aa:	4630      	mov	r0, r6
 80040ac:	f000 ffdd 	bl	800506a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 80040b0:	4643      	mov	r3, r8
    }
 80040b2:	4618      	mov	r0, r3
 80040b4:	3710      	adds	r7, #16
 80040b6:	46bd      	mov	sp, r7
 80040b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080040bc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80040bc:	b480      	push	{r7}
 80040be:	b083      	sub	sp, #12
 80040c0:	af00      	add	r7, sp, #0
 80040c2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	4618      	mov	r0, r3
 80040c8:	370c      	adds	r7, #12
 80040ca:	46bd      	mov	sp, r7
 80040cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040d0:	4770      	bx	lr

080040d2 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 80040d2:	b580      	push	{r7, lr}
 80040d4:	b082      	sub	sp, #8
 80040d6:	af00      	add	r7, sp, #0
 80040d8:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 80040da:	687b      	ldr	r3, [r7, #4]
 80040dc:	4618      	mov	r0, r3
 80040de:	f000 ffe2 	bl	80050a6 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 80040e2:	4603      	mov	r3, r0
 80040e4:	4618      	mov	r0, r3
 80040e6:	3708      	adds	r7, #8
 80040e8:	46bd      	mov	sp, r7
 80040ea:	bd80      	pop	{r7, pc}

080040ec <_ZSt8__invokeIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_JRKSC_St17integral_constantIjLj4EEEENSt15__invoke_resultISG_JDpT0_EE4typeESH_DpOSP_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80040ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80040f0:	b084      	sub	sp, #16
 80040f2:	af00      	add	r7, sp, #0
 80040f4:	60f8      	str	r0, [r7, #12]
 80040f6:	60b9      	str	r1, [r7, #8]
 80040f8:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80040fa:	68f8      	ldr	r0, [r7, #12]
 80040fc:	f000 f81f 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8004100:	4604      	mov	r4, r0
 8004102:	68b8      	ldr	r0, [r7, #8]
 8004104:	f000 ffdb 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004108:	4605      	mov	r5, r0
 800410a:	6878      	ldr	r0, [r7, #4]
 800410c:	f000 fe69 	bl	8004de2 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004110:	4603      	mov	r3, r0
 8004112:	462a      	mov	r2, r5
 8004114:	4621      	mov	r1, r4
 8004116:	4630      	mov	r0, r6
 8004118:	f000 ffdc 	bl	80050d4 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKSD_St17integral_constantIjLj4EEEESH_St14__invoke_otherOSJ_DpOT1_>
					std::forward<_Args>(__args)...);
 800411c:	4643      	mov	r3, r8
    }
 800411e:	4618      	mov	r0, r3
 8004120:	3710      	adds	r7, #16
 8004122:	46bd      	mov	sp, r7
 8004124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004128 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8004128:	b480      	push	{r7}
 800412a:	b083      	sub	sp, #12
 800412c:	af00      	add	r7, sp, #0
 800412e:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	4618      	mov	r0, r3
 8004134:	370c      	adds	r7, #12
 8004136:	46bd      	mov	sp, r7
 8004138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800413c:	4770      	bx	lr

0800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800413e:	b480      	push	{r7}
 8004140:	b083      	sub	sp, #12
 8004142:	af00      	add	r7, sp, #0
 8004144:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	4618      	mov	r0, r3
 800414a:	370c      	adds	r7, #12
 800414c:	46bd      	mov	sp, r7
 800414e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004152:	4770      	bx	lr

08004154 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 8004154:	b590      	push	{r4, r7, lr}
 8004156:	b087      	sub	sp, #28
 8004158:	af00      	add	r7, sp, #0
 800415a:	60f8      	str	r0, [r7, #12]
 800415c:	60b9      	str	r1, [r7, #8]
 800415e:	607a      	str	r2, [r7, #4]
 8004160:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 8004162:	4623      	mov	r3, r4
 8004164:	687a      	ldr	r2, [r7, #4]
 8004166:	68b9      	ldr	r1, [r7, #8]
 8004168:	68f8      	ldr	r0, [r7, #12]
 800416a:	f000 ffe5 	bl	8005138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
	}
 800416e:	bf00      	nop
 8004170:	371c      	adds	r7, #28
 8004172:	46bd      	mov	sp, r7
 8004174:	bd90      	pop	{r4, r7, pc}

08004176 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 8004176:	b480      	push	{r7}
 8004178:	b083      	sub	sp, #12
 800417a:	af00      	add	r7, sp, #0
 800417c:	6078      	str	r0, [r7, #4]
 800417e:	6039      	str	r1, [r7, #0]
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	4618      	mov	r0, r3
 8004184:	370c      	adds	r7, #12
 8004186:	46bd      	mov	sp, r7
 8004188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800418c:	4770      	bx	lr

0800418e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 800418e:	b580      	push	{r7, lr}
 8004190:	b082      	sub	sp, #8
 8004192:	af00      	add	r7, sp, #0
 8004194:	6078      	str	r0, [r7, #4]
 8004196:	6039      	str	r1, [r7, #0]
 8004198:	6878      	ldr	r0, [r7, #4]
 800419a:	f001 f815 	bl	80051c8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	4618      	mov	r0, r3
 80041a2:	3708      	adds	r7, #8
 80041a4:	46bd      	mov	sp, r7
 80041a6:	bd80      	pop	{r7, pc}

080041a8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80041a8:	b580      	push	{r7, lr}
 80041aa:	b082      	sub	sp, #8
 80041ac:	af00      	add	r7, sp, #0
 80041ae:	6078      	str	r0, [r7, #4]
 80041b0:	6878      	ldr	r0, [r7, #4]
 80041b2:	f001 f814 	bl	80051de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	4618      	mov	r0, r3
 80041ba:	3708      	adds	r7, #8
 80041bc:	46bd      	mov	sp, r7
 80041be:	bd80      	pop	{r7, pc}

080041c0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 80041c0:	b580      	push	{r7, lr}
 80041c2:	b084      	sub	sp, #16
 80041c4:	af00      	add	r7, sp, #0
 80041c6:	60f8      	str	r0, [r7, #12]
 80041c8:	60b9      	str	r1, [r7, #8]
 80041ca:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 80041cc:	6878      	ldr	r0, [r7, #4]
 80041ce:	f001 f811 	bl	80051f4 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>
 80041d2:	4603      	mov	r3, r0
 80041d4:	4619      	mov	r1, r3
 80041d6:	68f8      	ldr	r0, [r7, #12]
 80041d8:	f001 f817 	bl	800520a <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>
 80041dc:	68fb      	ldr	r3, [r7, #12]
 80041de:	68b9      	ldr	r1, [r7, #8]
 80041e0:	4618      	mov	r0, r3
 80041e2:	f001 f820 	bl	8005226 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 80041e6:	68fb      	ldr	r3, [r7, #12]
 80041e8:	3304      	adds	r3, #4
 80041ea:	4618      	mov	r0, r3
 80041ec:	f7fc ff47 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 80041f0:	68fb      	ldr	r3, [r7, #12]
 80041f2:	4618      	mov	r0, r3
 80041f4:	3710      	adds	r7, #16
 80041f6:	46bd      	mov	sp, r7
 80041f8:	bd80      	pop	{r7, pc}

080041fa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80041fa:	b580      	push	{r7, lr}
 80041fc:	b084      	sub	sp, #16
 80041fe:	af00      	add	r7, sp, #0
 8004200:	6078      	str	r0, [r7, #4]
 8004202:	6039      	str	r1, [r7, #0]
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
 8004204:	683b      	ldr	r3, [r7, #0]
 8004206:	2b00      	cmp	r3, #0
 8004208:	d012      	beq.n	8004230 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	{
	  _M_erase(_S_right(__x));
 800420a:	6838      	ldr	r0, [r7, #0]
 800420c:	f001 f817 	bl	800523e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004210:	4603      	mov	r3, r0
 8004212:	4619      	mov	r1, r3
 8004214:	6878      	ldr	r0, [r7, #4]
 8004216:	f7ff fff0 	bl	80041fa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 800421a:	6838      	ldr	r0, [r7, #0]
 800421c:	f001 f81b 	bl	8005256 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8004220:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8004222:	6839      	ldr	r1, [r7, #0]
 8004224:	6878      	ldr	r0, [r7, #4]
 8004226:	f001 f822 	bl	800526e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 800422a:	68fb      	ldr	r3, [r7, #12]
 800422c:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800422e:	e7e9      	b.n	8004204 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
	}
    }
 8004230:	bf00      	nop
 8004232:	3710      	adds	r7, #16
 8004234:	46bd      	mov	sp, r7
 8004236:	bd80      	pop	{r7, pc}

08004238 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8004238:	b480      	push	{r7}
 800423a:	b083      	sub	sp, #12
 800423c:	af00      	add	r7, sp, #0
 800423e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	689b      	ldr	r3, [r3, #8]
 8004244:	4618      	mov	r0, r3
 8004246:	370c      	adds	r7, #12
 8004248:	46bd      	mov	sp, r7
 800424a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800424e:	4770      	bx	lr

08004250 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>:
      size() const noexcept { return _M_len; }
 8004250:	b480      	push	{r7}
 8004252:	b083      	sub	sp, #12
 8004254:	af00      	add	r7, sp, #0
 8004256:	6078      	str	r0, [r7, #4]
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	685b      	ldr	r3, [r3, #4]
 800425c:	4618      	mov	r0, r3
 800425e:	370c      	adds	r7, #12
 8004260:	46bd      	mov	sp, r7
 8004262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004266:	4770      	bx	lr

08004268 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 8004268:	b480      	push	{r7}
 800426a:	b083      	sub	sp, #12
 800426c:	af00      	add	r7, sp, #0
 800426e:	6078      	str	r0, [r7, #4]
 8004270:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	683a      	ldr	r2, [r7, #0]
 8004276:	601a      	str	r2, [r3, #0]
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	4618      	mov	r0, r3
 800427c:	370c      	adds	r7, #12
 800427e:	46bd      	mov	sp, r7
 8004280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004284:	4770      	bx	lr

08004286 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8004286:	b580      	push	{r7, lr}
 8004288:	b084      	sub	sp, #16
 800428a:	af00      	add	r7, sp, #0
 800428c:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	1d1a      	adds	r2, r3, #4
 8004292:	f107 030c 	add.w	r3, r7, #12
 8004296:	4611      	mov	r1, r2
 8004298:	4618      	mov	r0, r3
 800429a:	f000 fff9 	bl	8005290 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 800429e:	68fb      	ldr	r3, [r7, #12]
 80042a0:	4618      	mov	r0, r3
 80042a2:	3710      	adds	r7, #16
 80042a4:	46bd      	mov	sp, r7
 80042a6:	bd80      	pop	{r7, pc}

080042a8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 80042a8:	b480      	push	{r7}
 80042aa:	b083      	sub	sp, #12
 80042ac:	af00      	add	r7, sp, #0
 80042ae:	6078      	str	r0, [r7, #4]
 80042b0:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 80042b2:	683b      	ldr	r3, [r7, #0]
 80042b4:	681a      	ldr	r2, [r3, #0]
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	601a      	str	r2, [r3, #0]
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	4618      	mov	r0, r3
 80042be:	370c      	adds	r7, #12
 80042c0:	46bd      	mov	sp, r7
 80042c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042c6:	4770      	bx	lr

080042c8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
    template<typename _Arg, typename _NodeGen>
#else
    template<typename _NodeGen>
#endif
      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80042c8:	b5b0      	push	{r4, r5, r7, lr}
 80042ca:	b08a      	sub	sp, #40	; 0x28
 80042cc:	af02      	add	r7, sp, #8
 80042ce:	60f8      	str	r0, [r7, #12]
 80042d0:	60b9      	str	r1, [r7, #8]
 80042d2:	607a      	str	r2, [r7, #4]
 80042d4:	603b      	str	r3, [r7, #0]
			const _Val& __v,
#endif
			_NodeGen& __node_gen)
    {
      pair<_Base_ptr, _Base_ptr> __res
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 80042d6:	f107 0318 	add.w	r3, r7, #24
 80042da:	6879      	ldr	r1, [r7, #4]
 80042dc:	4618      	mov	r0, r3
 80042de:	f001 f909 	bl	80054f4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 80042e2:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 80042e4:	f107 0010 	add.w	r0, r7, #16
 80042e8:	68ba      	ldr	r2, [r7, #8]
 80042ea:	68f9      	ldr	r1, [r7, #12]
 80042ec:	f000 ffdf 	bl	80052ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>

      if (__res.second)
 80042f0:	697b      	ldr	r3, [r7, #20]
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d00f      	beq.n	8004316 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
	return _M_insert_(__res.first, __res.second,
			  _GLIBCXX_FORWARD(_Arg, __v),
			  __node_gen);
 80042f6:	693c      	ldr	r4, [r7, #16]
 80042f8:	697d      	ldr	r5, [r7, #20]
 80042fa:	6878      	ldr	r0, [r7, #4]
 80042fc:	f001 f906 	bl	800550c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004300:	4602      	mov	r2, r0
 8004302:	683b      	ldr	r3, [r7, #0]
 8004304:	9300      	str	r3, [sp, #0]
 8004306:	4613      	mov	r3, r2
 8004308:	462a      	mov	r2, r5
 800430a:	4621      	mov	r1, r4
 800430c:	68f8      	ldr	r0, [r7, #12]
 800430e:	f001 f908 	bl	8005522 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 8004312:	4603      	mov	r3, r0
 8004314:	e007      	b.n	8004326 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8004316:	693a      	ldr	r2, [r7, #16]
 8004318:	f107 031c 	add.w	r3, r7, #28
 800431c:	4611      	mov	r1, r2
 800431e:	4618      	mov	r0, r3
 8004320:	f000 ffb6 	bl	8005290 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8004324:	69fb      	ldr	r3, [r7, #28]
    }
 8004326:	4618      	mov	r0, r3
 8004328:	3720      	adds	r7, #32
 800432a:	46bd      	mov	sp, r7
 800432c:	bdb0      	pop	{r4, r5, r7, pc}

0800432e <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>:
 800432e:	b480      	push	{r7}
 8004330:	b083      	sub	sp, #12
 8004332:	af00      	add	r7, sp, #0
 8004334:	6078      	str	r0, [r7, #4]
 8004336:	6039      	str	r1, [r7, #0]
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	4618      	mov	r0, r3
 800433c:	370c      	adds	r7, #12
 800433e:	46bd      	mov	sp, r7
 8004340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004344:	4770      	bx	lr

08004346 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 8004346:	b580      	push	{r7, lr}
 8004348:	b082      	sub	sp, #8
 800434a:	af00      	add	r7, sp, #0
 800434c:	6078      	str	r0, [r7, #4]
 800434e:	6039      	str	r1, [r7, #0]
 8004350:	6878      	ldr	r0, [r7, #4]
 8004352:	f001 f92f 	bl	80055b4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	4618      	mov	r0, r3
 800435a:	3708      	adds	r7, #8
 800435c:	46bd      	mov	sp, r7
 800435e:	bd80      	pop	{r7, pc}

08004360 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8004360:	b580      	push	{r7, lr}
 8004362:	b082      	sub	sp, #8
 8004364:	af00      	add	r7, sp, #0
 8004366:	6078      	str	r0, [r7, #4]
 8004368:	6878      	ldr	r0, [r7, #4]
 800436a:	f001 f92e 	bl	80055ca <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	4618      	mov	r0, r3
 8004372:	3708      	adds	r7, #8
 8004374:	46bd      	mov	sp, r7
 8004376:	bd80      	pop	{r7, pc}

08004378 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8004378:	b580      	push	{r7, lr}
 800437a:	b084      	sub	sp, #16
 800437c:	af00      	add	r7, sp, #0
 800437e:	60f8      	str	r0, [r7, #12]
 8004380:	60b9      	str	r1, [r7, #8]
 8004382:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 8004384:	6878      	ldr	r0, [r7, #4]
 8004386:	f001 f92b 	bl	80055e0 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>
 800438a:	4603      	mov	r3, r0
 800438c:	4619      	mov	r1, r3
 800438e:	68f8      	ldr	r0, [r7, #12]
 8004390:	f001 f931 	bl	80055f6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>
 8004394:	68fb      	ldr	r3, [r7, #12]
 8004396:	68b9      	ldr	r1, [r7, #8]
 8004398:	4618      	mov	r0, r3
 800439a:	f001 f93a 	bl	8005612 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>
 800439e:	68fb      	ldr	r3, [r7, #12]
 80043a0:	3304      	adds	r3, #4
 80043a2:	4618      	mov	r0, r3
 80043a4:	f7fc fe6b 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 80043a8:	68fb      	ldr	r3, [r7, #12]
 80043aa:	4618      	mov	r0, r3
 80043ac:	3710      	adds	r7, #16
 80043ae:	46bd      	mov	sp, r7
 80043b0:	bd80      	pop	{r7, pc}

080043b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80043b2:	b580      	push	{r7, lr}
 80043b4:	b084      	sub	sp, #16
 80043b6:	af00      	add	r7, sp, #0
 80043b8:	6078      	str	r0, [r7, #4]
 80043ba:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 80043bc:	683b      	ldr	r3, [r7, #0]
 80043be:	2b00      	cmp	r3, #0
 80043c0:	d012      	beq.n	80043e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 80043c2:	6838      	ldr	r0, [r7, #0]
 80043c4:	f001 f931 	bl	800562a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80043c8:	4603      	mov	r3, r0
 80043ca:	4619      	mov	r1, r3
 80043cc:	6878      	ldr	r0, [r7, #4]
 80043ce:	f7ff fff0 	bl	80043b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 80043d2:	6838      	ldr	r0, [r7, #0]
 80043d4:	f001 f935 	bl	8005642 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 80043d8:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 80043da:	6839      	ldr	r1, [r7, #0]
 80043dc:	6878      	ldr	r0, [r7, #4]
 80043de:	f001 f93c 	bl	800565a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80043e6:	e7e9      	b.n	80043bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 80043e8:	bf00      	nop
 80043ea:	3710      	adds	r7, #16
 80043ec:	46bd      	mov	sp, r7
 80043ee:	bd80      	pop	{r7, pc}

080043f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80043f0:	b480      	push	{r7}
 80043f2:	b083      	sub	sp, #12
 80043f4:	af00      	add	r7, sp, #0
 80043f6:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	689b      	ldr	r3, [r3, #8]
 80043fc:	4618      	mov	r0, r3
 80043fe:	370c      	adds	r7, #12
 8004400:	46bd      	mov	sp, r7
 8004402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004406:	4770      	bx	lr

08004408 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>:
 8004408:	b480      	push	{r7}
 800440a:	b083      	sub	sp, #12
 800440c:	af00      	add	r7, sp, #0
 800440e:	6078      	str	r0, [r7, #4]
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	685b      	ldr	r3, [r3, #4]
 8004414:	4618      	mov	r0, r3
 8004416:	370c      	adds	r7, #12
 8004418:	46bd      	mov	sp, r7
 800441a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800441e:	4770      	bx	lr

08004420 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 8004420:	b480      	push	{r7}
 8004422:	b083      	sub	sp, #12
 8004424:	af00      	add	r7, sp, #0
 8004426:	6078      	str	r0, [r7, #4]
 8004428:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	683a      	ldr	r2, [r7, #0]
 800442e:	601a      	str	r2, [r3, #0]
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	4618      	mov	r0, r3
 8004434:	370c      	adds	r7, #12
 8004436:	46bd      	mov	sp, r7
 8004438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800443c:	4770      	bx	lr

0800443e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800443e:	b580      	push	{r7, lr}
 8004440:	b084      	sub	sp, #16
 8004442:	af00      	add	r7, sp, #0
 8004444:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	1d1a      	adds	r2, r3, #4
 800444a:	f107 030c 	add.w	r3, r7, #12
 800444e:	4611      	mov	r1, r2
 8004450:	4618      	mov	r0, r3
 8004452:	f001 f913 	bl	800567c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8004456:	68fb      	ldr	r3, [r7, #12]
 8004458:	4618      	mov	r0, r3
 800445a:	3710      	adds	r7, #16
 800445c:	46bd      	mov	sp, r7
 800445e:	bd80      	pop	{r7, pc}

08004460 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8004460:	b480      	push	{r7}
 8004462:	b083      	sub	sp, #12
 8004464:	af00      	add	r7, sp, #0
 8004466:	6078      	str	r0, [r7, #4]
 8004468:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 800446a:	683b      	ldr	r3, [r7, #0]
 800446c:	681a      	ldr	r2, [r3, #0]
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	601a      	str	r2, [r3, #0]
 8004472:	687b      	ldr	r3, [r7, #4]
 8004474:	4618      	mov	r0, r3
 8004476:	370c      	adds	r7, #12
 8004478:	46bd      	mov	sp, r7
 800447a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800447e:	4770      	bx	lr

08004480 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004480:	b5b0      	push	{r4, r5, r7, lr}
 8004482:	b08a      	sub	sp, #40	; 0x28
 8004484:	af02      	add	r7, sp, #8
 8004486:	60f8      	str	r0, [r7, #12]
 8004488:	60b9      	str	r1, [r7, #8]
 800448a:	607a      	str	r2, [r7, #4]
 800448c:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 800448e:	f107 0318 	add.w	r3, r7, #24
 8004492:	6879      	ldr	r1, [r7, #4]
 8004494:	4618      	mov	r0, r3
 8004496:	f001 fa23 	bl	80058e0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 800449a:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 800449c:	f107 0010 	add.w	r0, r7, #16
 80044a0:	68ba      	ldr	r2, [r7, #8]
 80044a2:	68f9      	ldr	r1, [r7, #12]
 80044a4:	f001 f8f9 	bl	800569a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
      if (__res.second)
 80044a8:	697b      	ldr	r3, [r7, #20]
 80044aa:	2b00      	cmp	r3, #0
 80044ac:	d00f      	beq.n	80044ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x4e>
			  __node_gen);
 80044ae:	693c      	ldr	r4, [r7, #16]
 80044b0:	697d      	ldr	r5, [r7, #20]
 80044b2:	6878      	ldr	r0, [r7, #4]
 80044b4:	f001 fa20 	bl	80058f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 80044b8:	4602      	mov	r2, r0
 80044ba:	683b      	ldr	r3, [r7, #0]
 80044bc:	9300      	str	r3, [sp, #0]
 80044be:	4613      	mov	r3, r2
 80044c0:	462a      	mov	r2, r5
 80044c2:	4621      	mov	r1, r4
 80044c4:	68f8      	ldr	r0, [r7, #12]
 80044c6:	f001 fa22 	bl	800590e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>
 80044ca:	4603      	mov	r3, r0
 80044cc:	e007      	b.n	80044de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x5e>
      return iterator(__res.first);
 80044ce:	693a      	ldr	r2, [r7, #16]
 80044d0:	f107 031c 	add.w	r3, r7, #28
 80044d4:	4611      	mov	r1, r2
 80044d6:	4618      	mov	r0, r3
 80044d8:	f001 f8d0 	bl	800567c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 80044dc:	69fb      	ldr	r3, [r7, #28]
    }
 80044de:	4618      	mov	r0, r3
 80044e0:	3720      	adds	r7, #32
 80044e2:	46bd      	mov	sp, r7
 80044e4:	bdb0      	pop	{r4, r5, r7, pc}

080044e6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>:
 80044e6:	b480      	push	{r7}
 80044e8:	b083      	sub	sp, #12
 80044ea:	af00      	add	r7, sp, #0
 80044ec:	6078      	str	r0, [r7, #4]
 80044ee:	6039      	str	r1, [r7, #0]
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	4618      	mov	r0, r3
 80044f4:	370c      	adds	r7, #12
 80044f6:	46bd      	mov	sp, r7
 80044f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044fc:	4770      	bx	lr

080044fe <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 80044fe:	b580      	push	{r7, lr}
 8004500:	b082      	sub	sp, #8
 8004502:	af00      	add	r7, sp, #0
 8004504:	6078      	str	r0, [r7, #4]
 8004506:	6039      	str	r1, [r7, #0]
 8004508:	6878      	ldr	r0, [r7, #4]
 800450a:	f001 fa49 	bl	80059a0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	4618      	mov	r0, r3
 8004512:	3708      	adds	r7, #8
 8004514:	46bd      	mov	sp, r7
 8004516:	bd80      	pop	{r7, pc}

08004518 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8004518:	b580      	push	{r7, lr}
 800451a:	b082      	sub	sp, #8
 800451c:	af00      	add	r7, sp, #0
 800451e:	6078      	str	r0, [r7, #4]
 8004520:	6878      	ldr	r0, [r7, #4]
 8004522:	f001 fa48 	bl	80059b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	4618      	mov	r0, r3
 800452a:	3708      	adds	r7, #8
 800452c:	46bd      	mov	sp, r7
 800452e:	bd80      	pop	{r7, pc}

08004530 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8004530:	b580      	push	{r7, lr}
 8004532:	b084      	sub	sp, #16
 8004534:	af00      	add	r7, sp, #0
 8004536:	60f8      	str	r0, [r7, #12]
 8004538:	60b9      	str	r1, [r7, #8]
 800453a:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 800453c:	6878      	ldr	r0, [r7, #4]
 800453e:	f001 fa45 	bl	80059cc <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>
 8004542:	4603      	mov	r3, r0
 8004544:	4619      	mov	r1, r3
 8004546:	68f8      	ldr	r0, [r7, #12]
 8004548:	f001 fa4b 	bl	80059e2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>
 800454c:	68fb      	ldr	r3, [r7, #12]
 800454e:	68b9      	ldr	r1, [r7, #8]
 8004550:	4618      	mov	r0, r3
 8004552:	f000 fe68 	bl	8005226 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 8004556:	68fb      	ldr	r3, [r7, #12]
 8004558:	3304      	adds	r3, #4
 800455a:	4618      	mov	r0, r3
 800455c:	f7fc fd8f 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8004560:	68fb      	ldr	r3, [r7, #12]
 8004562:	4618      	mov	r0, r3
 8004564:	3710      	adds	r7, #16
 8004566:	46bd      	mov	sp, r7
 8004568:	bd80      	pop	{r7, pc}

0800456a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800456a:	b580      	push	{r7, lr}
 800456c:	b084      	sub	sp, #16
 800456e:	af00      	add	r7, sp, #0
 8004570:	6078      	str	r0, [r7, #4]
 8004572:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8004574:	683b      	ldr	r3, [r7, #0]
 8004576:	2b00      	cmp	r3, #0
 8004578:	d012      	beq.n	80045a0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	  _M_erase(_S_right(__x));
 800457a:	6838      	ldr	r0, [r7, #0]
 800457c:	f001 fa3f 	bl	80059fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8004580:	4603      	mov	r3, r0
 8004582:	4619      	mov	r1, r3
 8004584:	6878      	ldr	r0, [r7, #4]
 8004586:	f7ff fff0 	bl	800456a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 800458a:	6838      	ldr	r0, [r7, #0]
 800458c:	f001 fa43 	bl	8005a16 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8004590:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8004592:	6839      	ldr	r1, [r7, #0]
 8004594:	6878      	ldr	r0, [r7, #4]
 8004596:	f001 fa4a 	bl	8005a2e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 800459a:	68fb      	ldr	r3, [r7, #12]
 800459c:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800459e:	e7e9      	b.n	8004574 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
    }
 80045a0:	bf00      	nop
 80045a2:	3710      	adds	r7, #16
 80045a4:	46bd      	mov	sp, r7
 80045a6:	bd80      	pop	{r7, pc}

080045a8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80045a8:	b480      	push	{r7}
 80045aa:	b083      	sub	sp, #12
 80045ac:	af00      	add	r7, sp, #0
 80045ae:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	689b      	ldr	r3, [r3, #8]
 80045b4:	4618      	mov	r0, r3
 80045b6:	370c      	adds	r7, #12
 80045b8:	46bd      	mov	sp, r7
 80045ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045be:	4770      	bx	lr

080045c0 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>:
 80045c0:	b480      	push	{r7}
 80045c2:	b083      	sub	sp, #12
 80045c4:	af00      	add	r7, sp, #0
 80045c6:	6078      	str	r0, [r7, #4]
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	685b      	ldr	r3, [r3, #4]
 80045cc:	4618      	mov	r0, r3
 80045ce:	370c      	adds	r7, #12
 80045d0:	46bd      	mov	sp, r7
 80045d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045d6:	4770      	bx	lr

080045d8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 80045d8:	b480      	push	{r7}
 80045da:	b083      	sub	sp, #12
 80045dc:	af00      	add	r7, sp, #0
 80045de:	6078      	str	r0, [r7, #4]
 80045e0:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	683a      	ldr	r2, [r7, #0]
 80045e6:	601a      	str	r2, [r3, #0]
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	4618      	mov	r0, r3
 80045ec:	370c      	adds	r7, #12
 80045ee:	46bd      	mov	sp, r7
 80045f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045f4:	4770      	bx	lr

080045f6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80045f6:	b580      	push	{r7, lr}
 80045f8:	b084      	sub	sp, #16
 80045fa:	af00      	add	r7, sp, #0
 80045fc:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	1d1a      	adds	r2, r3, #4
 8004602:	f107 030c 	add.w	r3, r7, #12
 8004606:	4611      	mov	r1, r2
 8004608:	4618      	mov	r0, r3
 800460a:	f001 fa21 	bl	8005a50 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 800460e:	68fb      	ldr	r3, [r7, #12]
 8004610:	4618      	mov	r0, r3
 8004612:	3710      	adds	r7, #16
 8004614:	46bd      	mov	sp, r7
 8004616:	bd80      	pop	{r7, pc}

08004618 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8004618:	b480      	push	{r7}
 800461a:	b083      	sub	sp, #12
 800461c:	af00      	add	r7, sp, #0
 800461e:	6078      	str	r0, [r7, #4]
 8004620:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8004622:	683b      	ldr	r3, [r7, #0]
 8004624:	681a      	ldr	r2, [r3, #0]
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	601a      	str	r2, [r3, #0]
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	4618      	mov	r0, r3
 800462e:	370c      	adds	r7, #12
 8004630:	46bd      	mov	sp, r7
 8004632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004636:	4770      	bx	lr

08004638 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8004638:	b5b0      	push	{r4, r5, r7, lr}
 800463a:	b08a      	sub	sp, #40	; 0x28
 800463c:	af02      	add	r7, sp, #8
 800463e:	60f8      	str	r0, [r7, #12]
 8004640:	60b9      	str	r1, [r7, #8]
 8004642:	607a      	str	r2, [r7, #4]
 8004644:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8004646:	f107 0318 	add.w	r3, r7, #24
 800464a:	6879      	ldr	r1, [r7, #4]
 800464c:	4618      	mov	r0, r3
 800464e:	f001 fb31 	bl	8005cb4 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8004652:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8004654:	f107 0010 	add.w	r0, r7, #16
 8004658:	68ba      	ldr	r2, [r7, #8]
 800465a:	68f9      	ldr	r1, [r7, #12]
 800465c:	f001 fa07 	bl	8005a6e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>
      if (__res.second)
 8004660:	697b      	ldr	r3, [r7, #20]
 8004662:	2b00      	cmp	r3, #0
 8004664:	d00f      	beq.n	8004686 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
			  __node_gen);
 8004666:	693c      	ldr	r4, [r7, #16]
 8004668:	697d      	ldr	r5, [r7, #20]
 800466a:	6878      	ldr	r0, [r7, #4]
 800466c:	f001 fb2e 	bl	8005ccc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004670:	4602      	mov	r2, r0
 8004672:	683b      	ldr	r3, [r7, #0]
 8004674:	9300      	str	r3, [sp, #0]
 8004676:	4613      	mov	r3, r2
 8004678:	462a      	mov	r2, r5
 800467a:	4621      	mov	r1, r4
 800467c:	68f8      	ldr	r0, [r7, #12]
 800467e:	f001 fb30 	bl	8005ce2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 8004682:	4603      	mov	r3, r0
 8004684:	e007      	b.n	8004696 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8004686:	693a      	ldr	r2, [r7, #16]
 8004688:	f107 031c 	add.w	r3, r7, #28
 800468c:	4611      	mov	r1, r2
 800468e:	4618      	mov	r0, r3
 8004690:	f001 f9de 	bl	8005a50 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8004694:	69fb      	ldr	r3, [r7, #28]
    }
 8004696:	4618      	mov	r0, r3
 8004698:	3720      	adds	r7, #32
 800469a:	46bd      	mov	sp, r7
 800469c:	bdb0      	pop	{r4, r5, r7, pc}

0800469e <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800469e:	b480      	push	{r7}
 80046a0:	b083      	sub	sp, #12
 80046a2:	af00      	add	r7, sp, #0
 80046a4:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 80046a6:	687b      	ldr	r3, [r7, #4]
    }
 80046a8:	4618      	mov	r0, r3
 80046aa:	370c      	adds	r7, #12
 80046ac:	46bd      	mov	sp, r7
 80046ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046b2:	4770      	bx	lr

080046b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80046b4:	b580      	push	{r7, lr}
 80046b6:	b082      	sub	sp, #8
 80046b8:	af00      	add	r7, sp, #0
 80046ba:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80046bc:	6878      	ldr	r0, [r7, #4]
 80046be:	f7fe fc3f 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80046c2:	4603      	mov	r3, r0
 80046c4:	4618      	mov	r0, r3
 80046c6:	f7fd fa4b 	bl	8001b60 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80046ca:	4603      	mov	r3, r0
	}
 80046cc:	4618      	mov	r0, r3
 80046ce:	3708      	adds	r7, #8
 80046d0:	46bd      	mov	sp, r7
 80046d2:	bd80      	pop	{r7, pc}

080046d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80046d4:	b5b0      	push	{r4, r5, r7, lr}
 80046d6:	b082      	sub	sp, #8
 80046d8:	af00      	add	r7, sp, #0
 80046da:	6078      	str	r0, [r7, #4]
 80046dc:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80046de:	6878      	ldr	r0, [r7, #4]
 80046e0:	f001 fb48 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80046e4:	4604      	mov	r4, r0
 80046e6:	6838      	ldr	r0, [r7, #0]
 80046e8:	f7fe fc2a 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80046ec:	4603      	mov	r3, r0
 80046ee:	4618      	mov	r0, r3
 80046f0:	f7ff ffe0 	bl	80046b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 80046f4:	4603      	mov	r3, r0
 80046f6:	4619      	mov	r1, r3
 80046f8:	4620      	mov	r0, r4
 80046fa:	f001 fb46 	bl	8005d8a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80046fe:	462b      	mov	r3, r5
      }
 8004700:	4618      	mov	r0, r3
 8004702:	3708      	adds	r7, #8
 8004704:	46bd      	mov	sp, r7
 8004706:	bdb0      	pop	{r4, r5, r7, pc}

08004708 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004708:	b5b0      	push	{r4, r5, r7, lr}
 800470a:	b082      	sub	sp, #8
 800470c:	af00      	add	r7, sp, #0
 800470e:	6078      	str	r0, [r7, #4]
 8004710:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8004712:	6878      	ldr	r0, [r7, #4]
 8004714:	f001 fb2e 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004718:	4604      	mov	r4, r0
 800471a:	6838      	ldr	r0, [r7, #0]
 800471c:	f7fe fc10 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004720:	4603      	mov	r3, r0
 8004722:	4619      	mov	r1, r3
 8004724:	4620      	mov	r0, r4
 8004726:	f7ff ffd5 	bl	80046d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800472a:	462b      	mov	r3, r5
      }
 800472c:	4618      	mov	r0, r3
 800472e:	3708      	adds	r7, #8
 8004730:	46bd      	mov	sp, r7
 8004732:	bdb0      	pop	{r4, r5, r7, pc}

08004734 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004734:	b5b0      	push	{r4, r5, r7, lr}
 8004736:	b082      	sub	sp, #8
 8004738:	af00      	add	r7, sp, #0
 800473a:	6078      	str	r0, [r7, #4]
 800473c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800473e:	6878      	ldr	r0, [r7, #4]
 8004740:	f001 fb18 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004744:	4604      	mov	r4, r0
 8004746:	6838      	ldr	r0, [r7, #0]
 8004748:	f7fe fbfa 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800474c:	4603      	mov	r3, r0
 800474e:	4619      	mov	r1, r3
 8004750:	4620      	mov	r0, r4
 8004752:	f7ff ffd9 	bl	8004708 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8004756:	462b      	mov	r3, r5
      }
 8004758:	4618      	mov	r0, r3
 800475a:	3708      	adds	r7, #8
 800475c:	46bd      	mov	sp, r7
 800475e:	bdb0      	pop	{r4, r5, r7, pc}

08004760 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8004760:	b580      	push	{r7, lr}
 8004762:	b082      	sub	sp, #8
 8004764:	af00      	add	r7, sp, #0
 8004766:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8004768:	6878      	ldr	r0, [r7, #4]
 800476a:	f7fe fbe9 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800476e:	4603      	mov	r3, r0
 8004770:	4618      	mov	r0, r3
 8004772:	f7fd fcc4 	bl	80020fe <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8004776:	4603      	mov	r3, r0
	}
 8004778:	4618      	mov	r0, r3
 800477a:	3708      	adds	r7, #8
 800477c:	46bd      	mov	sp, r7
 800477e:	bd80      	pop	{r7, pc}

08004780 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8004780:	b5b0      	push	{r4, r5, r7, lr}
 8004782:	b082      	sub	sp, #8
 8004784:	af00      	add	r7, sp, #0
 8004786:	6078      	str	r0, [r7, #4]
 8004788:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800478a:	6878      	ldr	r0, [r7, #4]
 800478c:	f001 faf2 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004790:	4604      	mov	r4, r0
 8004792:	6838      	ldr	r0, [r7, #0]
 8004794:	f7fe fbd4 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004798:	4603      	mov	r3, r0
 800479a:	4618      	mov	r0, r3
 800479c:	f7ff ffe0 	bl	8004760 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 80047a0:	4603      	mov	r3, r0
 80047a2:	4619      	mov	r1, r3
 80047a4:	4620      	mov	r0, r4
 80047a6:	f001 fb07 	bl	8005db8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80047aa:	462b      	mov	r3, r5
      }
 80047ac:	4618      	mov	r0, r3
 80047ae:	3708      	adds	r7, #8
 80047b0:	46bd      	mov	sp, r7
 80047b2:	bdb0      	pop	{r4, r5, r7, pc}

080047b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80047b4:	b5b0      	push	{r4, r5, r7, lr}
 80047b6:	b082      	sub	sp, #8
 80047b8:	af00      	add	r7, sp, #0
 80047ba:	6078      	str	r0, [r7, #4]
 80047bc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80047be:	6878      	ldr	r0, [r7, #4]
 80047c0:	f001 fad8 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80047c4:	4604      	mov	r4, r0
 80047c6:	6838      	ldr	r0, [r7, #0]
 80047c8:	f7fe fbba 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80047cc:	4603      	mov	r3, r0
 80047ce:	4619      	mov	r1, r3
 80047d0:	4620      	mov	r0, r4
 80047d2:	f7ff ffd5 	bl	8004780 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80047d6:	462b      	mov	r3, r5
      }
 80047d8:	4618      	mov	r0, r3
 80047da:	3708      	adds	r7, #8
 80047dc:	46bd      	mov	sp, r7
 80047de:	bdb0      	pop	{r4, r5, r7, pc}

080047e0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80047e0:	b5b0      	push	{r4, r5, r7, lr}
 80047e2:	b082      	sub	sp, #8
 80047e4:	af00      	add	r7, sp, #0
 80047e6:	6078      	str	r0, [r7, #4]
 80047e8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80047ea:	6878      	ldr	r0, [r7, #4]
 80047ec:	f001 fac2 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80047f0:	4604      	mov	r4, r0
 80047f2:	6838      	ldr	r0, [r7, #0]
 80047f4:	f7fe fba4 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80047f8:	4603      	mov	r3, r0
 80047fa:	4619      	mov	r1, r3
 80047fc:	4620      	mov	r0, r4
 80047fe:	f7ff ffd9 	bl	80047b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8004802:	462b      	mov	r3, r5
      }
 8004804:	4618      	mov	r0, r3
 8004806:	3708      	adds	r7, #8
 8004808:	46bd      	mov	sp, r7
 800480a:	bdb0      	pop	{r4, r5, r7, pc}

0800480c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800480c:	b580      	push	{r7, lr}
 800480e:	b082      	sub	sp, #8
 8004810:	af00      	add	r7, sp, #0
 8004812:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8004814:	6878      	ldr	r0, [r7, #4]
 8004816:	f7fe fb93 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800481a:	4603      	mov	r3, r0
 800481c:	4618      	mov	r0, r3
 800481e:	f7fd fd0c 	bl	800223a <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8004822:	4603      	mov	r3, r0
	}
 8004824:	4618      	mov	r0, r3
 8004826:	3708      	adds	r7, #8
 8004828:	46bd      	mov	sp, r7
 800482a:	bd80      	pop	{r7, pc}

0800482c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800482c:	b5b0      	push	{r4, r5, r7, lr}
 800482e:	b082      	sub	sp, #8
 8004830:	af00      	add	r7, sp, #0
 8004832:	6078      	str	r0, [r7, #4]
 8004834:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8004836:	6878      	ldr	r0, [r7, #4]
 8004838:	f001 fa9c 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800483c:	4604      	mov	r4, r0
 800483e:	6838      	ldr	r0, [r7, #0]
 8004840:	f7fe fb7e 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004844:	4603      	mov	r3, r0
 8004846:	4618      	mov	r0, r3
 8004848:	f7ff ffe0 	bl	800480c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 800484c:	4603      	mov	r3, r0
 800484e:	4619      	mov	r1, r3
 8004850:	4620      	mov	r0, r4
 8004852:	f001 fac8 	bl	8005de6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8004856:	462b      	mov	r3, r5
      }
 8004858:	4618      	mov	r0, r3
 800485a:	3708      	adds	r7, #8
 800485c:	46bd      	mov	sp, r7
 800485e:	bdb0      	pop	{r4, r5, r7, pc}

08004860 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004860:	b5b0      	push	{r4, r5, r7, lr}
 8004862:	b082      	sub	sp, #8
 8004864:	af00      	add	r7, sp, #0
 8004866:	6078      	str	r0, [r7, #4]
 8004868:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800486a:	6878      	ldr	r0, [r7, #4]
 800486c:	f001 fa82 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004870:	4604      	mov	r4, r0
 8004872:	6838      	ldr	r0, [r7, #0]
 8004874:	f7fe fb64 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004878:	4603      	mov	r3, r0
 800487a:	4619      	mov	r1, r3
 800487c:	4620      	mov	r0, r4
 800487e:	f7ff ffd5 	bl	800482c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8004882:	462b      	mov	r3, r5
      }
 8004884:	4618      	mov	r0, r3
 8004886:	3708      	adds	r7, #8
 8004888:	46bd      	mov	sp, r7
 800488a:	bdb0      	pop	{r4, r5, r7, pc}

0800488c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800488c:	b5b0      	push	{r4, r5, r7, lr}
 800488e:	b082      	sub	sp, #8
 8004890:	af00      	add	r7, sp, #0
 8004892:	6078      	str	r0, [r7, #4]
 8004894:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8004896:	6878      	ldr	r0, [r7, #4]
 8004898:	f001 fa6c 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800489c:	4604      	mov	r4, r0
 800489e:	6838      	ldr	r0, [r7, #0]
 80048a0:	f7fe fb4e 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80048a4:	4603      	mov	r3, r0
 80048a6:	4619      	mov	r1, r3
 80048a8:	4620      	mov	r0, r4
 80048aa:	f7ff ffd9 	bl	8004860 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80048ae:	462b      	mov	r3, r5
      }
 80048b0:	4618      	mov	r0, r3
 80048b2:	3708      	adds	r7, #8
 80048b4:	46bd      	mov	sp, r7
 80048b6:	bdb0      	pop	{r4, r5, r7, pc}

080048b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80048b8:	b580      	push	{r7, lr}
 80048ba:	b082      	sub	sp, #8
 80048bc:	af00      	add	r7, sp, #0
 80048be:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80048c0:	6878      	ldr	r0, [r7, #4]
 80048c2:	f7fe fb3d 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80048c6:	4603      	mov	r3, r0
 80048c8:	4618      	mov	r0, r3
 80048ca:	f7fd fd66 	bl	800239a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80048ce:	4603      	mov	r3, r0
	}
 80048d0:	4618      	mov	r0, r3
 80048d2:	3708      	adds	r7, #8
 80048d4:	46bd      	mov	sp, r7
 80048d6:	bd80      	pop	{r7, pc}

080048d8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80048d8:	b5b0      	push	{r4, r5, r7, lr}
 80048da:	b082      	sub	sp, #8
 80048dc:	af00      	add	r7, sp, #0
 80048de:	6078      	str	r0, [r7, #4]
 80048e0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80048e2:	6878      	ldr	r0, [r7, #4]
 80048e4:	f001 fa46 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80048e8:	4604      	mov	r4, r0
 80048ea:	6838      	ldr	r0, [r7, #0]
 80048ec:	f7fe fb28 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80048f0:	4603      	mov	r3, r0
 80048f2:	4618      	mov	r0, r3
 80048f4:	f7ff ffe0 	bl	80048b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 80048f8:	4603      	mov	r3, r0
 80048fa:	4619      	mov	r1, r3
 80048fc:	4620      	mov	r0, r4
 80048fe:	f001 fa89 	bl	8005e14 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8004902:	462b      	mov	r3, r5
      }
 8004904:	4618      	mov	r0, r3
 8004906:	3708      	adds	r7, #8
 8004908:	46bd      	mov	sp, r7
 800490a:	bdb0      	pop	{r4, r5, r7, pc}

0800490c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800490c:	b5b0      	push	{r4, r5, r7, lr}
 800490e:	b082      	sub	sp, #8
 8004910:	af00      	add	r7, sp, #0
 8004912:	6078      	str	r0, [r7, #4]
 8004914:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8004916:	6878      	ldr	r0, [r7, #4]
 8004918:	f001 fa2c 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800491c:	4604      	mov	r4, r0
 800491e:	6838      	ldr	r0, [r7, #0]
 8004920:	f7fe fb0e 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004924:	4603      	mov	r3, r0
 8004926:	4619      	mov	r1, r3
 8004928:	4620      	mov	r0, r4
 800492a:	f7ff ffd5 	bl	80048d8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800492e:	462b      	mov	r3, r5
      }
 8004930:	4618      	mov	r0, r3
 8004932:	3708      	adds	r7, #8
 8004934:	46bd      	mov	sp, r7
 8004936:	bdb0      	pop	{r4, r5, r7, pc}

08004938 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8004938:	b5b0      	push	{r4, r5, r7, lr}
 800493a:	b082      	sub	sp, #8
 800493c:	af00      	add	r7, sp, #0
 800493e:	6078      	str	r0, [r7, #4]
 8004940:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8004942:	6878      	ldr	r0, [r7, #4]
 8004944:	f001 fa16 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004948:	4604      	mov	r4, r0
 800494a:	6838      	ldr	r0, [r7, #0]
 800494c:	f7fe faf8 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004950:	4603      	mov	r3, r0
 8004952:	4619      	mov	r1, r3
 8004954:	4620      	mov	r0, r4
 8004956:	f7ff ffd9 	bl	800490c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800495a:	462b      	mov	r3, r5
      }
 800495c:	4618      	mov	r0, r3
 800495e:	3708      	adds	r7, #8
 8004960:	46bd      	mov	sp, r7
 8004962:	bdb0      	pop	{r4, r5, r7, pc}

08004964 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8004964:	b580      	push	{r7, lr}
 8004966:	b082      	sub	sp, #8
 8004968:	af00      	add	r7, sp, #0
 800496a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800496c:	6878      	ldr	r0, [r7, #4]
 800496e:	f7fe fae7 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004972:	4603      	mov	r3, r0
 8004974:	4618      	mov	r0, r3
 8004976:	f7fd fdd2 	bl	800251e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800497a:	4603      	mov	r3, r0
	}
 800497c:	4618      	mov	r0, r3
 800497e:	3708      	adds	r7, #8
 8004980:	46bd      	mov	sp, r7
 8004982:	bd80      	pop	{r7, pc}

08004984 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8004984:	b5b0      	push	{r4, r5, r7, lr}
 8004986:	b082      	sub	sp, #8
 8004988:	af00      	add	r7, sp, #0
 800498a:	6078      	str	r0, [r7, #4]
 800498c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800498e:	6878      	ldr	r0, [r7, #4]
 8004990:	f001 f9f0 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004994:	4604      	mov	r4, r0
 8004996:	6838      	ldr	r0, [r7, #0]
 8004998:	f7fe fad2 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800499c:	4603      	mov	r3, r0
 800499e:	4618      	mov	r0, r3
 80049a0:	f7ff ffe0 	bl	8004964 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 80049a4:	4603      	mov	r3, r0
 80049a6:	4619      	mov	r1, r3
 80049a8:	4620      	mov	r0, r4
 80049aa:	f001 fa4a 	bl	8005e42 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80049ae:	462b      	mov	r3, r5
      }
 80049b0:	4618      	mov	r0, r3
 80049b2:	3708      	adds	r7, #8
 80049b4:	46bd      	mov	sp, r7
 80049b6:	bdb0      	pop	{r4, r5, r7, pc}

080049b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80049b8:	b5b0      	push	{r4, r5, r7, lr}
 80049ba:	b082      	sub	sp, #8
 80049bc:	af00      	add	r7, sp, #0
 80049be:	6078      	str	r0, [r7, #4]
 80049c0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80049c2:	6878      	ldr	r0, [r7, #4]
 80049c4:	f001 f9d6 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80049c8:	4604      	mov	r4, r0
 80049ca:	6838      	ldr	r0, [r7, #0]
 80049cc:	f7fe fab8 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80049d0:	4603      	mov	r3, r0
 80049d2:	4619      	mov	r1, r3
 80049d4:	4620      	mov	r0, r4
 80049d6:	f7ff ffd5 	bl	8004984 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80049da:	462b      	mov	r3, r5
      }
 80049dc:	4618      	mov	r0, r3
 80049de:	3708      	adds	r7, #8
 80049e0:	46bd      	mov	sp, r7
 80049e2:	bdb0      	pop	{r4, r5, r7, pc}

080049e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80049e4:	b5b0      	push	{r4, r5, r7, lr}
 80049e6:	b082      	sub	sp, #8
 80049e8:	af00      	add	r7, sp, #0
 80049ea:	6078      	str	r0, [r7, #4]
 80049ec:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80049ee:	6878      	ldr	r0, [r7, #4]
 80049f0:	f001 f9c0 	bl	8005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80049f4:	4604      	mov	r4, r0
 80049f6:	6838      	ldr	r0, [r7, #0]
 80049f8:	f7fe faa2 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 80049fc:	4603      	mov	r3, r0
 80049fe:	4619      	mov	r1, r3
 8004a00:	4620      	mov	r0, r4
 8004a02:	f7ff ffd9 	bl	80049b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8004a06:	462b      	mov	r3, r5
      }
 8004a08:	4618      	mov	r0, r3
 8004a0a:	3708      	adds	r7, #8
 8004a0c:	46bd      	mov	sp, r7
 8004a0e:	bdb0      	pop	{r4, r5, r7, pc}

08004a10 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8004a10:	b580      	push	{r7, lr}
 8004a12:	b082      	sub	sp, #8
 8004a14:	af00      	add	r7, sp, #0
 8004a16:	6078      	str	r0, [r7, #4]
 8004a18:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8004a1a:	683b      	ldr	r3, [r7, #0]
 8004a1c:	009b      	lsls	r3, r3, #2
 8004a1e:	687a      	ldr	r2, [r7, #4]
 8004a20:	4413      	add	r3, r2
 8004a22:	4618      	mov	r0, r3
 8004a24:	f001 fa24 	bl	8005e70 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 8004a28:	4603      	mov	r3, r0
	}
 8004a2a:	4618      	mov	r0, r3
 8004a2c:	3708      	adds	r7, #8
 8004a2e:	46bd      	mov	sp, r7
 8004a30:	bd80      	pop	{r7, pc}
	...

08004a34 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8004a34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a36:	b085      	sub	sp, #20
 8004a38:	af00      	add	r7, sp, #0
 8004a3a:	6078      	str	r0, [r7, #4]
 8004a3c:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8004a3e:	4b0f      	ldr	r3, [pc, #60]	; (8004a7c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_+0x48>)
 8004a40:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8004a42:	6838      	ldr	r0, [r7, #0]
 8004a44:	f7fd f868 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8004a48:	4603      	mov	r3, r0
 8004a4a:	4619      	mov	r1, r3
 8004a4c:	68f8      	ldr	r0, [r7, #12]
 8004a4e:	f7ff ffdf 	bl	8004a10 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKSN_jDpT_>
 8004a52:	4603      	mov	r3, r0
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8004a58:	68bc      	ldr	r4, [r7, #8]
 8004a5a:	6878      	ldr	r0, [r7, #4]
 8004a5c:	f001 fa13 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8004a60:	4605      	mov	r5, r0
 8004a62:	6838      	ldr	r0, [r7, #0]
 8004a64:	f7fe fa6c 	bl	8002f40 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004a68:	4603      	mov	r3, r0
 8004a6a:	4619      	mov	r1, r3
 8004a6c:	4628      	mov	r0, r5
 8004a6e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8004a70:	4633      	mov	r3, r6
    }
 8004a72:	4618      	mov	r0, r3
 8004a74:	3714      	adds	r7, #20
 8004a76:	46bd      	mov	sp, r7
 8004a78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004a7a:	bf00      	nop
 8004a7c:	08029fec 	.word	0x08029fec

08004a80 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 8004a80:	b580      	push	{r7, lr}
 8004a82:	b084      	sub	sp, #16
 8004a84:	af00      	add	r7, sp, #0
 8004a86:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8004a88:	6878      	ldr	r0, [r7, #4]
 8004a8a:	f7ff fe08 	bl	800469e <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S9_EEEEDcOT0_>
 8004a8e:	4602      	mov	r2, r0
 8004a90:	f107 030c 	add.w	r3, r7, #12
 8004a94:	4611      	mov	r1, r2
 8004a96:	4618      	mov	r0, r3
 8004a98:	f7ff ffcc 	bl	8004a34 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SC_EEEEDcOT1_DpOT2_>
      }
 8004a9c:	bf00      	nop
 8004a9e:	3710      	adds	r7, #16
 8004aa0:	46bd      	mov	sp, r7
 8004aa2:	bd80      	pop	{r7, pc}

08004aa4 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8004aa4:	b580      	push	{r7, lr}
 8004aa6:	b082      	sub	sp, #8
 8004aa8:	af00      	add	r7, sp, #0
 8004aaa:	6078      	str	r0, [r7, #4]
 8004aac:	687b      	ldr	r3, [r7, #4]
 8004aae:	4618      	mov	r0, r3
 8004ab0:	f001 f9f4 	bl	8005e9c <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	4618      	mov	r0, r3
 8004ab8:	3708      	adds	r7, #8
 8004aba:	46bd      	mov	sp, r7
 8004abc:	bd80      	pop	{r7, pc}

08004abe <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISG_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004abe:	b480      	push	{r7}
 8004ac0:	b083      	sub	sp, #12
 8004ac2:	af00      	add	r7, sp, #0
 8004ac4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	4618      	mov	r0, r3
 8004aca:	370c      	adds	r7, #12
 8004acc:	46bd      	mov	sp, r7
 8004ace:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ad2:	4770      	bx	lr

08004ad4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004ad4:	b480      	push	{r7}
 8004ad6:	b083      	sub	sp, #12
 8004ad8:	af00      	add	r7, sp, #0
 8004ada:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	4618      	mov	r0, r3
 8004ae0:	370c      	adds	r7, #12
 8004ae2:	46bd      	mov	sp, r7
 8004ae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ae8:	4770      	bx	lr

08004aea <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004aea:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004aec:	b083      	sub	sp, #12
 8004aee:	af00      	add	r7, sp, #0
 8004af0:	6078      	str	r0, [r7, #4]
 8004af2:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004af4:	6878      	ldr	r0, [r7, #4]
 8004af6:	f000 f876 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004afa:	4604      	mov	r4, r0
 8004afc:	6838      	ldr	r0, [r7, #0]
 8004afe:	f000 fa22 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8004b02:	4603      	mov	r3, r0
 8004b04:	461a      	mov	r2, r3
 8004b06:	4621      	mov	r1, r4
 8004b08:	4628      	mov	r0, r5
 8004b0a:	f001 f9d4 	bl	8005eb6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKiEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004b0e:	4633      	mov	r3, r6
    }
 8004b10:	4618      	mov	r0, r3
 8004b12:	370c      	adds	r7, #12
 8004b14:	46bd      	mov	sp, r7
 8004b16:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004b18 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004b18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b1a:	b083      	sub	sp, #12
 8004b1c:	af00      	add	r7, sp, #0
 8004b1e:	6078      	str	r0, [r7, #4]
 8004b20:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004b22:	6878      	ldr	r0, [r7, #4]
 8004b24:	f000 f85f 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004b28:	4604      	mov	r4, r0
 8004b2a:	6838      	ldr	r0, [r7, #0]
 8004b2c:	f000 fa34 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8004b30:	4603      	mov	r3, r0
 8004b32:	461a      	mov	r2, r3
 8004b34:	4621      	mov	r1, r4
 8004b36:	4628      	mov	r0, r5
 8004b38:	f001 f9d4 	bl	8005ee4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKfEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004b3c:	4633      	mov	r3, r6
    }
 8004b3e:	4618      	mov	r0, r3
 8004b40:	370c      	adds	r7, #12
 8004b42:	46bd      	mov	sp, r7
 8004b44:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004b46 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004b46:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b48:	b083      	sub	sp, #12
 8004b4a:	af00      	add	r7, sp, #0
 8004b4c:	6078      	str	r0, [r7, #4]
 8004b4e:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004b50:	6878      	ldr	r0, [r7, #4]
 8004b52:	f000 f848 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004b56:	4604      	mov	r4, r0
 8004b58:	6838      	ldr	r0, [r7, #0]
 8004b5a:	f000 fa46 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8004b5e:	4603      	mov	r3, r0
 8004b60:	461a      	mov	r2, r3
 8004b62:	4621      	mov	r1, r4
 8004b64:	4628      	mov	r0, r5
 8004b66:	f001 f9d4 	bl	8005f12 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKbEESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004b6a:	4633      	mov	r3, r6
    }
 8004b6c:	4618      	mov	r0, r3
 8004b6e:	370c      	adds	r7, #12
 8004b70:	46bd      	mov	sp, r7
 8004b72:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004b74 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004b74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004b76:	b083      	sub	sp, #12
 8004b78:	af00      	add	r7, sp, #0
 8004b7a:	6078      	str	r0, [r7, #4]
 8004b7c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004b7e:	6878      	ldr	r0, [r7, #4]
 8004b80:	f000 f831 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004b84:	4604      	mov	r4, r0
 8004b86:	6838      	ldr	r0, [r7, #0]
 8004b88:	f000 fa64 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8004b8c:	4603      	mov	r3, r0
 8004b8e:	461a      	mov	r2, r3
 8004b90:	4621      	mov	r1, r4
 8004b92:	4628      	mov	r0, r5
 8004b94:	f001 f9d4 	bl	8005f40 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKS9_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004b98:	4633      	mov	r3, r6
    }
 8004b9a:	4618      	mov	r0, r3
 8004b9c:	370c      	adds	r7, #12
 8004b9e:	46bd      	mov	sp, r7
 8004ba0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004ba2 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_JRKSC_EENSt15__invoke_resultISM_JDpT0_EE4typeESN_DpOSS_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8004ba2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004ba4:	b083      	sub	sp, #12
 8004ba6:	af00      	add	r7, sp, #0
 8004ba8:	6078      	str	r0, [r7, #4]
 8004baa:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8004bac:	6878      	ldr	r0, [r7, #4]
 8004bae:	f000 f81a 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8004bb2:	4604      	mov	r4, r0
 8004bb4:	6838      	ldr	r0, [r7, #0]
 8004bb6:	f000 fa82 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8004bba:	4603      	mov	r3, r0
 8004bbc:	461a      	mov	r2, r3
 8004bbe:	4621      	mov	r1, r4
 8004bc0:	4628      	mov	r0, r5
 8004bc2:	f001 f9d4 	bl	8005f6e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKSD_EESN_St14__invoke_otherSK_DpOT1_>
					std::forward<_Args>(__args)...);
 8004bc6:	4633      	mov	r3, r6
    }
 8004bc8:	4618      	mov	r0, r3
 8004bca:	370c      	adds	r7, #12
 8004bcc:	46bd      	mov	sp, r7
 8004bce:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004bd0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8004bd0:	b480      	push	{r7}
 8004bd2:	b083      	sub	sp, #12
 8004bd4:	af00      	add	r7, sp, #0
 8004bd6:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	4618      	mov	r0, r3
 8004bdc:	370c      	adds	r7, #12
 8004bde:	46bd      	mov	sp, r7
 8004be0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004be4:	4770      	bx	lr

08004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004be6:	b480      	push	{r7}
 8004be8:	b083      	sub	sp, #12
 8004bea:	af00      	add	r7, sp, #0
 8004bec:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	4618      	mov	r0, r3
 8004bf2:	370c      	adds	r7, #12
 8004bf4:	46bd      	mov	sp, r7
 8004bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bfa:	4770      	bx	lr

08004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004bfc:	b480      	push	{r7}
 8004bfe:	b083      	sub	sp, #12
 8004c00:	af00      	add	r7, sp, #0
 8004c02:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	4618      	mov	r0, r3
 8004c08:	370c      	adds	r7, #12
 8004c0a:	46bd      	mov	sp, r7
 8004c0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c10:	4770      	bx	lr

08004c12 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004c12:	b480      	push	{r7}
 8004c14:	b083      	sub	sp, #12
 8004c16:	af00      	add	r7, sp, #0
 8004c18:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	4618      	mov	r0, r3
 8004c1e:	370c      	adds	r7, #12
 8004c20:	46bd      	mov	sp, r7
 8004c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c26:	4770      	bx	lr

08004c28 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRiSt17integral_constantIjLj0EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004c28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c2c:	b084      	sub	sp, #16
 8004c2e:	af00      	add	r7, sp, #0
 8004c30:	7338      	strb	r0, [r7, #12]
 8004c32:	60b9      	str	r1, [r7, #8]
 8004c34:	607a      	str	r2, [r7, #4]
 8004c36:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004c38:	68b8      	ldr	r0, [r7, #8]
 8004c3a:	f7fe fefe 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004c3e:	4604      	mov	r4, r0
 8004c40:	6878      	ldr	r0, [r7, #4]
 8004c42:	f7ff ffdb 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8004c46:	4605      	mov	r5, r0
 8004c48:	6838      	ldr	r0, [r7, #0]
 8004c4a:	f7ff ffe2 	bl	8004c12 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004c4e:	4632      	mov	r2, r6
 8004c50:	4629      	mov	r1, r5
 8004c52:	4620      	mov	r0, r4
 8004c54:	f001 f9a2 	bl	8005f9c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_>
 8004c58:	4643      	mov	r3, r8
 8004c5a:	4618      	mov	r0, r3
 8004c5c:	3710      	adds	r7, #16
 8004c5e:	46bd      	mov	sp, r7
 8004c60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004c64:	b480      	push	{r7}
 8004c66:	b083      	sub	sp, #12
 8004c68:	af00      	add	r7, sp, #0
 8004c6a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	4618      	mov	r0, r3
 8004c70:	370c      	adds	r7, #12
 8004c72:	46bd      	mov	sp, r7
 8004c74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c78:	4770      	bx	lr

08004c7a <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004c7a:	b480      	push	{r7}
 8004c7c:	b083      	sub	sp, #12
 8004c7e:	af00      	add	r7, sp, #0
 8004c80:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	4618      	mov	r0, r3
 8004c86:	370c      	adds	r7, #12
 8004c88:	46bd      	mov	sp, r7
 8004c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c8e:	4770      	bx	lr

08004c90 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRfSt17integral_constantIjLj1EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004c90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c94:	b084      	sub	sp, #16
 8004c96:	af00      	add	r7, sp, #0
 8004c98:	7338      	strb	r0, [r7, #12]
 8004c9a:	60b9      	str	r1, [r7, #8]
 8004c9c:	607a      	str	r2, [r7, #4]
 8004c9e:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004ca0:	68b8      	ldr	r0, [r7, #8]
 8004ca2:	f7fe feca 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004ca6:	4604      	mov	r4, r0
 8004ca8:	6878      	ldr	r0, [r7, #4]
 8004caa:	f7ff ffdb 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8004cae:	4605      	mov	r5, r0
 8004cb0:	6838      	ldr	r0, [r7, #0]
 8004cb2:	f7ff ffe2 	bl	8004c7a <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004cb6:	4632      	mov	r2, r6
 8004cb8:	4629      	mov	r1, r5
 8004cba:	4620      	mov	r0, r4
 8004cbc:	f001 f9c0 	bl	8006040 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_>
 8004cc0:	4643      	mov	r3, r8
 8004cc2:	4618      	mov	r0, r3
 8004cc4:	3710      	adds	r7, #16
 8004cc6:	46bd      	mov	sp, r7
 8004cc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004ccc:	b480      	push	{r7}
 8004cce:	b083      	sub	sp, #12
 8004cd0:	af00      	add	r7, sp, #0
 8004cd2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	4618      	mov	r0, r3
 8004cd8:	370c      	adds	r7, #12
 8004cda:	46bd      	mov	sp, r7
 8004cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ce0:	4770      	bx	lr

08004ce2 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004ce2:	b480      	push	{r7}
 8004ce4:	b083      	sub	sp, #12
 8004ce6:	af00      	add	r7, sp, #0
 8004ce8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	4618      	mov	r0, r3
 8004cee:	370c      	adds	r7, #12
 8004cf0:	46bd      	mov	sp, r7
 8004cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004cf6:	4770      	bx	lr

08004cf8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRbSt17integral_constantIjLj2EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004cfc:	b084      	sub	sp, #16
 8004cfe:	af00      	add	r7, sp, #0
 8004d00:	7338      	strb	r0, [r7, #12]
 8004d02:	60b9      	str	r1, [r7, #8]
 8004d04:	607a      	str	r2, [r7, #4]
 8004d06:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004d08:	68b8      	ldr	r0, [r7, #8]
 8004d0a:	f7fe fe96 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004d0e:	4604      	mov	r4, r0
 8004d10:	6878      	ldr	r0, [r7, #4]
 8004d12:	f7ff ffdb 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8004d16:	4605      	mov	r5, r0
 8004d18:	6838      	ldr	r0, [r7, #0]
 8004d1a:	f7ff ffe2 	bl	8004ce2 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004d1e:	4632      	mov	r2, r6
 8004d20:	4629      	mov	r1, r5
 8004d22:	4620      	mov	r0, r4
 8004d24:	f001 f9de 	bl	80060e4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_>
 8004d28:	4643      	mov	r3, r8
 8004d2a:	4618      	mov	r0, r3
 8004d2c:	3710      	adds	r7, #16
 8004d2e:	46bd      	mov	sp, r7
 8004d30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004d34 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
 8004d34:	b580      	push	{r7, lr}
 8004d36:	b082      	sub	sp, #8
 8004d38:	af00      	add	r7, sp, #0
 8004d3a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8004d3c:	6878      	ldr	r0, [r7, #4]
 8004d3e:	f001 fa24 	bl	800618a <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 8004d42:	4603      	mov	r3, r0
 8004d44:	4618      	mov	r0, r3
 8004d46:	3708      	adds	r7, #8
 8004d48:	46bd      	mov	sp, r7
 8004d4a:	bd80      	pop	{r7, pc}

08004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004d4c:	b480      	push	{r7}
 8004d4e:	b083      	sub	sp, #12
 8004d50:	af00      	add	r7, sp, #0
 8004d52:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	4618      	mov	r0, r3
 8004d58:	370c      	adds	r7, #12
 8004d5a:	46bd      	mov	sp, r7
 8004d5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d60:	4770      	bx	lr

08004d62 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004d62:	b480      	push	{r7}
 8004d64:	b083      	sub	sp, #12
 8004d66:	af00      	add	r7, sp, #0
 8004d68:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	4618      	mov	r0, r3
 8004d6e:	370c      	adds	r7, #12
 8004d70:	46bd      	mov	sp, r7
 8004d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d76:	4770      	bx	lr

08004d78 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRS9_St17integral_constantIjLj3EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d7c:	b084      	sub	sp, #16
 8004d7e:	af00      	add	r7, sp, #0
 8004d80:	7338      	strb	r0, [r7, #12]
 8004d82:	60b9      	str	r1, [r7, #8]
 8004d84:	607a      	str	r2, [r7, #4]
 8004d86:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004d88:	68b8      	ldr	r0, [r7, #8]
 8004d8a:	f7fe fe56 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004d8e:	4604      	mov	r4, r0
 8004d90:	6878      	ldr	r0, [r7, #4]
 8004d92:	f7ff ffdb 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004d96:	4605      	mov	r5, r0
 8004d98:	6838      	ldr	r0, [r7, #0]
 8004d9a:	f7ff ffe2 	bl	8004d62 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004d9e:	4632      	mov	r2, r6
 8004da0:	4629      	mov	r1, r5
 8004da2:	4620      	mov	r0, r4
 8004da4:	f001 f9fc 	bl	80061a0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_>
 8004da8:	4643      	mov	r3, r8
 8004daa:	4618      	mov	r0, r3
 8004dac:	3710      	adds	r7, #16
 8004dae:	46bd      	mov	sp, r7
 8004db0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004db4 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() noexcept
 8004db4:	b580      	push	{r7, lr}
 8004db6:	b082      	sub	sp, #8
 8004db8:	af00      	add	r7, sp, #0
 8004dba:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8004dbc:	6878      	ldr	r0, [r7, #4]
 8004dbe:	f001 fa43 	bl	8006248 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 8004dc2:	4603      	mov	r3, r0
 8004dc4:	4618      	mov	r0, r3
 8004dc6:	3708      	adds	r7, #8
 8004dc8:	46bd      	mov	sp, r7
 8004dca:	bd80      	pop	{r7, pc}

08004dcc <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004dcc:	b480      	push	{r7}
 8004dce:	b083      	sub	sp, #12
 8004dd0:	af00      	add	r7, sp, #0
 8004dd2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	4618      	mov	r0, r3
 8004dd8:	370c      	adds	r7, #12
 8004dda:	46bd      	mov	sp, r7
 8004ddc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004de0:	4770      	bx	lr

08004de2 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004de2:	b480      	push	{r7}
 8004de4:	b083      	sub	sp, #12
 8004de6:	af00      	add	r7, sp, #0
 8004de8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004dea:	687b      	ldr	r3, [r7, #4]
 8004dec:	4618      	mov	r0, r3
 8004dee:	370c      	adds	r7, #12
 8004df0:	46bd      	mov	sp, r7
 8004df2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004df6:	4770      	bx	lr

08004df8 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSEOSE_EUlOT_T0_E_JRSD_St17integral_constantIjLj4EEEESG_St14__invoke_otherOSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004df8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004dfc:	b084      	sub	sp, #16
 8004dfe:	af00      	add	r7, sp, #0
 8004e00:	7338      	strb	r0, [r7, #12]
 8004e02:	60b9      	str	r1, [r7, #8]
 8004e04:	607a      	str	r2, [r7, #4]
 8004e06:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004e08:	68b8      	ldr	r0, [r7, #8]
 8004e0a:	f7fe fe16 	bl	8003a3a <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSEOSD_EUlOT_T0_E_ESG_RNSt16remove_referenceISF_E4typeE>
 8004e0e:	4604      	mov	r4, r0
 8004e10:	6878      	ldr	r0, [r7, #4]
 8004e12:	f7ff ffdb 	bl	8004dcc <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8004e16:	4605      	mov	r5, r0
 8004e18:	6838      	ldr	r0, [r7, #0]
 8004e1a:	f7ff ffe2 	bl	8004de2 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004e1e:	4632      	mov	r2, r6
 8004e20:	4629      	mov	r1, r5
 8004e22:	4620      	mov	r0, r4
 8004e24:	f001 fa1b 	bl	800625e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_>
 8004e28:	4643      	mov	r3, r8
 8004e2a:	4618      	mov	r0, r3
 8004e2c:	3710      	adds	r7, #16
 8004e2e:	46bd      	mov	sp, r7
 8004e30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004e34 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004e34:	b480      	push	{r7}
 8004e36:	b083      	sub	sp, #12
 8004e38:	af00      	add	r7, sp, #0
 8004e3a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	4618      	mov	r0, r3
 8004e40:	370c      	adds	r7, #12
 8004e42:	46bd      	mov	sp, r7
 8004e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e48:	4770      	bx	lr

08004e4a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004e4a:	b480      	push	{r7}
 8004e4c:	b083      	sub	sp, #12
 8004e4e:	af00      	add	r7, sp, #0
 8004e50:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	4618      	mov	r0, r3
 8004e56:	370c      	adds	r7, #12
 8004e58:	46bd      	mov	sp, r7
 8004e5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e5e:	4770      	bx	lr

08004e60 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004e60:	b480      	push	{r7}
 8004e62:	b083      	sub	sp, #12
 8004e64:	af00      	add	r7, sp, #0
 8004e66:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	4618      	mov	r0, r3
 8004e6c:	370c      	adds	r7, #12
 8004e6e:	46bd      	mov	sp, r7
 8004e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e74:	4770      	bx	lr

08004e76 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004e76:	b480      	push	{r7}
 8004e78:	b083      	sub	sp, #12
 8004e7a:	af00      	add	r7, sp, #0
 8004e7c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	4618      	mov	r0, r3
 8004e82:	370c      	adds	r7, #12
 8004e84:	46bd      	mov	sp, r7
 8004e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e8a:	4770      	bx	lr

08004e8c <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004e8c:	b480      	push	{r7}
 8004e8e:	b083      	sub	sp, #12
 8004e90:	af00      	add	r7, sp, #0
 8004e92:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	4618      	mov	r0, r3
 8004e98:	370c      	adds	r7, #12
 8004e9a:	46bd      	mov	sp, r7
 8004e9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ea0:	4770      	bx	lr

08004ea2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004ea2:	b480      	push	{r7}
 8004ea4:	b083      	sub	sp, #12
 8004ea6:	af00      	add	r7, sp, #0
 8004ea8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	4618      	mov	r0, r3
 8004eae:	370c      	adds	r7, #12
 8004eb0:	46bd      	mov	sp, r7
 8004eb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eb6:	4770      	bx	lr

08004eb8 <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004eb8:	b480      	push	{r7}
 8004eba:	b083      	sub	sp, #12
 8004ebc:	af00      	add	r7, sp, #0
 8004ebe:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	4618      	mov	r0, r3
 8004ec4:	370c      	adds	r7, #12
 8004ec6:	46bd      	mov	sp, r7
 8004ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ecc:	4770      	bx	lr

08004ece <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004ece:	b480      	push	{r7}
 8004ed0:	b083      	sub	sp, #12
 8004ed2:	af00      	add	r7, sp, #0
 8004ed4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	4618      	mov	r0, r3
 8004eda:	370c      	adds	r7, #12
 8004edc:	46bd      	mov	sp, r7
 8004ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ee2:	4770      	bx	lr

08004ee4 <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004ee4:	b480      	push	{r7}
 8004ee6:	b083      	sub	sp, #12
 8004ee8:	af00      	add	r7, sp, #0
 8004eea:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	4618      	mov	r0, r3
 8004ef0:	370c      	adds	r7, #12
 8004ef2:	46bd      	mov	sp, r7
 8004ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ef8:	4770      	bx	lr

08004efa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004efa:	b480      	push	{r7}
 8004efc:	b083      	sub	sp, #12
 8004efe:	af00      	add	r7, sp, #0
 8004f00:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	4618      	mov	r0, r3
 8004f06:	370c      	adds	r7, #12
 8004f08:	46bd      	mov	sp, r7
 8004f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f0e:	4770      	bx	lr

08004f10 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8004f10:	b480      	push	{r7}
 8004f12:	b083      	sub	sp, #12
 8004f14:	af00      	add	r7, sp, #0
 8004f16:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	4618      	mov	r0, r3
 8004f1c:	370c      	adds	r7, #12
 8004f1e:	46bd      	mov	sp, r7
 8004f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f24:	4770      	bx	lr

08004f26 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8004f26:	b480      	push	{r7}
 8004f28:	b083      	sub	sp, #12
 8004f2a:	af00      	add	r7, sp, #0
 8004f2c:	6078      	str	r0, [r7, #4]
 8004f2e:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8004f30:	683b      	ldr	r3, [r7, #0]
 8004f32:	681a      	ldr	r2, [r3, #0]
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	601a      	str	r2, [r3, #0]
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	4618      	mov	r0, r3
 8004f3c:	370c      	adds	r7, #12
 8004f3e:	46bd      	mov	sp, r7
 8004f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f44:	4770      	bx	lr

08004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004f46:	b480      	push	{r7}
 8004f48:	b083      	sub	sp, #12
 8004f4a:	af00      	add	r7, sp, #0
 8004f4c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	4618      	mov	r0, r3
 8004f52:	370c      	adds	r7, #12
 8004f54:	46bd      	mov	sp, r7
 8004f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f5a:	4770      	bx	lr

08004f5c <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKiSt17integral_constantIjLj0EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004f5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004f60:	b084      	sub	sp, #16
 8004f62:	af00      	add	r7, sp, #0
 8004f64:	7338      	strb	r0, [r7, #12]
 8004f66:	60b9      	str	r1, [r7, #8]
 8004f68:	607a      	str	r2, [r7, #4]
 8004f6a:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004f6c:	68b8      	ldr	r0, [r7, #8]
 8004f6e:	f7ff f8e6 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8004f72:	4604      	mov	r4, r0
 8004f74:	6878      	ldr	r0, [r7, #4]
 8004f76:	f7ff ffe6 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8004f7a:	4605      	mov	r5, r0
 8004f7c:	6838      	ldr	r0, [r7, #0]
 8004f7e:	f7ff fe48 	bl	8004c12 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004f82:	4632      	mov	r2, r6
 8004f84:	4629      	mov	r1, r5
 8004f86:	4620      	mov	r0, r4
 8004f88:	f001 f9bd 	bl	8006306 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_>
 8004f8c:	4643      	mov	r3, r8
 8004f8e:	4618      	mov	r0, r3
 8004f90:	3710      	adds	r7, #16
 8004f92:	46bd      	mov	sp, r7
 8004f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004f98:	b480      	push	{r7}
 8004f9a:	b083      	sub	sp, #12
 8004f9c:	af00      	add	r7, sp, #0
 8004f9e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	4618      	mov	r0, r3
 8004fa4:	370c      	adds	r7, #12
 8004fa6:	46bd      	mov	sp, r7
 8004fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fac:	4770      	bx	lr

08004fae <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKfSt17integral_constantIjLj1EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8004fae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004fb2:	b084      	sub	sp, #16
 8004fb4:	af00      	add	r7, sp, #0
 8004fb6:	7338      	strb	r0, [r7, #12]
 8004fb8:	60b9      	str	r1, [r7, #8]
 8004fba:	607a      	str	r2, [r7, #4]
 8004fbc:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8004fbe:	68b8      	ldr	r0, [r7, #8]
 8004fc0:	f7ff f8bd 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8004fc4:	4604      	mov	r4, r0
 8004fc6:	6878      	ldr	r0, [r7, #4]
 8004fc8:	f7ff ffe6 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8004fcc:	4605      	mov	r5, r0
 8004fce:	6838      	ldr	r0, [r7, #0]
 8004fd0:	f7ff fe53 	bl	8004c7a <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8004fd4:	4632      	mov	r2, r6
 8004fd6:	4629      	mov	r1, r5
 8004fd8:	4620      	mov	r0, r4
 8004fda:	f001 f9d8 	bl	800638e <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_>
 8004fde:	4643      	mov	r3, r8
 8004fe0:	4618      	mov	r0, r3
 8004fe2:	3710      	adds	r7, #16
 8004fe4:	46bd      	mov	sp, r7
 8004fe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8004fea:	b480      	push	{r7}
 8004fec:	b083      	sub	sp, #12
 8004fee:	af00      	add	r7, sp, #0
 8004ff0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8004ff2:	687b      	ldr	r3, [r7, #4]
 8004ff4:	4618      	mov	r0, r3
 8004ff6:	370c      	adds	r7, #12
 8004ff8:	46bd      	mov	sp, r7
 8004ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ffe:	4770      	bx	lr

08005000 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKbSt17integral_constantIjLj2EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005000:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005004:	b084      	sub	sp, #16
 8005006:	af00      	add	r7, sp, #0
 8005008:	7338      	strb	r0, [r7, #12]
 800500a:	60b9      	str	r1, [r7, #8]
 800500c:	607a      	str	r2, [r7, #4]
 800500e:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005010:	68b8      	ldr	r0, [r7, #8]
 8005012:	f7ff f894 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8005016:	4604      	mov	r4, r0
 8005018:	6878      	ldr	r0, [r7, #4]
 800501a:	f7ff ffe6 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800501e:	4605      	mov	r5, r0
 8005020:	6838      	ldr	r0, [r7, #0]
 8005022:	f7ff fe5e 	bl	8004ce2 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8005026:	4632      	mov	r2, r6
 8005028:	4629      	mov	r1, r5
 800502a:	4620      	mov	r0, r4
 800502c:	f001 f9f3 	bl	8006416 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_>
 8005030:	4643      	mov	r3, r8
 8005032:	4618      	mov	r0, r3
 8005034:	3710      	adds	r7, #16
 8005036:	46bd      	mov	sp, r7
 8005038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800503c <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
 800503c:	b580      	push	{r7, lr}
 800503e:	b082      	sub	sp, #8
 8005040:	af00      	add	r7, sp, #0
 8005042:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8005044:	6878      	ldr	r0, [r7, #4]
 8005046:	f001 fa2b 	bl	80064a0 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 800504a:	4603      	mov	r3, r0
 800504c:	4618      	mov	r0, r3
 800504e:	3708      	adds	r7, #8
 8005050:	46bd      	mov	sp, r7
 8005052:	bd80      	pop	{r7, pc}

08005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005054:	b480      	push	{r7}
 8005056:	b083      	sub	sp, #12
 8005058:	af00      	add	r7, sp, #0
 800505a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	4618      	mov	r0, r3
 8005060:	370c      	adds	r7, #12
 8005062:	46bd      	mov	sp, r7
 8005064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005068:	4770      	bx	lr

0800506a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKS9_St17integral_constantIjLj3EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800506a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800506e:	b084      	sub	sp, #16
 8005070:	af00      	add	r7, sp, #0
 8005072:	7338      	strb	r0, [r7, #12]
 8005074:	60b9      	str	r1, [r7, #8]
 8005076:	607a      	str	r2, [r7, #4]
 8005078:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800507a:	68b8      	ldr	r0, [r7, #8]
 800507c:	f7ff f85f 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 8005080:	4604      	mov	r4, r0
 8005082:	6878      	ldr	r0, [r7, #4]
 8005084:	f7ff ffe6 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8005088:	4605      	mov	r5, r0
 800508a:	6838      	ldr	r0, [r7, #0]
 800508c:	f7ff fe69 	bl	8004d62 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8005090:	4632      	mov	r2, r6
 8005092:	4629      	mov	r1, r5
 8005094:	4620      	mov	r0, r4
 8005096:	f001 fa0e 	bl	80064b6 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_>
 800509a:	4643      	mov	r3, r8
 800509c:	4618      	mov	r0, r3
 800509e:	3710      	adds	r7, #16
 80050a0:	46bd      	mov	sp, r7
 80050a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080050a6 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>:
      _M_ptr() const noexcept
 80050a6:	b580      	push	{r7, lr}
 80050a8:	b082      	sub	sp, #8
 80050aa:	af00      	add	r7, sp, #0
 80050ac:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 80050ae:	6878      	ldr	r0, [r7, #4]
 80050b0:	f001 fa5a 	bl	8006568 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>
 80050b4:	4603      	mov	r3, r0
 80050b6:	4618      	mov	r0, r3
 80050b8:	3708      	adds	r7, #8
 80050ba:	46bd      	mov	sp, r7
 80050bc:	bd80      	pop	{r7, pc}

080050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80050be:	b480      	push	{r7}
 80050c0:	b083      	sub	sp, #12
 80050c2:	af00      	add	r7, sp, #0
 80050c4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	4618      	mov	r0, r3
 80050ca:	370c      	adds	r7, #12
 80050cc:	46bd      	mov	sp, r7
 80050ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050d2:	4770      	bx	lr

080050d4 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEEaSERKSE_EUlOT_T0_E_JRKSD_St17integral_constantIjLj4EEEESH_St14__invoke_otherOSJ_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80050d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80050d8:	b084      	sub	sp, #16
 80050da:	af00      	add	r7, sp, #0
 80050dc:	7338      	strb	r0, [r7, #12]
 80050de:	60b9      	str	r1, [r7, #8]
 80050e0:	607a      	str	r2, [r7, #4]
 80050e2:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80050e4:	68b8      	ldr	r0, [r7, #8]
 80050e6:	f7ff f82a 	bl	800413e <_ZSt7forwardIZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEaSERKSD_EUlOT_T0_E_ESH_RNSt16remove_referenceISG_E4typeE>
 80050ea:	4604      	mov	r4, r0
 80050ec:	6878      	ldr	r0, [r7, #4]
 80050ee:	f7ff ffe6 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 80050f2:	4605      	mov	r5, r0
 80050f4:	6838      	ldr	r0, [r7, #0]
 80050f6:	f7ff fe74 	bl	8004de2 <_ZSt7forwardISt17integral_constantIjLj4EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80050fa:	4632      	mov	r2, r6
 80050fc:	4629      	mov	r1, r5
 80050fe:	4620      	mov	r0, r4
 8005100:	f001 fa3d 	bl	800657e <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_>
 8005104:	4643      	mov	r3, r8
 8005106:	4618      	mov	r0, r3
 8005108:	3710      	adds	r7, #16
 800510a:	46bd      	mov	sp, r7
 800510c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005110 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
   *  and are constant time.  For other %iterator classes they are linear time.
  */
  template<typename _InputIterator>
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
 8005110:	b5b0      	push	{r4, r5, r7, lr}
 8005112:	b082      	sub	sp, #8
 8005114:	af00      	add	r7, sp, #0
 8005116:	6078      	str	r0, [r7, #4]
 8005118:	6039      	str	r1, [r7, #0]
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
 800511a:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 800511c:	1d3b      	adds	r3, r7, #4
 800511e:	4618      	mov	r0, r3
 8005120:	f001 fa8b 	bl	800663a <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
 8005124:	462a      	mov	r2, r5
 8005126:	6839      	ldr	r1, [r7, #0]
 8005128:	4620      	mov	r0, r4
 800512a:	f001 fa90 	bl	800664e <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
 800512e:	4603      	mov	r3, r0
    }
 8005130:	4618      	mov	r0, r3
 8005132:	3708      	adds	r7, #8
 8005134:	46bd      	mov	sp, r7
 8005136:	bdb0      	pop	{r4, r5, r7, pc}

08005138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InIterator>
      void
      basic_string<_CharT, _Traits, _Alloc>::
 8005138:	b580      	push	{r7, lr}
 800513a:	b086      	sub	sp, #24
 800513c:	af00      	add	r7, sp, #0
 800513e:	60f8      	str	r0, [r7, #12]
 8005140:	60b9      	str	r1, [r7, #8]
 8005142:	607a      	str	r2, [r7, #4]
 8005144:	703b      	strb	r3, [r7, #0]
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
	// NB: Not required, but considered best practice.
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 8005146:	68b8      	ldr	r0, [r7, #8]
 8005148:	f001 fa67 	bl	800661a <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>
 800514c:	4603      	mov	r3, r0
 800514e:	2b00      	cmp	r3, #0
 8005150:	d005      	beq.n	800515e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 8005152:	68ba      	ldr	r2, [r7, #8]
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	429a      	cmp	r2, r3
 8005158:	d001      	beq.n	800515e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 800515a:	2301      	movs	r3, #1
 800515c:	e000      	b.n	8005160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x28>
 800515e:	2300      	movs	r3, #0
 8005160:	2b00      	cmp	r3, #0
 8005162:	d002      	beq.n	800516a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 8005164:	4817      	ldr	r0, [pc, #92]	; (80051c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>)
 8005166:	f01e f962 	bl	802342e <_ZSt19__throw_logic_errorPKc>
				       "_M_construct null not valid"));

	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 800516a:	6879      	ldr	r1, [r7, #4]
 800516c:	68b8      	ldr	r0, [r7, #8]
 800516e:	f7ff ffcf 	bl	8005110 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
 8005172:	4603      	mov	r3, r0
 8005174:	617b      	str	r3, [r7, #20]

	if (__dnew > size_type(_S_local_capacity))
 8005176:	697b      	ldr	r3, [r7, #20]
 8005178:	2b0f      	cmp	r3, #15
 800517a:	d910      	bls.n	800519e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x66>
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
 800517c:	f107 0314 	add.w	r3, r7, #20
 8005180:	2200      	movs	r2, #0
 8005182:	4619      	mov	r1, r3
 8005184:	68f8      	ldr	r0, [r7, #12]
 8005186:	f01e fa25 	bl	80235d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 800518a:	4603      	mov	r3, r0
 800518c:	4619      	mov	r1, r3
 800518e:	68f8      	ldr	r0, [r7, #12]
 8005190:	f01e fa12 	bl	80235b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 8005194:	697b      	ldr	r3, [r7, #20]
 8005196:	4619      	mov	r1, r3
 8005198:	68f8      	ldr	r0, [r7, #12]
 800519a:	f01e fa13 	bl	80235c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  }

	// Check for out_of_range and length_error exceptions.
	__try
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 800519e:	68f8      	ldr	r0, [r7, #12]
 80051a0:	f01e fa0c 	bl	80235bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 80051a4:	4603      	mov	r3, r0
 80051a6:	687a      	ldr	r2, [r7, #4]
 80051a8:	68b9      	ldr	r1, [r7, #8]
 80051aa:	4618      	mov	r0, r3
 80051ac:	f01e fa7c 	bl	80236a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
	  {
	    _M_dispose();
	    __throw_exception_again;
	  }

	_M_set_length(__dnew);
 80051b0:	697b      	ldr	r3, [r7, #20]
 80051b2:	4619      	mov	r1, r3
 80051b4:	68f8      	ldr	r0, [r7, #12]
 80051b6:	f01e fa07 	bl	80235c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 80051ba:	bf00      	nop
 80051bc:	3718      	adds	r7, #24
 80051be:	46bd      	mov	sp, r7
 80051c0:	bd80      	pop	{r7, pc}
 80051c2:	bf00      	nop
 80051c4:	08029324 	.word	0x08029324

080051c8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80051c8:	b480      	push	{r7}
 80051ca:	b083      	sub	sp, #12
 80051cc:	af00      	add	r7, sp, #0
 80051ce:	6078      	str	r0, [r7, #4]
 80051d0:	687b      	ldr	r3, [r7, #4]
 80051d2:	4618      	mov	r0, r3
 80051d4:	370c      	adds	r7, #12
 80051d6:	46bd      	mov	sp, r7
 80051d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051dc:	4770      	bx	lr

080051de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80051de:	b480      	push	{r7}
 80051e0:	b083      	sub	sp, #12
 80051e2:	af00      	add	r7, sp, #0
 80051e4:	6078      	str	r0, [r7, #4]
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	4618      	mov	r0, r3
 80051ea:	370c      	adds	r7, #12
 80051ec:	46bd      	mov	sp, r7
 80051ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051f2:	4770      	bx	lr

080051f4 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>:
   *  @param  __t  A thing of arbitrary type.
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
 80051f4:	b480      	push	{r7}
 80051f6:	b083      	sub	sp, #12
 80051f8:	af00      	add	r7, sp, #0
 80051fa:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	4618      	mov	r0, r3
 8005200:	370c      	adds	r7, #12
 8005202:	46bd      	mov	sp, r7
 8005204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005208:	4770      	bx	lr

0800520a <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800520a:	b580      	push	{r7, lr}
 800520c:	b082      	sub	sp, #8
 800520e:	af00      	add	r7, sp, #0
 8005210:	6078      	str	r0, [r7, #4]
 8005212:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8005214:	6839      	ldr	r1, [r7, #0]
 8005216:	6878      	ldr	r0, [r7, #4]
 8005218:	f001 fa28 	bl	800666c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	4618      	mov	r0, r3
 8005220:	3708      	adds	r7, #8
 8005222:	46bd      	mov	sp, r7
 8005224:	bd80      	pop	{r7, pc}

08005226 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 8005226:	b480      	push	{r7}
 8005228:	b083      	sub	sp, #12
 800522a:	af00      	add	r7, sp, #0
 800522c:	6078      	str	r0, [r7, #4]
 800522e:	6039      	str	r1, [r7, #0]
      { }
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	4618      	mov	r0, r3
 8005234:	370c      	adds	r7, #12
 8005236:	46bd      	mov	sp, r7
 8005238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800523c:	4770      	bx	lr

0800523e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800523e:	b480      	push	{r7}
 8005240:	b083      	sub	sp, #12
 8005242:	af00      	add	r7, sp, #0
 8005244:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	68db      	ldr	r3, [r3, #12]
 800524a:	4618      	mov	r0, r3
 800524c:	370c      	adds	r7, #12
 800524e:	46bd      	mov	sp, r7
 8005250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005254:	4770      	bx	lr

08005256 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8005256:	b480      	push	{r7}
 8005258:	b083      	sub	sp, #12
 800525a:	af00      	add	r7, sp, #0
 800525c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800525e:	687b      	ldr	r3, [r7, #4]
 8005260:	689b      	ldr	r3, [r3, #8]
 8005262:	4618      	mov	r0, r3
 8005264:	370c      	adds	r7, #12
 8005266:	46bd      	mov	sp, r7
 8005268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800526c:	4770      	bx	lr

0800526e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800526e:	b580      	push	{r7, lr}
 8005270:	b082      	sub	sp, #8
 8005272:	af00      	add	r7, sp, #0
 8005274:	6078      	str	r0, [r7, #4]
 8005276:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8005278:	6839      	ldr	r1, [r7, #0]
 800527a:	6878      	ldr	r0, [r7, #4]
 800527c:	f001 fa02 	bl	8006684 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 8005280:	6839      	ldr	r1, [r7, #0]
 8005282:	6878      	ldr	r0, [r7, #4]
 8005284:	f001 fa13 	bl	80066ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 8005288:	bf00      	nop
 800528a:	3708      	adds	r7, #8
 800528c:	46bd      	mov	sp, r7
 800528e:	bd80      	pop	{r7, pc}

08005290 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8005290:	b480      	push	{r7}
 8005292:	b083      	sub	sp, #12
 8005294:	af00      	add	r7, sp, #0
 8005296:	6078      	str	r0, [r7, #4]
 8005298:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	683a      	ldr	r2, [r7, #0]
 800529e:	601a      	str	r2, [r3, #0]
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	4618      	mov	r0, r3
 80052a4:	370c      	adds	r7, #12
 80052a6:	46bd      	mov	sp, r7
 80052a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052ac:	4770      	bx	lr

080052ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80052ae:	b590      	push	{r4, r7, lr}
 80052b0:	b08d      	sub	sp, #52	; 0x34
 80052b2:	af00      	add	r7, sp, #0
 80052b4:	60f8      	str	r0, [r7, #12]
 80052b6:	60b9      	str	r1, [r7, #8]
 80052b8:	607a      	str	r2, [r7, #4]
 80052ba:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 80052bc:	1d3b      	adds	r3, r7, #4
 80052be:	4618      	mov	r0, r3
 80052c0:	f001 fa07 	bl	80066d2 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>
 80052c4:	4603      	mov	r3, r0
 80052c6:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 80052c8:	69bc      	ldr	r4, [r7, #24]
 80052ca:	68b8      	ldr	r0, [r7, #8]
 80052cc:	f001 fa12 	bl	80066f4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80052d0:	4603      	mov	r3, r0
 80052d2:	429c      	cmp	r4, r3
 80052d4:	bf0c      	ite	eq
 80052d6:	2301      	moveq	r3, #1
 80052d8:	2300      	movne	r3, #0
 80052da:	b2db      	uxtb	r3, r3
 80052dc:	2b00      	cmp	r3, #0
 80052de:	d030      	beq.n	8005342 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 80052e0:	68b8      	ldr	r0, [r7, #8]
 80052e2:	f001 fa13 	bl	800670c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 80052e6:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 80052e8:	2b00      	cmp	r3, #0
 80052ea:	d013      	beq.n	8005314 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 80052ec:	68bc      	ldr	r4, [r7, #8]
 80052ee:	68b8      	ldr	r0, [r7, #8]
 80052f0:	f001 fa18 	bl	8006724 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80052f4:	4603      	mov	r3, r0
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	4618      	mov	r0, r3
 80052fa:	f001 fa1f 	bl	800673c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80052fe:	4603      	mov	r3, r0
 8005300:	683a      	ldr	r2, [r7, #0]
 8005302:	4619      	mov	r1, r3
 8005304:	4620      	mov	r0, r4
 8005306:	f001 fa25 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 800530a:	4603      	mov	r3, r0
 800530c:	2b00      	cmp	r3, #0
 800530e:	d001      	beq.n	8005314 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8005310:	2301      	movs	r3, #1
 8005312:	e000      	b.n	8005316 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 8005314:	2300      	movs	r3, #0
	  if (size() > 0
 8005316:	2b00      	cmp	r3, #0
 8005318:	d00c      	beq.n	8005334 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 800531a:	2300      	movs	r3, #0
 800531c:	61fb      	str	r3, [r7, #28]
 800531e:	68b8      	ldr	r0, [r7, #8]
 8005320:	f001 fa00 	bl	8006724 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005324:	4602      	mov	r2, r0
 8005326:	f107 031c 	add.w	r3, r7, #28
 800532a:	4619      	mov	r1, r3
 800532c:	68f8      	ldr	r0, [r7, #12]
 800532e:	f001 fa26 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005332:	e0db      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005334:	68fb      	ldr	r3, [r7, #12]
 8005336:	683a      	ldr	r2, [r7, #0]
 8005338:	68b9      	ldr	r1, [r7, #8]
 800533a:	4618      	mov	r0, r3
 800533c:	f001 fa35 	bl	80067aa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8005340:	e0d4      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8005342:	68bc      	ldr	r4, [r7, #8]
 8005344:	69bb      	ldr	r3, [r7, #24]
 8005346:	4618      	mov	r0, r3
 8005348:	f001 f9f8 	bl	800673c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800534c:	4603      	mov	r3, r0
 800534e:	461a      	mov	r2, r3
 8005350:	6839      	ldr	r1, [r7, #0]
 8005352:	4620      	mov	r0, r4
 8005354:	f001 f9fe 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005358:	4603      	mov	r3, r0
 800535a:	2b00      	cmp	r3, #0
 800535c:	d057      	beq.n	800540e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 800535e:	69bb      	ldr	r3, [r7, #24]
 8005360:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8005362:	69bc      	ldr	r4, [r7, #24]
 8005364:	68b8      	ldr	r0, [r7, #8]
 8005366:	f001 faa5 	bl	80068b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800536a:	4603      	mov	r3, r0
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	429c      	cmp	r4, r3
 8005370:	bf0c      	ite	eq
 8005372:	2301      	moveq	r3, #1
 8005374:	2300      	movne	r3, #0
 8005376:	b2db      	uxtb	r3, r3
 8005378:	2b00      	cmp	r3, #0
 800537a:	d00d      	beq.n	8005398 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 800537c:	68b8      	ldr	r0, [r7, #8]
 800537e:	f001 fa99 	bl	80068b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8005382:	4604      	mov	r4, r0
 8005384:	68b8      	ldr	r0, [r7, #8]
 8005386:	f001 fa95 	bl	80068b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800538a:	4603      	mov	r3, r0
 800538c:	461a      	mov	r2, r3
 800538e:	4621      	mov	r1, r4
 8005390:	68f8      	ldr	r0, [r7, #12]
 8005392:	f001 fa9b 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005396:	e0a9      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8005398:	68bc      	ldr	r4, [r7, #8]
 800539a:	f107 0314 	add.w	r3, r7, #20
 800539e:	4618      	mov	r0, r3
 80053a0:	f001 faad 	bl	80068fe <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
 80053a4:	4603      	mov	r3, r0
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	4618      	mov	r0, r3
 80053aa:	f001 f9c7 	bl	800673c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80053ae:	4603      	mov	r3, r0
 80053b0:	683a      	ldr	r2, [r7, #0]
 80053b2:	4619      	mov	r1, r3
 80053b4:	4620      	mov	r0, r4
 80053b6:	f001 f9cd 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 80053ba:	4603      	mov	r3, r0
 80053bc:	2b00      	cmp	r3, #0
 80053be:	d01f      	beq.n	8005400 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 80053c0:	697b      	ldr	r3, [r7, #20]
 80053c2:	4618      	mov	r0, r3
 80053c4:	f7ff ff3b 	bl	800523e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 80053c8:	4603      	mov	r3, r0
 80053ca:	2b00      	cmp	r3, #0
 80053cc:	bf0c      	ite	eq
 80053ce:	2301      	moveq	r3, #1
 80053d0:	2300      	movne	r3, #0
 80053d2:	b2db      	uxtb	r3, r3
 80053d4:	2b00      	cmp	r3, #0
 80053d6:	d00a      	beq.n	80053ee <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 80053d8:	2300      	movs	r3, #0
 80053da:	623b      	str	r3, [r7, #32]
 80053dc:	f107 0214 	add.w	r2, r7, #20
 80053e0:	f107 0320 	add.w	r3, r7, #32
 80053e4:	4619      	mov	r1, r3
 80053e6:	68f8      	ldr	r0, [r7, #12]
 80053e8:	f001 f9c9 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80053ec:	e07e      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 80053ee:	f107 0218 	add.w	r2, r7, #24
 80053f2:	f107 0318 	add.w	r3, r7, #24
 80053f6:	4619      	mov	r1, r3
 80053f8:	68f8      	ldr	r0, [r7, #12]
 80053fa:	f001 fa67 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80053fe:	e075      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005400:	68fb      	ldr	r3, [r7, #12]
 8005402:	683a      	ldr	r2, [r7, #0]
 8005404:	68b9      	ldr	r1, [r7, #8]
 8005406:	4618      	mov	r0, r3
 8005408:	f001 f9cf 	bl	80067aa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 800540c:	e06e      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 800540e:	68bc      	ldr	r4, [r7, #8]
 8005410:	69bb      	ldr	r3, [r7, #24]
 8005412:	4618      	mov	r0, r3
 8005414:	f001 f992 	bl	800673c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005418:	4603      	mov	r3, r0
 800541a:	683a      	ldr	r2, [r7, #0]
 800541c:	4619      	mov	r1, r3
 800541e:	4620      	mov	r0, r4
 8005420:	f001 f998 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005424:	4603      	mov	r3, r0
 8005426:	2b00      	cmp	r3, #0
 8005428:	d056      	beq.n	80054d8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 800542a:	69bb      	ldr	r3, [r7, #24]
 800542c:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 800542e:	69bc      	ldr	r4, [r7, #24]
 8005430:	68b8      	ldr	r0, [r7, #8]
 8005432:	f001 f977 	bl	8006724 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005436:	4603      	mov	r3, r0
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	429c      	cmp	r4, r3
 800543c:	bf0c      	ite	eq
 800543e:	2301      	moveq	r3, #1
 8005440:	2300      	movne	r3, #0
 8005442:	b2db      	uxtb	r3, r3
 8005444:	2b00      	cmp	r3, #0
 8005446:	d00c      	beq.n	8005462 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 8005448:	2300      	movs	r3, #0
 800544a:	627b      	str	r3, [r7, #36]	; 0x24
 800544c:	68b8      	ldr	r0, [r7, #8]
 800544e:	f001 f969 	bl	8006724 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005452:	4602      	mov	r2, r0
 8005454:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005458:	4619      	mov	r1, r3
 800545a:	68f8      	ldr	r0, [r7, #12]
 800545c:	f001 f98f 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005460:	e044      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8005462:	68bc      	ldr	r4, [r7, #8]
 8005464:	f107 0310 	add.w	r3, r7, #16
 8005468:	4618      	mov	r0, r3
 800546a:	f001 fa59 	bl	8006920 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>
 800546e:	4603      	mov	r3, r0
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	4618      	mov	r0, r3
 8005474:	f001 f962 	bl	800673c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005478:	4603      	mov	r3, r0
 800547a:	461a      	mov	r2, r3
 800547c:	6839      	ldr	r1, [r7, #0]
 800547e:	4620      	mov	r0, r4
 8005480:	f001 f968 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005484:	4603      	mov	r3, r0
 8005486:	2b00      	cmp	r3, #0
 8005488:	d01f      	beq.n	80054ca <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 800548a:	69bb      	ldr	r3, [r7, #24]
 800548c:	4618      	mov	r0, r3
 800548e:	f7ff fed6 	bl	800523e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005492:	4603      	mov	r3, r0
 8005494:	2b00      	cmp	r3, #0
 8005496:	bf0c      	ite	eq
 8005498:	2301      	moveq	r3, #1
 800549a:	2300      	movne	r3, #0
 800549c:	b2db      	uxtb	r3, r3
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d00a      	beq.n	80054b8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 80054a2:	2300      	movs	r3, #0
 80054a4:	62bb      	str	r3, [r7, #40]	; 0x28
 80054a6:	f107 0218 	add.w	r2, r7, #24
 80054aa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80054ae:	4619      	mov	r1, r3
 80054b0:	68f8      	ldr	r0, [r7, #12]
 80054b2:	f001 f964 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80054b6:	e019      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 80054b8:	f107 0210 	add.w	r2, r7, #16
 80054bc:	f107 0310 	add.w	r3, r7, #16
 80054c0:	4619      	mov	r1, r3
 80054c2:	68f8      	ldr	r0, [r7, #12]
 80054c4:	f001 fa02 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80054c8:	e010      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	683a      	ldr	r2, [r7, #0]
 80054ce:	68b9      	ldr	r1, [r7, #8]
 80054d0:	4618      	mov	r0, r3
 80054d2:	f001 f96a 	bl	80067aa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 80054d6:	e009      	b.n	80054ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 80054d8:	2300      	movs	r3, #0
 80054da:	62fb      	str	r3, [r7, #44]	; 0x2c
 80054dc:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80054e0:	f107 0318 	add.w	r3, r7, #24
 80054e4:	4619      	mov	r1, r3
 80054e6:	68f8      	ldr	r0, [r7, #12]
 80054e8:	f001 fa2b 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80054ec:	68f8      	ldr	r0, [r7, #12]
 80054ee:	3734      	adds	r7, #52	; 0x34
 80054f0:	46bd      	mov	sp, r7
 80054f2:	bd90      	pop	{r4, r7, pc}

080054f4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
 80054f4:	b480      	push	{r7}
 80054f6:	b083      	sub	sp, #12
 80054f8:	af00      	add	r7, sp, #0
 80054fa:	6078      	str	r0, [r7, #4]
 80054fc:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80054fe:	683b      	ldr	r3, [r7, #0]
 8005500:	4618      	mov	r0, r3
 8005502:	370c      	adds	r7, #12
 8005504:	46bd      	mov	sp, r7
 8005506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800550a:	4770      	bx	lr

0800550c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800550c:	b480      	push	{r7}
 800550e:	b083      	sub	sp, #12
 8005510:	af00      	add	r7, sp, #0
 8005512:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	4618      	mov	r0, r3
 8005518:	370c      	adds	r7, #12
 800551a:	46bd      	mov	sp, r7
 800551c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005520:	4770      	bx	lr

08005522 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8005522:	b5b0      	push	{r4, r5, r7, lr}
 8005524:	b088      	sub	sp, #32
 8005526:	af00      	add	r7, sp, #0
 8005528:	60f8      	str	r0, [r7, #12]
 800552a:	60b9      	str	r1, [r7, #8]
 800552c:	607a      	str	r2, [r7, #4]
 800552e:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005530:	68bb      	ldr	r3, [r7, #8]
 8005532:	2b00      	cmp	r3, #0
 8005534:	d11a      	bne.n	800556c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8005536:	68f8      	ldr	r0, [r7, #12]
 8005538:	f001 f8dc 	bl	80066f4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 800553c:	4602      	mov	r2, r0
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	4293      	cmp	r3, r2
 8005542:	d013      	beq.n	800556c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005544:	68fc      	ldr	r4, [r7, #12]
 8005546:	f107 0310 	add.w	r3, r7, #16
 800554a:	6839      	ldr	r1, [r7, #0]
 800554c:	4618      	mov	r0, r3
 800554e:	f7ff ffd1 	bl	80054f4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8005552:	4605      	mov	r5, r0
 8005554:	6878      	ldr	r0, [r7, #4]
 8005556:	f001 f8f1 	bl	800673c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800555a:	4603      	mov	r3, r0
 800555c:	461a      	mov	r2, r3
 800555e:	4629      	mov	r1, r5
 8005560:	4620      	mov	r0, r4
 8005562:	f001 f8f7 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005566:	4603      	mov	r3, r0
 8005568:	2b00      	cmp	r3, #0
 800556a:	d001      	beq.n	8005570 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 800556c:	2301      	movs	r3, #1
 800556e:	e000      	b.n	8005572 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8005570:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8005572:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8005574:	6838      	ldr	r0, [r7, #0]
 8005576:	f7ff ffc9 	bl	800550c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 800557a:	4603      	mov	r3, r0
 800557c:	4619      	mov	r1, r3
 800557e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8005580:	f001 f9f5 	bl	800696e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8005584:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8005586:	68fb      	ldr	r3, [r7, #12]
 8005588:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 800558a:	7ff8      	ldrb	r0, [r7, #31]
 800558c:	687a      	ldr	r2, [r7, #4]
 800558e:	69b9      	ldr	r1, [r7, #24]
 8005590:	f01d feee 	bl	8023370 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8005594:	68fb      	ldr	r3, [r7, #12]
 8005596:	695b      	ldr	r3, [r3, #20]
 8005598:	1c5a      	adds	r2, r3, #1
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 800559e:	f107 0314 	add.w	r3, r7, #20
 80055a2:	69b9      	ldr	r1, [r7, #24]
 80055a4:	4618      	mov	r0, r3
 80055a6:	f7ff fe73 	bl	8005290 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 80055aa:	697b      	ldr	r3, [r7, #20]
      }
 80055ac:	4618      	mov	r0, r3
 80055ae:	3720      	adds	r7, #32
 80055b0:	46bd      	mov	sp, r7
 80055b2:	bdb0      	pop	{r4, r5, r7, pc}

080055b4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80055b4:	b480      	push	{r7}
 80055b6:	b083      	sub	sp, #12
 80055b8:	af00      	add	r7, sp, #0
 80055ba:	6078      	str	r0, [r7, #4]
 80055bc:	687b      	ldr	r3, [r7, #4]
 80055be:	4618      	mov	r0, r3
 80055c0:	370c      	adds	r7, #12
 80055c2:	46bd      	mov	sp, r7
 80055c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055c8:	4770      	bx	lr

080055ca <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80055ca:	b480      	push	{r7}
 80055cc:	b083      	sub	sp, #12
 80055ce:	af00      	add	r7, sp, #0
 80055d0:	6078      	str	r0, [r7, #4]
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	4618      	mov	r0, r3
 80055d6:	370c      	adds	r7, #12
 80055d8:	46bd      	mov	sp, r7
 80055da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055de:	4770      	bx	lr

080055e0 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>:
    move(_Tp&& __t) noexcept
 80055e0:	b480      	push	{r7}
 80055e2:	b083      	sub	sp, #12
 80055e4:	af00      	add	r7, sp, #0
 80055e6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	4618      	mov	r0, r3
 80055ec:	370c      	adds	r7, #12
 80055ee:	46bd      	mov	sp, r7
 80055f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055f4:	4770      	bx	lr

080055f6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80055f6:	b580      	push	{r7, lr}
 80055f8:	b082      	sub	sp, #8
 80055fa:	af00      	add	r7, sp, #0
 80055fc:	6078      	str	r0, [r7, #4]
 80055fe:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8005600:	6839      	ldr	r1, [r7, #0]
 8005602:	6878      	ldr	r0, [r7, #4]
 8005604:	f001 f9c7 	bl	8006996 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	4618      	mov	r0, r3
 800560c:	3708      	adds	r7, #8
 800560e:	46bd      	mov	sp, r7
 8005610:	bd80      	pop	{r7, pc}

08005612 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 8005612:	b480      	push	{r7}
 8005614:	b083      	sub	sp, #12
 8005616:	af00      	add	r7, sp, #0
 8005618:	6078      	str	r0, [r7, #4]
 800561a:	6039      	str	r1, [r7, #0]
      { }
 800561c:	687b      	ldr	r3, [r7, #4]
 800561e:	4618      	mov	r0, r3
 8005620:	370c      	adds	r7, #12
 8005622:	46bd      	mov	sp, r7
 8005624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005628:	4770      	bx	lr

0800562a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800562a:	b480      	push	{r7}
 800562c:	b083      	sub	sp, #12
 800562e:	af00      	add	r7, sp, #0
 8005630:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8005632:	687b      	ldr	r3, [r7, #4]
 8005634:	68db      	ldr	r3, [r3, #12]
 8005636:	4618      	mov	r0, r3
 8005638:	370c      	adds	r7, #12
 800563a:	46bd      	mov	sp, r7
 800563c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005640:	4770      	bx	lr

08005642 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8005642:	b480      	push	{r7}
 8005644:	b083      	sub	sp, #12
 8005646:	af00      	add	r7, sp, #0
 8005648:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800564a:	687b      	ldr	r3, [r7, #4]
 800564c:	689b      	ldr	r3, [r3, #8]
 800564e:	4618      	mov	r0, r3
 8005650:	370c      	adds	r7, #12
 8005652:	46bd      	mov	sp, r7
 8005654:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005658:	4770      	bx	lr

0800565a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800565a:	b580      	push	{r7, lr}
 800565c:	b082      	sub	sp, #8
 800565e:	af00      	add	r7, sp, #0
 8005660:	6078      	str	r0, [r7, #4]
 8005662:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8005664:	6839      	ldr	r1, [r7, #0]
 8005666:	6878      	ldr	r0, [r7, #4]
 8005668:	f001 f9a1 	bl	80069ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 800566c:	6839      	ldr	r1, [r7, #0]
 800566e:	6878      	ldr	r0, [r7, #4]
 8005670:	f001 f9b2 	bl	80069d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 8005674:	bf00      	nop
 8005676:	3708      	adds	r7, #8
 8005678:	46bd      	mov	sp, r7
 800567a:	bd80      	pop	{r7, pc}

0800567c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800567c:	b480      	push	{r7}
 800567e:	b083      	sub	sp, #12
 8005680:	af00      	add	r7, sp, #0
 8005682:	6078      	str	r0, [r7, #4]
 8005684:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	683a      	ldr	r2, [r7, #0]
 800568a:	601a      	str	r2, [r3, #0]
 800568c:	687b      	ldr	r3, [r7, #4]
 800568e:	4618      	mov	r0, r3
 8005690:	370c      	adds	r7, #12
 8005692:	46bd      	mov	sp, r7
 8005694:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005698:	4770      	bx	lr

0800569a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800569a:	b590      	push	{r4, r7, lr}
 800569c:	b08d      	sub	sp, #52	; 0x34
 800569e:	af00      	add	r7, sp, #0
 80056a0:	60f8      	str	r0, [r7, #12]
 80056a2:	60b9      	str	r1, [r7, #8]
 80056a4:	607a      	str	r2, [r7, #4]
 80056a6:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 80056a8:	1d3b      	adds	r3, r7, #4
 80056aa:	4618      	mov	r0, r3
 80056ac:	f001 f9a6 	bl	80069fc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>
 80056b0:	4603      	mov	r3, r0
 80056b2:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 80056b4:	69bc      	ldr	r4, [r7, #24]
 80056b6:	68b8      	ldr	r0, [r7, #8]
 80056b8:	f001 f9b1 	bl	8006a1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80056bc:	4603      	mov	r3, r0
 80056be:	429c      	cmp	r4, r3
 80056c0:	bf0c      	ite	eq
 80056c2:	2301      	moveq	r3, #1
 80056c4:	2300      	movne	r3, #0
 80056c6:	b2db      	uxtb	r3, r3
 80056c8:	2b00      	cmp	r3, #0
 80056ca:	d030      	beq.n	800572e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 80056cc:	68b8      	ldr	r0, [r7, #8]
 80056ce:	f001 f9b2 	bl	8006a36 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 80056d2:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 80056d4:	2b00      	cmp	r3, #0
 80056d6:	d013      	beq.n	8005700 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 80056d8:	68bc      	ldr	r4, [r7, #8]
 80056da:	68b8      	ldr	r0, [r7, #8]
 80056dc:	f001 f9b7 	bl	8006a4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80056e0:	4603      	mov	r3, r0
 80056e2:	681b      	ldr	r3, [r3, #0]
 80056e4:	4618      	mov	r0, r3
 80056e6:	f001 f9be 	bl	8006a66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80056ea:	4603      	mov	r3, r0
 80056ec:	683a      	ldr	r2, [r7, #0]
 80056ee:	4619      	mov	r1, r3
 80056f0:	4620      	mov	r0, r4
 80056f2:	f001 f9c4 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80056f6:	4603      	mov	r3, r0
 80056f8:	2b00      	cmp	r3, #0
 80056fa:	d001      	beq.n	8005700 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 80056fc:	2301      	movs	r3, #1
 80056fe:	e000      	b.n	8005702 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 8005700:	2300      	movs	r3, #0
	  if (size() > 0
 8005702:	2b00      	cmp	r3, #0
 8005704:	d00c      	beq.n	8005720 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 8005706:	2300      	movs	r3, #0
 8005708:	61fb      	str	r3, [r7, #28]
 800570a:	68b8      	ldr	r0, [r7, #8]
 800570c:	f001 f99f 	bl	8006a4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8005710:	4602      	mov	r2, r0
 8005712:	f107 031c 	add.w	r3, r7, #28
 8005716:	4619      	mov	r1, r3
 8005718:	68f8      	ldr	r0, [r7, #12]
 800571a:	f001 f830 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800571e:	e0db      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005720:	68fb      	ldr	r3, [r7, #12]
 8005722:	683a      	ldr	r2, [r7, #0]
 8005724:	68b9      	ldr	r1, [r7, #8]
 8005726:	4618      	mov	r0, r3
 8005728:	f001 f9b8 	bl	8006a9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 800572c:	e0d4      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 800572e:	68bc      	ldr	r4, [r7, #8]
 8005730:	69bb      	ldr	r3, [r7, #24]
 8005732:	4618      	mov	r0, r3
 8005734:	f001 f997 	bl	8006a66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005738:	4603      	mov	r3, r0
 800573a:	461a      	mov	r2, r3
 800573c:	6839      	ldr	r1, [r7, #0]
 800573e:	4620      	mov	r0, r4
 8005740:	f001 f99d 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8005744:	4603      	mov	r3, r0
 8005746:	2b00      	cmp	r3, #0
 8005748:	d057      	beq.n	80057fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 800574a:	69bb      	ldr	r3, [r7, #24]
 800574c:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 800574e:	69bc      	ldr	r4, [r7, #24]
 8005750:	68b8      	ldr	r0, [r7, #8]
 8005752:	f001 fa28 	bl	8006ba6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8005756:	4603      	mov	r3, r0
 8005758:	681b      	ldr	r3, [r3, #0]
 800575a:	429c      	cmp	r4, r3
 800575c:	bf0c      	ite	eq
 800575e:	2301      	moveq	r3, #1
 8005760:	2300      	movne	r3, #0
 8005762:	b2db      	uxtb	r3, r3
 8005764:	2b00      	cmp	r3, #0
 8005766:	d00d      	beq.n	8005784 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8005768:	68b8      	ldr	r0, [r7, #8]
 800576a:	f001 fa1c 	bl	8006ba6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 800576e:	4604      	mov	r4, r0
 8005770:	68b8      	ldr	r0, [r7, #8]
 8005772:	f001 fa18 	bl	8006ba6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8005776:	4603      	mov	r3, r0
 8005778:	461a      	mov	r2, r3
 800577a:	4621      	mov	r1, r4
 800577c:	68f8      	ldr	r0, [r7, #12]
 800577e:	f001 f8a5 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005782:	e0a9      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8005784:	68bc      	ldr	r4, [r7, #8]
 8005786:	f107 0314 	add.w	r3, r7, #20
 800578a:	4618      	mov	r0, r3
 800578c:	f001 fa17 	bl	8006bbe <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
 8005790:	4603      	mov	r3, r0
 8005792:	681b      	ldr	r3, [r3, #0]
 8005794:	4618      	mov	r0, r3
 8005796:	f001 f966 	bl	8006a66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800579a:	4603      	mov	r3, r0
 800579c:	683a      	ldr	r2, [r7, #0]
 800579e:	4619      	mov	r1, r3
 80057a0:	4620      	mov	r0, r4
 80057a2:	f001 f96c 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80057a6:	4603      	mov	r3, r0
 80057a8:	2b00      	cmp	r3, #0
 80057aa:	d01f      	beq.n	80057ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 80057ac:	697b      	ldr	r3, [r7, #20]
 80057ae:	4618      	mov	r0, r3
 80057b0:	f7ff ff3b 	bl	800562a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80057b4:	4603      	mov	r3, r0
 80057b6:	2b00      	cmp	r3, #0
 80057b8:	bf0c      	ite	eq
 80057ba:	2301      	moveq	r3, #1
 80057bc:	2300      	movne	r3, #0
 80057be:	b2db      	uxtb	r3, r3
 80057c0:	2b00      	cmp	r3, #0
 80057c2:	d00a      	beq.n	80057da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 80057c4:	2300      	movs	r3, #0
 80057c6:	623b      	str	r3, [r7, #32]
 80057c8:	f107 0214 	add.w	r2, r7, #20
 80057cc:	f107 0320 	add.w	r3, r7, #32
 80057d0:	4619      	mov	r1, r3
 80057d2:	68f8      	ldr	r0, [r7, #12]
 80057d4:	f000 ffd3 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80057d8:	e07e      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 80057da:	f107 0218 	add.w	r2, r7, #24
 80057de:	f107 0318 	add.w	r3, r7, #24
 80057e2:	4619      	mov	r1, r3
 80057e4:	68f8      	ldr	r0, [r7, #12]
 80057e6:	f001 f871 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80057ea:	e075      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80057ec:	68fb      	ldr	r3, [r7, #12]
 80057ee:	683a      	ldr	r2, [r7, #0]
 80057f0:	68b9      	ldr	r1, [r7, #8]
 80057f2:	4618      	mov	r0, r3
 80057f4:	f001 f952 	bl	8006a9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80057f8:	e06e      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 80057fa:	68bc      	ldr	r4, [r7, #8]
 80057fc:	69bb      	ldr	r3, [r7, #24]
 80057fe:	4618      	mov	r0, r3
 8005800:	f001 f931 	bl	8006a66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005804:	4603      	mov	r3, r0
 8005806:	683a      	ldr	r2, [r7, #0]
 8005808:	4619      	mov	r1, r3
 800580a:	4620      	mov	r0, r4
 800580c:	f001 f937 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8005810:	4603      	mov	r3, r0
 8005812:	2b00      	cmp	r3, #0
 8005814:	d056      	beq.n	80058c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 8005816:	69bb      	ldr	r3, [r7, #24]
 8005818:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 800581a:	69bc      	ldr	r4, [r7, #24]
 800581c:	68b8      	ldr	r0, [r7, #8]
 800581e:	f001 f916 	bl	8006a4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8005822:	4603      	mov	r3, r0
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	429c      	cmp	r4, r3
 8005828:	bf0c      	ite	eq
 800582a:	2301      	moveq	r3, #1
 800582c:	2300      	movne	r3, #0
 800582e:	b2db      	uxtb	r3, r3
 8005830:	2b00      	cmp	r3, #0
 8005832:	d00c      	beq.n	800584e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 8005834:	2300      	movs	r3, #0
 8005836:	627b      	str	r3, [r7, #36]	; 0x24
 8005838:	68b8      	ldr	r0, [r7, #8]
 800583a:	f001 f908 	bl	8006a4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 800583e:	4602      	mov	r2, r0
 8005840:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005844:	4619      	mov	r1, r3
 8005846:	68f8      	ldr	r0, [r7, #12]
 8005848:	f000 ff99 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800584c:	e044      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 800584e:	68bc      	ldr	r4, [r7, #8]
 8005850:	f107 0310 	add.w	r3, r7, #16
 8005854:	4618      	mov	r0, r3
 8005856:	f001 f9c3 	bl	8006be0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>
 800585a:	4603      	mov	r3, r0
 800585c:	681b      	ldr	r3, [r3, #0]
 800585e:	4618      	mov	r0, r3
 8005860:	f001 f901 	bl	8006a66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005864:	4603      	mov	r3, r0
 8005866:	461a      	mov	r2, r3
 8005868:	6839      	ldr	r1, [r7, #0]
 800586a:	4620      	mov	r0, r4
 800586c:	f001 f907 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8005870:	4603      	mov	r3, r0
 8005872:	2b00      	cmp	r3, #0
 8005874:	d01f      	beq.n	80058b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8005876:	69bb      	ldr	r3, [r7, #24]
 8005878:	4618      	mov	r0, r3
 800587a:	f7ff fed6 	bl	800562a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 800587e:	4603      	mov	r3, r0
 8005880:	2b00      	cmp	r3, #0
 8005882:	bf0c      	ite	eq
 8005884:	2301      	moveq	r3, #1
 8005886:	2300      	movne	r3, #0
 8005888:	b2db      	uxtb	r3, r3
 800588a:	2b00      	cmp	r3, #0
 800588c:	d00a      	beq.n	80058a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 800588e:	2300      	movs	r3, #0
 8005890:	62bb      	str	r3, [r7, #40]	; 0x28
 8005892:	f107 0218 	add.w	r2, r7, #24
 8005896:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800589a:	4619      	mov	r1, r3
 800589c:	68f8      	ldr	r0, [r7, #12]
 800589e:	f000 ff6e 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80058a2:	e019      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 80058a4:	f107 0210 	add.w	r2, r7, #16
 80058a8:	f107 0310 	add.w	r3, r7, #16
 80058ac:	4619      	mov	r1, r3
 80058ae:	68f8      	ldr	r0, [r7, #12]
 80058b0:	f001 f80c 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80058b4:	e010      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80058b6:	68fb      	ldr	r3, [r7, #12]
 80058b8:	683a      	ldr	r2, [r7, #0]
 80058ba:	68b9      	ldr	r1, [r7, #8]
 80058bc:	4618      	mov	r0, r3
 80058be:	f001 f8ed 	bl	8006a9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80058c2:	e009      	b.n	80058d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 80058c4:	2300      	movs	r3, #0
 80058c6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80058c8:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80058cc:	f107 0318 	add.w	r3, r7, #24
 80058d0:	4619      	mov	r1, r3
 80058d2:	68f8      	ldr	r0, [r7, #12]
 80058d4:	f001 f835 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80058d8:	68f8      	ldr	r0, [r7, #12]
 80058da:	3734      	adds	r7, #52	; 0x34
 80058dc:	46bd      	mov	sp, r7
 80058de:	bd90      	pop	{r4, r7, pc}

080058e0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>:
      operator()(const _Pair& __x) const
 80058e0:	b480      	push	{r7}
 80058e2:	b083      	sub	sp, #12
 80058e4:	af00      	add	r7, sp, #0
 80058e6:	6078      	str	r0, [r7, #4]
 80058e8:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80058ea:	683b      	ldr	r3, [r7, #0]
 80058ec:	4618      	mov	r0, r3
 80058ee:	370c      	adds	r7, #12
 80058f0:	46bd      	mov	sp, r7
 80058f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058f6:	4770      	bx	lr

080058f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80058f8:	b480      	push	{r7}
 80058fa:	b083      	sub	sp, #12
 80058fc:	af00      	add	r7, sp, #0
 80058fe:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005900:	687b      	ldr	r3, [r7, #4]
 8005902:	4618      	mov	r0, r3
 8005904:	370c      	adds	r7, #12
 8005906:	46bd      	mov	sp, r7
 8005908:	f85d 7b04 	ldr.w	r7, [sp], #4
 800590c:	4770      	bx	lr

0800590e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800590e:	b5b0      	push	{r4, r5, r7, lr}
 8005910:	b088      	sub	sp, #32
 8005912:	af00      	add	r7, sp, #0
 8005914:	60f8      	str	r0, [r7, #12]
 8005916:	60b9      	str	r1, [r7, #8]
 8005918:	607a      	str	r2, [r7, #4]
 800591a:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 800591c:	68bb      	ldr	r3, [r7, #8]
 800591e:	2b00      	cmp	r3, #0
 8005920:	d11a      	bne.n	8005958 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8005922:	68f8      	ldr	r0, [r7, #12]
 8005924:	f001 f87b 	bl	8006a1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8005928:	4602      	mov	r2, r0
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	4293      	cmp	r3, r2
 800592e:	d013      	beq.n	8005958 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005930:	68fc      	ldr	r4, [r7, #12]
 8005932:	f107 0310 	add.w	r3, r7, #16
 8005936:	6839      	ldr	r1, [r7, #0]
 8005938:	4618      	mov	r0, r3
 800593a:	f7ff ffd1 	bl	80058e0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 800593e:	4605      	mov	r5, r0
 8005940:	6878      	ldr	r0, [r7, #4]
 8005942:	f001 f890 	bl	8006a66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005946:	4603      	mov	r3, r0
 8005948:	461a      	mov	r2, r3
 800594a:	4629      	mov	r1, r5
 800594c:	4620      	mov	r0, r4
 800594e:	f001 f896 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8005952:	4603      	mov	r3, r0
 8005954:	2b00      	cmp	r3, #0
 8005956:	d001      	beq.n	800595c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4e>
 8005958:	2301      	movs	r3, #1
 800595a:	e000      	b.n	800595e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x50>
 800595c:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 800595e:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8005960:	6838      	ldr	r0, [r7, #0]
 8005962:	f7ff ffc9 	bl	80058f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8005966:	4603      	mov	r3, r0
 8005968:	4619      	mov	r1, r3
 800596a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800596c:	f001 f949 	bl	8006c02 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 8005970:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8005972:	68fb      	ldr	r3, [r7, #12]
 8005974:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8005976:	7ff8      	ldrb	r0, [r7, #31]
 8005978:	687a      	ldr	r2, [r7, #4]
 800597a:	69b9      	ldr	r1, [r7, #24]
 800597c:	f01d fcf8 	bl	8023370 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8005980:	68fb      	ldr	r3, [r7, #12]
 8005982:	695b      	ldr	r3, [r3, #20]
 8005984:	1c5a      	adds	r2, r3, #1
 8005986:	68fb      	ldr	r3, [r7, #12]
 8005988:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 800598a:	f107 0314 	add.w	r3, r7, #20
 800598e:	69b9      	ldr	r1, [r7, #24]
 8005990:	4618      	mov	r0, r3
 8005992:	f7ff fe73 	bl	800567c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8005996:	697b      	ldr	r3, [r7, #20]
      }
 8005998:	4618      	mov	r0, r3
 800599a:	3720      	adds	r7, #32
 800599c:	46bd      	mov	sp, r7
 800599e:	bdb0      	pop	{r4, r5, r7, pc}

080059a0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80059a0:	b480      	push	{r7}
 80059a2:	b083      	sub	sp, #12
 80059a4:	af00      	add	r7, sp, #0
 80059a6:	6078      	str	r0, [r7, #4]
 80059a8:	687b      	ldr	r3, [r7, #4]
 80059aa:	4618      	mov	r0, r3
 80059ac:	370c      	adds	r7, #12
 80059ae:	46bd      	mov	sp, r7
 80059b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059b4:	4770      	bx	lr

080059b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80059b6:	b480      	push	{r7}
 80059b8:	b083      	sub	sp, #12
 80059ba:	af00      	add	r7, sp, #0
 80059bc:	6078      	str	r0, [r7, #4]
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	4618      	mov	r0, r3
 80059c2:	370c      	adds	r7, #12
 80059c4:	46bd      	mov	sp, r7
 80059c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059ca:	4770      	bx	lr

080059cc <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
 80059cc:	b480      	push	{r7}
 80059ce:	b083      	sub	sp, #12
 80059d0:	af00      	add	r7, sp, #0
 80059d2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	4618      	mov	r0, r3
 80059d8:	370c      	adds	r7, #12
 80059da:	46bd      	mov	sp, r7
 80059dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059e0:	4770      	bx	lr

080059e2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80059e2:	b580      	push	{r7, lr}
 80059e4:	b082      	sub	sp, #8
 80059e6:	af00      	add	r7, sp, #0
 80059e8:	6078      	str	r0, [r7, #4]
 80059ea:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80059ec:	6839      	ldr	r1, [r7, #0]
 80059ee:	6878      	ldr	r0, [r7, #4]
 80059f0:	f001 f91b 	bl	8006c2a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	4618      	mov	r0, r3
 80059f8:	3708      	adds	r7, #8
 80059fa:	46bd      	mov	sp, r7
 80059fc:	bd80      	pop	{r7, pc}

080059fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80059fe:	b480      	push	{r7}
 8005a00:	b083      	sub	sp, #12
 8005a02:	af00      	add	r7, sp, #0
 8005a04:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8005a06:	687b      	ldr	r3, [r7, #4]
 8005a08:	68db      	ldr	r3, [r3, #12]
 8005a0a:	4618      	mov	r0, r3
 8005a0c:	370c      	adds	r7, #12
 8005a0e:	46bd      	mov	sp, r7
 8005a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a14:	4770      	bx	lr

08005a16 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8005a16:	b480      	push	{r7}
 8005a18:	b083      	sub	sp, #12
 8005a1a:	af00      	add	r7, sp, #0
 8005a1c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	689b      	ldr	r3, [r3, #8]
 8005a22:	4618      	mov	r0, r3
 8005a24:	370c      	adds	r7, #12
 8005a26:	46bd      	mov	sp, r7
 8005a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a2c:	4770      	bx	lr

08005a2e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8005a2e:	b580      	push	{r7, lr}
 8005a30:	b082      	sub	sp, #8
 8005a32:	af00      	add	r7, sp, #0
 8005a34:	6078      	str	r0, [r7, #4]
 8005a36:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8005a38:	6839      	ldr	r1, [r7, #0]
 8005a3a:	6878      	ldr	r0, [r7, #4]
 8005a3c:	f001 f901 	bl	8006c42 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 8005a40:	6839      	ldr	r1, [r7, #0]
 8005a42:	6878      	ldr	r0, [r7, #4]
 8005a44:	f001 f912 	bl	8006c6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 8005a48:	bf00      	nop
 8005a4a:	3708      	adds	r7, #8
 8005a4c:	46bd      	mov	sp, r7
 8005a4e:	bd80      	pop	{r7, pc}

08005a50 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8005a50:	b480      	push	{r7}
 8005a52:	b083      	sub	sp, #12
 8005a54:	af00      	add	r7, sp, #0
 8005a56:	6078      	str	r0, [r7, #4]
 8005a58:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	683a      	ldr	r2, [r7, #0]
 8005a5e:	601a      	str	r2, [r3, #0]
 8005a60:	687b      	ldr	r3, [r7, #4]
 8005a62:	4618      	mov	r0, r3
 8005a64:	370c      	adds	r7, #12
 8005a66:	46bd      	mov	sp, r7
 8005a68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a6c:	4770      	bx	lr

08005a6e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8005a6e:	b590      	push	{r4, r7, lr}
 8005a70:	b08d      	sub	sp, #52	; 0x34
 8005a72:	af00      	add	r7, sp, #0
 8005a74:	60f8      	str	r0, [r7, #12]
 8005a76:	60b9      	str	r1, [r7, #8]
 8005a78:	607a      	str	r2, [r7, #4]
 8005a7a:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 8005a7c:	1d3b      	adds	r3, r7, #4
 8005a7e:	4618      	mov	r0, r3
 8005a80:	f001 f906 	bl	8006c90 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>
 8005a84:	4603      	mov	r3, r0
 8005a86:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8005a88:	69bc      	ldr	r4, [r7, #24]
 8005a8a:	68b8      	ldr	r0, [r7, #8]
 8005a8c:	f001 f911 	bl	8006cb2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8005a90:	4603      	mov	r3, r0
 8005a92:	429c      	cmp	r4, r3
 8005a94:	bf0c      	ite	eq
 8005a96:	2301      	moveq	r3, #1
 8005a98:	2300      	movne	r3, #0
 8005a9a:	b2db      	uxtb	r3, r3
 8005a9c:	2b00      	cmp	r3, #0
 8005a9e:	d030      	beq.n	8005b02 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 8005aa0:	68b8      	ldr	r0, [r7, #8]
 8005aa2:	f001 f912 	bl	8006cca <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 8005aa6:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8005aa8:	2b00      	cmp	r3, #0
 8005aaa:	d013      	beq.n	8005ad4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8005aac:	68bc      	ldr	r4, [r7, #8]
 8005aae:	68b8      	ldr	r0, [r7, #8]
 8005ab0:	f001 f917 	bl	8006ce2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005ab4:	4603      	mov	r3, r0
 8005ab6:	681b      	ldr	r3, [r3, #0]
 8005ab8:	4618      	mov	r0, r3
 8005aba:	f001 f91e 	bl	8006cfa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005abe:	4603      	mov	r3, r0
 8005ac0:	683a      	ldr	r2, [r7, #0]
 8005ac2:	4619      	mov	r1, r3
 8005ac4:	4620      	mov	r0, r4
 8005ac6:	f000 fe45 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005aca:	4603      	mov	r3, r0
 8005acc:	2b00      	cmp	r3, #0
 8005ace:	d001      	beq.n	8005ad4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8005ad0:	2301      	movs	r3, #1
 8005ad2:	e000      	b.n	8005ad6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 8005ad4:	2300      	movs	r3, #0
	  if (size() > 0
 8005ad6:	2b00      	cmp	r3, #0
 8005ad8:	d00c      	beq.n	8005af4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 8005ada:	2300      	movs	r3, #0
 8005adc:	61fb      	str	r3, [r7, #28]
 8005ade:	68b8      	ldr	r0, [r7, #8]
 8005ae0:	f001 f8ff 	bl	8006ce2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005ae4:	4602      	mov	r2, r0
 8005ae6:	f107 031c 	add.w	r3, r7, #28
 8005aea:	4619      	mov	r1, r3
 8005aec:	68f8      	ldr	r0, [r7, #12]
 8005aee:	f000 fe46 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005af2:	e0db      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005af4:	68fb      	ldr	r3, [r7, #12]
 8005af6:	683a      	ldr	r2, [r7, #0]
 8005af8:	68b9      	ldr	r1, [r7, #8]
 8005afa:	4618      	mov	r0, r3
 8005afc:	f001 f909 	bl	8006d12 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8005b00:	e0d4      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8005b02:	68bc      	ldr	r4, [r7, #8]
 8005b04:	69bb      	ldr	r3, [r7, #24]
 8005b06:	4618      	mov	r0, r3
 8005b08:	f001 f8f7 	bl	8006cfa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005b0c:	4603      	mov	r3, r0
 8005b0e:	461a      	mov	r2, r3
 8005b10:	6839      	ldr	r1, [r7, #0]
 8005b12:	4620      	mov	r0, r4
 8005b14:	f000 fe1e 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005b18:	4603      	mov	r3, r0
 8005b1a:	2b00      	cmp	r3, #0
 8005b1c:	d057      	beq.n	8005bce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 8005b1e:	69bb      	ldr	r3, [r7, #24]
 8005b20:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8005b22:	69bc      	ldr	r4, [r7, #24]
 8005b24:	68b8      	ldr	r0, [r7, #8]
 8005b26:	f001 f979 	bl	8006e1c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8005b2a:	4603      	mov	r3, r0
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	429c      	cmp	r4, r3
 8005b30:	bf0c      	ite	eq
 8005b32:	2301      	moveq	r3, #1
 8005b34:	2300      	movne	r3, #0
 8005b36:	b2db      	uxtb	r3, r3
 8005b38:	2b00      	cmp	r3, #0
 8005b3a:	d00d      	beq.n	8005b58 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8005b3c:	68b8      	ldr	r0, [r7, #8]
 8005b3e:	f001 f96d 	bl	8006e1c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8005b42:	4604      	mov	r4, r0
 8005b44:	68b8      	ldr	r0, [r7, #8]
 8005b46:	f001 f969 	bl	8006e1c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8005b4a:	4603      	mov	r3, r0
 8005b4c:	461a      	mov	r2, r3
 8005b4e:	4621      	mov	r1, r4
 8005b50:	68f8      	ldr	r0, [r7, #12]
 8005b52:	f000 febb 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005b56:	e0a9      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8005b58:	68bc      	ldr	r4, [r7, #8]
 8005b5a:	f107 0314 	add.w	r3, r7, #20
 8005b5e:	4618      	mov	r0, r3
 8005b60:	f001 f968 	bl	8006e34 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
 8005b64:	4603      	mov	r3, r0
 8005b66:	681b      	ldr	r3, [r3, #0]
 8005b68:	4618      	mov	r0, r3
 8005b6a:	f001 f8c6 	bl	8006cfa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005b6e:	4603      	mov	r3, r0
 8005b70:	683a      	ldr	r2, [r7, #0]
 8005b72:	4619      	mov	r1, r3
 8005b74:	4620      	mov	r0, r4
 8005b76:	f000 fded 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005b7a:	4603      	mov	r3, r0
 8005b7c:	2b00      	cmp	r3, #0
 8005b7e:	d01f      	beq.n	8005bc0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8005b80:	697b      	ldr	r3, [r7, #20]
 8005b82:	4618      	mov	r0, r3
 8005b84:	f7ff ff3b 	bl	80059fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005b88:	4603      	mov	r3, r0
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	bf0c      	ite	eq
 8005b8e:	2301      	moveq	r3, #1
 8005b90:	2300      	movne	r3, #0
 8005b92:	b2db      	uxtb	r3, r3
 8005b94:	2b00      	cmp	r3, #0
 8005b96:	d00a      	beq.n	8005bae <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 8005b98:	2300      	movs	r3, #0
 8005b9a:	623b      	str	r3, [r7, #32]
 8005b9c:	f107 0214 	add.w	r2, r7, #20
 8005ba0:	f107 0320 	add.w	r3, r7, #32
 8005ba4:	4619      	mov	r1, r3
 8005ba6:	68f8      	ldr	r0, [r7, #12]
 8005ba8:	f000 fde9 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005bac:	e07e      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 8005bae:	f107 0218 	add.w	r2, r7, #24
 8005bb2:	f107 0318 	add.w	r3, r7, #24
 8005bb6:	4619      	mov	r1, r3
 8005bb8:	68f8      	ldr	r0, [r7, #12]
 8005bba:	f000 fe87 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005bbe:	e075      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005bc0:	68fb      	ldr	r3, [r7, #12]
 8005bc2:	683a      	ldr	r2, [r7, #0]
 8005bc4:	68b9      	ldr	r1, [r7, #8]
 8005bc6:	4618      	mov	r0, r3
 8005bc8:	f001 f8a3 	bl	8006d12 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8005bcc:	e06e      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 8005bce:	68bc      	ldr	r4, [r7, #8]
 8005bd0:	69bb      	ldr	r3, [r7, #24]
 8005bd2:	4618      	mov	r0, r3
 8005bd4:	f001 f891 	bl	8006cfa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005bd8:	4603      	mov	r3, r0
 8005bda:	683a      	ldr	r2, [r7, #0]
 8005bdc:	4619      	mov	r1, r3
 8005bde:	4620      	mov	r0, r4
 8005be0:	f000 fdb8 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005be4:	4603      	mov	r3, r0
 8005be6:	2b00      	cmp	r3, #0
 8005be8:	d056      	beq.n	8005c98 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 8005bea:	69bb      	ldr	r3, [r7, #24]
 8005bec:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 8005bee:	69bc      	ldr	r4, [r7, #24]
 8005bf0:	68b8      	ldr	r0, [r7, #8]
 8005bf2:	f001 f876 	bl	8006ce2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005bf6:	4603      	mov	r3, r0
 8005bf8:	681b      	ldr	r3, [r3, #0]
 8005bfa:	429c      	cmp	r4, r3
 8005bfc:	bf0c      	ite	eq
 8005bfe:	2301      	moveq	r3, #1
 8005c00:	2300      	movne	r3, #0
 8005c02:	b2db      	uxtb	r3, r3
 8005c04:	2b00      	cmp	r3, #0
 8005c06:	d00c      	beq.n	8005c22 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 8005c08:	2300      	movs	r3, #0
 8005c0a:	627b      	str	r3, [r7, #36]	; 0x24
 8005c0c:	68b8      	ldr	r0, [r7, #8]
 8005c0e:	f001 f868 	bl	8006ce2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8005c12:	4602      	mov	r2, r0
 8005c14:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005c18:	4619      	mov	r1, r3
 8005c1a:	68f8      	ldr	r0, [r7, #12]
 8005c1c:	f000 fdaf 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005c20:	e044      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8005c22:	68bc      	ldr	r4, [r7, #8]
 8005c24:	f107 0310 	add.w	r3, r7, #16
 8005c28:	4618      	mov	r0, r3
 8005c2a:	f001 f914 	bl	8006e56 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>
 8005c2e:	4603      	mov	r3, r0
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	4618      	mov	r0, r3
 8005c34:	f001 f861 	bl	8006cfa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005c38:	4603      	mov	r3, r0
 8005c3a:	461a      	mov	r2, r3
 8005c3c:	6839      	ldr	r1, [r7, #0]
 8005c3e:	4620      	mov	r0, r4
 8005c40:	f000 fd88 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005c44:	4603      	mov	r3, r0
 8005c46:	2b00      	cmp	r3, #0
 8005c48:	d01f      	beq.n	8005c8a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8005c4a:	69bb      	ldr	r3, [r7, #24]
 8005c4c:	4618      	mov	r0, r3
 8005c4e:	f7ff fed6 	bl	80059fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8005c52:	4603      	mov	r3, r0
 8005c54:	2b00      	cmp	r3, #0
 8005c56:	bf0c      	ite	eq
 8005c58:	2301      	moveq	r3, #1
 8005c5a:	2300      	movne	r3, #0
 8005c5c:	b2db      	uxtb	r3, r3
 8005c5e:	2b00      	cmp	r3, #0
 8005c60:	d00a      	beq.n	8005c78 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 8005c62:	2300      	movs	r3, #0
 8005c64:	62bb      	str	r3, [r7, #40]	; 0x28
 8005c66:	f107 0218 	add.w	r2, r7, #24
 8005c6a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8005c6e:	4619      	mov	r1, r3
 8005c70:	68f8      	ldr	r0, [r7, #12]
 8005c72:	f000 fd84 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8005c76:	e019      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8005c78:	f107 0210 	add.w	r2, r7, #16
 8005c7c:	f107 0310 	add.w	r3, r7, #16
 8005c80:	4619      	mov	r1, r3
 8005c82:	68f8      	ldr	r0, [r7, #12]
 8005c84:	f000 fe22 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8005c88:	e010      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8005c8a:	68fb      	ldr	r3, [r7, #12]
 8005c8c:	683a      	ldr	r2, [r7, #0]
 8005c8e:	68b9      	ldr	r1, [r7, #8]
 8005c90:	4618      	mov	r0, r3
 8005c92:	f001 f83e 	bl	8006d12 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8005c96:	e009      	b.n	8005cac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 8005c98:	2300      	movs	r3, #0
 8005c9a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005c9c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8005ca0:	f107 0318 	add.w	r3, r7, #24
 8005ca4:	4619      	mov	r1, r3
 8005ca6:	68f8      	ldr	r0, [r7, #12]
 8005ca8:	f000 fe4b 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8005cac:	68f8      	ldr	r0, [r7, #12]
 8005cae:	3734      	adds	r7, #52	; 0x34
 8005cb0:	46bd      	mov	sp, r7
 8005cb2:	bd90      	pop	{r4, r7, pc}

08005cb4 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>:
      operator()(const _Pair& __x) const
 8005cb4:	b480      	push	{r7}
 8005cb6:	b083      	sub	sp, #12
 8005cb8:	af00      	add	r7, sp, #0
 8005cba:	6078      	str	r0, [r7, #4]
 8005cbc:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8005cbe:	683b      	ldr	r3, [r7, #0]
 8005cc0:	4618      	mov	r0, r3
 8005cc2:	370c      	adds	r7, #12
 8005cc4:	46bd      	mov	sp, r7
 8005cc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cca:	4770      	bx	lr

08005ccc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005ccc:	b480      	push	{r7}
 8005cce:	b083      	sub	sp, #12
 8005cd0:	af00      	add	r7, sp, #0
 8005cd2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	4618      	mov	r0, r3
 8005cd8:	370c      	adds	r7, #12
 8005cda:	46bd      	mov	sp, r7
 8005cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ce0:	4770      	bx	lr

08005ce2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8005ce2:	b5b0      	push	{r4, r5, r7, lr}
 8005ce4:	b088      	sub	sp, #32
 8005ce6:	af00      	add	r7, sp, #0
 8005ce8:	60f8      	str	r0, [r7, #12]
 8005cea:	60b9      	str	r1, [r7, #8]
 8005cec:	607a      	str	r2, [r7, #4]
 8005cee:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005cf0:	68bb      	ldr	r3, [r7, #8]
 8005cf2:	2b00      	cmp	r3, #0
 8005cf4:	d11a      	bne.n	8005d2c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8005cf6:	68f8      	ldr	r0, [r7, #12]
 8005cf8:	f000 ffdb 	bl	8006cb2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8005cfc:	4602      	mov	r2, r0
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	4293      	cmp	r3, r2
 8005d02:	d013      	beq.n	8005d2c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8005d04:	68fc      	ldr	r4, [r7, #12]
 8005d06:	f107 0310 	add.w	r3, r7, #16
 8005d0a:	6839      	ldr	r1, [r7, #0]
 8005d0c:	4618      	mov	r0, r3
 8005d0e:	f7ff ffd1 	bl	8005cb4 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8005d12:	4605      	mov	r5, r0
 8005d14:	6878      	ldr	r0, [r7, #4]
 8005d16:	f000 fff0 	bl	8006cfa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8005d1a:	4603      	mov	r3, r0
 8005d1c:	461a      	mov	r2, r3
 8005d1e:	4629      	mov	r1, r5
 8005d20:	4620      	mov	r0, r4
 8005d22:	f000 fd17 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8005d26:	4603      	mov	r3, r0
 8005d28:	2b00      	cmp	r3, #0
 8005d2a:	d001      	beq.n	8005d30 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 8005d2c:	2301      	movs	r3, #1
 8005d2e:	e000      	b.n	8005d32 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8005d30:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8005d32:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8005d34:	6838      	ldr	r0, [r7, #0]
 8005d36:	f7ff ffc9 	bl	8005ccc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8005d3a:	4603      	mov	r3, r0
 8005d3c:	4619      	mov	r1, r3
 8005d3e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8005d40:	f001 f89a 	bl	8006e78 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8005d44:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8005d4a:	7ff8      	ldrb	r0, [r7, #31]
 8005d4c:	687a      	ldr	r2, [r7, #4]
 8005d4e:	69b9      	ldr	r1, [r7, #24]
 8005d50:	f01d fb0e 	bl	8023370 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8005d54:	68fb      	ldr	r3, [r7, #12]
 8005d56:	695b      	ldr	r3, [r3, #20]
 8005d58:	1c5a      	adds	r2, r3, #1
 8005d5a:	68fb      	ldr	r3, [r7, #12]
 8005d5c:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8005d5e:	f107 0314 	add.w	r3, r7, #20
 8005d62:	69b9      	ldr	r1, [r7, #24]
 8005d64:	4618      	mov	r0, r3
 8005d66:	f7ff fe73 	bl	8005a50 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8005d6a:	697b      	ldr	r3, [r7, #20]
      }
 8005d6c:	4618      	mov	r0, r3
 8005d6e:	3720      	adds	r7, #32
 8005d70:	46bd      	mov	sp, r7
 8005d72:	bdb0      	pop	{r4, r5, r7, pc}

08005d74 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005d74:	b480      	push	{r7}
 8005d76:	b083      	sub	sp, #12
 8005d78:	af00      	add	r7, sp, #0
 8005d7a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	4618      	mov	r0, r3
 8005d80:	370c      	adds	r7, #12
 8005d82:	46bd      	mov	sp, r7
 8005d84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d88:	4770      	bx	lr

08005d8a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005d8a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d8c:	b083      	sub	sp, #12
 8005d8e:	af00      	add	r7, sp, #0
 8005d90:	6078      	str	r0, [r7, #4]
 8005d92:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005d94:	6878      	ldr	r0, [r7, #4]
 8005d96:	f000 f876 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005d9a:	4604      	mov	r4, r0
 8005d9c:	6838      	ldr	r0, [r7, #0]
 8005d9e:	f7fe ff2d 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8005da2:	4603      	mov	r3, r0
 8005da4:	461a      	mov	r2, r3
 8005da6:	4621      	mov	r1, r4
 8005da8:	4628      	mov	r0, r5
 8005daa:	f001 f879 	bl	8006ea0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005dae:	4633      	mov	r3, r6
    }
 8005db0:	4618      	mov	r0, r3
 8005db2:	370c      	adds	r7, #12
 8005db4:	46bd      	mov	sp, r7
 8005db6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005db8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005db8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005dba:	b083      	sub	sp, #12
 8005dbc:	af00      	add	r7, sp, #0
 8005dbe:	6078      	str	r0, [r7, #4]
 8005dc0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005dc2:	6878      	ldr	r0, [r7, #4]
 8005dc4:	f000 f85f 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005dc8:	4604      	mov	r4, r0
 8005dca:	6838      	ldr	r0, [r7, #0]
 8005dcc:	f7fe ff4a 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8005dd0:	4603      	mov	r3, r0
 8005dd2:	461a      	mov	r2, r3
 8005dd4:	4621      	mov	r1, r4
 8005dd6:	4628      	mov	r0, r5
 8005dd8:	f001 f879 	bl	8006ece <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005ddc:	4633      	mov	r3, r6
    }
 8005dde:	4618      	mov	r0, r3
 8005de0:	370c      	adds	r7, #12
 8005de2:	46bd      	mov	sp, r7
 8005de4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005de6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005de6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005de8:	b083      	sub	sp, #12
 8005dea:	af00      	add	r7, sp, #0
 8005dec:	6078      	str	r0, [r7, #4]
 8005dee:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005df0:	6878      	ldr	r0, [r7, #4]
 8005df2:	f000 f848 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005df6:	4604      	mov	r4, r0
 8005df8:	6838      	ldr	r0, [r7, #0]
 8005dfa:	f7fe ff67 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8005dfe:	4603      	mov	r3, r0
 8005e00:	461a      	mov	r2, r3
 8005e02:	4621      	mov	r1, r4
 8005e04:	4628      	mov	r0, r5
 8005e06:	f001 f879 	bl	8006efc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005e0a:	4633      	mov	r3, r6
    }
 8005e0c:	4618      	mov	r0, r3
 8005e0e:	370c      	adds	r7, #12
 8005e10:	46bd      	mov	sp, r7
 8005e12:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005e14 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005e14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e16:	b083      	sub	sp, #12
 8005e18:	af00      	add	r7, sp, #0
 8005e1a:	6078      	str	r0, [r7, #4]
 8005e1c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005e1e:	6878      	ldr	r0, [r7, #4]
 8005e20:	f000 f831 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005e24:	4604      	mov	r4, r0
 8005e26:	6838      	ldr	r0, [r7, #0]
 8005e28:	f7fe ff90 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8005e2c:	4603      	mov	r3, r0
 8005e2e:	461a      	mov	r2, r3
 8005e30:	4621      	mov	r1, r4
 8005e32:	4628      	mov	r0, r5
 8005e34:	f001 f879 	bl	8006f2a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005e38:	4633      	mov	r3, r6
    }
 8005e3a:	4618      	mov	r0, r3
 8005e3c:	370c      	adds	r7, #12
 8005e3e:	46bd      	mov	sp, r7
 8005e40:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005e42 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005e42:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e44:	b083      	sub	sp, #12
 8005e46:	af00      	add	r7, sp, #0
 8005e48:	6078      	str	r0, [r7, #4]
 8005e4a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005e4c:	6878      	ldr	r0, [r7, #4]
 8005e4e:	f000 f81a 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005e52:	4604      	mov	r4, r0
 8005e54:	6838      	ldr	r0, [r7, #0]
 8005e56:	f7fe ffb9 	bl	8004dcc <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8005e5a:	4603      	mov	r3, r0
 8005e5c:	461a      	mov	r2, r3
 8005e5e:	4621      	mov	r1, r4
 8005e60:	4628      	mov	r0, r5
 8005e62:	f001 f879 	bl	8006f58 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005e66:	4633      	mov	r3, r6
    }
 8005e68:	4618      	mov	r0, r3
 8005e6a:	370c      	adds	r7, #12
 8005e6c:	46bd      	mov	sp, r7
 8005e6e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005e70 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8005e70:	b480      	push	{r7}
 8005e72:	b083      	sub	sp, #12
 8005e74:	af00      	add	r7, sp, #0
 8005e76:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	4618      	mov	r0, r3
 8005e7c:	370c      	adds	r7, #12
 8005e7e:	46bd      	mov	sp, r7
 8005e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e84:	4770      	bx	lr

08005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005e86:	b480      	push	{r7}
 8005e88:	b083      	sub	sp, #12
 8005e8a:	af00      	add	r7, sp, #0
 8005e8c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	4618      	mov	r0, r3
 8005e92:	370c      	adds	r7, #12
 8005e94:	46bd      	mov	sp, r7
 8005e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e9a:	4770      	bx	lr

08005e9c <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8005e9c:	b580      	push	{r7, lr}
 8005e9e:	b082      	sub	sp, #8
 8005ea0:	af00      	add	r7, sp, #0
 8005ea2:	6078      	str	r0, [r7, #4]
 8005ea4:	687b      	ldr	r3, [r7, #4]
 8005ea6:	4618      	mov	r0, r3
 8005ea8:	f001 f86d 	bl	8006f86 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 8005eac:	687b      	ldr	r3, [r7, #4]
 8005eae:	4618      	mov	r0, r3
 8005eb0:	3708      	adds	r7, #8
 8005eb2:	46bd      	mov	sp, r7
 8005eb4:	bd80      	pop	{r7, pc}

08005eb6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKiEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005eb6:	b5b0      	push	{r4, r5, r7, lr}
 8005eb8:	b084      	sub	sp, #16
 8005eba:	af00      	add	r7, sp, #0
 8005ebc:	7338      	strb	r0, [r7, #12]
 8005ebe:	60b9      	str	r1, [r7, #8]
 8005ec0:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005ec2:	68b8      	ldr	r0, [r7, #8]
 8005ec4:	f7fe fe8f 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005ec8:	4604      	mov	r4, r0
 8005eca:	6878      	ldr	r0, [r7, #4]
 8005ecc:	f7ff f83b 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8005ed0:	4603      	mov	r3, r0
 8005ed2:	4619      	mov	r1, r3
 8005ed4:	4620      	mov	r0, r4
 8005ed6:	f001 f863 	bl	8006fa0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESM_>
 8005eda:	462b      	mov	r3, r5
 8005edc:	4618      	mov	r0, r3
 8005ede:	3710      	adds	r7, #16
 8005ee0:	46bd      	mov	sp, r7
 8005ee2:	bdb0      	pop	{r4, r5, r7, pc}

08005ee4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKfEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005ee4:	b5b0      	push	{r4, r5, r7, lr}
 8005ee6:	b084      	sub	sp, #16
 8005ee8:	af00      	add	r7, sp, #0
 8005eea:	7338      	strb	r0, [r7, #12]
 8005eec:	60b9      	str	r1, [r7, #8]
 8005eee:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005ef0:	68b8      	ldr	r0, [r7, #8]
 8005ef2:	f7fe fe78 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005ef6:	4604      	mov	r4, r0
 8005ef8:	6878      	ldr	r0, [r7, #4]
 8005efa:	f7ff f84d 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8005efe:	4603      	mov	r3, r0
 8005f00:	4619      	mov	r1, r3
 8005f02:	4620      	mov	r0, r4
 8005f04:	f001 f864 	bl	8006fd0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESM_>
 8005f08:	462b      	mov	r3, r5
 8005f0a:	4618      	mov	r0, r3
 8005f0c:	3710      	adds	r7, #16
 8005f0e:	46bd      	mov	sp, r7
 8005f10:	bdb0      	pop	{r4, r5, r7, pc}

08005f12 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKbEESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005f12:	b5b0      	push	{r4, r5, r7, lr}
 8005f14:	b084      	sub	sp, #16
 8005f16:	af00      	add	r7, sp, #0
 8005f18:	7338      	strb	r0, [r7, #12]
 8005f1a:	60b9      	str	r1, [r7, #8]
 8005f1c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005f1e:	68b8      	ldr	r0, [r7, #8]
 8005f20:	f7fe fe61 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005f24:	4604      	mov	r4, r0
 8005f26:	6878      	ldr	r0, [r7, #4]
 8005f28:	f7ff f85f 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8005f2c:	4603      	mov	r3, r0
 8005f2e:	4619      	mov	r1, r3
 8005f30:	4620      	mov	r0, r4
 8005f32:	f001 f865 	bl	8007000 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESM_>
 8005f36:	462b      	mov	r3, r5
 8005f38:	4618      	mov	r0, r3
 8005f3a:	3710      	adds	r7, #16
 8005f3c:	46bd      	mov	sp, r7
 8005f3e:	bdb0      	pop	{r4, r5, r7, pc}

08005f40 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKS9_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005f40:	b5b0      	push	{r4, r5, r7, lr}
 8005f42:	b084      	sub	sp, #16
 8005f44:	af00      	add	r7, sp, #0
 8005f46:	7338      	strb	r0, [r7, #12]
 8005f48:	60b9      	str	r1, [r7, #8]
 8005f4a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005f4c:	68b8      	ldr	r0, [r7, #8]
 8005f4e:	f7fe fe4a 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005f52:	4604      	mov	r4, r0
 8005f54:	6878      	ldr	r0, [r7, #4]
 8005f56:	f7ff f87d 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8005f5a:	4603      	mov	r3, r0
 8005f5c:	4619      	mov	r1, r3
 8005f5e:	4620      	mov	r0, r4
 8005f60:	f001 f866 	bl	8007030 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESM_>
 8005f64:	462b      	mov	r3, r5
 8005f66:	4618      	mov	r0, r3
 8005f68:	3710      	adds	r7, #16
 8005f6a:	46bd      	mov	sp, r7
 8005f6c:	bdb0      	pop	{r4, r5, r7, pc}

08005f6e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Copy_ctor_baseILb0EJifbS9_SD_EEERKSF_EEvOT0_OT1_EUlOT_E_JRKSD_EESN_St14__invoke_otherSK_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005f6e:	b5b0      	push	{r4, r5, r7, lr}
 8005f70:	b084      	sub	sp, #16
 8005f72:	af00      	add	r7, sp, #0
 8005f74:	7338      	strb	r0, [r7, #12]
 8005f76:	60b9      	str	r1, [r7, #8]
 8005f78:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005f7a:	68b8      	ldr	r0, [r7, #8]
 8005f7c:	f7fe fe33 	bl	8004be6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Copy_ctor_baseILb0EJifbS8_SC_EEERKSE_EEvOT0_OT1_EUlOT_E_ESN_RNSt16remove_referenceISM_E4typeE>
 8005f80:	4604      	mov	r4, r0
 8005f82:	6878      	ldr	r0, [r7, #4]
 8005f84:	f7ff f89b 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8005f88:	4603      	mov	r3, r0
 8005f8a:	4619      	mov	r1, r3
 8005f8c:	4620      	mov	r0, r4
 8005f8e:	f001 f867 	bl	8007060 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKSB_EENS0_16__variant_cookieESM_>
 8005f92:	462b      	mov	r3, r5
 8005f94:	4618      	mov	r0, r3
 8005f96:	3710      	adds	r7, #16
 8005f98:	46bd      	mov	sp, r7
 8005f9a:	bdb0      	pop	{r4, r5, r7, pc}

08005f9c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005f9c:	b5b0      	push	{r4, r5, r7, lr}
 8005f9e:	b084      	sub	sp, #16
 8005fa0:	af00      	add	r7, sp, #0
 8005fa2:	60f8      	str	r0, [r7, #12]
 8005fa4:	60b9      	str	r1, [r7, #8]
 8005fa6:	713a      	strb	r2, [r7, #4]
 8005fa8:	68fb      	ldr	r3, [r7, #12]
 8005faa:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8005fac:	7e1b      	ldrb	r3, [r3, #24]
 8005fae:	461c      	mov	r4, r3
 8005fb0:	1d3b      	adds	r3, r7, #4
 8005fb2:	4618      	mov	r0, r3
 8005fb4:	f000 f828 	bl	8006008 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8005fb8:	4603      	mov	r3, r0
 8005fba:	429c      	cmp	r4, r3
 8005fbc:	bf0c      	ite	eq
 8005fbe:	2301      	moveq	r3, #1
 8005fc0:	2300      	movne	r3, #0
 8005fc2:	b2db      	uxtb	r3, r3
 8005fc4:	2b00      	cmp	r3, #0
 8005fc6:	d00c      	beq.n	8005fe2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8005fc8:	68b8      	ldr	r0, [r7, #8]
 8005fca:	f001 f86c 	bl	80070a6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8005fce:	4603      	mov	r3, r0
 8005fd0:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005fd2:	68fb      	ldr	r3, [r7, #12]
 8005fd4:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8005fd6:	4618      	mov	r0, r3
 8005fd8:	f000 f821 	bl	800601e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8005fdc:	4603      	mov	r3, r0
 8005fde:	601c      	str	r4, [r3, #0]
	    return {};
 8005fe0:	e00d      	b.n	8005ffe <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESF_SG_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8005fe2:	68fb      	ldr	r3, [r7, #12]
 8005fe4:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8005fe6:	4618      	mov	r0, r3
 8005fe8:	f7fc f803 	bl	8001ff2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8005fec:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8005fee:	68b8      	ldr	r0, [r7, #8]
 8005ff0:	f001 f859 	bl	80070a6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8005ff4:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8005ff6:	4619      	mov	r1, r3
 8005ff8:	4620      	mov	r0, r4
 8005ffa:	f001 f85f 	bl	80070bc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8005ffe:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006000:	4618      	mov	r0, r3
 8006002:	3710      	adds	r7, #16
 8006004:	46bd      	mov	sp, r7
 8006006:	bdb0      	pop	{r4, r5, r7, pc}

08006008 <_ZNKSt17integral_constantIjLj0EEcvjEv>:
    struct integral_constant
    {
      static constexpr _Tp                  value = __v;
      typedef _Tp                           value_type;
      typedef integral_constant<_Tp, __v>   type;
      constexpr operator value_type() const noexcept { return value; }
 8006008:	b480      	push	{r7}
 800600a:	b083      	sub	sp, #12
 800600c:	af00      	add	r7, sp, #0
 800600e:	6078      	str	r0, [r7, #4]
 8006010:	2300      	movs	r3, #0
 8006012:	4618      	mov	r0, r3
 8006014:	370c      	adds	r7, #12
 8006016:	46bd      	mov	sp, r7
 8006018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800601c:	4770      	bx	lr

0800601e <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800601e:	b590      	push	{r4, r7, lr}
 8006020:	b083      	sub	sp, #12
 8006022:	af00      	add	r7, sp, #0
 8006024:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006026:	6878      	ldr	r0, [r7, #4]
 8006028:	f001 f832 	bl	8007090 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800602c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800602e:	4619      	mov	r1, r3
 8006030:	4620      	mov	r0, r4
 8006032:	f7fb fd84 	bl	8001b3e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8006036:	4603      	mov	r3, r0
    }
 8006038:	4618      	mov	r0, r3
 800603a:	370c      	adds	r7, #12
 800603c:	46bd      	mov	sp, r7
 800603e:	bd90      	pop	{r4, r7, pc}

08006040 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006040:	b5b0      	push	{r4, r5, r7, lr}
 8006042:	b084      	sub	sp, #16
 8006044:	af00      	add	r7, sp, #0
 8006046:	60f8      	str	r0, [r7, #12]
 8006048:	60b9      	str	r1, [r7, #8]
 800604a:	713a      	strb	r2, [r7, #4]
 800604c:	68fb      	ldr	r3, [r7, #12]
 800604e:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8006050:	7e1b      	ldrb	r3, [r3, #24]
 8006052:	461c      	mov	r4, r3
 8006054:	1d3b      	adds	r3, r7, #4
 8006056:	4618      	mov	r0, r3
 8006058:	f000 f828 	bl	80060ac <_ZNKSt17integral_constantIjLj1EEcvjEv>
 800605c:	4603      	mov	r3, r0
 800605e:	429c      	cmp	r4, r3
 8006060:	bf0c      	ite	eq
 8006062:	2301      	moveq	r3, #1
 8006064:	2300      	movne	r3, #0
 8006066:	b2db      	uxtb	r3, r3
 8006068:	2b00      	cmp	r3, #0
 800606a:	d00c      	beq.n	8006086 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800606c:	68b8      	ldr	r0, [r7, #8]
 800606e:	f001 f83e 	bl	80070ee <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8006072:	4603      	mov	r3, r0
 8006074:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006076:	68fb      	ldr	r3, [r7, #12]
 8006078:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800607a:	4618      	mov	r0, r3
 800607c:	f000 f821 	bl	80060c2 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8006080:	4603      	mov	r3, r0
 8006082:	601c      	str	r4, [r3, #0]
	    return {};
 8006084:	e00d      	b.n	80060a2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESF_SG_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006086:	68fb      	ldr	r3, [r7, #12]
 8006088:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800608a:	4618      	mov	r0, r3
 800608c:	f7fb ffb1 	bl	8001ff2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8006090:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8006092:	68b8      	ldr	r0, [r7, #8]
 8006094:	f001 f82b 	bl	80070ee <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8006098:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800609a:	4619      	mov	r1, r3
 800609c:	4620      	mov	r0, r4
 800609e:	f001 f831 	bl	8007104 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 80060a2:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80060a4:	4618      	mov	r0, r3
 80060a6:	3710      	adds	r7, #16
 80060a8:	46bd      	mov	sp, r7
 80060aa:	bdb0      	pop	{r4, r5, r7, pc}

080060ac <_ZNKSt17integral_constantIjLj1EEcvjEv>:
 80060ac:	b480      	push	{r7}
 80060ae:	b083      	sub	sp, #12
 80060b0:	af00      	add	r7, sp, #0
 80060b2:	6078      	str	r0, [r7, #4]
 80060b4:	2301      	movs	r3, #1
 80060b6:	4618      	mov	r0, r3
 80060b8:	370c      	adds	r7, #12
 80060ba:	46bd      	mov	sp, r7
 80060bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060c0:	4770      	bx	lr

080060c2 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80060c2:	b590      	push	{r4, r7, lr}
 80060c4:	b083      	sub	sp, #12
 80060c6:	af00      	add	r7, sp, #0
 80060c8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80060ca:	6878      	ldr	r0, [r7, #4]
 80060cc:	f000 ffe0 	bl	8007090 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80060d0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80060d2:	4619      	mov	r1, r3
 80060d4:	4620      	mov	r0, r4
 80060d6:	f7fc f800 	bl	80020da <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80060da:	4603      	mov	r3, r0
    }
 80060dc:	4618      	mov	r0, r3
 80060de:	370c      	adds	r7, #12
 80060e0:	46bd      	mov	sp, r7
 80060e2:	bd90      	pop	{r4, r7, pc}

080060e4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80060e4:	b5b0      	push	{r4, r5, r7, lr}
 80060e6:	b084      	sub	sp, #16
 80060e8:	af00      	add	r7, sp, #0
 80060ea:	60f8      	str	r0, [r7, #12]
 80060ec:	60b9      	str	r1, [r7, #8]
 80060ee:	713a      	strb	r2, [r7, #4]
 80060f0:	68fb      	ldr	r3, [r7, #12]
 80060f2:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80060f4:	7e1b      	ldrb	r3, [r3, #24]
 80060f6:	461c      	mov	r4, r3
 80060f8:	1d3b      	adds	r3, r7, #4
 80060fa:	4618      	mov	r0, r3
 80060fc:	f000 f829 	bl	8006152 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8006100:	4603      	mov	r3, r0
 8006102:	429c      	cmp	r4, r3
 8006104:	bf0c      	ite	eq
 8006106:	2301      	moveq	r3, #1
 8006108:	2300      	movne	r3, #0
 800610a:	b2db      	uxtb	r3, r3
 800610c:	2b00      	cmp	r3, #0
 800610e:	d00d      	beq.n	800612c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8006110:	68b8      	ldr	r0, [r7, #8]
 8006112:	f001 f810 	bl	8007136 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8006116:	4603      	mov	r3, r0
 8006118:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800611a:	68fb      	ldr	r3, [r7, #12]
 800611c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800611e:	4618      	mov	r0, r3
 8006120:	f000 f822 	bl	8006168 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8006124:	4603      	mov	r3, r0
 8006126:	4622      	mov	r2, r4
 8006128:	701a      	strb	r2, [r3, #0]
	    return {};
 800612a:	e00d      	b.n	8006148 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESF_SG_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800612c:	68fb      	ldr	r3, [r7, #12]
 800612e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8006130:	4618      	mov	r0, r3
 8006132:	f7fb ff5e 	bl	8001ff2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 8006136:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8006138:	68b8      	ldr	r0, [r7, #8]
 800613a:	f000 fffc 	bl	8007136 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800613e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8006140:	4619      	mov	r1, r3
 8006142:	4620      	mov	r0, r4
 8006144:	f001 f802 	bl	800714c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8006148:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800614a:	4618      	mov	r0, r3
 800614c:	3710      	adds	r7, #16
 800614e:	46bd      	mov	sp, r7
 8006150:	bdb0      	pop	{r4, r5, r7, pc}

08006152 <_ZNKSt17integral_constantIjLj2EEcvjEv>:
 8006152:	b480      	push	{r7}
 8006154:	b083      	sub	sp, #12
 8006156:	af00      	add	r7, sp, #0
 8006158:	6078      	str	r0, [r7, #4]
 800615a:	2302      	movs	r3, #2
 800615c:	4618      	mov	r0, r3
 800615e:	370c      	adds	r7, #12
 8006160:	46bd      	mov	sp, r7
 8006162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006166:	4770      	bx	lr

08006168 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006168:	b590      	push	{r4, r7, lr}
 800616a:	b083      	sub	sp, #12
 800616c:	af00      	add	r7, sp, #0
 800616e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006170:	6878      	ldr	r0, [r7, #4]
 8006172:	f000 ff8d 	bl	8007090 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006176:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006178:	4619      	mov	r1, r3
 800617a:	4620      	mov	r0, r4
 800617c:	f7fc f84b 	bl	8002216 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8006180:	4603      	mov	r3, r0
    }
 8006182:	4618      	mov	r0, r3
 8006184:	370c      	adds	r7, #12
 8006186:	46bd      	mov	sp, r7
 8006188:	bd90      	pop	{r4, r7, pc}

0800618a <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
 800618a:	b480      	push	{r7}
 800618c:	b083      	sub	sp, #12
 800618e:	af00      	add	r7, sp, #0
 8006190:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	4618      	mov	r0, r3
 8006196:	370c      	adds	r7, #12
 8006198:	46bd      	mov	sp, r7
 800619a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800619e:	4770      	bx	lr

080061a0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80061a0:	b5b0      	push	{r4, r5, r7, lr}
 80061a2:	b084      	sub	sp, #16
 80061a4:	af00      	add	r7, sp, #0
 80061a6:	60f8      	str	r0, [r7, #12]
 80061a8:	60b9      	str	r1, [r7, #8]
 80061aa:	713a      	strb	r2, [r7, #4]
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80061b0:	7e1b      	ldrb	r3, [r3, #24]
 80061b2:	461c      	mov	r4, r3
 80061b4:	1d3b      	adds	r3, r7, #4
 80061b6:	4618      	mov	r0, r3
 80061b8:	f000 f82a 	bl	8006210 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 80061bc:	4603      	mov	r3, r0
 80061be:	429c      	cmp	r4, r3
 80061c0:	bf0c      	ite	eq
 80061c2:	2301      	moveq	r3, #1
 80061c4:	2300      	movne	r3, #0
 80061c6:	b2db      	uxtb	r3, r3
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	d00e      	beq.n	80061ea <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80061cc:	68b8      	ldr	r0, [r7, #8]
 80061ce:	f000 ffd6 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 80061d2:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 80061d8:	4618      	mov	r0, r3
 80061da:	f000 f824 	bl	8006226 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80061de:	4603      	mov	r3, r0
 80061e0:	4621      	mov	r1, r4
 80061e2:	4618      	mov	r0, r3
 80061e4:	f01d fb09 	bl	80237fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 80061e8:	e00d      	b.n	8006206 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESF_SG_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80061ea:	68fb      	ldr	r3, [r7, #12]
 80061ec:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 80061ee:	4618      	mov	r0, r3
 80061f0:	f7fb feff 	bl	8001ff2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 80061f4:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 80061f6:	68b8      	ldr	r0, [r7, #8]
 80061f8:	f000 ffc1 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 80061fc:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 80061fe:	4619      	mov	r1, r3
 8006200:	4620      	mov	r0, r4
 8006202:	f000 ffc7 	bl	8007194 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 8006206:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006208:	4618      	mov	r0, r3
 800620a:	3710      	adds	r7, #16
 800620c:	46bd      	mov	sp, r7
 800620e:	bdb0      	pop	{r4, r5, r7, pc}

08006210 <_ZNKSt17integral_constantIjLj3EEcvjEv>:
 8006210:	b480      	push	{r7}
 8006212:	b083      	sub	sp, #12
 8006214:	af00      	add	r7, sp, #0
 8006216:	6078      	str	r0, [r7, #4]
 8006218:	2303      	movs	r3, #3
 800621a:	4618      	mov	r0, r3
 800621c:	370c      	adds	r7, #12
 800621e:	46bd      	mov	sp, r7
 8006220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006224:	4770      	bx	lr

08006226 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006226:	b590      	push	{r4, r7, lr}
 8006228:	b083      	sub	sp, #12
 800622a:	af00      	add	r7, sp, #0
 800622c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800622e:	6878      	ldr	r0, [r7, #4]
 8006230:	f000 ff2e 	bl	8007090 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006234:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006236:	4619      	mov	r1, r3
 8006238:	4620      	mov	r0, r4
 800623a:	f7fc f89c 	bl	8002376 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800623e:	4603      	mov	r3, r0
    }
 8006240:	4618      	mov	r0, r3
 8006242:	370c      	adds	r7, #12
 8006244:	46bd      	mov	sp, r7
 8006246:	bd90      	pop	{r4, r7, pc}

08006248 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() noexcept
 8006248:	b480      	push	{r7}
 800624a:	b083      	sub	sp, #12
 800624c:	af00      	add	r7, sp, #0
 800624e:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8006250:	687b      	ldr	r3, [r7, #4]
 8006252:	4618      	mov	r0, r3
 8006254:	370c      	adds	r7, #12
 8006256:	46bd      	mov	sp, r7
 8006258:	f85d 7b04 	ldr.w	r7, [sp], #4
 800625c:	4770      	bx	lr

0800625e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800625e:	b5b0      	push	{r4, r5, r7, lr}
 8006260:	b084      	sub	sp, #16
 8006262:	af00      	add	r7, sp, #0
 8006264:	60f8      	str	r0, [r7, #12]
 8006266:	60b9      	str	r1, [r7, #8]
 8006268:	713a      	strb	r2, [r7, #4]
 800626a:	68fb      	ldr	r3, [r7, #12]
 800626c:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800626e:	7e1b      	ldrb	r3, [r3, #24]
 8006270:	461c      	mov	r4, r3
 8006272:	1d3b      	adds	r3, r7, #4
 8006274:	4618      	mov	r0, r3
 8006276:	f000 f82a 	bl	80062ce <_ZNKSt17integral_constantIjLj4EEcvjEv>
 800627a:	4603      	mov	r3, r0
 800627c:	429c      	cmp	r4, r3
 800627e:	bf0c      	ite	eq
 8006280:	2301      	moveq	r3, #1
 8006282:	2300      	movne	r3, #0
 8006284:	b2db      	uxtb	r3, r3
 8006286:	2b00      	cmp	r3, #0
 8006288:	d00e      	beq.n	80062a8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800628a:	68b8      	ldr	r0, [r7, #8]
 800628c:	f000 ff9b 	bl	80071c6 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 8006290:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006292:	68fb      	ldr	r3, [r7, #12]
 8006294:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8006296:	4618      	mov	r0, r3
 8006298:	f000 f824 	bl	80062e4 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 800629c:	4603      	mov	r3, r0
 800629e:	4621      	mov	r1, r4
 80062a0:	4618      	mov	r0, r3
 80062a2:	f000 ff9b 	bl	80071dc <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>
	    return {};
 80062a6:	e00d      	b.n	80062c4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSEOSC_ENUlOT_T0_E_clIRSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESF_SG_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80062a8:	68fb      	ldr	r3, [r7, #12]
 80062aa:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 80062ac:	4618      	mov	r0, r3
 80062ae:	f7fb fea0 	bl	8001ff2 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Move_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 80062b2:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 80062b4:	68b8      	ldr	r0, [r7, #8]
 80062b6:	f000 ff86 	bl	80071c6 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 80062ba:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 80062bc:	4619      	mov	r1, r3
 80062be:	4620      	mov	r0, r4
 80062c0:	f000 ffa1 	bl	8007206 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	    return {};
 80062c4:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80062c6:	4618      	mov	r0, r3
 80062c8:	3710      	adds	r7, #16
 80062ca:	46bd      	mov	sp, r7
 80062cc:	bdb0      	pop	{r4, r5, r7, pc}

080062ce <_ZNKSt17integral_constantIjLj4EEcvjEv>:
 80062ce:	b480      	push	{r7}
 80062d0:	b083      	sub	sp, #12
 80062d2:	af00      	add	r7, sp, #0
 80062d4:	6078      	str	r0, [r7, #4]
 80062d6:	2304      	movs	r3, #4
 80062d8:	4618      	mov	r0, r3
 80062da:	370c      	adds	r7, #12
 80062dc:	46bd      	mov	sp, r7
 80062de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062e2:	4770      	bx	lr

080062e4 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80062e4:	b590      	push	{r4, r7, lr}
 80062e6:	b083      	sub	sp, #12
 80062e8:	af00      	add	r7, sp, #0
 80062ea:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80062ec:	6878      	ldr	r0, [r7, #4]
 80062ee:	f000 fecf 	bl	8007090 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80062f2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80062f4:	4619      	mov	r1, r3
 80062f6:	4620      	mov	r0, r4
 80062f8:	f7fc f8ff 	bl	80024fa <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80062fc:	4603      	mov	r3, r0
    }
 80062fe:	4618      	mov	r0, r3
 8006300:	370c      	adds	r7, #12
 8006302:	46bd      	mov	sp, r7
 8006304:	bd90      	pop	{r4, r7, pc}

08006306 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006306:	b5b0      	push	{r4, r5, r7, lr}
 8006308:	b084      	sub	sp, #16
 800630a:	af00      	add	r7, sp, #0
 800630c:	60f8      	str	r0, [r7, #12]
 800630e:	60b9      	str	r1, [r7, #8]
 8006310:	713a      	strb	r2, [r7, #4]
 8006312:	68fb      	ldr	r3, [r7, #12]
 8006314:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8006316:	7e1b      	ldrb	r3, [r3, #24]
 8006318:	461c      	mov	r4, r3
 800631a:	1d3b      	adds	r3, r7, #4
 800631c:	4618      	mov	r0, r3
 800631e:	f7ff fe73 	bl	8006008 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8006322:	4603      	mov	r3, r0
 8006324:	429c      	cmp	r4, r3
 8006326:	bf0c      	ite	eq
 8006328:	2301      	moveq	r3, #1
 800632a:	2300      	movne	r3, #0
 800632c:	b2db      	uxtb	r3, r3
 800632e:	2b00      	cmp	r3, #0
 8006330:	d009      	beq.n	8006346 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8006332:	68bb      	ldr	r3, [r7, #8]
 8006334:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006336:	68fb      	ldr	r3, [r7, #12]
 8006338:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800633a:	4618      	mov	r0, r3
 800633c:	f000 f816 	bl	800636c <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8006340:	4603      	mov	r3, r0
 8006342:	601c      	str	r4, [r3, #0]
	    return {};
 8006344:	e00d      	b.n	8006362 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKiSt17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESG_SH_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006346:	68fb      	ldr	r3, [r7, #12]
 8006348:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 800634a:	461c      	mov	r4, r3
 800634c:	1d3b      	adds	r3, r7, #4
 800634e:	4618      	mov	r0, r3
 8006350:	f7ff fe5a 	bl	8006008 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8006354:	4603      	mov	r3, r0
 8006356:	b29b      	uxth	r3, r3
 8006358:	68ba      	ldr	r2, [r7, #8]
 800635a:	4619      	mov	r1, r3
 800635c:	4620      	mov	r0, r4
 800635e:	f000 ff76 	bl	800724e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIiEEvtRKT_>
	    return {};
 8006362:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006364:	4618      	mov	r0, r3
 8006366:	3710      	adds	r7, #16
 8006368:	46bd      	mov	sp, r7
 800636a:	bdb0      	pop	{r4, r5, r7, pc}

0800636c <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800636c:	b590      	push	{r4, r7, lr}
 800636e:	b083      	sub	sp, #12
 8006370:	af00      	add	r7, sp, #0
 8006372:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006374:	6878      	ldr	r0, [r7, #4]
 8006376:	f000 ff5f 	bl	8007238 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800637a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800637c:	4619      	mov	r1, r3
 800637e:	4620      	mov	r0, r4
 8006380:	f7fb fbdd 	bl	8001b3e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8006384:	4603      	mov	r3, r0
    }
 8006386:	4618      	mov	r0, r3
 8006388:	370c      	adds	r7, #12
 800638a:	46bd      	mov	sp, r7
 800638c:	bd90      	pop	{r4, r7, pc}

0800638e <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800638e:	b5b0      	push	{r4, r5, r7, lr}
 8006390:	b084      	sub	sp, #16
 8006392:	af00      	add	r7, sp, #0
 8006394:	60f8      	str	r0, [r7, #12]
 8006396:	60b9      	str	r1, [r7, #8]
 8006398:	713a      	strb	r2, [r7, #4]
 800639a:	68fb      	ldr	r3, [r7, #12]
 800639c:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800639e:	7e1b      	ldrb	r3, [r3, #24]
 80063a0:	461c      	mov	r4, r3
 80063a2:	1d3b      	adds	r3, r7, #4
 80063a4:	4618      	mov	r0, r3
 80063a6:	f7ff fe81 	bl	80060ac <_ZNKSt17integral_constantIjLj1EEcvjEv>
 80063aa:	4603      	mov	r3, r0
 80063ac:	429c      	cmp	r4, r3
 80063ae:	bf0c      	ite	eq
 80063b0:	2301      	moveq	r3, #1
 80063b2:	2300      	movne	r3, #0
 80063b4:	b2db      	uxtb	r3, r3
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d009      	beq.n	80063ce <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_+0x40>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 80063ba:	68bb      	ldr	r3, [r7, #8]
 80063bc:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80063be:	68fb      	ldr	r3, [r7, #12]
 80063c0:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 80063c2:	4618      	mov	r0, r3
 80063c4:	f000 f816 	bl	80063f4 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80063c8:	4603      	mov	r3, r0
 80063ca:	601c      	str	r4, [r3, #0]
	    return {};
 80063cc:	e00d      	b.n	80063ea <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKfSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESG_SH_+0x5c>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80063ce:	68fb      	ldr	r3, [r7, #12]
 80063d0:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 80063d2:	461c      	mov	r4, r3
 80063d4:	1d3b      	adds	r3, r7, #4
 80063d6:	4618      	mov	r0, r3
 80063d8:	f7ff fe68 	bl	80060ac <_ZNKSt17integral_constantIjLj1EEcvjEv>
 80063dc:	4603      	mov	r3, r0
 80063de:	b29b      	uxth	r3, r3
 80063e0:	68ba      	ldr	r2, [r7, #8]
 80063e2:	4619      	mov	r1, r3
 80063e4:	4620      	mov	r0, r4
 80063e6:	f000 ff49 	bl	800727c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIfEEvtRKT_>
	    return {};
 80063ea:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80063ec:	4618      	mov	r0, r3
 80063ee:	3710      	adds	r7, #16
 80063f0:	46bd      	mov	sp, r7
 80063f2:	bdb0      	pop	{r4, r5, r7, pc}

080063f4 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80063f4:	b590      	push	{r4, r7, lr}
 80063f6:	b083      	sub	sp, #12
 80063f8:	af00      	add	r7, sp, #0
 80063fa:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80063fc:	6878      	ldr	r0, [r7, #4]
 80063fe:	f000 ff1b 	bl	8007238 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006402:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006404:	4619      	mov	r1, r3
 8006406:	4620      	mov	r0, r4
 8006408:	f7fb fe67 	bl	80020da <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800640c:	4603      	mov	r3, r0
    }
 800640e:	4618      	mov	r0, r3
 8006410:	370c      	adds	r7, #12
 8006412:	46bd      	mov	sp, r7
 8006414:	bd90      	pop	{r4, r7, pc}

08006416 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006416:	b5b0      	push	{r4, r5, r7, lr}
 8006418:	b084      	sub	sp, #16
 800641a:	af00      	add	r7, sp, #0
 800641c:	60f8      	str	r0, [r7, #12]
 800641e:	60b9      	str	r1, [r7, #8]
 8006420:	713a      	strb	r2, [r7, #4]
 8006422:	68fb      	ldr	r3, [r7, #12]
 8006424:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8006426:	7e1b      	ldrb	r3, [r3, #24]
 8006428:	461c      	mov	r4, r3
 800642a:	1d3b      	adds	r3, r7, #4
 800642c:	4618      	mov	r0, r3
 800642e:	f7ff fe90 	bl	8006152 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8006432:	4603      	mov	r3, r0
 8006434:	429c      	cmp	r4, r3
 8006436:	bf0c      	ite	eq
 8006438:	2301      	moveq	r3, #1
 800643a:	2300      	movne	r3, #0
 800643c:	b2db      	uxtb	r3, r3
 800643e:	2b00      	cmp	r3, #0
 8006440:	d00a      	beq.n	8006458 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 8006442:	68bb      	ldr	r3, [r7, #8]
 8006444:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006446:	68fb      	ldr	r3, [r7, #12]
 8006448:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 800644a:	4618      	mov	r0, r3
 800644c:	f000 f817 	bl	800647e <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 8006450:	4603      	mov	r3, r0
 8006452:	4622      	mov	r2, r4
 8006454:	701a      	strb	r2, [r3, #0]
	    return {};
 8006456:	e00d      	b.n	8006474 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKbSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESG_SH_+0x5e>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006458:	68fb      	ldr	r3, [r7, #12]
 800645a:	681b      	ldr	r3, [r3, #0]
		      this->_M_destructive_copy(__rhs_index, __rhs_mem);
 800645c:	461c      	mov	r4, r3
 800645e:	1d3b      	adds	r3, r7, #4
 8006460:	4618      	mov	r0, r3
 8006462:	f7ff fe76 	bl	8006152 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8006466:	4603      	mov	r3, r0
 8006468:	b29b      	uxth	r3, r3
 800646a:	68ba      	ldr	r2, [r7, #8]
 800646c:	4619      	mov	r1, r3
 800646e:	4620      	mov	r0, r4
 8006470:	f000 ff1b 	bl	80072aa <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIbEEvtRKT_>
	    return {};
 8006474:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006476:	4618      	mov	r0, r3
 8006478:	3710      	adds	r7, #16
 800647a:	46bd      	mov	sp, r7
 800647c:	bdb0      	pop	{r4, r5, r7, pc}

0800647e <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800647e:	b590      	push	{r4, r7, lr}
 8006480:	b083      	sub	sp, #12
 8006482:	af00      	add	r7, sp, #0
 8006484:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006486:	6878      	ldr	r0, [r7, #4]
 8006488:	f000 fed6 	bl	8007238 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800648c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800648e:	4619      	mov	r1, r3
 8006490:	4620      	mov	r0, r4
 8006492:	f7fb fec0 	bl	8002216 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8006496:	4603      	mov	r3, r0
    }
 8006498:	4618      	mov	r0, r3
 800649a:	370c      	adds	r7, #12
 800649c:	46bd      	mov	sp, r7
 800649e:	bd90      	pop	{r4, r7, pc}

080064a0 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
 80064a0:	b480      	push	{r7}
 80064a2:	b083      	sub	sp, #12
 80064a4:	af00      	add	r7, sp, #0
 80064a6:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 80064a8:	687b      	ldr	r3, [r7, #4]
 80064aa:	4618      	mov	r0, r3
 80064ac:	370c      	adds	r7, #12
 80064ae:	46bd      	mov	sp, r7
 80064b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064b4:	4770      	bx	lr

080064b6 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80064b6:	b5b0      	push	{r4, r5, r7, lr}
 80064b8:	b08c      	sub	sp, #48	; 0x30
 80064ba:	af00      	add	r7, sp, #0
 80064bc:	60f8      	str	r0, [r7, #12]
 80064be:	60b9      	str	r1, [r7, #8]
 80064c0:	713a      	strb	r2, [r7, #4]
 80064c2:	68fb      	ldr	r3, [r7, #12]
 80064c4:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 80064c6:	7e1b      	ldrb	r3, [r3, #24]
 80064c8:	461c      	mov	r4, r3
 80064ca:	1d3b      	adds	r3, r7, #4
 80064cc:	4618      	mov	r0, r3
 80064ce:	f7ff fe9f 	bl	8006210 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 80064d2:	4603      	mov	r3, r0
 80064d4:	429c      	cmp	r4, r3
 80064d6:	bf0c      	ite	eq
 80064d8:	2301      	moveq	r3, #1
 80064da:	2300      	movne	r3, #0
 80064dc:	b2db      	uxtb	r3, r3
 80064de:	2b00      	cmp	r3, #0
 80064e0:	d00a      	beq.n	80064f8 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80064e2:	68fb      	ldr	r3, [r7, #12]
 80064e4:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 80064e6:	4618      	mov	r0, r3
 80064e8:	f000 f822 	bl	8006530 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80064ec:	4603      	mov	r3, r0
 80064ee:	68b9      	ldr	r1, [r7, #8]
 80064f0:	4618      	mov	r0, r3
 80064f2:	f01d f97c 	bl	80237ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	    return {};
 80064f6:	e016      	b.n	8006526 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKS7_St17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESG_SH_+0x70>
			= variant<_Types...>(__rhs_mem);
 80064f8:	f107 0314 	add.w	r3, r7, #20
 80064fc:	68b9      	ldr	r1, [r7, #8]
 80064fe:	4618      	mov	r0, r3
 8006500:	f000 ff03 	bl	800730a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS5_vvS5_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006504:	68fb      	ldr	r3, [r7, #12]
 8006506:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 8006508:	4618      	mov	r0, r3
 800650a:	f000 f822 	bl	8006552 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800650e:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 8006510:	f107 0314 	add.w	r3, r7, #20
 8006514:	4619      	mov	r1, r3
 8006516:	4610      	mov	r0, r2
 8006518:	f7fa ffc4 	bl	80014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 800651c:	f107 0314 	add.w	r3, r7, #20
 8006520:	4618      	mov	r0, r3
 8006522:	f7fa ff2e 	bl	8001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	    return {};
 8006526:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8006528:	4618      	mov	r0, r3
 800652a:	3730      	adds	r7, #48	; 0x30
 800652c:	46bd      	mov	sp, r7
 800652e:	bdb0      	pop	{r4, r5, r7, pc}

08006530 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006530:	b590      	push	{r4, r7, lr}
 8006532:	b083      	sub	sp, #12
 8006534:	af00      	add	r7, sp, #0
 8006536:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006538:	6878      	ldr	r0, [r7, #4]
 800653a:	f000 fe7d 	bl	8007238 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800653e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006540:	4619      	mov	r1, r3
 8006542:	4620      	mov	r0, r4
 8006544:	f7fb ff17 	bl	8002376 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8006548:	4603      	mov	r3, r0
    }
 800654a:	4618      	mov	r0, r3
 800654c:	370c      	adds	r7, #12
 800654e:	46bd      	mov	sp, r7
 8006550:	bd90      	pop	{r4, r7, pc}

08006552 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8006552:	b480      	push	{r7}
 8006554:	b083      	sub	sp, #12
 8006556:	af00      	add	r7, sp, #0
 8006558:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 800655a:	687b      	ldr	r3, [r7, #4]
    }
 800655c:	4618      	mov	r0, r3
 800655e:	370c      	adds	r7, #12
 8006560:	46bd      	mov	sp, r7
 8006562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006566:	4770      	bx	lr

08006568 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE7_M_addrEv>:
      _M_addr() const noexcept
 8006568:	b480      	push	{r7}
 800656a:	b083      	sub	sp, #12
 800656c:	af00      	add	r7, sp, #0
 800656e:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8006570:	687b      	ldr	r3, [r7, #4]
 8006572:	4618      	mov	r0, r3
 8006574:	370c      	adds	r7, #12
 8006576:	46bd      	mov	sp, r7
 8006578:	f85d 7b04 	ldr.w	r7, [sp], #4
 800657c:	4770      	bx	lr

0800657e <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800657e:	b5b0      	push	{r4, r5, r7, lr}
 8006580:	b08c      	sub	sp, #48	; 0x30
 8006582:	af00      	add	r7, sp, #0
 8006584:	60f8      	str	r0, [r7, #12]
 8006586:	60b9      	str	r1, [r7, #8]
 8006588:	713a      	strb	r2, [r7, #4]
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800658e:	7e1b      	ldrb	r3, [r3, #24]
 8006590:	461c      	mov	r4, r3
 8006592:	1d3b      	adds	r3, r7, #4
 8006594:	4618      	mov	r0, r3
 8006596:	f7ff fe9a 	bl	80062ce <_ZNKSt17integral_constantIjLj4EEcvjEv>
 800659a:	4603      	mov	r3, r0
 800659c:	429c      	cmp	r4, r3
 800659e:	bf0c      	ite	eq
 80065a0:	2301      	moveq	r3, #1
 80065a2:	2300      	movne	r3, #0
 80065a4:	b2db      	uxtb	r3, r3
 80065a6:	2b00      	cmp	r3, #0
 80065a8:	d00a      	beq.n	80065c0 <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_+0x42>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80065aa:	68fb      	ldr	r3, [r7, #12]
 80065ac:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = __rhs_mem;
 80065ae:	4618      	mov	r0, r3
 80065b0:	f000 f822 	bl	80065f8 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>
 80065b4:	4603      	mov	r3, r0
 80065b6:	68b9      	ldr	r1, [r7, #8]
 80065b8:	4618      	mov	r0, r3
 80065ba:	f000 fec1 	bl	8007340 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>
	    return {};
 80065be:	e016      	b.n	80065ee <_ZZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEaSERKSC_ENUlOT_T0_E_clIRKSB_St17integral_constantIjLj4EEEENS0_20__variant_idx_cookieESG_SH_+0x70>
			= variant<_Types...>(__rhs_mem);
 80065c0:	f107 0314 	add.w	r3, r7, #20
 80065c4:	68b9      	ldr	r1, [r7, #8]
 80065c6:	4618      	mov	r0, r3
 80065c8:	f000 ffc8 	bl	800755c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS9_vvS9_vEEOT_>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80065cc:	68fb      	ldr	r3, [r7, #12]
 80065ce:	681b      	ldr	r3, [r3, #0]
		      __variant_cast<_Types...>(*this)
 80065d0:	4618      	mov	r0, r3
 80065d2:	f7ff ffbe 	bl	8006552 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEERNSt8__detail9__variant17_Copy_assign_baseILb0EJifbS5_S9_EEEEDcOT0_>
 80065d6:	4602      	mov	r2, r0
			= variant<_Types...>(__rhs_mem);
 80065d8:	f107 0314 	add.w	r3, r7, #20
 80065dc:	4619      	mov	r1, r3
 80065de:	4610      	mov	r0, r2
 80065e0:	f7fa ff60 	bl	80014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 80065e4:	f107 0314 	add.w	r3, r7, #20
 80065e8:	4618      	mov	r0, r3
 80065ea:	f7fa feca 	bl	8001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	    return {};
 80065ee:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 80065f0:	4618      	mov	r0, r3
 80065f2:	3730      	adds	r7, #48	; 0x30
 80065f4:	46bd      	mov	sp, r7
 80065f6:	bdb0      	pop	{r4, r5, r7, pc}

080065f8 <_ZNSt8__detail9__variant5__getILj4ERNS0_17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80065f8:	b590      	push	{r4, r7, lr}
 80065fa:	b083      	sub	sp, #12
 80065fc:	af00      	add	r7, sp, #0
 80065fe:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006600:	6878      	ldr	r0, [r7, #4]
 8006602:	f000 fe19 	bl	8007238 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006606:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006608:	4619      	mov	r1, r3
 800660a:	4620      	mov	r0, r4
 800660c:	f7fb ff75 	bl	80024fa <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8006610:	4603      	mov	r3, r0
    }
 8006612:	4618      	mov	r0, r3
 8006614:	370c      	adds	r7, #12
 8006616:	46bd      	mov	sp, r7
 8006618:	bd90      	pop	{r4, r7, pc}

0800661a <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>:


  // For use in string and vstring.
  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
 800661a:	b480      	push	{r7}
 800661c:	b083      	sub	sp, #12
 800661e:	af00      	add	r7, sp, #0
 8006620:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 8006622:	687b      	ldr	r3, [r7, #4]
 8006624:	2b00      	cmp	r3, #0
 8006626:	bf0c      	ite	eq
 8006628:	2301      	moveq	r3, #1
 800662a:	2300      	movne	r3, #0
 800662c:	b2db      	uxtb	r3, r3
 800662e:	4618      	mov	r0, r3
 8006630:	370c      	adds	r7, #12
 8006632:	46bd      	mov	sp, r7
 8006634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006638:	4770      	bx	lr

0800663a <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
 800663a:	b480      	push	{r7}
 800663c:	b083      	sub	sp, #12
 800663e:	af00      	add	r7, sp, #0
 8006640:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8006642:	4618      	mov	r0, r3
 8006644:	370c      	adds	r7, #12
 8006646:	46bd      	mov	sp, r7
 8006648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800664c:	4770      	bx	lr

0800664e <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 800664e:	b480      	push	{r7}
 8006650:	b085      	sub	sp, #20
 8006652:	af00      	add	r7, sp, #0
 8006654:	60f8      	str	r0, [r7, #12]
 8006656:	60b9      	str	r1, [r7, #8]
 8006658:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 800665a:	68ba      	ldr	r2, [r7, #8]
 800665c:	68fb      	ldr	r3, [r7, #12]
 800665e:	1ad3      	subs	r3, r2, r3
    }
 8006660:	4618      	mov	r0, r3
 8006662:	3714      	adds	r7, #20
 8006664:	46bd      	mov	sp, r7
 8006666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800666a:	4770      	bx	lr

0800666c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 800666c:	b480      	push	{r7}
 800666e:	b083      	sub	sp, #12
 8006670:	af00      	add	r7, sp, #0
 8006672:	6078      	str	r0, [r7, #4]
 8006674:	6039      	str	r1, [r7, #0]
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	4618      	mov	r0, r3
 800667a:	370c      	adds	r7, #12
 800667c:	46bd      	mov	sp, r7
 800667e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006682:	4770      	bx	lr

08006684 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8006684:	b590      	push	{r4, r7, lr}
 8006686:	b083      	sub	sp, #12
 8006688:	af00      	add	r7, sp, #0
 800668a:	6078      	str	r0, [r7, #4]
 800668c:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 800668e:	6878      	ldr	r0, [r7, #4]
 8006690:	f000 ff77 	bl	8007582 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8006694:	4604      	mov	r4, r0
 8006696:	6838      	ldr	r0, [r7, #0]
 8006698:	f000 ff7e 	bl	8007598 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800669c:	4603      	mov	r3, r0
 800669e:	4619      	mov	r1, r3
 80066a0:	4620      	mov	r0, r4
 80066a2:	f000 ff87 	bl	80075b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>
      }
 80066a6:	bf00      	nop
 80066a8:	370c      	adds	r7, #12
 80066aa:	46bd      	mov	sp, r7
 80066ac:	bd90      	pop	{r4, r7, pc}

080066ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80066ae:	b580      	push	{r7, lr}
 80066b0:	b082      	sub	sp, #8
 80066b2:	af00      	add	r7, sp, #0
 80066b4:	6078      	str	r0, [r7, #4]
 80066b6:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 80066b8:	6878      	ldr	r0, [r7, #4]
 80066ba:	f000 ff62 	bl	8007582 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80066be:	4603      	mov	r3, r0
 80066c0:	2201      	movs	r2, #1
 80066c2:	6839      	ldr	r1, [r7, #0]
 80066c4:	4618      	mov	r0, r3
 80066c6:	f000 ff82 	bl	80075ce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>
 80066ca:	bf00      	nop
 80066cc:	3708      	adds	r7, #8
 80066ce:	46bd      	mov	sp, r7
 80066d0:	bd80      	pop	{r7, pc}

080066d2 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 80066d2:	b580      	push	{r7, lr}
 80066d4:	b084      	sub	sp, #16
 80066d6:	af00      	add	r7, sp, #0
 80066d8:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	681a      	ldr	r2, [r3, #0]
 80066de:	f107 030c 	add.w	r3, r7, #12
 80066e2:	4611      	mov	r1, r2
 80066e4:	4618      	mov	r0, r3
 80066e6:	f7fe fdd3 	bl	8005290 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 80066ea:	68fb      	ldr	r3, [r7, #12]
 80066ec:	4618      	mov	r0, r3
 80066ee:	3710      	adds	r7, #16
 80066f0:	46bd      	mov	sp, r7
 80066f2:	bd80      	pop	{r7, pc}

080066f4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 80066f4:	b480      	push	{r7}
 80066f6:	b083      	sub	sp, #12
 80066f8:	af00      	add	r7, sp, #0
 80066fa:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 80066fc:	687b      	ldr	r3, [r7, #4]
 80066fe:	3304      	adds	r3, #4
 8006700:	4618      	mov	r0, r3
 8006702:	370c      	adds	r7, #12
 8006704:	46bd      	mov	sp, r7
 8006706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800670a:	4770      	bx	lr

0800670c <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800670c:	b480      	push	{r7}
 800670e:	b083      	sub	sp, #12
 8006710:	af00      	add	r7, sp, #0
 8006712:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	695b      	ldr	r3, [r3, #20]
 8006718:	4618      	mov	r0, r3
 800671a:	370c      	adds	r7, #12
 800671c:	46bd      	mov	sp, r7
 800671e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006722:	4770      	bx	lr

08006724 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8006724:	b480      	push	{r7}
 8006726:	b083      	sub	sp, #12
 8006728:	af00      	add	r7, sp, #0
 800672a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	3310      	adds	r3, #16
 8006730:	4618      	mov	r0, r3
 8006732:	370c      	adds	r7, #12
 8006734:	46bd      	mov	sp, r7
 8006736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800673a:	4770      	bx	lr

0800673c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 800673c:	b580      	push	{r7, lr}
 800673e:	b082      	sub	sp, #8
 8006740:	af00      	add	r7, sp, #0
 8006742:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8006744:	6878      	ldr	r0, [r7, #4]
 8006746:	f000 ff51 	bl	80075ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 800674a:	4603      	mov	r3, r0
 800674c:	4618      	mov	r0, r3
 800674e:	3708      	adds	r7, #8
 8006750:	46bd      	mov	sp, r7
 8006752:	bd80      	pop	{r7, pc}

08006754 <_ZNKSt4lessIcEclERKcS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 8006754:	b480      	push	{r7}
 8006756:	b085      	sub	sp, #20
 8006758:	af00      	add	r7, sp, #0
 800675a:	60f8      	str	r0, [r7, #12]
 800675c:	60b9      	str	r1, [r7, #8]
 800675e:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 8006760:	68bb      	ldr	r3, [r7, #8]
 8006762:	781a      	ldrb	r2, [r3, #0]
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	781b      	ldrb	r3, [r3, #0]
 8006768:	429a      	cmp	r2, r3
 800676a:	bf34      	ite	cc
 800676c:	2301      	movcc	r3, #1
 800676e:	2300      	movcs	r3, #0
 8006770:	b2db      	uxtb	r3, r3
 8006772:	4618      	mov	r0, r3
 8006774:	3714      	adds	r7, #20
 8006776:	46bd      	mov	sp, r7
 8006778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800677c:	4770      	bx	lr

0800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>:
       constexpr pair(const _T1& __x, _U2&& __y)
 800677e:	b580      	push	{r7, lr}
 8006780:	b084      	sub	sp, #16
 8006782:	af00      	add	r7, sp, #0
 8006784:	60f8      	str	r0, [r7, #12]
 8006786:	60b9      	str	r1, [r7, #8]
 8006788:	607a      	str	r2, [r7, #4]
       : first(__x), second(std::forward<_U2>(__y)) { }
 800678a:	68bb      	ldr	r3, [r7, #8]
 800678c:	681a      	ldr	r2, [r3, #0]
 800678e:	68fb      	ldr	r3, [r7, #12]
 8006790:	601a      	str	r2, [r3, #0]
 8006792:	6878      	ldr	r0, [r7, #4]
 8006794:	f000 ff3d 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8006798:	4603      	mov	r3, r0
 800679a:	681a      	ldr	r2, [r3, #0]
 800679c:	68fb      	ldr	r3, [r7, #12]
 800679e:	605a      	str	r2, [r3, #4]
 80067a0:	68fb      	ldr	r3, [r7, #12]
 80067a2:	4618      	mov	r0, r3
 80067a4:	3710      	adds	r7, #16
 80067a6:	46bd      	mov	sp, r7
 80067a8:	bd80      	pop	{r7, pc}

080067aa <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80067aa:	b590      	push	{r4, r7, lr}
 80067ac:	b08b      	sub	sp, #44	; 0x2c
 80067ae:	af00      	add	r7, sp, #0
 80067b0:	60f8      	str	r0, [r7, #12]
 80067b2:	60b9      	str	r1, [r7, #8]
 80067b4:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 80067b6:	68b8      	ldr	r0, [r7, #8]
 80067b8:	f7fd fd3e 	bl	8004238 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80067bc:	4603      	mov	r3, r0
 80067be:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 80067c0:	68b8      	ldr	r0, [r7, #8]
 80067c2:	f7ff ff97 	bl	80066f4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80067c6:	4603      	mov	r3, r0
 80067c8:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 80067ca:	2301      	movs	r3, #1
 80067cc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 80067d0:	69bb      	ldr	r3, [r7, #24]
 80067d2:	2b00      	cmp	r3, #0
 80067d4:	d020      	beq.n	8006818 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 80067d6:	69bb      	ldr	r3, [r7, #24]
 80067d8:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 80067da:	68bc      	ldr	r4, [r7, #8]
 80067dc:	69bb      	ldr	r3, [r7, #24]
 80067de:	4618      	mov	r0, r3
 80067e0:	f000 ff04 	bl	80075ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 80067e4:	4603      	mov	r3, r0
 80067e6:	461a      	mov	r2, r3
 80067e8:	6879      	ldr	r1, [r7, #4]
 80067ea:	4620      	mov	r0, r4
 80067ec:	f7ff ffb2 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 80067f0:	4603      	mov	r3, r0
 80067f2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 80067f6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80067fa:	2b00      	cmp	r3, #0
 80067fc:	d005      	beq.n	800680a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 80067fe:	69bb      	ldr	r3, [r7, #24]
 8006800:	4618      	mov	r0, r3
 8006802:	f7fe fd28 	bl	8005256 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8006806:	4603      	mov	r3, r0
 8006808:	e004      	b.n	8006814 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 800680a:	69bb      	ldr	r3, [r7, #24]
 800680c:	4618      	mov	r0, r3
 800680e:	f7fe fd16 	bl	800523e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8006812:	4603      	mov	r3, r0
 8006814:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8006816:	e7db      	b.n	80067d0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 8006818:	697a      	ldr	r2, [r7, #20]
 800681a:	f107 0310 	add.w	r3, r7, #16
 800681e:	4611      	mov	r1, r2
 8006820:	4618      	mov	r0, r3
 8006822:	f7fe fd35 	bl	8005290 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8006826:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800682a:	2b00      	cmp	r3, #0
 800682c:	d01d      	beq.n	800686a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 800682e:	68b8      	ldr	r0, [r7, #8]
 8006830:	f000 fefa 	bl	8007628 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 8006834:	4603      	mov	r3, r0
 8006836:	61fb      	str	r3, [r7, #28]
 8006838:	f107 021c 	add.w	r2, r7, #28
 800683c:	f107 0310 	add.w	r3, r7, #16
 8006840:	4611      	mov	r1, r2
 8006842:	4618      	mov	r0, r3
 8006844:	f000 ff01 	bl	800764a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>
 8006848:	4603      	mov	r3, r0
 800684a:	2b00      	cmp	r3, #0
 800684c:	d008      	beq.n	8006860 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 800684e:	f107 0214 	add.w	r2, r7, #20
 8006852:	f107 0318 	add.w	r3, r7, #24
 8006856:	4619      	mov	r1, r3
 8006858:	68f8      	ldr	r0, [r7, #12]
 800685a:	f000 ff0a 	bl	8007672 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 800685e:	e025      	b.n	80068ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 8006860:	f107 0310 	add.w	r3, r7, #16
 8006864:	4618      	mov	r0, r3
 8006866:	f000 f84a 	bl	80068fe <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 800686a:	68bc      	ldr	r4, [r7, #8]
 800686c:	693b      	ldr	r3, [r7, #16]
 800686e:	4618      	mov	r0, r3
 8006870:	f7ff ff64 	bl	800673c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8006874:	4603      	mov	r3, r0
 8006876:	687a      	ldr	r2, [r7, #4]
 8006878:	4619      	mov	r1, r3
 800687a:	4620      	mov	r0, r4
 800687c:	f7ff ff6a 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8006880:	4603      	mov	r3, r0
 8006882:	2b00      	cmp	r3, #0
 8006884:	d008      	beq.n	8006898 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 8006886:	f107 0214 	add.w	r2, r7, #20
 800688a:	f107 0318 	add.w	r3, r7, #24
 800688e:	4619      	mov	r1, r3
 8006890:	68f8      	ldr	r0, [r7, #12]
 8006892:	f000 feee 	bl	8007672 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 8006896:	e009      	b.n	80068ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 8006898:	2300      	movs	r3, #0
 800689a:	623b      	str	r3, [r7, #32]
 800689c:	f107 0220 	add.w	r2, r7, #32
 80068a0:	f107 0310 	add.w	r3, r7, #16
 80068a4:	4619      	mov	r1, r3
 80068a6:	68f8      	ldr	r0, [r7, #12]
 80068a8:	f000 f84b 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80068ac:	68f8      	ldr	r0, [r7, #12]
 80068ae:	372c      	adds	r7, #44	; 0x2c
 80068b0:	46bd      	mov	sp, r7
 80068b2:	bd90      	pop	{r4, r7, pc}

080068b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 80068b4:	b480      	push	{r7}
 80068b6:	b083      	sub	sp, #12
 80068b8:	af00      	add	r7, sp, #0
 80068ba:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	330c      	adds	r3, #12
 80068c0:	4618      	mov	r0, r3
 80068c2:	370c      	adds	r7, #12
 80068c4:	46bd      	mov	sp, r7
 80068c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068ca:	4770      	bx	lr

080068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80068cc:	b580      	push	{r7, lr}
 80068ce:	b084      	sub	sp, #16
 80068d0:	af00      	add	r7, sp, #0
 80068d2:	60f8      	str	r0, [r7, #12]
 80068d4:	60b9      	str	r1, [r7, #8]
 80068d6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80068d8:	68b8      	ldr	r0, [r7, #8]
 80068da:	f000 fe9a 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80068de:	4603      	mov	r3, r0
 80068e0:	681a      	ldr	r2, [r3, #0]
 80068e2:	68fb      	ldr	r3, [r7, #12]
 80068e4:	601a      	str	r2, [r3, #0]
 80068e6:	6878      	ldr	r0, [r7, #4]
 80068e8:	f000 fe93 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80068ec:	4603      	mov	r3, r0
 80068ee:	681a      	ldr	r2, [r3, #0]
 80068f0:	68fb      	ldr	r3, [r7, #12]
 80068f2:	605a      	str	r2, [r3, #4]
 80068f4:	68fb      	ldr	r3, [r7, #12]
 80068f6:	4618      	mov	r0, r3
 80068f8:	3710      	adds	r7, #16
 80068fa:	46bd      	mov	sp, r7
 80068fc:	bd80      	pop	{r7, pc}

080068fe <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 80068fe:	b580      	push	{r7, lr}
 8006900:	b082      	sub	sp, #8
 8006902:	af00      	add	r7, sp, #0
 8006904:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8006906:	687b      	ldr	r3, [r7, #4]
 8006908:	681b      	ldr	r3, [r3, #0]
 800690a:	4618      	mov	r0, r3
 800690c:	f01c fd2e 	bl	802336c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8006910:	4602      	mov	r2, r0
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	601a      	str	r2, [r3, #0]
	return *this;
 8006916:	687b      	ldr	r3, [r7, #4]
      }
 8006918:	4618      	mov	r0, r3
 800691a:	3708      	adds	r7, #8
 800691c:	46bd      	mov	sp, r7
 800691e:	bd80      	pop	{r7, pc}

08006920 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8006920:	b580      	push	{r7, lr}
 8006922:	b082      	sub	sp, #8
 8006924:	af00      	add	r7, sp, #0
 8006926:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8006928:	687b      	ldr	r3, [r7, #4]
 800692a:	681b      	ldr	r3, [r3, #0]
 800692c:	4618      	mov	r0, r3
 800692e:	f01c fd0a 	bl	8023346 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8006932:	4602      	mov	r2, r0
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	601a      	str	r2, [r3, #0]
	return *this;
 8006938:	687b      	ldr	r3, [r7, #4]
      }
 800693a:	4618      	mov	r0, r3
 800693c:	3708      	adds	r7, #8
 800693e:	46bd      	mov	sp, r7
 8006940:	bd80      	pop	{r7, pc}

08006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 8006942:	b580      	push	{r7, lr}
 8006944:	b084      	sub	sp, #16
 8006946:	af00      	add	r7, sp, #0
 8006948:	60f8      	str	r0, [r7, #12]
 800694a:	60b9      	str	r1, [r7, #8]
 800694c:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 800694e:	68b8      	ldr	r0, [r7, #8]
 8006950:	f000 fe5f 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8006954:	4603      	mov	r3, r0
 8006956:	681a      	ldr	r2, [r3, #0]
 8006958:	68fb      	ldr	r3, [r7, #12]
 800695a:	601a      	str	r2, [r3, #0]
 800695c:	687b      	ldr	r3, [r7, #4]
 800695e:	681a      	ldr	r2, [r3, #0]
 8006960:	68fb      	ldr	r3, [r7, #12]
 8006962:	605a      	str	r2, [r3, #4]
 8006964:	68fb      	ldr	r3, [r7, #12]
 8006966:	4618      	mov	r0, r3
 8006968:	3710      	adds	r7, #16
 800696a:	46bd      	mov	sp, r7
 800696c:	bd80      	pop	{r7, pc}

0800696e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 800696e:	b590      	push	{r4, r7, lr}
 8006970:	b083      	sub	sp, #12
 8006972:	af00      	add	r7, sp, #0
 8006974:	6078      	str	r0, [r7, #4]
 8006976:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	681c      	ldr	r4, [r3, #0]
 800697c:	6838      	ldr	r0, [r7, #0]
 800697e:	f7fe fdc5 	bl	800550c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006982:	4603      	mov	r3, r0
 8006984:	4619      	mov	r1, r3
 8006986:	4620      	mov	r0, r4
 8006988:	f000 fe8c 	bl	80076a4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 800698c:	4603      	mov	r3, r0
 800698e:	4618      	mov	r0, r3
 8006990:	370c      	adds	r7, #12
 8006992:	46bd      	mov	sp, r7
 8006994:	bd90      	pop	{r4, r7, pc}

08006996 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>:
 8006996:	b480      	push	{r7}
 8006998:	b083      	sub	sp, #12
 800699a:	af00      	add	r7, sp, #0
 800699c:	6078      	str	r0, [r7, #4]
 800699e:	6039      	str	r1, [r7, #0]
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	4618      	mov	r0, r3
 80069a4:	370c      	adds	r7, #12
 80069a6:	46bd      	mov	sp, r7
 80069a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ac:	4770      	bx	lr

080069ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80069ae:	b590      	push	{r4, r7, lr}
 80069b0:	b083      	sub	sp, #12
 80069b2:	af00      	add	r7, sp, #0
 80069b4:	6078      	str	r0, [r7, #4]
 80069b6:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 80069b8:	6878      	ldr	r0, [r7, #4]
 80069ba:	f000 fe8a 	bl	80076d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80069be:	4604      	mov	r4, r0
 80069c0:	6838      	ldr	r0, [r7, #0]
 80069c2:	f000 fe91 	bl	80076e8 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 80069c6:	4603      	mov	r3, r0
 80069c8:	4619      	mov	r1, r3
 80069ca:	4620      	mov	r0, r4
 80069cc:	f000 fe9a 	bl	8007704 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>
      }
 80069d0:	bf00      	nop
 80069d2:	370c      	adds	r7, #12
 80069d4:	46bd      	mov	sp, r7
 80069d6:	bd90      	pop	{r4, r7, pc}

080069d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80069d8:	b580      	push	{r7, lr}
 80069da:	b082      	sub	sp, #8
 80069dc:	af00      	add	r7, sp, #0
 80069de:	6078      	str	r0, [r7, #4]
 80069e0:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 80069e2:	6878      	ldr	r0, [r7, #4]
 80069e4:	f000 fe75 	bl	80076d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80069e8:	4603      	mov	r3, r0
 80069ea:	2201      	movs	r2, #1
 80069ec:	6839      	ldr	r1, [r7, #0]
 80069ee:	4618      	mov	r0, r3
 80069f0:	f000 fe95 	bl	800771e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>
 80069f4:	bf00      	nop
 80069f6:	3708      	adds	r7, #8
 80069f8:	46bd      	mov	sp, r7
 80069fa:	bd80      	pop	{r7, pc}

080069fc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 80069fc:	b580      	push	{r7, lr}
 80069fe:	b084      	sub	sp, #16
 8006a00:	af00      	add	r7, sp, #0
 8006a02:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	681a      	ldr	r2, [r3, #0]
 8006a08:	f107 030c 	add.w	r3, r7, #12
 8006a0c:	4611      	mov	r1, r2
 8006a0e:	4618      	mov	r0, r3
 8006a10:	f7fe fe34 	bl	800567c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8006a14:	68fb      	ldr	r3, [r7, #12]
 8006a16:	4618      	mov	r0, r3
 8006a18:	3710      	adds	r7, #16
 8006a1a:	46bd      	mov	sp, r7
 8006a1c:	bd80      	pop	{r7, pc}

08006a1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8006a1e:	b480      	push	{r7}
 8006a20:	b083      	sub	sp, #12
 8006a22:	af00      	add	r7, sp, #0
 8006a24:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	3304      	adds	r3, #4
 8006a2a:	4618      	mov	r0, r3
 8006a2c:	370c      	adds	r7, #12
 8006a2e:	46bd      	mov	sp, r7
 8006a30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a34:	4770      	bx	lr

08006a36 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8006a36:	b480      	push	{r7}
 8006a38:	b083      	sub	sp, #12
 8006a3a:	af00      	add	r7, sp, #0
 8006a3c:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	695b      	ldr	r3, [r3, #20]
 8006a42:	4618      	mov	r0, r3
 8006a44:	370c      	adds	r7, #12
 8006a46:	46bd      	mov	sp, r7
 8006a48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a4c:	4770      	bx	lr

08006a4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8006a4e:	b480      	push	{r7}
 8006a50:	b083      	sub	sp, #12
 8006a52:	af00      	add	r7, sp, #0
 8006a54:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	3310      	adds	r3, #16
 8006a5a:	4618      	mov	r0, r3
 8006a5c:	370c      	adds	r7, #12
 8006a5e:	46bd      	mov	sp, r7
 8006a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a64:	4770      	bx	lr

08006a66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8006a66:	b580      	push	{r7, lr}
 8006a68:	b082      	sub	sp, #8
 8006a6a:	af00      	add	r7, sp, #0
 8006a6c:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8006a6e:	6878      	ldr	r0, [r7, #4]
 8006a70:	f000 fe64 	bl	800773c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8006a74:	4603      	mov	r3, r0
 8006a76:	4618      	mov	r0, r3
 8006a78:	3708      	adds	r7, #8
 8006a7a:	46bd      	mov	sp, r7
 8006a7c:	bd80      	pop	{r7, pc}

08006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 8006a7e:	b580      	push	{r7, lr}
 8006a80:	b084      	sub	sp, #16
 8006a82:	af00      	add	r7, sp, #0
 8006a84:	60f8      	str	r0, [r7, #12]
 8006a86:	60b9      	str	r1, [r7, #8]
 8006a88:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 8006a8a:	6879      	ldr	r1, [r7, #4]
 8006a8c:	68b8      	ldr	r0, [r7, #8]
 8006a8e:	f000 fe68 	bl	8007762 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
 8006a92:	4603      	mov	r3, r0
 8006a94:	4618      	mov	r0, r3
 8006a96:	3710      	adds	r7, #16
 8006a98:	46bd      	mov	sp, r7
 8006a9a:	bd80      	pop	{r7, pc}

08006a9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8006a9c:	b590      	push	{r4, r7, lr}
 8006a9e:	b08b      	sub	sp, #44	; 0x2c
 8006aa0:	af00      	add	r7, sp, #0
 8006aa2:	60f8      	str	r0, [r7, #12]
 8006aa4:	60b9      	str	r1, [r7, #8]
 8006aa6:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8006aa8:	68b8      	ldr	r0, [r7, #8]
 8006aaa:	f7fd fca1 	bl	80043f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8006aae:	4603      	mov	r3, r0
 8006ab0:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8006ab2:	68b8      	ldr	r0, [r7, #8]
 8006ab4:	f7ff ffb3 	bl	8006a1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8006ab8:	4603      	mov	r3, r0
 8006aba:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8006abc:	2301      	movs	r3, #1
 8006abe:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8006ac2:	69bb      	ldr	r3, [r7, #24]
 8006ac4:	2b00      	cmp	r3, #0
 8006ac6:	d020      	beq.n	8006b0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 8006ac8:	69bb      	ldr	r3, [r7, #24]
 8006aca:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8006acc:	68bc      	ldr	r4, [r7, #8]
 8006ace:	69bb      	ldr	r3, [r7, #24]
 8006ad0:	4618      	mov	r0, r3
 8006ad2:	f000 fe33 	bl	800773c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8006ad6:	4603      	mov	r3, r0
 8006ad8:	461a      	mov	r2, r3
 8006ada:	6879      	ldr	r1, [r7, #4]
 8006adc:	4620      	mov	r0, r4
 8006ade:	f7ff ffce 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8006ae2:	4603      	mov	r3, r0
 8006ae4:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8006ae8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006aec:	2b00      	cmp	r3, #0
 8006aee:	d005      	beq.n	8006afc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 8006af0:	69bb      	ldr	r3, [r7, #24]
 8006af2:	4618      	mov	r0, r3
 8006af4:	f7fe fda5 	bl	8005642 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8006af8:	4603      	mov	r3, r0
 8006afa:	e004      	b.n	8006b06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 8006afc:	69bb      	ldr	r3, [r7, #24]
 8006afe:	4618      	mov	r0, r3
 8006b00:	f7fe fd93 	bl	800562a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8006b04:	4603      	mov	r3, r0
 8006b06:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8006b08:	e7db      	b.n	8006ac2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8006b0a:	697a      	ldr	r2, [r7, #20]
 8006b0c:	f107 0310 	add.w	r3, r7, #16
 8006b10:	4611      	mov	r1, r2
 8006b12:	4618      	mov	r0, r3
 8006b14:	f7fe fdb2 	bl	800567c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8006b18:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006b1c:	2b00      	cmp	r3, #0
 8006b1e:	d01d      	beq.n	8006b5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 8006b20:	68b8      	ldr	r0, [r7, #8]
 8006b22:	f000 fe2e 	bl	8007782 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 8006b26:	4603      	mov	r3, r0
 8006b28:	61fb      	str	r3, [r7, #28]
 8006b2a:	f107 021c 	add.w	r2, r7, #28
 8006b2e:	f107 0310 	add.w	r3, r7, #16
 8006b32:	4611      	mov	r1, r2
 8006b34:	4618      	mov	r0, r3
 8006b36:	f000 fe35 	bl	80077a4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 8006b3a:	4603      	mov	r3, r0
 8006b3c:	2b00      	cmp	r3, #0
 8006b3e:	d008      	beq.n	8006b52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8006b40:	f107 0214 	add.w	r2, r7, #20
 8006b44:	f107 0318 	add.w	r3, r7, #24
 8006b48:	4619      	mov	r1, r3
 8006b4a:	68f8      	ldr	r0, [r7, #12]
 8006b4c:	f000 fe3e 	bl	80077cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 8006b50:	e025      	b.n	8006b9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 8006b52:	f107 0310 	add.w	r3, r7, #16
 8006b56:	4618      	mov	r0, r3
 8006b58:	f000 f831 	bl	8006bbe <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8006b5c:	68bc      	ldr	r4, [r7, #8]
 8006b5e:	693b      	ldr	r3, [r7, #16]
 8006b60:	4618      	mov	r0, r3
 8006b62:	f7ff ff80 	bl	8006a66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8006b66:	4603      	mov	r3, r0
 8006b68:	687a      	ldr	r2, [r7, #4]
 8006b6a:	4619      	mov	r1, r3
 8006b6c:	4620      	mov	r0, r4
 8006b6e:	f7ff ff86 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8006b72:	4603      	mov	r3, r0
 8006b74:	2b00      	cmp	r3, #0
 8006b76:	d008      	beq.n	8006b8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8006b78:	f107 0214 	add.w	r2, r7, #20
 8006b7c:	f107 0318 	add.w	r3, r7, #24
 8006b80:	4619      	mov	r1, r3
 8006b82:	68f8      	ldr	r0, [r7, #12]
 8006b84:	f000 fe22 	bl	80077cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 8006b88:	e009      	b.n	8006b9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 8006b8a:	2300      	movs	r3, #0
 8006b8c:	623b      	str	r3, [r7, #32]
 8006b8e:	f107 0220 	add.w	r2, r7, #32
 8006b92:	f107 0310 	add.w	r3, r7, #16
 8006b96:	4619      	mov	r1, r3
 8006b98:	68f8      	ldr	r0, [r7, #12]
 8006b9a:	f7ff fed2 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8006b9e:	68f8      	ldr	r0, [r7, #12]
 8006ba0:	372c      	adds	r7, #44	; 0x2c
 8006ba2:	46bd      	mov	sp, r7
 8006ba4:	bd90      	pop	{r4, r7, pc}

08006ba6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8006ba6:	b480      	push	{r7}
 8006ba8:	b083      	sub	sp, #12
 8006baa:	af00      	add	r7, sp, #0
 8006bac:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	330c      	adds	r3, #12
 8006bb2:	4618      	mov	r0, r3
 8006bb4:	370c      	adds	r7, #12
 8006bb6:	46bd      	mov	sp, r7
 8006bb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bbc:	4770      	bx	lr

08006bbe <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8006bbe:	b580      	push	{r7, lr}
 8006bc0:	b082      	sub	sp, #8
 8006bc2:	af00      	add	r7, sp, #0
 8006bc4:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	4618      	mov	r0, r3
 8006bcc:	f01c fbce 	bl	802336c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8006bd0:	4602      	mov	r2, r0
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	601a      	str	r2, [r3, #0]
	return *this;
 8006bd6:	687b      	ldr	r3, [r7, #4]
      }
 8006bd8:	4618      	mov	r0, r3
 8006bda:	3708      	adds	r7, #8
 8006bdc:	46bd      	mov	sp, r7
 8006bde:	bd80      	pop	{r7, pc}

08006be0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8006be0:	b580      	push	{r7, lr}
 8006be2:	b082      	sub	sp, #8
 8006be4:	af00      	add	r7, sp, #0
 8006be6:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	681b      	ldr	r3, [r3, #0]
 8006bec:	4618      	mov	r0, r3
 8006bee:	f01c fbaa 	bl	8023346 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8006bf2:	4602      	mov	r2, r0
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	601a      	str	r2, [r3, #0]
	return *this;
 8006bf8:	687b      	ldr	r3, [r7, #4]
      }
 8006bfa:	4618      	mov	r0, r3
 8006bfc:	3708      	adds	r7, #8
 8006bfe:	46bd      	mov	sp, r7
 8006c00:	bd80      	pop	{r7, pc}

08006c02 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 8006c02:	b590      	push	{r4, r7, lr}
 8006c04:	b083      	sub	sp, #12
 8006c06:	af00      	add	r7, sp, #0
 8006c08:	6078      	str	r0, [r7, #4]
 8006c0a:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8006c0c:	687b      	ldr	r3, [r7, #4]
 8006c0e:	681c      	ldr	r4, [r3, #0]
 8006c10:	6838      	ldr	r0, [r7, #0]
 8006c12:	f7fe fe71 	bl	80058f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8006c16:	4603      	mov	r3, r0
 8006c18:	4619      	mov	r1, r3
 8006c1a:	4620      	mov	r0, r4
 8006c1c:	f000 fdef 	bl	80077fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 8006c20:	4603      	mov	r3, r0
 8006c22:	4618      	mov	r0, r3
 8006c24:	370c      	adds	r7, #12
 8006c26:	46bd      	mov	sp, r7
 8006c28:	bd90      	pop	{r4, r7, pc}

08006c2a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>:
 8006c2a:	b480      	push	{r7}
 8006c2c:	b083      	sub	sp, #12
 8006c2e:	af00      	add	r7, sp, #0
 8006c30:	6078      	str	r0, [r7, #4]
 8006c32:	6039      	str	r1, [r7, #0]
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	4618      	mov	r0, r3
 8006c38:	370c      	adds	r7, #12
 8006c3a:	46bd      	mov	sp, r7
 8006c3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c40:	4770      	bx	lr

08006c42 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8006c42:	b590      	push	{r4, r7, lr}
 8006c44:	b083      	sub	sp, #12
 8006c46:	af00      	add	r7, sp, #0
 8006c48:	6078      	str	r0, [r7, #4]
 8006c4a:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8006c4c:	6878      	ldr	r0, [r7, #4]
 8006c4e:	f000 fded 	bl	800782c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8006c52:	4604      	mov	r4, r0
 8006c54:	6838      	ldr	r0, [r7, #0]
 8006c56:	f000 fdf4 	bl	8007842 <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8006c5a:	4603      	mov	r3, r0
 8006c5c:	4619      	mov	r1, r3
 8006c5e:	4620      	mov	r0, r4
 8006c60:	f000 fdfd 	bl	800785e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>
      }
 8006c64:	bf00      	nop
 8006c66:	370c      	adds	r7, #12
 8006c68:	46bd      	mov	sp, r7
 8006c6a:	bd90      	pop	{r4, r7, pc}

08006c6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8006c6c:	b580      	push	{r7, lr}
 8006c6e:	b082      	sub	sp, #8
 8006c70:	af00      	add	r7, sp, #0
 8006c72:	6078      	str	r0, [r7, #4]
 8006c74:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8006c76:	6878      	ldr	r0, [r7, #4]
 8006c78:	f000 fdd8 	bl	800782c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8006c7c:	4603      	mov	r3, r0
 8006c7e:	2201      	movs	r2, #1
 8006c80:	6839      	ldr	r1, [r7, #0]
 8006c82:	4618      	mov	r0, r3
 8006c84:	f000 fdf8 	bl	8007878 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>
 8006c88:	bf00      	nop
 8006c8a:	3708      	adds	r7, #8
 8006c8c:	46bd      	mov	sp, r7
 8006c8e:	bd80      	pop	{r7, pc}

08006c90 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8006c90:	b580      	push	{r7, lr}
 8006c92:	b084      	sub	sp, #16
 8006c94:	af00      	add	r7, sp, #0
 8006c96:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8006c98:	687b      	ldr	r3, [r7, #4]
 8006c9a:	681a      	ldr	r2, [r3, #0]
 8006c9c:	f107 030c 	add.w	r3, r7, #12
 8006ca0:	4611      	mov	r1, r2
 8006ca2:	4618      	mov	r0, r3
 8006ca4:	f7fe fed4 	bl	8005a50 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8006ca8:	68fb      	ldr	r3, [r7, #12]
 8006caa:	4618      	mov	r0, r3
 8006cac:	3710      	adds	r7, #16
 8006cae:	46bd      	mov	sp, r7
 8006cb0:	bd80      	pop	{r7, pc}

08006cb2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8006cb2:	b480      	push	{r7}
 8006cb4:	b083      	sub	sp, #12
 8006cb6:	af00      	add	r7, sp, #0
 8006cb8:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8006cba:	687b      	ldr	r3, [r7, #4]
 8006cbc:	3304      	adds	r3, #4
 8006cbe:	4618      	mov	r0, r3
 8006cc0:	370c      	adds	r7, #12
 8006cc2:	46bd      	mov	sp, r7
 8006cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cc8:	4770      	bx	lr

08006cca <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8006cca:	b480      	push	{r7}
 8006ccc:	b083      	sub	sp, #12
 8006cce:	af00      	add	r7, sp, #0
 8006cd0:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8006cd2:	687b      	ldr	r3, [r7, #4]
 8006cd4:	695b      	ldr	r3, [r3, #20]
 8006cd6:	4618      	mov	r0, r3
 8006cd8:	370c      	adds	r7, #12
 8006cda:	46bd      	mov	sp, r7
 8006cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ce0:	4770      	bx	lr

08006ce2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8006ce2:	b480      	push	{r7}
 8006ce4:	b083      	sub	sp, #12
 8006ce6:	af00      	add	r7, sp, #0
 8006ce8:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	3310      	adds	r3, #16
 8006cee:	4618      	mov	r0, r3
 8006cf0:	370c      	adds	r7, #12
 8006cf2:	46bd      	mov	sp, r7
 8006cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cf8:	4770      	bx	lr

08006cfa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8006cfa:	b580      	push	{r7, lr}
 8006cfc:	b082      	sub	sp, #8
 8006cfe:	af00      	add	r7, sp, #0
 8006d00:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8006d02:	6878      	ldr	r0, [r7, #4]
 8006d04:	f000 fdc7 	bl	8007896 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8006d08:	4603      	mov	r3, r0
 8006d0a:	4618      	mov	r0, r3
 8006d0c:	3708      	adds	r7, #8
 8006d0e:	46bd      	mov	sp, r7
 8006d10:	bd80      	pop	{r7, pc}

08006d12 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8006d12:	b590      	push	{r4, r7, lr}
 8006d14:	b08b      	sub	sp, #44	; 0x2c
 8006d16:	af00      	add	r7, sp, #0
 8006d18:	60f8      	str	r0, [r7, #12]
 8006d1a:	60b9      	str	r1, [r7, #8]
 8006d1c:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8006d1e:	68b8      	ldr	r0, [r7, #8]
 8006d20:	f7fd fc42 	bl	80045a8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8006d24:	4603      	mov	r3, r0
 8006d26:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8006d28:	68b8      	ldr	r0, [r7, #8]
 8006d2a:	f7ff ffc2 	bl	8006cb2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8006d2e:	4603      	mov	r3, r0
 8006d30:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8006d32:	2301      	movs	r3, #1
 8006d34:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8006d38:	69bb      	ldr	r3, [r7, #24]
 8006d3a:	2b00      	cmp	r3, #0
 8006d3c:	d020      	beq.n	8006d80 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 8006d3e:	69bb      	ldr	r3, [r7, #24]
 8006d40:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8006d42:	68bc      	ldr	r4, [r7, #8]
 8006d44:	69bb      	ldr	r3, [r7, #24]
 8006d46:	4618      	mov	r0, r3
 8006d48:	f000 fda5 	bl	8007896 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8006d4c:	4603      	mov	r3, r0
 8006d4e:	461a      	mov	r2, r3
 8006d50:	6879      	ldr	r1, [r7, #4]
 8006d52:	4620      	mov	r0, r4
 8006d54:	f7ff fcfe 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8006d58:	4603      	mov	r3, r0
 8006d5a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8006d5e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006d62:	2b00      	cmp	r3, #0
 8006d64:	d005      	beq.n	8006d72 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 8006d66:	69bb      	ldr	r3, [r7, #24]
 8006d68:	4618      	mov	r0, r3
 8006d6a:	f7fe fe54 	bl	8005a16 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8006d6e:	4603      	mov	r3, r0
 8006d70:	e004      	b.n	8006d7c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 8006d72:	69bb      	ldr	r3, [r7, #24]
 8006d74:	4618      	mov	r0, r3
 8006d76:	f7fe fe42 	bl	80059fe <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8006d7a:	4603      	mov	r3, r0
 8006d7c:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8006d7e:	e7db      	b.n	8006d38 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 8006d80:	697a      	ldr	r2, [r7, #20]
 8006d82:	f107 0310 	add.w	r3, r7, #16
 8006d86:	4611      	mov	r1, r2
 8006d88:	4618      	mov	r0, r3
 8006d8a:	f7fe fe61 	bl	8005a50 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8006d8e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8006d92:	2b00      	cmp	r3, #0
 8006d94:	d01d      	beq.n	8006dd2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 8006d96:	68b8      	ldr	r0, [r7, #8]
 8006d98:	f000 fd90 	bl	80078bc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 8006d9c:	4603      	mov	r3, r0
 8006d9e:	61fb      	str	r3, [r7, #28]
 8006da0:	f107 021c 	add.w	r2, r7, #28
 8006da4:	f107 0310 	add.w	r3, r7, #16
 8006da8:	4611      	mov	r1, r2
 8006daa:	4618      	mov	r0, r3
 8006dac:	f000 fd97 	bl	80078de <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>
 8006db0:	4603      	mov	r3, r0
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	d008      	beq.n	8006dc8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 8006db6:	f107 0214 	add.w	r2, r7, #20
 8006dba:	f107 0318 	add.w	r3, r7, #24
 8006dbe:	4619      	mov	r1, r3
 8006dc0:	68f8      	ldr	r0, [r7, #12]
 8006dc2:	f000 fda0 	bl	8007906 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 8006dc6:	e025      	b.n	8006e14 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 8006dc8:	f107 0310 	add.w	r3, r7, #16
 8006dcc:	4618      	mov	r0, r3
 8006dce:	f000 f831 	bl	8006e34 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8006dd2:	68bc      	ldr	r4, [r7, #8]
 8006dd4:	693b      	ldr	r3, [r7, #16]
 8006dd6:	4618      	mov	r0, r3
 8006dd8:	f7ff ff8f 	bl	8006cfa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8006ddc:	4603      	mov	r3, r0
 8006dde:	687a      	ldr	r2, [r7, #4]
 8006de0:	4619      	mov	r1, r3
 8006de2:	4620      	mov	r0, r4
 8006de4:	f7ff fcb6 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8006de8:	4603      	mov	r3, r0
 8006dea:	2b00      	cmp	r3, #0
 8006dec:	d008      	beq.n	8006e00 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 8006dee:	f107 0214 	add.w	r2, r7, #20
 8006df2:	f107 0318 	add.w	r3, r7, #24
 8006df6:	4619      	mov	r1, r3
 8006df8:	68f8      	ldr	r0, [r7, #12]
 8006dfa:	f000 fd84 	bl	8007906 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 8006dfe:	e009      	b.n	8006e14 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 8006e00:	2300      	movs	r3, #0
 8006e02:	623b      	str	r3, [r7, #32]
 8006e04:	f107 0220 	add.w	r2, r7, #32
 8006e08:	f107 0310 	add.w	r3, r7, #16
 8006e0c:	4619      	mov	r1, r3
 8006e0e:	68f8      	ldr	r0, [r7, #12]
 8006e10:	f7ff fd97 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8006e14:	68f8      	ldr	r0, [r7, #12]
 8006e16:	372c      	adds	r7, #44	; 0x2c
 8006e18:	46bd      	mov	sp, r7
 8006e1a:	bd90      	pop	{r4, r7, pc}

08006e1c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8006e1c:	b480      	push	{r7}
 8006e1e:	b083      	sub	sp, #12
 8006e20:	af00      	add	r7, sp, #0
 8006e22:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	330c      	adds	r3, #12
 8006e28:	4618      	mov	r0, r3
 8006e2a:	370c      	adds	r7, #12
 8006e2c:	46bd      	mov	sp, r7
 8006e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e32:	4770      	bx	lr

08006e34 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8006e34:	b580      	push	{r7, lr}
 8006e36:	b082      	sub	sp, #8
 8006e38:	af00      	add	r7, sp, #0
 8006e3a:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8006e3c:	687b      	ldr	r3, [r7, #4]
 8006e3e:	681b      	ldr	r3, [r3, #0]
 8006e40:	4618      	mov	r0, r3
 8006e42:	f01c fa93 	bl	802336c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8006e46:	4602      	mov	r2, r0
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	601a      	str	r2, [r3, #0]
	return *this;
 8006e4c:	687b      	ldr	r3, [r7, #4]
      }
 8006e4e:	4618      	mov	r0, r3
 8006e50:	3708      	adds	r7, #8
 8006e52:	46bd      	mov	sp, r7
 8006e54:	bd80      	pop	{r7, pc}

08006e56 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8006e56:	b580      	push	{r7, lr}
 8006e58:	b082      	sub	sp, #8
 8006e5a:	af00      	add	r7, sp, #0
 8006e5c:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8006e5e:	687b      	ldr	r3, [r7, #4]
 8006e60:	681b      	ldr	r3, [r3, #0]
 8006e62:	4618      	mov	r0, r3
 8006e64:	f01c fa6f 	bl	8023346 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8006e68:	4602      	mov	r2, r0
 8006e6a:	687b      	ldr	r3, [r7, #4]
 8006e6c:	601a      	str	r2, [r3, #0]
	return *this;
 8006e6e:	687b      	ldr	r3, [r7, #4]
      }
 8006e70:	4618      	mov	r0, r3
 8006e72:	3708      	adds	r7, #8
 8006e74:	46bd      	mov	sp, r7
 8006e76:	bd80      	pop	{r7, pc}

08006e78 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 8006e78:	b590      	push	{r4, r7, lr}
 8006e7a:	b083      	sub	sp, #12
 8006e7c:	af00      	add	r7, sp, #0
 8006e7e:	6078      	str	r0, [r7, #4]
 8006e80:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8006e82:	687b      	ldr	r3, [r7, #4]
 8006e84:	681c      	ldr	r4, [r3, #0]
 8006e86:	6838      	ldr	r0, [r7, #0]
 8006e88:	f7fe ff20 	bl	8005ccc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8006e8c:	4603      	mov	r3, r0
 8006e8e:	4619      	mov	r1, r3
 8006e90:	4620      	mov	r0, r4
 8006e92:	f000 fd51 	bl	8007938 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 8006e96:	4603      	mov	r3, r0
 8006e98:	4618      	mov	r0, r3
 8006e9a:	370c      	adds	r7, #12
 8006e9c:	46bd      	mov	sp, r7
 8006e9e:	bd90      	pop	{r4, r7, pc}

08006ea0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006ea0:	b5b0      	push	{r4, r5, r7, lr}
 8006ea2:	b084      	sub	sp, #16
 8006ea4:	af00      	add	r7, sp, #0
 8006ea6:	7338      	strb	r0, [r7, #12]
 8006ea8:	60b9      	str	r1, [r7, #8]
 8006eaa:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006eac:	68b8      	ldr	r0, [r7, #8]
 8006eae:	f7fe ffea 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006eb2:	4604      	mov	r4, r0
 8006eb4:	6878      	ldr	r0, [r7, #4]
 8006eb6:	f7fd fea1 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8006eba:	4603      	mov	r3, r0
 8006ebc:	4619      	mov	r1, r3
 8006ebe:	4620      	mov	r0, r4
 8006ec0:	f000 fd51 	bl	8007966 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 8006ec4:	462b      	mov	r3, r5
 8006ec6:	4618      	mov	r0, r3
 8006ec8:	3710      	adds	r7, #16
 8006eca:	46bd      	mov	sp, r7
 8006ecc:	bdb0      	pop	{r4, r5, r7, pc}

08006ece <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006ece:	b5b0      	push	{r4, r5, r7, lr}
 8006ed0:	b084      	sub	sp, #16
 8006ed2:	af00      	add	r7, sp, #0
 8006ed4:	7338      	strb	r0, [r7, #12]
 8006ed6:	60b9      	str	r1, [r7, #8]
 8006ed8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006eda:	68b8      	ldr	r0, [r7, #8]
 8006edc:	f7fe ffd3 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006ee0:	4604      	mov	r4, r0
 8006ee2:	6878      	ldr	r0, [r7, #4]
 8006ee4:	f7fd febe 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8006ee8:	4603      	mov	r3, r0
 8006eea:	4619      	mov	r1, r3
 8006eec:	4620      	mov	r0, r4
 8006eee:	f000 fd4b 	bl	8007988 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 8006ef2:	462b      	mov	r3, r5
 8006ef4:	4618      	mov	r0, r3
 8006ef6:	3710      	adds	r7, #16
 8006ef8:	46bd      	mov	sp, r7
 8006efa:	bdb0      	pop	{r4, r5, r7, pc}

08006efc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006efc:	b5b0      	push	{r4, r5, r7, lr}
 8006efe:	b084      	sub	sp, #16
 8006f00:	af00      	add	r7, sp, #0
 8006f02:	7338      	strb	r0, [r7, #12]
 8006f04:	60b9      	str	r1, [r7, #8]
 8006f06:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006f08:	68b8      	ldr	r0, [r7, #8]
 8006f0a:	f7fe ffbc 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006f0e:	4604      	mov	r4, r0
 8006f10:	6878      	ldr	r0, [r7, #4]
 8006f12:	f7fd fedb 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8006f16:	4603      	mov	r3, r0
 8006f18:	4619      	mov	r1, r3
 8006f1a:	4620      	mov	r0, r4
 8006f1c:	f000 fd45 	bl	80079aa <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 8006f20:	462b      	mov	r3, r5
 8006f22:	4618      	mov	r0, r3
 8006f24:	3710      	adds	r7, #16
 8006f26:	46bd      	mov	sp, r7
 8006f28:	bdb0      	pop	{r4, r5, r7, pc}

08006f2a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006f2a:	b5b0      	push	{r4, r5, r7, lr}
 8006f2c:	b084      	sub	sp, #16
 8006f2e:	af00      	add	r7, sp, #0
 8006f30:	7338      	strb	r0, [r7, #12]
 8006f32:	60b9      	str	r1, [r7, #8]
 8006f34:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006f36:	68b8      	ldr	r0, [r7, #8]
 8006f38:	f7fe ffa5 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006f3c:	4604      	mov	r4, r0
 8006f3e:	6878      	ldr	r0, [r7, #4]
 8006f40:	f7fd ff04 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8006f44:	4603      	mov	r3, r0
 8006f46:	4619      	mov	r1, r3
 8006f48:	4620      	mov	r0, r4
 8006f4a:	f000 fd3f 	bl	80079cc <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 8006f4e:	462b      	mov	r3, r5
 8006f50:	4618      	mov	r0, r3
 8006f52:	3710      	adds	r7, #16
 8006f54:	46bd      	mov	sp, r7
 8006f56:	bdb0      	pop	{r4, r5, r7, pc}

08006f58 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006f58:	b5b0      	push	{r4, r5, r7, lr}
 8006f5a:	b084      	sub	sp, #16
 8006f5c:	af00      	add	r7, sp, #0
 8006f5e:	7338      	strb	r0, [r7, #12]
 8006f60:	60b9      	str	r1, [r7, #8]
 8006f62:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006f64:	68b8      	ldr	r0, [r7, #8]
 8006f66:	f7fe ff8e 	bl	8005e86 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006f6a:	4604      	mov	r4, r0
 8006f6c:	6878      	ldr	r0, [r7, #4]
 8006f6e:	f7fd ff2d 	bl	8004dcc <_ZSt7forwardIRSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 8006f72:	4603      	mov	r3, r0
 8006f74:	4619      	mov	r1, r3
 8006f76:	4620      	mov	r0, r4
 8006f78:	f000 fd39 	bl	80079ee <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 8006f7c:	462b      	mov	r3, r5
 8006f7e:	4618      	mov	r0, r3
 8006f80:	3710      	adds	r7, #16
 8006f82:	46bd      	mov	sp, r7
 8006f84:	bdb0      	pop	{r4, r5, r7, pc}

08006f86 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8006f86:	b580      	push	{r7, lr}
 8006f88:	b082      	sub	sp, #8
 8006f8a:	af00      	add	r7, sp, #0
 8006f8c:	6078      	str	r0, [r7, #4]
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	4618      	mov	r0, r3
 8006f92:	f000 fd3d 	bl	8007a10 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	4618      	mov	r0, r3
 8006f9a:	3708      	adds	r7, #8
 8006f9c:	46bd      	mov	sp, r7
 8006f9e:	bd80      	pop	{r7, pc}

08006fa0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESM_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8006fa0:	b5b0      	push	{r4, r5, r7, lr}
 8006fa2:	b082      	sub	sp, #8
 8006fa4:	af00      	add	r7, sp, #0
 8006fa6:	6078      	str	r0, [r7, #4]
 8006fa8:	6039      	str	r1, [r7, #0]
 8006faa:	687b      	ldr	r3, [r7, #4]
 8006fac:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8006fae:	4618      	mov	r0, r3
 8006fb0:	f000 fd39 	bl	8007a26 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006fb4:	4604      	mov	r4, r0
 8006fb6:	6838      	ldr	r0, [r7, #0]
 8006fb8:	f7fd ffc5 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8006fbc:	4603      	mov	r3, r0
 8006fbe:	4619      	mov	r1, r3
 8006fc0:	4620      	mov	r0, r4
 8006fc2:	f000 fd52 	bl	8007a6a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>
	  return {};
 8006fc6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8006fc8:	4618      	mov	r0, r3
 8006fca:	3708      	adds	r7, #8
 8006fcc:	46bd      	mov	sp, r7
 8006fce:	bdb0      	pop	{r4, r5, r7, pc}

08006fd0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESM_>:
 8006fd0:	b5b0      	push	{r4, r5, r7, lr}
 8006fd2:	b082      	sub	sp, #8
 8006fd4:	af00      	add	r7, sp, #0
 8006fd6:	6078      	str	r0, [r7, #4]
 8006fd8:	6039      	str	r1, [r7, #0]
 8006fda:	687b      	ldr	r3, [r7, #4]
 8006fdc:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 8006fde:	4618      	mov	r0, r3
 8006fe0:	f000 fd21 	bl	8007a26 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8006fe4:	4604      	mov	r4, r0
 8006fe6:	6838      	ldr	r0, [r7, #0]
 8006fe8:	f7fd ffd6 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8006fec:	4603      	mov	r3, r0
 8006fee:	4619      	mov	r1, r3
 8006ff0:	4620      	mov	r0, r4
 8006ff2:	f000 fd54 	bl	8007a9e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>
	  return {};
 8006ff6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8006ff8:	4618      	mov	r0, r3
 8006ffa:	3708      	adds	r7, #8
 8006ffc:	46bd      	mov	sp, r7
 8006ffe:	bdb0      	pop	{r4, r5, r7, pc}

08007000 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESM_>:
 8007000:	b5b0      	push	{r4, r5, r7, lr}
 8007002:	b082      	sub	sp, #8
 8007004:	af00      	add	r7, sp, #0
 8007006:	6078      	str	r0, [r7, #4]
 8007008:	6039      	str	r1, [r7, #0]
 800700a:	687b      	ldr	r3, [r7, #4]
 800700c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800700e:	4618      	mov	r0, r3
 8007010:	f000 fd09 	bl	8007a26 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007014:	4604      	mov	r4, r0
 8007016:	6838      	ldr	r0, [r7, #0]
 8007018:	f7fd ffe7 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800701c:	4603      	mov	r3, r0
 800701e:	4619      	mov	r1, r3
 8007020:	4620      	mov	r0, r4
 8007022:	f000 fd56 	bl	8007ad2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>
	  return {};
 8007026:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8007028:	4618      	mov	r0, r3
 800702a:	3708      	adds	r7, #8
 800702c:	46bd      	mov	sp, r7
 800702e:	bdb0      	pop	{r4, r5, r7, pc}

08007030 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESM_>:
 8007030:	b5b0      	push	{r4, r5, r7, lr}
 8007032:	b082      	sub	sp, #8
 8007034:	af00      	add	r7, sp, #0
 8007036:	6078      	str	r0, [r7, #4]
 8007038:	6039      	str	r1, [r7, #0]
 800703a:	687b      	ldr	r3, [r7, #4]
 800703c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800703e:	4618      	mov	r0, r3
 8007040:	f000 fcf1 	bl	8007a26 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007044:	4604      	mov	r4, r0
 8007046:	6838      	ldr	r0, [r7, #0]
 8007048:	f7fe f804 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800704c:	4603      	mov	r3, r0
 800704e:	4619      	mov	r1, r3
 8007050:	4620      	mov	r0, r4
 8007052:	f000 fd59 	bl	8007b08 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKS8_EEvOT_OT0_>
	  return {};
 8007056:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8007058:	4618      	mov	r0, r3
 800705a:	3708      	adds	r7, #8
 800705c:	46bd      	mov	sp, r7
 800705e:	bdb0      	pop	{r4, r5, r7, pc}

08007060 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Copy_ctor_baseILb0EJifbS7_SB_EEERKSD_EEvOT0_OT1_ENUlOT_E_clIRKSB_EENS0_16__variant_cookieESM_>:
 8007060:	b5b0      	push	{r4, r5, r7, lr}
 8007062:	b082      	sub	sp, #8
 8007064:	af00      	add	r7, sp, #0
 8007066:	6078      	str	r0, [r7, #4]
 8007068:	6039      	str	r1, [r7, #0]
 800706a:	687b      	ldr	r3, [r7, #4]
 800706c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800706e:	4618      	mov	r0, r3
 8007070:	f000 fcd9 	bl	8007a26 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8007074:	4604      	mov	r4, r0
 8007076:	6838      	ldr	r0, [r7, #0]
 8007078:	f7fe f821 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800707c:	4603      	mov	r3, r0
 800707e:	4619      	mov	r1, r3
 8007080:	4620      	mov	r0, r4
 8007082:	f000 fd5d 	bl	8007b40 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKSC_EEvOT_OT0_>
	  return {};
 8007086:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8007088:	4618      	mov	r0, r3
 800708a:	3708      	adds	r7, #8
 800708c:	46bd      	mov	sp, r7
 800708e:	bdb0      	pop	{r4, r5, r7, pc}

08007090 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007090:	b480      	push	{r7}
 8007092:	b083      	sub	sp, #12
 8007094:	af00      	add	r7, sp, #0
 8007096:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007098:	687b      	ldr	r3, [r7, #4]
 800709a:	4618      	mov	r0, r3
 800709c:	370c      	adds	r7, #12
 800709e:	46bd      	mov	sp, r7
 80070a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070a4:	4770      	bx	lr

080070a6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 80070a6:	b480      	push	{r7}
 80070a8:	b083      	sub	sp, #12
 80070aa:	af00      	add	r7, sp, #0
 80070ac:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80070ae:	687b      	ldr	r3, [r7, #4]
 80070b0:	4618      	mov	r0, r3
 80070b2:	370c      	adds	r7, #12
 80070b4:	46bd      	mov	sp, r7
 80070b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070ba:	4770      	bx	lr

080070bc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80070bc:	b580      	push	{r7, lr}
 80070be:	b082      	sub	sp, #8
 80070c0:	af00      	add	r7, sp, #0
 80070c2:	6078      	str	r0, [r7, #4]
 80070c4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	4618      	mov	r0, r3
 80070ca:	f7fc f975 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80070ce:	6838      	ldr	r0, [r7, #0]
 80070d0:	f000 fd52 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80070d4:	4603      	mov	r3, r0
 80070d6:	4619      	mov	r1, r3
 80070d8:	6878      	ldr	r0, [r7, #4]
 80070da:	f000 fd58 	bl	8007b8e <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80070de:	6878      	ldr	r0, [r7, #4]
 80070e0:	f7fa fd50 	bl	8001b84 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80070e4:	4603      	mov	r3, r0
	}
 80070e6:	4618      	mov	r0, r3
 80070e8:	3708      	adds	r7, #8
 80070ea:	46bd      	mov	sp, r7
 80070ec:	bd80      	pop	{r7, pc}

080070ee <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 80070ee:	b480      	push	{r7}
 80070f0:	b083      	sub	sp, #12
 80070f2:	af00      	add	r7, sp, #0
 80070f4:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	4618      	mov	r0, r3
 80070fa:	370c      	adds	r7, #12
 80070fc:	46bd      	mov	sp, r7
 80070fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007102:	4770      	bx	lr

08007104 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8007104:	b580      	push	{r7, lr}
 8007106:	b082      	sub	sp, #8
 8007108:	af00      	add	r7, sp, #0
 800710a:	6078      	str	r0, [r7, #4]
 800710c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800710e:	687b      	ldr	r3, [r7, #4]
 8007110:	4618      	mov	r0, r3
 8007112:	f7fc f951 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8007116:	6838      	ldr	r0, [r7, #0]
 8007118:	f000 fd58 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800711c:	4603      	mov	r3, r0
 800711e:	4619      	mov	r1, r3
 8007120:	6878      	ldr	r0, [r7, #4]
 8007122:	f000 fd5e 	bl	8007be2 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8007126:	6878      	ldr	r0, [r7, #4]
 8007128:	f000 fd7a 	bl	8007c20 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800712c:	4603      	mov	r3, r0
	}
 800712e:	4618      	mov	r0, r3
 8007130:	3708      	adds	r7, #8
 8007132:	46bd      	mov	sp, r7
 8007134:	bd80      	pop	{r7, pc}

08007136 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 8007136:	b480      	push	{r7}
 8007138:	b083      	sub	sp, #12
 800713a:	af00      	add	r7, sp, #0
 800713c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800713e:	687b      	ldr	r3, [r7, #4]
 8007140:	4618      	mov	r0, r3
 8007142:	370c      	adds	r7, #12
 8007144:	46bd      	mov	sp, r7
 8007146:	f85d 7b04 	ldr.w	r7, [sp], #4
 800714a:	4770      	bx	lr

0800714c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800714c:	b580      	push	{r7, lr}
 800714e:	b082      	sub	sp, #8
 8007150:	af00      	add	r7, sp, #0
 8007152:	6078      	str	r0, [r7, #4]
 8007154:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	4618      	mov	r0, r3
 800715a:	f7fc f92d 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800715e:	6838      	ldr	r0, [r7, #0]
 8007160:	f000 fd7a 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8007164:	4603      	mov	r3, r0
 8007166:	4619      	mov	r1, r3
 8007168:	6878      	ldr	r0, [r7, #4]
 800716a:	f000 fd80 	bl	8007c6e <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800716e:	6878      	ldr	r0, [r7, #4]
 8007170:	f000 fd9e 	bl	8007cb0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8007174:	4603      	mov	r3, r0
	}
 8007176:	4618      	mov	r0, r3
 8007178:	3708      	adds	r7, #8
 800717a:	46bd      	mov	sp, r7
 800717c:	bd80      	pop	{r7, pc}

0800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
 800717e:	b480      	push	{r7}
 8007180:	b083      	sub	sp, #12
 8007182:	af00      	add	r7, sp, #0
 8007184:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	4618      	mov	r0, r3
 800718a:	370c      	adds	r7, #12
 800718c:	46bd      	mov	sp, r7
 800718e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007192:	4770      	bx	lr

08007194 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8007194:	b580      	push	{r7, lr}
 8007196:	b082      	sub	sp, #8
 8007198:	af00      	add	r7, sp, #0
 800719a:	6078      	str	r0, [r7, #4]
 800719c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800719e:	687b      	ldr	r3, [r7, #4]
 80071a0:	4618      	mov	r0, r3
 80071a2:	f7fc f909 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80071a6:	6838      	ldr	r0, [r7, #0]
 80071a8:	f000 fd9e 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80071ac:	4603      	mov	r3, r0
 80071ae:	4619      	mov	r1, r3
 80071b0:	6878      	ldr	r0, [r7, #4]
 80071b2:	f000 fda4 	bl	8007cfe <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80071b6:	6878      	ldr	r0, [r7, #4]
 80071b8:	f000 fdc2 	bl	8007d40 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80071bc:	4603      	mov	r3, r0
	}
 80071be:	4618      	mov	r0, r3
 80071c0:	3708      	adds	r7, #8
 80071c2:	46bd      	mov	sp, r7
 80071c4:	bd80      	pop	{r7, pc}

080071c6 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 80071c6:	b480      	push	{r7}
 80071c8:	b083      	sub	sp, #12
 80071ca:	af00      	add	r7, sp, #0
 80071cc:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	4618      	mov	r0, r3
 80071d2:	370c      	adds	r7, #12
 80071d4:	46bd      	mov	sp, r7
 80071d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071da:	4770      	bx	lr

080071dc <_ZNSt6vectorI6SymbolSaIS0_EEaSEOS2_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 80071dc:	b590      	push	{r4, r7, lr}
 80071de:	b085      	sub	sp, #20
 80071e0:	af00      	add	r7, sp, #0
 80071e2:	6078      	str	r0, [r7, #4]
 80071e4:	6039      	str	r1, [r7, #0]
	constexpr bool __move_storage =
 80071e6:	2301      	movs	r3, #1
 80071e8:	73fb      	strb	r3, [r7, #15]
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 80071ea:	6838      	ldr	r0, [r7, #0]
 80071ec:	f7ff ffeb 	bl	80071c6 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 80071f0:	4603      	mov	r3, r0
 80071f2:	4622      	mov	r2, r4
 80071f4:	4619      	mov	r1, r3
 80071f6:	6878      	ldr	r0, [r7, #4]
 80071f8:	f000 fdbe 	bl	8007d78 <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>
	return *this;
 80071fc:	687b      	ldr	r3, [r7, #4]
      }
 80071fe:	4618      	mov	r0, r3
 8007200:	3714      	adds	r7, #20
 8007202:	46bd      	mov	sp, r7
 8007204:	bd90      	pop	{r4, r7, pc}

08007206 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8007206:	b580      	push	{r7, lr}
 8007208:	b082      	sub	sp, #8
 800720a:	af00      	add	r7, sp, #0
 800720c:	6078      	str	r0, [r7, #4]
 800720e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	4618      	mov	r0, r3
 8007214:	f7fc f8d0 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8007218:	6838      	ldr	r0, [r7, #0]
 800721a:	f000 fdeb 	bl	8007df4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800721e:	4603      	mov	r3, r0
 8007220:	4619      	mov	r1, r3
 8007222:	6878      	ldr	r0, [r7, #4]
 8007224:	f000 fe1d 	bl	8007e62 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8007228:	6878      	ldr	r0, [r7, #4]
 800722a:	f000 fe3b 	bl	8007ea4 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800722e:	4603      	mov	r3, r0
	}
 8007230:	4618      	mov	r0, r3
 8007232:	3708      	adds	r7, #8
 8007234:	46bd      	mov	sp, r7
 8007236:	bd80      	pop	{r7, pc}

08007238 <_ZSt7forwardIRNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007238:	b480      	push	{r7}
 800723a:	b083      	sub	sp, #12
 800723c:	af00      	add	r7, sp, #0
 800723e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007240:	687b      	ldr	r3, [r7, #4]
 8007242:	4618      	mov	r0, r3
 8007244:	370c      	adds	r7, #12
 8007246:	46bd      	mov	sp, r7
 8007248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800724c:	4770      	bx	lr

0800724e <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIiEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 800724e:	b580      	push	{r7, lr}
 8007250:	b084      	sub	sp, #16
 8007252:	af00      	add	r7, sp, #0
 8007254:	60f8      	str	r0, [r7, #12]
 8007256:	460b      	mov	r3, r1
 8007258:	607a      	str	r2, [r7, #4]
 800725a:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 800725c:	68fb      	ldr	r3, [r7, #12]
 800725e:	4618      	mov	r0, r3
 8007260:	f7fc f8aa 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 8007264:	6879      	ldr	r1, [r7, #4]
 8007266:	68f8      	ldr	r0, [r7, #12]
 8007268:	f000 fe38 	bl	8007edc <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 800726c:	897b      	ldrh	r3, [r7, #10]
 800726e:	b2da      	uxtb	r2, r3
 8007270:	68fb      	ldr	r3, [r7, #12]
 8007272:	761a      	strb	r2, [r3, #24]
	}
 8007274:	bf00      	nop
 8007276:	3710      	adds	r7, #16
 8007278:	46bd      	mov	sp, r7
 800727a:	bd80      	pop	{r7, pc}

0800727c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIfEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 800727c:	b580      	push	{r7, lr}
 800727e:	b084      	sub	sp, #16
 8007280:	af00      	add	r7, sp, #0
 8007282:	60f8      	str	r0, [r7, #12]
 8007284:	460b      	mov	r3, r1
 8007286:	607a      	str	r2, [r7, #4]
 8007288:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 800728a:	68fb      	ldr	r3, [r7, #12]
 800728c:	4618      	mov	r0, r3
 800728e:	f7fc f893 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 8007292:	6879      	ldr	r1, [r7, #4]
 8007294:	68f8      	ldr	r0, [r7, #12]
 8007296:	f000 fe3b 	bl	8007f10 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 800729a:	897b      	ldrh	r3, [r7, #10]
 800729c:	b2da      	uxtb	r2, r3
 800729e:	68fb      	ldr	r3, [r7, #12]
 80072a0:	761a      	strb	r2, [r3, #24]
	}
 80072a2:	bf00      	nop
 80072a4:	3710      	adds	r7, #16
 80072a6:	46bd      	mov	sp, r7
 80072a8:	bd80      	pop	{r7, pc}

080072aa <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE19_M_destructive_copyIbEEvtRKT_>:
        void _M_destructive_copy(unsigned short __rhs_index, const _Up& __rhs)
 80072aa:	b580      	push	{r7, lr}
 80072ac:	b084      	sub	sp, #16
 80072ae:	af00      	add	r7, sp, #0
 80072b0:	60f8      	str	r0, [r7, #12]
 80072b2:	460b      	mov	r3, r1
 80072b4:	607a      	str	r2, [r7, #4]
 80072b6:	817b      	strh	r3, [r7, #10]
	  this->_M_reset();
 80072b8:	68fb      	ldr	r3, [r7, #12]
 80072ba:	4618      	mov	r0, r3
 80072bc:	f7fc f87c 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	  __variant_construct_single(*this, __rhs);
 80072c0:	6879      	ldr	r1, [r7, #4]
 80072c2:	68f8      	ldr	r0, [r7, #12]
 80072c4:	f000 fe3e 	bl	8007f44 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>
	  this->_M_index = __rhs_index;
 80072c8:	897b      	ldrh	r3, [r7, #10]
 80072ca:	b2da      	uxtb	r2, r3
 80072cc:	68fb      	ldr	r3, [r7, #12]
 80072ce:	761a      	strb	r2, [r3, #24]
	}
 80072d0:	bf00      	nop
 80072d2:	3710      	adds	r7, #16
 80072d4:	46bd      	mov	sp, r7
 80072d6:	bd80      	pop	{r7, pc}

080072d8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 80072d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80072da:	b085      	sub	sp, #20
 80072dc:	af00      	add	r7, sp, #0
 80072de:	60f8      	str	r0, [r7, #12]
 80072e0:	7239      	strb	r1, [r7, #8]
 80072e2:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 80072e4:	68fc      	ldr	r4, [r7, #12]
 80072e6:	6878      	ldr	r0, [r7, #4]
 80072e8:	f7fd feb4 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80072ec:	4603      	mov	r3, r0
 80072ee:	461a      	mov	r2, r3
 80072f0:	4631      	mov	r1, r6
 80072f2:	4620      	mov	r0, r4
 80072f4:	f000 fe85 	bl	8008002 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80072f8:	4629      	mov	r1, r5
 80072fa:	68f8      	ldr	r0, [r7, #12]
 80072fc:	f000 fe96 	bl	800802c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 8007300:	68fb      	ldr	r3, [r7, #12]
 8007302:	4618      	mov	r0, r3
 8007304:	3714      	adds	r7, #20
 8007306:	46bd      	mov	sp, r7
 8007308:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800730a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 800730a:	b590      	push	{r4, r7, lr}
 800730c:	b083      	sub	sp, #12
 800730e:	af00      	add	r7, sp, #0
 8007310:	6078      	str	r0, [r7, #4]
 8007312:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 8007314:	6838      	ldr	r0, [r7, #0]
 8007316:	f7fd fe9d 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800731a:	4603      	mov	r3, r0
 800731c:	461a      	mov	r2, r3
 800731e:	4621      	mov	r1, r4
 8007320:	6878      	ldr	r0, [r7, #4]
 8007322:	f7ff ffd9 	bl	80072d8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRKS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	4618      	mov	r0, r3
 800732a:	370c      	adds	r7, #12
 800732c:	46bd      	mov	sp, r7
 800732e:	bd90      	pop	{r4, r7, pc}

08007330 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>:
    static constexpr bool _S_propagate_on_copy_assign()
 8007330:	b480      	push	{r7}
 8007332:	af00      	add	r7, sp, #0
    { return _Base_type::propagate_on_container_copy_assignment::value; }
 8007334:	2300      	movs	r3, #0
 8007336:	4618      	mov	r0, r3
 8007338:	46bd      	mov	sp, r7
 800733a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800733e:	4770      	bx	lr

08007340 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_>:
      return __first;
    }

  template<typename _Tp, typename _Alloc>
    vector<_Tp, _Alloc>&
    vector<_Tp, _Alloc>::
 8007340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007342:	b085      	sub	sp, #20
 8007344:	af00      	add	r7, sp, #0
 8007346:	6078      	str	r0, [r7, #4]
 8007348:	6039      	str	r1, [r7, #0]
    operator=(const vector<_Tp, _Alloc>& __x)
    {
      if (&__x != this)
 800734a:	683a      	ldr	r2, [r7, #0]
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	429a      	cmp	r2, r3
 8007350:	f000 80e6 	beq.w	8007520 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1e0>
	{
	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
#if __cplusplus >= 201103L
	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 8007354:	f7ff ffec 	bl	8007330 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E27_S_propagate_on_copy_assignEv>
 8007358:	4603      	mov	r3, r0
 800735a:	2b00      	cmp	r3, #0
 800735c:	d043      	beq.n	80073e6 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0xa6>
	    {
	      if (!_Alloc_traits::_S_always_equal()
 800735e:	f7f9 ff93 	bl	8001288 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E15_S_always_equalEv>
 8007362:	4603      	mov	r3, r0
 8007364:	f083 0301 	eor.w	r3, r3, #1
 8007368:	b2db      	uxtb	r3, r3
	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 800736a:	2b00      	cmp	r3, #0
 800736c:	d012      	beq.n	8007394 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 800736e:	687b      	ldr	r3, [r7, #4]
 8007370:	4618      	mov	r0, r3
 8007372:	f000 fe67 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007376:	4604      	mov	r4, r0
 8007378:	683b      	ldr	r3, [r7, #0]
 800737a:	4618      	mov	r0, r3
 800737c:	f000 fe6d 	bl	800805a <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007380:	4603      	mov	r3, r0
 8007382:	4619      	mov	r1, r3
 8007384:	4620      	mov	r0, r4
 8007386:	f000 fe73 	bl	8008070 <_ZStneRKSaI6SymbolES2_>
 800738a:	4603      	mov	r3, r0
 800738c:	2b00      	cmp	r3, #0
 800738e:	d001      	beq.n	8007394 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x54>
 8007390:	2301      	movs	r3, #1
 8007392:	e000      	b.n	8007396 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x56>
 8007394:	2300      	movs	r3, #0
	      if (!_Alloc_traits::_S_always_equal()
 8007396:	2b00      	cmp	r3, #0
 8007398:	d017      	beq.n	80073ca <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x8a>
	        {
		  // replacement allocator cannot free existing storage
		  this->clear();
 800739a:	6878      	ldr	r0, [r7, #4]
 800739c:	f000 fe74 	bl	8008088 <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>
		  _M_deallocate(this->_M_impl._M_start,
 80073a0:	6878      	ldr	r0, [r7, #4]
 80073a2:	687b      	ldr	r3, [r7, #4]
 80073a4:	6819      	ldr	r1, [r3, #0]
				this->_M_impl._M_end_of_storage
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	689a      	ldr	r2, [r3, #8]
				- this->_M_impl._M_start);
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	681b      	ldr	r3, [r3, #0]
 80073ae:	1ad3      	subs	r3, r2, r3
 80073b0:	115b      	asrs	r3, r3, #5
		  _M_deallocate(this->_M_impl._M_start,
 80073b2:	461a      	mov	r2, r3
 80073b4:	f000 fe76 	bl	80080a4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
		  this->_M_impl._M_start = nullptr;
 80073b8:	687b      	ldr	r3, [r7, #4]
 80073ba:	2200      	movs	r2, #0
 80073bc:	601a      	str	r2, [r3, #0]
		  this->_M_impl._M_finish = nullptr;
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	2200      	movs	r2, #0
 80073c2:	605a      	str	r2, [r3, #4]
		  this->_M_impl._M_end_of_storage = nullptr;
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	2200      	movs	r2, #0
 80073c8:	609a      	str	r2, [r3, #8]
		}
	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	4618      	mov	r0, r3
 80073ce:	f000 fe39 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80073d2:	4604      	mov	r4, r0
 80073d4:	683b      	ldr	r3, [r7, #0]
 80073d6:	4618      	mov	r0, r3
 80073d8:	f000 fe3f 	bl	800805a <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80073dc:	4603      	mov	r3, r0
 80073de:	4619      	mov	r1, r3
 80073e0:	4620      	mov	r0, r4
 80073e2:	f000 fe72 	bl	80080ca <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>
				   __x._M_get_Tp_allocator());
	    }
#endif
	  const size_type __xlen = __x.size();
 80073e6:	6838      	ldr	r0, [r7, #0]
 80073e8:	f000 fe7d 	bl	80080e6 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80073ec:	60f8      	str	r0, [r7, #12]
	  if (__xlen > capacity())
 80073ee:	6878      	ldr	r0, [r7, #4]
 80073f0:	f000 fe89 	bl	8008106 <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>
 80073f4:	4602      	mov	r2, r0
 80073f6:	68fb      	ldr	r3, [r7, #12]
 80073f8:	4293      	cmp	r3, r2
 80073fa:	bf8c      	ite	hi
 80073fc:	2301      	movhi	r3, #1
 80073fe:	2300      	movls	r3, #0
 8007400:	b2db      	uxtb	r3, r3
 8007402:	2b00      	cmp	r3, #0
 8007404:	d032      	beq.n	800746c <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x12c>
	    {
	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 8007406:	6838      	ldr	r0, [r7, #0]
 8007408:	f000 fe8d 	bl	8008126 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 800740c:	4604      	mov	r4, r0
 800740e:	6838      	ldr	r0, [r7, #0]
 8007410:	f000 fe9d 	bl	800814e <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 8007414:	4603      	mov	r3, r0
 8007416:	4622      	mov	r2, r4
 8007418:	68f9      	ldr	r1, [r7, #12]
 800741a:	6878      	ldr	r0, [r7, #4]
 800741c:	f000 feab 	bl	8008176 <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>
 8007420:	60b8      	str	r0, [r7, #8]
						   __x.end());
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8007422:	687b      	ldr	r3, [r7, #4]
 8007424:	681c      	ldr	r4, [r3, #0]
 8007426:	687b      	ldr	r3, [r7, #4]
 8007428:	685d      	ldr	r5, [r3, #4]
			    _M_get_Tp_allocator());
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	4618      	mov	r0, r3
 800742e:	f000 fe09 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007432:	4603      	mov	r3, r0
	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8007434:	461a      	mov	r2, r3
 8007436:	4629      	mov	r1, r5
 8007438:	4620      	mov	r0, r4
 800743a:	f000 feb8 	bl	80081ae <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	      _M_deallocate(this->_M_impl._M_start,
 800743e:	6878      	ldr	r0, [r7, #4]
 8007440:	687b      	ldr	r3, [r7, #4]
 8007442:	6819      	ldr	r1, [r3, #0]
			    this->_M_impl._M_end_of_storage
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	689a      	ldr	r2, [r3, #8]
			    - this->_M_impl._M_start);
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	681b      	ldr	r3, [r3, #0]
 800744c:	1ad3      	subs	r3, r2, r3
 800744e:	115b      	asrs	r3, r3, #5
	      _M_deallocate(this->_M_impl._M_start,
 8007450:	461a      	mov	r2, r3
 8007452:	f000 fe27 	bl	80080a4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
	      this->_M_impl._M_start = __tmp;
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	68ba      	ldr	r2, [r7, #8]
 800745a:	601a      	str	r2, [r3, #0]
	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 800745c:	687b      	ldr	r3, [r7, #4]
 800745e:	681a      	ldr	r2, [r3, #0]
 8007460:	68fb      	ldr	r3, [r7, #12]
 8007462:	015b      	lsls	r3, r3, #5
 8007464:	441a      	add	r2, r3
 8007466:	687b      	ldr	r3, [r7, #4]
 8007468:	609a      	str	r2, [r3, #8]
 800746a:	e052      	b.n	8007512 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	    }
	  else if (size() >= __xlen)
 800746c:	6878      	ldr	r0, [r7, #4]
 800746e:	f000 fe3a 	bl	80080e6 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8007472:	4602      	mov	r2, r0
 8007474:	68fb      	ldr	r3, [r7, #12]
 8007476:	4293      	cmp	r3, r2
 8007478:	bf94      	ite	ls
 800747a:	2301      	movls	r3, #1
 800747c:	2300      	movhi	r3, #0
 800747e:	b2db      	uxtb	r3, r3
 8007480:	2b00      	cmp	r3, #0
 8007482:	d020      	beq.n	80074c6 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x186>
	    {
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 8007484:	6838      	ldr	r0, [r7, #0]
 8007486:	f000 fe4e 	bl	8008126 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 800748a:	4604      	mov	r4, r0
 800748c:	6838      	ldr	r0, [r7, #0]
 800748e:	f000 fe5e 	bl	800814e <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 8007492:	4605      	mov	r5, r0
 8007494:	6878      	ldr	r0, [r7, #4]
 8007496:	f000 fe98 	bl	80081ca <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>
 800749a:	4603      	mov	r3, r0
 800749c:	461a      	mov	r2, r3
 800749e:	4629      	mov	r1, r5
 80074a0:	4620      	mov	r0, r4
 80074a2:	f000 fea2 	bl	80081ea <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>
 80074a6:	4604      	mov	r4, r0
 80074a8:	6878      	ldr	r0, [r7, #4]
 80074aa:	f000 feb6 	bl	800821a <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>
 80074ae:	4605      	mov	r5, r0
			    end(), _M_get_Tp_allocator());
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	4618      	mov	r0, r3
 80074b4:	f000 fdc6 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80074b8:	4603      	mov	r3, r0
	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 80074ba:	461a      	mov	r2, r3
 80074bc:	4629      	mov	r1, r5
 80074be:	4620      	mov	r0, r4
 80074c0:	f000 febc 	bl	800823c <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>
 80074c4:	e025      	b.n	8007512 <_ZNSt6vectorI6SymbolSaIS0_EEaSERKS2_+0x1d2>
	    }
	  else
	    {
	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 80074c6:	683b      	ldr	r3, [r7, #0]
 80074c8:	681d      	ldr	r5, [r3, #0]
 80074ca:	683b      	ldr	r3, [r7, #0]
 80074cc:	681c      	ldr	r4, [r3, #0]
 80074ce:	6878      	ldr	r0, [r7, #4]
 80074d0:	f000 fe09 	bl	80080e6 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80074d4:	4603      	mov	r3, r0
 80074d6:	015b      	lsls	r3, r3, #5
 80074d8:	18e1      	adds	r1, r4, r3
 80074da:	687b      	ldr	r3, [r7, #4]
 80074dc:	681b      	ldr	r3, [r3, #0]
 80074de:	461a      	mov	r2, r3
 80074e0:	4628      	mov	r0, r5
 80074e2:	f000 feb9 	bl	8008258 <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>
			this->_M_impl._M_start);
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 80074e6:	683b      	ldr	r3, [r7, #0]
 80074e8:	681c      	ldr	r4, [r3, #0]
 80074ea:	6878      	ldr	r0, [r7, #4]
 80074ec:	f000 fdfb 	bl	80080e6 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80074f0:	4603      	mov	r3, r0
 80074f2:	015b      	lsls	r3, r3, #5
 80074f4:	441c      	add	r4, r3
					  __x._M_impl._M_finish,
 80074f6:	683b      	ldr	r3, [r7, #0]
 80074f8:	685d      	ldr	r5, [r3, #4]
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	685e      	ldr	r6, [r3, #4]
					  this->_M_impl._M_finish,
					  _M_get_Tp_allocator());
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	4618      	mov	r0, r3
 8007502:	f000 fd9f 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007506:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 8007508:	4632      	mov	r2, r6
 800750a:	4629      	mov	r1, r5
 800750c:	4620      	mov	r0, r4
 800750e:	f000 febb 	bl	8008288 <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>
	    }
	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 8007512:	687b      	ldr	r3, [r7, #4]
 8007514:	681a      	ldr	r2, [r3, #0]
 8007516:	68fb      	ldr	r3, [r7, #12]
 8007518:	015b      	lsls	r3, r3, #5
 800751a:	441a      	add	r2, r3
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	605a      	str	r2, [r3, #4]
	}
      return *this;
 8007520:	687b      	ldr	r3, [r7, #4]
    }
 8007522:	4618      	mov	r0, r3
 8007524:	3714      	adds	r7, #20
 8007526:	46bd      	mov	sp, r7
 8007528:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800752a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj4EJRKS9_ES9_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 800752a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800752c:	b085      	sub	sp, #20
 800752e:	af00      	add	r7, sp, #0
 8007530:	60f8      	str	r0, [r7, #12]
 8007532:	7239      	strb	r1, [r7, #8]
 8007534:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8007536:	68fc      	ldr	r4, [r7, #12]
 8007538:	6878      	ldr	r0, [r7, #4]
 800753a:	f7fd fdc0 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800753e:	4603      	mov	r3, r0
 8007540:	461a      	mov	r2, r3
 8007542:	4631      	mov	r1, r6
 8007544:	4620      	mov	r0, r4
 8007546:	f000 fef4 	bl	8008332 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 800754a:	4629      	mov	r1, r5
 800754c:	68f8      	ldr	r0, [r7, #12]
 800754e:	f000 fd6d 	bl	800802c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 8007552:	68fb      	ldr	r3, [r7, #12]
 8007554:	4618      	mov	r0, r3
 8007556:	3714      	adds	r7, #20
 8007558:	46bd      	mov	sp, r7
 800755a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800755c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRKS9_vvS9_vEEOT_>:
	variant(_Tp&& __t)
 800755c:	b590      	push	{r4, r7, lr}
 800755e:	b083      	sub	sp, #12
 8007560:	af00      	add	r7, sp, #0
 8007562:	6078      	str	r0, [r7, #4]
 8007564:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 8007566:	6838      	ldr	r0, [r7, #0]
 8007568:	f7fd fda9 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 800756c:	4603      	mov	r3, r0
 800756e:	461a      	mov	r2, r3
 8007570:	4621      	mov	r1, r4
 8007572:	6878      	ldr	r0, [r7, #4]
 8007574:	f7ff ffd9 	bl	800752a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj4EJRKS9_ES9_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8007578:	687b      	ldr	r3, [r7, #4]
 800757a:	4618      	mov	r0, r3
 800757c:	370c      	adds	r7, #12
 800757e:	46bd      	mov	sp, r7
 8007580:	bd90      	pop	{r4, r7, pc}

08007582 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8007582:	b480      	push	{r7}
 8007584:	b083      	sub	sp, #12
 8007586:	af00      	add	r7, sp, #0
 8007588:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	4618      	mov	r0, r3
 800758e:	370c      	adds	r7, #12
 8007590:	46bd      	mov	sp, r7
 8007592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007596:	4770      	bx	lr

08007598 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr()
 8007598:	b580      	push	{r7, lr}
 800759a:	b082      	sub	sp, #8
 800759c:	af00      	add	r7, sp, #0
 800759e:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80075a0:	687b      	ldr	r3, [r7, #4]
 80075a2:	3310      	adds	r3, #16
 80075a4:	4618      	mov	r0, r3
 80075a6:	f000 fed9 	bl	800835c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 80075aa:	4603      	mov	r3, r0
 80075ac:	4618      	mov	r0, r3
 80075ae:	3708      	adds	r7, #8
 80075b0:	46bd      	mov	sp, r7
 80075b2:	bd80      	pop	{r7, pc}

080075b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static void
	destroy(allocator_type& __a, _Up* __p)
 80075b4:	b580      	push	{r7, lr}
 80075b6:	b082      	sub	sp, #8
 80075b8:	af00      	add	r7, sp, #0
 80075ba:	6078      	str	r0, [r7, #4]
 80075bc:	6039      	str	r1, [r7, #0]
	noexcept(noexcept(__a.destroy(__p)))
	{ __a.destroy(__p); }
 80075be:	6839      	ldr	r1, [r7, #0]
 80075c0:	6878      	ldr	r0, [r7, #4]
 80075c2:	f000 fed7 	bl	8008374 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>
 80075c6:	bf00      	nop
 80075c8:	3708      	adds	r7, #8
 80075ca:	46bd      	mov	sp, r7
 80075cc:	bd80      	pop	{r7, pc}

080075ce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80075ce:	b580      	push	{r7, lr}
 80075d0:	b084      	sub	sp, #16
 80075d2:	af00      	add	r7, sp, #0
 80075d4:	60f8      	str	r0, [r7, #12]
 80075d6:	60b9      	str	r1, [r7, #8]
 80075d8:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80075da:	687a      	ldr	r2, [r7, #4]
 80075dc:	68b9      	ldr	r1, [r7, #8]
 80075de:	68f8      	ldr	r0, [r7, #12]
 80075e0:	f000 fed3 	bl	800838a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>
 80075e4:	bf00      	nop
 80075e6:	3710      	adds	r7, #16
 80075e8:	46bd      	mov	sp, r7
 80075ea:	bd80      	pop	{r7, pc}

080075ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 80075ec:	b580      	push	{r7, lr}
 80075ee:	b084      	sub	sp, #16
 80075f0:	af00      	add	r7, sp, #0
 80075f2:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 80075f4:	6878      	ldr	r0, [r7, #4]
 80075f6:	f000 fed4 	bl	80083a2 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 80075fa:	4602      	mov	r2, r0
 80075fc:	f107 030c 	add.w	r3, r7, #12
 8007600:	4611      	mov	r1, r2
 8007602:	4618      	mov	r0, r3
 8007604:	f7fd ff76 	bl	80054f4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8007608:	4603      	mov	r3, r0
      }
 800760a:	4618      	mov	r0, r3
 800760c:	3710      	adds	r7, #16
 800760e:	46bd      	mov	sp, r7
 8007610:	bd80      	pop	{r7, pc}

08007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007612:	b480      	push	{r7}
 8007614:	b083      	sub	sp, #12
 8007616:	af00      	add	r7, sp, #0
 8007618:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800761a:	687b      	ldr	r3, [r7, #4]
 800761c:	4618      	mov	r0, r3
 800761e:	370c      	adds	r7, #12
 8007620:	46bd      	mov	sp, r7
 8007622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007626:	4770      	bx	lr

08007628 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8007628:	b580      	push	{r7, lr}
 800762a:	b084      	sub	sp, #16
 800762c:	af00      	add	r7, sp, #0
 800762e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8007630:	687b      	ldr	r3, [r7, #4]
 8007632:	68da      	ldr	r2, [r3, #12]
 8007634:	f107 030c 	add.w	r3, r7, #12
 8007638:	4611      	mov	r1, r2
 800763a:	4618      	mov	r0, r3
 800763c:	f7fd fe28 	bl	8005290 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8007640:	68fb      	ldr	r3, [r7, #12]
 8007642:	4618      	mov	r0, r3
 8007644:	3710      	adds	r7, #16
 8007646:	46bd      	mov	sp, r7
 8007648:	bd80      	pop	{r7, pc}

0800764a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800764a:	b480      	push	{r7}
 800764c:	b083      	sub	sp, #12
 800764e:	af00      	add	r7, sp, #0
 8007650:	6078      	str	r0, [r7, #4]
 8007652:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	681a      	ldr	r2, [r3, #0]
 8007658:	683b      	ldr	r3, [r7, #0]
 800765a:	681b      	ldr	r3, [r3, #0]
 800765c:	429a      	cmp	r2, r3
 800765e:	bf0c      	ite	eq
 8007660:	2301      	moveq	r3, #1
 8007662:	2300      	movne	r3, #0
 8007664:	b2db      	uxtb	r3, r3
 8007666:	4618      	mov	r0, r3
 8007668:	370c      	adds	r7, #12
 800766a:	46bd      	mov	sp, r7
 800766c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007670:	4770      	bx	lr

08007672 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8007672:	b580      	push	{r7, lr}
 8007674:	b084      	sub	sp, #16
 8007676:	af00      	add	r7, sp, #0
 8007678:	60f8      	str	r0, [r7, #12]
 800767a:	60b9      	str	r1, [r7, #8]
 800767c:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 800767e:	68b8      	ldr	r0, [r7, #8]
 8007680:	f000 fe9d 	bl	80083be <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007684:	4603      	mov	r3, r0
 8007686:	681a      	ldr	r2, [r3, #0]
 8007688:	68fb      	ldr	r3, [r7, #12]
 800768a:	601a      	str	r2, [r3, #0]
 800768c:	6878      	ldr	r0, [r7, #4]
 800768e:	f7ff ffc0 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8007692:	4603      	mov	r3, r0
 8007694:	681a      	ldr	r2, [r3, #0]
 8007696:	68fb      	ldr	r3, [r7, #12]
 8007698:	605a      	str	r2, [r3, #4]
 800769a:	68fb      	ldr	r3, [r7, #12]
 800769c:	4618      	mov	r0, r3
 800769e:	3710      	adds	r7, #16
 80076a0:	46bd      	mov	sp, r7
 80076a2:	bd80      	pop	{r7, pc}

080076a4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 80076a4:	b580      	push	{r7, lr}
 80076a6:	b084      	sub	sp, #16
 80076a8:	af00      	add	r7, sp, #0
 80076aa:	6078      	str	r0, [r7, #4]
 80076ac:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 80076ae:	6878      	ldr	r0, [r7, #4]
 80076b0:	f000 fe90 	bl	80083d4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 80076b4:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 80076b6:	6838      	ldr	r0, [r7, #0]
 80076b8:	f7fd ff28 	bl	800550c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80076bc:	4603      	mov	r3, r0
 80076be:	461a      	mov	r2, r3
 80076c0:	68f9      	ldr	r1, [r7, #12]
 80076c2:	6878      	ldr	r0, [r7, #4]
 80076c4:	f000 fe97 	bl	80083f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 80076c8:	68fb      	ldr	r3, [r7, #12]
	}
 80076ca:	4618      	mov	r0, r3
 80076cc:	3710      	adds	r7, #16
 80076ce:	46bd      	mov	sp, r7
 80076d0:	bd80      	pop	{r7, pc}

080076d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 80076d2:	b480      	push	{r7}
 80076d4:	b083      	sub	sp, #12
 80076d6:	af00      	add	r7, sp, #0
 80076d8:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	4618      	mov	r0, r3
 80076de:	370c      	adds	r7, #12
 80076e0:	46bd      	mov	sp, r7
 80076e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076e6:	4770      	bx	lr

080076e8 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr()
 80076e8:	b580      	push	{r7, lr}
 80076ea:	b082      	sub	sp, #8
 80076ec:	af00      	add	r7, sp, #0
 80076ee:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80076f0:	687b      	ldr	r3, [r7, #4]
 80076f2:	3310      	adds	r3, #16
 80076f4:	4618      	mov	r0, r3
 80076f6:	f000 fe9e 	bl	8008436 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 80076fa:	4603      	mov	r3, r0
 80076fc:	4618      	mov	r0, r3
 80076fe:	3708      	adds	r7, #8
 8007700:	46bd      	mov	sp, r7
 8007702:	bd80      	pop	{r7, pc}

08007704 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8007704:	b580      	push	{r7, lr}
 8007706:	b082      	sub	sp, #8
 8007708:	af00      	add	r7, sp, #0
 800770a:	6078      	str	r0, [r7, #4]
 800770c:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 800770e:	6839      	ldr	r1, [r7, #0]
 8007710:	6878      	ldr	r0, [r7, #4]
 8007712:	f000 fe9c 	bl	800844e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>
 8007716:	bf00      	nop
 8007718:	3708      	adds	r7, #8
 800771a:	46bd      	mov	sp, r7
 800771c:	bd80      	pop	{r7, pc}

0800771e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800771e:	b580      	push	{r7, lr}
 8007720:	b084      	sub	sp, #16
 8007722:	af00      	add	r7, sp, #0
 8007724:	60f8      	str	r0, [r7, #12]
 8007726:	60b9      	str	r1, [r7, #8]
 8007728:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800772a:	687a      	ldr	r2, [r7, #4]
 800772c:	68b9      	ldr	r1, [r7, #8]
 800772e:	68f8      	ldr	r0, [r7, #12]
 8007730:	f000 fe99 	bl	8008466 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>
 8007734:	bf00      	nop
 8007736:	3710      	adds	r7, #16
 8007738:	46bd      	mov	sp, r7
 800773a:	bd80      	pop	{r7, pc}

0800773c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 800773c:	b580      	push	{r7, lr}
 800773e:	b084      	sub	sp, #16
 8007740:	af00      	add	r7, sp, #0
 8007742:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8007744:	6878      	ldr	r0, [r7, #4]
 8007746:	f000 fe9a 	bl	800847e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 800774a:	4602      	mov	r2, r0
 800774c:	f107 030c 	add.w	r3, r7, #12
 8007750:	4611      	mov	r1, r2
 8007752:	4618      	mov	r0, r3
 8007754:	f7fe f8c4 	bl	80058e0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 8007758:	4603      	mov	r3, r0
      }
 800775a:	4618      	mov	r0, r3
 800775c:	3710      	adds	r7, #16
 800775e:	46bd      	mov	sp, r7
 8007760:	bd80      	pop	{r7, pc}

08007762 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 8007762:	b580      	push	{r7, lr}
 8007764:	b082      	sub	sp, #8
 8007766:	af00      	add	r7, sp, #0
 8007768:	6078      	str	r0, [r7, #4]
 800776a:	6039      	str	r1, [r7, #0]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
 800776c:	6839      	ldr	r1, [r7, #0]
 800776e:	6878      	ldr	r0, [r7, #4]
 8007770:	f01c f9e2 	bl	8023b38 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 8007774:	4603      	mov	r3, r0
 8007776:	0fdb      	lsrs	r3, r3, #31
 8007778:	b2db      	uxtb	r3, r3
 800777a:	4618      	mov	r0, r3
 800777c:	3708      	adds	r7, #8
 800777e:	46bd      	mov	sp, r7
 8007780:	bd80      	pop	{r7, pc}

08007782 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8007782:	b580      	push	{r7, lr}
 8007784:	b084      	sub	sp, #16
 8007786:	af00      	add	r7, sp, #0
 8007788:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 800778a:	687b      	ldr	r3, [r7, #4]
 800778c:	68da      	ldr	r2, [r3, #12]
 800778e:	f107 030c 	add.w	r3, r7, #12
 8007792:	4611      	mov	r1, r2
 8007794:	4618      	mov	r0, r3
 8007796:	f7fd ff71 	bl	800567c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 800779a:	68fb      	ldr	r3, [r7, #12]
 800779c:	4618      	mov	r0, r3
 800779e:	3710      	adds	r7, #16
 80077a0:	46bd      	mov	sp, r7
 80077a2:	bd80      	pop	{r7, pc}

080077a4 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80077a4:	b480      	push	{r7}
 80077a6:	b083      	sub	sp, #12
 80077a8:	af00      	add	r7, sp, #0
 80077aa:	6078      	str	r0, [r7, #4]
 80077ac:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	681a      	ldr	r2, [r3, #0]
 80077b2:	683b      	ldr	r3, [r7, #0]
 80077b4:	681b      	ldr	r3, [r3, #0]
 80077b6:	429a      	cmp	r2, r3
 80077b8:	bf0c      	ite	eq
 80077ba:	2301      	moveq	r3, #1
 80077bc:	2300      	movne	r3, #0
 80077be:	b2db      	uxtb	r3, r3
 80077c0:	4618      	mov	r0, r3
 80077c2:	370c      	adds	r7, #12
 80077c4:	46bd      	mov	sp, r7
 80077c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077ca:	4770      	bx	lr

080077cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80077cc:	b580      	push	{r7, lr}
 80077ce:	b084      	sub	sp, #16
 80077d0:	af00      	add	r7, sp, #0
 80077d2:	60f8      	str	r0, [r7, #12]
 80077d4:	60b9      	str	r1, [r7, #8]
 80077d6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80077d8:	68b8      	ldr	r0, [r7, #8]
 80077da:	f000 fe5e 	bl	800849a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>
 80077de:	4603      	mov	r3, r0
 80077e0:	681a      	ldr	r2, [r3, #0]
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	601a      	str	r2, [r3, #0]
 80077e6:	6878      	ldr	r0, [r7, #4]
 80077e8:	f7ff ff13 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80077ec:	4603      	mov	r3, r0
 80077ee:	681a      	ldr	r2, [r3, #0]
 80077f0:	68fb      	ldr	r3, [r7, #12]
 80077f2:	605a      	str	r2, [r3, #4]
 80077f4:	68fb      	ldr	r3, [r7, #12]
 80077f6:	4618      	mov	r0, r3
 80077f8:	3710      	adds	r7, #16
 80077fa:	46bd      	mov	sp, r7
 80077fc:	bd80      	pop	{r7, pc}

080077fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 80077fe:	b580      	push	{r7, lr}
 8007800:	b084      	sub	sp, #16
 8007802:	af00      	add	r7, sp, #0
 8007804:	6078      	str	r0, [r7, #4]
 8007806:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8007808:	6878      	ldr	r0, [r7, #4]
 800780a:	f000 fe51 	bl	80084b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 800780e:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8007810:	6838      	ldr	r0, [r7, #0]
 8007812:	f7fe f871 	bl	80058f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8007816:	4603      	mov	r3, r0
 8007818:	461a      	mov	r2, r3
 800781a:	68f9      	ldr	r1, [r7, #12]
 800781c:	6878      	ldr	r0, [r7, #4]
 800781e:	f000 fe58 	bl	80084d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 8007822:	68fb      	ldr	r3, [r7, #12]
	}
 8007824:	4618      	mov	r0, r3
 8007826:	3710      	adds	r7, #16
 8007828:	46bd      	mov	sp, r7
 800782a:	bd80      	pop	{r7, pc}

0800782c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800782c:	b480      	push	{r7}
 800782e:	b083      	sub	sp, #12
 8007830:	af00      	add	r7, sp, #0
 8007832:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	4618      	mov	r0, r3
 8007838:	370c      	adds	r7, #12
 800783a:	46bd      	mov	sp, r7
 800783c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007840:	4770      	bx	lr

08007842 <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr()
 8007842:	b580      	push	{r7, lr}
 8007844:	b082      	sub	sp, #8
 8007846:	af00      	add	r7, sp, #0
 8007848:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	3310      	adds	r3, #16
 800784e:	4618      	mov	r0, r3
 8007850:	f000 fe5f 	bl	8008512 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 8007854:	4603      	mov	r3, r0
 8007856:	4618      	mov	r0, r3
 8007858:	3708      	adds	r7, #8
 800785a:	46bd      	mov	sp, r7
 800785c:	bd80      	pop	{r7, pc}

0800785e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800785e:	b580      	push	{r7, lr}
 8007860:	b082      	sub	sp, #8
 8007862:	af00      	add	r7, sp, #0
 8007864:	6078      	str	r0, [r7, #4]
 8007866:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8007868:	6839      	ldr	r1, [r7, #0]
 800786a:	6878      	ldr	r0, [r7, #4]
 800786c:	f000 fe5d 	bl	800852a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>
 8007870:	bf00      	nop
 8007872:	3708      	adds	r7, #8
 8007874:	46bd      	mov	sp, r7
 8007876:	bd80      	pop	{r7, pc}

08007878 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8007878:	b580      	push	{r7, lr}
 800787a:	b084      	sub	sp, #16
 800787c:	af00      	add	r7, sp, #0
 800787e:	60f8      	str	r0, [r7, #12]
 8007880:	60b9      	str	r1, [r7, #8]
 8007882:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8007884:	687a      	ldr	r2, [r7, #4]
 8007886:	68b9      	ldr	r1, [r7, #8]
 8007888:	68f8      	ldr	r0, [r7, #12]
 800788a:	f000 fe59 	bl	8008540 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>
 800788e:	bf00      	nop
 8007890:	3710      	adds	r7, #16
 8007892:	46bd      	mov	sp, r7
 8007894:	bd80      	pop	{r7, pc}

08007896 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 8007896:	b580      	push	{r7, lr}
 8007898:	b084      	sub	sp, #16
 800789a:	af00      	add	r7, sp, #0
 800789c:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800789e:	6878      	ldr	r0, [r7, #4]
 80078a0:	f000 fe5a 	bl	8008558 <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 80078a4:	4602      	mov	r2, r0
 80078a6:	f107 030c 	add.w	r3, r7, #12
 80078aa:	4611      	mov	r1, r2
 80078ac:	4618      	mov	r0, r3
 80078ae:	f7fe fa01 	bl	8005cb4 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 80078b2:	4603      	mov	r3, r0
      }
 80078b4:	4618      	mov	r0, r3
 80078b6:	3710      	adds	r7, #16
 80078b8:	46bd      	mov	sp, r7
 80078ba:	bd80      	pop	{r7, pc}

080078bc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80078bc:	b580      	push	{r7, lr}
 80078be:	b084      	sub	sp, #16
 80078c0:	af00      	add	r7, sp, #0
 80078c2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80078c4:	687b      	ldr	r3, [r7, #4]
 80078c6:	68da      	ldr	r2, [r3, #12]
 80078c8:	f107 030c 	add.w	r3, r7, #12
 80078cc:	4611      	mov	r1, r2
 80078ce:	4618      	mov	r0, r3
 80078d0:	f7fe f8be 	bl	8005a50 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 80078d4:	68fb      	ldr	r3, [r7, #12]
 80078d6:	4618      	mov	r0, r3
 80078d8:	3710      	adds	r7, #16
 80078da:	46bd      	mov	sp, r7
 80078dc:	bd80      	pop	{r7, pc}

080078de <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80078de:	b480      	push	{r7}
 80078e0:	b083      	sub	sp, #12
 80078e2:	af00      	add	r7, sp, #0
 80078e4:	6078      	str	r0, [r7, #4]
 80078e6:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80078e8:	687b      	ldr	r3, [r7, #4]
 80078ea:	681a      	ldr	r2, [r3, #0]
 80078ec:	683b      	ldr	r3, [r7, #0]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	429a      	cmp	r2, r3
 80078f2:	bf0c      	ite	eq
 80078f4:	2301      	moveq	r3, #1
 80078f6:	2300      	movne	r3, #0
 80078f8:	b2db      	uxtb	r3, r3
 80078fa:	4618      	mov	r0, r3
 80078fc:	370c      	adds	r7, #12
 80078fe:	46bd      	mov	sp, r7
 8007900:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007904:	4770      	bx	lr

08007906 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8007906:	b580      	push	{r7, lr}
 8007908:	b084      	sub	sp, #16
 800790a:	af00      	add	r7, sp, #0
 800790c:	60f8      	str	r0, [r7, #12]
 800790e:	60b9      	str	r1, [r7, #8]
 8007910:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8007912:	68b8      	ldr	r0, [r7, #8]
 8007914:	f000 fe2e 	bl	8008574 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007918:	4603      	mov	r3, r0
 800791a:	681a      	ldr	r2, [r3, #0]
 800791c:	68fb      	ldr	r3, [r7, #12]
 800791e:	601a      	str	r2, [r3, #0]
 8007920:	6878      	ldr	r0, [r7, #4]
 8007922:	f7ff fe76 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8007926:	4603      	mov	r3, r0
 8007928:	681a      	ldr	r2, [r3, #0]
 800792a:	68fb      	ldr	r3, [r7, #12]
 800792c:	605a      	str	r2, [r3, #4]
 800792e:	68fb      	ldr	r3, [r7, #12]
 8007930:	4618      	mov	r0, r3
 8007932:	3710      	adds	r7, #16
 8007934:	46bd      	mov	sp, r7
 8007936:	bd80      	pop	{r7, pc}

08007938 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8007938:	b580      	push	{r7, lr}
 800793a:	b084      	sub	sp, #16
 800793c:	af00      	add	r7, sp, #0
 800793e:	6078      	str	r0, [r7, #4]
 8007940:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8007942:	6878      	ldr	r0, [r7, #4]
 8007944:	f000 fe21 	bl	800858a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 8007948:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 800794a:	6838      	ldr	r0, [r7, #0]
 800794c:	f7fe f9be 	bl	8005ccc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007950:	4603      	mov	r3, r0
 8007952:	461a      	mov	r2, r3
 8007954:	68f9      	ldr	r1, [r7, #12]
 8007956:	6878      	ldr	r0, [r7, #4]
 8007958:	f000 fe28 	bl	80085ac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 800795c:	68fb      	ldr	r3, [r7, #12]
	}
 800795e:	4618      	mov	r0, r3
 8007960:	3710      	adds	r7, #16
 8007962:	46bd      	mov	sp, r7
 8007964:	bd80      	pop	{r7, pc}

08007966 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 8007966:	b590      	push	{r4, r7, lr}
 8007968:	b083      	sub	sp, #12
 800796a:	af00      	add	r7, sp, #0
 800796c:	6078      	str	r0, [r7, #4]
 800796e:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8007970:	6838      	ldr	r0, [r7, #0]
 8007972:	f000 fe3b 	bl	80085ec <_ZSt11__addressofIiEPT_RS0_>
 8007976:	4603      	mov	r3, r0
 8007978:	4618      	mov	r0, r3
 800797a:	f000 fe42 	bl	8008602 <_ZSt8_DestroyIiEvPT_>
	    return {};
 800797e:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8007980:	4618      	mov	r0, r3
 8007982:	370c      	adds	r7, #12
 8007984:	46bd      	mov	sp, r7
 8007986:	bd90      	pop	{r4, r7, pc}

08007988 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 8007988:	b590      	push	{r4, r7, lr}
 800798a:	b083      	sub	sp, #12
 800798c:	af00      	add	r7, sp, #0
 800798e:	6078      	str	r0, [r7, #4]
 8007990:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8007992:	6838      	ldr	r0, [r7, #0]
 8007994:	f000 fe3f 	bl	8008616 <_ZSt11__addressofIfEPT_RS0_>
 8007998:	4603      	mov	r3, r0
 800799a:	4618      	mov	r0, r3
 800799c:	f000 fe46 	bl	800862c <_ZSt8_DestroyIfEvPT_>
	    return {};
 80079a0:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80079a2:	4618      	mov	r0, r3
 80079a4:	370c      	adds	r7, #12
 80079a6:	46bd      	mov	sp, r7
 80079a8:	bd90      	pop	{r4, r7, pc}

080079aa <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
 80079aa:	b590      	push	{r4, r7, lr}
 80079ac:	b083      	sub	sp, #12
 80079ae:	af00      	add	r7, sp, #0
 80079b0:	6078      	str	r0, [r7, #4]
 80079b2:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80079b4:	6838      	ldr	r0, [r7, #0]
 80079b6:	f000 fe43 	bl	8008640 <_ZSt11__addressofIbEPT_RS0_>
 80079ba:	4603      	mov	r3, r0
 80079bc:	4618      	mov	r0, r3
 80079be:	f000 fe4a 	bl	8008656 <_ZSt8_DestroyIbEvPT_>
	    return {};
 80079c2:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80079c4:	4618      	mov	r0, r3
 80079c6:	370c      	adds	r7, #12
 80079c8:	46bd      	mov	sp, r7
 80079ca:	bd90      	pop	{r4, r7, pc}

080079cc <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 80079cc:	b590      	push	{r4, r7, lr}
 80079ce:	b083      	sub	sp, #12
 80079d0:	af00      	add	r7, sp, #0
 80079d2:	6078      	str	r0, [r7, #4]
 80079d4:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80079d6:	6838      	ldr	r0, [r7, #0]
 80079d8:	f000 fe47 	bl	800866a <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 80079dc:	4603      	mov	r3, r0
 80079de:	4618      	mov	r0, r3
 80079e0:	f000 fe4e 	bl	8008680 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 80079e4:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80079e6:	4618      	mov	r0, r3
 80079e8:	370c      	adds	r7, #12
 80079ea:	46bd      	mov	sp, r7
 80079ec:	bd90      	pop	{r4, r7, pc}

080079ee <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 80079ee:	b590      	push	{r4, r7, lr}
 80079f0:	b083      	sub	sp, #12
 80079f2:	af00      	add	r7, sp, #0
 80079f4:	6078      	str	r0, [r7, #4]
 80079f6:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80079f8:	6838      	ldr	r0, [r7, #0]
 80079fa:	f000 fe4c 	bl	8008696 <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 80079fe:	4603      	mov	r3, r0
 8007a00:	4618      	mov	r0, r3
 8007a02:	f000 fe53 	bl	80086ac <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>
	    return {};
 8007a06:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8007a08:	4618      	mov	r0, r3
 8007a0a:	370c      	adds	r7, #12
 8007a0c:	46bd      	mov	sp, r7
 8007a0e:	bd90      	pop	{r4, r7, pc}

08007a10 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8007a10:	b480      	push	{r7}
 8007a12:	b083      	sub	sp, #12
 8007a14:	af00      	add	r7, sp, #0
 8007a16:	6078      	str	r0, [r7, #4]
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	4618      	mov	r0, r3
 8007a1c:	370c      	adds	r7, #12
 8007a1e:	46bd      	mov	sp, r7
 8007a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a24:	4770      	bx	lr

08007a26 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007a26:	b480      	push	{r7}
 8007a28:	b083      	sub	sp, #12
 8007a2a:	af00      	add	r7, sp, #0
 8007a2c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007a2e:	687b      	ldr	r3, [r7, #4]
 8007a30:	4618      	mov	r0, r3
 8007a32:	370c      	adds	r7, #12
 8007a34:	46bd      	mov	sp, r7
 8007a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a3a:	4770      	bx	lr

08007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>:
   *  @param  __r  Reference to an object or function.
   *  @return   The actual address.
  */
  template<typename _Tp>
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
 8007a3c:	b580      	push	{r7, lr}
 8007a3e:	b082      	sub	sp, #8
 8007a40:	af00      	add	r7, sp, #0
 8007a42:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8007a44:	6878      	ldr	r0, [r7, #4]
 8007a46:	f000 f805 	bl	8007a54 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007a4a:	4603      	mov	r3, r0
 8007a4c:	4618      	mov	r0, r3
 8007a4e:	3708      	adds	r7, #8
 8007a50:	46bd      	mov	sp, r7
 8007a52:	bd80      	pop	{r7, pc}

08007a54 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8007a54:	b480      	push	{r7}
 8007a56:	b083      	sub	sp, #12
 8007a58:	af00      	add	r7, sp, #0
 8007a5a:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	4618      	mov	r0, r3
 8007a60:	370c      	adds	r7, #12
 8007a62:	46bd      	mov	sp, r7
 8007a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a68:	4770      	bx	lr

08007a6a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007a6a:	b590      	push	{r4, r7, lr}
 8007a6c:	b085      	sub	sp, #20
 8007a6e:	af00      	add	r7, sp, #0
 8007a70:	6078      	str	r0, [r7, #4]
 8007a72:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007a74:	687b      	ldr	r3, [r7, #4]
 8007a76:	4618      	mov	r0, r3
 8007a78:	f7ff ffe0 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007a7c:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007a7e:	6838      	ldr	r0, [r7, #0]
 8007a80:	f7fd fa61 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8007a84:	4603      	mov	r3, r0
        ::new (__storage)
 8007a86:	681c      	ldr	r4, [r3, #0]
 8007a88:	68fb      	ldr	r3, [r7, #12]
 8007a8a:	4619      	mov	r1, r3
 8007a8c:	2004      	movs	r0, #4
 8007a8e:	f7f9 fae4 	bl	800105a <_ZnwjPv>
 8007a92:	4603      	mov	r3, r0
 8007a94:	601c      	str	r4, [r3, #0]
    }
 8007a96:	bf00      	nop
 8007a98:	3714      	adds	r7, #20
 8007a9a:	46bd      	mov	sp, r7
 8007a9c:	bd90      	pop	{r4, r7, pc}

08007a9e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007a9e:	b590      	push	{r4, r7, lr}
 8007aa0:	b085      	sub	sp, #20
 8007aa2:	af00      	add	r7, sp, #0
 8007aa4:	6078      	str	r0, [r7, #4]
 8007aa6:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007aa8:	687b      	ldr	r3, [r7, #4]
 8007aaa:	4618      	mov	r0, r3
 8007aac:	f7ff ffc6 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007ab0:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007ab2:	6838      	ldr	r0, [r7, #0]
 8007ab4:	f7fd fa70 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8007ab8:	4603      	mov	r3, r0
        ::new (__storage)
 8007aba:	681c      	ldr	r4, [r3, #0]
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	4619      	mov	r1, r3
 8007ac0:	2004      	movs	r0, #4
 8007ac2:	f7f9 faca 	bl	800105a <_ZnwjPv>
 8007ac6:	4603      	mov	r3, r0
 8007ac8:	601c      	str	r4, [r3, #0]
    }
 8007aca:	bf00      	nop
 8007acc:	3714      	adds	r7, #20
 8007ace:	46bd      	mov	sp, r7
 8007ad0:	bd90      	pop	{r4, r7, pc}

08007ad2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007ad2:	b590      	push	{r4, r7, lr}
 8007ad4:	b085      	sub	sp, #20
 8007ad6:	af00      	add	r7, sp, #0
 8007ad8:	6078      	str	r0, [r7, #4]
 8007ada:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007adc:	687b      	ldr	r3, [r7, #4]
 8007ade:	4618      	mov	r0, r3
 8007ae0:	f7ff ffac 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007ae4:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007ae6:	6838      	ldr	r0, [r7, #0]
 8007ae8:	f7fd fa7f 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8007aec:	4603      	mov	r3, r0
        ::new (__storage)
 8007aee:	781c      	ldrb	r4, [r3, #0]
 8007af0:	68fb      	ldr	r3, [r7, #12]
 8007af2:	4619      	mov	r1, r3
 8007af4:	2001      	movs	r0, #1
 8007af6:	f7f9 fab0 	bl	800105a <_ZnwjPv>
 8007afa:	4603      	mov	r3, r0
 8007afc:	4622      	mov	r2, r4
 8007afe:	701a      	strb	r2, [r3, #0]
    }
 8007b00:	bf00      	nop
 8007b02:	3714      	adds	r7, #20
 8007b04:	46bd      	mov	sp, r7
 8007b06:	bd90      	pop	{r4, r7, pc}

08007b08 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007b08:	b590      	push	{r4, r7, lr}
 8007b0a:	b085      	sub	sp, #20
 8007b0c:	af00      	add	r7, sp, #0
 8007b0e:	6078      	str	r0, [r7, #4]
 8007b10:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007b12:	687b      	ldr	r3, [r7, #4]
 8007b14:	4618      	mov	r0, r3
 8007b16:	f7ff ff91 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007b1a:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007b1c:	6838      	ldr	r0, [r7, #0]
 8007b1e:	f7fd fa99 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8007b22:	4604      	mov	r4, r0
        ::new (__storage)
 8007b24:	68fb      	ldr	r3, [r7, #12]
 8007b26:	4619      	mov	r1, r3
 8007b28:	2018      	movs	r0, #24
 8007b2a:	f7f9 fa96 	bl	800105a <_ZnwjPv>
 8007b2e:	4603      	mov	r3, r0
 8007b30:	4621      	mov	r1, r4
 8007b32:	4618      	mov	r0, r3
 8007b34:	f01c f824 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 8007b38:	bf00      	nop
 8007b3a:	3714      	adds	r7, #20
 8007b3c:	46bd      	mov	sp, r7
 8007b3e:	bd90      	pop	{r4, r7, pc}

08007b40 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKSC_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007b40:	b590      	push	{r4, r7, lr}
 8007b42:	b085      	sub	sp, #20
 8007b44:	af00      	add	r7, sp, #0
 8007b46:	6078      	str	r0, [r7, #4]
 8007b48:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007b4a:	687b      	ldr	r3, [r7, #4]
 8007b4c:	4618      	mov	r0, r3
 8007b4e:	f7ff ff75 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007b52:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007b54:	6838      	ldr	r0, [r7, #0]
 8007b56:	f7fd fab2 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007b5a:	4604      	mov	r4, r0
        ::new (__storage)
 8007b5c:	68fb      	ldr	r3, [r7, #12]
 8007b5e:	4619      	mov	r1, r3
 8007b60:	200c      	movs	r0, #12
 8007b62:	f7f9 fa7a 	bl	800105a <_ZnwjPv>
 8007b66:	4603      	mov	r3, r0
 8007b68:	4621      	mov	r1, r4
 8007b6a:	4618      	mov	r0, r3
 8007b6c:	f000 fda9 	bl	80086c2 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
    }
 8007b70:	bf00      	nop
 8007b72:	3714      	adds	r7, #20
 8007b74:	46bd      	mov	sp, r7
 8007b76:	bd90      	pop	{r4, r7, pc}

08007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007b78:	b480      	push	{r7}
 8007b7a:	b083      	sub	sp, #12
 8007b7c:	af00      	add	r7, sp, #0
 8007b7e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007b80:	687b      	ldr	r3, [r7, #4]
 8007b82:	4618      	mov	r0, r3
 8007b84:	370c      	adds	r7, #12
 8007b86:	46bd      	mov	sp, r7
 8007b88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b8c:	4770      	bx	lr

08007b8e <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007b8e:	b590      	push	{r4, r7, lr}
 8007b90:	b085      	sub	sp, #20
 8007b92:	af00      	add	r7, sp, #0
 8007b94:	6078      	str	r0, [r7, #4]
 8007b96:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007b98:	687b      	ldr	r3, [r7, #4]
 8007b9a:	2200      	movs	r2, #0
 8007b9c:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007b9e:	6878      	ldr	r0, [r7, #4]
 8007ba0:	f7f9 ffde 	bl	8001b60 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007ba4:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007ba6:	6838      	ldr	r0, [r7, #0]
 8007ba8:	f7ff ffe6 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8007bac:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8007bae:	681c      	ldr	r4, [r3, #0]
 8007bb0:	68f8      	ldr	r0, [r7, #12]
 8007bb2:	f000 fdc3 	bl	800873c <_ZSt9addressofIiEPT_RS0_>
 8007bb6:	4603      	mov	r3, r0
 8007bb8:	4619      	mov	r1, r3
 8007bba:	2004      	movs	r0, #4
 8007bbc:	f7f9 fa4d 	bl	800105a <_ZnwjPv>
 8007bc0:	4603      	mov	r3, r0
 8007bc2:	601c      	str	r4, [r3, #0]
    }
 8007bc4:	bf00      	nop
 8007bc6:	3714      	adds	r7, #20
 8007bc8:	46bd      	mov	sp, r7
 8007bca:	bd90      	pop	{r4, r7, pc}

08007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007bcc:	b480      	push	{r7}
 8007bce:	b083      	sub	sp, #12
 8007bd0:	af00      	add	r7, sp, #0
 8007bd2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007bd4:	687b      	ldr	r3, [r7, #4]
 8007bd6:	4618      	mov	r0, r3
 8007bd8:	370c      	adds	r7, #12
 8007bda:	46bd      	mov	sp, r7
 8007bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007be0:	4770      	bx	lr

08007be2 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007be2:	b590      	push	{r4, r7, lr}
 8007be4:	b085      	sub	sp, #20
 8007be6:	af00      	add	r7, sp, #0
 8007be8:	6078      	str	r0, [r7, #4]
 8007bea:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007bec:	687b      	ldr	r3, [r7, #4]
 8007bee:	2201      	movs	r2, #1
 8007bf0:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007bf2:	6878      	ldr	r0, [r7, #4]
 8007bf4:	f7fa fa83 	bl	80020fe <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007bf8:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007bfa:	6838      	ldr	r0, [r7, #0]
 8007bfc:	f7ff ffe6 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8007c00:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8007c02:	681c      	ldr	r4, [r3, #0]
 8007c04:	68f8      	ldr	r0, [r7, #12]
 8007c06:	f000 fda5 	bl	8008754 <_ZSt9addressofIfEPT_RS0_>
 8007c0a:	4603      	mov	r3, r0
 8007c0c:	4619      	mov	r1, r3
 8007c0e:	2004      	movs	r0, #4
 8007c10:	f7f9 fa23 	bl	800105a <_ZnwjPv>
 8007c14:	4603      	mov	r3, r0
 8007c16:	601c      	str	r4, [r3, #0]
    }
 8007c18:	bf00      	nop
 8007c1a:	3714      	adds	r7, #20
 8007c1c:	46bd      	mov	sp, r7
 8007c1e:	bd90      	pop	{r4, r7, pc}

08007c20 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8007c20:	b580      	push	{r7, lr}
 8007c22:	b082      	sub	sp, #8
 8007c24:	af00      	add	r7, sp, #0
 8007c26:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8007c28:	6878      	ldr	r0, [r7, #4]
 8007c2a:	f7f9 ff75 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8007c2e:	4603      	mov	r3, r0
 8007c30:	2b01      	cmp	r3, #1
 8007c32:	bf14      	ite	ne
 8007c34:	2301      	movne	r3, #1
 8007c36:	2300      	moveq	r3, #0
 8007c38:	b2db      	uxtb	r3, r3
 8007c3a:	2b00      	cmp	r3, #0
 8007c3c:	d002      	beq.n	8007c44 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8007c3e:	4805      	ldr	r0, [pc, #20]	; (8007c54 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8007c40:	f7f9 fa17 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8007c44:	6878      	ldr	r0, [r7, #4]
 8007c46:	f7fa fa5a 	bl	80020fe <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007c4a:	4603      	mov	r3, r0
    }
 8007c4c:	4618      	mov	r0, r3
 8007c4e:	3708      	adds	r7, #8
 8007c50:	46bd      	mov	sp, r7
 8007c52:	bd80      	pop	{r7, pc}
 8007c54:	080292e4 	.word	0x080292e4

08007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007c58:	b480      	push	{r7}
 8007c5a:	b083      	sub	sp, #12
 8007c5c:	af00      	add	r7, sp, #0
 8007c5e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007c60:	687b      	ldr	r3, [r7, #4]
 8007c62:	4618      	mov	r0, r3
 8007c64:	370c      	adds	r7, #12
 8007c66:	46bd      	mov	sp, r7
 8007c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c6c:	4770      	bx	lr

08007c6e <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007c6e:	b590      	push	{r4, r7, lr}
 8007c70:	b085      	sub	sp, #20
 8007c72:	af00      	add	r7, sp, #0
 8007c74:	6078      	str	r0, [r7, #4]
 8007c76:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007c78:	687b      	ldr	r3, [r7, #4]
 8007c7a:	2202      	movs	r2, #2
 8007c7c:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007c7e:	6878      	ldr	r0, [r7, #4]
 8007c80:	f7fa fadb 	bl	800223a <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007c84:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007c86:	6838      	ldr	r0, [r7, #0]
 8007c88:	f7ff ffe6 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8007c8c:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8007c8e:	781c      	ldrb	r4, [r3, #0]
 8007c90:	68f8      	ldr	r0, [r7, #12]
 8007c92:	f000 fd6b 	bl	800876c <_ZSt9addressofIbEPT_RS0_>
 8007c96:	4603      	mov	r3, r0
 8007c98:	4619      	mov	r1, r3
 8007c9a:	2001      	movs	r0, #1
 8007c9c:	f7f9 f9dd 	bl	800105a <_ZnwjPv>
 8007ca0:	4603      	mov	r3, r0
 8007ca2:	4622      	mov	r2, r4
 8007ca4:	701a      	strb	r2, [r3, #0]
    }
 8007ca6:	bf00      	nop
 8007ca8:	3714      	adds	r7, #20
 8007caa:	46bd      	mov	sp, r7
 8007cac:	bd90      	pop	{r4, r7, pc}
	...

08007cb0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8007cb0:	b580      	push	{r7, lr}
 8007cb2:	b082      	sub	sp, #8
 8007cb4:	af00      	add	r7, sp, #0
 8007cb6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8007cb8:	6878      	ldr	r0, [r7, #4]
 8007cba:	f7f9 ff2d 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8007cbe:	4603      	mov	r3, r0
 8007cc0:	2b02      	cmp	r3, #2
 8007cc2:	bf14      	ite	ne
 8007cc4:	2301      	movne	r3, #1
 8007cc6:	2300      	moveq	r3, #0
 8007cc8:	b2db      	uxtb	r3, r3
 8007cca:	2b00      	cmp	r3, #0
 8007ccc:	d002      	beq.n	8007cd4 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8007cce:	4805      	ldr	r0, [pc, #20]	; (8007ce4 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8007cd0:	f7f9 f9cf 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8007cd4:	6878      	ldr	r0, [r7, #4]
 8007cd6:	f7fa fab0 	bl	800223a <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007cda:	4603      	mov	r3, r0
    }
 8007cdc:	4618      	mov	r0, r3
 8007cde:	3708      	adds	r7, #8
 8007ce0:	46bd      	mov	sp, r7
 8007ce2:	bd80      	pop	{r7, pc}
 8007ce4:	080292e4 	.word	0x080292e4

08007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007ce8:	b480      	push	{r7}
 8007cea:	b083      	sub	sp, #12
 8007cec:	af00      	add	r7, sp, #0
 8007cee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	4618      	mov	r0, r3
 8007cf4:	370c      	adds	r7, #12
 8007cf6:	46bd      	mov	sp, r7
 8007cf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cfc:	4770      	bx	lr

08007cfe <_ZSt28__variant_construct_by_indexILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007cfe:	b590      	push	{r4, r7, lr}
 8007d00:	b085      	sub	sp, #20
 8007d02:	af00      	add	r7, sp, #0
 8007d04:	6078      	str	r0, [r7, #4]
 8007d06:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007d08:	687b      	ldr	r3, [r7, #4]
 8007d0a:	2203      	movs	r2, #3
 8007d0c:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007d0e:	6878      	ldr	r0, [r7, #4]
 8007d10:	f7fa fb43 	bl	800239a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007d14:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007d16:	6838      	ldr	r0, [r7, #0]
 8007d18:	f7ff ffe6 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8007d1c:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 8007d1e:	68f8      	ldr	r0, [r7, #12]
 8007d20:	f000 fd30 	bl	8008784 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8007d24:	4603      	mov	r3, r0
 8007d26:	4619      	mov	r1, r3
 8007d28:	2018      	movs	r0, #24
 8007d2a:	f7f9 f996 	bl	800105a <_ZnwjPv>
 8007d2e:	4603      	mov	r3, r0
 8007d30:	4621      	mov	r1, r4
 8007d32:	4618      	mov	r0, r3
 8007d34:	f01b fd3b 	bl	80237ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 8007d38:	bf00      	nop
 8007d3a:	3714      	adds	r7, #20
 8007d3c:	46bd      	mov	sp, r7
 8007d3e:	bd90      	pop	{r4, r7, pc}

08007d40 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8007d40:	b580      	push	{r7, lr}
 8007d42:	b082      	sub	sp, #8
 8007d44:	af00      	add	r7, sp, #0
 8007d46:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8007d48:	6878      	ldr	r0, [r7, #4]
 8007d4a:	f7f9 fee5 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8007d4e:	4603      	mov	r3, r0
 8007d50:	2b03      	cmp	r3, #3
 8007d52:	bf14      	ite	ne
 8007d54:	2301      	movne	r3, #1
 8007d56:	2300      	moveq	r3, #0
 8007d58:	b2db      	uxtb	r3, r3
 8007d5a:	2b00      	cmp	r3, #0
 8007d5c:	d002      	beq.n	8007d64 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8007d5e:	4805      	ldr	r0, [pc, #20]	; (8007d74 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8007d60:	f7f9 f987 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8007d64:	6878      	ldr	r0, [r7, #4]
 8007d66:	f7fa fb18 	bl	800239a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007d6a:	4603      	mov	r3, r0
    }
 8007d6c:	4618      	mov	r0, r3
 8007d6e:	3708      	adds	r7, #8
 8007d70:	46bd      	mov	sp, r7
 8007d72:	bd80      	pop	{r7, pc}
 8007d74:	080292e4 	.word	0x080292e4

08007d78 <_ZNSt6vectorI6SymbolSaIS0_EE14_M_move_assignEOS2_St17integral_constantIbLb1EE>:
    private:
      // Constant-time move assignment when source object's memory can be
      // moved, either because the source's allocator will move too
      // or because the allocators are equal.
      void
      _M_move_assign(vector&& __x, true_type) noexcept
 8007d78:	b590      	push	{r4, r7, lr}
 8007d7a:	b089      	sub	sp, #36	; 0x24
 8007d7c:	af00      	add	r7, sp, #0
 8007d7e:	60f8      	str	r0, [r7, #12]
 8007d80:	60b9      	str	r1, [r7, #8]
 8007d82:	713a      	strb	r2, [r7, #4]
      {
	vector __tmp(get_allocator());
 8007d84:	68fa      	ldr	r2, [r7, #12]
 8007d86:	f107 031c 	add.w	r3, r7, #28
 8007d8a:	4611      	mov	r1, r2
 8007d8c:	4618      	mov	r0, r3
 8007d8e:	f000 fd05 	bl	800879c <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>
 8007d92:	f107 021c 	add.w	r2, r7, #28
 8007d96:	f107 0310 	add.w	r3, r7, #16
 8007d9a:	4611      	mov	r1, r2
 8007d9c:	4618      	mov	r0, r3
 8007d9e:	f000 fd1a 	bl	80087d6 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>
 8007da2:	f107 031c 	add.w	r3, r7, #28
 8007da6:	4618      	mov	r0, r3
 8007da8:	f000 fd09 	bl	80087be <_ZNSaI6SymbolED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
 8007dac:	68fb      	ldr	r3, [r7, #12]
 8007dae:	68ba      	ldr	r2, [r7, #8]
 8007db0:	4611      	mov	r1, r2
 8007db2:	4618      	mov	r0, r3
 8007db4:	f000 fd39 	bl	800882a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
 8007db8:	68ba      	ldr	r2, [r7, #8]
 8007dba:	f107 0310 	add.w	r3, r7, #16
 8007dbe:	4611      	mov	r1, r2
 8007dc0:	4618      	mov	r0, r3
 8007dc2:	f000 fd32 	bl	800882a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
 8007dc6:	68fb      	ldr	r3, [r7, #12]
 8007dc8:	4618      	mov	r0, r3
 8007dca:	f000 f93b 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007dce:	4604      	mov	r4, r0
 8007dd0:	68bb      	ldr	r3, [r7, #8]
 8007dd2:	4618      	mov	r0, r3
 8007dd4:	f000 f936 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8007dd8:	4603      	mov	r3, r0
 8007dda:	4619      	mov	r1, r3
 8007ddc:	4620      	mov	r0, r4
 8007dde:	f000 fd42 	bl	8008866 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>
	vector __tmp(get_allocator());
 8007de2:	f107 0310 	add.w	r3, r7, #16
 8007de6:	4618      	mov	r0, r3
 8007de8:	f000 fd04 	bl	80087f4 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
      }
 8007dec:	bf00      	nop
 8007dee:	3724      	adds	r7, #36	; 0x24
 8007df0:	46bd      	mov	sp, r7
 8007df2:	bd90      	pop	{r4, r7, pc}

08007df4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007df4:	b480      	push	{r7}
 8007df6:	b083      	sub	sp, #12
 8007df8:	af00      	add	r7, sp, #0
 8007dfa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	4618      	mov	r0, r3
 8007e00:	370c      	adds	r7, #12
 8007e02:	46bd      	mov	sp, r7
 8007e04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e08:	4770      	bx	lr

08007e0a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8007e0a:	b580      	push	{r7, lr}
 8007e0c:	b082      	sub	sp, #8
 8007e0e:	af00      	add	r7, sp, #0
 8007e10:	6078      	str	r0, [r7, #4]
 8007e12:	6878      	ldr	r0, [r7, #4]
 8007e14:	f000 fcd3 	bl	80087be <_ZNSaI6SymbolED1Ev>
 8007e18:	687b      	ldr	r3, [r7, #4]
 8007e1a:	4618      	mov	r0, r3
 8007e1c:	3708      	adds	r7, #8
 8007e1e:	46bd      	mov	sp, r7
 8007e20:	bd80      	pop	{r7, pc}

08007e22 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>:
      _Vector_base(_Vector_base&&) = default;
 8007e22:	b580      	push	{r7, lr}
 8007e24:	b082      	sub	sp, #8
 8007e26:	af00      	add	r7, sp, #0
 8007e28:	6078      	str	r0, [r7, #4]
 8007e2a:	6039      	str	r1, [r7, #0]
 8007e2c:	687b      	ldr	r3, [r7, #4]
 8007e2e:	683a      	ldr	r2, [r7, #0]
 8007e30:	4611      	mov	r1, r2
 8007e32:	4618      	mov	r0, r3
 8007e34:	f000 fd31 	bl	800889a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>
 8007e38:	687b      	ldr	r3, [r7, #4]
 8007e3a:	4618      	mov	r0, r3
 8007e3c:	3708      	adds	r7, #8
 8007e3e:	46bd      	mov	sp, r7
 8007e40:	bd80      	pop	{r7, pc}

08007e42 <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>:
      vector(vector&&) noexcept = default;
 8007e42:	b580      	push	{r7, lr}
 8007e44:	b082      	sub	sp, #8
 8007e46:	af00      	add	r7, sp, #0
 8007e48:	6078      	str	r0, [r7, #4]
 8007e4a:	6039      	str	r1, [r7, #0]
 8007e4c:	687b      	ldr	r3, [r7, #4]
 8007e4e:	683a      	ldr	r2, [r7, #0]
 8007e50:	4611      	mov	r1, r2
 8007e52:	4618      	mov	r0, r3
 8007e54:	f7ff ffe5 	bl	8007e22 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EOS2_>
 8007e58:	687b      	ldr	r3, [r7, #4]
 8007e5a:	4618      	mov	r0, r3
 8007e5c:	3708      	adds	r7, #8
 8007e5e:	46bd      	mov	sp, r7
 8007e60:	bd80      	pop	{r7, pc}

08007e62 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8007e62:	b590      	push	{r4, r7, lr}
 8007e64:	b085      	sub	sp, #20
 8007e66:	af00      	add	r7, sp, #0
 8007e68:	6078      	str	r0, [r7, #4]
 8007e6a:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	2204      	movs	r2, #4
 8007e70:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8007e72:	6878      	ldr	r0, [r7, #4]
 8007e74:	f7fa fb53 	bl	800251e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007e78:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8007e7a:	6838      	ldr	r0, [r7, #0]
 8007e7c:	f7ff ffba 	bl	8007df4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8007e80:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 8007e82:	68f8      	ldr	r0, [r7, #12]
 8007e84:	f000 fcfd 	bl	8008882 <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 8007e88:	4603      	mov	r3, r0
 8007e8a:	4619      	mov	r1, r3
 8007e8c:	200c      	movs	r0, #12
 8007e8e:	f7f9 f8e4 	bl	800105a <_ZnwjPv>
 8007e92:	4603      	mov	r3, r0
 8007e94:	4621      	mov	r1, r4
 8007e96:	4618      	mov	r0, r3
 8007e98:	f7ff ffd3 	bl	8007e42 <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 8007e9c:	bf00      	nop
 8007e9e:	3714      	adds	r7, #20
 8007ea0:	46bd      	mov	sp, r7
 8007ea2:	bd90      	pop	{r4, r7, pc}

08007ea4 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8007ea4:	b580      	push	{r7, lr}
 8007ea6:	b082      	sub	sp, #8
 8007ea8:	af00      	add	r7, sp, #0
 8007eaa:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8007eac:	6878      	ldr	r0, [r7, #4]
 8007eae:	f7f9 fe33 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8007eb2:	4603      	mov	r3, r0
 8007eb4:	2b04      	cmp	r3, #4
 8007eb6:	bf14      	ite	ne
 8007eb8:	2301      	movne	r3, #1
 8007eba:	2300      	moveq	r3, #0
 8007ebc:	b2db      	uxtb	r3, r3
 8007ebe:	2b00      	cmp	r3, #0
 8007ec0:	d002      	beq.n	8007ec8 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8007ec2:	4805      	ldr	r0, [pc, #20]	; (8007ed8 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8007ec4:	f7f9 f8d5 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8007ec8:	6878      	ldr	r0, [r7, #4]
 8007eca:	f7fa fb28 	bl	800251e <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8007ece:	4603      	mov	r3, r0
    }
 8007ed0:	4618      	mov	r0, r3
 8007ed2:	3708      	adds	r7, #8
 8007ed4:	46bd      	mov	sp, r7
 8007ed6:	bd80      	pop	{r7, pc}
 8007ed8:	080292e4 	.word	0x080292e4

08007edc <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007edc:	b590      	push	{r4, r7, lr}
 8007ede:	b085      	sub	sp, #20
 8007ee0:	af00      	add	r7, sp, #0
 8007ee2:	6078      	str	r0, [r7, #4]
 8007ee4:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007ee6:	687b      	ldr	r3, [r7, #4]
 8007ee8:	4618      	mov	r0, r3
 8007eea:	f7ff fda7 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007eee:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007ef0:	6838      	ldr	r0, [r7, #0]
 8007ef2:	f7fd f828 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8007ef6:	4603      	mov	r3, r0
        ::new (__storage)
 8007ef8:	681c      	ldr	r4, [r3, #0]
 8007efa:	68fb      	ldr	r3, [r7, #12]
 8007efc:	4619      	mov	r1, r3
 8007efe:	2004      	movs	r0, #4
 8007f00:	f7f9 f8ab 	bl	800105a <_ZnwjPv>
 8007f04:	4603      	mov	r3, r0
 8007f06:	601c      	str	r4, [r3, #0]
    }
 8007f08:	bf00      	nop
 8007f0a:	3714      	adds	r7, #20
 8007f0c:	46bd      	mov	sp, r7
 8007f0e:	bd90      	pop	{r4, r7, pc}

08007f10 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007f10:	b590      	push	{r4, r7, lr}
 8007f12:	b085      	sub	sp, #20
 8007f14:	af00      	add	r7, sp, #0
 8007f16:	6078      	str	r0, [r7, #4]
 8007f18:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007f1a:	687b      	ldr	r3, [r7, #4]
 8007f1c:	4618      	mov	r0, r3
 8007f1e:	f7ff fd8d 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007f22:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007f24:	6838      	ldr	r0, [r7, #0]
 8007f26:	f7fd f837 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8007f2a:	4603      	mov	r3, r0
        ::new (__storage)
 8007f2c:	681c      	ldr	r4, [r3, #0]
 8007f2e:	68fb      	ldr	r3, [r7, #12]
 8007f30:	4619      	mov	r1, r3
 8007f32:	2004      	movs	r0, #4
 8007f34:	f7f9 f891 	bl	800105a <_ZnwjPv>
 8007f38:	4603      	mov	r3, r0
 8007f3a:	601c      	str	r4, [r3, #0]
    }
 8007f3c:	bf00      	nop
 8007f3e:	3714      	adds	r7, #20
 8007f40:	46bd      	mov	sp, r7
 8007f42:	bd90      	pop	{r4, r7, pc}

08007f44 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8007f44:	b590      	push	{r4, r7, lr}
 8007f46:	b085      	sub	sp, #20
 8007f48:	af00      	add	r7, sp, #0
 8007f4a:	6078      	str	r0, [r7, #4]
 8007f4c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	4618      	mov	r0, r3
 8007f52:	f7ff fd73 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 8007f56:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 8007f58:	6838      	ldr	r0, [r7, #0]
 8007f5a:	f7fd f846 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8007f5e:	4603      	mov	r3, r0
        ::new (__storage)
 8007f60:	781c      	ldrb	r4, [r3, #0]
 8007f62:	68fb      	ldr	r3, [r7, #12]
 8007f64:	4619      	mov	r1, r3
 8007f66:	2001      	movs	r0, #1
 8007f68:	f7f9 f877 	bl	800105a <_ZnwjPv>
 8007f6c:	4603      	mov	r3, r0
 8007f6e:	4622      	mov	r2, r4
 8007f70:	701a      	strb	r2, [r3, #0]
    }
 8007f72:	bf00      	nop
 8007f74:	3714      	adds	r7, #20
 8007f76:	46bd      	mov	sp, r7
 8007f78:	bd90      	pop	{r4, r7, pc}

08007f7a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8007f7a:	b590      	push	{r4, r7, lr}
 8007f7c:	b085      	sub	sp, #20
 8007f7e:	af00      	add	r7, sp, #0
 8007f80:	60f8      	str	r0, [r7, #12]
 8007f82:	7239      	strb	r1, [r7, #8]
 8007f84:	607a      	str	r2, [r7, #4]
 8007f86:	68fb      	ldr	r3, [r7, #12]
 8007f88:	687a      	ldr	r2, [r7, #4]
 8007f8a:	4621      	mov	r1, r4
 8007f8c:	4618      	mov	r0, r3
 8007f8e:	f000 fd29 	bl	80089e4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8007f92:	68fb      	ldr	r3, [r7, #12]
 8007f94:	4618      	mov	r0, r3
 8007f96:	3714      	adds	r7, #20
 8007f98:	46bd      	mov	sp, r7
 8007f9a:	bd90      	pop	{r4, r7, pc}

08007f9c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8007f9c:	b590      	push	{r4, r7, lr}
 8007f9e:	b085      	sub	sp, #20
 8007fa0:	af00      	add	r7, sp, #0
 8007fa2:	60f8      	str	r0, [r7, #12]
 8007fa4:	7239      	strb	r1, [r7, #8]
 8007fa6:	607a      	str	r2, [r7, #4]
 8007fa8:	68fb      	ldr	r3, [r7, #12]
 8007faa:	687a      	ldr	r2, [r7, #4]
 8007fac:	4621      	mov	r1, r4
 8007fae:	4618      	mov	r0, r3
 8007fb0:	f7ff ffe3 	bl	8007f7a <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8007fb4:	68fb      	ldr	r3, [r7, #12]
 8007fb6:	4618      	mov	r0, r3
 8007fb8:	3714      	adds	r7, #20
 8007fba:	46bd      	mov	sp, r7
 8007fbc:	bd90      	pop	{r4, r7, pc}

08007fbe <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8007fbe:	b590      	push	{r4, r7, lr}
 8007fc0:	b085      	sub	sp, #20
 8007fc2:	af00      	add	r7, sp, #0
 8007fc4:	60f8      	str	r0, [r7, #12]
 8007fc6:	7239      	strb	r1, [r7, #8]
 8007fc8:	607a      	str	r2, [r7, #4]
 8007fca:	68fb      	ldr	r3, [r7, #12]
 8007fcc:	687a      	ldr	r2, [r7, #4]
 8007fce:	4621      	mov	r1, r4
 8007fd0:	4618      	mov	r0, r3
 8007fd2:	f7ff ffe3 	bl	8007f9c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8007fd6:	68fb      	ldr	r3, [r7, #12]
 8007fd8:	4618      	mov	r0, r3
 8007fda:	3714      	adds	r7, #20
 8007fdc:	46bd      	mov	sp, r7
 8007fde:	bd90      	pop	{r4, r7, pc}

08007fe0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8007fe0:	b590      	push	{r4, r7, lr}
 8007fe2:	b085      	sub	sp, #20
 8007fe4:	af00      	add	r7, sp, #0
 8007fe6:	60f8      	str	r0, [r7, #12]
 8007fe8:	7239      	strb	r1, [r7, #8]
 8007fea:	607a      	str	r2, [r7, #4]
 8007fec:	68fb      	ldr	r3, [r7, #12]
 8007fee:	687a      	ldr	r2, [r7, #4]
 8007ff0:	4621      	mov	r1, r4
 8007ff2:	4618      	mov	r0, r3
 8007ff4:	f7ff ffe3 	bl	8007fbe <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8007ff8:	68fb      	ldr	r3, [r7, #12]
 8007ffa:	4618      	mov	r0, r3
 8007ffc:	3714      	adds	r7, #20
 8007ffe:	46bd      	mov	sp, r7
 8008000:	bd90      	pop	{r4, r7, pc}

08008002 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8008002:	b5b0      	push	{r4, r5, r7, lr}
 8008004:	b084      	sub	sp, #16
 8008006:	af00      	add	r7, sp, #0
 8008008:	60f8      	str	r0, [r7, #12]
 800800a:	7239      	strb	r1, [r7, #8]
 800800c:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 800800e:	68fc      	ldr	r4, [r7, #12]
 8008010:	6878      	ldr	r0, [r7, #4]
 8008012:	f7fd f81f 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8008016:	4603      	mov	r3, r0
 8008018:	461a      	mov	r2, r3
 800801a:	4629      	mov	r1, r5
 800801c:	4620      	mov	r0, r4
 800801e:	f7ff ffdf 	bl	8007fe0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008022:	68fb      	ldr	r3, [r7, #12]
 8008024:	4618      	mov	r0, r3
 8008026:	3710      	adds	r7, #16
 8008028:	46bd      	mov	sp, r7
 800802a:	bdb0      	pop	{r4, r5, r7, pc}

0800802c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>:
    _Enable_default_constructor&
    operator=(_Enable_default_constructor&&) noexcept = default;

    // Can be used in other ctors.
    constexpr explicit
    _Enable_default_constructor(_Enable_default_constructor_tag) { }
 800802c:	b480      	push	{r7}
 800802e:	b083      	sub	sp, #12
 8008030:	af00      	add	r7, sp, #0
 8008032:	6078      	str	r0, [r7, #4]
 8008034:	7039      	strb	r1, [r7, #0]
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	4618      	mov	r0, r3
 800803a:	370c      	adds	r7, #12
 800803c:	46bd      	mov	sp, r7
 800803e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008042:	4770      	bx	lr

08008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8008044:	b480      	push	{r7}
 8008046:	b083      	sub	sp, #12
 8008048:	af00      	add	r7, sp, #0
 800804a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800804c:	687b      	ldr	r3, [r7, #4]
 800804e:	4618      	mov	r0, r3
 8008050:	370c      	adds	r7, #12
 8008052:	46bd      	mov	sp, r7
 8008054:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008058:	4770      	bx	lr

0800805a <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800805a:	b480      	push	{r7}
 800805c:	b083      	sub	sp, #12
 800805e:	af00      	add	r7, sp, #0
 8008060:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8008062:	687b      	ldr	r3, [r7, #4]
 8008064:	4618      	mov	r0, r3
 8008066:	370c      	adds	r7, #12
 8008068:	46bd      	mov	sp, r7
 800806a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800806e:	4770      	bx	lr

08008070 <_ZStneRKSaI6SymbolES2_>:
      friend bool
      operator==(const allocator&, const allocator&) _GLIBCXX_NOTHROW
      { return true; }

      friend bool
      operator!=(const allocator&, const allocator&) _GLIBCXX_NOTHROW
 8008070:	b480      	push	{r7}
 8008072:	b083      	sub	sp, #12
 8008074:	af00      	add	r7, sp, #0
 8008076:	6078      	str	r0, [r7, #4]
 8008078:	6039      	str	r1, [r7, #0]
      { return false; }
 800807a:	2300      	movs	r3, #0
 800807c:	4618      	mov	r0, r3
 800807e:	370c      	adds	r7, #12
 8008080:	46bd      	mov	sp, r7
 8008082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008086:	4770      	bx	lr

08008088 <_ZNSt6vectorI6SymbolSaIS0_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
 8008088:	b580      	push	{r7, lr}
 800808a:	b082      	sub	sp, #8
 800808c:	af00      	add	r7, sp, #0
 800808e:	6078      	str	r0, [r7, #4]
      { _M_erase_at_end(this->_M_impl._M_start); }
 8008090:	687b      	ldr	r3, [r7, #4]
 8008092:	681b      	ldr	r3, [r3, #0]
 8008094:	4619      	mov	r1, r3
 8008096:	6878      	ldr	r0, [r7, #4]
 8008098:	f000 fcbc 	bl	8008a14 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>
 800809c:	bf00      	nop
 800809e:	3708      	adds	r7, #8
 80080a0:	46bd      	mov	sp, r7
 80080a2:	bd80      	pop	{r7, pc}

080080a4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 80080a4:	b580      	push	{r7, lr}
 80080a6:	b084      	sub	sp, #16
 80080a8:	af00      	add	r7, sp, #0
 80080aa:	60f8      	str	r0, [r7, #12]
 80080ac:	60b9      	str	r1, [r7, #8]
 80080ae:	607a      	str	r2, [r7, #4]
	if (__p)
 80080b0:	68bb      	ldr	r3, [r7, #8]
 80080b2:	2b00      	cmp	r3, #0
 80080b4:	d005      	beq.n	80080c2 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 80080b6:	68fb      	ldr	r3, [r7, #12]
 80080b8:	687a      	ldr	r2, [r7, #4]
 80080ba:	68b9      	ldr	r1, [r7, #8]
 80080bc:	4618      	mov	r0, r3
 80080be:	f000 fcca 	bl	8008a56 <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>
      }
 80080c2:	bf00      	nop
 80080c4:	3710      	adds	r7, #16
 80080c6:	46bd      	mov	sp, r7
 80080c8:	bd80      	pop	{r7, pc}

080080ca <_ZSt15__alloc_on_copyISaI6SymbolEEvRT_RKS2_>:
    inline void
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 80080ca:	b580      	push	{r7, lr}
 80080cc:	b084      	sub	sp, #16
 80080ce:	af00      	add	r7, sp, #0
 80080d0:	6078      	str	r0, [r7, #4]
 80080d2:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_copy_assignment __pocca;
      __do_alloc_on_copy(__one, __two, __pocca());
 80080d4:	461a      	mov	r2, r3
 80080d6:	6839      	ldr	r1, [r7, #0]
 80080d8:	6878      	ldr	r0, [r7, #4]
 80080da:	f000 fccb 	bl	8008a74 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>
    }
 80080de:	bf00      	nop
 80080e0:	3710      	adds	r7, #16
 80080e2:	46bd      	mov	sp, r7
 80080e4:	bd80      	pop	{r7, pc}

080080e6 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 80080e6:	b480      	push	{r7}
 80080e8:	b083      	sub	sp, #12
 80080ea:	af00      	add	r7, sp, #0
 80080ec:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 80080ee:	687b      	ldr	r3, [r7, #4]
 80080f0:	685a      	ldr	r2, [r3, #4]
 80080f2:	687b      	ldr	r3, [r7, #4]
 80080f4:	681b      	ldr	r3, [r3, #0]
 80080f6:	1ad3      	subs	r3, r2, r3
 80080f8:	115b      	asrs	r3, r3, #5
 80080fa:	4618      	mov	r0, r3
 80080fc:	370c      	adds	r7, #12
 80080fe:	46bd      	mov	sp, r7
 8008100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008104:	4770      	bx	lr

08008106 <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
 8008106:	b480      	push	{r7}
 8008108:	b083      	sub	sp, #12
 800810a:	af00      	add	r7, sp, #0
 800810c:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_end_of_storage
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	689a      	ldr	r2, [r3, #8]
			 - this->_M_impl._M_start); }
 8008112:	687b      	ldr	r3, [r7, #4]
 8008114:	681b      	ldr	r3, [r3, #0]
 8008116:	1ad3      	subs	r3, r2, r3
 8008118:	115b      	asrs	r3, r3, #5
 800811a:	4618      	mov	r0, r3
 800811c:	370c      	adds	r7, #12
 800811e:	46bd      	mov	sp, r7
 8008120:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008124:	4770      	bx	lr

08008126 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 8008126:	b580      	push	{r7, lr}
 8008128:	b084      	sub	sp, #16
 800812a:	af00      	add	r7, sp, #0
 800812c:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	681b      	ldr	r3, [r3, #0]
 8008132:	60fb      	str	r3, [r7, #12]
 8008134:	f107 020c 	add.w	r2, r7, #12
 8008138:	f107 0308 	add.w	r3, r7, #8
 800813c:	4611      	mov	r1, r2
 800813e:	4618      	mov	r0, r3
 8008140:	f000 fca4 	bl	8008a8c <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 8008144:	68bb      	ldr	r3, [r7, #8]
 8008146:	4618      	mov	r0, r3
 8008148:	3710      	adds	r7, #16
 800814a:	46bd      	mov	sp, r7
 800814c:	bd80      	pop	{r7, pc}

0800814e <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800814e:	b580      	push	{r7, lr}
 8008150:	b084      	sub	sp, #16
 8008152:	af00      	add	r7, sp, #0
 8008154:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 8008156:	687b      	ldr	r3, [r7, #4]
 8008158:	685b      	ldr	r3, [r3, #4]
 800815a:	60fb      	str	r3, [r7, #12]
 800815c:	f107 020c 	add.w	r2, r7, #12
 8008160:	f107 0308 	add.w	r3, r7, #8
 8008164:	4611      	mov	r1, r2
 8008166:	4618      	mov	r0, r3
 8008168:	f000 fc90 	bl	8008a8c <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>
 800816c:	68bb      	ldr	r3, [r7, #8]
 800816e:	4618      	mov	r0, r3
 8008170:	3710      	adds	r7, #16
 8008172:	46bd      	mov	sp, r7
 8008174:	bd80      	pop	{r7, pc}

08008176 <_ZNSt6vectorI6SymbolSaIS0_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS0_S2_EEEEPS0_jT_SA_>:
	_M_allocate_and_copy(size_type __n,
 8008176:	b580      	push	{r7, lr}
 8008178:	b086      	sub	sp, #24
 800817a:	af00      	add	r7, sp, #0
 800817c:	60f8      	str	r0, [r7, #12]
 800817e:	60b9      	str	r1, [r7, #8]
 8008180:	607a      	str	r2, [r7, #4]
 8008182:	603b      	str	r3, [r7, #0]
	  pointer __result = this->_M_allocate(__n);
 8008184:	68fb      	ldr	r3, [r7, #12]
 8008186:	68b9      	ldr	r1, [r7, #8]
 8008188:	4618      	mov	r0, r3
 800818a:	f000 fc8f 	bl	8008aac <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 800818e:	6178      	str	r0, [r7, #20]
					  _M_get_Tp_allocator());
 8008190:	68fb      	ldr	r3, [r7, #12]
 8008192:	4618      	mov	r0, r3
 8008194:	f7ff ff56 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8008198:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__first, __last, __result,
 800819a:	697a      	ldr	r2, [r7, #20]
 800819c:	6839      	ldr	r1, [r7, #0]
 800819e:	6878      	ldr	r0, [r7, #4]
 80081a0:	f000 fc98 	bl	8008ad4 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
	      return __result;
 80081a4:	697b      	ldr	r3, [r7, #20]
	}
 80081a6:	4618      	mov	r0, r3
 80081a8:	3718      	adds	r7, #24
 80081aa:	46bd      	mov	sp, r7
 80081ac:	bd80      	pop	{r7, pc}

080081ae <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 80081ae:	b580      	push	{r7, lr}
 80081b0:	b084      	sub	sp, #16
 80081b2:	af00      	add	r7, sp, #0
 80081b4:	60f8      	str	r0, [r7, #12]
 80081b6:	60b9      	str	r1, [r7, #8]
 80081b8:	607a      	str	r2, [r7, #4]
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
 80081ba:	68b9      	ldr	r1, [r7, #8]
 80081bc:	68f8      	ldr	r0, [r7, #12]
 80081be:	f000 fc9a 	bl	8008af6 <_ZSt8_DestroyIP6SymbolEvT_S2_>
    }
 80081c2:	bf00      	nop
 80081c4:	3710      	adds	r7, #16
 80081c6:	46bd      	mov	sp, r7
 80081c8:	bd80      	pop	{r7, pc}

080081ca <_ZNSt6vectorI6SymbolSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80081ca:	b580      	push	{r7, lr}
 80081cc:	b084      	sub	sp, #16
 80081ce:	af00      	add	r7, sp, #0
 80081d0:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80081d2:	687a      	ldr	r2, [r7, #4]
 80081d4:	f107 030c 	add.w	r3, r7, #12
 80081d8:	4611      	mov	r1, r2
 80081da:	4618      	mov	r0, r3
 80081dc:	f000 fc98 	bl	8008b10 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 80081e0:	68fb      	ldr	r3, [r7, #12]
 80081e2:	4618      	mov	r0, r3
 80081e4:	3710      	adds	r7, #16
 80081e6:	46bd      	mov	sp, r7
 80081e8:	bd80      	pop	{r7, pc}

080081ea <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET0_T_SC_SB_>:
   *  Note that the end of the output range is permitted to be contained
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    inline _OI
    copy(_II __first, _II __last, _OI __result)
 80081ea:	b590      	push	{r4, r7, lr}
 80081ec:	b085      	sub	sp, #20
 80081ee:	af00      	add	r7, sp, #0
 80081f0:	60f8      	str	r0, [r7, #12]
 80081f2:	60b9      	str	r1, [r7, #8]
 80081f4:	607a      	str	r2, [r7, #4]
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::value_type>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a2<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 80081f6:	68f8      	ldr	r0, [r7, #12]
 80081f8:	f000 fc9a 	bl	8008b30 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 80081fc:	4604      	mov	r4, r0
 80081fe:	68b8      	ldr	r0, [r7, #8]
 8008200:	f000 fc96 	bl	8008b30 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>
 8008204:	4603      	mov	r3, r0
 8008206:	687a      	ldr	r2, [r7, #4]
 8008208:	4619      	mov	r1, r3
 800820a:	4620      	mov	r0, r4
 800820c:	f000 fc9b 	bl	8008b46 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>
 8008210:	4603      	mov	r3, r0
    }
 8008212:	4618      	mov	r0, r3
 8008214:	3714      	adds	r7, #20
 8008216:	46bd      	mov	sp, r7
 8008218:	bd90      	pop	{r4, r7, pc}

0800821a <_ZNSt6vectorI6SymbolSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800821a:	b580      	push	{r7, lr}
 800821c:	b084      	sub	sp, #16
 800821e:	af00      	add	r7, sp, #0
 8008220:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8008222:	687b      	ldr	r3, [r7, #4]
 8008224:	1d1a      	adds	r2, r3, #4
 8008226:	f107 030c 	add.w	r3, r7, #12
 800822a:	4611      	mov	r1, r2
 800822c:	4618      	mov	r0, r3
 800822e:	f000 fc6f 	bl	8008b10 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8008232:	68fb      	ldr	r3, [r7, #12]
 8008234:	4618      	mov	r0, r3
 8008236:	3710      	adds	r7, #16
 8008238:	46bd      	mov	sp, r7
 800823a:	bd80      	pop	{r7, pc}

0800823c <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES2_EvT_S8_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800823c:	b580      	push	{r7, lr}
 800823e:	b084      	sub	sp, #16
 8008240:	af00      	add	r7, sp, #0
 8008242:	60f8      	str	r0, [r7, #12]
 8008244:	60b9      	str	r1, [r7, #8]
 8008246:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8008248:	68b9      	ldr	r1, [r7, #8]
 800824a:	68f8      	ldr	r0, [r7, #12]
 800824c:	f000 fc9c 	bl	8008b88 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>
    }
 8008250:	bf00      	nop
 8008252:	3710      	adds	r7, #16
 8008254:	46bd      	mov	sp, r7
 8008256:	bd80      	pop	{r7, pc}

08008258 <_ZSt4copyIP6SymbolS1_ET0_T_S3_S2_>:
    copy(_II __first, _II __last, _OI __result)
 8008258:	b590      	push	{r4, r7, lr}
 800825a:	b085      	sub	sp, #20
 800825c:	af00      	add	r7, sp, #0
 800825e:	60f8      	str	r0, [r7, #12]
 8008260:	60b9      	str	r1, [r7, #8]
 8008262:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8008264:	68f8      	ldr	r0, [r7, #12]
 8008266:	f000 fc9c 	bl	8008ba2 <_ZSt12__miter_baseIP6SymbolET_S2_>
 800826a:	4604      	mov	r4, r0
 800826c:	68b8      	ldr	r0, [r7, #8]
 800826e:	f000 fc98 	bl	8008ba2 <_ZSt12__miter_baseIP6SymbolET_S2_>
 8008272:	4603      	mov	r3, r0
 8008274:	687a      	ldr	r2, [r7, #4]
 8008276:	4619      	mov	r1, r3
 8008278:	4620      	mov	r0, r4
 800827a:	f000 fc9d 	bl	8008bb8 <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>
 800827e:	4603      	mov	r3, r0
    }
 8008280:	4618      	mov	r0, r3
 8008282:	3714      	adds	r7, #20
 8008284:	46bd      	mov	sp, r7
 8008286:	bd90      	pop	{r4, r7, pc}

08008288 <_ZSt22__uninitialized_copy_aIP6SymbolS1_S0_ET0_T_S3_S2_RSaIT1_E>:
	}
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8008288:	b580      	push	{r7, lr}
 800828a:	b084      	sub	sp, #16
 800828c:	af00      	add	r7, sp, #0
 800828e:	60f8      	str	r0, [r7, #12]
 8008290:	60b9      	str	r1, [r7, #8]
 8008292:	607a      	str	r2, [r7, #4]
 8008294:	603b      	str	r3, [r7, #0]
			   _ForwardIterator __result, allocator<_Tp>&)
    { return std::uninitialized_copy(__first, __last, __result); }
 8008296:	687a      	ldr	r2, [r7, #4]
 8008298:	68b9      	ldr	r1, [r7, #8]
 800829a:	68f8      	ldr	r0, [r7, #12]
 800829c:	f000 fcaf 	bl	8008bfe <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>
 80082a0:	4603      	mov	r3, r0
 80082a2:	4618      	mov	r0, r3
 80082a4:	3710      	adds	r7, #16
 80082a6:	46bd      	mov	sp, r7
 80082a8:	bd80      	pop	{r7, pc}

080082aa <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80082aa:	b590      	push	{r4, r7, lr}
 80082ac:	b085      	sub	sp, #20
 80082ae:	af00      	add	r7, sp, #0
 80082b0:	60f8      	str	r0, [r7, #12]
 80082b2:	7239      	strb	r1, [r7, #8]
 80082b4:	607a      	str	r2, [r7, #4]
 80082b6:	68fb      	ldr	r3, [r7, #12]
 80082b8:	687a      	ldr	r2, [r7, #4]
 80082ba:	4621      	mov	r1, r4
 80082bc:	4618      	mov	r0, r3
 80082be:	f000 fd36 	bl	8008d2e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 80082c2:	68fb      	ldr	r3, [r7, #12]
 80082c4:	4618      	mov	r0, r3
 80082c6:	3714      	adds	r7, #20
 80082c8:	46bd      	mov	sp, r7
 80082ca:	bd90      	pop	{r4, r7, pc}

080082cc <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80082cc:	b590      	push	{r4, r7, lr}
 80082ce:	b085      	sub	sp, #20
 80082d0:	af00      	add	r7, sp, #0
 80082d2:	60f8      	str	r0, [r7, #12]
 80082d4:	7239      	strb	r1, [r7, #8]
 80082d6:	607a      	str	r2, [r7, #4]
 80082d8:	68fb      	ldr	r3, [r7, #12]
 80082da:	687a      	ldr	r2, [r7, #4]
 80082dc:	4621      	mov	r1, r4
 80082de:	4618      	mov	r0, r3
 80082e0:	f7ff ffe3 	bl	80082aa <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 80082e4:	68fb      	ldr	r3, [r7, #12]
 80082e6:	4618      	mov	r0, r3
 80082e8:	3714      	adds	r7, #20
 80082ea:	46bd      	mov	sp, r7
 80082ec:	bd90      	pop	{r4, r7, pc}

080082ee <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80082ee:	b590      	push	{r4, r7, lr}
 80082f0:	b085      	sub	sp, #20
 80082f2:	af00      	add	r7, sp, #0
 80082f4:	60f8      	str	r0, [r7, #12]
 80082f6:	7239      	strb	r1, [r7, #8]
 80082f8:	607a      	str	r2, [r7, #4]
 80082fa:	68fb      	ldr	r3, [r7, #12]
 80082fc:	687a      	ldr	r2, [r7, #4]
 80082fe:	4621      	mov	r1, r4
 8008300:	4618      	mov	r0, r3
 8008302:	f7ff ffe3 	bl	80082cc <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008306:	68fb      	ldr	r3, [r7, #12]
 8008308:	4618      	mov	r0, r3
 800830a:	3714      	adds	r7, #20
 800830c:	46bd      	mov	sp, r7
 800830e:	bd90      	pop	{r4, r7, pc}

08008310 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8008310:	b590      	push	{r4, r7, lr}
 8008312:	b085      	sub	sp, #20
 8008314:	af00      	add	r7, sp, #0
 8008316:	60f8      	str	r0, [r7, #12]
 8008318:	7239      	strb	r1, [r7, #8]
 800831a:	607a      	str	r2, [r7, #4]
 800831c:	68fb      	ldr	r3, [r7, #12]
 800831e:	687a      	ldr	r2, [r7, #4]
 8008320:	4621      	mov	r1, r4
 8008322:	4618      	mov	r0, r3
 8008324:	f7ff ffe3 	bl	80082ee <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008328:	68fb      	ldr	r3, [r7, #12]
 800832a:	4618      	mov	r0, r3
 800832c:	3714      	adds	r7, #20
 800832e:	46bd      	mov	sp, r7
 8008330:	bd90      	pop	{r4, r7, pc}

08008332 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8008332:	b5b0      	push	{r4, r5, r7, lr}
 8008334:	b084      	sub	sp, #16
 8008336:	af00      	add	r7, sp, #0
 8008338:	60f8      	str	r0, [r7, #12]
 800833a:	7239      	strb	r1, [r7, #8]
 800833c:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 800833e:	68fc      	ldr	r4, [r7, #12]
 8008340:	6878      	ldr	r0, [r7, #4]
 8008342:	f7fc febc 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008346:	4603      	mov	r3, r0
 8008348:	461a      	mov	r2, r3
 800834a:	4629      	mov	r1, r5
 800834c:	4620      	mov	r0, r4
 800834e:	f7ff ffdf 	bl	8008310 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008352:	68fb      	ldr	r3, [r7, #12]
 8008354:	4618      	mov	r0, r3
 8008356:	3710      	adds	r7, #16
 8008358:	46bd      	mov	sp, r7
 800835a:	bdb0      	pop	{r4, r5, r7, pc}

0800835c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 800835c:	b580      	push	{r7, lr}
 800835e:	b082      	sub	sp, #8
 8008360:	af00      	add	r7, sp, #0
 8008362:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8008364:	6878      	ldr	r0, [r7, #4]
 8008366:	f000 fcfa 	bl	8008d5e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 800836a:	4603      	mov	r3, r0
 800836c:	4618      	mov	r0, r3
 800836e:	3708      	adds	r7, #8
 8008370:	46bd      	mov	sp, r7
 8008372:	bd80      	pop	{r7, pc}

08008374 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>:
			    _Up(std::forward<_Args>(__args)...)))
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p)
 8008374:	b480      	push	{r7}
 8008376:	b083      	sub	sp, #12
 8008378:	af00      	add	r7, sp, #0
 800837a:	6078      	str	r0, [r7, #4]
 800837c:	6039      	str	r1, [r7, #0]
	noexcept(noexcept( __p->~_Up()))
	{ __p->~_Up(); }
 800837e:	bf00      	nop
 8008380:	370c      	adds	r7, #12
 8008382:	46bd      	mov	sp, r7
 8008384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008388:	4770      	bx	lr

0800838a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 800838a:	b580      	push	{r7, lr}
 800838c:	b084      	sub	sp, #16
 800838e:	af00      	add	r7, sp, #0
 8008390:	60f8      	str	r0, [r7, #12]
 8008392:	60b9      	str	r1, [r7, #8]
 8008394:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8008396:	68b8      	ldr	r0, [r7, #8]
 8008398:	f01a ff6e 	bl	8023278 <_ZdlPv>
      }
 800839c:	3710      	adds	r7, #16
 800839e:	46bd      	mov	sp, r7
 80083a0:	bd80      	pop	{r7, pc}

080083a2 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 80083a2:	b580      	push	{r7, lr}
 80083a4:	b082      	sub	sp, #8
 80083a6:	af00      	add	r7, sp, #0
 80083a8:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80083aa:	687b      	ldr	r3, [r7, #4]
 80083ac:	3310      	adds	r3, #16
 80083ae:	4618      	mov	r0, r3
 80083b0:	f000 fce0 	bl	8008d74 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 80083b4:	4603      	mov	r3, r0
 80083b6:	4618      	mov	r0, r3
 80083b8:	3708      	adds	r7, #8
 80083ba:	46bd      	mov	sp, r7
 80083bc:	bd80      	pop	{r7, pc}

080083be <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80083be:	b480      	push	{r7}
 80083c0:	b083      	sub	sp, #12
 80083c2:	af00      	add	r7, sp, #0
 80083c4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80083c6:	687b      	ldr	r3, [r7, #4]
 80083c8:	4618      	mov	r0, r3
 80083ca:	370c      	adds	r7, #12
 80083cc:	46bd      	mov	sp, r7
 80083ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083d2:	4770      	bx	lr

080083d4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 80083d4:	b580      	push	{r7, lr}
 80083d6:	b082      	sub	sp, #8
 80083d8:	af00      	add	r7, sp, #0
 80083da:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80083dc:	6878      	ldr	r0, [r7, #4]
 80083de:	f7ff f8d0 	bl	8007582 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80083e2:	4603      	mov	r3, r0
 80083e4:	2101      	movs	r1, #1
 80083e6:	4618      	mov	r0, r3
 80083e8:	f000 fcd0 	bl	8008d8c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>
 80083ec:	4603      	mov	r3, r0
 80083ee:	4618      	mov	r0, r3
 80083f0:	3708      	adds	r7, #8
 80083f2:	46bd      	mov	sp, r7
 80083f4:	bd80      	pop	{r7, pc}

080083f6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80083f6:	b5b0      	push	{r4, r5, r7, lr}
 80083f8:	b084      	sub	sp, #16
 80083fa:	af00      	add	r7, sp, #0
 80083fc:	60f8      	str	r0, [r7, #12]
 80083fe:	60b9      	str	r1, [r7, #8]
 8008400:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8008402:	68bb      	ldr	r3, [r7, #8]
 8008404:	4619      	mov	r1, r3
 8008406:	2014      	movs	r0, #20
 8008408:	f7f8 fe27 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 800840c:	68f8      	ldr	r0, [r7, #12]
 800840e:	f7ff f8b8 	bl	8007582 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8008412:	4604      	mov	r4, r0
 8008414:	68b8      	ldr	r0, [r7, #8]
 8008416:	f7ff f8bf 	bl	8007598 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800841a:	4605      	mov	r5, r0
 800841c:	6878      	ldr	r0, [r7, #4]
 800841e:	f7fd f875 	bl	800550c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008422:	4603      	mov	r3, r0
 8008424:	461a      	mov	r2, r3
 8008426:	4629      	mov	r1, r5
 8008428:	4620      	mov	r0, r4
 800842a:	f000 fcbe 	bl	8008daa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 800842e:	bf00      	nop
 8008430:	3710      	adds	r7, #16
 8008432:	46bd      	mov	sp, r7
 8008434:	bdb0      	pop	{r4, r5, r7, pc}

08008436 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 8008436:	b580      	push	{r7, lr}
 8008438:	b082      	sub	sp, #8
 800843a:	af00      	add	r7, sp, #0
 800843c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800843e:	6878      	ldr	r0, [r7, #4]
 8008440:	f000 fcc6 	bl	8008dd0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8008444:	4603      	mov	r3, r0
 8008446:	4618      	mov	r0, r3
 8008448:	3708      	adds	r7, #8
 800844a:	46bd      	mov	sp, r7
 800844c:	bd80      	pop	{r7, pc}

0800844e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 800844e:	b580      	push	{r7, lr}
 8008450:	b082      	sub	sp, #8
 8008452:	af00      	add	r7, sp, #0
 8008454:	6078      	str	r0, [r7, #4]
 8008456:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8008458:	6838      	ldr	r0, [r7, #0]
 800845a:	f7f8 fe40 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800845e:	bf00      	nop
 8008460:	3708      	adds	r7, #8
 8008462:	46bd      	mov	sp, r7
 8008464:	bd80      	pop	{r7, pc}

08008466 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 8008466:	b580      	push	{r7, lr}
 8008468:	b084      	sub	sp, #16
 800846a:	af00      	add	r7, sp, #0
 800846c:	60f8      	str	r0, [r7, #12]
 800846e:	60b9      	str	r1, [r7, #8]
 8008470:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8008472:	68b8      	ldr	r0, [r7, #8]
 8008474:	f01a ff00 	bl	8023278 <_ZdlPv>
      }
 8008478:	3710      	adds	r7, #16
 800847a:	46bd      	mov	sp, r7
 800847c:	bd80      	pop	{r7, pc}

0800847e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 800847e:	b580      	push	{r7, lr}
 8008480:	b082      	sub	sp, #8
 8008482:	af00      	add	r7, sp, #0
 8008484:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8008486:	687b      	ldr	r3, [r7, #4]
 8008488:	3310      	adds	r3, #16
 800848a:	4618      	mov	r0, r3
 800848c:	f000 fcab 	bl	8008de6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 8008490:	4603      	mov	r3, r0
 8008492:	4618      	mov	r0, r3
 8008494:	3708      	adds	r7, #8
 8008496:	46bd      	mov	sp, r7
 8008498:	bd80      	pop	{r7, pc}

0800849a <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800849a:	b480      	push	{r7}
 800849c:	b083      	sub	sp, #12
 800849e:	af00      	add	r7, sp, #0
 80084a0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80084a2:	687b      	ldr	r3, [r7, #4]
 80084a4:	4618      	mov	r0, r3
 80084a6:	370c      	adds	r7, #12
 80084a8:	46bd      	mov	sp, r7
 80084aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084ae:	4770      	bx	lr

080084b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 80084b0:	b580      	push	{r7, lr}
 80084b2:	b082      	sub	sp, #8
 80084b4:	af00      	add	r7, sp, #0
 80084b6:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80084b8:	6878      	ldr	r0, [r7, #4]
 80084ba:	f7ff f90a 	bl	80076d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80084be:	4603      	mov	r3, r0
 80084c0:	2101      	movs	r1, #1
 80084c2:	4618      	mov	r0, r3
 80084c4:	f000 fc9b 	bl	8008dfe <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>
 80084c8:	4603      	mov	r3, r0
 80084ca:	4618      	mov	r0, r3
 80084cc:	3708      	adds	r7, #8
 80084ce:	46bd      	mov	sp, r7
 80084d0:	bd80      	pop	{r7, pc}

080084d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80084d2:	b5b0      	push	{r4, r5, r7, lr}
 80084d4:	b084      	sub	sp, #16
 80084d6:	af00      	add	r7, sp, #0
 80084d8:	60f8      	str	r0, [r7, #12]
 80084da:	60b9      	str	r1, [r7, #8]
 80084dc:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 80084de:	68bb      	ldr	r3, [r7, #8]
 80084e0:	4619      	mov	r1, r3
 80084e2:	202c      	movs	r0, #44	; 0x2c
 80084e4:	f7f8 fdb9 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 80084e8:	68f8      	ldr	r0, [r7, #12]
 80084ea:	f7ff f8f2 	bl	80076d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80084ee:	4604      	mov	r4, r0
 80084f0:	68b8      	ldr	r0, [r7, #8]
 80084f2:	f7ff f8f9 	bl	80076e8 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 80084f6:	4605      	mov	r5, r0
 80084f8:	6878      	ldr	r0, [r7, #4]
 80084fa:	f7fd f9fd 	bl	80058f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 80084fe:	4603      	mov	r3, r0
 8008500:	461a      	mov	r2, r3
 8008502:	4629      	mov	r1, r5
 8008504:	4620      	mov	r0, r4
 8008506:	f000 fc89 	bl	8008e1c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>
	}
 800850a:	bf00      	nop
 800850c:	3710      	adds	r7, #16
 800850e:	46bd      	mov	sp, r7
 8008510:	bdb0      	pop	{r4, r5, r7, pc}

08008512 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() noexcept
 8008512:	b580      	push	{r7, lr}
 8008514:	b082      	sub	sp, #8
 8008516:	af00      	add	r7, sp, #0
 8008518:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800851a:	6878      	ldr	r0, [r7, #4]
 800851c:	f000 fc91 	bl	8008e42 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8008520:	4603      	mov	r3, r0
 8008522:	4618      	mov	r0, r3
 8008524:	3708      	adds	r7, #8
 8008526:	46bd      	mov	sp, r7
 8008528:	bd80      	pop	{r7, pc}

0800852a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
 800852a:	b480      	push	{r7}
 800852c:	b083      	sub	sp, #12
 800852e:	af00      	add	r7, sp, #0
 8008530:	6078      	str	r0, [r7, #4]
 8008532:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8008534:	bf00      	nop
 8008536:	370c      	adds	r7, #12
 8008538:	46bd      	mov	sp, r7
 800853a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800853e:	4770      	bx	lr

08008540 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 8008540:	b580      	push	{r7, lr}
 8008542:	b084      	sub	sp, #16
 8008544:	af00      	add	r7, sp, #0
 8008546:	60f8      	str	r0, [r7, #12]
 8008548:	60b9      	str	r1, [r7, #8]
 800854a:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800854c:	68b8      	ldr	r0, [r7, #8]
 800854e:	f01a fe93 	bl	8023278 <_ZdlPv>
      }
 8008552:	3710      	adds	r7, #16
 8008554:	46bd      	mov	sp, r7
 8008556:	bd80      	pop	{r7, pc}

08008558 <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr() const
 8008558:	b580      	push	{r7, lr}
 800855a:	b082      	sub	sp, #8
 800855c:	af00      	add	r7, sp, #0
 800855e:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8008560:	687b      	ldr	r3, [r7, #4]
 8008562:	3310      	adds	r3, #16
 8008564:	4618      	mov	r0, r3
 8008566:	f000 fc77 	bl	8008e58 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 800856a:	4603      	mov	r3, r0
 800856c:	4618      	mov	r0, r3
 800856e:	3708      	adds	r7, #8
 8008570:	46bd      	mov	sp, r7
 8008572:	bd80      	pop	{r7, pc}

08008574 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008574:	b480      	push	{r7}
 8008576:	b083      	sub	sp, #12
 8008578:	af00      	add	r7, sp, #0
 800857a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800857c:	687b      	ldr	r3, [r7, #4]
 800857e:	4618      	mov	r0, r3
 8008580:	370c      	adds	r7, #12
 8008582:	46bd      	mov	sp, r7
 8008584:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008588:	4770      	bx	lr

0800858a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 800858a:	b580      	push	{r7, lr}
 800858c:	b082      	sub	sp, #8
 800858e:	af00      	add	r7, sp, #0
 8008590:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8008592:	6878      	ldr	r0, [r7, #4]
 8008594:	f7ff f94a 	bl	800782c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8008598:	4603      	mov	r3, r0
 800859a:	2101      	movs	r1, #1
 800859c:	4618      	mov	r0, r3
 800859e:	f000 fc67 	bl	8008e70 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>
 80085a2:	4603      	mov	r3, r0
 80085a4:	4618      	mov	r0, r3
 80085a6:	3708      	adds	r7, #8
 80085a8:	46bd      	mov	sp, r7
 80085aa:	bd80      	pop	{r7, pc}

080085ac <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80085ac:	b5b0      	push	{r4, r5, r7, lr}
 80085ae:	b084      	sub	sp, #16
 80085b0:	af00      	add	r7, sp, #0
 80085b2:	60f8      	str	r0, [r7, #12]
 80085b4:	60b9      	str	r1, [r7, #8]
 80085b6:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 80085b8:	68bb      	ldr	r3, [r7, #8]
 80085ba:	4619      	mov	r1, r3
 80085bc:	2014      	movs	r0, #20
 80085be:	f7f8 fd4c 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 80085c2:	68f8      	ldr	r0, [r7, #12]
 80085c4:	f7ff f932 	bl	800782c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80085c8:	4604      	mov	r4, r0
 80085ca:	68b8      	ldr	r0, [r7, #8]
 80085cc:	f7ff f939 	bl	8007842 <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 80085d0:	4605      	mov	r5, r0
 80085d2:	6878      	ldr	r0, [r7, #4]
 80085d4:	f7fd fb7a 	bl	8005ccc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 80085d8:	4603      	mov	r3, r0
 80085da:	461a      	mov	r2, r3
 80085dc:	4629      	mov	r1, r5
 80085de:	4620      	mov	r0, r4
 80085e0:	f000 fc55 	bl	8008e8e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 80085e4:	bf00      	nop
 80085e6:	3710      	adds	r7, #16
 80085e8:	46bd      	mov	sp, r7
 80085ea:	bdb0      	pop	{r4, r5, r7, pc}

080085ec <_ZSt11__addressofIiEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80085ec:	b480      	push	{r7}
 80085ee:	b083      	sub	sp, #12
 80085f0:	af00      	add	r7, sp, #0
 80085f2:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80085f4:	687b      	ldr	r3, [r7, #4]
 80085f6:	4618      	mov	r0, r3
 80085f8:	370c      	adds	r7, #12
 80085fa:	46bd      	mov	sp, r7
 80085fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008600:	4770      	bx	lr

08008602 <_ZSt8_DestroyIiEvPT_>:
    _Destroy(_Tp* __pointer)
 8008602:	b480      	push	{r7}
 8008604:	b083      	sub	sp, #12
 8008606:	af00      	add	r7, sp, #0
 8008608:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800860a:	bf00      	nop
 800860c:	370c      	adds	r7, #12
 800860e:	46bd      	mov	sp, r7
 8008610:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008614:	4770      	bx	lr

08008616 <_ZSt11__addressofIfEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8008616:	b480      	push	{r7}
 8008618:	b083      	sub	sp, #12
 800861a:	af00      	add	r7, sp, #0
 800861c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800861e:	687b      	ldr	r3, [r7, #4]
 8008620:	4618      	mov	r0, r3
 8008622:	370c      	adds	r7, #12
 8008624:	46bd      	mov	sp, r7
 8008626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800862a:	4770      	bx	lr

0800862c <_ZSt8_DestroyIfEvPT_>:
    _Destroy(_Tp* __pointer)
 800862c:	b480      	push	{r7}
 800862e:	b083      	sub	sp, #12
 8008630:	af00      	add	r7, sp, #0
 8008632:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8008634:	bf00      	nop
 8008636:	370c      	adds	r7, #12
 8008638:	46bd      	mov	sp, r7
 800863a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800863e:	4770      	bx	lr

08008640 <_ZSt11__addressofIbEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8008640:	b480      	push	{r7}
 8008642:	b083      	sub	sp, #12
 8008644:	af00      	add	r7, sp, #0
 8008646:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8008648:	687b      	ldr	r3, [r7, #4]
 800864a:	4618      	mov	r0, r3
 800864c:	370c      	adds	r7, #12
 800864e:	46bd      	mov	sp, r7
 8008650:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008654:	4770      	bx	lr

08008656 <_ZSt8_DestroyIbEvPT_>:
    _Destroy(_Tp* __pointer)
 8008656:	b480      	push	{r7}
 8008658:	b083      	sub	sp, #12
 800865a:	af00      	add	r7, sp, #0
 800865c:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800865e:	bf00      	nop
 8008660:	370c      	adds	r7, #12
 8008662:	46bd      	mov	sp, r7
 8008664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008668:	4770      	bx	lr

0800866a <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800866a:	b480      	push	{r7}
 800866c:	b083      	sub	sp, #12
 800866e:	af00      	add	r7, sp, #0
 8008670:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8008672:	687b      	ldr	r3, [r7, #4]
 8008674:	4618      	mov	r0, r3
 8008676:	370c      	adds	r7, #12
 8008678:	46bd      	mov	sp, r7
 800867a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800867e:	4770      	bx	lr

08008680 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    _Destroy(_Tp* __pointer)
 8008680:	b580      	push	{r7, lr}
 8008682:	b082      	sub	sp, #8
 8008684:	af00      	add	r7, sp, #0
 8008686:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8008688:	6878      	ldr	r0, [r7, #4]
 800868a:	f01b f8aa 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800868e:	bf00      	nop
 8008690:	3708      	adds	r7, #8
 8008692:	46bd      	mov	sp, r7
 8008694:	bd80      	pop	{r7, pc}

08008696 <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8008696:	b480      	push	{r7}
 8008698:	b083      	sub	sp, #12
 800869a:	af00      	add	r7, sp, #0
 800869c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800869e:	687b      	ldr	r3, [r7, #4]
 80086a0:	4618      	mov	r0, r3
 80086a2:	370c      	adds	r7, #12
 80086a4:	46bd      	mov	sp, r7
 80086a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086aa:	4770      	bx	lr

080086ac <_ZSt8_DestroyISt6vectorI6SymbolSaIS1_EEEvPT_>:
    _Destroy(_Tp* __pointer)
 80086ac:	b580      	push	{r7, lr}
 80086ae:	b082      	sub	sp, #8
 80086b0:	af00      	add	r7, sp, #0
 80086b2:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80086b4:	6878      	ldr	r0, [r7, #4]
 80086b6:	f000 f89d 	bl	80087f4 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
 80086ba:	bf00      	nop
 80086bc:	3708      	adds	r7, #8
 80086be:	46bd      	mov	sp, r7
 80086c0:	bd80      	pop	{r7, pc}

080086c2 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>:
      vector(const vector& __x)
 80086c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80086c4:	b085      	sub	sp, #20
 80086c6:	af00      	add	r7, sp, #0
 80086c8:	6078      	str	r0, [r7, #4]
 80086ca:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 80086cc:	687c      	ldr	r4, [r7, #4]
 80086ce:	6838      	ldr	r0, [r7, #0]
 80086d0:	f7ff fd09 	bl	80080e6 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 80086d4:	4605      	mov	r5, r0
 80086d6:	683b      	ldr	r3, [r7, #0]
 80086d8:	4618      	mov	r0, r3
 80086da:	f7ff fcbe 	bl	800805a <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80086de:	4602      	mov	r2, r0
 80086e0:	f107 030c 	add.w	r3, r7, #12
 80086e4:	4611      	mov	r1, r2
 80086e6:	4618      	mov	r0, r3
 80086e8:	f000 fbe4 	bl	8008eb4 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>
 80086ec:	f107 030c 	add.w	r3, r7, #12
 80086f0:	461a      	mov	r2, r3
 80086f2:	4629      	mov	r1, r5
 80086f4:	4620      	mov	r0, r4
 80086f6:	f000 fbeb 	bl	8008ed0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>
 80086fa:	f107 030c 	add.w	r3, r7, #12
 80086fe:	4618      	mov	r0, r3
 8008700:	f000 f85d 	bl	80087be <_ZNSaI6SymbolED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8008704:	6838      	ldr	r0, [r7, #0]
 8008706:	f7ff fd0e 	bl	8008126 <_ZNKSt6vectorI6SymbolSaIS0_EE5beginEv>
 800870a:	4605      	mov	r5, r0
 800870c:	6838      	ldr	r0, [r7, #0]
 800870e:	f7ff fd1e 	bl	800814e <_ZNKSt6vectorI6SymbolSaIS0_EE3endEv>
 8008712:	4606      	mov	r6, r0
 8008714:	687b      	ldr	r3, [r7, #4]
 8008716:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 8008718:	687b      	ldr	r3, [r7, #4]
 800871a:	4618      	mov	r0, r3
 800871c:	f7ff fc92 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8008720:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8008722:	4622      	mov	r2, r4
 8008724:	4631      	mov	r1, r6
 8008726:	4628      	mov	r0, r5
 8008728:	f000 f9d4 	bl	8008ad4 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>
 800872c:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 800872e:	687b      	ldr	r3, [r7, #4]
 8008730:	605a      	str	r2, [r3, #4]
      }
 8008732:	687b      	ldr	r3, [r7, #4]
 8008734:	4618      	mov	r0, r3
 8008736:	3714      	adds	r7, #20
 8008738:	46bd      	mov	sp, r7
 800873a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800873c <_ZSt9addressofIiEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 800873c:	b580      	push	{r7, lr}
 800873e:	b082      	sub	sp, #8
 8008740:	af00      	add	r7, sp, #0
 8008742:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008744:	6878      	ldr	r0, [r7, #4]
 8008746:	f7ff ff51 	bl	80085ec <_ZSt11__addressofIiEPT_RS0_>
 800874a:	4603      	mov	r3, r0
 800874c:	4618      	mov	r0, r3
 800874e:	3708      	adds	r7, #8
 8008750:	46bd      	mov	sp, r7
 8008752:	bd80      	pop	{r7, pc}

08008754 <_ZSt9addressofIfEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 8008754:	b580      	push	{r7, lr}
 8008756:	b082      	sub	sp, #8
 8008758:	af00      	add	r7, sp, #0
 800875a:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800875c:	6878      	ldr	r0, [r7, #4]
 800875e:	f7ff ff5a 	bl	8008616 <_ZSt11__addressofIfEPT_RS0_>
 8008762:	4603      	mov	r3, r0
 8008764:	4618      	mov	r0, r3
 8008766:	3708      	adds	r7, #8
 8008768:	46bd      	mov	sp, r7
 800876a:	bd80      	pop	{r7, pc}

0800876c <_ZSt9addressofIbEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 800876c:	b580      	push	{r7, lr}
 800876e:	b082      	sub	sp, #8
 8008770:	af00      	add	r7, sp, #0
 8008772:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8008774:	6878      	ldr	r0, [r7, #4]
 8008776:	f7ff ff63 	bl	8008640 <_ZSt11__addressofIbEPT_RS0_>
 800877a:	4603      	mov	r3, r0
 800877c:	4618      	mov	r0, r3
 800877e:	3708      	adds	r7, #8
 8008780:	46bd      	mov	sp, r7
 8008782:	bd80      	pop	{r7, pc}

08008784 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    addressof(_Tp& __r) noexcept
 8008784:	b580      	push	{r7, lr}
 8008786:	b082      	sub	sp, #8
 8008788:	af00      	add	r7, sp, #0
 800878a:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800878c:	6878      	ldr	r0, [r7, #4]
 800878e:	f7ff ff6c 	bl	800866a <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8008792:	4603      	mov	r3, r0
 8008794:	4618      	mov	r0, r3
 8008796:	3708      	adds	r7, #8
 8008798:	46bd      	mov	sp, r7
 800879a:	bd80      	pop	{r7, pc}

0800879c <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
 800879c:	b580      	push	{r7, lr}
 800879e:	b082      	sub	sp, #8
 80087a0:	af00      	add	r7, sp, #0
 80087a2:	6078      	str	r0, [r7, #4]
 80087a4:	6039      	str	r1, [r7, #0]
      { return allocator_type(_M_get_Tp_allocator()); }
 80087a6:	6838      	ldr	r0, [r7, #0]
 80087a8:	f7ff fc57 	bl	800805a <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80087ac:	4603      	mov	r3, r0
 80087ae:	4619      	mov	r1, r3
 80087b0:	6878      	ldr	r0, [r7, #4]
 80087b2:	f000 fba1 	bl	8008ef8 <_ZNSaI6SymbolEC1ERKS0_>
 80087b6:	6878      	ldr	r0, [r7, #4]
 80087b8:	3708      	adds	r7, #8
 80087ba:	46bd      	mov	sp, r7
 80087bc:	bd80      	pop	{r7, pc}

080087be <_ZNSaI6SymbolED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80087be:	b580      	push	{r7, lr}
 80087c0:	b082      	sub	sp, #8
 80087c2:	af00      	add	r7, sp, #0
 80087c4:	6078      	str	r0, [r7, #4]
 80087c6:	6878      	ldr	r0, [r7, #4]
 80087c8:	f000 fba4 	bl	8008f14 <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	4618      	mov	r0, r3
 80087d0:	3708      	adds	r7, #8
 80087d2:	46bd      	mov	sp, r7
 80087d4:	bd80      	pop	{r7, pc}

080087d6 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS1_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 80087d6:	b580      	push	{r7, lr}
 80087d8:	b082      	sub	sp, #8
 80087da:	af00      	add	r7, sp, #0
 80087dc:	6078      	str	r0, [r7, #4]
 80087de:	6039      	str	r1, [r7, #0]
      : _Base(__a) { }
 80087e0:	687b      	ldr	r3, [r7, #4]
 80087e2:	6839      	ldr	r1, [r7, #0]
 80087e4:	4618      	mov	r0, r3
 80087e6:	f000 fba0 	bl	8008f2a <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	4618      	mov	r0, r3
 80087ee:	3708      	adds	r7, #8
 80087f0:	46bd      	mov	sp, r7
 80087f2:	bd80      	pop	{r7, pc}

080087f4 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 80087f4:	b5b0      	push	{r4, r5, r7, lr}
 80087f6:	b082      	sub	sp, #8
 80087f8:	af00      	add	r7, sp, #0
 80087fa:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80087fc:	687b      	ldr	r3, [r7, #4]
 80087fe:	681c      	ldr	r4, [r3, #0]
 8008800:	687b      	ldr	r3, [r7, #4]
 8008802:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8008804:	687b      	ldr	r3, [r7, #4]
 8008806:	4618      	mov	r0, r3
 8008808:	f7ff fc1c 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 800880c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800880e:	461a      	mov	r2, r3
 8008810:	4629      	mov	r1, r5
 8008812:	4620      	mov	r0, r4
 8008814:	f7ff fccb 	bl	80081ae <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
      }
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	4618      	mov	r0, r3
 800881c:	f000 f858 	bl	80088d0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>
 8008820:	687b      	ldr	r3, [r7, #4]
 8008822:	4618      	mov	r0, r3
 8008824:	3708      	adds	r7, #8
 8008826:	46bd      	mov	sp, r7
 8008828:	bdb0      	pop	{r4, r5, r7, pc}

0800882a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_swap_dataERS3_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 800882a:	b580      	push	{r7, lr}
 800882c:	b086      	sub	sp, #24
 800882e:	af00      	add	r7, sp, #0
 8008830:	6078      	str	r0, [r7, #4]
 8008832:	6039      	str	r1, [r7, #0]
	  _Vector_impl_data __tmp;
 8008834:	f107 030c 	add.w	r3, r7, #12
 8008838:	4618      	mov	r0, r3
 800883a:	f000 fb85 	bl	8008f48 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
 800883e:	f107 030c 	add.w	r3, r7, #12
 8008842:	6879      	ldr	r1, [r7, #4]
 8008844:	4618      	mov	r0, r3
 8008846:	f000 fb93 	bl	8008f70 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  _M_copy_data(__x);
 800884a:	6839      	ldr	r1, [r7, #0]
 800884c:	6878      	ldr	r0, [r7, #4]
 800884e:	f000 fb8f 	bl	8008f70 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	  __x._M_copy_data(__tmp);
 8008852:	f107 030c 	add.w	r3, r7, #12
 8008856:	4619      	mov	r1, r3
 8008858:	6838      	ldr	r0, [r7, #0]
 800885a:	f000 fb89 	bl	8008f70 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>
	}
 800885e:	bf00      	nop
 8008860:	3718      	adds	r7, #24
 8008862:	46bd      	mov	sp, r7
 8008864:	bd80      	pop	{r7, pc}

08008866 <_ZSt15__alloc_on_moveISaI6SymbolEEvRT_S3_>:
  template<typename _Alloc>
    inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_move(_Alloc& __one, _Alloc& __two)
 8008866:	b580      	push	{r7, lr}
 8008868:	b084      	sub	sp, #16
 800886a:	af00      	add	r7, sp, #0
 800886c:	6078      	str	r0, [r7, #4]
 800886e:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_move_assignment __pocma;
      __do_alloc_on_move(__one, __two, __pocma());
 8008870:	461a      	mov	r2, r3
 8008872:	6839      	ldr	r1, [r7, #0]
 8008874:	6878      	ldr	r0, [r7, #4]
 8008876:	f000 fb92 	bl	8008f9e <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>
    }
 800887a:	bf00      	nop
 800887c:	3710      	adds	r7, #16
 800887e:	46bd      	mov	sp, r7
 8008880:	bd80      	pop	{r7, pc}

08008882 <_ZSt9addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>:
    addressof(_Tp& __r) noexcept
 8008882:	b580      	push	{r7, lr}
 8008884:	b082      	sub	sp, #8
 8008886:	af00      	add	r7, sp, #0
 8008888:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800888a:	6878      	ldr	r0, [r7, #4]
 800888c:	f7ff ff03 	bl	8008696 <_ZSt11__addressofISt6vectorI6SymbolSaIS1_EEEPT_RS4_>
 8008890:	4603      	mov	r3, r0
 8008892:	4618      	mov	r0, r3
 8008894:	3708      	adds	r7, #8
 8008896:	46bd      	mov	sp, r7
 8008898:	bd80      	pop	{r7, pc}

0800889a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1EOS3_>:
	_Vector_impl(_Vector_impl&& __x) noexcept
 800889a:	b590      	push	{r4, r7, lr}
 800889c:	b083      	sub	sp, #12
 800889e:	af00      	add	r7, sp, #0
 80088a0:	6078      	str	r0, [r7, #4]
 80088a2:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 80088a4:	6838      	ldr	r0, [r7, #0]
 80088a6:	f000 fb87 	bl	8008fb8 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 80088aa:	4603      	mov	r3, r0
 80088ac:	4619      	mov	r1, r3
 80088ae:	6878      	ldr	r0, [r7, #4]
 80088b0:	f000 fb22 	bl	8008ef8 <_ZNSaI6SymbolEC1ERKS0_>
 80088b4:	687c      	ldr	r4, [r7, #4]
 80088b6:	6838      	ldr	r0, [r7, #0]
 80088b8:	f000 fb7e 	bl	8008fb8 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>
 80088bc:	4603      	mov	r3, r0
 80088be:	4619      	mov	r1, r3
 80088c0:	4620      	mov	r0, r4
 80088c2:	f000 fb84 	bl	8008fce <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>
	{ }
 80088c6:	687b      	ldr	r3, [r7, #4]
 80088c8:	4618      	mov	r0, r3
 80088ca:	370c      	adds	r7, #12
 80088cc:	46bd      	mov	sp, r7
 80088ce:	bd90      	pop	{r4, r7, pc}

080088d0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 80088d0:	b580      	push	{r7, lr}
 80088d2:	b082      	sub	sp, #8
 80088d4:	af00      	add	r7, sp, #0
 80088d6:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 80088dc:	687b      	ldr	r3, [r7, #4]
 80088de:	689a      	ldr	r2, [r3, #8]
 80088e0:	687b      	ldr	r3, [r7, #4]
 80088e2:	681b      	ldr	r3, [r3, #0]
 80088e4:	1ad3      	subs	r3, r2, r3
 80088e6:	115b      	asrs	r3, r3, #5
	_M_deallocate(_M_impl._M_start,
 80088e8:	461a      	mov	r2, r3
 80088ea:	6878      	ldr	r0, [r7, #4]
 80088ec:	f7ff fbda 	bl	80080a4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
      }
 80088f0:	687b      	ldr	r3, [r7, #4]
 80088f2:	4618      	mov	r0, r3
 80088f4:	f7ff fa89 	bl	8007e0a <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implD1Ev>
 80088f8:	687b      	ldr	r3, [r7, #4]
 80088fa:	4618      	mov	r0, r3
 80088fc:	3708      	adds	r7, #8
 80088fe:	46bd      	mov	sp, r7
 8008900:	bd80      	pop	{r7, pc}

08008902 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8008902:	b590      	push	{r4, r7, lr}
 8008904:	b085      	sub	sp, #20
 8008906:	af00      	add	r7, sp, #0
 8008908:	60f8      	str	r0, [r7, #12]
 800890a:	7239      	strb	r1, [r7, #8]
 800890c:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 800890e:	6878      	ldr	r0, [r7, #4]
 8008910:	f7fc fba0 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8008914:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 8008916:	68fb      	ldr	r3, [r7, #12]
 8008918:	4618      	mov	r0, r3
 800891a:	f000 fb7b 	bl	8009014 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 800891e:	4603      	mov	r3, r0
 8008920:	4619      	mov	r1, r3
 8008922:	2018      	movs	r0, #24
 8008924:	f7f8 fb99 	bl	800105a <_ZnwjPv>
 8008928:	4603      	mov	r3, r0
 800892a:	4621      	mov	r1, r4
 800892c:	4618      	mov	r0, r3
 800892e:	f01b f927 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 8008932:	68fb      	ldr	r3, [r7, #12]
 8008934:	4618      	mov	r0, r3
 8008936:	3714      	adds	r7, #20
 8008938:	46bd      	mov	sp, r7
 800893a:	bd90      	pop	{r4, r7, pc}

0800893c <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800893c:	b5b0      	push	{r4, r5, r7, lr}
 800893e:	b084      	sub	sp, #16
 8008940:	af00      	add	r7, sp, #0
 8008942:	60f8      	str	r0, [r7, #12]
 8008944:	7239      	strb	r1, [r7, #8]
 8008946:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8008948:	68fc      	ldr	r4, [r7, #12]
 800894a:	6878      	ldr	r0, [r7, #4]
 800894c:	f7fc fb82 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8008950:	4603      	mov	r3, r0
 8008952:	461a      	mov	r2, r3
 8008954:	4629      	mov	r1, r5
 8008956:	4620      	mov	r0, r4
 8008958:	f7ff ffd3 	bl	8008902 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800895c:	68fb      	ldr	r3, [r7, #12]
 800895e:	4618      	mov	r0, r3
 8008960:	3710      	adds	r7, #16
 8008962:	46bd      	mov	sp, r7
 8008964:	bdb0      	pop	{r4, r5, r7, pc}

08008966 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008966:	b5b0      	push	{r4, r5, r7, lr}
 8008968:	b084      	sub	sp, #16
 800896a:	af00      	add	r7, sp, #0
 800896c:	60f8      	str	r0, [r7, #12]
 800896e:	7239      	strb	r1, [r7, #8]
 8008970:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008972:	68fc      	ldr	r4, [r7, #12]
 8008974:	6878      	ldr	r0, [r7, #4]
 8008976:	f7fc fb6d 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800897a:	4603      	mov	r3, r0
 800897c:	461a      	mov	r2, r3
 800897e:	4629      	mov	r1, r5
 8008980:	4620      	mov	r0, r4
 8008982:	f7ff ffdb 	bl	800893c <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRKS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8008986:	68fb      	ldr	r3, [r7, #12]
 8008988:	4618      	mov	r0, r3
 800898a:	3710      	adds	r7, #16
 800898c:	46bd      	mov	sp, r7
 800898e:	bdb0      	pop	{r4, r5, r7, pc}

08008990 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008990:	b5b0      	push	{r4, r5, r7, lr}
 8008992:	b084      	sub	sp, #16
 8008994:	af00      	add	r7, sp, #0
 8008996:	60f8      	str	r0, [r7, #12]
 8008998:	7239      	strb	r1, [r7, #8]
 800899a:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 800899c:	68fc      	ldr	r4, [r7, #12]
 800899e:	6878      	ldr	r0, [r7, #4]
 80089a0:	f7fc fb58 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80089a4:	4603      	mov	r3, r0
 80089a6:	461a      	mov	r2, r3
 80089a8:	4629      	mov	r1, r5
 80089aa:	4620      	mov	r0, r4
 80089ac:	f7ff ffdb 	bl	8008966 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80089b0:	68fb      	ldr	r3, [r7, #12]
 80089b2:	4618      	mov	r0, r3
 80089b4:	3710      	adds	r7, #16
 80089b6:	46bd      	mov	sp, r7
 80089b8:	bdb0      	pop	{r4, r5, r7, pc}

080089ba <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80089ba:	b5b0      	push	{r4, r5, r7, lr}
 80089bc:	b084      	sub	sp, #16
 80089be:	af00      	add	r7, sp, #0
 80089c0:	60f8      	str	r0, [r7, #12]
 80089c2:	7239      	strb	r1, [r7, #8]
 80089c4:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80089c6:	68fc      	ldr	r4, [r7, #12]
 80089c8:	6878      	ldr	r0, [r7, #4]
 80089ca:	f7fc fb43 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80089ce:	4603      	mov	r3, r0
 80089d0:	461a      	mov	r2, r3
 80089d2:	4629      	mov	r1, r5
 80089d4:	4620      	mov	r0, r4
 80089d6:	f7ff ffdb 	bl	8008990 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80089da:	68fb      	ldr	r3, [r7, #12]
 80089dc:	4618      	mov	r0, r3
 80089de:	3710      	adds	r7, #16
 80089e0:	46bd      	mov	sp, r7
 80089e2:	bdb0      	pop	{r4, r5, r7, pc}

080089e4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 80089e4:	b5b0      	push	{r4, r5, r7, lr}
 80089e6:	b084      	sub	sp, #16
 80089e8:	af00      	add	r7, sp, #0
 80089ea:	60f8      	str	r0, [r7, #12]
 80089ec:	7239      	strb	r1, [r7, #8]
 80089ee:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 80089f0:	68fc      	ldr	r4, [r7, #12]
 80089f2:	6878      	ldr	r0, [r7, #4]
 80089f4:	f7fc fb2e 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80089f8:	4603      	mov	r3, r0
 80089fa:	461a      	mov	r2, r3
 80089fc:	4629      	mov	r1, r5
 80089fe:	4620      	mov	r0, r4
 8008a00:	f7ff ffdb 	bl	80089ba <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008a04:	68fb      	ldr	r3, [r7, #12]
 8008a06:	2203      	movs	r2, #3
 8008a08:	761a      	strb	r2, [r3, #24]
	{ }
 8008a0a:	68fb      	ldr	r3, [r7, #12]
 8008a0c:	4618      	mov	r0, r3
 8008a0e:	3710      	adds	r7, #16
 8008a10:	46bd      	mov	sp, r7
 8008a12:	bdb0      	pop	{r4, r5, r7, pc}

08008a14 <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 8008a14:	b590      	push	{r4, r7, lr}
 8008a16:	b085      	sub	sp, #20
 8008a18:	af00      	add	r7, sp, #0
 8008a1a:	6078      	str	r0, [r7, #4]
 8008a1c:	6039      	str	r1, [r7, #0]
	if (size_type __n = this->_M_impl._M_finish - __pos)
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	685a      	ldr	r2, [r3, #4]
 8008a22:	683b      	ldr	r3, [r7, #0]
 8008a24:	1ad3      	subs	r3, r2, r3
 8008a26:	115b      	asrs	r3, r3, #5
 8008a28:	60fb      	str	r3, [r7, #12]
 8008a2a:	68fb      	ldr	r3, [r7, #12]
 8008a2c:	2b00      	cmp	r3, #0
 8008a2e:	d00e      	beq.n	8008a4e <_ZNSt6vectorI6SymbolSaIS0_EE15_M_erase_at_endEPS0_+0x3a>
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	685c      	ldr	r4, [r3, #4]
			  _M_get_Tp_allocator());
 8008a34:	687b      	ldr	r3, [r7, #4]
 8008a36:	4618      	mov	r0, r3
 8008a38:	f7ff fb04 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8008a3c:	4603      	mov	r3, r0
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 8008a3e:	461a      	mov	r2, r3
 8008a40:	4621      	mov	r1, r4
 8008a42:	6838      	ldr	r0, [r7, #0]
 8008a44:	f7ff fbb3 	bl	80081ae <_ZSt8_DestroyIP6SymbolS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
 8008a48:	687b      	ldr	r3, [r7, #4]
 8008a4a:	683a      	ldr	r2, [r7, #0]
 8008a4c:	605a      	str	r2, [r3, #4]
      }
 8008a4e:	bf00      	nop
 8008a50:	3714      	adds	r7, #20
 8008a52:	46bd      	mov	sp, r7
 8008a54:	bd90      	pop	{r4, r7, pc}

08008a56 <_ZNSt16allocator_traitsISaI6SymbolEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8008a56:	b580      	push	{r7, lr}
 8008a58:	b084      	sub	sp, #16
 8008a5a:	af00      	add	r7, sp, #0
 8008a5c:	60f8      	str	r0, [r7, #12]
 8008a5e:	60b9      	str	r1, [r7, #8]
 8008a60:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8008a62:	687a      	ldr	r2, [r7, #4]
 8008a64:	68b9      	ldr	r1, [r7, #8]
 8008a66:	68f8      	ldr	r0, [r7, #12]
 8008a68:	f000 fae0 	bl	800902c <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>
 8008a6c:	bf00      	nop
 8008a6e:	3710      	adds	r7, #16
 8008a70:	46bd      	mov	sp, r7
 8008a72:	bd80      	pop	{r7, pc}

08008a74 <_ZSt18__do_alloc_on_copyISaI6SymbolEEvRT_RKS2_St17integral_constantIbLb0EE>:
    __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 8008a74:	b480      	push	{r7}
 8008a76:	b085      	sub	sp, #20
 8008a78:	af00      	add	r7, sp, #0
 8008a7a:	60f8      	str	r0, [r7, #12]
 8008a7c:	60b9      	str	r1, [r7, #8]
 8008a7e:	713a      	strb	r2, [r7, #4]
    { }
 8008a80:	bf00      	nop
 8008a82:	3714      	adds	r7, #20
 8008a84:	46bd      	mov	sp, r7
 8008a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a8a:	4770      	bx	lr

08008a8c <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8008a8c:	b480      	push	{r7}
 8008a8e:	b083      	sub	sp, #12
 8008a90:	af00      	add	r7, sp, #0
 8008a92:	6078      	str	r0, [r7, #4]
 8008a94:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8008a96:	683b      	ldr	r3, [r7, #0]
 8008a98:	681a      	ldr	r2, [r3, #0]
 8008a9a:	687b      	ldr	r3, [r7, #4]
 8008a9c:	601a      	str	r2, [r3, #0]
 8008a9e:	687b      	ldr	r3, [r7, #4]
 8008aa0:	4618      	mov	r0, r3
 8008aa2:	370c      	adds	r7, #12
 8008aa4:	46bd      	mov	sp, r7
 8008aa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aaa:	4770      	bx	lr

08008aac <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8008aac:	b580      	push	{r7, lr}
 8008aae:	b082      	sub	sp, #8
 8008ab0:	af00      	add	r7, sp, #0
 8008ab2:	6078      	str	r0, [r7, #4]
 8008ab4:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8008ab6:	683b      	ldr	r3, [r7, #0]
 8008ab8:	2b00      	cmp	r3, #0
 8008aba:	d006      	beq.n	8008aca <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x1e>
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	6839      	ldr	r1, [r7, #0]
 8008ac0:	4618      	mov	r0, r3
 8008ac2:	f000 fabf 	bl	8009044 <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>
 8008ac6:	4603      	mov	r3, r0
 8008ac8:	e000      	b.n	8008acc <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj+0x20>
 8008aca:	2300      	movs	r3, #0
      }
 8008acc:	4618      	mov	r0, r3
 8008ace:	3708      	adds	r7, #8
 8008ad0:	46bd      	mov	sp, r7
 8008ad2:	bd80      	pop	{r7, pc}

08008ad4 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8008ad4:	b580      	push	{r7, lr}
 8008ad6:	b084      	sub	sp, #16
 8008ad8:	af00      	add	r7, sp, #0
 8008ada:	60f8      	str	r0, [r7, #12]
 8008adc:	60b9      	str	r1, [r7, #8]
 8008ade:	607a      	str	r2, [r7, #4]
 8008ae0:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 8008ae2:	687a      	ldr	r2, [r7, #4]
 8008ae4:	68b9      	ldr	r1, [r7, #8]
 8008ae6:	68f8      	ldr	r0, [r7, #12]
 8008ae8:	f000 fabb 	bl	8009062 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>
 8008aec:	4603      	mov	r3, r0
 8008aee:	4618      	mov	r0, r3
 8008af0:	3710      	adds	r7, #16
 8008af2:	46bd      	mov	sp, r7
 8008af4:	bd80      	pop	{r7, pc}

08008af6 <_ZSt8_DestroyIP6SymbolEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8008af6:	b580      	push	{r7, lr}
 8008af8:	b082      	sub	sp, #8
 8008afa:	af00      	add	r7, sp, #0
 8008afc:	6078      	str	r0, [r7, #4]
 8008afe:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8008b00:	6839      	ldr	r1, [r7, #0]
 8008b02:	6878      	ldr	r0, [r7, #4]
 8008b04:	f000 fabf 	bl	8009086 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>
    }
 8008b08:	bf00      	nop
 8008b0a:	3708      	adds	r7, #8
 8008b0c:	46bd      	mov	sp, r7
 8008b0e:	bd80      	pop	{r7, pc}

08008b10 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8008b10:	b480      	push	{r7}
 8008b12:	b083      	sub	sp, #12
 8008b14:	af00      	add	r7, sp, #0
 8008b16:	6078      	str	r0, [r7, #4]
 8008b18:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8008b1a:	683b      	ldr	r3, [r7, #0]
 8008b1c:	681a      	ldr	r2, [r3, #0]
 8008b1e:	687b      	ldr	r3, [r7, #4]
 8008b20:	601a      	str	r2, [r3, #0]
 8008b22:	687b      	ldr	r3, [r7, #4]
 8008b24:	4618      	mov	r0, r3
 8008b26:	370c      	adds	r7, #12
 8008b28:	46bd      	mov	sp, r7
 8008b2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b2e:	4770      	bx	lr

08008b30 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEET_S9_>:

  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
 8008b30:	b480      	push	{r7}
 8008b32:	b083      	sub	sp, #12
 8008b34:	af00      	add	r7, sp, #0
 8008b36:	6078      	str	r0, [r7, #4]
    { return __it; }
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	4618      	mov	r0, r3
 8008b3c:	370c      	adds	r7, #12
 8008b3e:	46bd      	mov	sp, r7
 8008b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b44:	4770      	bx	lr

08008b46 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEENS1_IPS2_S7_EEET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 8008b46:	b5b0      	push	{r4, r5, r7, lr}
 8008b48:	b084      	sub	sp, #16
 8008b4a:	af00      	add	r7, sp, #0
 8008b4c:	60f8      	str	r0, [r7, #12]
 8008b4e:	60b9      	str	r1, [r7, #8]
 8008b50:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8008b52:	68f8      	ldr	r0, [r7, #12]
 8008b54:	f000 faaf 	bl	80090b6 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 8008b58:	4604      	mov	r4, r0
 8008b5a:	68b8      	ldr	r0, [r7, #8]
 8008b5c:	f000 faab 	bl	80090b6 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>
 8008b60:	4605      	mov	r5, r0
 8008b62:	6878      	ldr	r0, [r7, #4]
 8008b64:	f000 fab5 	bl	80090d2 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 8008b68:	4603      	mov	r3, r0
 8008b6a:	461a      	mov	r2, r3
 8008b6c:	4629      	mov	r1, r5
 8008b6e:	4620      	mov	r0, r4
 8008b70:	f000 fabd 	bl	80090ee <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>
 8008b74:	4603      	mov	r3, r0
 8008b76:	4619      	mov	r1, r3
 8008b78:	6878      	ldr	r0, [r7, #4]
 8008b7a:	f000 faca 	bl	8009112 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>
 8008b7e:	4603      	mov	r3, r0
    }
 8008b80:	4618      	mov	r0, r3
 8008b82:	3710      	adds	r7, #16
 8008b84:	46bd      	mov	sp, r7
 8008b86:	bdb0      	pop	{r4, r5, r7, pc}

08008b88 <_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEEEvT_S8_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8008b88:	b580      	push	{r7, lr}
 8008b8a:	b082      	sub	sp, #8
 8008b8c:	af00      	add	r7, sp, #0
 8008b8e:	6078      	str	r0, [r7, #4]
 8008b90:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8008b92:	6839      	ldr	r1, [r7, #0]
 8008b94:	6878      	ldr	r0, [r7, #4]
 8008b96:	f000 fad3 	bl	8009140 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>
    }
 8008b9a:	bf00      	nop
 8008b9c:	3708      	adds	r7, #8
 8008b9e:	46bd      	mov	sp, r7
 8008ba0:	bd80      	pop	{r7, pc}

08008ba2 <_ZSt12__miter_baseIP6SymbolET_S2_>:
    __miter_base(_Iterator __it)
 8008ba2:	b480      	push	{r7}
 8008ba4:	b083      	sub	sp, #12
 8008ba6:	af00      	add	r7, sp, #0
 8008ba8:	6078      	str	r0, [r7, #4]
    { return __it; }
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	4618      	mov	r0, r3
 8008bae:	370c      	adds	r7, #12
 8008bb0:	46bd      	mov	sp, r7
 8008bb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bb6:	4770      	bx	lr

08008bb8 <_ZSt14__copy_move_a2ILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 8008bb8:	b5b0      	push	{r4, r5, r7, lr}
 8008bba:	b084      	sub	sp, #16
 8008bbc:	af00      	add	r7, sp, #0
 8008bbe:	60f8      	str	r0, [r7, #12]
 8008bc0:	60b9      	str	r1, [r7, #8]
 8008bc2:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8008bc4:	68f8      	ldr	r0, [r7, #12]
 8008bc6:	f000 fade 	bl	8009186 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8008bca:	4604      	mov	r4, r0
 8008bcc:	68b8      	ldr	r0, [r7, #8]
 8008bce:	f000 fada 	bl	8009186 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8008bd2:	4605      	mov	r5, r0
 8008bd4:	687b      	ldr	r3, [r7, #4]
 8008bd6:	4618      	mov	r0, r3
 8008bd8:	f000 fad5 	bl	8009186 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8008bdc:	4603      	mov	r3, r0
 8008bde:	461a      	mov	r2, r3
 8008be0:	4629      	mov	r1, r5
 8008be2:	4620      	mov	r0, r4
 8008be4:	f000 fada 	bl	800919c <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>
 8008be8:	4602      	mov	r2, r0
 8008bea:	1d3b      	adds	r3, r7, #4
 8008bec:	4611      	mov	r1, r2
 8008bee:	4618      	mov	r0, r3
 8008bf0:	f000 fae6 	bl	80091c0 <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>
 8008bf4:	4603      	mov	r3, r0
    }
 8008bf6:	4618      	mov	r0, r3
 8008bf8:	3710      	adds	r7, #16
 8008bfa:	46bd      	mov	sp, r7
 8008bfc:	bdb0      	pop	{r4, r5, r7, pc}

08008bfe <_ZSt18uninitialized_copyIP6SymbolS1_ET0_T_S3_S2_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8008bfe:	b580      	push	{r7, lr}
 8008c00:	b086      	sub	sp, #24
 8008c02:	af00      	add	r7, sp, #0
 8008c04:	60f8      	str	r0, [r7, #12]
 8008c06:	60b9      	str	r1, [r7, #8]
 8008c08:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 8008c0a:	2301      	movs	r3, #1
 8008c0c:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8008c0e:	687a      	ldr	r2, [r7, #4]
 8008c10:	68b9      	ldr	r1, [r7, #8]
 8008c12:	68f8      	ldr	r0, [r7, #12]
 8008c14:	f000 fae0 	bl	80091d8 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>
 8008c18:	4603      	mov	r3, r0
    }
 8008c1a:	4618      	mov	r0, r3
 8008c1c:	3718      	adds	r7, #24
 8008c1e:	46bd      	mov	sp, r7
 8008c20:	bd80      	pop	{r7, pc}

08008c22 <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8008c22:	b590      	push	{r4, r7, lr}
 8008c24:	b085      	sub	sp, #20
 8008c26:	af00      	add	r7, sp, #0
 8008c28:	60f8      	str	r0, [r7, #12]
 8008c2a:	7239      	strb	r1, [r7, #8]
 8008c2c:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 8008c2e:	6878      	ldr	r0, [r7, #4]
 8008c30:	f7fc fa45 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008c34:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 8008c36:	68fb      	ldr	r3, [r7, #12]
 8008c38:	4618      	mov	r0, r3
 8008c3a:	f000 faed 	bl	8009218 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 8008c3e:	4603      	mov	r3, r0
 8008c40:	4619      	mov	r1, r3
 8008c42:	200c      	movs	r0, #12
 8008c44:	f7f8 fa09 	bl	800105a <_ZnwjPv>
 8008c48:	4603      	mov	r3, r0
 8008c4a:	4621      	mov	r1, r4
 8008c4c:	4618      	mov	r0, r3
 8008c4e:	f7ff fd38 	bl	80086c2 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
	}
 8008c52:	68fb      	ldr	r3, [r7, #12]
 8008c54:	4618      	mov	r0, r3
 8008c56:	3714      	adds	r7, #20
 8008c58:	46bd      	mov	sp, r7
 8008c5a:	bd90      	pop	{r4, r7, pc}

08008c5c <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8008c5c:	b5b0      	push	{r4, r5, r7, lr}
 8008c5e:	b084      	sub	sp, #16
 8008c60:	af00      	add	r7, sp, #0
 8008c62:	60f8      	str	r0, [r7, #12]
 8008c64:	7239      	strb	r1, [r7, #8]
 8008c66:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8008c68:	68fc      	ldr	r4, [r7, #12]
 8008c6a:	6878      	ldr	r0, [r7, #4]
 8008c6c:	f7fc fa27 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008c70:	4603      	mov	r3, r0
 8008c72:	461a      	mov	r2, r3
 8008c74:	4629      	mov	r1, r5
 8008c76:	4620      	mov	r0, r4
 8008c78:	f7ff ffd3 	bl	8008c22 <_ZNSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8008c7c:	68fb      	ldr	r3, [r7, #12]
 8008c7e:	4618      	mov	r0, r3
 8008c80:	3710      	adds	r7, #16
 8008c82:	46bd      	mov	sp, r7
 8008c84:	bdb0      	pop	{r4, r5, r7, pc}

08008c86 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008c86:	b5b0      	push	{r4, r5, r7, lr}
 8008c88:	b084      	sub	sp, #16
 8008c8a:	af00      	add	r7, sp, #0
 8008c8c:	60f8      	str	r0, [r7, #12]
 8008c8e:	7239      	strb	r1, [r7, #8]
 8008c90:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008c92:	68fc      	ldr	r4, [r7, #12]
 8008c94:	6878      	ldr	r0, [r7, #4]
 8008c96:	f7fc fa12 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008c9a:	4603      	mov	r3, r0
 8008c9c:	461a      	mov	r2, r3
 8008c9e:	4629      	mov	r1, r5
 8008ca0:	4620      	mov	r0, r4
 8008ca2:	f7ff ffdb 	bl	8008c5c <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS3_EEEEC1IJRKS5_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8008ca6:	68fb      	ldr	r3, [r7, #12]
 8008ca8:	4618      	mov	r0, r3
 8008caa:	3710      	adds	r7, #16
 8008cac:	46bd      	mov	sp, r7
 8008cae:	bdb0      	pop	{r4, r5, r7, pc}

08008cb0 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008cb0:	b5b0      	push	{r4, r5, r7, lr}
 8008cb2:	b084      	sub	sp, #16
 8008cb4:	af00      	add	r7, sp, #0
 8008cb6:	60f8      	str	r0, [r7, #12]
 8008cb8:	7239      	strb	r1, [r7, #8]
 8008cba:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008cbc:	68fc      	ldr	r4, [r7, #12]
 8008cbe:	6878      	ldr	r0, [r7, #4]
 8008cc0:	f7fc f9fd 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008cc4:	4603      	mov	r3, r0
 8008cc6:	461a      	mov	r2, r3
 8008cc8:	4629      	mov	r1, r5
 8008cca:	4620      	mov	r0, r4
 8008ccc:	f7ff ffdb 	bl	8008c86 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008cd0:	68fb      	ldr	r3, [r7, #12]
 8008cd2:	4618      	mov	r0, r3
 8008cd4:	3710      	adds	r7, #16
 8008cd6:	46bd      	mov	sp, r7
 8008cd8:	bdb0      	pop	{r4, r5, r7, pc}

08008cda <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008cda:	b5b0      	push	{r4, r5, r7, lr}
 8008cdc:	b084      	sub	sp, #16
 8008cde:	af00      	add	r7, sp, #0
 8008ce0:	60f8      	str	r0, [r7, #12]
 8008ce2:	7239      	strb	r1, [r7, #8]
 8008ce4:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008ce6:	68fc      	ldr	r4, [r7, #12]
 8008ce8:	6878      	ldr	r0, [r7, #4]
 8008cea:	f7fc f9e8 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008cee:	4603      	mov	r3, r0
 8008cf0:	461a      	mov	r2, r3
 8008cf2:	4629      	mov	r1, r5
 8008cf4:	4620      	mov	r0, r4
 8008cf6:	f7ff ffdb 	bl	8008cb0 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008cfa:	68fb      	ldr	r3, [r7, #12]
 8008cfc:	4618      	mov	r0, r3
 8008cfe:	3710      	adds	r7, #16
 8008d00:	46bd      	mov	sp, r7
 8008d02:	bdb0      	pop	{r4, r5, r7, pc}

08008d04 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8008d04:	b5b0      	push	{r4, r5, r7, lr}
 8008d06:	b084      	sub	sp, #16
 8008d08:	af00      	add	r7, sp, #0
 8008d0a:	60f8      	str	r0, [r7, #12]
 8008d0c:	7239      	strb	r1, [r7, #8]
 8008d0e:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8008d10:	68fc      	ldr	r4, [r7, #12]
 8008d12:	6878      	ldr	r0, [r7, #4]
 8008d14:	f7fc f9d3 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008d18:	4603      	mov	r3, r0
 8008d1a:	461a      	mov	r2, r3
 8008d1c:	4629      	mov	r1, r5
 8008d1e:	4620      	mov	r0, r4
 8008d20:	f7ff ffdb 	bl	8008cda <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8008d24:	68fb      	ldr	r3, [r7, #12]
 8008d26:	4618      	mov	r0, r3
 8008d28:	3710      	adds	r7, #16
 8008d2a:	46bd      	mov	sp, r7
 8008d2c:	bdb0      	pop	{r4, r5, r7, pc}

08008d2e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8008d2e:	b5b0      	push	{r4, r5, r7, lr}
 8008d30:	b084      	sub	sp, #16
 8008d32:	af00      	add	r7, sp, #0
 8008d34:	60f8      	str	r0, [r7, #12]
 8008d36:	7239      	strb	r1, [r7, #8]
 8008d38:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 8008d3a:	68fc      	ldr	r4, [r7, #12]
 8008d3c:	6878      	ldr	r0, [r7, #4]
 8008d3e:	f7fc f9be 	bl	80050be <_ZSt7forwardIRKSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008d42:	4603      	mov	r3, r0
 8008d44:	461a      	mov	r2, r3
 8008d46:	4629      	mov	r1, r5
 8008d48:	4620      	mov	r0, r4
 8008d4a:	f7ff ffdb 	bl	8008d04 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj4EJRKSB_EEESt16in_place_index_tIXT_EEDpOT0_>
 8008d4e:	68fb      	ldr	r3, [r7, #12]
 8008d50:	2204      	movs	r2, #4
 8008d52:	761a      	strb	r2, [r3, #24]
	{ }
 8008d54:	68fb      	ldr	r3, [r7, #12]
 8008d56:	4618      	mov	r0, r3
 8008d58:	3710      	adds	r7, #16
 8008d5a:	46bd      	mov	sp, r7
 8008d5c:	bdb0      	pop	{r4, r5, r7, pc}

08008d5e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8008d5e:	b480      	push	{r7}
 8008d60:	b083      	sub	sp, #12
 8008d62:	af00      	add	r7, sp, #0
 8008d64:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8008d66:	687b      	ldr	r3, [r7, #4]
 8008d68:	4618      	mov	r0, r3
 8008d6a:	370c      	adds	r7, #12
 8008d6c:	46bd      	mov	sp, r7
 8008d6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d72:	4770      	bx	lr

08008d74 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8008d74:	b580      	push	{r7, lr}
 8008d76:	b082      	sub	sp, #8
 8008d78:	af00      	add	r7, sp, #0
 8008d7a:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8008d7c:	6878      	ldr	r0, [r7, #4]
 8008d7e:	f000 fa57 	bl	8009230 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 8008d82:	4603      	mov	r3, r0
 8008d84:	4618      	mov	r0, r3
 8008d86:	3708      	adds	r7, #8
 8008d88:	46bd      	mov	sp, r7
 8008d8a:	bd80      	pop	{r7, pc}

08008d8c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8008d8c:	b580      	push	{r7, lr}
 8008d8e:	b082      	sub	sp, #8
 8008d90:	af00      	add	r7, sp, #0
 8008d92:	6078      	str	r0, [r7, #4]
 8008d94:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8008d96:	2200      	movs	r2, #0
 8008d98:	6839      	ldr	r1, [r7, #0]
 8008d9a:	6878      	ldr	r0, [r7, #4]
 8008d9c:	f000 fa53 	bl	8009246 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>
 8008da0:	4603      	mov	r3, r0
 8008da2:	4618      	mov	r0, r3
 8008da4:	3708      	adds	r7, #8
 8008da6:	46bd      	mov	sp, r7
 8008da8:	bd80      	pop	{r7, pc}

08008daa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8008daa:	b580      	push	{r7, lr}
 8008dac:	b084      	sub	sp, #16
 8008dae:	af00      	add	r7, sp, #0
 8008db0:	60f8      	str	r0, [r7, #12]
 8008db2:	60b9      	str	r1, [r7, #8]
 8008db4:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8008db6:	6878      	ldr	r0, [r7, #4]
 8008db8:	f7fc fba8 	bl	800550c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008dbc:	4603      	mov	r3, r0
 8008dbe:	461a      	mov	r2, r3
 8008dc0:	68b9      	ldr	r1, [r7, #8]
 8008dc2:	68f8      	ldr	r0, [r7, #12]
 8008dc4:	f000 fa61 	bl	800928a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 8008dc8:	bf00      	nop
 8008dca:	3710      	adds	r7, #16
 8008dcc:	46bd      	mov	sp, r7
 8008dce:	bd80      	pop	{r7, pc}

08008dd0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8008dd0:	b480      	push	{r7}
 8008dd2:	b083      	sub	sp, #12
 8008dd4:	af00      	add	r7, sp, #0
 8008dd6:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8008dd8:	687b      	ldr	r3, [r7, #4]
 8008dda:	4618      	mov	r0, r3
 8008ddc:	370c      	adds	r7, #12
 8008dde:	46bd      	mov	sp, r7
 8008de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008de4:	4770      	bx	lr

08008de6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8008de6:	b580      	push	{r7, lr}
 8008de8:	b082      	sub	sp, #8
 8008dea:	af00      	add	r7, sp, #0
 8008dec:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8008dee:	6878      	ldr	r0, [r7, #4]
 8008df0:	f000 fa63 	bl	80092ba <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8008df4:	4603      	mov	r3, r0
 8008df6:	4618      	mov	r0, r3
 8008df8:	3708      	adds	r7, #8
 8008dfa:	46bd      	mov	sp, r7
 8008dfc:	bd80      	pop	{r7, pc}

08008dfe <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 8008dfe:	b580      	push	{r7, lr}
 8008e00:	b082      	sub	sp, #8
 8008e02:	af00      	add	r7, sp, #0
 8008e04:	6078      	str	r0, [r7, #4]
 8008e06:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8008e08:	2200      	movs	r2, #0
 8008e0a:	6839      	ldr	r1, [r7, #0]
 8008e0c:	6878      	ldr	r0, [r7, #4]
 8008e0e:	f000 fa5f 	bl	80092d0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>
 8008e12:	4603      	mov	r3, r0
 8008e14:	4618      	mov	r0, r3
 8008e16:	3708      	adds	r7, #8
 8008e18:	46bd      	mov	sp, r7
 8008e1a:	bd80      	pop	{r7, pc}

08008e1c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8008e1c:	b580      	push	{r7, lr}
 8008e1e:	b084      	sub	sp, #16
 8008e20:	af00      	add	r7, sp, #0
 8008e22:	60f8      	str	r0, [r7, #12]
 8008e24:	60b9      	str	r1, [r7, #8]
 8008e26:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8008e28:	6878      	ldr	r0, [r7, #4]
 8008e2a:	f7fc fd65 	bl	80058f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8008e2e:	4603      	mov	r3, r0
 8008e30:	461a      	mov	r2, r3
 8008e32:	68b9      	ldr	r1, [r7, #8]
 8008e34:	68f8      	ldr	r0, [r7, #12]
 8008e36:	f000 fa80 	bl	800933a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>
 8008e3a:	bf00      	nop
 8008e3c:	3710      	adds	r7, #16
 8008e3e:	46bd      	mov	sp, r7
 8008e40:	bd80      	pop	{r7, pc}

08008e42 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() noexcept
 8008e42:	b480      	push	{r7}
 8008e44:	b083      	sub	sp, #12
 8008e46:	af00      	add	r7, sp, #0
 8008e48:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8008e4a:	687b      	ldr	r3, [r7, #4]
 8008e4c:	4618      	mov	r0, r3
 8008e4e:	370c      	adds	r7, #12
 8008e50:	46bd      	mov	sp, r7
 8008e52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e56:	4770      	bx	lr

08008e58 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8008e58:	b580      	push	{r7, lr}
 8008e5a:	b082      	sub	sp, #8
 8008e5c:	af00      	add	r7, sp, #0
 8008e5e:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8008e60:	6878      	ldr	r0, [r7, #4]
 8008e62:	f000 fa82 	bl	800936a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8008e66:	4603      	mov	r3, r0
 8008e68:	4618      	mov	r0, r3
 8008e6a:	3708      	adds	r7, #8
 8008e6c:	46bd      	mov	sp, r7
 8008e6e:	bd80      	pop	{r7, pc}

08008e70 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8008e70:	b580      	push	{r7, lr}
 8008e72:	b082      	sub	sp, #8
 8008e74:	af00      	add	r7, sp, #0
 8008e76:	6078      	str	r0, [r7, #4]
 8008e78:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8008e7a:	2200      	movs	r2, #0
 8008e7c:	6839      	ldr	r1, [r7, #0]
 8008e7e:	6878      	ldr	r0, [r7, #4]
 8008e80:	f000 fa7e 	bl	8009380 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>
 8008e84:	4603      	mov	r3, r0
 8008e86:	4618      	mov	r0, r3
 8008e88:	3708      	adds	r7, #8
 8008e8a:	46bd      	mov	sp, r7
 8008e8c:	bd80      	pop	{r7, pc}

08008e8e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8008e8e:	b580      	push	{r7, lr}
 8008e90:	b084      	sub	sp, #16
 8008e92:	af00      	add	r7, sp, #0
 8008e94:	60f8      	str	r0, [r7, #12]
 8008e96:	60b9      	str	r1, [r7, #8]
 8008e98:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8008e9a:	6878      	ldr	r0, [r7, #4]
 8008e9c:	f7fc ff16 	bl	8005ccc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8008ea0:	4603      	mov	r3, r0
 8008ea2:	461a      	mov	r2, r3
 8008ea4:	68b9      	ldr	r1, [r7, #8]
 8008ea6:	68f8      	ldr	r0, [r7, #12]
 8008ea8:	f000 fa8c 	bl	80093c4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 8008eac:	bf00      	nop
 8008eae:	3710      	adds	r7, #16
 8008eb0:	46bd      	mov	sp, r7
 8008eb2:	bd80      	pop	{r7, pc}

08008eb4 <_ZN9__gnu_cxx14__alloc_traitsISaI6SymbolES1_E17_S_select_on_copyERKS2_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 8008eb4:	b580      	push	{r7, lr}
 8008eb6:	b082      	sub	sp, #8
 8008eb8:	af00      	add	r7, sp, #0
 8008eba:	6078      	str	r0, [r7, #4]
 8008ebc:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 8008ebe:	687b      	ldr	r3, [r7, #4]
 8008ec0:	6839      	ldr	r1, [r7, #0]
 8008ec2:	4618      	mov	r0, r3
 8008ec4:	f000 fa97 	bl	80093f6 <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>
 8008ec8:	6878      	ldr	r0, [r7, #4]
 8008eca:	3708      	adds	r7, #8
 8008ecc:	46bd      	mov	sp, r7
 8008ece:	bd80      	pop	{r7, pc}

08008ed0 <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1EjRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 8008ed0:	b580      	push	{r7, lr}
 8008ed2:	b084      	sub	sp, #16
 8008ed4:	af00      	add	r7, sp, #0
 8008ed6:	60f8      	str	r0, [r7, #12]
 8008ed8:	60b9      	str	r1, [r7, #8]
 8008eda:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 8008edc:	68fb      	ldr	r3, [r7, #12]
 8008ede:	6879      	ldr	r1, [r7, #4]
 8008ee0:	4618      	mov	r0, r3
 8008ee2:	f000 fa95 	bl	8009410 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
 8008ee6:	68b9      	ldr	r1, [r7, #8]
 8008ee8:	68f8      	ldr	r0, [r7, #12]
 8008eea:	f000 faa3 	bl	8009434 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>
 8008eee:	68fb      	ldr	r3, [r7, #12]
 8008ef0:	4618      	mov	r0, r3
 8008ef2:	3710      	adds	r7, #16
 8008ef4:	46bd      	mov	sp, r7
 8008ef6:	bd80      	pop	{r7, pc}

08008ef8 <_ZNSaI6SymbolEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8008ef8:	b580      	push	{r7, lr}
 8008efa:	b082      	sub	sp, #8
 8008efc:	af00      	add	r7, sp, #0
 8008efe:	6078      	str	r0, [r7, #4]
 8008f00:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8008f02:	6839      	ldr	r1, [r7, #0]
 8008f04:	6878      	ldr	r0, [r7, #4]
 8008f06:	f000 fab0 	bl	800946a <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>
 8008f0a:	687b      	ldr	r3, [r7, #4]
 8008f0c:	4618      	mov	r0, r3
 8008f0e:	3708      	adds	r7, #8
 8008f10:	46bd      	mov	sp, r7
 8008f12:	bd80      	pop	{r7, pc}

08008f14 <_ZN9__gnu_cxx13new_allocatorI6SymbolED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8008f14:	b480      	push	{r7}
 8008f16:	b083      	sub	sp, #12
 8008f18:	af00      	add	r7, sp, #0
 8008f1a:	6078      	str	r0, [r7, #4]
 8008f1c:	687b      	ldr	r3, [r7, #4]
 8008f1e:	4618      	mov	r0, r3
 8008f20:	370c      	adds	r7, #12
 8008f22:	46bd      	mov	sp, r7
 8008f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f28:	4770      	bx	lr

08008f2a <_ZNSt12_Vector_baseI6SymbolSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 8008f2a:	b580      	push	{r7, lr}
 8008f2c:	b082      	sub	sp, #8
 8008f2e:	af00      	add	r7, sp, #0
 8008f30:	6078      	str	r0, [r7, #4]
 8008f32:	6039      	str	r1, [r7, #0]
      : _M_impl(__a) { }
 8008f34:	687b      	ldr	r3, [r7, #4]
 8008f36:	6839      	ldr	r1, [r7, #0]
 8008f38:	4618      	mov	r0, r3
 8008f3a:	f000 fa69 	bl	8009410 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>
 8008f3e:	687b      	ldr	r3, [r7, #4]
 8008f40:	4618      	mov	r0, r3
 8008f42:	3708      	adds	r7, #8
 8008f44:	46bd      	mov	sp, r7
 8008f46:	bd80      	pop	{r7, pc}

08008f48 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8008f48:	b480      	push	{r7}
 8008f4a:	b083      	sub	sp, #12
 8008f4c:	af00      	add	r7, sp, #0
 8008f4e:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8008f50:	687b      	ldr	r3, [r7, #4]
 8008f52:	2200      	movs	r2, #0
 8008f54:	601a      	str	r2, [r3, #0]
 8008f56:	687b      	ldr	r3, [r7, #4]
 8008f58:	2200      	movs	r2, #0
 8008f5a:	605a      	str	r2, [r3, #4]
 8008f5c:	687b      	ldr	r3, [r7, #4]
 8008f5e:	2200      	movs	r2, #0
 8008f60:	609a      	str	r2, [r3, #8]
	{ }
 8008f62:	687b      	ldr	r3, [r7, #4]
 8008f64:	4618      	mov	r0, r3
 8008f66:	370c      	adds	r7, #12
 8008f68:	46bd      	mov	sp, r7
 8008f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f6e:	4770      	bx	lr

08008f70 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_data12_M_copy_dataERKS3_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 8008f70:	b480      	push	{r7}
 8008f72:	b083      	sub	sp, #12
 8008f74:	af00      	add	r7, sp, #0
 8008f76:	6078      	str	r0, [r7, #4]
 8008f78:	6039      	str	r1, [r7, #0]
	  _M_start = __x._M_start;
 8008f7a:	683b      	ldr	r3, [r7, #0]
 8008f7c:	681a      	ldr	r2, [r3, #0]
 8008f7e:	687b      	ldr	r3, [r7, #4]
 8008f80:	601a      	str	r2, [r3, #0]
	  _M_finish = __x._M_finish;
 8008f82:	683b      	ldr	r3, [r7, #0]
 8008f84:	685a      	ldr	r2, [r3, #4]
 8008f86:	687b      	ldr	r3, [r7, #4]
 8008f88:	605a      	str	r2, [r3, #4]
	  _M_end_of_storage = __x._M_end_of_storage;
 8008f8a:	683b      	ldr	r3, [r7, #0]
 8008f8c:	689a      	ldr	r2, [r3, #8]
 8008f8e:	687b      	ldr	r3, [r7, #4]
 8008f90:	609a      	str	r2, [r3, #8]
	}
 8008f92:	bf00      	nop
 8008f94:	370c      	adds	r7, #12
 8008f96:	46bd      	mov	sp, r7
 8008f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f9c:	4770      	bx	lr

08008f9e <_ZSt18__do_alloc_on_moveISaI6SymbolEEvRT_S3_St17integral_constantIbLb1EE>:
    inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 8008f9e:	b580      	push	{r7, lr}
 8008fa0:	b084      	sub	sp, #16
 8008fa2:	af00      	add	r7, sp, #0
 8008fa4:	60f8      	str	r0, [r7, #12]
 8008fa6:	60b9      	str	r1, [r7, #8]
 8008fa8:	713a      	strb	r2, [r7, #4]
    { __one = std::move(__two); }
 8008faa:	68b8      	ldr	r0, [r7, #8]
 8008fac:	f000 fa69 	bl	8009482 <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>
 8008fb0:	bf00      	nop
 8008fb2:	3710      	adds	r7, #16
 8008fb4:	46bd      	mov	sp, r7
 8008fb6:	bd80      	pop	{r7, pc}

08008fb8 <_ZSt4moveIRNSt12_Vector_baseI6SymbolSaIS1_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
 8008fb8:	b480      	push	{r7}
 8008fba:	b083      	sub	sp, #12
 8008fbc:	af00      	add	r7, sp, #0
 8008fbe:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008fc0:	687b      	ldr	r3, [r7, #4]
 8008fc2:	4618      	mov	r0, r3
 8008fc4:	370c      	adds	r7, #12
 8008fc6:	46bd      	mov	sp, r7
 8008fc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fcc:	4770      	bx	lr

08008fce <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1EOS3_>:
	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 8008fce:	b480      	push	{r7}
 8008fd0:	b083      	sub	sp, #12
 8008fd2:	af00      	add	r7, sp, #0
 8008fd4:	6078      	str	r0, [r7, #4]
 8008fd6:	6039      	str	r1, [r7, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 8008fd8:	683b      	ldr	r3, [r7, #0]
 8008fda:	681a      	ldr	r2, [r3, #0]
	  _M_end_of_storage(__x._M_end_of_storage)
 8008fdc:	687b      	ldr	r3, [r7, #4]
 8008fde:	601a      	str	r2, [r3, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 8008fe0:	683b      	ldr	r3, [r7, #0]
 8008fe2:	685a      	ldr	r2, [r3, #4]
	  _M_end_of_storage(__x._M_end_of_storage)
 8008fe4:	687b      	ldr	r3, [r7, #4]
 8008fe6:	605a      	str	r2, [r3, #4]
 8008fe8:	683b      	ldr	r3, [r7, #0]
 8008fea:	689a      	ldr	r2, [r3, #8]
 8008fec:	687b      	ldr	r3, [r7, #4]
 8008fee:	609a      	str	r2, [r3, #8]
	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 8008ff0:	683b      	ldr	r3, [r7, #0]
 8008ff2:	2200      	movs	r2, #0
 8008ff4:	609a      	str	r2, [r3, #8]
 8008ff6:	683b      	ldr	r3, [r7, #0]
 8008ff8:	689a      	ldr	r2, [r3, #8]
 8008ffa:	683b      	ldr	r3, [r7, #0]
 8008ffc:	605a      	str	r2, [r3, #4]
 8008ffe:	683b      	ldr	r3, [r7, #0]
 8009000:	685a      	ldr	r2, [r3, #4]
 8009002:	683b      	ldr	r3, [r7, #0]
 8009004:	601a      	str	r2, [r3, #0]
 8009006:	687b      	ldr	r3, [r7, #4]
 8009008:	4618      	mov	r0, r3
 800900a:	370c      	adds	r7, #12
 800900c:	46bd      	mov	sp, r7
 800900e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009012:	4770      	bx	lr

08009014 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    addressof(_Tp& __r) noexcept
 8009014:	b580      	push	{r7, lr}
 8009016:	b082      	sub	sp, #8
 8009018:	af00      	add	r7, sp, #0
 800901a:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800901c:	6878      	ldr	r0, [r7, #4]
 800901e:	f000 fa3b 	bl	8009498 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 8009022:	4603      	mov	r3, r0
 8009024:	4618      	mov	r0, r3
 8009026:	3708      	adds	r7, #8
 8009028:	46bd      	mov	sp, r7
 800902a:	bd80      	pop	{r7, pc}

0800902c <_ZN9__gnu_cxx13new_allocatorI6SymbolE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800902c:	b580      	push	{r7, lr}
 800902e:	b084      	sub	sp, #16
 8009030:	af00      	add	r7, sp, #0
 8009032:	60f8      	str	r0, [r7, #12]
 8009034:	60b9      	str	r1, [r7, #8]
 8009036:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8009038:	68b8      	ldr	r0, [r7, #8]
 800903a:	f01a f91d 	bl	8023278 <_ZdlPv>
      }
 800903e:	3710      	adds	r7, #16
 8009040:	46bd      	mov	sp, r7
 8009042:	bd80      	pop	{r7, pc}

08009044 <_ZNSt16allocator_traitsISaI6SymbolEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 8009044:	b580      	push	{r7, lr}
 8009046:	b082      	sub	sp, #8
 8009048:	af00      	add	r7, sp, #0
 800904a:	6078      	str	r0, [r7, #4]
 800904c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800904e:	2200      	movs	r2, #0
 8009050:	6839      	ldr	r1, [r7, #0]
 8009052:	6878      	ldr	r0, [r7, #4]
 8009054:	f000 fa2b 	bl	80094ae <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>
 8009058:	4603      	mov	r3, r0
 800905a:	4618      	mov	r0, r3
 800905c:	3708      	adds	r7, #8
 800905e:	46bd      	mov	sp, r7
 8009060:	bd80      	pop	{r7, pc}

08009062 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8009062:	b580      	push	{r7, lr}
 8009064:	b086      	sub	sp, #24
 8009066:	af00      	add	r7, sp, #0
 8009068:	60f8      	str	r0, [r7, #12]
 800906a:	60b9      	str	r1, [r7, #8]
 800906c:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800906e:	2301      	movs	r3, #1
 8009070:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8009072:	687a      	ldr	r2, [r7, #4]
 8009074:	68b9      	ldr	r1, [r7, #8]
 8009076:	68f8      	ldr	r0, [r7, #12]
 8009078:	f000 fa38 	bl	80094ec <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>
 800907c:	4603      	mov	r3, r0
    }
 800907e:	4618      	mov	r0, r3
 8009080:	3718      	adds	r7, #24
 8009082:	46bd      	mov	sp, r7
 8009084:	bd80      	pop	{r7, pc}

08009086 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 8009086:	b580      	push	{r7, lr}
 8009088:	b082      	sub	sp, #8
 800908a:	af00      	add	r7, sp, #0
 800908c:	6078      	str	r0, [r7, #4]
 800908e:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 8009090:	687a      	ldr	r2, [r7, #4]
 8009092:	683b      	ldr	r3, [r7, #0]
 8009094:	429a      	cmp	r2, r3
 8009096:	d00a      	beq.n	80090ae <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0x28>
	    std::_Destroy(std::__addressof(*__first));
 8009098:	6878      	ldr	r0, [r7, #4]
 800909a:	f000 fa56 	bl	800954a <_ZSt11__addressofI6SymbolEPT_RS1_>
 800909e:	4603      	mov	r3, r0
 80090a0:	4618      	mov	r0, r3
 80090a2:	f000 fa5d 	bl	8009560 <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 80090a6:	687b      	ldr	r3, [r7, #4]
 80090a8:	3320      	adds	r3, #32
 80090aa:	607b      	str	r3, [r7, #4]
 80090ac:	e7f0      	b.n	8009090 <_ZNSt12_Destroy_auxILb0EE9__destroyIP6SymbolEEvT_S4_+0xa>
	}
 80090ae:	bf00      	nop
 80090b0:	3708      	adds	r7, #8
 80090b2:	46bd      	mov	sp, r7
 80090b4:	bd80      	pop	{r7, pc}

080090b6 <_ZSt12__niter_baseIPK6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE>:
{
_GLIBCXX_BEGIN_NAMESPACE_VERSION

  template<typename _Iterator, typename _Container>
    _Iterator
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 80090b6:	b580      	push	{r7, lr}
 80090b8:	b082      	sub	sp, #8
 80090ba:	af00      	add	r7, sp, #0
 80090bc:	6078      	str	r0, [r7, #4]
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it.base(); }
 80090be:	1d3b      	adds	r3, r7, #4
 80090c0:	4618      	mov	r0, r3
 80090c2:	f000 fa58 	bl	8009576 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 80090c6:	4603      	mov	r3, r0
 80090c8:	681b      	ldr	r3, [r3, #0]
 80090ca:	4618      	mov	r0, r3
 80090cc:	3708      	adds	r7, #8
 80090ce:	46bd      	mov	sp, r7
 80090d0:	bd80      	pop	{r7, pc}

080090d2 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 80090d2:	b580      	push	{r7, lr}
 80090d4:	b082      	sub	sp, #8
 80090d6:	af00      	add	r7, sp, #0
 80090d8:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 80090da:	1d3b      	adds	r3, r7, #4
 80090dc:	4618      	mov	r0, r3
 80090de:	f000 fa55 	bl	800958c <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 80090e2:	4603      	mov	r3, r0
 80090e4:	681b      	ldr	r3, [r3, #0]
 80090e6:	4618      	mov	r0, r3
 80090e8:	3708      	adds	r7, #8
 80090ea:	46bd      	mov	sp, r7
 80090ec:	bd80      	pop	{r7, pc}

080090ee <_ZSt13__copy_move_aILb0EPK6SymbolPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 80090ee:	b580      	push	{r7, lr}
 80090f0:	b086      	sub	sp, #24
 80090f2:	af00      	add	r7, sp, #0
 80090f4:	60f8      	str	r0, [r7, #12]
 80090f6:	60b9      	str	r1, [r7, #8]
 80090f8:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 80090fa:	2300      	movs	r3, #0
 80090fc:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 80090fe:	687a      	ldr	r2, [r7, #4]
 8009100:	68b9      	ldr	r1, [r7, #8]
 8009102:	68f8      	ldr	r0, [r7, #12]
 8009104:	f000 fa4d 	bl	80095a2 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>
 8009108:	4603      	mov	r3, r0
    }
 800910a:	4618      	mov	r0, r3
 800910c:	3718      	adds	r7, #24
 800910e:	46bd      	mov	sp, r7
 8009110:	bd80      	pop	{r7, pc}

08009112 <_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS2_SaIS2_EEEES3_ET_S8_T0_>:
    __niter_wrap(_From __from, _To __res)
 8009112:	b580      	push	{r7, lr}
 8009114:	b082      	sub	sp, #8
 8009116:	af00      	add	r7, sp, #0
 8009118:	6078      	str	r0, [r7, #4]
 800911a:	6039      	str	r1, [r7, #0]
    { return __from + (__res - std::__niter_base(__from)); }
 800911c:	6878      	ldr	r0, [r7, #4]
 800911e:	f7ff ffd8 	bl	80090d2 <_ZSt12__niter_baseIP6SymbolSt6vectorIS0_SaIS0_EEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 8009122:	4602      	mov	r2, r0
 8009124:	683b      	ldr	r3, [r7, #0]
 8009126:	1a9b      	subs	r3, r3, r2
 8009128:	115b      	asrs	r3, r3, #5
 800912a:	461a      	mov	r2, r3
 800912c:	1d3b      	adds	r3, r7, #4
 800912e:	4611      	mov	r1, r2
 8009130:	4618      	mov	r0, r3
 8009132:	f000 fa57 	bl	80095e4 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>
 8009136:	4603      	mov	r3, r0
 8009138:	4618      	mov	r0, r3
 800913a:	3708      	adds	r7, #8
 800913c:	46bd      	mov	sp, r7
 800913e:	bd80      	pop	{r7, pc}

08009140 <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 8009140:	b580      	push	{r7, lr}
 8009142:	b082      	sub	sp, #8
 8009144:	af00      	add	r7, sp, #0
 8009146:	6078      	str	r0, [r7, #4]
 8009148:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 800914a:	463a      	mov	r2, r7
 800914c:	1d3b      	adds	r3, r7, #4
 800914e:	4611      	mov	r1, r2
 8009150:	4618      	mov	r0, r3
 8009152:	f000 fa5f 	bl	8009614 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
 8009156:	4603      	mov	r3, r0
 8009158:	2b00      	cmp	r3, #0
 800915a:	d010      	beq.n	800917e <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0x3e>
	    std::_Destroy(std::__addressof(*__first));
 800915c:	1d3b      	adds	r3, r7, #4
 800915e:	4618      	mov	r0, r3
 8009160:	f000 fa81 	bl	8009666 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 8009164:	4603      	mov	r3, r0
 8009166:	4618      	mov	r0, r3
 8009168:	f000 f9ef 	bl	800954a <_ZSt11__addressofI6SymbolEPT_RS1_>
 800916c:	4603      	mov	r3, r0
 800916e:	4618      	mov	r0, r3
 8009170:	f000 f9f6 	bl	8009560 <_ZSt8_DestroyI6SymbolEvPT_>
	  for (; __first != __last; ++__first)
 8009174:	1d3b      	adds	r3, r7, #4
 8009176:	4618      	mov	r0, r3
 8009178:	f000 fa64 	bl	8009644 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 800917c:	e7e5      	b.n	800914a <_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS4_SaIS4_EEEEEEvT_SA_+0xa>
	}
 800917e:	bf00      	nop
 8009180:	3708      	adds	r7, #8
 8009182:	46bd      	mov	sp, r7
 8009184:	bd80      	pop	{r7, pc}

08009186 <_ZSt12__niter_baseIP6SymbolET_S2_>:
    __niter_base(_Iterator __it)
 8009186:	b480      	push	{r7}
 8009188:	b083      	sub	sp, #12
 800918a:	af00      	add	r7, sp, #0
 800918c:	6078      	str	r0, [r7, #4]
    { return __it; }
 800918e:	687b      	ldr	r3, [r7, #4]
 8009190:	4618      	mov	r0, r3
 8009192:	370c      	adds	r7, #12
 8009194:	46bd      	mov	sp, r7
 8009196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800919a:	4770      	bx	lr

0800919c <_ZSt13__copy_move_aILb0EP6SymbolS1_ET1_T0_S3_S2_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800919c:	b580      	push	{r7, lr}
 800919e:	b086      	sub	sp, #24
 80091a0:	af00      	add	r7, sp, #0
 80091a2:	60f8      	str	r0, [r7, #12]
 80091a4:	60b9      	str	r1, [r7, #8]
 80091a6:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 80091a8:	2300      	movs	r3, #0
 80091aa:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 80091ac:	687a      	ldr	r2, [r7, #4]
 80091ae:	68b9      	ldr	r1, [r7, #8]
 80091b0:	68f8      	ldr	r0, [r7, #12]
 80091b2:	f000 fa64 	bl	800967e <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>
 80091b6:	4603      	mov	r3, r0
    }
 80091b8:	4618      	mov	r0, r3
 80091ba:	3718      	adds	r7, #24
 80091bc:	46bd      	mov	sp, r7
 80091be:	bd80      	pop	{r7, pc}

080091c0 <_ZSt12__niter_wrapIP6SymbolET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 80091c0:	b480      	push	{r7}
 80091c2:	b083      	sub	sp, #12
 80091c4:	af00      	add	r7, sp, #0
 80091c6:	6078      	str	r0, [r7, #4]
 80091c8:	6039      	str	r1, [r7, #0]
    { return __res; }
 80091ca:	683b      	ldr	r3, [r7, #0]
 80091cc:	4618      	mov	r0, r3
 80091ce:	370c      	adds	r7, #12
 80091d0:	46bd      	mov	sp, r7
 80091d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091d6:	4770      	bx	lr

080091d8 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 80091d8:	b580      	push	{r7, lr}
 80091da:	b086      	sub	sp, #24
 80091dc:	af00      	add	r7, sp, #0
 80091de:	60f8      	str	r0, [r7, #12]
 80091e0:	60b9      	str	r1, [r7, #8]
 80091e2:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 80091e4:	687b      	ldr	r3, [r7, #4]
 80091e6:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 80091e8:	68fa      	ldr	r2, [r7, #12]
 80091ea:	68bb      	ldr	r3, [r7, #8]
 80091ec:	429a      	cmp	r2, r3
 80091ee:	d00e      	beq.n	800920e <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x36>
		std::_Construct(std::__addressof(*__cur), *__first);
 80091f0:	6978      	ldr	r0, [r7, #20]
 80091f2:	f000 f9aa 	bl	800954a <_ZSt11__addressofI6SymbolEPT_RS1_>
 80091f6:	4603      	mov	r3, r0
 80091f8:	68f9      	ldr	r1, [r7, #12]
 80091fa:	4618      	mov	r0, r3
 80091fc:	f000 fa60 	bl	80096c0 <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 8009200:	68fb      	ldr	r3, [r7, #12]
 8009202:	3320      	adds	r3, #32
 8009204:	60fb      	str	r3, [r7, #12]
 8009206:	697b      	ldr	r3, [r7, #20]
 8009208:	3320      	adds	r3, #32
 800920a:	617b      	str	r3, [r7, #20]
 800920c:	e7ec      	b.n	80091e8 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6SymbolS3_EET0_T_S5_S4_+0x10>
	      return __cur;
 800920e:	697b      	ldr	r3, [r7, #20]
	}
 8009210:	4618      	mov	r0, r3
 8009212:	3718      	adds	r7, #24
 8009214:	46bd      	mov	sp, r7
 8009216:	bd80      	pop	{r7, pc}

08009218 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    addressof(_Tp& __r) noexcept
 8009218:	b580      	push	{r7, lr}
 800921a:	b082      	sub	sp, #8
 800921c:	af00      	add	r7, sp, #0
 800921e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8009220:	6878      	ldr	r0, [r7, #4]
 8009222:	f000 fa64 	bl	80096ee <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>
 8009226:	4603      	mov	r3, r0
 8009228:	4618      	mov	r0, r3
 800922a:	3708      	adds	r7, #8
 800922c:	46bd      	mov	sp, r7
 800922e:	bd80      	pop	{r7, pc}

08009230 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8009230:	b480      	push	{r7}
 8009232:	b083      	sub	sp, #12
 8009234:	af00      	add	r7, sp, #0
 8009236:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8009238:	687b      	ldr	r3, [r7, #4]
 800923a:	4618      	mov	r0, r3
 800923c:	370c      	adds	r7, #12
 800923e:	46bd      	mov	sp, r7
 8009240:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009244:	4770      	bx	lr

08009246 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8009246:	b580      	push	{r7, lr}
 8009248:	b084      	sub	sp, #16
 800924a:	af00      	add	r7, sp, #0
 800924c:	60f8      	str	r0, [r7, #12]
 800924e:	60b9      	str	r1, [r7, #8]
 8009250:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8009252:	68f8      	ldr	r0, [r7, #12]
 8009254:	f000 fa56 	bl	8009704 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>
 8009258:	4602      	mov	r2, r0
 800925a:	68bb      	ldr	r3, [r7, #8]
 800925c:	4293      	cmp	r3, r2
 800925e:	bf8c      	ite	hi
 8009260:	2301      	movhi	r3, #1
 8009262:	2300      	movls	r3, #0
 8009264:	b2db      	uxtb	r3, r3
 8009266:	2b00      	cmp	r3, #0
 8009268:	d001      	beq.n	800926e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800926a:	f01a f8dd 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800926e:	68ba      	ldr	r2, [r7, #8]
 8009270:	4613      	mov	r3, r2
 8009272:	009b      	lsls	r3, r3, #2
 8009274:	4413      	add	r3, r2
 8009276:	009b      	lsls	r3, r3, #2
 8009278:	4618      	mov	r0, r3
 800927a:	f01a f810 	bl	802329e <_Znwj>
 800927e:	4603      	mov	r3, r0
 8009280:	bf00      	nop
      }
 8009282:	4618      	mov	r0, r3
 8009284:	3710      	adds	r7, #16
 8009286:	46bd      	mov	sp, r7
 8009288:	bd80      	pop	{r7, pc}

0800928a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 800928a:	b590      	push	{r4, r7, lr}
 800928c:	b085      	sub	sp, #20
 800928e:	af00      	add	r7, sp, #0
 8009290:	60f8      	str	r0, [r7, #12]
 8009292:	60b9      	str	r1, [r7, #8]
 8009294:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8009296:	6878      	ldr	r0, [r7, #4]
 8009298:	f7fc f938 	bl	800550c <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 800929c:	4604      	mov	r4, r0
 800929e:	68bb      	ldr	r3, [r7, #8]
 80092a0:	4619      	mov	r1, r3
 80092a2:	2002      	movs	r0, #2
 80092a4:	f7f7 fed9 	bl	800105a <_ZnwjPv>
 80092a8:	4603      	mov	r3, r0
 80092aa:	461a      	mov	r2, r3
 80092ac:	4623      	mov	r3, r4
 80092ae:	881b      	ldrh	r3, [r3, #0]
 80092b0:	8013      	strh	r3, [r2, #0]
 80092b2:	bf00      	nop
 80092b4:	3714      	adds	r7, #20
 80092b6:	46bd      	mov	sp, r7
 80092b8:	bd90      	pop	{r4, r7, pc}

080092ba <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 80092ba:	b480      	push	{r7}
 80092bc:	b083      	sub	sp, #12
 80092be:	af00      	add	r7, sp, #0
 80092c0:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	4618      	mov	r0, r3
 80092c6:	370c      	adds	r7, #12
 80092c8:	46bd      	mov	sp, r7
 80092ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092ce:	4770      	bx	lr

080092d0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80092d0:	b580      	push	{r7, lr}
 80092d2:	b084      	sub	sp, #16
 80092d4:	af00      	add	r7, sp, #0
 80092d6:	60f8      	str	r0, [r7, #12]
 80092d8:	60b9      	str	r1, [r7, #8]
 80092da:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80092dc:	68f8      	ldr	r0, [r7, #12]
 80092de:	f000 fa1f 	bl	8009720 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>
 80092e2:	4602      	mov	r2, r0
 80092e4:	68bb      	ldr	r3, [r7, #8]
 80092e6:	4293      	cmp	r3, r2
 80092e8:	bf8c      	ite	hi
 80092ea:	2301      	movhi	r3, #1
 80092ec:	2300      	movls	r3, #0
 80092ee:	b2db      	uxtb	r3, r3
 80092f0:	2b00      	cmp	r3, #0
 80092f2:	d001      	beq.n	80092f8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80092f4:	f01a f898 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80092f8:	68bb      	ldr	r3, [r7, #8]
 80092fa:	222c      	movs	r2, #44	; 0x2c
 80092fc:	fb02 f303 	mul.w	r3, r2, r3
 8009300:	4618      	mov	r0, r3
 8009302:	f019 ffcc 	bl	802329e <_Znwj>
 8009306:	4603      	mov	r3, r0
 8009308:	bf00      	nop
      }
 800930a:	4618      	mov	r0, r3
 800930c:	3710      	adds	r7, #16
 800930e:	46bd      	mov	sp, r7
 8009310:	bd80      	pop	{r7, pc}

08009312 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>:
      constexpr pair(const pair&) = default;
 8009312:	b580      	push	{r7, lr}
 8009314:	b082      	sub	sp, #8
 8009316:	af00      	add	r7, sp, #0
 8009318:	6078      	str	r0, [r7, #4]
 800931a:	6039      	str	r1, [r7, #0]
 800931c:	687b      	ldr	r3, [r7, #4]
 800931e:	683a      	ldr	r2, [r7, #0]
 8009320:	4611      	mov	r1, r2
 8009322:	4618      	mov	r0, r3
 8009324:	f01a fc2c 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8009328:	683b      	ldr	r3, [r7, #0]
 800932a:	7e1a      	ldrb	r2, [r3, #24]
 800932c:	687b      	ldr	r3, [r7, #4]
 800932e:	761a      	strb	r2, [r3, #24]
 8009330:	687b      	ldr	r3, [r7, #4]
 8009332:	4618      	mov	r0, r3
 8009334:	3708      	adds	r7, #8
 8009336:	46bd      	mov	sp, r7
 8009338:	bd80      	pop	{r7, pc}

0800933a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 800933a:	b590      	push	{r4, r7, lr}
 800933c:	b085      	sub	sp, #20
 800933e:	af00      	add	r7, sp, #0
 8009340:	60f8      	str	r0, [r7, #12]
 8009342:	60b9      	str	r1, [r7, #8]
 8009344:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8009346:	6878      	ldr	r0, [r7, #4]
 8009348:	f7fc fad6 	bl	80058f8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 800934c:	4604      	mov	r4, r0
 800934e:	68bb      	ldr	r3, [r7, #8]
 8009350:	4619      	mov	r1, r3
 8009352:	201c      	movs	r0, #28
 8009354:	f7f7 fe81 	bl	800105a <_ZnwjPv>
 8009358:	4603      	mov	r3, r0
 800935a:	4621      	mov	r1, r4
 800935c:	4618      	mov	r0, r3
 800935e:	f7ff ffd8 	bl	8009312 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>
 8009362:	bf00      	nop
 8009364:	3714      	adds	r7, #20
 8009366:	46bd      	mov	sp, r7
 8009368:	bd90      	pop	{r4, r7, pc}

0800936a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() const noexcept
 800936a:	b480      	push	{r7}
 800936c:	b083      	sub	sp, #12
 800936e:	af00      	add	r7, sp, #0
 8009370:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8009372:	687b      	ldr	r3, [r7, #4]
 8009374:	4618      	mov	r0, r3
 8009376:	370c      	adds	r7, #12
 8009378:	46bd      	mov	sp, r7
 800937a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800937e:	4770      	bx	lr

08009380 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8009380:	b580      	push	{r7, lr}
 8009382:	b084      	sub	sp, #16
 8009384:	af00      	add	r7, sp, #0
 8009386:	60f8      	str	r0, [r7, #12]
 8009388:	60b9      	str	r1, [r7, #8]
 800938a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800938c:	68f8      	ldr	r0, [r7, #12]
 800938e:	f000 f9d5 	bl	800973c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>
 8009392:	4602      	mov	r2, r0
 8009394:	68bb      	ldr	r3, [r7, #8]
 8009396:	4293      	cmp	r3, r2
 8009398:	bf8c      	ite	hi
 800939a:	2301      	movhi	r3, #1
 800939c:	2300      	movls	r3, #0
 800939e:	b2db      	uxtb	r3, r3
 80093a0:	2b00      	cmp	r3, #0
 80093a2:	d001      	beq.n	80093a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80093a4:	f01a f840 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80093a8:	68ba      	ldr	r2, [r7, #8]
 80093aa:	4613      	mov	r3, r2
 80093ac:	009b      	lsls	r3, r3, #2
 80093ae:	4413      	add	r3, r2
 80093b0:	009b      	lsls	r3, r3, #2
 80093b2:	4618      	mov	r0, r3
 80093b4:	f019 ff73 	bl	802329e <_Znwj>
 80093b8:	4603      	mov	r3, r0
 80093ba:	bf00      	nop
      }
 80093bc:	4618      	mov	r0, r3
 80093be:	3710      	adds	r7, #16
 80093c0:	46bd      	mov	sp, r7
 80093c2:	bd80      	pop	{r7, pc}

080093c4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80093c4:	b590      	push	{r4, r7, lr}
 80093c6:	b085      	sub	sp, #20
 80093c8:	af00      	add	r7, sp, #0
 80093ca:	60f8      	str	r0, [r7, #12]
 80093cc:	60b9      	str	r1, [r7, #8]
 80093ce:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80093d0:	6878      	ldr	r0, [r7, #4]
 80093d2:	f7fc fc7b 	bl	8005ccc <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 80093d6:	4604      	mov	r4, r0
 80093d8:	68bb      	ldr	r3, [r7, #8]
 80093da:	4619      	mov	r1, r3
 80093dc:	2003      	movs	r0, #3
 80093de:	f7f7 fe3c 	bl	800105a <_ZnwjPv>
 80093e2:	4603      	mov	r3, r0
 80093e4:	4622      	mov	r2, r4
 80093e6:	8811      	ldrh	r1, [r2, #0]
 80093e8:	7892      	ldrb	r2, [r2, #2]
 80093ea:	8019      	strh	r1, [r3, #0]
 80093ec:	709a      	strb	r2, [r3, #2]
 80093ee:	bf00      	nop
 80093f0:	3714      	adds	r7, #20
 80093f2:	46bd      	mov	sp, r7
 80093f4:	bd90      	pop	{r4, r7, pc}

080093f6 <_ZNSt16allocator_traitsISaI6SymbolEE37select_on_container_copy_constructionERKS1_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 80093f6:	b580      	push	{r7, lr}
 80093f8:	b082      	sub	sp, #8
 80093fa:	af00      	add	r7, sp, #0
 80093fc:	6078      	str	r0, [r7, #4]
 80093fe:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 8009400:	6839      	ldr	r1, [r7, #0]
 8009402:	6878      	ldr	r0, [r7, #4]
 8009404:	f7ff fd78 	bl	8008ef8 <_ZNSaI6SymbolEC1ERKS0_>
 8009408:	6878      	ldr	r0, [r7, #4]
 800940a:	3708      	adds	r7, #8
 800940c:	46bd      	mov	sp, r7
 800940e:	bd80      	pop	{r7, pc}

08009410 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 8009410:	b580      	push	{r7, lr}
 8009412:	b082      	sub	sp, #8
 8009414:	af00      	add	r7, sp, #0
 8009416:	6078      	str	r0, [r7, #4]
 8009418:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 800941a:	6839      	ldr	r1, [r7, #0]
 800941c:	6878      	ldr	r0, [r7, #4]
 800941e:	f7ff fd6b 	bl	8008ef8 <_ZNSaI6SymbolEC1ERKS0_>
 8009422:	687b      	ldr	r3, [r7, #4]
 8009424:	4618      	mov	r0, r3
 8009426:	f7ff fd8f 	bl	8008f48 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 800942a:	687b      	ldr	r3, [r7, #4]
 800942c:	4618      	mov	r0, r3
 800942e:	3708      	adds	r7, #8
 8009430:	46bd      	mov	sp, r7
 8009432:	bd80      	pop	{r7, pc}

08009434 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 8009434:	b580      	push	{r7, lr}
 8009436:	b082      	sub	sp, #8
 8009438:	af00      	add	r7, sp, #0
 800943a:	6078      	str	r0, [r7, #4]
 800943c:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 800943e:	6839      	ldr	r1, [r7, #0]
 8009440:	6878      	ldr	r0, [r7, #4]
 8009442:	f7ff fb33 	bl	8008aac <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8009446:	4602      	mov	r2, r0
 8009448:	687b      	ldr	r3, [r7, #4]
 800944a:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 800944c:	687b      	ldr	r3, [r7, #4]
 800944e:	681a      	ldr	r2, [r3, #0]
 8009450:	687b      	ldr	r3, [r7, #4]
 8009452:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8009454:	687b      	ldr	r3, [r7, #4]
 8009456:	681a      	ldr	r2, [r3, #0]
 8009458:	683b      	ldr	r3, [r7, #0]
 800945a:	015b      	lsls	r3, r3, #5
 800945c:	441a      	add	r2, r3
 800945e:	687b      	ldr	r3, [r7, #4]
 8009460:	609a      	str	r2, [r3, #8]
      }
 8009462:	bf00      	nop
 8009464:	3708      	adds	r7, #8
 8009466:	46bd      	mov	sp, r7
 8009468:	bd80      	pop	{r7, pc}

0800946a <_ZN9__gnu_cxx13new_allocatorI6SymbolEC1ERKS2_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 800946a:	b480      	push	{r7}
 800946c:	b083      	sub	sp, #12
 800946e:	af00      	add	r7, sp, #0
 8009470:	6078      	str	r0, [r7, #4]
 8009472:	6039      	str	r1, [r7, #0]
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	4618      	mov	r0, r3
 8009478:	370c      	adds	r7, #12
 800947a:	46bd      	mov	sp, r7
 800947c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009480:	4770      	bx	lr

08009482 <_ZSt4moveIRSaI6SymbolEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8009482:	b480      	push	{r7}
 8009484:	b083      	sub	sp, #12
 8009486:	af00      	add	r7, sp, #0
 8009488:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800948a:	687b      	ldr	r3, [r7, #4]
 800948c:	4618      	mov	r0, r3
 800948e:	370c      	adds	r7, #12
 8009490:	46bd      	mov	sp, r7
 8009492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009496:	4770      	bx	lr

08009498 <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8009498:	b480      	push	{r7}
 800949a:	b083      	sub	sp, #12
 800949c:	af00      	add	r7, sp, #0
 800949e:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80094a0:	687b      	ldr	r3, [r7, #4]
 80094a2:	4618      	mov	r0, r3
 80094a4:	370c      	adds	r7, #12
 80094a6:	46bd      	mov	sp, r7
 80094a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094ac:	4770      	bx	lr

080094ae <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80094ae:	b580      	push	{r7, lr}
 80094b0:	b084      	sub	sp, #16
 80094b2:	af00      	add	r7, sp, #0
 80094b4:	60f8      	str	r0, [r7, #12]
 80094b6:	60b9      	str	r1, [r7, #8]
 80094b8:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80094ba:	68f8      	ldr	r0, [r7, #12]
 80094bc:	f000 f94c 	bl	8009758 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 80094c0:	4602      	mov	r2, r0
 80094c2:	68bb      	ldr	r3, [r7, #8]
 80094c4:	4293      	cmp	r3, r2
 80094c6:	bf8c      	ite	hi
 80094c8:	2301      	movhi	r3, #1
 80094ca:	2300      	movls	r3, #0
 80094cc:	b2db      	uxtb	r3, r3
 80094ce:	2b00      	cmp	r3, #0
 80094d0:	d001      	beq.n	80094d6 <_ZN9__gnu_cxx13new_allocatorI6SymbolE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80094d2:	f019 ffa9 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80094d6:	68bb      	ldr	r3, [r7, #8]
 80094d8:	015b      	lsls	r3, r3, #5
 80094da:	4618      	mov	r0, r3
 80094dc:	f019 fedf 	bl	802329e <_Znwj>
 80094e0:	4603      	mov	r3, r0
 80094e2:	bf00      	nop
      }
 80094e4:	4618      	mov	r0, r3
 80094e6:	3710      	adds	r7, #16
 80094e8:	46bd      	mov	sp, r7
 80094ea:	bd80      	pop	{r7, pc}

080094ec <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 80094ec:	b590      	push	{r4, r7, lr}
 80094ee:	b087      	sub	sp, #28
 80094f0:	af00      	add	r7, sp, #0
 80094f2:	60f8      	str	r0, [r7, #12]
 80094f4:	60b9      	str	r1, [r7, #8]
 80094f6:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 80094fc:	f107 0208 	add.w	r2, r7, #8
 8009500:	f107 030c 	add.w	r3, r7, #12
 8009504:	4611      	mov	r1, r2
 8009506:	4618      	mov	r0, r3
 8009508:	f000 f932 	bl	8009770 <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800950c:	4603      	mov	r3, r0
 800950e:	2b00      	cmp	r3, #0
 8009510:	d016      	beq.n	8009540 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x54>
		std::_Construct(std::__addressof(*__cur), *__first);
 8009512:	6978      	ldr	r0, [r7, #20]
 8009514:	f000 f819 	bl	800954a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8009518:	4604      	mov	r4, r0
 800951a:	f107 030c 	add.w	r3, r7, #12
 800951e:	4618      	mov	r0, r3
 8009520:	f000 f94f 	bl	80097c2 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>
 8009524:	4603      	mov	r3, r0
 8009526:	4619      	mov	r1, r3
 8009528:	4620      	mov	r0, r4
 800952a:	f000 f956 	bl	80097da <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 800952e:	f107 030c 	add.w	r3, r7, #12
 8009532:	4618      	mov	r0, r3
 8009534:	f000 f934 	bl	80097a0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>
 8009538:	697b      	ldr	r3, [r7, #20]
 800953a:	3320      	adds	r3, #32
 800953c:	617b      	str	r3, [r7, #20]
 800953e:	e7dd      	b.n	80094fc <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_+0x10>
	      return __cur;
 8009540:	697b      	ldr	r3, [r7, #20]
	}
 8009542:	4618      	mov	r0, r3
 8009544:	371c      	adds	r7, #28
 8009546:	46bd      	mov	sp, r7
 8009548:	bd90      	pop	{r4, r7, pc}

0800954a <_ZSt11__addressofI6SymbolEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800954a:	b480      	push	{r7}
 800954c:	b083      	sub	sp, #12
 800954e:	af00      	add	r7, sp, #0
 8009550:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8009552:	687b      	ldr	r3, [r7, #4]
 8009554:	4618      	mov	r0, r3
 8009556:	370c      	adds	r7, #12
 8009558:	46bd      	mov	sp, r7
 800955a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800955e:	4770      	bx	lr

08009560 <_ZSt8_DestroyI6SymbolEvPT_>:
    _Destroy(_Tp* __pointer)
 8009560:	b580      	push	{r7, lr}
 8009562:	b082      	sub	sp, #8
 8009564:	af00      	add	r7, sp, #0
 8009566:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8009568:	6878      	ldr	r0, [r7, #4]
 800956a:	f7f7 ff17 	bl	800139c <_ZN6SymbolD1Ev>
 800956e:	bf00      	nop
 8009570:	3708      	adds	r7, #8
 8009572:	46bd      	mov	sp, r7
 8009574:	bd80      	pop	{r7, pc}

08009576 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8009576:	b480      	push	{r7}
 8009578:	b083      	sub	sp, #12
 800957a:	af00      	add	r7, sp, #0
 800957c:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	4618      	mov	r0, r3
 8009582:	370c      	adds	r7, #12
 8009584:	46bd      	mov	sp, r7
 8009586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800958a:	4770      	bx	lr

0800958c <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800958c:	b480      	push	{r7}
 800958e:	b083      	sub	sp, #12
 8009590:	af00      	add	r7, sp, #0
 8009592:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	4618      	mov	r0, r3
 8009598:	370c      	adds	r7, #12
 800959a:	46bd      	mov	sp, r7
 800959c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095a0:	4770      	bx	lr

080095a2 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_>:
	__copy_m(_II __first, _II __last, _OI __result)
 80095a2:	b580      	push	{r7, lr}
 80095a4:	b086      	sub	sp, #24
 80095a6:	af00      	add	r7, sp, #0
 80095a8:	60f8      	str	r0, [r7, #12]
 80095aa:	60b9      	str	r1, [r7, #8]
 80095ac:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80095ae:	68ba      	ldr	r2, [r7, #8]
 80095b0:	68fb      	ldr	r3, [r7, #12]
 80095b2:	1ad3      	subs	r3, r2, r3
 80095b4:	115b      	asrs	r3, r3, #5
 80095b6:	617b      	str	r3, [r7, #20]
 80095b8:	697b      	ldr	r3, [r7, #20]
 80095ba:	2b00      	cmp	r3, #0
 80095bc:	dd0d      	ble.n	80095da <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x38>
	      *__result = *__first;
 80095be:	68f9      	ldr	r1, [r7, #12]
 80095c0:	6878      	ldr	r0, [r7, #4]
 80095c2:	f7f8 fa23 	bl	8001a0c <_ZN6SymbolaSERKS_>
	      ++__first;
 80095c6:	68fb      	ldr	r3, [r7, #12]
 80095c8:	3320      	adds	r3, #32
 80095ca:	60fb      	str	r3, [r7, #12]
	      ++__result;
 80095cc:	687b      	ldr	r3, [r7, #4]
 80095ce:	3320      	adds	r3, #32
 80095d0:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80095d2:	697b      	ldr	r3, [r7, #20]
 80095d4:	3b01      	subs	r3, #1
 80095d6:	617b      	str	r3, [r7, #20]
 80095d8:	e7ee      	b.n	80095b8 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPK6SymbolPS3_EET0_T_S8_S7_+0x16>
	  return __result;
 80095da:	687b      	ldr	r3, [r7, #4]
	}
 80095dc:	4618      	mov	r0, r3
 80095de:	3718      	adds	r7, #24
 80095e0:	46bd      	mov	sp, r7
 80095e2:	bd80      	pop	{r7, pc}

080095e4 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEplEi>:
      operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 80095e4:	b580      	push	{r7, lr}
 80095e6:	b084      	sub	sp, #16
 80095e8:	af00      	add	r7, sp, #0
 80095ea:	6078      	str	r0, [r7, #4]
 80095ec:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current + __n); }
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	681a      	ldr	r2, [r3, #0]
 80095f2:	683b      	ldr	r3, [r7, #0]
 80095f4:	015b      	lsls	r3, r3, #5
 80095f6:	4413      	add	r3, r2
 80095f8:	60fb      	str	r3, [r7, #12]
 80095fa:	f107 020c 	add.w	r2, r7, #12
 80095fe:	f107 0308 	add.w	r3, r7, #8
 8009602:	4611      	mov	r1, r2
 8009604:	4618      	mov	r0, r3
 8009606:	f7ff fa83 	bl	8008b10 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 800960a:	68bb      	ldr	r3, [r7, #8]
 800960c:	4618      	mov	r0, r3
 800960e:	3710      	adds	r7, #16
 8009610:	46bd      	mov	sp, r7
 8009612:	bd80      	pop	{r7, pc}

08009614 <_ZN9__gnu_cxxneIP6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8009614:	b590      	push	{r4, r7, lr}
 8009616:	b083      	sub	sp, #12
 8009618:	af00      	add	r7, sp, #0
 800961a:	6078      	str	r0, [r7, #4]
 800961c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800961e:	6878      	ldr	r0, [r7, #4]
 8009620:	f7ff ffb4 	bl	800958c <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8009624:	4603      	mov	r3, r0
 8009626:	681c      	ldr	r4, [r3, #0]
 8009628:	6838      	ldr	r0, [r7, #0]
 800962a:	f7ff ffaf 	bl	800958c <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800962e:	4603      	mov	r3, r0
 8009630:	681b      	ldr	r3, [r3, #0]
 8009632:	429c      	cmp	r4, r3
 8009634:	bf14      	ite	ne
 8009636:	2301      	movne	r3, #1
 8009638:	2300      	moveq	r3, #0
 800963a:	b2db      	uxtb	r3, r3
 800963c:	4618      	mov	r0, r3
 800963e:	370c      	adds	r7, #12
 8009640:	46bd      	mov	sp, r7
 8009642:	bd90      	pop	{r4, r7, pc}

08009644 <_ZN9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8009644:	b480      	push	{r7}
 8009646:	b083      	sub	sp, #12
 8009648:	af00      	add	r7, sp, #0
 800964a:	6078      	str	r0, [r7, #4]
	++_M_current;
 800964c:	687b      	ldr	r3, [r7, #4]
 800964e:	681b      	ldr	r3, [r3, #0]
 8009650:	f103 0220 	add.w	r2, r3, #32
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	601a      	str	r2, [r3, #0]
	return *this;
 8009658:	687b      	ldr	r3, [r7, #4]
      }
 800965a:	4618      	mov	r0, r3
 800965c:	370c      	adds	r7, #12
 800965e:	46bd      	mov	sp, r7
 8009660:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009664:	4770      	bx	lr

08009666 <_ZNK9__gnu_cxx17__normal_iteratorIP6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8009666:	b480      	push	{r7}
 8009668:	b083      	sub	sp, #12
 800966a:	af00      	add	r7, sp, #0
 800966c:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800966e:	687b      	ldr	r3, [r7, #4]
 8009670:	681b      	ldr	r3, [r3, #0]
 8009672:	4618      	mov	r0, r3
 8009674:	370c      	adds	r7, #12
 8009676:	46bd      	mov	sp, r7
 8009678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800967c:	4770      	bx	lr

0800967e <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_>:
	__copy_m(_II __first, _II __last, _OI __result)
 800967e:	b580      	push	{r7, lr}
 8009680:	b086      	sub	sp, #24
 8009682:	af00      	add	r7, sp, #0
 8009684:	60f8      	str	r0, [r7, #12]
 8009686:	60b9      	str	r1, [r7, #8]
 8009688:	607a      	str	r2, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 800968a:	68ba      	ldr	r2, [r7, #8]
 800968c:	68fb      	ldr	r3, [r7, #12]
 800968e:	1ad3      	subs	r3, r2, r3
 8009690:	115b      	asrs	r3, r3, #5
 8009692:	617b      	str	r3, [r7, #20]
 8009694:	697b      	ldr	r3, [r7, #20]
 8009696:	2b00      	cmp	r3, #0
 8009698:	dd0d      	ble.n	80096b6 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x38>
	      *__result = *__first;
 800969a:	68f9      	ldr	r1, [r7, #12]
 800969c:	6878      	ldr	r0, [r7, #4]
 800969e:	f7f8 f9b5 	bl	8001a0c <_ZN6SymbolaSERKS_>
	      ++__first;
 80096a2:	68fb      	ldr	r3, [r7, #12]
 80096a4:	3320      	adds	r3, #32
 80096a6:	60fb      	str	r3, [r7, #12]
	      ++__result;
 80096a8:	687b      	ldr	r3, [r7, #4]
 80096aa:	3320      	adds	r3, #32
 80096ac:	607b      	str	r3, [r7, #4]
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 80096ae:	697b      	ldr	r3, [r7, #20]
 80096b0:	3b01      	subs	r3, #1
 80096b2:	617b      	str	r3, [r7, #20]
 80096b4:	e7ee      	b.n	8009694 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIP6SymbolS4_EET0_T_S6_S5_+0x16>
	  return __result;
 80096b6:	687b      	ldr	r3, [r7, #4]
	}
 80096b8:	4618      	mov	r0, r3
 80096ba:	3718      	adds	r7, #24
 80096bc:	46bd      	mov	sp, r7
 80096be:	bd80      	pop	{r7, pc}

080096c0 <_ZSt10_ConstructI6SymbolJRS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 80096c0:	b590      	push	{r4, r7, lr}
 80096c2:	b083      	sub	sp, #12
 80096c4:	af00      	add	r7, sp, #0
 80096c6:	6078      	str	r0, [r7, #4]
 80096c8:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 80096ca:	6838      	ldr	r0, [r7, #0]
 80096cc:	f000 f89c 	bl	8009808 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>
 80096d0:	4604      	mov	r4, r0
 80096d2:	687b      	ldr	r3, [r7, #4]
 80096d4:	4619      	mov	r1, r3
 80096d6:	2020      	movs	r0, #32
 80096d8:	f7f7 fcbf 	bl	800105a <_ZnwjPv>
 80096dc:	4603      	mov	r3, r0
 80096de:	4621      	mov	r1, r4
 80096e0:	4618      	mov	r0, r3
 80096e2:	f7f7 feb9 	bl	8001458 <_ZN6SymbolC1ERKS_>
 80096e6:	bf00      	nop
 80096e8:	370c      	adds	r7, #12
 80096ea:	46bd      	mov	sp, r7
 80096ec:	bd90      	pop	{r4, r7, pc}

080096ee <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS3_EEEEEPT_RS7_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80096ee:	b480      	push	{r7}
 80096f0:	b083      	sub	sp, #12
 80096f2:	af00      	add	r7, sp, #0
 80096f4:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80096f6:	687b      	ldr	r3, [r7, #4]
 80096f8:	4618      	mov	r0, r3
 80096fa:	370c      	adds	r7, #12
 80096fc:	46bd      	mov	sp, r7
 80096fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009702:	4770      	bx	lr

08009704 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8009704:	b480      	push	{r7}
 8009706:	b083      	sub	sp, #12
 8009708:	af00      	add	r7, sp, #0
 800970a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800970c:	4b03      	ldr	r3, [pc, #12]	; (800971c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv+0x18>)
      }
 800970e:	4618      	mov	r0, r3
 8009710:	370c      	adds	r7, #12
 8009712:	46bd      	mov	sp, r7
 8009714:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009718:	4770      	bx	lr
 800971a:	bf00      	nop
 800971c:	06666666 	.word	0x06666666

08009720 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8009720:	b480      	push	{r7}
 8009722:	b083      	sub	sp, #12
 8009724:	af00      	add	r7, sp, #0
 8009726:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8009728:	4b03      	ldr	r3, [pc, #12]	; (8009738 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv+0x18>)
      }
 800972a:	4618      	mov	r0, r3
 800972c:	370c      	adds	r7, #12
 800972e:	46bd      	mov	sp, r7
 8009730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009734:	4770      	bx	lr
 8009736:	bf00      	nop
 8009738:	02e8ba2e 	.word	0x02e8ba2e

0800973c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800973c:	b480      	push	{r7}
 800973e:	b083      	sub	sp, #12
 8009740:	af00      	add	r7, sp, #0
 8009742:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8009744:	4b03      	ldr	r3, [pc, #12]	; (8009754 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv+0x18>)
      }
 8009746:	4618      	mov	r0, r3
 8009748:	370c      	adds	r7, #12
 800974a:	46bd      	mov	sp, r7
 800974c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009750:	4770      	bx	lr
 8009752:	bf00      	nop
 8009754:	06666666 	.word	0x06666666

08009758 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8009758:	b480      	push	{r7}
 800975a:	b083      	sub	sp, #12
 800975c:	af00      	add	r7, sp, #0
 800975e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8009760:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
      }
 8009764:	4618      	mov	r0, r3
 8009766:	370c      	adds	r7, #12
 8009768:	46bd      	mov	sp, r7
 800976a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800976e:	4770      	bx	lr

08009770 <_ZN9__gnu_cxxneIPK6SymbolSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8009770:	b590      	push	{r4, r7, lr}
 8009772:	b083      	sub	sp, #12
 8009774:	af00      	add	r7, sp, #0
 8009776:	6078      	str	r0, [r7, #4]
 8009778:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800977a:	6878      	ldr	r0, [r7, #4]
 800977c:	f7ff fefb 	bl	8009576 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 8009780:	4603      	mov	r3, r0
 8009782:	681c      	ldr	r4, [r3, #0]
 8009784:	6838      	ldr	r0, [r7, #0]
 8009786:	f7ff fef6 	bl	8009576 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEE4baseEv>
 800978a:	4603      	mov	r3, r0
 800978c:	681b      	ldr	r3, [r3, #0]
 800978e:	429c      	cmp	r4, r3
 8009790:	bf14      	ite	ne
 8009792:	2301      	movne	r3, #1
 8009794:	2300      	moveq	r3, #0
 8009796:	b2db      	uxtb	r3, r3
 8009798:	4618      	mov	r0, r3
 800979a:	370c      	adds	r7, #12
 800979c:	46bd      	mov	sp, r7
 800979e:	bd90      	pop	{r4, r7, pc}

080097a0 <_ZN9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80097a0:	b480      	push	{r7}
 80097a2:	b083      	sub	sp, #12
 80097a4:	af00      	add	r7, sp, #0
 80097a6:	6078      	str	r0, [r7, #4]
	++_M_current;
 80097a8:	687b      	ldr	r3, [r7, #4]
 80097aa:	681b      	ldr	r3, [r3, #0]
 80097ac:	f103 0220 	add.w	r2, r3, #32
 80097b0:	687b      	ldr	r3, [r7, #4]
 80097b2:	601a      	str	r2, [r3, #0]
	return *this;
 80097b4:	687b      	ldr	r3, [r7, #4]
      }
 80097b6:	4618      	mov	r0, r3
 80097b8:	370c      	adds	r7, #12
 80097ba:	46bd      	mov	sp, r7
 80097bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097c0:	4770      	bx	lr

080097c2 <_ZNK9__gnu_cxx17__normal_iteratorIPK6SymbolSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 80097c2:	b480      	push	{r7}
 80097c4:	b083      	sub	sp, #12
 80097c6:	af00      	add	r7, sp, #0
 80097c8:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 80097ca:	687b      	ldr	r3, [r7, #4]
 80097cc:	681b      	ldr	r3, [r3, #0]
 80097ce:	4618      	mov	r0, r3
 80097d0:	370c      	adds	r7, #12
 80097d2:	46bd      	mov	sp, r7
 80097d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097d8:	4770      	bx	lr

080097da <_ZSt10_ConstructI6SymbolJRKS0_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 80097da:	b590      	push	{r4, r7, lr}
 80097dc:	b083      	sub	sp, #12
 80097de:	af00      	add	r7, sp, #0
 80097e0:	6078      	str	r0, [r7, #4]
 80097e2:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 80097e4:	6838      	ldr	r0, [r7, #0]
 80097e6:	f000 f81a 	bl	800981e <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>
 80097ea:	4604      	mov	r4, r0
 80097ec:	687b      	ldr	r3, [r7, #4]
 80097ee:	4619      	mov	r1, r3
 80097f0:	2020      	movs	r0, #32
 80097f2:	f7f7 fc32 	bl	800105a <_ZnwjPv>
 80097f6:	4603      	mov	r3, r0
 80097f8:	4621      	mov	r1, r4
 80097fa:	4618      	mov	r0, r3
 80097fc:	f7f7 fe2c 	bl	8001458 <_ZN6SymbolC1ERKS_>
 8009800:	bf00      	nop
 8009802:	370c      	adds	r7, #12
 8009804:	46bd      	mov	sp, r7
 8009806:	bd90      	pop	{r4, r7, pc}

08009808 <_ZSt7forwardIR6SymbolEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009808:	b480      	push	{r7}
 800980a:	b083      	sub	sp, #12
 800980c:	af00      	add	r7, sp, #0
 800980e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009810:	687b      	ldr	r3, [r7, #4]
 8009812:	4618      	mov	r0, r3
 8009814:	370c      	adds	r7, #12
 8009816:	46bd      	mov	sp, r7
 8009818:	f85d 7b04 	ldr.w	r7, [sp], #4
 800981c:	4770      	bx	lr

0800981e <_ZSt7forwardIRK6SymbolEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800981e:	b480      	push	{r7}
 8009820:	b083      	sub	sp, #12
 8009822:	af00      	add	r7, sp, #0
 8009824:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009826:	687b      	ldr	r3, [r7, #4]
 8009828:	4618      	mov	r0, r3
 800982a:	370c      	adds	r7, #12
 800982c:	46bd      	mov	sp, r7
 800982e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009832:	4770      	bx	lr

08009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
 8009834:	b580      	push	{r7, lr}
 8009836:	b082      	sub	sp, #8
 8009838:	af00      	add	r7, sp, #0
 800983a:	6078      	str	r0, [r7, #4]
 800983c:	687b      	ldr	r3, [r7, #4]
 800983e:	4618      	mov	r0, r3
 8009840:	f7f9 fd59 	bl	80032f6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	4618      	mov	r0, r3
 8009848:	3708      	adds	r7, #8
 800984a:	46bd      	mov	sp, r7
 800984c:	bd80      	pop	{r7, pc}

0800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
 800984e:	b580      	push	{r7, lr}
 8009850:	b082      	sub	sp, #8
 8009852:	af00      	add	r7, sp, #0
 8009854:	6078      	str	r0, [r7, #4]
 8009856:	687b      	ldr	r3, [r7, #4]
 8009858:	4618      	mov	r0, r3
 800985a:	f7f9 fc9c 	bl	8003196 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 800985e:	687b      	ldr	r3, [r7, #4]
 8009860:	4618      	mov	r0, r3
 8009862:	3708      	adds	r7, #8
 8009864:	46bd      	mov	sp, r7
 8009866:	bd80      	pop	{r7, pc}

08009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
 8009868:	b580      	push	{r7, lr}
 800986a:	b082      	sub	sp, #8
 800986c:	af00      	add	r7, sp, #0
 800986e:	6078      	str	r0, [r7, #4]
 8009870:	687b      	ldr	r3, [r7, #4]
 8009872:	4618      	mov	r0, r3
 8009874:	f7f9 fbe2 	bl	800303c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 8009878:	687b      	ldr	r3, [r7, #4]
 800987a:	4618      	mov	r0, r3
 800987c:	3708      	adds	r7, #8
 800987e:	46bd      	mov	sp, r7
 8009880:	bd80      	pop	{r7, pc}
	...

08009884 <_Z41__static_initialization_and_destruction_0ii>:
 8009884:	b590      	push	{r4, r7, lr}
 8009886:	b0e7      	sub	sp, #412	; 0x19c
 8009888:	af02      	add	r7, sp, #8
 800988a:	1d3b      	adds	r3, r7, #4
 800988c:	6018      	str	r0, [r3, #0]
 800988e:	463b      	mov	r3, r7
 8009890:	6019      	str	r1, [r3, #0]
 8009892:	1d3b      	adds	r3, r7, #4
 8009894:	681b      	ldr	r3, [r3, #0]
 8009896:	2b01      	cmp	r3, #1
 8009898:	f040 819d 	bne.w	8009bd6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 800989c:	463b      	mov	r3, r7
 800989e:	681b      	ldr	r3, [r3, #0]
 80098a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80098a4:	4293      	cmp	r3, r2
 80098a6:	f040 8196 	bne.w	8009bd6 <_Z41__static_initialization_and_destruction_0ii+0x352>
	{'^', TOKEN_POWER},
	{'%', TOKEN_MODULO},
	{'(', TOKEN_LEFT_BRACKET},
	{')', TOKEN_RIGHT_BRACKET},
	{'\0', TOKEN_END_OF_FILE},
};
 80098aa:	f107 0314 	add.w	r3, r7, #20
 80098ae:	4618      	mov	r0, r3
 80098b0:	2322      	movs	r3, #34	; 0x22
 80098b2:	461a      	mov	r2, r3
 80098b4:	2100      	movs	r1, #0
 80098b6:	f01b f9e1 	bl	8024c7c <memset>
 80098ba:	f107 0314 	add.w	r3, r7, #20
 80098be:	223a      	movs	r2, #58	; 0x3a
 80098c0:	701a      	strb	r2, [r3, #0]
 80098c2:	f107 0314 	add.w	r3, r7, #20
 80098c6:	2201      	movs	r2, #1
 80098c8:	705a      	strb	r2, [r3, #1]
 80098ca:	f107 0314 	add.w	r3, r7, #20
 80098ce:	220a      	movs	r2, #10
 80098d0:	709a      	strb	r2, [r3, #2]
 80098d2:	f107 0314 	add.w	r3, r7, #20
 80098d6:	220a      	movs	r2, #10
 80098d8:	70da      	strb	r2, [r3, #3]
 80098da:	f107 0314 	add.w	r3, r7, #20
 80098de:	222c      	movs	r2, #44	; 0x2c
 80098e0:	711a      	strb	r2, [r3, #4]
 80098e2:	f107 0314 	add.w	r3, r7, #20
 80098e6:	220c      	movs	r2, #12
 80098e8:	715a      	strb	r2, [r3, #5]
 80098ea:	f107 0314 	add.w	r3, r7, #20
 80098ee:	222e      	movs	r2, #46	; 0x2e
 80098f0:	719a      	strb	r2, [r3, #6]
 80098f2:	f107 0314 	add.w	r3, r7, #20
 80098f6:	220b      	movs	r2, #11
 80098f8:	71da      	strb	r2, [r3, #7]
 80098fa:	f107 0314 	add.w	r3, r7, #20
 80098fe:	225b      	movs	r2, #91	; 0x5b
 8009900:	721a      	strb	r2, [r3, #8]
 8009902:	f107 0314 	add.w	r3, r7, #20
 8009906:	220d      	movs	r2, #13
 8009908:	725a      	strb	r2, [r3, #9]
 800990a:	f107 0314 	add.w	r3, r7, #20
 800990e:	225d      	movs	r2, #93	; 0x5d
 8009910:	729a      	strb	r2, [r3, #10]
 8009912:	f107 0314 	add.w	r3, r7, #20
 8009916:	220e      	movs	r2, #14
 8009918:	72da      	strb	r2, [r3, #11]
 800991a:	f107 0314 	add.w	r3, r7, #20
 800991e:	227c      	movs	r2, #124	; 0x7c
 8009920:	731a      	strb	r2, [r3, #12]
 8009922:	f107 0314 	add.w	r3, r7, #20
 8009926:	2215      	movs	r2, #21
 8009928:	735a      	strb	r2, [r3, #13]
 800992a:	f107 0314 	add.w	r3, r7, #20
 800992e:	2226      	movs	r2, #38	; 0x26
 8009930:	739a      	strb	r2, [r3, #14]
 8009932:	f107 0314 	add.w	r3, r7, #20
 8009936:	2216      	movs	r2, #22
 8009938:	73da      	strb	r2, [r3, #15]
 800993a:	f107 0314 	add.w	r3, r7, #20
 800993e:	222b      	movs	r2, #43	; 0x2b
 8009940:	741a      	strb	r2, [r3, #16]
 8009942:	f107 0314 	add.w	r3, r7, #20
 8009946:	221f      	movs	r2, #31
 8009948:	745a      	strb	r2, [r3, #17]
 800994a:	f107 0314 	add.w	r3, r7, #20
 800994e:	222d      	movs	r2, #45	; 0x2d
 8009950:	749a      	strb	r2, [r3, #18]
 8009952:	f107 0314 	add.w	r3, r7, #20
 8009956:	2220      	movs	r2, #32
 8009958:	74da      	strb	r2, [r3, #19]
 800995a:	f107 0314 	add.w	r3, r7, #20
 800995e:	222a      	movs	r2, #42	; 0x2a
 8009960:	751a      	strb	r2, [r3, #20]
 8009962:	f107 0314 	add.w	r3, r7, #20
 8009966:	2221      	movs	r2, #33	; 0x21
 8009968:	755a      	strb	r2, [r3, #21]
 800996a:	f107 0314 	add.w	r3, r7, #20
 800996e:	222f      	movs	r2, #47	; 0x2f
 8009970:	759a      	strb	r2, [r3, #22]
 8009972:	f107 0314 	add.w	r3, r7, #20
 8009976:	2222      	movs	r2, #34	; 0x22
 8009978:	75da      	strb	r2, [r3, #23]
 800997a:	f107 0314 	add.w	r3, r7, #20
 800997e:	225e      	movs	r2, #94	; 0x5e
 8009980:	761a      	strb	r2, [r3, #24]
 8009982:	f107 0314 	add.w	r3, r7, #20
 8009986:	2223      	movs	r2, #35	; 0x23
 8009988:	765a      	strb	r2, [r3, #25]
 800998a:	f107 0314 	add.w	r3, r7, #20
 800998e:	2225      	movs	r2, #37	; 0x25
 8009990:	769a      	strb	r2, [r3, #26]
 8009992:	f107 0314 	add.w	r3, r7, #20
 8009996:	2224      	movs	r2, #36	; 0x24
 8009998:	76da      	strb	r2, [r3, #27]
 800999a:	f107 0314 	add.w	r3, r7, #20
 800999e:	2228      	movs	r2, #40	; 0x28
 80099a0:	771a      	strb	r2, [r3, #28]
 80099a2:	f107 0314 	add.w	r3, r7, #20
 80099a6:	2226      	movs	r2, #38	; 0x26
 80099a8:	775a      	strb	r2, [r3, #29]
 80099aa:	f107 0314 	add.w	r3, r7, #20
 80099ae:	2229      	movs	r2, #41	; 0x29
 80099b0:	779a      	strb	r2, [r3, #30]
 80099b2:	f107 0314 	add.w	r3, r7, #20
 80099b6:	2227      	movs	r2, #39	; 0x27
 80099b8:	77da      	strb	r2, [r3, #31]
 80099ba:	f107 0314 	add.w	r3, r7, #20
 80099be:	2225      	movs	r2, #37	; 0x25
 80099c0:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80099c4:	f107 030c 	add.w	r3, r7, #12
 80099c8:	f107 0214 	add.w	r2, r7, #20
 80099cc:	601a      	str	r2, [r3, #0]
 80099ce:	f107 030c 	add.w	r3, r7, #12
 80099d2:	2211      	movs	r2, #17
 80099d4:	605a      	str	r2, [r3, #4]
 80099d6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80099da:	4618      	mov	r0, r3
 80099dc:	f7f8 f9b6 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80099e0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80099e4:	f107 020c 	add.w	r2, r7, #12
 80099e8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80099ec:	9300      	str	r3, [sp, #0]
 80099ee:	460b      	mov	r3, r1
 80099f0:	ca06      	ldmia	r2, {r1, r2}
 80099f2:	4885      	ldr	r0, [pc, #532]	; (8009c08 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80099f4:	f7f8 f9c2 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80099f8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80099fc:	4618      	mov	r0, r3
 80099fe:	f7f8 f9b1 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>

static const std::map<std::string, token_type> token_strings
{
	{"true", TOKEN_TRUE},
 8009a02:	2305      	movs	r3, #5
 8009a04:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
	{"if", TOKEN_IF},
	{"elseif", TOKEN_ELSEIF},
	{"else", TOKEN_ELSE},
	{"while", TOKEN_WHILE},
	{"end", TOKEN_END},
};
 8009a08:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8009a0c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a10:	497e      	ldr	r1, [pc, #504]	; (8009c0c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8009a12:	4618      	mov	r0, r3
 8009a14:	f7f7 fb70 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8009a18:	2306      	movs	r3, #6
 8009a1a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8009a1e:	f207 1263 	addw	r2, r7, #355	; 0x163
 8009a22:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a26:	331c      	adds	r3, #28
 8009a28:	4979      	ldr	r1, [pc, #484]	; (8009c10 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8009a2a:	4618      	mov	r0, r3
 8009a2c:	f7f7 fb8c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8009a30:	2307      	movs	r3, #7
 8009a32:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8009a36:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8009a3a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a3e:	3338      	adds	r3, #56	; 0x38
 8009a40:	4974      	ldr	r1, [pc, #464]	; (8009c14 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8009a42:	4618      	mov	r0, r3
 8009a44:	f7f7 fb80 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8009a48:	2308      	movs	r3, #8
 8009a4a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8009a4e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8009a52:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a56:	3354      	adds	r3, #84	; 0x54
 8009a58:	496f      	ldr	r1, [pc, #444]	; (8009c18 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8009a5a:	4618      	mov	r0, r3
 8009a5c:	f7f7 fb4c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8009a60:	2309      	movs	r3, #9
 8009a62:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8009a66:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8009a6a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a6e:	3370      	adds	r3, #112	; 0x70
 8009a70:	496a      	ldr	r1, [pc, #424]	; (8009c1c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8009a72:	4618      	mov	r0, r3
 8009a74:	f7f7 fb90 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8009a78:	2310      	movs	r3, #16
 8009a7a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8009a7e:	f207 1267 	addw	r2, r7, #359	; 0x167
 8009a82:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a86:	338c      	adds	r3, #140	; 0x8c
 8009a88:	4965      	ldr	r1, [pc, #404]	; (8009c20 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8009a8a:	4618      	mov	r0, r3
 8009a8c:	f7f7 fbac 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8009a90:	2311      	movs	r3, #17
 8009a92:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8009a96:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8009a9a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009a9e:	33a8      	adds	r3, #168	; 0xa8
 8009aa0:	4960      	ldr	r1, [pc, #384]	; (8009c24 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8009aa2:	4618      	mov	r0, r3
 8009aa4:	f7f7 fb78 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8009aa8:	2312      	movs	r3, #18
 8009aaa:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8009aae:	f207 1269 	addw	r2, r7, #361	; 0x169
 8009ab2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009ab6:	33c4      	adds	r3, #196	; 0xc4
 8009ab8:	495b      	ldr	r1, [pc, #364]	; (8009c28 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8009aba:	4618      	mov	r0, r3
 8009abc:	f7f7 fb1c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8009ac0:	2313      	movs	r3, #19
 8009ac2:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8009ac6:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8009aca:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009ace:	33e0      	adds	r3, #224	; 0xe0
 8009ad0:	4956      	ldr	r1, [pc, #344]	; (8009c2c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8009ad2:	4618      	mov	r0, r3
 8009ad4:	f7f7 fb38 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8009ad8:	2314      	movs	r3, #20
 8009ada:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8009ade:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8009ae2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009ae6:	33fc      	adds	r3, #252	; 0xfc
 8009ae8:	4951      	ldr	r1, [pc, #324]	; (8009c30 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8009aea:	4618      	mov	r0, r3
 8009aec:	f7f7 fba4 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8009af0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8009af4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8009af8:	601a      	str	r2, [r3, #0]
 8009afa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8009afe:	220a      	movs	r2, #10
 8009b00:	605a      	str	r2, [r3, #4]
 8009b02:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8009b06:	4618      	mov	r0, r3
 8009b08:	f7f8 f9c5 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8009b0c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8009b10:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8009b14:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8009b18:	9300      	str	r3, [sp, #0]
 8009b1a:	460b      	mov	r3, r1
 8009b1c:	ca06      	ldmia	r2, {r1, r2}
 8009b1e:	4845      	ldr	r0, [pc, #276]	; (8009c34 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8009b20:	f7f8 f9d1 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8009b24:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8009b28:	4618      	mov	r0, r3
 8009b2a:	f7f8 f9c0 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8009b2e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8009b32:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8009b36:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8009b3a:	429c      	cmp	r4, r3
 8009b3c:	d004      	beq.n	8009b48 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8009b3e:	3c1c      	subs	r4, #28
 8009b40:	4620      	mov	r0, r4
 8009b42:	f7f7 facc 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8009b46:	e7f6      	b.n	8009b36 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
{
	{'<', {TOKEN_SMALLER_THAN, TOKEN_SMALLER_OR_EQUAL}},
	{'>', {TOKEN_GREATER_THAN, TOKEN_GREATER_OR_EQUAL}},
	{'=', {TOKEN_ASSIGN, TOKEN_EQUALS}},
	{'!', {TOKEN_EXCLAMATION, TOKEN_NOT_EQUAL}},
};
 8009b48:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8009b4c:	2200      	movs	r2, #0
 8009b4e:	601a      	str	r2, [r3, #0]
 8009b50:	605a      	str	r2, [r3, #4]
 8009b52:	609a      	str	r2, [r3, #8]
 8009b54:	233c      	movs	r3, #60	; 0x3c
 8009b56:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8009b5a:	231b      	movs	r3, #27
 8009b5c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8009b60:	231c      	movs	r3, #28
 8009b62:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8009b66:	233e      	movs	r3, #62	; 0x3e
 8009b68:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8009b6c:	2319      	movs	r3, #25
 8009b6e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8009b72:	231a      	movs	r3, #26
 8009b74:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8009b78:	233d      	movs	r3, #61	; 0x3d
 8009b7a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8009b7e:	2318      	movs	r3, #24
 8009b80:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8009b84:	231d      	movs	r3, #29
 8009b86:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8009b8a:	2321      	movs	r3, #33	; 0x21
 8009b8c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8009b90:	2317      	movs	r3, #23
 8009b92:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8009b96:	231e      	movs	r3, #30
 8009b98:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8009b9c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8009ba0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8009ba4:	2304      	movs	r3, #4
 8009ba6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8009baa:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009bae:	4618      	mov	r0, r3
 8009bb0:	f7f8 f9b9 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8009bb4:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8009bb8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009bbc:	9300      	str	r3, [sp, #0]
 8009bbe:	4613      	mov	r3, r2
 8009bc0:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8009bc4:	ca06      	ldmia	r2, {r1, r2}
 8009bc6:	481c      	ldr	r0, [pc, #112]	; (8009c38 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8009bc8:	f7f8 f9c5 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8009bcc:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8009bd0:	4618      	mov	r0, r3
 8009bd2:	f7f8 f9b4 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8009bd6:	1d3b      	adds	r3, r7, #4
 8009bd8:	681b      	ldr	r3, [r3, #0]
 8009bda:	2b00      	cmp	r3, #0
 8009bdc:	d10e      	bne.n	8009bfc <_Z41__static_initialization_and_destruction_0ii+0x378>
 8009bde:	463b      	mov	r3, r7
 8009be0:	681b      	ldr	r3, [r3, #0]
 8009be2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009be6:	4293      	cmp	r3, r2
 8009be8:	d108      	bne.n	8009bfc <_Z41__static_initialization_and_destruction_0ii+0x378>
 8009bea:	4813      	ldr	r0, [pc, #76]	; (8009c38 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8009bec:	f7ff fe22 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8009bf0:	4810      	ldr	r0, [pc, #64]	; (8009c34 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8009bf2:	f7ff fe2c 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8009bf6:	4804      	ldr	r0, [pc, #16]	; (8009c08 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8009bf8:	f7ff fe36 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8009bfc:	bf00      	nop
 8009bfe:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8009c02:	46bd      	mov	sp, r7
 8009c04:	bd90      	pop	{r4, r7, pc}
 8009c06:	bf00      	nop
 8009c08:	20000204 	.word	0x20000204
 8009c0c:	08029350 	.word	0x08029350
 8009c10:	08029358 	.word	0x08029358
 8009c14:	08029360 	.word	0x08029360
 8009c18:	08029368 	.word	0x08029368
 8009c1c:	08029370 	.word	0x08029370
 8009c20:	08029378 	.word	0x08029378
 8009c24:	0802937c 	.word	0x0802937c
 8009c28:	08029384 	.word	0x08029384
 8009c2c:	0802938c 	.word	0x0802938c
 8009c30:	08029394 	.word	0x08029394
 8009c34:	2000021c 	.word	0x2000021c
 8009c38:	20000234 	.word	0x20000234

08009c3c <_GLOBAL__sub_I__ZN8ExecutorC2Ev>:
 8009c3c:	b580      	push	{r7, lr}
 8009c3e:	af00      	add	r7, sp, #0
 8009c40:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009c44:	2001      	movs	r0, #1
 8009c46:	f7ff fe1d 	bl	8009884 <_Z41__static_initialization_and_destruction_0ii>
 8009c4a:	bd80      	pop	{r7, pc}

08009c4c <_GLOBAL__sub_D__ZN8ExecutorC2Ev>:
 8009c4c:	b580      	push	{r7, lr}
 8009c4e:	af00      	add	r7, sp, #0
 8009c50:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009c54:	2000      	movs	r0, #0
 8009c56:	f7ff fe15 	bl	8009884 <_Z41__static_initialization_and_destruction_0ii>
 8009c5a:	bd80      	pop	{r7, pc}

08009c5c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 8009c5c:	b580      	push	{r7, lr}
 8009c5e:	b082      	sub	sp, #8
 8009c60:	af00      	add	r7, sp, #0
 8009c62:	6078      	str	r0, [r7, #4]
 8009c64:	687b      	ldr	r3, [r7, #4]
 8009c66:	4618      	mov	r0, r3
 8009c68:	f000 fa21 	bl	800a0ae <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009c6c:	687b      	ldr	r3, [r7, #4]
 8009c6e:	4618      	mov	r0, r3
 8009c70:	3708      	adds	r7, #8
 8009c72:	46bd      	mov	sp, r7
 8009c74:	bd80      	pop	{r7, pc}

08009c76 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 8009c76:	b580      	push	{r7, lr}
 8009c78:	b082      	sub	sp, #8
 8009c7a:	af00      	add	r7, sp, #0
 8009c7c:	6078      	str	r0, [r7, #4]
 8009c7e:	687b      	ldr	r3, [r7, #4]
 8009c80:	4618      	mov	r0, r3
 8009c82:	f7ff ffeb 	bl	8009c5c <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009c86:	687b      	ldr	r3, [r7, #4]
 8009c88:	4618      	mov	r0, r3
 8009c8a:	3708      	adds	r7, #8
 8009c8c:	46bd      	mov	sp, r7
 8009c8e:	bd80      	pop	{r7, pc}

08009c90 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8009c90:	b580      	push	{r7, lr}
 8009c92:	b082      	sub	sp, #8
 8009c94:	af00      	add	r7, sp, #0
 8009c96:	6078      	str	r0, [r7, #4]
 8009c98:	687b      	ldr	r3, [r7, #4]
 8009c9a:	4618      	mov	r0, r3
 8009c9c:	f7ff ffeb 	bl	8009c76 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009ca0:	687b      	ldr	r3, [r7, #4]
 8009ca2:	4618      	mov	r0, r3
 8009ca4:	3708      	adds	r7, #8
 8009ca6:	46bd      	mov	sp, r7
 8009ca8:	bd80      	pop	{r7, pc}

08009caa <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 8009caa:	b580      	push	{r7, lr}
 8009cac:	b082      	sub	sp, #8
 8009cae:	af00      	add	r7, sp, #0
 8009cb0:	6078      	str	r0, [r7, #4]
 8009cb2:	687b      	ldr	r3, [r7, #4]
 8009cb4:	4618      	mov	r0, r3
 8009cb6:	f7ff ffeb 	bl	8009c90 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	4618      	mov	r0, r3
 8009cbe:	3708      	adds	r7, #8
 8009cc0:	46bd      	mov	sp, r7
 8009cc2:	bd80      	pop	{r7, pc}

08009cc4 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8009cc4:	b580      	push	{r7, lr}
 8009cc6:	b082      	sub	sp, #8
 8009cc8:	af00      	add	r7, sp, #0
 8009cca:	6078      	str	r0, [r7, #4]
 8009ccc:	687b      	ldr	r3, [r7, #4]
 8009cce:	4618      	mov	r0, r3
 8009cd0:	f7ff ffeb 	bl	8009caa <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009cd4:	687b      	ldr	r3, [r7, #4]
 8009cd6:	4618      	mov	r0, r3
 8009cd8:	3708      	adds	r7, #8
 8009cda:	46bd      	mov	sp, r7
 8009cdc:	bd80      	pop	{r7, pc}

08009cde <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~variant() = default;
 8009cde:	b580      	push	{r7, lr}
 8009ce0:	b082      	sub	sp, #8
 8009ce2:	af00      	add	r7, sp, #0
 8009ce4:	6078      	str	r0, [r7, #4]
 8009ce6:	687b      	ldr	r3, [r7, #4]
 8009ce8:	4618      	mov	r0, r3
 8009cea:	f7ff ffeb 	bl	8009cc4 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8009cee:	687b      	ldr	r3, [r7, #4]
 8009cf0:	4618      	mov	r0, r3
 8009cf2:	3708      	adds	r7, #8
 8009cf4:	46bd      	mov	sp, r7
 8009cf6:	bd80      	pop	{r7, pc}

08009cf8 <_ZN17Primal_expressionD1Ev>:
#include <Expression.h>

Primal_expression::~Primal_expression()
 8009cf8:	b590      	push	{r4, r7, lr}
 8009cfa:	b083      	sub	sp, #12
 8009cfc:	af00      	add	r7, sp, #0
 8009cfe:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Variable*>(content))
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	3304      	adds	r3, #4
 8009d04:	4618      	mov	r0, r3
 8009d06:	f000 f9f1 	bl	800a0ec <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>
 8009d0a:	4603      	mov	r3, r0
 8009d0c:	2b00      	cmp	r3, #0
 8009d0e:	d010      	beq.n	8009d32 <_ZN17Primal_expressionD1Ev+0x3a>
	{
		delete std::get<Variable*>(content);
 8009d10:	687b      	ldr	r3, [r7, #4]
 8009d12:	3304      	adds	r3, #4
 8009d14:	4618      	mov	r0, r3
 8009d16:	f000 f9fa 	bl	800a10e <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 8009d1a:	4603      	mov	r3, r0
 8009d1c:	681c      	ldr	r4, [r3, #0]
 8009d1e:	2c00      	cmp	r4, #0
 8009d20:	d01f      	beq.n	8009d62 <_ZN17Primal_expressionD1Ev+0x6a>
 8009d22:	4620      	mov	r0, r4
 8009d24:	f00c fe14 	bl	8016950 <_ZN8VariableD1Ev>
 8009d28:	2120      	movs	r1, #32
 8009d2a:	4620      	mov	r0, r4
 8009d2c:	f019 faa6 	bl	802327c <_ZdlPvj>
 8009d30:	e017      	b.n	8009d62 <_ZN17Primal_expressionD1Ev+0x6a>
	}
	else if(std::holds_alternative<Function_call*>(content))
 8009d32:	687b      	ldr	r3, [r7, #4]
 8009d34:	3304      	adds	r3, #4
 8009d36:	4618      	mov	r0, r3
 8009d38:	f000 f9f5 	bl	800a126 <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>
 8009d3c:	4603      	mov	r3, r0
 8009d3e:	2b00      	cmp	r3, #0
 8009d40:	d00f      	beq.n	8009d62 <_ZN17Primal_expressionD1Ev+0x6a>
	{
		delete std::get<Function_call*>(content);
 8009d42:	687b      	ldr	r3, [r7, #4]
 8009d44:	3304      	adds	r3, #4
 8009d46:	4618      	mov	r0, r3
 8009d48:	f000 f9fe 	bl	800a148 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 8009d4c:	4603      	mov	r3, r0
 8009d4e:	681c      	ldr	r4, [r3, #0]
 8009d50:	2c00      	cmp	r4, #0
 8009d52:	d006      	beq.n	8009d62 <_ZN17Primal_expressionD1Ev+0x6a>
 8009d54:	4620      	mov	r0, r4
 8009d56:	f00c fdb8 	bl	80168ca <_ZN13Function_callD1Ev>
 8009d5a:	212c      	movs	r1, #44	; 0x2c
 8009d5c:	4620      	mov	r0, r4
 8009d5e:	f019 fa8d 	bl	802327c <_ZdlPvj>
Primal_expression::~Primal_expression()
 8009d62:	687b      	ldr	r3, [r7, #4]
 8009d64:	3304      	adds	r3, #4
 8009d66:	4618      	mov	r0, r3
 8009d68:	f7ff ffb9 	bl	8009cde <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
	}
}
 8009d6c:	687b      	ldr	r3, [r7, #4]
 8009d6e:	4618      	mov	r0, r3
 8009d70:	370c      	adds	r7, #12
 8009d72:	46bd      	mov	sp, r7
 8009d74:	bd90      	pop	{r4, r7, pc}

08009d76 <_ZN19Priority_expressionD1Ev>:

Priority_expression::~Priority_expression()
 8009d76:	b590      	push	{r4, r7, lr}
 8009d78:	b083      	sub	sp, #12
 8009d7a:	af00      	add	r7, sp, #0
 8009d7c:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Expression*>(exp))
 8009d7e:	687b      	ldr	r3, [r7, #4]
 8009d80:	4618      	mov	r0, r3
 8009d82:	f000 fa00 	bl	800a186 <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 8009d86:	4603      	mov	r3, r0
 8009d88:	2b00      	cmp	r3, #0
 8009d8a:	d00f      	beq.n	8009dac <_ZN19Priority_expressionD1Ev+0x36>
	{
		delete std::get<Expression*>(exp);
 8009d8c:	687b      	ldr	r3, [r7, #4]
 8009d8e:	4618      	mov	r0, r3
 8009d90:	f000 fa0a 	bl	800a1a8 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 8009d94:	4603      	mov	r3, r0
 8009d96:	681c      	ldr	r4, [r3, #0]
 8009d98:	2c00      	cmp	r4, #0
 8009d9a:	d016      	beq.n	8009dca <_ZN19Priority_expressionD1Ev+0x54>
 8009d9c:	4620      	mov	r0, r4
 8009d9e:	f000 f948 	bl	800a032 <_ZN10ExpressionD1Ev>
 8009da2:	2114      	movs	r1, #20
 8009da4:	4620      	mov	r0, r4
 8009da6:	f019 fa69 	bl	802327c <_ZdlPvj>
 8009daa:	e00e      	b.n	8009dca <_ZN19Priority_expressionD1Ev+0x54>
	}
	else
	{
		delete std::get<Primal_expression*>(exp);
 8009dac:	687b      	ldr	r3, [r7, #4]
 8009dae:	4618      	mov	r0, r3
 8009db0:	f000 fa06 	bl	800a1c0 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 8009db4:	4603      	mov	r3, r0
 8009db6:	681c      	ldr	r4, [r3, #0]
 8009db8:	2c00      	cmp	r4, #0
 8009dba:	d006      	beq.n	8009dca <_ZN19Priority_expressionD1Ev+0x54>
 8009dbc:	4620      	mov	r0, r4
 8009dbe:	f7ff ff9b 	bl	8009cf8 <_ZN17Primal_expressionD1Ev>
 8009dc2:	2120      	movs	r1, #32
 8009dc4:	4620      	mov	r0, r4
 8009dc6:	f019 fa59 	bl	802327c <_ZdlPvj>
	}
}
 8009dca:	687b      	ldr	r3, [r7, #4]
 8009dcc:	4618      	mov	r0, r3
 8009dce:	370c      	adds	r7, #12
 8009dd0:	46bd      	mov	sp, r7
 8009dd2:	bd90      	pop	{r4, r7, pc}

08009dd4 <_ZN16Unary_expressionD1Ev>:

Unary_expression::~Unary_expression()
 8009dd4:	b590      	push	{r4, r7, lr}
 8009dd6:	b083      	sub	sp, #12
 8009dd8:	af00      	add	r7, sp, #0
 8009dda:	6078      	str	r0, [r7, #4]
{
	delete prior_exp;
 8009ddc:	687b      	ldr	r3, [r7, #4]
 8009dde:	681c      	ldr	r4, [r3, #0]
 8009de0:	2c00      	cmp	r4, #0
 8009de2:	d006      	beq.n	8009df2 <_ZN16Unary_expressionD1Ev+0x1e>
 8009de4:	4620      	mov	r0, r4
 8009de6:	f7ff ffc6 	bl	8009d76 <_ZN19Priority_expressionD1Ev>
 8009dea:	2108      	movs	r1, #8
 8009dec:	4620      	mov	r0, r4
 8009dee:	f019 fa45 	bl	802327c <_ZdlPvj>
}
 8009df2:	687b      	ldr	r3, [r7, #4]
 8009df4:	4618      	mov	r0, r3
 8009df6:	370c      	adds	r7, #12
 8009df8:	46bd      	mov	sp, r7
 8009dfa:	bd90      	pop	{r4, r7, pc}

08009dfc <_ZN16Power_expressionD1Ev>:

Power_expression::~Power_expression()
 8009dfc:	b590      	push	{r4, r7, lr}
 8009dfe:	b083      	sub	sp, #12
 8009e00:	af00      	add	r7, sp, #0
 8009e02:	6078      	str	r0, [r7, #4]
{
	delete left_un_exp;
 8009e04:	687b      	ldr	r3, [r7, #4]
 8009e06:	681c      	ldr	r4, [r3, #0]
 8009e08:	2c00      	cmp	r4, #0
 8009e0a:	d006      	beq.n	8009e1a <_ZN16Power_expressionD1Ev+0x1e>
 8009e0c:	4620      	mov	r0, r4
 8009e0e:	f7ff ffe1 	bl	8009dd4 <_ZN16Unary_expressionD1Ev>
 8009e12:	2108      	movs	r1, #8
 8009e14:	4620      	mov	r0, r4
 8009e16:	f019 fa31 	bl	802327c <_ZdlPvj>
	delete right_un_exp;
 8009e1a:	687b      	ldr	r3, [r7, #4]
 8009e1c:	685c      	ldr	r4, [r3, #4]
 8009e1e:	2c00      	cmp	r4, #0
 8009e20:	d006      	beq.n	8009e30 <_ZN16Power_expressionD1Ev+0x34>
 8009e22:	4620      	mov	r0, r4
 8009e24:	f7ff ffd6 	bl	8009dd4 <_ZN16Unary_expressionD1Ev>
 8009e28:	2108      	movs	r1, #8
 8009e2a:	4620      	mov	r0, r4
 8009e2c:	f019 fa26 	bl	802327c <_ZdlPvj>
}
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	4618      	mov	r0, r3
 8009e34:	370c      	adds	r7, #12
 8009e36:	46bd      	mov	sp, r7
 8009e38:	bd90      	pop	{r4, r7, pc}

08009e3a <_ZN19Multiply_expressionD1Ev>:

Multiply_expression::~Multiply_expression()
 8009e3a:	b590      	push	{r4, r7, lr}
 8009e3c:	b087      	sub	sp, #28
 8009e3e:	af00      	add	r7, sp, #0
 8009e40:	6078      	str	r0, [r7, #4]
{
	for(Power_expression* exp : pow_exps)
 8009e42:	687b      	ldr	r3, [r7, #4]
 8009e44:	617b      	str	r3, [r7, #20]
 8009e46:	6978      	ldr	r0, [r7, #20]
 8009e48:	f000 f9fc 	bl	800a244 <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 8009e4c:	4603      	mov	r3, r0
 8009e4e:	60fb      	str	r3, [r7, #12]
 8009e50:	6978      	ldr	r0, [r7, #20]
 8009e52:	f000 fa07 	bl	800a264 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 8009e56:	4603      	mov	r3, r0
 8009e58:	60bb      	str	r3, [r7, #8]
 8009e5a:	f107 0208 	add.w	r2, r7, #8
 8009e5e:	f107 030c 	add.w	r3, r7, #12
 8009e62:	4611      	mov	r1, r2
 8009e64:	4618      	mov	r0, r3
 8009e66:	f000 fa0e 	bl	800a286 <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009e6a:	4603      	mov	r3, r0
 8009e6c:	2b00      	cmp	r3, #0
 8009e6e:	d017      	beq.n	8009ea0 <_ZN19Multiply_expressionD1Ev+0x66>
 8009e70:	f107 030c 	add.w	r3, r7, #12
 8009e74:	4618      	mov	r0, r3
 8009e76:	f000 fa2e 	bl	800a2d6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009e7a:	4603      	mov	r3, r0
 8009e7c:	681b      	ldr	r3, [r3, #0]
 8009e7e:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009e80:	693c      	ldr	r4, [r7, #16]
 8009e82:	2c00      	cmp	r4, #0
 8009e84:	d006      	beq.n	8009e94 <_ZN19Multiply_expressionD1Ev+0x5a>
 8009e86:	4620      	mov	r0, r4
 8009e88:	f7ff ffb8 	bl	8009dfc <_ZN16Power_expressionD1Ev>
 8009e8c:	2108      	movs	r1, #8
 8009e8e:	4620      	mov	r0, r4
 8009e90:	f019 f9f4 	bl	802327c <_ZdlPvj>
	for(Power_expression* exp : pow_exps)
 8009e94:	f107 030c 	add.w	r3, r7, #12
 8009e98:	4618      	mov	r0, r3
 8009e9a:	f000 fa0c 	bl	800a2b6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009e9e:	e7dc      	b.n	8009e5a <_ZN19Multiply_expressionD1Ev+0x20>
Multiply_expression::~Multiply_expression()
 8009ea0:	687b      	ldr	r3, [r7, #4]
 8009ea2:	330c      	adds	r3, #12
 8009ea4:	4618      	mov	r0, r3
 8009ea6:	f000 f9b2 	bl	800a20e <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>
 8009eaa:	687b      	ldr	r3, [r7, #4]
 8009eac:	4618      	mov	r0, r3
 8009eae:	f000 f993 	bl	800a1d8 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>
	}
}
 8009eb2:	687b      	ldr	r3, [r7, #4]
 8009eb4:	4618      	mov	r0, r3
 8009eb6:	371c      	adds	r7, #28
 8009eb8:	46bd      	mov	sp, r7
 8009eba:	bd90      	pop	{r4, r7, pc}

08009ebc <_ZN14Sum_expressionD1Ev>:

Sum_expression::~Sum_expression()
 8009ebc:	b590      	push	{r4, r7, lr}
 8009ebe:	b087      	sub	sp, #28
 8009ec0:	af00      	add	r7, sp, #0
 8009ec2:	6078      	str	r0, [r7, #4]
{
	for(Multiply_expression* exp : mult_exps)
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	617b      	str	r3, [r7, #20]
 8009ec8:	6978      	ldr	r0, [r7, #20]
 8009eca:	f000 fa46 	bl	800a35a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 8009ece:	4603      	mov	r3, r0
 8009ed0:	60fb      	str	r3, [r7, #12]
 8009ed2:	6978      	ldr	r0, [r7, #20]
 8009ed4:	f000 fa51 	bl	800a37a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 8009ed8:	4603      	mov	r3, r0
 8009eda:	60bb      	str	r3, [r7, #8]
 8009edc:	f107 0208 	add.w	r2, r7, #8
 8009ee0:	f107 030c 	add.w	r3, r7, #12
 8009ee4:	4611      	mov	r1, r2
 8009ee6:	4618      	mov	r0, r3
 8009ee8:	f000 fa58 	bl	800a39c <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009eec:	4603      	mov	r3, r0
 8009eee:	2b00      	cmp	r3, #0
 8009ef0:	d017      	beq.n	8009f22 <_ZN14Sum_expressionD1Ev+0x66>
 8009ef2:	f107 030c 	add.w	r3, r7, #12
 8009ef6:	4618      	mov	r0, r3
 8009ef8:	f000 fa78 	bl	800a3ec <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009efc:	4603      	mov	r3, r0
 8009efe:	681b      	ldr	r3, [r3, #0]
 8009f00:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8009f02:	693c      	ldr	r4, [r7, #16]
 8009f04:	2c00      	cmp	r4, #0
 8009f06:	d006      	beq.n	8009f16 <_ZN14Sum_expressionD1Ev+0x5a>
 8009f08:	4620      	mov	r0, r4
 8009f0a:	f7ff ff96 	bl	8009e3a <_ZN19Multiply_expressionD1Ev>
 8009f0e:	2118      	movs	r1, #24
 8009f10:	4620      	mov	r0, r4
 8009f12:	f019 f9b3 	bl	802327c <_ZdlPvj>
	for(Multiply_expression* exp : mult_exps)
 8009f16:	f107 030c 	add.w	r3, r7, #12
 8009f1a:	4618      	mov	r0, r3
 8009f1c:	f000 fa56 	bl	800a3cc <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8009f20:	e7dc      	b.n	8009edc <_ZN14Sum_expressionD1Ev+0x20>
Sum_expression::~Sum_expression()
 8009f22:	687b      	ldr	r3, [r7, #4]
 8009f24:	330c      	adds	r3, #12
 8009f26:	4618      	mov	r0, r3
 8009f28:	f000 f9fc 	bl	800a324 <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>
 8009f2c:	687b      	ldr	r3, [r7, #4]
 8009f2e:	4618      	mov	r0, r3
 8009f30:	f000 f9dd 	bl	800a2ee <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>
	}
}
 8009f34:	687b      	ldr	r3, [r7, #4]
 8009f36:	4618      	mov	r0, r3
 8009f38:	371c      	adds	r7, #28
 8009f3a:	46bd      	mov	sp, r7
 8009f3c:	bd90      	pop	{r4, r7, pc}

08009f3e <_ZN19Relation_expressionD1Ev>:

Relation_expression::~Relation_expression()
 8009f3e:	b590      	push	{r4, r7, lr}
 8009f40:	b083      	sub	sp, #12
 8009f42:	af00      	add	r7, sp, #0
 8009f44:	6078      	str	r0, [r7, #4]
{
	delete left_sum_exp;
 8009f46:	687b      	ldr	r3, [r7, #4]
 8009f48:	681c      	ldr	r4, [r3, #0]
 8009f4a:	2c00      	cmp	r4, #0
 8009f4c:	d006      	beq.n	8009f5c <_ZN19Relation_expressionD1Ev+0x1e>
 8009f4e:	4620      	mov	r0, r4
 8009f50:	f7ff ffb4 	bl	8009ebc <_ZN14Sum_expressionD1Ev>
 8009f54:	2118      	movs	r1, #24
 8009f56:	4620      	mov	r0, r4
 8009f58:	f019 f990 	bl	802327c <_ZdlPvj>
	delete right_sum_exp;
 8009f5c:	687b      	ldr	r3, [r7, #4]
 8009f5e:	685c      	ldr	r4, [r3, #4]
 8009f60:	2c00      	cmp	r4, #0
 8009f62:	d006      	beq.n	8009f72 <_ZN19Relation_expressionD1Ev+0x34>
 8009f64:	4620      	mov	r0, r4
 8009f66:	f7ff ffa9 	bl	8009ebc <_ZN14Sum_expressionD1Ev>
 8009f6a:	2118      	movs	r1, #24
 8009f6c:	4620      	mov	r0, r4
 8009f6e:	f019 f985 	bl	802327c <_ZdlPvj>
}
 8009f72:	687b      	ldr	r3, [r7, #4]
 8009f74:	4618      	mov	r0, r3
 8009f76:	370c      	adds	r7, #12
 8009f78:	46bd      	mov	sp, r7
 8009f7a:	bd90      	pop	{r4, r7, pc}

08009f7c <_ZN18Compare_expressionD1Ev>:

Compare_expression::~Compare_expression()
 8009f7c:	b590      	push	{r4, r7, lr}
 8009f7e:	b083      	sub	sp, #12
 8009f80:	af00      	add	r7, sp, #0
 8009f82:	6078      	str	r0, [r7, #4]
{
	delete left_rel_exp;
 8009f84:	687b      	ldr	r3, [r7, #4]
 8009f86:	681c      	ldr	r4, [r3, #0]
 8009f88:	2c00      	cmp	r4, #0
 8009f8a:	d006      	beq.n	8009f9a <_ZN18Compare_expressionD1Ev+0x1e>
 8009f8c:	4620      	mov	r0, r4
 8009f8e:	f7ff ffd6 	bl	8009f3e <_ZN19Relation_expressionD1Ev>
 8009f92:	210c      	movs	r1, #12
 8009f94:	4620      	mov	r0, r4
 8009f96:	f019 f971 	bl	802327c <_ZdlPvj>
	delete right_rel_exp;
 8009f9a:	687b      	ldr	r3, [r7, #4]
 8009f9c:	685c      	ldr	r4, [r3, #4]
 8009f9e:	2c00      	cmp	r4, #0
 8009fa0:	d006      	beq.n	8009fb0 <_ZN18Compare_expressionD1Ev+0x34>
 8009fa2:	4620      	mov	r0, r4
 8009fa4:	f7ff ffcb 	bl	8009f3e <_ZN19Relation_expressionD1Ev>
 8009fa8:	210c      	movs	r1, #12
 8009faa:	4620      	mov	r0, r4
 8009fac:	f019 f966 	bl	802327c <_ZdlPvj>
}
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	4618      	mov	r0, r3
 8009fb4:	370c      	adds	r7, #12
 8009fb6:	46bd      	mov	sp, r7
 8009fb8:	bd90      	pop	{r4, r7, pc}

08009fba <_ZN14And_expressionD1Ev>:

And_expression::~And_expression()
 8009fba:	b590      	push	{r4, r7, lr}
 8009fbc:	b087      	sub	sp, #28
 8009fbe:	af00      	add	r7, sp, #0
 8009fc0:	6078      	str	r0, [r7, #4]
{
	for(Compare_expression* exp : comp_exps)
 8009fc2:	687b      	ldr	r3, [r7, #4]
 8009fc4:	617b      	str	r3, [r7, #20]
 8009fc6:	6978      	ldr	r0, [r7, #20]
 8009fc8:	f000 fa37 	bl	800a43a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 8009fcc:	4603      	mov	r3, r0
 8009fce:	60fb      	str	r3, [r7, #12]
 8009fd0:	6978      	ldr	r0, [r7, #20]
 8009fd2:	f000 fa42 	bl	800a45a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 8009fd6:	4603      	mov	r3, r0
 8009fd8:	60bb      	str	r3, [r7, #8]
 8009fda:	f107 0208 	add.w	r2, r7, #8
 8009fde:	f107 030c 	add.w	r3, r7, #12
 8009fe2:	4611      	mov	r1, r2
 8009fe4:	4618      	mov	r0, r3
 8009fe6:	f000 fa49 	bl	800a47c <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8009fea:	4603      	mov	r3, r0
 8009fec:	2b00      	cmp	r3, #0
 8009fee:	d017      	beq.n	800a020 <_ZN14And_expressionD1Ev+0x66>
 8009ff0:	f107 030c 	add.w	r3, r7, #12
 8009ff4:	4618      	mov	r0, r3
 8009ff6:	f000 fa69 	bl	800a4cc <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8009ffa:	4603      	mov	r3, r0
 8009ffc:	681b      	ldr	r3, [r3, #0]
 8009ffe:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 800a000:	693c      	ldr	r4, [r7, #16]
 800a002:	2c00      	cmp	r4, #0
 800a004:	d006      	beq.n	800a014 <_ZN14And_expressionD1Ev+0x5a>
 800a006:	4620      	mov	r0, r4
 800a008:	f7ff ffb8 	bl	8009f7c <_ZN18Compare_expressionD1Ev>
 800a00c:	210c      	movs	r1, #12
 800a00e:	4620      	mov	r0, r4
 800a010:	f019 f934 	bl	802327c <_ZdlPvj>
	for(Compare_expression* exp : comp_exps)
 800a014:	f107 030c 	add.w	r3, r7, #12
 800a018:	4618      	mov	r0, r3
 800a01a:	f000 fa47 	bl	800a4ac <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800a01e:	e7dc      	b.n	8009fda <_ZN14And_expressionD1Ev+0x20>
And_expression::~And_expression()
 800a020:	687b      	ldr	r3, [r7, #4]
 800a022:	4618      	mov	r0, r3
 800a024:	f000 f9ee 	bl	800a404 <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>
	}
}
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	4618      	mov	r0, r3
 800a02c:	371c      	adds	r7, #28
 800a02e:	46bd      	mov	sp, r7
 800a030:	bd90      	pop	{r4, r7, pc}

0800a032 <_ZN10ExpressionD1Ev>:

Expression::~Expression()
 800a032:	b590      	push	{r4, r7, lr}
 800a034:	b087      	sub	sp, #28
 800a036:	af00      	add	r7, sp, #0
 800a038:	6078      	str	r0, [r7, #4]
{
	for(And_expression* exp : and_exps)
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	3308      	adds	r3, #8
 800a03e:	617b      	str	r3, [r7, #20]
 800a040:	6978      	ldr	r0, [r7, #20]
 800a042:	f000 fa6a 	bl	800a51a <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 800a046:	4603      	mov	r3, r0
 800a048:	60fb      	str	r3, [r7, #12]
 800a04a:	6978      	ldr	r0, [r7, #20]
 800a04c:	f000 fa75 	bl	800a53a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 800a050:	4603      	mov	r3, r0
 800a052:	60bb      	str	r3, [r7, #8]
 800a054:	f107 0208 	add.w	r2, r7, #8
 800a058:	f107 030c 	add.w	r3, r7, #12
 800a05c:	4611      	mov	r1, r2
 800a05e:	4618      	mov	r0, r3
 800a060:	f000 fa7c 	bl	800a55c <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800a064:	4603      	mov	r3, r0
 800a066:	2b00      	cmp	r3, #0
 800a068:	d017      	beq.n	800a09a <_ZN10ExpressionD1Ev+0x68>
 800a06a:	f107 030c 	add.w	r3, r7, #12
 800a06e:	4618      	mov	r0, r3
 800a070:	f000 fa9c 	bl	800a5ac <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800a074:	4603      	mov	r3, r0
 800a076:	681b      	ldr	r3, [r3, #0]
 800a078:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 800a07a:	693c      	ldr	r4, [r7, #16]
 800a07c:	2c00      	cmp	r4, #0
 800a07e:	d006      	beq.n	800a08e <_ZN10ExpressionD1Ev+0x5c>
 800a080:	4620      	mov	r0, r4
 800a082:	f7ff ff9a 	bl	8009fba <_ZN14And_expressionD1Ev>
 800a086:	210c      	movs	r1, #12
 800a088:	4620      	mov	r0, r4
 800a08a:	f019 f8f7 	bl	802327c <_ZdlPvj>
	for(And_expression* exp : and_exps)
 800a08e:	f107 030c 	add.w	r3, r7, #12
 800a092:	4618      	mov	r0, r3
 800a094:	f000 fa7a 	bl	800a58c <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800a098:	e7dc      	b.n	800a054 <_ZN10ExpressionD1Ev+0x22>
Expression::~Expression()
 800a09a:	687b      	ldr	r3, [r7, #4]
 800a09c:	3308      	adds	r3, #8
 800a09e:	4618      	mov	r0, r3
 800a0a0:	f000 fa20 	bl	800a4e4 <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>
	}
}
 800a0a4:	687b      	ldr	r3, [r7, #4]
 800a0a6:	4618      	mov	r0, r3
 800a0a8:	371c      	adds	r7, #28
 800a0aa:	46bd      	mov	sp, r7
 800a0ac:	bd90      	pop	{r4, r7, pc}

0800a0ae <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~_Variant_storage()
 800a0ae:	b580      	push	{r7, lr}
 800a0b0:	b082      	sub	sp, #8
 800a0b2:	af00      	add	r7, sp, #0
 800a0b4:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 800a0b6:	6878      	ldr	r0, [r7, #4]
 800a0b8:	f000 fa84 	bl	800a5c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
 800a0bc:	687b      	ldr	r3, [r7, #4]
 800a0be:	4618      	mov	r0, r3
 800a0c0:	3708      	adds	r7, #8
 800a0c2:	46bd      	mov	sp, r7
 800a0c4:	bd80      	pop	{r7, pc}

0800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>:
      constexpr size_t index() const noexcept
 800a0c6:	b480      	push	{r7}
 800a0c8:	b083      	sub	sp, #12
 800a0ca:	af00      	add	r7, sp, #0
 800a0cc:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 800a0ce:	687b      	ldr	r3, [r7, #4]
 800a0d0:	7e1b      	ldrb	r3, [r3, #24]
 800a0d2:	2bff      	cmp	r3, #255	; 0xff
 800a0d4:	d102      	bne.n	800a0dc <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x16>
	  return variant_npos;
 800a0d6:	f04f 33ff 	mov.w	r3, #4294967295
 800a0da:	e001      	b.n	800a0e0 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x1a>
	return this->_M_index;
 800a0dc:	687b      	ldr	r3, [r7, #4]
 800a0de:	7e1b      	ldrb	r3, [r3, #24]
      }
 800a0e0:	4618      	mov	r0, r3
 800a0e2:	370c      	adds	r7, #12
 800a0e4:	46bd      	mov	sp, r7
 800a0e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0ea:	4770      	bx	lr

0800a0ec <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 800a0ec:	b580      	push	{r7, lr}
 800a0ee:	b082      	sub	sp, #8
 800a0f0:	af00      	add	r7, sp, #0
 800a0f2:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 800a0f4:	6878      	ldr	r0, [r7, #4]
 800a0f6:	f7ff ffe6 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a0fa:	4603      	mov	r3, r0
 800a0fc:	2b04      	cmp	r3, #4
 800a0fe:	bf0c      	ite	eq
 800a100:	2301      	moveq	r3, #1
 800a102:	2300      	movne	r3, #0
 800a104:	b2db      	uxtb	r3, r3
    }
 800a106:	4618      	mov	r0, r3
 800a108:	3708      	adds	r7, #8
 800a10a:	46bd      	mov	sp, r7
 800a10c:	bd80      	pop	{r7, pc}

0800a10e <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800a10e:	b580      	push	{r7, lr}
 800a110:	b082      	sub	sp, #8
 800a112:	af00      	add	r7, sp, #0
 800a114:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800a116:	6878      	ldr	r0, [r7, #4]
 800a118:	f000 facc 	bl	800a6b4 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800a11c:	4603      	mov	r3, r0
    }
 800a11e:	4618      	mov	r0, r3
 800a120:	3708      	adds	r7, #8
 800a122:	46bd      	mov	sp, r7
 800a124:	bd80      	pop	{r7, pc}

0800a126 <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 800a126:	b580      	push	{r7, lr}
 800a128:	b082      	sub	sp, #8
 800a12a:	af00      	add	r7, sp, #0
 800a12c:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 800a12e:	6878      	ldr	r0, [r7, #4]
 800a130:	f7ff ffc9 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a134:	4603      	mov	r3, r0
 800a136:	2b05      	cmp	r3, #5
 800a138:	bf0c      	ite	eq
 800a13a:	2301      	moveq	r3, #1
 800a13c:	2300      	movne	r3, #0
 800a13e:	b2db      	uxtb	r3, r3
    }
 800a140:	4618      	mov	r0, r3
 800a142:	3708      	adds	r7, #8
 800a144:	46bd      	mov	sp, r7
 800a146:	bd80      	pop	{r7, pc}

0800a148 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800a148:	b580      	push	{r7, lr}
 800a14a:	b082      	sub	sp, #8
 800a14c:	af00      	add	r7, sp, #0
 800a14e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800a150:	6878      	ldr	r0, [r7, #4]
 800a152:	f000 fb47 	bl	800a7e4 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800a156:	4603      	mov	r3, r0
    }
 800a158:	4618      	mov	r0, r3
 800a15a:	3708      	adds	r7, #8
 800a15c:	46bd      	mov	sp, r7
 800a15e:	bd80      	pop	{r7, pc}

0800a160 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>:
      constexpr size_t index() const noexcept
 800a160:	b480      	push	{r7}
 800a162:	b083      	sub	sp, #12
 800a164:	af00      	add	r7, sp, #0
 800a166:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	791b      	ldrb	r3, [r3, #4]
 800a16c:	2bff      	cmp	r3, #255	; 0xff
 800a16e:	d102      	bne.n	800a176 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x16>
	  return variant_npos;
 800a170:	f04f 33ff 	mov.w	r3, #4294967295
 800a174:	e001      	b.n	800a17a <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x1a>
	return this->_M_index;
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	791b      	ldrb	r3, [r3, #4]
      }
 800a17a:	4618      	mov	r0, r3
 800a17c:	370c      	adds	r7, #12
 800a17e:	46bd      	mov	sp, r7
 800a180:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a184:	4770      	bx	lr

0800a186 <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 800a186:	b580      	push	{r7, lr}
 800a188:	b082      	sub	sp, #8
 800a18a:	af00      	add	r7, sp, #0
 800a18c:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 800a18e:	6878      	ldr	r0, [r7, #4]
 800a190:	f7ff ffe6 	bl	800a160 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a194:	4603      	mov	r3, r0
 800a196:	2b01      	cmp	r3, #1
 800a198:	bf0c      	ite	eq
 800a19a:	2301      	moveq	r3, #1
 800a19c:	2300      	movne	r3, #0
 800a19e:	b2db      	uxtb	r3, r3
    }
 800a1a0:	4618      	mov	r0, r3
 800a1a2:	3708      	adds	r7, #8
 800a1a4:	46bd      	mov	sp, r7
 800a1a6:	bd80      	pop	{r7, pc}

0800a1a8 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800a1a8:	b580      	push	{r7, lr}
 800a1aa:	b082      	sub	sp, #8
 800a1ac:	af00      	add	r7, sp, #0
 800a1ae:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800a1b0:	6878      	ldr	r0, [r7, #4]
 800a1b2:	f000 fb67 	bl	800a884 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 800a1b6:	4603      	mov	r3, r0
    }
 800a1b8:	4618      	mov	r0, r3
 800a1ba:	3708      	adds	r7, #8
 800a1bc:	46bd      	mov	sp, r7
 800a1be:	bd80      	pop	{r7, pc}

0800a1c0 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800a1c0:	b580      	push	{r7, lr}
 800a1c2:	b082      	sub	sp, #8
 800a1c4:	af00      	add	r7, sp, #0
 800a1c6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800a1c8:	6878      	ldr	r0, [r7, #4]
 800a1ca:	f000 fb99 	bl	800a900 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 800a1ce:	4603      	mov	r3, r0
    }
 800a1d0:	4618      	mov	r0, r3
 800a1d2:	3708      	adds	r7, #8
 800a1d4:	46bd      	mov	sp, r7
 800a1d6:	bd80      	pop	{r7, pc}

0800a1d8 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a1d8:	b5b0      	push	{r4, r5, r7, lr}
 800a1da:	b082      	sub	sp, #8
 800a1dc:	af00      	add	r7, sp, #0
 800a1de:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a1e0:	687b      	ldr	r3, [r7, #4]
 800a1e2:	681c      	ldr	r4, [r3, #0]
 800a1e4:	687b      	ldr	r3, [r7, #4]
 800a1e6:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a1e8:	687b      	ldr	r3, [r7, #4]
 800a1ea:	4618      	mov	r0, r3
 800a1ec:	f000 fbc9 	bl	800a982 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a1f0:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a1f2:	461a      	mov	r2, r3
 800a1f4:	4629      	mov	r1, r5
 800a1f6:	4620      	mov	r0, r4
 800a1f8:	f000 fbce 	bl	800a998 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a1fc:	687b      	ldr	r3, [r7, #4]
 800a1fe:	4618      	mov	r0, r3
 800a200:	f000 fba6 	bl	800a950 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>
 800a204:	687b      	ldr	r3, [r7, #4]
 800a206:	4618      	mov	r0, r3
 800a208:	3708      	adds	r7, #8
 800a20a:	46bd      	mov	sp, r7
 800a20c:	bdb0      	pop	{r4, r5, r7, pc}

0800a20e <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a20e:	b5b0      	push	{r4, r5, r7, lr}
 800a210:	b082      	sub	sp, #8
 800a212:	af00      	add	r7, sp, #0
 800a214:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a216:	687b      	ldr	r3, [r7, #4]
 800a218:	681c      	ldr	r4, [r3, #0]
 800a21a:	687b      	ldr	r3, [r7, #4]
 800a21c:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a21e:	687b      	ldr	r3, [r7, #4]
 800a220:	4618      	mov	r0, r3
 800a222:	f000 fbeb 	bl	800a9fc <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 800a226:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a228:	461a      	mov	r2, r3
 800a22a:	4629      	mov	r1, r5
 800a22c:	4620      	mov	r0, r4
 800a22e:	f000 fbf0 	bl	800aa12 <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>
      }
 800a232:	687b      	ldr	r3, [r7, #4]
 800a234:	4618      	mov	r0, r3
 800a236:	f000 fbc9 	bl	800a9cc <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>
 800a23a:	687b      	ldr	r3, [r7, #4]
 800a23c:	4618      	mov	r0, r3
 800a23e:	3708      	adds	r7, #8
 800a240:	46bd      	mov	sp, r7
 800a242:	bdb0      	pop	{r4, r5, r7, pc}

0800a244 <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a244:	b580      	push	{r7, lr}
 800a246:	b084      	sub	sp, #16
 800a248:	af00      	add	r7, sp, #0
 800a24a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a24c:	687a      	ldr	r2, [r7, #4]
 800a24e:	f107 030c 	add.w	r3, r7, #12
 800a252:	4611      	mov	r1, r2
 800a254:	4618      	mov	r0, r3
 800a256:	f000 fbea 	bl	800aa2e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a25a:	68fb      	ldr	r3, [r7, #12]
 800a25c:	4618      	mov	r0, r3
 800a25e:	3710      	adds	r7, #16
 800a260:	46bd      	mov	sp, r7
 800a262:	bd80      	pop	{r7, pc}

0800a264 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a264:	b580      	push	{r7, lr}
 800a266:	b084      	sub	sp, #16
 800a268:	af00      	add	r7, sp, #0
 800a26a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a26c:	687b      	ldr	r3, [r7, #4]
 800a26e:	1d1a      	adds	r2, r3, #4
 800a270:	f107 030c 	add.w	r3, r7, #12
 800a274:	4611      	mov	r1, r2
 800a276:	4618      	mov	r0, r3
 800a278:	f000 fbd9 	bl	800aa2e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a27c:	68fb      	ldr	r3, [r7, #12]
 800a27e:	4618      	mov	r0, r3
 800a280:	3710      	adds	r7, #16
 800a282:	46bd      	mov	sp, r7
 800a284:	bd80      	pop	{r7, pc}

0800a286 <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a286:	b590      	push	{r4, r7, lr}
 800a288:	b083      	sub	sp, #12
 800a28a:	af00      	add	r7, sp, #0
 800a28c:	6078      	str	r0, [r7, #4]
 800a28e:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a290:	6878      	ldr	r0, [r7, #4]
 800a292:	f000 fbdc 	bl	800aa4e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a296:	4603      	mov	r3, r0
 800a298:	681c      	ldr	r4, [r3, #0]
 800a29a:	6838      	ldr	r0, [r7, #0]
 800a29c:	f000 fbd7 	bl	800aa4e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a2a0:	4603      	mov	r3, r0
 800a2a2:	681b      	ldr	r3, [r3, #0]
 800a2a4:	429c      	cmp	r4, r3
 800a2a6:	bf14      	ite	ne
 800a2a8:	2301      	movne	r3, #1
 800a2aa:	2300      	moveq	r3, #0
 800a2ac:	b2db      	uxtb	r3, r3
 800a2ae:	4618      	mov	r0, r3
 800a2b0:	370c      	adds	r7, #12
 800a2b2:	46bd      	mov	sp, r7
 800a2b4:	bd90      	pop	{r4, r7, pc}

0800a2b6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a2b6:	b480      	push	{r7}
 800a2b8:	b083      	sub	sp, #12
 800a2ba:	af00      	add	r7, sp, #0
 800a2bc:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a2be:	687b      	ldr	r3, [r7, #4]
 800a2c0:	681b      	ldr	r3, [r3, #0]
 800a2c2:	1d1a      	adds	r2, r3, #4
 800a2c4:	687b      	ldr	r3, [r7, #4]
 800a2c6:	601a      	str	r2, [r3, #0]
	return *this;
 800a2c8:	687b      	ldr	r3, [r7, #4]
      }
 800a2ca:	4618      	mov	r0, r3
 800a2cc:	370c      	adds	r7, #12
 800a2ce:	46bd      	mov	sp, r7
 800a2d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2d4:	4770      	bx	lr

0800a2d6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a2d6:	b480      	push	{r7}
 800a2d8:	b083      	sub	sp, #12
 800a2da:	af00      	add	r7, sp, #0
 800a2dc:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a2de:	687b      	ldr	r3, [r7, #4]
 800a2e0:	681b      	ldr	r3, [r3, #0]
 800a2e2:	4618      	mov	r0, r3
 800a2e4:	370c      	adds	r7, #12
 800a2e6:	46bd      	mov	sp, r7
 800a2e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2ec:	4770      	bx	lr

0800a2ee <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a2ee:	b5b0      	push	{r4, r5, r7, lr}
 800a2f0:	b082      	sub	sp, #8
 800a2f2:	af00      	add	r7, sp, #0
 800a2f4:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a2f6:	687b      	ldr	r3, [r7, #4]
 800a2f8:	681c      	ldr	r4, [r3, #0]
 800a2fa:	687b      	ldr	r3, [r7, #4]
 800a2fc:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a2fe:	687b      	ldr	r3, [r7, #4]
 800a300:	4618      	mov	r0, r3
 800a302:	f000 fbd4 	bl	800aaae <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a306:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a308:	461a      	mov	r2, r3
 800a30a:	4629      	mov	r1, r5
 800a30c:	4620      	mov	r0, r4
 800a30e:	f000 fbd9 	bl	800aac4 <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a312:	687b      	ldr	r3, [r7, #4]
 800a314:	4618      	mov	r0, r3
 800a316:	f000 fbb1 	bl	800aa7c <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	4618      	mov	r0, r3
 800a31e:	3708      	adds	r7, #8
 800a320:	46bd      	mov	sp, r7
 800a322:	bdb0      	pop	{r4, r5, r7, pc}

0800a324 <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a324:	b5b0      	push	{r4, r5, r7, lr}
 800a326:	b082      	sub	sp, #8
 800a328:	af00      	add	r7, sp, #0
 800a32a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a32c:	687b      	ldr	r3, [r7, #4]
 800a32e:	681c      	ldr	r4, [r3, #0]
 800a330:	687b      	ldr	r3, [r7, #4]
 800a332:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a334:	687b      	ldr	r3, [r7, #4]
 800a336:	4618      	mov	r0, r3
 800a338:	f000 fbf6 	bl	800ab28 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 800a33c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a33e:	461a      	mov	r2, r3
 800a340:	4629      	mov	r1, r5
 800a342:	4620      	mov	r0, r4
 800a344:	f000 fbfb 	bl	800ab3e <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>
      }
 800a348:	687b      	ldr	r3, [r7, #4]
 800a34a:	4618      	mov	r0, r3
 800a34c:	f000 fbd4 	bl	800aaf8 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>
 800a350:	687b      	ldr	r3, [r7, #4]
 800a352:	4618      	mov	r0, r3
 800a354:	3708      	adds	r7, #8
 800a356:	46bd      	mov	sp, r7
 800a358:	bdb0      	pop	{r4, r5, r7, pc}

0800a35a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a35a:	b580      	push	{r7, lr}
 800a35c:	b084      	sub	sp, #16
 800a35e:	af00      	add	r7, sp, #0
 800a360:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a362:	687a      	ldr	r2, [r7, #4]
 800a364:	f107 030c 	add.w	r3, r7, #12
 800a368:	4611      	mov	r1, r2
 800a36a:	4618      	mov	r0, r3
 800a36c:	f000 fbf5 	bl	800ab5a <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a370:	68fb      	ldr	r3, [r7, #12]
 800a372:	4618      	mov	r0, r3
 800a374:	3710      	adds	r7, #16
 800a376:	46bd      	mov	sp, r7
 800a378:	bd80      	pop	{r7, pc}

0800a37a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a37a:	b580      	push	{r7, lr}
 800a37c:	b084      	sub	sp, #16
 800a37e:	af00      	add	r7, sp, #0
 800a380:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a382:	687b      	ldr	r3, [r7, #4]
 800a384:	1d1a      	adds	r2, r3, #4
 800a386:	f107 030c 	add.w	r3, r7, #12
 800a38a:	4611      	mov	r1, r2
 800a38c:	4618      	mov	r0, r3
 800a38e:	f000 fbe4 	bl	800ab5a <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a392:	68fb      	ldr	r3, [r7, #12]
 800a394:	4618      	mov	r0, r3
 800a396:	3710      	adds	r7, #16
 800a398:	46bd      	mov	sp, r7
 800a39a:	bd80      	pop	{r7, pc}

0800a39c <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a39c:	b590      	push	{r4, r7, lr}
 800a39e:	b083      	sub	sp, #12
 800a3a0:	af00      	add	r7, sp, #0
 800a3a2:	6078      	str	r0, [r7, #4]
 800a3a4:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a3a6:	6878      	ldr	r0, [r7, #4]
 800a3a8:	f000 fbe7 	bl	800ab7a <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a3ac:	4603      	mov	r3, r0
 800a3ae:	681c      	ldr	r4, [r3, #0]
 800a3b0:	6838      	ldr	r0, [r7, #0]
 800a3b2:	f000 fbe2 	bl	800ab7a <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a3b6:	4603      	mov	r3, r0
 800a3b8:	681b      	ldr	r3, [r3, #0]
 800a3ba:	429c      	cmp	r4, r3
 800a3bc:	bf14      	ite	ne
 800a3be:	2301      	movne	r3, #1
 800a3c0:	2300      	moveq	r3, #0
 800a3c2:	b2db      	uxtb	r3, r3
 800a3c4:	4618      	mov	r0, r3
 800a3c6:	370c      	adds	r7, #12
 800a3c8:	46bd      	mov	sp, r7
 800a3ca:	bd90      	pop	{r4, r7, pc}

0800a3cc <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a3cc:	b480      	push	{r7}
 800a3ce:	b083      	sub	sp, #12
 800a3d0:	af00      	add	r7, sp, #0
 800a3d2:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a3d4:	687b      	ldr	r3, [r7, #4]
 800a3d6:	681b      	ldr	r3, [r3, #0]
 800a3d8:	1d1a      	adds	r2, r3, #4
 800a3da:	687b      	ldr	r3, [r7, #4]
 800a3dc:	601a      	str	r2, [r3, #0]
	return *this;
 800a3de:	687b      	ldr	r3, [r7, #4]
      }
 800a3e0:	4618      	mov	r0, r3
 800a3e2:	370c      	adds	r7, #12
 800a3e4:	46bd      	mov	sp, r7
 800a3e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3ea:	4770      	bx	lr

0800a3ec <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a3ec:	b480      	push	{r7}
 800a3ee:	b083      	sub	sp, #12
 800a3f0:	af00      	add	r7, sp, #0
 800a3f2:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a3f4:	687b      	ldr	r3, [r7, #4]
 800a3f6:	681b      	ldr	r3, [r3, #0]
 800a3f8:	4618      	mov	r0, r3
 800a3fa:	370c      	adds	r7, #12
 800a3fc:	46bd      	mov	sp, r7
 800a3fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a402:	4770      	bx	lr

0800a404 <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a404:	b5b0      	push	{r4, r5, r7, lr}
 800a406:	b082      	sub	sp, #8
 800a408:	af00      	add	r7, sp, #0
 800a40a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	681c      	ldr	r4, [r3, #0]
 800a410:	687b      	ldr	r3, [r7, #4]
 800a412:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a414:	687b      	ldr	r3, [r7, #4]
 800a416:	4618      	mov	r0, r3
 800a418:	f000 fbdf 	bl	800abda <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a41c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a41e:	461a      	mov	r2, r3
 800a420:	4629      	mov	r1, r5
 800a422:	4620      	mov	r0, r4
 800a424:	f000 fbe4 	bl	800abf0 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	4618      	mov	r0, r3
 800a42c:	f000 fbbc 	bl	800aba8 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>
 800a430:	687b      	ldr	r3, [r7, #4]
 800a432:	4618      	mov	r0, r3
 800a434:	3708      	adds	r7, #8
 800a436:	46bd      	mov	sp, r7
 800a438:	bdb0      	pop	{r4, r5, r7, pc}

0800a43a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a43a:	b580      	push	{r7, lr}
 800a43c:	b084      	sub	sp, #16
 800a43e:	af00      	add	r7, sp, #0
 800a440:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a442:	687a      	ldr	r2, [r7, #4]
 800a444:	f107 030c 	add.w	r3, r7, #12
 800a448:	4611      	mov	r1, r2
 800a44a:	4618      	mov	r0, r3
 800a44c:	f000 fbde 	bl	800ac0c <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a450:	68fb      	ldr	r3, [r7, #12]
 800a452:	4618      	mov	r0, r3
 800a454:	3710      	adds	r7, #16
 800a456:	46bd      	mov	sp, r7
 800a458:	bd80      	pop	{r7, pc}

0800a45a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a45a:	b580      	push	{r7, lr}
 800a45c:	b084      	sub	sp, #16
 800a45e:	af00      	add	r7, sp, #0
 800a460:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a462:	687b      	ldr	r3, [r7, #4]
 800a464:	1d1a      	adds	r2, r3, #4
 800a466:	f107 030c 	add.w	r3, r7, #12
 800a46a:	4611      	mov	r1, r2
 800a46c:	4618      	mov	r0, r3
 800a46e:	f000 fbcd 	bl	800ac0c <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a472:	68fb      	ldr	r3, [r7, #12]
 800a474:	4618      	mov	r0, r3
 800a476:	3710      	adds	r7, #16
 800a478:	46bd      	mov	sp, r7
 800a47a:	bd80      	pop	{r7, pc}

0800a47c <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a47c:	b590      	push	{r4, r7, lr}
 800a47e:	b083      	sub	sp, #12
 800a480:	af00      	add	r7, sp, #0
 800a482:	6078      	str	r0, [r7, #4]
 800a484:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a486:	6878      	ldr	r0, [r7, #4]
 800a488:	f000 fbd0 	bl	800ac2c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a48c:	4603      	mov	r3, r0
 800a48e:	681c      	ldr	r4, [r3, #0]
 800a490:	6838      	ldr	r0, [r7, #0]
 800a492:	f000 fbcb 	bl	800ac2c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a496:	4603      	mov	r3, r0
 800a498:	681b      	ldr	r3, [r3, #0]
 800a49a:	429c      	cmp	r4, r3
 800a49c:	bf14      	ite	ne
 800a49e:	2301      	movne	r3, #1
 800a4a0:	2300      	moveq	r3, #0
 800a4a2:	b2db      	uxtb	r3, r3
 800a4a4:	4618      	mov	r0, r3
 800a4a6:	370c      	adds	r7, #12
 800a4a8:	46bd      	mov	sp, r7
 800a4aa:	bd90      	pop	{r4, r7, pc}

0800a4ac <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a4ac:	b480      	push	{r7}
 800a4ae:	b083      	sub	sp, #12
 800a4b0:	af00      	add	r7, sp, #0
 800a4b2:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a4b4:	687b      	ldr	r3, [r7, #4]
 800a4b6:	681b      	ldr	r3, [r3, #0]
 800a4b8:	1d1a      	adds	r2, r3, #4
 800a4ba:	687b      	ldr	r3, [r7, #4]
 800a4bc:	601a      	str	r2, [r3, #0]
	return *this;
 800a4be:	687b      	ldr	r3, [r7, #4]
      }
 800a4c0:	4618      	mov	r0, r3
 800a4c2:	370c      	adds	r7, #12
 800a4c4:	46bd      	mov	sp, r7
 800a4c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4ca:	4770      	bx	lr

0800a4cc <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a4cc:	b480      	push	{r7}
 800a4ce:	b083      	sub	sp, #12
 800a4d0:	af00      	add	r7, sp, #0
 800a4d2:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a4d4:	687b      	ldr	r3, [r7, #4]
 800a4d6:	681b      	ldr	r3, [r3, #0]
 800a4d8:	4618      	mov	r0, r3
 800a4da:	370c      	adds	r7, #12
 800a4dc:	46bd      	mov	sp, r7
 800a4de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4e2:	4770      	bx	lr

0800a4e4 <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800a4e4:	b5b0      	push	{r4, r5, r7, lr}
 800a4e6:	b082      	sub	sp, #8
 800a4e8:	af00      	add	r7, sp, #0
 800a4ea:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a4ec:	687b      	ldr	r3, [r7, #4]
 800a4ee:	681c      	ldr	r4, [r3, #0]
 800a4f0:	687b      	ldr	r3, [r7, #4]
 800a4f2:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800a4f4:	687b      	ldr	r3, [r7, #4]
 800a4f6:	4618      	mov	r0, r3
 800a4f8:	f000 fbc8 	bl	800ac8c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800a4fc:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800a4fe:	461a      	mov	r2, r3
 800a500:	4629      	mov	r1, r5
 800a502:	4620      	mov	r0, r4
 800a504:	f000 fbcd 	bl	800aca2 <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>
      }
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	4618      	mov	r0, r3
 800a50c:	f000 fba5 	bl	800ac5a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>
 800a510:	687b      	ldr	r3, [r7, #4]
 800a512:	4618      	mov	r0, r3
 800a514:	3708      	adds	r7, #8
 800a516:	46bd      	mov	sp, r7
 800a518:	bdb0      	pop	{r4, r5, r7, pc}

0800a51a <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800a51a:	b580      	push	{r7, lr}
 800a51c:	b084      	sub	sp, #16
 800a51e:	af00      	add	r7, sp, #0
 800a520:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800a522:	687a      	ldr	r2, [r7, #4]
 800a524:	f107 030c 	add.w	r3, r7, #12
 800a528:	4611      	mov	r1, r2
 800a52a:	4618      	mov	r0, r3
 800a52c:	f000 fbc7 	bl	800acbe <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a530:	68fb      	ldr	r3, [r7, #12]
 800a532:	4618      	mov	r0, r3
 800a534:	3710      	adds	r7, #16
 800a536:	46bd      	mov	sp, r7
 800a538:	bd80      	pop	{r7, pc}

0800a53a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800a53a:	b580      	push	{r7, lr}
 800a53c:	b084      	sub	sp, #16
 800a53e:	af00      	add	r7, sp, #0
 800a540:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800a542:	687b      	ldr	r3, [r7, #4]
 800a544:	1d1a      	adds	r2, r3, #4
 800a546:	f107 030c 	add.w	r3, r7, #12
 800a54a:	4611      	mov	r1, r2
 800a54c:	4618      	mov	r0, r3
 800a54e:	f000 fbb6 	bl	800acbe <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800a552:	68fb      	ldr	r3, [r7, #12]
 800a554:	4618      	mov	r0, r3
 800a556:	3710      	adds	r7, #16
 800a558:	46bd      	mov	sp, r7
 800a55a:	bd80      	pop	{r7, pc}

0800a55c <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800a55c:	b590      	push	{r4, r7, lr}
 800a55e:	b083      	sub	sp, #12
 800a560:	af00      	add	r7, sp, #0
 800a562:	6078      	str	r0, [r7, #4]
 800a564:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800a566:	6878      	ldr	r0, [r7, #4]
 800a568:	f000 fbb9 	bl	800acde <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a56c:	4603      	mov	r3, r0
 800a56e:	681c      	ldr	r4, [r3, #0]
 800a570:	6838      	ldr	r0, [r7, #0]
 800a572:	f000 fbb4 	bl	800acde <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800a576:	4603      	mov	r3, r0
 800a578:	681b      	ldr	r3, [r3, #0]
 800a57a:	429c      	cmp	r4, r3
 800a57c:	bf14      	ite	ne
 800a57e:	2301      	movne	r3, #1
 800a580:	2300      	moveq	r3, #0
 800a582:	b2db      	uxtb	r3, r3
 800a584:	4618      	mov	r0, r3
 800a586:	370c      	adds	r7, #12
 800a588:	46bd      	mov	sp, r7
 800a58a:	bd90      	pop	{r4, r7, pc}

0800a58c <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800a58c:	b480      	push	{r7}
 800a58e:	b083      	sub	sp, #12
 800a590:	af00      	add	r7, sp, #0
 800a592:	6078      	str	r0, [r7, #4]
	++_M_current;
 800a594:	687b      	ldr	r3, [r7, #4]
 800a596:	681b      	ldr	r3, [r3, #0]
 800a598:	1d1a      	adds	r2, r3, #4
 800a59a:	687b      	ldr	r3, [r7, #4]
 800a59c:	601a      	str	r2, [r3, #0]
	return *this;
 800a59e:	687b      	ldr	r3, [r7, #4]
      }
 800a5a0:	4618      	mov	r0, r3
 800a5a2:	370c      	adds	r7, #12
 800a5a4:	46bd      	mov	sp, r7
 800a5a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5aa:	4770      	bx	lr

0800a5ac <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800a5ac:	b480      	push	{r7}
 800a5ae:	b083      	sub	sp, #12
 800a5b0:	af00      	add	r7, sp, #0
 800a5b2:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800a5b4:	687b      	ldr	r3, [r7, #4]
 800a5b6:	681b      	ldr	r3, [r3, #0]
 800a5b8:	4618      	mov	r0, r3
 800a5ba:	370c      	adds	r7, #12
 800a5bc:	46bd      	mov	sp, r7
 800a5be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5c2:	4770      	bx	lr

0800a5c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>:
      void _M_reset()
 800a5c4:	b580      	push	{r7, lr}
 800a5c6:	b082      	sub	sp, #8
 800a5c8:	af00      	add	r7, sp, #0
 800a5ca:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 800a5cc:	6878      	ldr	r0, [r7, #4]
 800a5ce:	f000 fecb 	bl	800b368 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>
	_M_index = variant_npos;
 800a5d2:	687b      	ldr	r3, [r7, #4]
 800a5d4:	22ff      	movs	r2, #255	; 0xff
 800a5d6:	761a      	strb	r2, [r3, #24]
      }
 800a5d8:	bf00      	nop
 800a5da:	3708      	adds	r7, #8
 800a5dc:	46bd      	mov	sp, r7
 800a5de:	bd80      	pop	{r7, pc}

0800a5e0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a5e0:	b580      	push	{r7, lr}
 800a5e2:	b082      	sub	sp, #8
 800a5e4:	af00      	add	r7, sp, #0
 800a5e6:	7138      	strb	r0, [r7, #4]
 800a5e8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a5ea:	6838      	ldr	r0, [r7, #0]
 800a5ec:	f000 ff05 	bl	800b3fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a5f0:	4603      	mov	r3, r0
 800a5f2:	4618      	mov	r0, r3
 800a5f4:	f000 ff0c 	bl	800b410 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>
 800a5f8:	4603      	mov	r3, r0
 800a5fa:	4618      	mov	r0, r3
 800a5fc:	3708      	adds	r7, #8
 800a5fe:	46bd      	mov	sp, r7
 800a600:	bd80      	pop	{r7, pc}

0800a602 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a602:	b590      	push	{r4, r7, lr}
 800a604:	b083      	sub	sp, #12
 800a606:	af00      	add	r7, sp, #0
 800a608:	7138      	strb	r0, [r7, #4]
 800a60a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a60c:	6838      	ldr	r0, [r7, #0]
 800a60e:	f000 fee9 	bl	800b3e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a612:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a614:	4619      	mov	r1, r3
 800a616:	4620      	mov	r0, r4
 800a618:	f7ff ffe2 	bl	800a5e0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a61c:	4603      	mov	r3, r0
    }
 800a61e:	4618      	mov	r0, r3
 800a620:	370c      	adds	r7, #12
 800a622:	46bd      	mov	sp, r7
 800a624:	bd90      	pop	{r4, r7, pc}

0800a626 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a626:	b590      	push	{r4, r7, lr}
 800a628:	b083      	sub	sp, #12
 800a62a:	af00      	add	r7, sp, #0
 800a62c:	7138      	strb	r0, [r7, #4]
 800a62e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a630:	6838      	ldr	r0, [r7, #0]
 800a632:	f000 fecc 	bl	800b3ce <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a636:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a638:	4619      	mov	r1, r3
 800a63a:	4620      	mov	r0, r4
 800a63c:	f7ff ffe1 	bl	800a602 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a640:	4603      	mov	r3, r0
    }
 800a642:	4618      	mov	r0, r3
 800a644:	370c      	adds	r7, #12
 800a646:	46bd      	mov	sp, r7
 800a648:	bd90      	pop	{r4, r7, pc}

0800a64a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a64a:	b590      	push	{r4, r7, lr}
 800a64c:	b083      	sub	sp, #12
 800a64e:	af00      	add	r7, sp, #0
 800a650:	7138      	strb	r0, [r7, #4]
 800a652:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a654:	6838      	ldr	r0, [r7, #0]
 800a656:	f000 feaf 	bl	800b3b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a65a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a65c:	4619      	mov	r1, r3
 800a65e:	4620      	mov	r0, r4
 800a660:	f7ff ffe1 	bl	800a626 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a664:	4603      	mov	r3, r0
    }
 800a666:	4618      	mov	r0, r3
 800a668:	370c      	adds	r7, #12
 800a66a:	46bd      	mov	sp, r7
 800a66c:	bd90      	pop	{r4, r7, pc}

0800a66e <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a66e:	b590      	push	{r4, r7, lr}
 800a670:	b083      	sub	sp, #12
 800a672:	af00      	add	r7, sp, #0
 800a674:	7138      	strb	r0, [r7, #4]
 800a676:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a678:	6838      	ldr	r0, [r7, #0]
 800a67a:	f000 fe92 	bl	800b3a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a67e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a680:	4619      	mov	r1, r3
 800a682:	4620      	mov	r0, r4
 800a684:	f7ff ffe1 	bl	800a64a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a688:	4603      	mov	r3, r0
    }
 800a68a:	4618      	mov	r0, r3
 800a68c:	370c      	adds	r7, #12
 800a68e:	46bd      	mov	sp, r7
 800a690:	bd90      	pop	{r4, r7, pc}

0800a692 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a692:	b590      	push	{r4, r7, lr}
 800a694:	b083      	sub	sp, #12
 800a696:	af00      	add	r7, sp, #0
 800a698:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a69a:	6878      	ldr	r0, [r7, #4]
 800a69c:	f000 fe76 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800a6a0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a6a2:	4619      	mov	r1, r3
 800a6a4:	4620      	mov	r0, r4
 800a6a6:	f7ff ffe2 	bl	800a66e <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a6aa:	4603      	mov	r3, r0
    }
 800a6ac:	4618      	mov	r0, r3
 800a6ae:	370c      	adds	r7, #12
 800a6b0:	46bd      	mov	sp, r7
 800a6b2:	bd90      	pop	{r4, r7, pc}

0800a6b4 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800a6b4:	b580      	push	{r7, lr}
 800a6b6:	b082      	sub	sp, #8
 800a6b8:	af00      	add	r7, sp, #0
 800a6ba:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a6bc:	6878      	ldr	r0, [r7, #4]
 800a6be:	f7ff fd02 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a6c2:	4603      	mov	r3, r0
 800a6c4:	2b04      	cmp	r3, #4
 800a6c6:	bf14      	ite	ne
 800a6c8:	2301      	movne	r3, #1
 800a6ca:	2300      	moveq	r3, #0
 800a6cc:	b2db      	uxtb	r3, r3
 800a6ce:	2b00      	cmp	r3, #0
 800a6d0:	d002      	beq.n	800a6d8 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a6d2:	4805      	ldr	r0, [pc, #20]	; (800a6e8 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800a6d4:	f7f6 fccd 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a6d8:	6878      	ldr	r0, [r7, #4]
 800a6da:	f7ff ffda 	bl	800a692 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800a6de:	4603      	mov	r3, r0
    }
 800a6e0:	4618      	mov	r0, r3
 800a6e2:	3708      	adds	r7, #8
 800a6e4:	46bd      	mov	sp, r7
 800a6e6:	bd80      	pop	{r7, pc}
 800a6e8:	08029398 	.word	0x08029398

0800a6ec <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a6ec:	b580      	push	{r7, lr}
 800a6ee:	b082      	sub	sp, #8
 800a6f0:	af00      	add	r7, sp, #0
 800a6f2:	7138      	strb	r0, [r7, #4]
 800a6f4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a6f6:	6838      	ldr	r0, [r7, #0]
 800a6f8:	f000 fe95 	bl	800b426 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a6fc:	4603      	mov	r3, r0
 800a6fe:	4618      	mov	r0, r3
 800a700:	f7fa fbc4 	bl	8004e8c <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 800a704:	4603      	mov	r3, r0
 800a706:	4618      	mov	r0, r3
 800a708:	3708      	adds	r7, #8
 800a70a:	46bd      	mov	sp, r7
 800a70c:	bd80      	pop	{r7, pc}

0800a70e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a70e:	b590      	push	{r4, r7, lr}
 800a710:	b083      	sub	sp, #12
 800a712:	af00      	add	r7, sp, #0
 800a714:	7138      	strb	r0, [r7, #4]
 800a716:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a718:	6838      	ldr	r0, [r7, #0]
 800a71a:	f000 fe6e 	bl	800b3fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a71e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a720:	4619      	mov	r1, r3
 800a722:	4620      	mov	r0, r4
 800a724:	f7ff ffe2 	bl	800a6ec <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a728:	4603      	mov	r3, r0
    }
 800a72a:	4618      	mov	r0, r3
 800a72c:	370c      	adds	r7, #12
 800a72e:	46bd      	mov	sp, r7
 800a730:	bd90      	pop	{r4, r7, pc}

0800a732 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a732:	b590      	push	{r4, r7, lr}
 800a734:	b083      	sub	sp, #12
 800a736:	af00      	add	r7, sp, #0
 800a738:	7138      	strb	r0, [r7, #4]
 800a73a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a73c:	6838      	ldr	r0, [r7, #0]
 800a73e:	f000 fe51 	bl	800b3e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a742:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a744:	4619      	mov	r1, r3
 800a746:	4620      	mov	r0, r4
 800a748:	f7ff ffe1 	bl	800a70e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a74c:	4603      	mov	r3, r0
    }
 800a74e:	4618      	mov	r0, r3
 800a750:	370c      	adds	r7, #12
 800a752:	46bd      	mov	sp, r7
 800a754:	bd90      	pop	{r4, r7, pc}

0800a756 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a756:	b590      	push	{r4, r7, lr}
 800a758:	b083      	sub	sp, #12
 800a75a:	af00      	add	r7, sp, #0
 800a75c:	7138      	strb	r0, [r7, #4]
 800a75e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a760:	6838      	ldr	r0, [r7, #0]
 800a762:	f000 fe34 	bl	800b3ce <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a766:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a768:	4619      	mov	r1, r3
 800a76a:	4620      	mov	r0, r4
 800a76c:	f7ff ffe1 	bl	800a732 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a770:	4603      	mov	r3, r0
    }
 800a772:	4618      	mov	r0, r3
 800a774:	370c      	adds	r7, #12
 800a776:	46bd      	mov	sp, r7
 800a778:	bd90      	pop	{r4, r7, pc}

0800a77a <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a77a:	b590      	push	{r4, r7, lr}
 800a77c:	b083      	sub	sp, #12
 800a77e:	af00      	add	r7, sp, #0
 800a780:	7138      	strb	r0, [r7, #4]
 800a782:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a784:	6838      	ldr	r0, [r7, #0]
 800a786:	f000 fe17 	bl	800b3b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a78a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a78c:	4619      	mov	r1, r3
 800a78e:	4620      	mov	r0, r4
 800a790:	f7ff ffe1 	bl	800a756 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a794:	4603      	mov	r3, r0
    }
 800a796:	4618      	mov	r0, r3
 800a798:	370c      	adds	r7, #12
 800a79a:	46bd      	mov	sp, r7
 800a79c:	bd90      	pop	{r4, r7, pc}

0800a79e <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a79e:	b590      	push	{r4, r7, lr}
 800a7a0:	b083      	sub	sp, #12
 800a7a2:	af00      	add	r7, sp, #0
 800a7a4:	7138      	strb	r0, [r7, #4]
 800a7a6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a7a8:	6838      	ldr	r0, [r7, #0]
 800a7aa:	f000 fdfa 	bl	800b3a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800a7ae:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a7b0:	4619      	mov	r1, r3
 800a7b2:	4620      	mov	r0, r4
 800a7b4:	f7ff ffe1 	bl	800a77a <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a7b8:	4603      	mov	r3, r0
    }
 800a7ba:	4618      	mov	r0, r3
 800a7bc:	370c      	adds	r7, #12
 800a7be:	46bd      	mov	sp, r7
 800a7c0:	bd90      	pop	{r4, r7, pc}

0800a7c2 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a7c2:	b590      	push	{r4, r7, lr}
 800a7c4:	b083      	sub	sp, #12
 800a7c6:	af00      	add	r7, sp, #0
 800a7c8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a7ca:	6878      	ldr	r0, [r7, #4]
 800a7cc:	f000 fdde 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800a7d0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a7d2:	4619      	mov	r1, r3
 800a7d4:	4620      	mov	r0, r4
 800a7d6:	f7ff ffe2 	bl	800a79e <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a7da:	4603      	mov	r3, r0
    }
 800a7dc:	4618      	mov	r0, r3
 800a7de:	370c      	adds	r7, #12
 800a7e0:	46bd      	mov	sp, r7
 800a7e2:	bd90      	pop	{r4, r7, pc}

0800a7e4 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800a7e4:	b580      	push	{r7, lr}
 800a7e6:	b082      	sub	sp, #8
 800a7e8:	af00      	add	r7, sp, #0
 800a7ea:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a7ec:	6878      	ldr	r0, [r7, #4]
 800a7ee:	f7ff fc6a 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800a7f2:	4603      	mov	r3, r0
 800a7f4:	2b05      	cmp	r3, #5
 800a7f6:	bf14      	ite	ne
 800a7f8:	2301      	movne	r3, #1
 800a7fa:	2300      	moveq	r3, #0
 800a7fc:	b2db      	uxtb	r3, r3
 800a7fe:	2b00      	cmp	r3, #0
 800a800:	d002      	beq.n	800a808 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a802:	4805      	ldr	r0, [pc, #20]	; (800a818 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800a804:	f7f6 fc35 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a808:	6878      	ldr	r0, [r7, #4]
 800a80a:	f7ff ffda 	bl	800a7c2 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800a80e:	4603      	mov	r3, r0
    }
 800a810:	4618      	mov	r0, r3
 800a812:	3708      	adds	r7, #8
 800a814:	46bd      	mov	sp, r7
 800a816:	bd80      	pop	{r7, pc}
 800a818:	08029398 	.word	0x08029398

0800a81c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a81c:	b580      	push	{r7, lr}
 800a81e:	b082      	sub	sp, #8
 800a820:	af00      	add	r7, sp, #0
 800a822:	7138      	strb	r0, [r7, #4]
 800a824:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a826:	6838      	ldr	r0, [r7, #0]
 800a828:	f000 fe1e 	bl	800b468 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a82c:	4603      	mov	r3, r0
 800a82e:	4618      	mov	r0, r3
 800a830:	f000 fe25 	bl	800b47e <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>
 800a834:	4603      	mov	r3, r0
 800a836:	4618      	mov	r0, r3
 800a838:	3708      	adds	r7, #8
 800a83a:	46bd      	mov	sp, r7
 800a83c:	bd80      	pop	{r7, pc}

0800a83e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a83e:	b590      	push	{r4, r7, lr}
 800a840:	b083      	sub	sp, #12
 800a842:	af00      	add	r7, sp, #0
 800a844:	7138      	strb	r0, [r7, #4]
 800a846:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a848:	6838      	ldr	r0, [r7, #0]
 800a84a:	f000 fe02 	bl	800b452 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a84e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a850:	4619      	mov	r1, r3
 800a852:	4620      	mov	r0, r4
 800a854:	f7ff ffe2 	bl	800a81c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a858:	4603      	mov	r3, r0
    }
 800a85a:	4618      	mov	r0, r3
 800a85c:	370c      	adds	r7, #12
 800a85e:	46bd      	mov	sp, r7
 800a860:	bd90      	pop	{r4, r7, pc}

0800a862 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a862:	b590      	push	{r4, r7, lr}
 800a864:	b083      	sub	sp, #12
 800a866:	af00      	add	r7, sp, #0
 800a868:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a86a:	6878      	ldr	r0, [r7, #4]
 800a86c:	f000 fde6 	bl	800b43c <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a870:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a872:	4619      	mov	r1, r3
 800a874:	4620      	mov	r0, r4
 800a876:	f7ff ffe2 	bl	800a83e <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a87a:	4603      	mov	r3, r0
    }
 800a87c:	4618      	mov	r0, r3
 800a87e:	370c      	adds	r7, #12
 800a880:	46bd      	mov	sp, r7
 800a882:	bd90      	pop	{r4, r7, pc}

0800a884 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 800a884:	b580      	push	{r7, lr}
 800a886:	b082      	sub	sp, #8
 800a888:	af00      	add	r7, sp, #0
 800a88a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a88c:	6878      	ldr	r0, [r7, #4]
 800a88e:	f7ff fc67 	bl	800a160 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a892:	4603      	mov	r3, r0
 800a894:	2b01      	cmp	r3, #1
 800a896:	bf14      	ite	ne
 800a898:	2301      	movne	r3, #1
 800a89a:	2300      	moveq	r3, #0
 800a89c:	b2db      	uxtb	r3, r3
 800a89e:	2b00      	cmp	r3, #0
 800a8a0:	d002      	beq.n	800a8a8 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a8a2:	4805      	ldr	r0, [pc, #20]	; (800a8b8 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 800a8a4:	f7f6 fbe5 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a8a8:	6878      	ldr	r0, [r7, #4]
 800a8aa:	f7ff ffda 	bl	800a862 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 800a8ae:	4603      	mov	r3, r0
    }
 800a8b0:	4618      	mov	r0, r3
 800a8b2:	3708      	adds	r7, #8
 800a8b4:	46bd      	mov	sp, r7
 800a8b6:	bd80      	pop	{r7, pc}
 800a8b8:	08029398 	.word	0x08029398

0800a8bc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a8bc:	b580      	push	{r7, lr}
 800a8be:	b082      	sub	sp, #8
 800a8c0:	af00      	add	r7, sp, #0
 800a8c2:	7138      	strb	r0, [r7, #4]
 800a8c4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a8c6:	6838      	ldr	r0, [r7, #0]
 800a8c8:	f000 fdc3 	bl	800b452 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800a8cc:	4603      	mov	r3, r0
 800a8ce:	4618      	mov	r0, r3
 800a8d0:	f000 fde0 	bl	800b494 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>
 800a8d4:	4603      	mov	r3, r0
 800a8d6:	4618      	mov	r0, r3
 800a8d8:	3708      	adds	r7, #8
 800a8da:	46bd      	mov	sp, r7
 800a8dc:	bd80      	pop	{r7, pc}

0800a8de <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a8de:	b590      	push	{r4, r7, lr}
 800a8e0:	b083      	sub	sp, #12
 800a8e2:	af00      	add	r7, sp, #0
 800a8e4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a8e6:	6878      	ldr	r0, [r7, #4]
 800a8e8:	f000 fda8 	bl	800b43c <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800a8ec:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a8ee:	4619      	mov	r1, r3
 800a8f0:	4620      	mov	r0, r4
 800a8f2:	f7ff ffe3 	bl	800a8bc <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a8f6:	4603      	mov	r3, r0
    }
 800a8f8:	4618      	mov	r0, r3
 800a8fa:	370c      	adds	r7, #12
 800a8fc:	46bd      	mov	sp, r7
 800a8fe:	bd90      	pop	{r4, r7, pc}

0800a900 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 800a900:	b580      	push	{r7, lr}
 800a902:	b082      	sub	sp, #8
 800a904:	af00      	add	r7, sp, #0
 800a906:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800a908:	6878      	ldr	r0, [r7, #4]
 800a90a:	f7ff fc29 	bl	800a160 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800a90e:	4603      	mov	r3, r0
 800a910:	2b00      	cmp	r3, #0
 800a912:	bf14      	ite	ne
 800a914:	2301      	movne	r3, #1
 800a916:	2300      	moveq	r3, #0
 800a918:	b2db      	uxtb	r3, r3
 800a91a:	2b00      	cmp	r3, #0
 800a91c:	d002      	beq.n	800a924 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800a91e:	4805      	ldr	r0, [pc, #20]	; (800a934 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 800a920:	f7f6 fba7 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800a924:	6878      	ldr	r0, [r7, #4]
 800a926:	f7ff ffda 	bl	800a8de <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 800a92a:	4603      	mov	r3, r0
    }
 800a92c:	4618      	mov	r0, r3
 800a92e:	3708      	adds	r7, #8
 800a930:	46bd      	mov	sp, r7
 800a932:	bd80      	pop	{r7, pc}
 800a934:	08029398 	.word	0x08029398

0800a938 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a938:	b580      	push	{r7, lr}
 800a93a:	b082      	sub	sp, #8
 800a93c:	af00      	add	r7, sp, #0
 800a93e:	6078      	str	r0, [r7, #4]
 800a940:	6878      	ldr	r0, [r7, #4]
 800a942:	f000 fdb2 	bl	800b4aa <_ZNSaIP16Power_expressionED1Ev>
 800a946:	687b      	ldr	r3, [r7, #4]
 800a948:	4618      	mov	r0, r3
 800a94a:	3708      	adds	r7, #8
 800a94c:	46bd      	mov	sp, r7
 800a94e:	bd80      	pop	{r7, pc}

0800a950 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a950:	b580      	push	{r7, lr}
 800a952:	b082      	sub	sp, #8
 800a954:	af00      	add	r7, sp, #0
 800a956:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a958:	687b      	ldr	r3, [r7, #4]
 800a95a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a95c:	687b      	ldr	r3, [r7, #4]
 800a95e:	689a      	ldr	r2, [r3, #8]
 800a960:	687b      	ldr	r3, [r7, #4]
 800a962:	681b      	ldr	r3, [r3, #0]
 800a964:	1ad3      	subs	r3, r2, r3
 800a966:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800a968:	461a      	mov	r2, r3
 800a96a:	6878      	ldr	r0, [r7, #4]
 800a96c:	f000 fda9 	bl	800b4c2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800a970:	687b      	ldr	r3, [r7, #4]
 800a972:	4618      	mov	r0, r3
 800a974:	f7ff ffe0 	bl	800a938 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>
 800a978:	687b      	ldr	r3, [r7, #4]
 800a97a:	4618      	mov	r0, r3
 800a97c:	3708      	adds	r7, #8
 800a97e:	46bd      	mov	sp, r7
 800a980:	bd80      	pop	{r7, pc}

0800a982 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a982:	b480      	push	{r7}
 800a984:	b083      	sub	sp, #12
 800a986:	af00      	add	r7, sp, #0
 800a988:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800a98a:	687b      	ldr	r3, [r7, #4]
 800a98c:	4618      	mov	r0, r3
 800a98e:	370c      	adds	r7, #12
 800a990:	46bd      	mov	sp, r7
 800a992:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a996:	4770      	bx	lr

0800a998 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800a998:	b580      	push	{r7, lr}
 800a99a:	b084      	sub	sp, #16
 800a99c:	af00      	add	r7, sp, #0
 800a99e:	60f8      	str	r0, [r7, #12]
 800a9a0:	60b9      	str	r1, [r7, #8]
 800a9a2:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800a9a4:	68b9      	ldr	r1, [r7, #8]
 800a9a6:	68f8      	ldr	r0, [r7, #12]
 800a9a8:	f000 fd9e 	bl	800b4e8 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>
    }
 800a9ac:	bf00      	nop
 800a9ae:	3710      	adds	r7, #16
 800a9b0:	46bd      	mov	sp, r7
 800a9b2:	bd80      	pop	{r7, pc}

0800a9b4 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800a9b4:	b580      	push	{r7, lr}
 800a9b6:	b082      	sub	sp, #8
 800a9b8:	af00      	add	r7, sp, #0
 800a9ba:	6078      	str	r0, [r7, #4]
 800a9bc:	6878      	ldr	r0, [r7, #4]
 800a9be:	f000 fda0 	bl	800b502 <_ZNSaI13mult_operatorED1Ev>
 800a9c2:	687b      	ldr	r3, [r7, #4]
 800a9c4:	4618      	mov	r0, r3
 800a9c6:	3708      	adds	r7, #8
 800a9c8:	46bd      	mov	sp, r7
 800a9ca:	bd80      	pop	{r7, pc}

0800a9cc <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800a9cc:	b580      	push	{r7, lr}
 800a9ce:	b082      	sub	sp, #8
 800a9d0:	af00      	add	r7, sp, #0
 800a9d2:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800a9d4:	687b      	ldr	r3, [r7, #4]
 800a9d6:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800a9d8:	687b      	ldr	r3, [r7, #4]
 800a9da:	689a      	ldr	r2, [r3, #8]
 800a9dc:	687b      	ldr	r3, [r7, #4]
 800a9de:	681b      	ldr	r3, [r3, #0]
 800a9e0:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 800a9e2:	461a      	mov	r2, r3
 800a9e4:	6878      	ldr	r0, [r7, #4]
 800a9e6:	f000 fd98 	bl	800b51a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	4618      	mov	r0, r3
 800a9ee:	f7ff ffe1 	bl	800a9b4 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	4618      	mov	r0, r3
 800a9f6:	3708      	adds	r7, #8
 800a9f8:	46bd      	mov	sp, r7
 800a9fa:	bd80      	pop	{r7, pc}

0800a9fc <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800a9fc:	b480      	push	{r7}
 800a9fe:	b083      	sub	sp, #12
 800aa00:	af00      	add	r7, sp, #0
 800aa02:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800aa04:	687b      	ldr	r3, [r7, #4]
 800aa06:	4618      	mov	r0, r3
 800aa08:	370c      	adds	r7, #12
 800aa0a:	46bd      	mov	sp, r7
 800aa0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa10:	4770      	bx	lr

0800aa12 <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800aa12:	b580      	push	{r7, lr}
 800aa14:	b084      	sub	sp, #16
 800aa16:	af00      	add	r7, sp, #0
 800aa18:	60f8      	str	r0, [r7, #12]
 800aa1a:	60b9      	str	r1, [r7, #8]
 800aa1c:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800aa1e:	68b9      	ldr	r1, [r7, #8]
 800aa20:	68f8      	ldr	r0, [r7, #12]
 800aa22:	f000 fd8d 	bl	800b540 <_ZSt8_DestroyIP13mult_operatorEvT_S2_>
    }
 800aa26:	bf00      	nop
 800aa28:	3710      	adds	r7, #16
 800aa2a:	46bd      	mov	sp, r7
 800aa2c:	bd80      	pop	{r7, pc}

0800aa2e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800aa2e:	b480      	push	{r7}
 800aa30:	b083      	sub	sp, #12
 800aa32:	af00      	add	r7, sp, #0
 800aa34:	6078      	str	r0, [r7, #4]
 800aa36:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800aa38:	683b      	ldr	r3, [r7, #0]
 800aa3a:	681a      	ldr	r2, [r3, #0]
 800aa3c:	687b      	ldr	r3, [r7, #4]
 800aa3e:	601a      	str	r2, [r3, #0]
 800aa40:	687b      	ldr	r3, [r7, #4]
 800aa42:	4618      	mov	r0, r3
 800aa44:	370c      	adds	r7, #12
 800aa46:	46bd      	mov	sp, r7
 800aa48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa4c:	4770      	bx	lr

0800aa4e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800aa4e:	b480      	push	{r7}
 800aa50:	b083      	sub	sp, #12
 800aa52:	af00      	add	r7, sp, #0
 800aa54:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800aa56:	687b      	ldr	r3, [r7, #4]
 800aa58:	4618      	mov	r0, r3
 800aa5a:	370c      	adds	r7, #12
 800aa5c:	46bd      	mov	sp, r7
 800aa5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa62:	4770      	bx	lr

0800aa64 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800aa64:	b580      	push	{r7, lr}
 800aa66:	b082      	sub	sp, #8
 800aa68:	af00      	add	r7, sp, #0
 800aa6a:	6078      	str	r0, [r7, #4]
 800aa6c:	6878      	ldr	r0, [r7, #4]
 800aa6e:	f000 fd74 	bl	800b55a <_ZNSaIP19Multiply_expressionED1Ev>
 800aa72:	687b      	ldr	r3, [r7, #4]
 800aa74:	4618      	mov	r0, r3
 800aa76:	3708      	adds	r7, #8
 800aa78:	46bd      	mov	sp, r7
 800aa7a:	bd80      	pop	{r7, pc}

0800aa7c <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800aa7c:	b580      	push	{r7, lr}
 800aa7e:	b082      	sub	sp, #8
 800aa80:	af00      	add	r7, sp, #0
 800aa82:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800aa84:	687b      	ldr	r3, [r7, #4]
 800aa86:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800aa88:	687b      	ldr	r3, [r7, #4]
 800aa8a:	689a      	ldr	r2, [r3, #8]
 800aa8c:	687b      	ldr	r3, [r7, #4]
 800aa8e:	681b      	ldr	r3, [r3, #0]
 800aa90:	1ad3      	subs	r3, r2, r3
 800aa92:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800aa94:	461a      	mov	r2, r3
 800aa96:	6878      	ldr	r0, [r7, #4]
 800aa98:	f000 fd6b 	bl	800b572 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800aa9c:	687b      	ldr	r3, [r7, #4]
 800aa9e:	4618      	mov	r0, r3
 800aaa0:	f7ff ffe0 	bl	800aa64 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>
 800aaa4:	687b      	ldr	r3, [r7, #4]
 800aaa6:	4618      	mov	r0, r3
 800aaa8:	3708      	adds	r7, #8
 800aaaa:	46bd      	mov	sp, r7
 800aaac:	bd80      	pop	{r7, pc}

0800aaae <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800aaae:	b480      	push	{r7}
 800aab0:	b083      	sub	sp, #12
 800aab2:	af00      	add	r7, sp, #0
 800aab4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800aab6:	687b      	ldr	r3, [r7, #4]
 800aab8:	4618      	mov	r0, r3
 800aaba:	370c      	adds	r7, #12
 800aabc:	46bd      	mov	sp, r7
 800aabe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aac2:	4770      	bx	lr

0800aac4 <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800aac4:	b580      	push	{r7, lr}
 800aac6:	b084      	sub	sp, #16
 800aac8:	af00      	add	r7, sp, #0
 800aaca:	60f8      	str	r0, [r7, #12]
 800aacc:	60b9      	str	r1, [r7, #8]
 800aace:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800aad0:	68b9      	ldr	r1, [r7, #8]
 800aad2:	68f8      	ldr	r0, [r7, #12]
 800aad4:	f000 fd60 	bl	800b598 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>
    }
 800aad8:	bf00      	nop
 800aada:	3710      	adds	r7, #16
 800aadc:	46bd      	mov	sp, r7
 800aade:	bd80      	pop	{r7, pc}

0800aae0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800aae0:	b580      	push	{r7, lr}
 800aae2:	b082      	sub	sp, #8
 800aae4:	af00      	add	r7, sp, #0
 800aae6:	6078      	str	r0, [r7, #4]
 800aae8:	6878      	ldr	r0, [r7, #4]
 800aaea:	f000 fd62 	bl	800b5b2 <_ZNSaI12sum_operatorED1Ev>
 800aaee:	687b      	ldr	r3, [r7, #4]
 800aaf0:	4618      	mov	r0, r3
 800aaf2:	3708      	adds	r7, #8
 800aaf4:	46bd      	mov	sp, r7
 800aaf6:	bd80      	pop	{r7, pc}

0800aaf8 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800aaf8:	b580      	push	{r7, lr}
 800aafa:	b082      	sub	sp, #8
 800aafc:	af00      	add	r7, sp, #0
 800aafe:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800ab00:	687b      	ldr	r3, [r7, #4]
 800ab02:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800ab04:	687b      	ldr	r3, [r7, #4]
 800ab06:	689a      	ldr	r2, [r3, #8]
 800ab08:	687b      	ldr	r3, [r7, #4]
 800ab0a:	681b      	ldr	r3, [r3, #0]
 800ab0c:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 800ab0e:	461a      	mov	r2, r3
 800ab10:	6878      	ldr	r0, [r7, #4]
 800ab12:	f000 fd5a 	bl	800b5ca <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800ab16:	687b      	ldr	r3, [r7, #4]
 800ab18:	4618      	mov	r0, r3
 800ab1a:	f7ff ffe1 	bl	800aae0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>
 800ab1e:	687b      	ldr	r3, [r7, #4]
 800ab20:	4618      	mov	r0, r3
 800ab22:	3708      	adds	r7, #8
 800ab24:	46bd      	mov	sp, r7
 800ab26:	bd80      	pop	{r7, pc}

0800ab28 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800ab28:	b480      	push	{r7}
 800ab2a:	b083      	sub	sp, #12
 800ab2c:	af00      	add	r7, sp, #0
 800ab2e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800ab30:	687b      	ldr	r3, [r7, #4]
 800ab32:	4618      	mov	r0, r3
 800ab34:	370c      	adds	r7, #12
 800ab36:	46bd      	mov	sp, r7
 800ab38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab3c:	4770      	bx	lr

0800ab3e <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800ab3e:	b580      	push	{r7, lr}
 800ab40:	b084      	sub	sp, #16
 800ab42:	af00      	add	r7, sp, #0
 800ab44:	60f8      	str	r0, [r7, #12]
 800ab46:	60b9      	str	r1, [r7, #8]
 800ab48:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800ab4a:	68b9      	ldr	r1, [r7, #8]
 800ab4c:	68f8      	ldr	r0, [r7, #12]
 800ab4e:	f000 fd4f 	bl	800b5f0 <_ZSt8_DestroyIP12sum_operatorEvT_S2_>
    }
 800ab52:	bf00      	nop
 800ab54:	3710      	adds	r7, #16
 800ab56:	46bd      	mov	sp, r7
 800ab58:	bd80      	pop	{r7, pc}

0800ab5a <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800ab5a:	b480      	push	{r7}
 800ab5c:	b083      	sub	sp, #12
 800ab5e:	af00      	add	r7, sp, #0
 800ab60:	6078      	str	r0, [r7, #4]
 800ab62:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800ab64:	683b      	ldr	r3, [r7, #0]
 800ab66:	681a      	ldr	r2, [r3, #0]
 800ab68:	687b      	ldr	r3, [r7, #4]
 800ab6a:	601a      	str	r2, [r3, #0]
 800ab6c:	687b      	ldr	r3, [r7, #4]
 800ab6e:	4618      	mov	r0, r3
 800ab70:	370c      	adds	r7, #12
 800ab72:	46bd      	mov	sp, r7
 800ab74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab78:	4770      	bx	lr

0800ab7a <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800ab7a:	b480      	push	{r7}
 800ab7c:	b083      	sub	sp, #12
 800ab7e:	af00      	add	r7, sp, #0
 800ab80:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ab82:	687b      	ldr	r3, [r7, #4]
 800ab84:	4618      	mov	r0, r3
 800ab86:	370c      	adds	r7, #12
 800ab88:	46bd      	mov	sp, r7
 800ab8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab8e:	4770      	bx	lr

0800ab90 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800ab90:	b580      	push	{r7, lr}
 800ab92:	b082      	sub	sp, #8
 800ab94:	af00      	add	r7, sp, #0
 800ab96:	6078      	str	r0, [r7, #4]
 800ab98:	6878      	ldr	r0, [r7, #4]
 800ab9a:	f000 fd36 	bl	800b60a <_ZNSaIP18Compare_expressionED1Ev>
 800ab9e:	687b      	ldr	r3, [r7, #4]
 800aba0:	4618      	mov	r0, r3
 800aba2:	3708      	adds	r7, #8
 800aba4:	46bd      	mov	sp, r7
 800aba6:	bd80      	pop	{r7, pc}

0800aba8 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800aba8:	b580      	push	{r7, lr}
 800abaa:	b082      	sub	sp, #8
 800abac:	af00      	add	r7, sp, #0
 800abae:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800abb0:	687b      	ldr	r3, [r7, #4]
 800abb2:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800abb4:	687b      	ldr	r3, [r7, #4]
 800abb6:	689a      	ldr	r2, [r3, #8]
 800abb8:	687b      	ldr	r3, [r7, #4]
 800abba:	681b      	ldr	r3, [r3, #0]
 800abbc:	1ad3      	subs	r3, r2, r3
 800abbe:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800abc0:	461a      	mov	r2, r3
 800abc2:	6878      	ldr	r0, [r7, #4]
 800abc4:	f000 fd2d 	bl	800b622 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800abc8:	687b      	ldr	r3, [r7, #4]
 800abca:	4618      	mov	r0, r3
 800abcc:	f7ff ffe0 	bl	800ab90 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>
 800abd0:	687b      	ldr	r3, [r7, #4]
 800abd2:	4618      	mov	r0, r3
 800abd4:	3708      	adds	r7, #8
 800abd6:	46bd      	mov	sp, r7
 800abd8:	bd80      	pop	{r7, pc}

0800abda <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800abda:	b480      	push	{r7}
 800abdc:	b083      	sub	sp, #12
 800abde:	af00      	add	r7, sp, #0
 800abe0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800abe2:	687b      	ldr	r3, [r7, #4]
 800abe4:	4618      	mov	r0, r3
 800abe6:	370c      	adds	r7, #12
 800abe8:	46bd      	mov	sp, r7
 800abea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abee:	4770      	bx	lr

0800abf0 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800abf0:	b580      	push	{r7, lr}
 800abf2:	b084      	sub	sp, #16
 800abf4:	af00      	add	r7, sp, #0
 800abf6:	60f8      	str	r0, [r7, #12]
 800abf8:	60b9      	str	r1, [r7, #8]
 800abfa:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800abfc:	68b9      	ldr	r1, [r7, #8]
 800abfe:	68f8      	ldr	r0, [r7, #12]
 800ac00:	f000 fd22 	bl	800b648 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>
    }
 800ac04:	bf00      	nop
 800ac06:	3710      	adds	r7, #16
 800ac08:	46bd      	mov	sp, r7
 800ac0a:	bd80      	pop	{r7, pc}

0800ac0c <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800ac0c:	b480      	push	{r7}
 800ac0e:	b083      	sub	sp, #12
 800ac10:	af00      	add	r7, sp, #0
 800ac12:	6078      	str	r0, [r7, #4]
 800ac14:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800ac16:	683b      	ldr	r3, [r7, #0]
 800ac18:	681a      	ldr	r2, [r3, #0]
 800ac1a:	687b      	ldr	r3, [r7, #4]
 800ac1c:	601a      	str	r2, [r3, #0]
 800ac1e:	687b      	ldr	r3, [r7, #4]
 800ac20:	4618      	mov	r0, r3
 800ac22:	370c      	adds	r7, #12
 800ac24:	46bd      	mov	sp, r7
 800ac26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac2a:	4770      	bx	lr

0800ac2c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800ac2c:	b480      	push	{r7}
 800ac2e:	b083      	sub	sp, #12
 800ac30:	af00      	add	r7, sp, #0
 800ac32:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ac34:	687b      	ldr	r3, [r7, #4]
 800ac36:	4618      	mov	r0, r3
 800ac38:	370c      	adds	r7, #12
 800ac3a:	46bd      	mov	sp, r7
 800ac3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac40:	4770      	bx	lr

0800ac42 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800ac42:	b580      	push	{r7, lr}
 800ac44:	b082      	sub	sp, #8
 800ac46:	af00      	add	r7, sp, #0
 800ac48:	6078      	str	r0, [r7, #4]
 800ac4a:	6878      	ldr	r0, [r7, #4]
 800ac4c:	f000 fd09 	bl	800b662 <_ZNSaIP14And_expressionED1Ev>
 800ac50:	687b      	ldr	r3, [r7, #4]
 800ac52:	4618      	mov	r0, r3
 800ac54:	3708      	adds	r7, #8
 800ac56:	46bd      	mov	sp, r7
 800ac58:	bd80      	pop	{r7, pc}

0800ac5a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800ac5a:	b580      	push	{r7, lr}
 800ac5c:	b082      	sub	sp, #8
 800ac5e:	af00      	add	r7, sp, #0
 800ac60:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800ac62:	687b      	ldr	r3, [r7, #4]
 800ac64:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800ac66:	687b      	ldr	r3, [r7, #4]
 800ac68:	689a      	ldr	r2, [r3, #8]
 800ac6a:	687b      	ldr	r3, [r7, #4]
 800ac6c:	681b      	ldr	r3, [r3, #0]
 800ac6e:	1ad3      	subs	r3, r2, r3
 800ac70:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800ac72:	461a      	mov	r2, r3
 800ac74:	6878      	ldr	r0, [r7, #4]
 800ac76:	f000 fd00 	bl	800b67a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800ac7a:	687b      	ldr	r3, [r7, #4]
 800ac7c:	4618      	mov	r0, r3
 800ac7e:	f7ff ffe0 	bl	800ac42 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>
 800ac82:	687b      	ldr	r3, [r7, #4]
 800ac84:	4618      	mov	r0, r3
 800ac86:	3708      	adds	r7, #8
 800ac88:	46bd      	mov	sp, r7
 800ac8a:	bd80      	pop	{r7, pc}

0800ac8c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800ac8c:	b480      	push	{r7}
 800ac8e:	b083      	sub	sp, #12
 800ac90:	af00      	add	r7, sp, #0
 800ac92:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800ac94:	687b      	ldr	r3, [r7, #4]
 800ac96:	4618      	mov	r0, r3
 800ac98:	370c      	adds	r7, #12
 800ac9a:	46bd      	mov	sp, r7
 800ac9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aca0:	4770      	bx	lr

0800aca2 <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800aca2:	b580      	push	{r7, lr}
 800aca4:	b084      	sub	sp, #16
 800aca6:	af00      	add	r7, sp, #0
 800aca8:	60f8      	str	r0, [r7, #12]
 800acaa:	60b9      	str	r1, [r7, #8]
 800acac:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800acae:	68b9      	ldr	r1, [r7, #8]
 800acb0:	68f8      	ldr	r0, [r7, #12]
 800acb2:	f000 fcf5 	bl	800b6a0 <_ZSt8_DestroyIPP14And_expressionEvT_S3_>
    }
 800acb6:	bf00      	nop
 800acb8:	3710      	adds	r7, #16
 800acba:	46bd      	mov	sp, r7
 800acbc:	bd80      	pop	{r7, pc}

0800acbe <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800acbe:	b480      	push	{r7}
 800acc0:	b083      	sub	sp, #12
 800acc2:	af00      	add	r7, sp, #0
 800acc4:	6078      	str	r0, [r7, #4]
 800acc6:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800acc8:	683b      	ldr	r3, [r7, #0]
 800acca:	681a      	ldr	r2, [r3, #0]
 800accc:	687b      	ldr	r3, [r7, #4]
 800acce:	601a      	str	r2, [r3, #0]
 800acd0:	687b      	ldr	r3, [r7, #4]
 800acd2:	4618      	mov	r0, r3
 800acd4:	370c      	adds	r7, #12
 800acd6:	46bd      	mov	sp, r7
 800acd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acdc:	4770      	bx	lr

0800acde <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800acde:	b480      	push	{r7}
 800ace0:	b083      	sub	sp, #12
 800ace2:	af00      	add	r7, sp, #0
 800ace4:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ace6:	687b      	ldr	r3, [r7, #4]
 800ace8:	4618      	mov	r0, r3
 800acea:	370c      	adds	r7, #12
 800acec:	46bd      	mov	sp, r7
 800acee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acf2:	4770      	bx	lr

0800acf4 <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800acf4:	b480      	push	{r7}
 800acf6:	b083      	sub	sp, #12
 800acf8:	af00      	add	r7, sp, #0
 800acfa:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 800acfc:	687b      	ldr	r3, [r7, #4]
    }
 800acfe:	4618      	mov	r0, r3
 800ad00:	370c      	adds	r7, #12
 800ad02:	46bd      	mov	sp, r7
 800ad04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad08:	4770      	bx	lr

0800ad0a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ad0a:	b580      	push	{r7, lr}
 800ad0c:	b082      	sub	sp, #8
 800ad0e:	af00      	add	r7, sp, #0
 800ad10:	7138      	strb	r0, [r7, #4]
 800ad12:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ad14:	6838      	ldr	r0, [r7, #0]
 800ad16:	f000 fb44 	bl	800b3a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ad1a:	4603      	mov	r3, r0
 800ad1c:	4618      	mov	r0, r3
 800ad1e:	f7f8 fdec 	bl	80038fa <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800ad22:	4603      	mov	r3, r0
 800ad24:	4618      	mov	r0, r3
 800ad26:	3708      	adds	r7, #8
 800ad28:	46bd      	mov	sp, r7
 800ad2a:	bd80      	pop	{r7, pc}

0800ad2c <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ad2c:	b590      	push	{r4, r7, lr}
 800ad2e:	b083      	sub	sp, #12
 800ad30:	af00      	add	r7, sp, #0
 800ad32:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ad34:	6878      	ldr	r0, [r7, #4]
 800ad36:	f000 fb29 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ad3a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ad3c:	4619      	mov	r1, r3
 800ad3e:	4620      	mov	r0, r4
 800ad40:	f7ff ffe3 	bl	800ad0a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ad44:	4603      	mov	r3, r0
    }
 800ad46:	4618      	mov	r0, r3
 800ad48:	370c      	adds	r7, #12
 800ad4a:	46bd      	mov	sp, r7
 800ad4c:	bd90      	pop	{r4, r7, pc}

0800ad4e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ad4e:	b580      	push	{r7, lr}
 800ad50:	b082      	sub	sp, #8
 800ad52:	af00      	add	r7, sp, #0
 800ad54:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ad56:	6878      	ldr	r0, [r7, #4]
 800ad58:	f000 fb18 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ad5c:	4603      	mov	r3, r0
 800ad5e:	4618      	mov	r0, r3
 800ad60:	f7ff ffe4 	bl	800ad2c <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800ad64:	4603      	mov	r3, r0
	}
 800ad66:	4618      	mov	r0, r3
 800ad68:	3708      	adds	r7, #8
 800ad6a:	46bd      	mov	sp, r7
 800ad6c:	bd80      	pop	{r7, pc}

0800ad6e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ad6e:	b5b0      	push	{r4, r5, r7, lr}
 800ad70:	b082      	sub	sp, #8
 800ad72:	af00      	add	r7, sp, #0
 800ad74:	6078      	str	r0, [r7, #4]
 800ad76:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ad78:	6878      	ldr	r0, [r7, #4]
 800ad7a:	f000 fc9e 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ad7e:	4604      	mov	r4, r0
 800ad80:	6838      	ldr	r0, [r7, #0]
 800ad82:	f000 fb03 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ad86:	4603      	mov	r3, r0
 800ad88:	4618      	mov	r0, r3
 800ad8a:	f7ff ffe0 	bl	800ad4e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 800ad8e:	4603      	mov	r3, r0
 800ad90:	4619      	mov	r1, r3
 800ad92:	4620      	mov	r0, r4
 800ad94:	f000 fc9c 	bl	800b6d0 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800ad98:	462b      	mov	r3, r5
      }
 800ad9a:	4618      	mov	r0, r3
 800ad9c:	3708      	adds	r7, #8
 800ad9e:	46bd      	mov	sp, r7
 800ada0:	bdb0      	pop	{r4, r5, r7, pc}

0800ada2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ada2:	b5b0      	push	{r4, r5, r7, lr}
 800ada4:	b082      	sub	sp, #8
 800ada6:	af00      	add	r7, sp, #0
 800ada8:	6078      	str	r0, [r7, #4]
 800adaa:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800adac:	6878      	ldr	r0, [r7, #4]
 800adae:	f000 fc84 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800adb2:	4604      	mov	r4, r0
 800adb4:	6838      	ldr	r0, [r7, #0]
 800adb6:	f000 fae9 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800adba:	4603      	mov	r3, r0
 800adbc:	4619      	mov	r1, r3
 800adbe:	4620      	mov	r0, r4
 800adc0:	f7ff ffd5 	bl	800ad6e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800adc4:	462b      	mov	r3, r5
      }
 800adc6:	4618      	mov	r0, r3
 800adc8:	3708      	adds	r7, #8
 800adca:	46bd      	mov	sp, r7
 800adcc:	bdb0      	pop	{r4, r5, r7, pc}

0800adce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800adce:	b5b0      	push	{r4, r5, r7, lr}
 800add0:	b082      	sub	sp, #8
 800add2:	af00      	add	r7, sp, #0
 800add4:	6078      	str	r0, [r7, #4]
 800add6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800add8:	6878      	ldr	r0, [r7, #4]
 800adda:	f000 fc6e 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800adde:	4604      	mov	r4, r0
 800ade0:	6838      	ldr	r0, [r7, #0]
 800ade2:	f000 fad3 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ade6:	4603      	mov	r3, r0
 800ade8:	4619      	mov	r1, r3
 800adea:	4620      	mov	r0, r4
 800adec:	f7ff ffd9 	bl	800ada2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800adf0:	462b      	mov	r3, r5
      }
 800adf2:	4618      	mov	r0, r3
 800adf4:	3708      	adds	r7, #8
 800adf6:	46bd      	mov	sp, r7
 800adf8:	bdb0      	pop	{r4, r5, r7, pc}

0800adfa <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800adfa:	b580      	push	{r7, lr}
 800adfc:	b082      	sub	sp, #8
 800adfe:	af00      	add	r7, sp, #0
 800ae00:	7138      	strb	r0, [r7, #4]
 800ae02:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ae04:	6838      	ldr	r0, [r7, #0]
 800ae06:	f000 fad7 	bl	800b3b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ae0a:	4603      	mov	r3, r0
 800ae0c:	4618      	mov	r0, r3
 800ae0e:	f7f8 f8ad 	bl	8002f6c <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800ae12:	4603      	mov	r3, r0
 800ae14:	4618      	mov	r0, r3
 800ae16:	3708      	adds	r7, #8
 800ae18:	46bd      	mov	sp, r7
 800ae1a:	bd80      	pop	{r7, pc}

0800ae1c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ae1c:	b590      	push	{r4, r7, lr}
 800ae1e:	b083      	sub	sp, #12
 800ae20:	af00      	add	r7, sp, #0
 800ae22:	7138      	strb	r0, [r7, #4]
 800ae24:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ae26:	6838      	ldr	r0, [r7, #0]
 800ae28:	f000 fabb 	bl	800b3a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800ae2c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ae2e:	4619      	mov	r1, r3
 800ae30:	4620      	mov	r0, r4
 800ae32:	f7ff ffe2 	bl	800adfa <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ae36:	4603      	mov	r3, r0
    }
 800ae38:	4618      	mov	r0, r3
 800ae3a:	370c      	adds	r7, #12
 800ae3c:	46bd      	mov	sp, r7
 800ae3e:	bd90      	pop	{r4, r7, pc}

0800ae40 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ae40:	b590      	push	{r4, r7, lr}
 800ae42:	b083      	sub	sp, #12
 800ae44:	af00      	add	r7, sp, #0
 800ae46:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ae48:	6878      	ldr	r0, [r7, #4]
 800ae4a:	f000 fa9f 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ae4e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ae50:	4619      	mov	r1, r3
 800ae52:	4620      	mov	r0, r4
 800ae54:	f7ff ffe2 	bl	800ae1c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ae58:	4603      	mov	r3, r0
    }
 800ae5a:	4618      	mov	r0, r3
 800ae5c:	370c      	adds	r7, #12
 800ae5e:	46bd      	mov	sp, r7
 800ae60:	bd90      	pop	{r4, r7, pc}

0800ae62 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ae62:	b580      	push	{r7, lr}
 800ae64:	b082      	sub	sp, #8
 800ae66:	af00      	add	r7, sp, #0
 800ae68:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ae6a:	6878      	ldr	r0, [r7, #4]
 800ae6c:	f000 fa8e 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ae70:	4603      	mov	r3, r0
 800ae72:	4618      	mov	r0, r3
 800ae74:	f7ff ffe4 	bl	800ae40 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800ae78:	4603      	mov	r3, r0
	}
 800ae7a:	4618      	mov	r0, r3
 800ae7c:	3708      	adds	r7, #8
 800ae7e:	46bd      	mov	sp, r7
 800ae80:	bd80      	pop	{r7, pc}

0800ae82 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ae82:	b5b0      	push	{r4, r5, r7, lr}
 800ae84:	b082      	sub	sp, #8
 800ae86:	af00      	add	r7, sp, #0
 800ae88:	6078      	str	r0, [r7, #4]
 800ae8a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ae8c:	6878      	ldr	r0, [r7, #4]
 800ae8e:	f000 fc14 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ae92:	4604      	mov	r4, r0
 800ae94:	6838      	ldr	r0, [r7, #0]
 800ae96:	f000 fa79 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ae9a:	4603      	mov	r3, r0
 800ae9c:	4618      	mov	r0, r3
 800ae9e:	f7ff ffe0 	bl	800ae62 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 800aea2:	4603      	mov	r3, r0
 800aea4:	4619      	mov	r1, r3
 800aea6:	4620      	mov	r0, r4
 800aea8:	f000 fc29 	bl	800b6fe <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800aeac:	462b      	mov	r3, r5
      }
 800aeae:	4618      	mov	r0, r3
 800aeb0:	3708      	adds	r7, #8
 800aeb2:	46bd      	mov	sp, r7
 800aeb4:	bdb0      	pop	{r4, r5, r7, pc}

0800aeb6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800aeb6:	b5b0      	push	{r4, r5, r7, lr}
 800aeb8:	b082      	sub	sp, #8
 800aeba:	af00      	add	r7, sp, #0
 800aebc:	6078      	str	r0, [r7, #4]
 800aebe:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800aec0:	6878      	ldr	r0, [r7, #4]
 800aec2:	f000 fbfa 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800aec6:	4604      	mov	r4, r0
 800aec8:	6838      	ldr	r0, [r7, #0]
 800aeca:	f000 fa5f 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aece:	4603      	mov	r3, r0
 800aed0:	4619      	mov	r1, r3
 800aed2:	4620      	mov	r0, r4
 800aed4:	f7ff ffd5 	bl	800ae82 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800aed8:	462b      	mov	r3, r5
      }
 800aeda:	4618      	mov	r0, r3
 800aedc:	3708      	adds	r7, #8
 800aede:	46bd      	mov	sp, r7
 800aee0:	bdb0      	pop	{r4, r5, r7, pc}

0800aee2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800aee2:	b5b0      	push	{r4, r5, r7, lr}
 800aee4:	b082      	sub	sp, #8
 800aee6:	af00      	add	r7, sp, #0
 800aee8:	6078      	str	r0, [r7, #4]
 800aeea:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800aeec:	6878      	ldr	r0, [r7, #4]
 800aeee:	f000 fbe4 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800aef2:	4604      	mov	r4, r0
 800aef4:	6838      	ldr	r0, [r7, #0]
 800aef6:	f000 fa49 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800aefa:	4603      	mov	r3, r0
 800aefc:	4619      	mov	r1, r3
 800aefe:	4620      	mov	r0, r4
 800af00:	f7ff ffd9 	bl	800aeb6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800af04:	462b      	mov	r3, r5
      }
 800af06:	4618      	mov	r0, r3
 800af08:	3708      	adds	r7, #8
 800af0a:	46bd      	mov	sp, r7
 800af0c:	bdb0      	pop	{r4, r5, r7, pc}

0800af0e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800af0e:	b580      	push	{r7, lr}
 800af10:	b082      	sub	sp, #8
 800af12:	af00      	add	r7, sp, #0
 800af14:	7138      	strb	r0, [r7, #4]
 800af16:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800af18:	6838      	ldr	r0, [r7, #0]
 800af1a:	f000 fa58 	bl	800b3ce <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800af1e:	4603      	mov	r3, r0
 800af20:	4618      	mov	r0, r3
 800af22:	f7f8 fcb6 	bl	8003892 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800af26:	4603      	mov	r3, r0
 800af28:	4618      	mov	r0, r3
 800af2a:	3708      	adds	r7, #8
 800af2c:	46bd      	mov	sp, r7
 800af2e:	bd80      	pop	{r7, pc}

0800af30 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800af30:	b590      	push	{r4, r7, lr}
 800af32:	b083      	sub	sp, #12
 800af34:	af00      	add	r7, sp, #0
 800af36:	7138      	strb	r0, [r7, #4]
 800af38:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800af3a:	6838      	ldr	r0, [r7, #0]
 800af3c:	f000 fa3c 	bl	800b3b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800af40:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800af42:	4619      	mov	r1, r3
 800af44:	4620      	mov	r0, r4
 800af46:	f7ff ffe2 	bl	800af0e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800af4a:	4603      	mov	r3, r0
    }
 800af4c:	4618      	mov	r0, r3
 800af4e:	370c      	adds	r7, #12
 800af50:	46bd      	mov	sp, r7
 800af52:	bd90      	pop	{r4, r7, pc}

0800af54 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800af54:	b590      	push	{r4, r7, lr}
 800af56:	b083      	sub	sp, #12
 800af58:	af00      	add	r7, sp, #0
 800af5a:	7138      	strb	r0, [r7, #4]
 800af5c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800af5e:	6838      	ldr	r0, [r7, #0]
 800af60:	f000 fa1f 	bl	800b3a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800af64:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800af66:	4619      	mov	r1, r3
 800af68:	4620      	mov	r0, r4
 800af6a:	f7ff ffe1 	bl	800af30 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800af6e:	4603      	mov	r3, r0
    }
 800af70:	4618      	mov	r0, r3
 800af72:	370c      	adds	r7, #12
 800af74:	46bd      	mov	sp, r7
 800af76:	bd90      	pop	{r4, r7, pc}

0800af78 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800af78:	b590      	push	{r4, r7, lr}
 800af7a:	b083      	sub	sp, #12
 800af7c:	af00      	add	r7, sp, #0
 800af7e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800af80:	6878      	ldr	r0, [r7, #4]
 800af82:	f000 fa03 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800af86:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800af88:	4619      	mov	r1, r3
 800af8a:	4620      	mov	r0, r4
 800af8c:	f7ff ffe2 	bl	800af54 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800af90:	4603      	mov	r3, r0
    }
 800af92:	4618      	mov	r0, r3
 800af94:	370c      	adds	r7, #12
 800af96:	46bd      	mov	sp, r7
 800af98:	bd90      	pop	{r4, r7, pc}

0800af9a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800af9a:	b580      	push	{r7, lr}
 800af9c:	b082      	sub	sp, #8
 800af9e:	af00      	add	r7, sp, #0
 800afa0:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800afa2:	6878      	ldr	r0, [r7, #4]
 800afa4:	f000 f9f2 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800afa8:	4603      	mov	r3, r0
 800afaa:	4618      	mov	r0, r3
 800afac:	f7ff ffe4 	bl	800af78 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800afb0:	4603      	mov	r3, r0
	}
 800afb2:	4618      	mov	r0, r3
 800afb4:	3708      	adds	r7, #8
 800afb6:	46bd      	mov	sp, r7
 800afb8:	bd80      	pop	{r7, pc}

0800afba <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800afba:	b5b0      	push	{r4, r5, r7, lr}
 800afbc:	b082      	sub	sp, #8
 800afbe:	af00      	add	r7, sp, #0
 800afc0:	6078      	str	r0, [r7, #4]
 800afc2:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800afc4:	6878      	ldr	r0, [r7, #4]
 800afc6:	f000 fb78 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800afca:	4604      	mov	r4, r0
 800afcc:	6838      	ldr	r0, [r7, #0]
 800afce:	f000 f9dd 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800afd2:	4603      	mov	r3, r0
 800afd4:	4618      	mov	r0, r3
 800afd6:	f7ff ffe0 	bl	800af9a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 800afda:	4603      	mov	r3, r0
 800afdc:	4619      	mov	r1, r3
 800afde:	4620      	mov	r0, r4
 800afe0:	f000 fba4 	bl	800b72c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800afe4:	462b      	mov	r3, r5
      }
 800afe6:	4618      	mov	r0, r3
 800afe8:	3708      	adds	r7, #8
 800afea:	46bd      	mov	sp, r7
 800afec:	bdb0      	pop	{r4, r5, r7, pc}

0800afee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800afee:	b5b0      	push	{r4, r5, r7, lr}
 800aff0:	b082      	sub	sp, #8
 800aff2:	af00      	add	r7, sp, #0
 800aff4:	6078      	str	r0, [r7, #4]
 800aff6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800aff8:	6878      	ldr	r0, [r7, #4]
 800affa:	f000 fb5e 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800affe:	4604      	mov	r4, r0
 800b000:	6838      	ldr	r0, [r7, #0]
 800b002:	f000 f9c3 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b006:	4603      	mov	r3, r0
 800b008:	4619      	mov	r1, r3
 800b00a:	4620      	mov	r0, r4
 800b00c:	f7ff ffd5 	bl	800afba <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b010:	462b      	mov	r3, r5
      }
 800b012:	4618      	mov	r0, r3
 800b014:	3708      	adds	r7, #8
 800b016:	46bd      	mov	sp, r7
 800b018:	bdb0      	pop	{r4, r5, r7, pc}

0800b01a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b01a:	b5b0      	push	{r4, r5, r7, lr}
 800b01c:	b082      	sub	sp, #8
 800b01e:	af00      	add	r7, sp, #0
 800b020:	6078      	str	r0, [r7, #4]
 800b022:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b024:	6878      	ldr	r0, [r7, #4]
 800b026:	f000 fb48 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b02a:	4604      	mov	r4, r0
 800b02c:	6838      	ldr	r0, [r7, #0]
 800b02e:	f000 f9ad 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b032:	4603      	mov	r3, r0
 800b034:	4619      	mov	r1, r3
 800b036:	4620      	mov	r0, r4
 800b038:	f7ff ffd9 	bl	800afee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b03c:	462b      	mov	r3, r5
      }
 800b03e:	4618      	mov	r0, r3
 800b040:	3708      	adds	r7, #8
 800b042:	46bd      	mov	sp, r7
 800b044:	bdb0      	pop	{r4, r5, r7, pc}

0800b046 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800b046:	b580      	push	{r7, lr}
 800b048:	b082      	sub	sp, #8
 800b04a:	af00      	add	r7, sp, #0
 800b04c:	7138      	strb	r0, [r7, #4]
 800b04e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800b050:	6838      	ldr	r0, [r7, #0]
 800b052:	f000 f9c7 	bl	800b3e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800b056:	4603      	mov	r3, r0
 800b058:	4618      	mov	r0, r3
 800b05a:	f7f8 fc82 	bl	8003962 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800b05e:	4603      	mov	r3, r0
 800b060:	4618      	mov	r0, r3
 800b062:	3708      	adds	r7, #8
 800b064:	46bd      	mov	sp, r7
 800b066:	bd80      	pop	{r7, pc}

0800b068 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800b068:	b590      	push	{r4, r7, lr}
 800b06a:	b083      	sub	sp, #12
 800b06c:	af00      	add	r7, sp, #0
 800b06e:	7138      	strb	r0, [r7, #4]
 800b070:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800b072:	6838      	ldr	r0, [r7, #0]
 800b074:	f000 f9ab 	bl	800b3ce <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800b078:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800b07a:	4619      	mov	r1, r3
 800b07c:	4620      	mov	r0, r4
 800b07e:	f7ff ffe2 	bl	800b046 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 800b082:	4603      	mov	r3, r0
    }
 800b084:	4618      	mov	r0, r3
 800b086:	370c      	adds	r7, #12
 800b088:	46bd      	mov	sp, r7
 800b08a:	bd90      	pop	{r4, r7, pc}

0800b08c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800b08c:	b590      	push	{r4, r7, lr}
 800b08e:	b083      	sub	sp, #12
 800b090:	af00      	add	r7, sp, #0
 800b092:	7138      	strb	r0, [r7, #4]
 800b094:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800b096:	6838      	ldr	r0, [r7, #0]
 800b098:	f000 f98e 	bl	800b3b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800b09c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800b09e:	4619      	mov	r1, r3
 800b0a0:	4620      	mov	r0, r4
 800b0a2:	f7ff ffe1 	bl	800b068 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b0a6:	4603      	mov	r3, r0
    }
 800b0a8:	4618      	mov	r0, r3
 800b0aa:	370c      	adds	r7, #12
 800b0ac:	46bd      	mov	sp, r7
 800b0ae:	bd90      	pop	{r4, r7, pc}

0800b0b0 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800b0b0:	b590      	push	{r4, r7, lr}
 800b0b2:	b083      	sub	sp, #12
 800b0b4:	af00      	add	r7, sp, #0
 800b0b6:	7138      	strb	r0, [r7, #4]
 800b0b8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800b0ba:	6838      	ldr	r0, [r7, #0]
 800b0bc:	f000 f971 	bl	800b3a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800b0c0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800b0c2:	4619      	mov	r1, r3
 800b0c4:	4620      	mov	r0, r4
 800b0c6:	f7ff ffe1 	bl	800b08c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b0ca:	4603      	mov	r3, r0
    }
 800b0cc:	4618      	mov	r0, r3
 800b0ce:	370c      	adds	r7, #12
 800b0d0:	46bd      	mov	sp, r7
 800b0d2:	bd90      	pop	{r4, r7, pc}

0800b0d4 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800b0d4:	b590      	push	{r4, r7, lr}
 800b0d6:	b083      	sub	sp, #12
 800b0d8:	af00      	add	r7, sp, #0
 800b0da:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800b0dc:	6878      	ldr	r0, [r7, #4]
 800b0de:	f000 f955 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b0e2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800b0e4:	4619      	mov	r1, r3
 800b0e6:	4620      	mov	r0, r4
 800b0e8:	f7ff ffe2 	bl	800b0b0 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800b0ec:	4603      	mov	r3, r0
    }
 800b0ee:	4618      	mov	r0, r3
 800b0f0:	370c      	adds	r7, #12
 800b0f2:	46bd      	mov	sp, r7
 800b0f4:	bd90      	pop	{r4, r7, pc}

0800b0f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800b0f6:	b580      	push	{r7, lr}
 800b0f8:	b082      	sub	sp, #8
 800b0fa:	af00      	add	r7, sp, #0
 800b0fc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800b0fe:	6878      	ldr	r0, [r7, #4]
 800b100:	f000 f944 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b104:	4603      	mov	r3, r0
 800b106:	4618      	mov	r0, r3
 800b108:	f7ff ffe4 	bl	800b0d4 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800b10c:	4603      	mov	r3, r0
	}
 800b10e:	4618      	mov	r0, r3
 800b110:	3708      	adds	r7, #8
 800b112:	46bd      	mov	sp, r7
 800b114:	bd80      	pop	{r7, pc}

0800b116 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800b116:	b5b0      	push	{r4, r5, r7, lr}
 800b118:	b082      	sub	sp, #8
 800b11a:	af00      	add	r7, sp, #0
 800b11c:	6078      	str	r0, [r7, #4]
 800b11e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800b120:	6878      	ldr	r0, [r7, #4]
 800b122:	f000 faca 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b126:	4604      	mov	r4, r0
 800b128:	6838      	ldr	r0, [r7, #0]
 800b12a:	f000 f92f 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b12e:	4603      	mov	r3, r0
 800b130:	4618      	mov	r0, r3
 800b132:	f7ff ffe0 	bl	800b0f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 800b136:	4603      	mov	r3, r0
 800b138:	4619      	mov	r1, r3
 800b13a:	4620      	mov	r0, r4
 800b13c:	f000 fb0d 	bl	800b75a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800b140:	462b      	mov	r3, r5
      }
 800b142:	4618      	mov	r0, r3
 800b144:	3708      	adds	r7, #8
 800b146:	46bd      	mov	sp, r7
 800b148:	bdb0      	pop	{r4, r5, r7, pc}

0800b14a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b14a:	b5b0      	push	{r4, r5, r7, lr}
 800b14c:	b082      	sub	sp, #8
 800b14e:	af00      	add	r7, sp, #0
 800b150:	6078      	str	r0, [r7, #4]
 800b152:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800b154:	6878      	ldr	r0, [r7, #4]
 800b156:	f000 fab0 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b15a:	4604      	mov	r4, r0
 800b15c:	6838      	ldr	r0, [r7, #0]
 800b15e:	f000 f915 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b162:	4603      	mov	r3, r0
 800b164:	4619      	mov	r1, r3
 800b166:	4620      	mov	r0, r4
 800b168:	f7ff ffd5 	bl	800b116 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b16c:	462b      	mov	r3, r5
      }
 800b16e:	4618      	mov	r0, r3
 800b170:	3708      	adds	r7, #8
 800b172:	46bd      	mov	sp, r7
 800b174:	bdb0      	pop	{r4, r5, r7, pc}

0800b176 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b176:	b5b0      	push	{r4, r5, r7, lr}
 800b178:	b082      	sub	sp, #8
 800b17a:	af00      	add	r7, sp, #0
 800b17c:	6078      	str	r0, [r7, #4]
 800b17e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b180:	6878      	ldr	r0, [r7, #4]
 800b182:	f000 fa9a 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b186:	4604      	mov	r4, r0
 800b188:	6838      	ldr	r0, [r7, #0]
 800b18a:	f000 f8ff 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b18e:	4603      	mov	r3, r0
 800b190:	4619      	mov	r1, r3
 800b192:	4620      	mov	r0, r4
 800b194:	f7ff ffd9 	bl	800b14a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b198:	462b      	mov	r3, r5
      }
 800b19a:	4618      	mov	r0, r3
 800b19c:	3708      	adds	r7, #8
 800b19e:	46bd      	mov	sp, r7
 800b1a0:	bdb0      	pop	{r4, r5, r7, pc}

0800b1a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800b1a2:	b580      	push	{r7, lr}
 800b1a4:	b082      	sub	sp, #8
 800b1a6:	af00      	add	r7, sp, #0
 800b1a8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800b1aa:	6878      	ldr	r0, [r7, #4]
 800b1ac:	f000 f8ee 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b1b0:	4603      	mov	r3, r0
 800b1b2:	4618      	mov	r0, r3
 800b1b4:	f7ff fa6d 	bl	800a692 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800b1b8:	4603      	mov	r3, r0
	}
 800b1ba:	4618      	mov	r0, r3
 800b1bc:	3708      	adds	r7, #8
 800b1be:	46bd      	mov	sp, r7
 800b1c0:	bd80      	pop	{r7, pc}

0800b1c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800b1c2:	b5b0      	push	{r4, r5, r7, lr}
 800b1c4:	b082      	sub	sp, #8
 800b1c6:	af00      	add	r7, sp, #0
 800b1c8:	6078      	str	r0, [r7, #4]
 800b1ca:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800b1cc:	6878      	ldr	r0, [r7, #4]
 800b1ce:	f000 fa74 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b1d2:	4604      	mov	r4, r0
 800b1d4:	6838      	ldr	r0, [r7, #0]
 800b1d6:	f000 f8d9 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b1da:	4603      	mov	r3, r0
 800b1dc:	4618      	mov	r0, r3
 800b1de:	f7ff ffe0 	bl	800b1a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 800b1e2:	4603      	mov	r3, r0
 800b1e4:	4619      	mov	r1, r3
 800b1e6:	4620      	mov	r0, r4
 800b1e8:	f000 face 	bl	800b788 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800b1ec:	462b      	mov	r3, r5
      }
 800b1ee:	4618      	mov	r0, r3
 800b1f0:	3708      	adds	r7, #8
 800b1f2:	46bd      	mov	sp, r7
 800b1f4:	bdb0      	pop	{r4, r5, r7, pc}

0800b1f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b1f6:	b5b0      	push	{r4, r5, r7, lr}
 800b1f8:	b082      	sub	sp, #8
 800b1fa:	af00      	add	r7, sp, #0
 800b1fc:	6078      	str	r0, [r7, #4]
 800b1fe:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800b200:	6878      	ldr	r0, [r7, #4]
 800b202:	f000 fa5a 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b206:	4604      	mov	r4, r0
 800b208:	6838      	ldr	r0, [r7, #0]
 800b20a:	f000 f8bf 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b20e:	4603      	mov	r3, r0
 800b210:	4619      	mov	r1, r3
 800b212:	4620      	mov	r0, r4
 800b214:	f7ff ffd5 	bl	800b1c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b218:	462b      	mov	r3, r5
      }
 800b21a:	4618      	mov	r0, r3
 800b21c:	3708      	adds	r7, #8
 800b21e:	46bd      	mov	sp, r7
 800b220:	bdb0      	pop	{r4, r5, r7, pc}

0800b222 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b222:	b5b0      	push	{r4, r5, r7, lr}
 800b224:	b082      	sub	sp, #8
 800b226:	af00      	add	r7, sp, #0
 800b228:	6078      	str	r0, [r7, #4]
 800b22a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b22c:	6878      	ldr	r0, [r7, #4]
 800b22e:	f000 fa44 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b232:	4604      	mov	r4, r0
 800b234:	6838      	ldr	r0, [r7, #0]
 800b236:	f000 f8a9 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b23a:	4603      	mov	r3, r0
 800b23c:	4619      	mov	r1, r3
 800b23e:	4620      	mov	r0, r4
 800b240:	f7ff ffd9 	bl	800b1f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b244:	462b      	mov	r3, r5
      }
 800b246:	4618      	mov	r0, r3
 800b248:	3708      	adds	r7, #8
 800b24a:	46bd      	mov	sp, r7
 800b24c:	bdb0      	pop	{r4, r5, r7, pc}

0800b24e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800b24e:	b580      	push	{r7, lr}
 800b250:	b082      	sub	sp, #8
 800b252:	af00      	add	r7, sp, #0
 800b254:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800b256:	6878      	ldr	r0, [r7, #4]
 800b258:	f000 f898 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b25c:	4603      	mov	r3, r0
 800b25e:	4618      	mov	r0, r3
 800b260:	f7ff faaf 	bl	800a7c2 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800b264:	4603      	mov	r3, r0
	}
 800b266:	4618      	mov	r0, r3
 800b268:	3708      	adds	r7, #8
 800b26a:	46bd      	mov	sp, r7
 800b26c:	bd80      	pop	{r7, pc}

0800b26e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800b26e:	b5b0      	push	{r4, r5, r7, lr}
 800b270:	b082      	sub	sp, #8
 800b272:	af00      	add	r7, sp, #0
 800b274:	6078      	str	r0, [r7, #4]
 800b276:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800b278:	6878      	ldr	r0, [r7, #4]
 800b27a:	f000 fa1e 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b27e:	4604      	mov	r4, r0
 800b280:	6838      	ldr	r0, [r7, #0]
 800b282:	f000 f883 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b286:	4603      	mov	r3, r0
 800b288:	4618      	mov	r0, r3
 800b28a:	f7ff ffe0 	bl	800b24e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>
 800b28e:	4603      	mov	r3, r0
 800b290:	4619      	mov	r1, r3
 800b292:	4620      	mov	r0, r4
 800b294:	f000 fa8f 	bl	800b7b6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800b298:	462b      	mov	r3, r5
      }
 800b29a:	4618      	mov	r0, r3
 800b29c:	3708      	adds	r7, #8
 800b29e:	46bd      	mov	sp, r7
 800b2a0:	bdb0      	pop	{r4, r5, r7, pc}

0800b2a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b2a2:	b5b0      	push	{r4, r5, r7, lr}
 800b2a4:	b082      	sub	sp, #8
 800b2a6:	af00      	add	r7, sp, #0
 800b2a8:	6078      	str	r0, [r7, #4]
 800b2aa:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800b2ac:	6878      	ldr	r0, [r7, #4]
 800b2ae:	f000 fa04 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b2b2:	4604      	mov	r4, r0
 800b2b4:	6838      	ldr	r0, [r7, #0]
 800b2b6:	f000 f869 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b2ba:	4603      	mov	r3, r0
 800b2bc:	4619      	mov	r1, r3
 800b2be:	4620      	mov	r0, r4
 800b2c0:	f7ff ffd5 	bl	800b26e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b2c4:	462b      	mov	r3, r5
      }
 800b2c6:	4618      	mov	r0, r3
 800b2c8:	3708      	adds	r7, #8
 800b2ca:	46bd      	mov	sp, r7
 800b2cc:	bdb0      	pop	{r4, r5, r7, pc}

0800b2ce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800b2ce:	b5b0      	push	{r4, r5, r7, lr}
 800b2d0:	b082      	sub	sp, #8
 800b2d2:	af00      	add	r7, sp, #0
 800b2d4:	6078      	str	r0, [r7, #4]
 800b2d6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800b2d8:	6878      	ldr	r0, [r7, #4]
 800b2da:	f000 f9ee 	bl	800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b2de:	4604      	mov	r4, r0
 800b2e0:	6838      	ldr	r0, [r7, #0]
 800b2e2:	f000 f853 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b2e6:	4603      	mov	r3, r0
 800b2e8:	4619      	mov	r1, r3
 800b2ea:	4620      	mov	r0, r4
 800b2ec:	f7ff ffd9 	bl	800b2a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800b2f0:	462b      	mov	r3, r5
      }
 800b2f2:	4618      	mov	r0, r3
 800b2f4:	3708      	adds	r7, #8
 800b2f6:	46bd      	mov	sp, r7
 800b2f8:	bdb0      	pop	{r4, r5, r7, pc}

0800b2fa <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800b2fa:	b580      	push	{r7, lr}
 800b2fc:	b082      	sub	sp, #8
 800b2fe:	af00      	add	r7, sp, #0
 800b300:	6078      	str	r0, [r7, #4]
 800b302:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800b304:	683b      	ldr	r3, [r7, #0]
 800b306:	009b      	lsls	r3, r3, #2
 800b308:	687a      	ldr	r2, [r7, #4]
 800b30a:	4413      	add	r3, r2
 800b30c:	4618      	mov	r0, r3
 800b30e:	f000 fa69 	bl	800b7e4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>
 800b312:	4603      	mov	r3, r0
	}
 800b314:	4618      	mov	r0, r3
 800b316:	3708      	adds	r7, #8
 800b318:	46bd      	mov	sp, r7
 800b31a:	bd80      	pop	{r7, pc}

0800b31c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800b31c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b31e:	b085      	sub	sp, #20
 800b320:	af00      	add	r7, sp, #0
 800b322:	6078      	str	r0, [r7, #4]
 800b324:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800b326:	4b0f      	ldr	r3, [pc, #60]	; (800b364 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_+0x48>)
 800b328:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800b32a:	6838      	ldr	r0, [r7, #0]
 800b32c:	f7fe fecb 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800b330:	4603      	mov	r3, r0
 800b332:	4619      	mov	r1, r3
 800b334:	68f8      	ldr	r0, [r7, #12]
 800b336:	f7ff ffe0 	bl	800b2fa <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>
 800b33a:	4603      	mov	r3, r0
 800b33c:	681b      	ldr	r3, [r3, #0]
 800b33e:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800b340:	68bc      	ldr	r4, [r7, #8]
 800b342:	6878      	ldr	r0, [r7, #4]
 800b344:	f000 fa59 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b348:	4605      	mov	r5, r0
 800b34a:	6838      	ldr	r0, [r7, #0]
 800b34c:	f000 f81e 	bl	800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800b350:	4603      	mov	r3, r0
 800b352:	4619      	mov	r1, r3
 800b354:	4628      	mov	r0, r5
 800b356:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800b358:	4633      	mov	r3, r6
    }
 800b35a:	4618      	mov	r0, r3
 800b35c:	3714      	adds	r7, #20
 800b35e:	46bd      	mov	sp, r7
 800b360:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b362:	bf00      	nop
 800b364:	0802a000 	.word	0x0802a000

0800b368 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 800b368:	b580      	push	{r7, lr}
 800b36a:	b084      	sub	sp, #16
 800b36c:	af00      	add	r7, sp, #0
 800b36e:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 800b370:	6878      	ldr	r0, [r7, #4]
 800b372:	f7ff fcbf 	bl	800acf4 <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>
 800b376:	4602      	mov	r2, r0
 800b378:	f107 030c 	add.w	r3, r7, #12
 800b37c:	4611      	mov	r1, r2
 800b37e:	4618      	mov	r0, r3
 800b380:	f7ff ffcc 	bl	800b31c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>
      }
 800b384:	bf00      	nop
 800b386:	3710      	adds	r7, #16
 800b388:	46bd      	mov	sp, r7
 800b38a:	bd80      	pop	{r7, pc}

0800b38c <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b38c:	b480      	push	{r7}
 800b38e:	b083      	sub	sp, #12
 800b390:	af00      	add	r7, sp, #0
 800b392:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b394:	687b      	ldr	r3, [r7, #4]
 800b396:	4618      	mov	r0, r3
 800b398:	370c      	adds	r7, #12
 800b39a:	46bd      	mov	sp, r7
 800b39c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3a0:	4770      	bx	lr

0800b3a2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b3a2:	b480      	push	{r7}
 800b3a4:	b083      	sub	sp, #12
 800b3a6:	af00      	add	r7, sp, #0
 800b3a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b3aa:	687b      	ldr	r3, [r7, #4]
 800b3ac:	4618      	mov	r0, r3
 800b3ae:	370c      	adds	r7, #12
 800b3b0:	46bd      	mov	sp, r7
 800b3b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3b6:	4770      	bx	lr

0800b3b8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b3b8:	b480      	push	{r7}
 800b3ba:	b083      	sub	sp, #12
 800b3bc:	af00      	add	r7, sp, #0
 800b3be:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	4618      	mov	r0, r3
 800b3c4:	370c      	adds	r7, #12
 800b3c6:	46bd      	mov	sp, r7
 800b3c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3cc:	4770      	bx	lr

0800b3ce <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b3ce:	b480      	push	{r7}
 800b3d0:	b083      	sub	sp, #12
 800b3d2:	af00      	add	r7, sp, #0
 800b3d4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	4618      	mov	r0, r3
 800b3da:	370c      	adds	r7, #12
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3e2:	4770      	bx	lr

0800b3e4 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b3e4:	b480      	push	{r7}
 800b3e6:	b083      	sub	sp, #12
 800b3e8:	af00      	add	r7, sp, #0
 800b3ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b3ec:	687b      	ldr	r3, [r7, #4]
 800b3ee:	4618      	mov	r0, r3
 800b3f0:	370c      	adds	r7, #12
 800b3f2:	46bd      	mov	sp, r7
 800b3f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3f8:	4770      	bx	lr

0800b3fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b3fa:	b480      	push	{r7}
 800b3fc:	b083      	sub	sp, #12
 800b3fe:	af00      	add	r7, sp, #0
 800b400:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b402:	687b      	ldr	r3, [r7, #4]
 800b404:	4618      	mov	r0, r3
 800b406:	370c      	adds	r7, #12
 800b408:	46bd      	mov	sp, r7
 800b40a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b40e:	4770      	bx	lr

0800b410 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b410:	b480      	push	{r7}
 800b412:	b083      	sub	sp, #12
 800b414:	af00      	add	r7, sp, #0
 800b416:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b418:	687b      	ldr	r3, [r7, #4]
 800b41a:	4618      	mov	r0, r3
 800b41c:	370c      	adds	r7, #12
 800b41e:	46bd      	mov	sp, r7
 800b420:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b424:	4770      	bx	lr

0800b426 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b426:	b480      	push	{r7}
 800b428:	b083      	sub	sp, #12
 800b42a:	af00      	add	r7, sp, #0
 800b42c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b42e:	687b      	ldr	r3, [r7, #4]
 800b430:	4618      	mov	r0, r3
 800b432:	370c      	adds	r7, #12
 800b434:	46bd      	mov	sp, r7
 800b436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b43a:	4770      	bx	lr

0800b43c <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b43c:	b480      	push	{r7}
 800b43e:	b083      	sub	sp, #12
 800b440:	af00      	add	r7, sp, #0
 800b442:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b444:	687b      	ldr	r3, [r7, #4]
 800b446:	4618      	mov	r0, r3
 800b448:	370c      	adds	r7, #12
 800b44a:	46bd      	mov	sp, r7
 800b44c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b450:	4770      	bx	lr

0800b452 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b452:	b480      	push	{r7}
 800b454:	b083      	sub	sp, #12
 800b456:	af00      	add	r7, sp, #0
 800b458:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b45a:	687b      	ldr	r3, [r7, #4]
 800b45c:	4618      	mov	r0, r3
 800b45e:	370c      	adds	r7, #12
 800b460:	46bd      	mov	sp, r7
 800b462:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b466:	4770      	bx	lr

0800b468 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b468:	b480      	push	{r7}
 800b46a:	b083      	sub	sp, #12
 800b46c:	af00      	add	r7, sp, #0
 800b46e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b470:	687b      	ldr	r3, [r7, #4]
 800b472:	4618      	mov	r0, r3
 800b474:	370c      	adds	r7, #12
 800b476:	46bd      	mov	sp, r7
 800b478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b47c:	4770      	bx	lr

0800b47e <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b47e:	b480      	push	{r7}
 800b480:	b083      	sub	sp, #12
 800b482:	af00      	add	r7, sp, #0
 800b484:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b486:	687b      	ldr	r3, [r7, #4]
 800b488:	4618      	mov	r0, r3
 800b48a:	370c      	adds	r7, #12
 800b48c:	46bd      	mov	sp, r7
 800b48e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b492:	4770      	bx	lr

0800b494 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800b494:	b480      	push	{r7}
 800b496:	b083      	sub	sp, #12
 800b498:	af00      	add	r7, sp, #0
 800b49a:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800b49c:	687b      	ldr	r3, [r7, #4]
 800b49e:	4618      	mov	r0, r3
 800b4a0:	370c      	adds	r7, #12
 800b4a2:	46bd      	mov	sp, r7
 800b4a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4a8:	4770      	bx	lr

0800b4aa <_ZNSaIP16Power_expressionED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800b4aa:	b580      	push	{r7, lr}
 800b4ac:	b082      	sub	sp, #8
 800b4ae:	af00      	add	r7, sp, #0
 800b4b0:	6078      	str	r0, [r7, #4]
 800b4b2:	6878      	ldr	r0, [r7, #4]
 800b4b4:	f000 f9ac 	bl	800b810 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>
 800b4b8:	687b      	ldr	r3, [r7, #4]
 800b4ba:	4618      	mov	r0, r3
 800b4bc:	3708      	adds	r7, #8
 800b4be:	46bd      	mov	sp, r7
 800b4c0:	bd80      	pop	{r7, pc}

0800b4c2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b4c2:	b580      	push	{r7, lr}
 800b4c4:	b084      	sub	sp, #16
 800b4c6:	af00      	add	r7, sp, #0
 800b4c8:	60f8      	str	r0, [r7, #12]
 800b4ca:	60b9      	str	r1, [r7, #8]
 800b4cc:	607a      	str	r2, [r7, #4]
	if (__p)
 800b4ce:	68bb      	ldr	r3, [r7, #8]
 800b4d0:	2b00      	cmp	r3, #0
 800b4d2:	d005      	beq.n	800b4e0 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b4d4:	68fb      	ldr	r3, [r7, #12]
 800b4d6:	687a      	ldr	r2, [r7, #4]
 800b4d8:	68b9      	ldr	r1, [r7, #8]
 800b4da:	4618      	mov	r0, r3
 800b4dc:	f000 f9a3 	bl	800b826 <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>
      }
 800b4e0:	bf00      	nop
 800b4e2:	3710      	adds	r7, #16
 800b4e4:	46bd      	mov	sp, r7
 800b4e6:	bd80      	pop	{r7, pc}

0800b4e8 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b4e8:	b580      	push	{r7, lr}
 800b4ea:	b082      	sub	sp, #8
 800b4ec:	af00      	add	r7, sp, #0
 800b4ee:	6078      	str	r0, [r7, #4]
 800b4f0:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b4f2:	6839      	ldr	r1, [r7, #0]
 800b4f4:	6878      	ldr	r0, [r7, #4]
 800b4f6:	f000 f9a5 	bl	800b844 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>
    }
 800b4fa:	bf00      	nop
 800b4fc:	3708      	adds	r7, #8
 800b4fe:	46bd      	mov	sp, r7
 800b500:	bd80      	pop	{r7, pc}

0800b502 <_ZNSaI13mult_operatorED1Ev>:
 800b502:	b580      	push	{r7, lr}
 800b504:	b082      	sub	sp, #8
 800b506:	af00      	add	r7, sp, #0
 800b508:	6078      	str	r0, [r7, #4]
 800b50a:	6878      	ldr	r0, [r7, #4]
 800b50c:	f000 f9a5 	bl	800b85a <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>
 800b510:	687b      	ldr	r3, [r7, #4]
 800b512:	4618      	mov	r0, r3
 800b514:	3708      	adds	r7, #8
 800b516:	46bd      	mov	sp, r7
 800b518:	bd80      	pop	{r7, pc}

0800b51a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b51a:	b580      	push	{r7, lr}
 800b51c:	b084      	sub	sp, #16
 800b51e:	af00      	add	r7, sp, #0
 800b520:	60f8      	str	r0, [r7, #12]
 800b522:	60b9      	str	r1, [r7, #8]
 800b524:	607a      	str	r2, [r7, #4]
	if (__p)
 800b526:	68bb      	ldr	r3, [r7, #8]
 800b528:	2b00      	cmp	r3, #0
 800b52a:	d005      	beq.n	800b538 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b52c:	68fb      	ldr	r3, [r7, #12]
 800b52e:	687a      	ldr	r2, [r7, #4]
 800b530:	68b9      	ldr	r1, [r7, #8]
 800b532:	4618      	mov	r0, r3
 800b534:	f000 f99c 	bl	800b870 <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>
      }
 800b538:	bf00      	nop
 800b53a:	3710      	adds	r7, #16
 800b53c:	46bd      	mov	sp, r7
 800b53e:	bd80      	pop	{r7, pc}

0800b540 <_ZSt8_DestroyIP13mult_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b540:	b580      	push	{r7, lr}
 800b542:	b082      	sub	sp, #8
 800b544:	af00      	add	r7, sp, #0
 800b546:	6078      	str	r0, [r7, #4]
 800b548:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b54a:	6839      	ldr	r1, [r7, #0]
 800b54c:	6878      	ldr	r0, [r7, #4]
 800b54e:	f000 f99e 	bl	800b88e <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>
    }
 800b552:	bf00      	nop
 800b554:	3708      	adds	r7, #8
 800b556:	46bd      	mov	sp, r7
 800b558:	bd80      	pop	{r7, pc}

0800b55a <_ZNSaIP19Multiply_expressionED1Ev>:
 800b55a:	b580      	push	{r7, lr}
 800b55c:	b082      	sub	sp, #8
 800b55e:	af00      	add	r7, sp, #0
 800b560:	6078      	str	r0, [r7, #4]
 800b562:	6878      	ldr	r0, [r7, #4]
 800b564:	f000 f99e 	bl	800b8a4 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>
 800b568:	687b      	ldr	r3, [r7, #4]
 800b56a:	4618      	mov	r0, r3
 800b56c:	3708      	adds	r7, #8
 800b56e:	46bd      	mov	sp, r7
 800b570:	bd80      	pop	{r7, pc}

0800b572 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b572:	b580      	push	{r7, lr}
 800b574:	b084      	sub	sp, #16
 800b576:	af00      	add	r7, sp, #0
 800b578:	60f8      	str	r0, [r7, #12]
 800b57a:	60b9      	str	r1, [r7, #8]
 800b57c:	607a      	str	r2, [r7, #4]
	if (__p)
 800b57e:	68bb      	ldr	r3, [r7, #8]
 800b580:	2b00      	cmp	r3, #0
 800b582:	d005      	beq.n	800b590 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b584:	68fb      	ldr	r3, [r7, #12]
 800b586:	687a      	ldr	r2, [r7, #4]
 800b588:	68b9      	ldr	r1, [r7, #8]
 800b58a:	4618      	mov	r0, r3
 800b58c:	f000 f995 	bl	800b8ba <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>
      }
 800b590:	bf00      	nop
 800b592:	3710      	adds	r7, #16
 800b594:	46bd      	mov	sp, r7
 800b596:	bd80      	pop	{r7, pc}

0800b598 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b598:	b580      	push	{r7, lr}
 800b59a:	b082      	sub	sp, #8
 800b59c:	af00      	add	r7, sp, #0
 800b59e:	6078      	str	r0, [r7, #4]
 800b5a0:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b5a2:	6839      	ldr	r1, [r7, #0]
 800b5a4:	6878      	ldr	r0, [r7, #4]
 800b5a6:	f000 f997 	bl	800b8d8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>
    }
 800b5aa:	bf00      	nop
 800b5ac:	3708      	adds	r7, #8
 800b5ae:	46bd      	mov	sp, r7
 800b5b0:	bd80      	pop	{r7, pc}

0800b5b2 <_ZNSaI12sum_operatorED1Ev>:
 800b5b2:	b580      	push	{r7, lr}
 800b5b4:	b082      	sub	sp, #8
 800b5b6:	af00      	add	r7, sp, #0
 800b5b8:	6078      	str	r0, [r7, #4]
 800b5ba:	6878      	ldr	r0, [r7, #4]
 800b5bc:	f000 f997 	bl	800b8ee <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>
 800b5c0:	687b      	ldr	r3, [r7, #4]
 800b5c2:	4618      	mov	r0, r3
 800b5c4:	3708      	adds	r7, #8
 800b5c6:	46bd      	mov	sp, r7
 800b5c8:	bd80      	pop	{r7, pc}

0800b5ca <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b5ca:	b580      	push	{r7, lr}
 800b5cc:	b084      	sub	sp, #16
 800b5ce:	af00      	add	r7, sp, #0
 800b5d0:	60f8      	str	r0, [r7, #12]
 800b5d2:	60b9      	str	r1, [r7, #8]
 800b5d4:	607a      	str	r2, [r7, #4]
	if (__p)
 800b5d6:	68bb      	ldr	r3, [r7, #8]
 800b5d8:	2b00      	cmp	r3, #0
 800b5da:	d005      	beq.n	800b5e8 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b5dc:	68fb      	ldr	r3, [r7, #12]
 800b5de:	687a      	ldr	r2, [r7, #4]
 800b5e0:	68b9      	ldr	r1, [r7, #8]
 800b5e2:	4618      	mov	r0, r3
 800b5e4:	f000 f98e 	bl	800b904 <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>
      }
 800b5e8:	bf00      	nop
 800b5ea:	3710      	adds	r7, #16
 800b5ec:	46bd      	mov	sp, r7
 800b5ee:	bd80      	pop	{r7, pc}

0800b5f0 <_ZSt8_DestroyIP12sum_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b5f0:	b580      	push	{r7, lr}
 800b5f2:	b082      	sub	sp, #8
 800b5f4:	af00      	add	r7, sp, #0
 800b5f6:	6078      	str	r0, [r7, #4]
 800b5f8:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b5fa:	6839      	ldr	r1, [r7, #0]
 800b5fc:	6878      	ldr	r0, [r7, #4]
 800b5fe:	f000 f990 	bl	800b922 <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>
    }
 800b602:	bf00      	nop
 800b604:	3708      	adds	r7, #8
 800b606:	46bd      	mov	sp, r7
 800b608:	bd80      	pop	{r7, pc}

0800b60a <_ZNSaIP18Compare_expressionED1Ev>:
 800b60a:	b580      	push	{r7, lr}
 800b60c:	b082      	sub	sp, #8
 800b60e:	af00      	add	r7, sp, #0
 800b610:	6078      	str	r0, [r7, #4]
 800b612:	6878      	ldr	r0, [r7, #4]
 800b614:	f000 f990 	bl	800b938 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>
 800b618:	687b      	ldr	r3, [r7, #4]
 800b61a:	4618      	mov	r0, r3
 800b61c:	3708      	adds	r7, #8
 800b61e:	46bd      	mov	sp, r7
 800b620:	bd80      	pop	{r7, pc}

0800b622 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b622:	b580      	push	{r7, lr}
 800b624:	b084      	sub	sp, #16
 800b626:	af00      	add	r7, sp, #0
 800b628:	60f8      	str	r0, [r7, #12]
 800b62a:	60b9      	str	r1, [r7, #8]
 800b62c:	607a      	str	r2, [r7, #4]
	if (__p)
 800b62e:	68bb      	ldr	r3, [r7, #8]
 800b630:	2b00      	cmp	r3, #0
 800b632:	d005      	beq.n	800b640 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b634:	68fb      	ldr	r3, [r7, #12]
 800b636:	687a      	ldr	r2, [r7, #4]
 800b638:	68b9      	ldr	r1, [r7, #8]
 800b63a:	4618      	mov	r0, r3
 800b63c:	f000 f987 	bl	800b94e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>
      }
 800b640:	bf00      	nop
 800b642:	3710      	adds	r7, #16
 800b644:	46bd      	mov	sp, r7
 800b646:	bd80      	pop	{r7, pc}

0800b648 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b648:	b580      	push	{r7, lr}
 800b64a:	b082      	sub	sp, #8
 800b64c:	af00      	add	r7, sp, #0
 800b64e:	6078      	str	r0, [r7, #4]
 800b650:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b652:	6839      	ldr	r1, [r7, #0]
 800b654:	6878      	ldr	r0, [r7, #4]
 800b656:	f000 f989 	bl	800b96c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>
    }
 800b65a:	bf00      	nop
 800b65c:	3708      	adds	r7, #8
 800b65e:	46bd      	mov	sp, r7
 800b660:	bd80      	pop	{r7, pc}

0800b662 <_ZNSaIP14And_expressionED1Ev>:
 800b662:	b580      	push	{r7, lr}
 800b664:	b082      	sub	sp, #8
 800b666:	af00      	add	r7, sp, #0
 800b668:	6078      	str	r0, [r7, #4]
 800b66a:	6878      	ldr	r0, [r7, #4]
 800b66c:	f000 f989 	bl	800b982 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>
 800b670:	687b      	ldr	r3, [r7, #4]
 800b672:	4618      	mov	r0, r3
 800b674:	3708      	adds	r7, #8
 800b676:	46bd      	mov	sp, r7
 800b678:	bd80      	pop	{r7, pc}

0800b67a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800b67a:	b580      	push	{r7, lr}
 800b67c:	b084      	sub	sp, #16
 800b67e:	af00      	add	r7, sp, #0
 800b680:	60f8      	str	r0, [r7, #12]
 800b682:	60b9      	str	r1, [r7, #8]
 800b684:	607a      	str	r2, [r7, #4]
	if (__p)
 800b686:	68bb      	ldr	r3, [r7, #8]
 800b688:	2b00      	cmp	r3, #0
 800b68a:	d005      	beq.n	800b698 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800b68c:	68fb      	ldr	r3, [r7, #12]
 800b68e:	687a      	ldr	r2, [r7, #4]
 800b690:	68b9      	ldr	r1, [r7, #8]
 800b692:	4618      	mov	r0, r3
 800b694:	f000 f980 	bl	800b998 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>
      }
 800b698:	bf00      	nop
 800b69a:	3710      	adds	r7, #16
 800b69c:	46bd      	mov	sp, r7
 800b69e:	bd80      	pop	{r7, pc}

0800b6a0 <_ZSt8_DestroyIPP14And_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800b6a0:	b580      	push	{r7, lr}
 800b6a2:	b082      	sub	sp, #8
 800b6a4:	af00      	add	r7, sp, #0
 800b6a6:	6078      	str	r0, [r7, #4]
 800b6a8:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800b6aa:	6839      	ldr	r1, [r7, #0]
 800b6ac:	6878      	ldr	r0, [r7, #4]
 800b6ae:	f000 f982 	bl	800b9b6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>
    }
 800b6b2:	bf00      	nop
 800b6b4:	3708      	adds	r7, #8
 800b6b6:	46bd      	mov	sp, r7
 800b6b8:	bd80      	pop	{r7, pc}

0800b6ba <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b6ba:	b480      	push	{r7}
 800b6bc:	b083      	sub	sp, #12
 800b6be:	af00      	add	r7, sp, #0
 800b6c0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b6c2:	687b      	ldr	r3, [r7, #4]
 800b6c4:	4618      	mov	r0, r3
 800b6c6:	370c      	adds	r7, #12
 800b6c8:	46bd      	mov	sp, r7
 800b6ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6ce:	4770      	bx	lr

0800b6d0 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b6d2:	b083      	sub	sp, #12
 800b6d4:	af00      	add	r7, sp, #0
 800b6d6:	6078      	str	r0, [r7, #4]
 800b6d8:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b6da:	6878      	ldr	r0, [r7, #4]
 800b6dc:	f000 f88d 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b6e0:	4604      	mov	r4, r0
 800b6e2:	6838      	ldr	r0, [r7, #0]
 800b6e4:	f7f9 faf2 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800b6e8:	4603      	mov	r3, r0
 800b6ea:	461a      	mov	r2, r3
 800b6ec:	4621      	mov	r1, r4
 800b6ee:	4628      	mov	r0, r5
 800b6f0:	f000 f96c 	bl	800b9cc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b6f4:	4633      	mov	r3, r6
    }
 800b6f6:	4618      	mov	r0, r3
 800b6f8:	370c      	adds	r7, #12
 800b6fa:	46bd      	mov	sp, r7
 800b6fc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b6fe <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b6fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b700:	b083      	sub	sp, #12
 800b702:	af00      	add	r7, sp, #0
 800b704:	6078      	str	r0, [r7, #4]
 800b706:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b708:	6878      	ldr	r0, [r7, #4]
 800b70a:	f000 f876 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b70e:	4604      	mov	r4, r0
 800b710:	6838      	ldr	r0, [r7, #0]
 800b712:	f7f9 fa73 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800b716:	4603      	mov	r3, r0
 800b718:	461a      	mov	r2, r3
 800b71a:	4621      	mov	r1, r4
 800b71c:	4628      	mov	r0, r5
 800b71e:	f000 f96c 	bl	800b9fa <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b722:	4633      	mov	r3, r6
    }
 800b724:	4618      	mov	r0, r3
 800b726:	370c      	adds	r7, #12
 800b728:	46bd      	mov	sp, r7
 800b72a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b72c <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b72c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b72e:	b083      	sub	sp, #12
 800b730:	af00      	add	r7, sp, #0
 800b732:	6078      	str	r0, [r7, #4]
 800b734:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b736:	6878      	ldr	r0, [r7, #4]
 800b738:	f000 f85f 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b73c:	4604      	mov	r4, r0
 800b73e:	6838      	ldr	r0, [r7, #0]
 800b740:	f7f9 fa90 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800b744:	4603      	mov	r3, r0
 800b746:	461a      	mov	r2, r3
 800b748:	4621      	mov	r1, r4
 800b74a:	4628      	mov	r0, r5
 800b74c:	f000 f96c 	bl	800ba28 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b750:	4633      	mov	r3, r6
    }
 800b752:	4618      	mov	r0, r3
 800b754:	370c      	adds	r7, #12
 800b756:	46bd      	mov	sp, r7
 800b758:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b75a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b75a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b75c:	b083      	sub	sp, #12
 800b75e:	af00      	add	r7, sp, #0
 800b760:	6078      	str	r0, [r7, #4]
 800b762:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b764:	6878      	ldr	r0, [r7, #4]
 800b766:	f000 f848 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b76a:	4604      	mov	r4, r0
 800b76c:	6838      	ldr	r0, [r7, #0]
 800b76e:	f7f9 faed 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800b772:	4603      	mov	r3, r0
 800b774:	461a      	mov	r2, r3
 800b776:	4621      	mov	r1, r4
 800b778:	4628      	mov	r0, r5
 800b77a:	f000 f96c 	bl	800ba56 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b77e:	4633      	mov	r3, r6
    }
 800b780:	4618      	mov	r0, r3
 800b782:	370c      	adds	r7, #12
 800b784:	46bd      	mov	sp, r7
 800b786:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b788 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b788:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b78a:	b083      	sub	sp, #12
 800b78c:	af00      	add	r7, sp, #0
 800b78e:	6078      	str	r0, [r7, #4]
 800b790:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b792:	6878      	ldr	r0, [r7, #4]
 800b794:	f000 f831 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b798:	4604      	mov	r4, r0
 800b79a:	6838      	ldr	r0, [r7, #0]
 800b79c:	f000 f972 	bl	800ba84 <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800b7a0:	4603      	mov	r3, r0
 800b7a2:	461a      	mov	r2, r3
 800b7a4:	4621      	mov	r1, r4
 800b7a6:	4628      	mov	r0, r5
 800b7a8:	f000 f977 	bl	800ba9a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b7ac:	4633      	mov	r3, r6
    }
 800b7ae:	4618      	mov	r0, r3
 800b7b0:	370c      	adds	r7, #12
 800b7b2:	46bd      	mov	sp, r7
 800b7b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b7b6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800b7b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b7b8:	b083      	sub	sp, #12
 800b7ba:	af00      	add	r7, sp, #0
 800b7bc:	6078      	str	r0, [r7, #4]
 800b7be:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800b7c0:	6878      	ldr	r0, [r7, #4]
 800b7c2:	f000 f81a 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b7c6:	4604      	mov	r4, r0
 800b7c8:	6838      	ldr	r0, [r7, #0]
 800b7ca:	f000 f97d 	bl	800bac8 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 800b7ce:	4603      	mov	r3, r0
 800b7d0:	461a      	mov	r2, r3
 800b7d2:	4621      	mov	r1, r4
 800b7d4:	4628      	mov	r0, r5
 800b7d6:	f000 f982 	bl	800bade <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800b7da:	4633      	mov	r3, r6
    }
 800b7dc:	4618      	mov	r0, r3
 800b7de:	370c      	adds	r7, #12
 800b7e0:	46bd      	mov	sp, r7
 800b7e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b7e4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 800b7e4:	b480      	push	{r7}
 800b7e6:	b083      	sub	sp, #12
 800b7e8:	af00      	add	r7, sp, #0
 800b7ea:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800b7ec:	687b      	ldr	r3, [r7, #4]
 800b7ee:	4618      	mov	r0, r3
 800b7f0:	370c      	adds	r7, #12
 800b7f2:	46bd      	mov	sp, r7
 800b7f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7f8:	4770      	bx	lr

0800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800b7fa:	b480      	push	{r7}
 800b7fc:	b083      	sub	sp, #12
 800b7fe:	af00      	add	r7, sp, #0
 800b800:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800b802:	687b      	ldr	r3, [r7, #4]
 800b804:	4618      	mov	r0, r3
 800b806:	370c      	adds	r7, #12
 800b808:	46bd      	mov	sp, r7
 800b80a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b80e:	4770      	bx	lr

0800b810 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800b810:	b480      	push	{r7}
 800b812:	b083      	sub	sp, #12
 800b814:	af00      	add	r7, sp, #0
 800b816:	6078      	str	r0, [r7, #4]
 800b818:	687b      	ldr	r3, [r7, #4]
 800b81a:	4618      	mov	r0, r3
 800b81c:	370c      	adds	r7, #12
 800b81e:	46bd      	mov	sp, r7
 800b820:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b824:	4770      	bx	lr

0800b826 <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b826:	b580      	push	{r7, lr}
 800b828:	b084      	sub	sp, #16
 800b82a:	af00      	add	r7, sp, #0
 800b82c:	60f8      	str	r0, [r7, #12]
 800b82e:	60b9      	str	r1, [r7, #8]
 800b830:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b832:	687a      	ldr	r2, [r7, #4]
 800b834:	68b9      	ldr	r1, [r7, #8]
 800b836:	68f8      	ldr	r0, [r7, #12]
 800b838:	f000 f968 	bl	800bb0c <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>
 800b83c:	bf00      	nop
 800b83e:	3710      	adds	r7, #16
 800b840:	46bd      	mov	sp, r7
 800b842:	bd80      	pop	{r7, pc}

0800b844 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800b844:	b480      	push	{r7}
 800b846:	b083      	sub	sp, #12
 800b848:	af00      	add	r7, sp, #0
 800b84a:	6078      	str	r0, [r7, #4]
 800b84c:	6039      	str	r1, [r7, #0]
 800b84e:	bf00      	nop
 800b850:	370c      	adds	r7, #12
 800b852:	46bd      	mov	sp, r7
 800b854:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b858:	4770      	bx	lr

0800b85a <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>:
 800b85a:	b480      	push	{r7}
 800b85c:	b083      	sub	sp, #12
 800b85e:	af00      	add	r7, sp, #0
 800b860:	6078      	str	r0, [r7, #4]
 800b862:	687b      	ldr	r3, [r7, #4]
 800b864:	4618      	mov	r0, r3
 800b866:	370c      	adds	r7, #12
 800b868:	46bd      	mov	sp, r7
 800b86a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b86e:	4770      	bx	lr

0800b870 <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b870:	b580      	push	{r7, lr}
 800b872:	b084      	sub	sp, #16
 800b874:	af00      	add	r7, sp, #0
 800b876:	60f8      	str	r0, [r7, #12]
 800b878:	60b9      	str	r1, [r7, #8]
 800b87a:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b87c:	687a      	ldr	r2, [r7, #4]
 800b87e:	68b9      	ldr	r1, [r7, #8]
 800b880:	68f8      	ldr	r0, [r7, #12]
 800b882:	f000 f94f 	bl	800bb24 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>
 800b886:	bf00      	nop
 800b888:	3710      	adds	r7, #16
 800b88a:	46bd      	mov	sp, r7
 800b88c:	bd80      	pop	{r7, pc}

0800b88e <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>:
 800b88e:	b480      	push	{r7}
 800b890:	b083      	sub	sp, #12
 800b892:	af00      	add	r7, sp, #0
 800b894:	6078      	str	r0, [r7, #4]
 800b896:	6039      	str	r1, [r7, #0]
 800b898:	bf00      	nop
 800b89a:	370c      	adds	r7, #12
 800b89c:	46bd      	mov	sp, r7
 800b89e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8a2:	4770      	bx	lr

0800b8a4 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>:
 800b8a4:	b480      	push	{r7}
 800b8a6:	b083      	sub	sp, #12
 800b8a8:	af00      	add	r7, sp, #0
 800b8aa:	6078      	str	r0, [r7, #4]
 800b8ac:	687b      	ldr	r3, [r7, #4]
 800b8ae:	4618      	mov	r0, r3
 800b8b0:	370c      	adds	r7, #12
 800b8b2:	46bd      	mov	sp, r7
 800b8b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8b8:	4770      	bx	lr

0800b8ba <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b8ba:	b580      	push	{r7, lr}
 800b8bc:	b084      	sub	sp, #16
 800b8be:	af00      	add	r7, sp, #0
 800b8c0:	60f8      	str	r0, [r7, #12]
 800b8c2:	60b9      	str	r1, [r7, #8]
 800b8c4:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b8c6:	687a      	ldr	r2, [r7, #4]
 800b8c8:	68b9      	ldr	r1, [r7, #8]
 800b8ca:	68f8      	ldr	r0, [r7, #12]
 800b8cc:	f000 f936 	bl	800bb3c <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>
 800b8d0:	bf00      	nop
 800b8d2:	3710      	adds	r7, #16
 800b8d4:	46bd      	mov	sp, r7
 800b8d6:	bd80      	pop	{r7, pc}

0800b8d8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>:
 800b8d8:	b480      	push	{r7}
 800b8da:	b083      	sub	sp, #12
 800b8dc:	af00      	add	r7, sp, #0
 800b8de:	6078      	str	r0, [r7, #4]
 800b8e0:	6039      	str	r1, [r7, #0]
 800b8e2:	bf00      	nop
 800b8e4:	370c      	adds	r7, #12
 800b8e6:	46bd      	mov	sp, r7
 800b8e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ec:	4770      	bx	lr

0800b8ee <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>:
 800b8ee:	b480      	push	{r7}
 800b8f0:	b083      	sub	sp, #12
 800b8f2:	af00      	add	r7, sp, #0
 800b8f4:	6078      	str	r0, [r7, #4]
 800b8f6:	687b      	ldr	r3, [r7, #4]
 800b8f8:	4618      	mov	r0, r3
 800b8fa:	370c      	adds	r7, #12
 800b8fc:	46bd      	mov	sp, r7
 800b8fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b902:	4770      	bx	lr

0800b904 <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b904:	b580      	push	{r7, lr}
 800b906:	b084      	sub	sp, #16
 800b908:	af00      	add	r7, sp, #0
 800b90a:	60f8      	str	r0, [r7, #12]
 800b90c:	60b9      	str	r1, [r7, #8]
 800b90e:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b910:	687a      	ldr	r2, [r7, #4]
 800b912:	68b9      	ldr	r1, [r7, #8]
 800b914:	68f8      	ldr	r0, [r7, #12]
 800b916:	f000 f91d 	bl	800bb54 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>
 800b91a:	bf00      	nop
 800b91c:	3710      	adds	r7, #16
 800b91e:	46bd      	mov	sp, r7
 800b920:	bd80      	pop	{r7, pc}

0800b922 <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>:
 800b922:	b480      	push	{r7}
 800b924:	b083      	sub	sp, #12
 800b926:	af00      	add	r7, sp, #0
 800b928:	6078      	str	r0, [r7, #4]
 800b92a:	6039      	str	r1, [r7, #0]
 800b92c:	bf00      	nop
 800b92e:	370c      	adds	r7, #12
 800b930:	46bd      	mov	sp, r7
 800b932:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b936:	4770      	bx	lr

0800b938 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>:
 800b938:	b480      	push	{r7}
 800b93a:	b083      	sub	sp, #12
 800b93c:	af00      	add	r7, sp, #0
 800b93e:	6078      	str	r0, [r7, #4]
 800b940:	687b      	ldr	r3, [r7, #4]
 800b942:	4618      	mov	r0, r3
 800b944:	370c      	adds	r7, #12
 800b946:	46bd      	mov	sp, r7
 800b948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b94c:	4770      	bx	lr

0800b94e <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b94e:	b580      	push	{r7, lr}
 800b950:	b084      	sub	sp, #16
 800b952:	af00      	add	r7, sp, #0
 800b954:	60f8      	str	r0, [r7, #12]
 800b956:	60b9      	str	r1, [r7, #8]
 800b958:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b95a:	687a      	ldr	r2, [r7, #4]
 800b95c:	68b9      	ldr	r1, [r7, #8]
 800b95e:	68f8      	ldr	r0, [r7, #12]
 800b960:	f000 f904 	bl	800bb6c <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>
 800b964:	bf00      	nop
 800b966:	3710      	adds	r7, #16
 800b968:	46bd      	mov	sp, r7
 800b96a:	bd80      	pop	{r7, pc}

0800b96c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>:
 800b96c:	b480      	push	{r7}
 800b96e:	b083      	sub	sp, #12
 800b970:	af00      	add	r7, sp, #0
 800b972:	6078      	str	r0, [r7, #4]
 800b974:	6039      	str	r1, [r7, #0]
 800b976:	bf00      	nop
 800b978:	370c      	adds	r7, #12
 800b97a:	46bd      	mov	sp, r7
 800b97c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b980:	4770      	bx	lr

0800b982 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>:
 800b982:	b480      	push	{r7}
 800b984:	b083      	sub	sp, #12
 800b986:	af00      	add	r7, sp, #0
 800b988:	6078      	str	r0, [r7, #4]
 800b98a:	687b      	ldr	r3, [r7, #4]
 800b98c:	4618      	mov	r0, r3
 800b98e:	370c      	adds	r7, #12
 800b990:	46bd      	mov	sp, r7
 800b992:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b996:	4770      	bx	lr

0800b998 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800b998:	b580      	push	{r7, lr}
 800b99a:	b084      	sub	sp, #16
 800b99c:	af00      	add	r7, sp, #0
 800b99e:	60f8      	str	r0, [r7, #12]
 800b9a0:	60b9      	str	r1, [r7, #8]
 800b9a2:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800b9a4:	687a      	ldr	r2, [r7, #4]
 800b9a6:	68b9      	ldr	r1, [r7, #8]
 800b9a8:	68f8      	ldr	r0, [r7, #12]
 800b9aa:	f000 f8eb 	bl	800bb84 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>
 800b9ae:	bf00      	nop
 800b9b0:	3710      	adds	r7, #16
 800b9b2:	46bd      	mov	sp, r7
 800b9b4:	bd80      	pop	{r7, pc}

0800b9b6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>:
 800b9b6:	b480      	push	{r7}
 800b9b8:	b083      	sub	sp, #12
 800b9ba:	af00      	add	r7, sp, #0
 800b9bc:	6078      	str	r0, [r7, #4]
 800b9be:	6039      	str	r1, [r7, #0]
 800b9c0:	bf00      	nop
 800b9c2:	370c      	adds	r7, #12
 800b9c4:	46bd      	mov	sp, r7
 800b9c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9ca:	4770      	bx	lr

0800b9cc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b9cc:	b5b0      	push	{r4, r5, r7, lr}
 800b9ce:	b084      	sub	sp, #16
 800b9d0:	af00      	add	r7, sp, #0
 800b9d2:	7338      	strb	r0, [r7, #12]
 800b9d4:	60b9      	str	r1, [r7, #8]
 800b9d6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800b9d8:	68b8      	ldr	r0, [r7, #8]
 800b9da:	f7ff ff0e 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800b9de:	4604      	mov	r4, r0
 800b9e0:	6878      	ldr	r0, [r7, #4]
 800b9e2:	f7f9 f973 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800b9e6:	4603      	mov	r3, r0
 800b9e8:	4619      	mov	r1, r3
 800b9ea:	4620      	mov	r0, r4
 800b9ec:	f000 f8d6 	bl	800bb9c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 800b9f0:	462b      	mov	r3, r5
 800b9f2:	4618      	mov	r0, r3
 800b9f4:	3710      	adds	r7, #16
 800b9f6:	46bd      	mov	sp, r7
 800b9f8:	bdb0      	pop	{r4, r5, r7, pc}

0800b9fa <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800b9fa:	b5b0      	push	{r4, r5, r7, lr}
 800b9fc:	b084      	sub	sp, #16
 800b9fe:	af00      	add	r7, sp, #0
 800ba00:	7338      	strb	r0, [r7, #12]
 800ba02:	60b9      	str	r1, [r7, #8]
 800ba04:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800ba06:	68b8      	ldr	r0, [r7, #8]
 800ba08:	f7ff fef7 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ba0c:	4604      	mov	r4, r0
 800ba0e:	6878      	ldr	r0, [r7, #4]
 800ba10:	f7f9 f8f4 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800ba14:	4603      	mov	r3, r0
 800ba16:	4619      	mov	r1, r3
 800ba18:	4620      	mov	r0, r4
 800ba1a:	f000 f8d0 	bl	800bbbe <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 800ba1e:	462b      	mov	r3, r5
 800ba20:	4618      	mov	r0, r3
 800ba22:	3710      	adds	r7, #16
 800ba24:	46bd      	mov	sp, r7
 800ba26:	bdb0      	pop	{r4, r5, r7, pc}

0800ba28 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800ba28:	b5b0      	push	{r4, r5, r7, lr}
 800ba2a:	b084      	sub	sp, #16
 800ba2c:	af00      	add	r7, sp, #0
 800ba2e:	7338      	strb	r0, [r7, #12]
 800ba30:	60b9      	str	r1, [r7, #8]
 800ba32:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800ba34:	68b8      	ldr	r0, [r7, #8]
 800ba36:	f7ff fee0 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ba3a:	4604      	mov	r4, r0
 800ba3c:	6878      	ldr	r0, [r7, #4]
 800ba3e:	f7f9 f911 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800ba42:	4603      	mov	r3, r0
 800ba44:	4619      	mov	r1, r3
 800ba46:	4620      	mov	r0, r4
 800ba48:	f000 f8ca 	bl	800bbe0 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 800ba4c:	462b      	mov	r3, r5
 800ba4e:	4618      	mov	r0, r3
 800ba50:	3710      	adds	r7, #16
 800ba52:	46bd      	mov	sp, r7
 800ba54:	bdb0      	pop	{r4, r5, r7, pc}

0800ba56 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800ba56:	b5b0      	push	{r4, r5, r7, lr}
 800ba58:	b084      	sub	sp, #16
 800ba5a:	af00      	add	r7, sp, #0
 800ba5c:	7338      	strb	r0, [r7, #12]
 800ba5e:	60b9      	str	r1, [r7, #8]
 800ba60:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800ba62:	68b8      	ldr	r0, [r7, #8]
 800ba64:	f7ff fec9 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800ba68:	4604      	mov	r4, r0
 800ba6a:	6878      	ldr	r0, [r7, #4]
 800ba6c:	f7f9 f96e 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800ba70:	4603      	mov	r3, r0
 800ba72:	4619      	mov	r1, r3
 800ba74:	4620      	mov	r0, r4
 800ba76:	f000 f8c4 	bl	800bc02 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 800ba7a:	462b      	mov	r3, r5
 800ba7c:	4618      	mov	r0, r3
 800ba7e:	3710      	adds	r7, #16
 800ba80:	46bd      	mov	sp, r7
 800ba82:	bdb0      	pop	{r4, r5, r7, pc}

0800ba84 <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800ba84:	b480      	push	{r7}
 800ba86:	b083      	sub	sp, #12
 800ba88:	af00      	add	r7, sp, #0
 800ba8a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800ba8c:	687b      	ldr	r3, [r7, #4]
 800ba8e:	4618      	mov	r0, r3
 800ba90:	370c      	adds	r7, #12
 800ba92:	46bd      	mov	sp, r7
 800ba94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba98:	4770      	bx	lr

0800ba9a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800ba9a:	b5b0      	push	{r4, r5, r7, lr}
 800ba9c:	b084      	sub	sp, #16
 800ba9e:	af00      	add	r7, sp, #0
 800baa0:	7338      	strb	r0, [r7, #12]
 800baa2:	60b9      	str	r1, [r7, #8]
 800baa4:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800baa6:	68b8      	ldr	r0, [r7, #8]
 800baa8:	f7ff fea7 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800baac:	4604      	mov	r4, r0
 800baae:	6878      	ldr	r0, [r7, #4]
 800bab0:	f7ff ffe8 	bl	800ba84 <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800bab4:	4603      	mov	r3, r0
 800bab6:	4619      	mov	r1, r3
 800bab8:	4620      	mov	r0, r4
 800baba:	f000 f8b3 	bl	800bc24 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>
 800babe:	462b      	mov	r3, r5
 800bac0:	4618      	mov	r0, r3
 800bac2:	3710      	adds	r7, #16
 800bac4:	46bd      	mov	sp, r7
 800bac6:	bdb0      	pop	{r4, r5, r7, pc}

0800bac8 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800bac8:	b480      	push	{r7}
 800baca:	b083      	sub	sp, #12
 800bacc:	af00      	add	r7, sp, #0
 800bace:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800bad0:	687b      	ldr	r3, [r7, #4]
 800bad2:	4618      	mov	r0, r3
 800bad4:	370c      	adds	r7, #12
 800bad6:	46bd      	mov	sp, r7
 800bad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800badc:	4770      	bx	lr

0800bade <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800bade:	b5b0      	push	{r4, r5, r7, lr}
 800bae0:	b084      	sub	sp, #16
 800bae2:	af00      	add	r7, sp, #0
 800bae4:	7338      	strb	r0, [r7, #12]
 800bae6:	60b9      	str	r1, [r7, #8]
 800bae8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800baea:	68b8      	ldr	r0, [r7, #8]
 800baec:	f7ff fe85 	bl	800b7fa <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800baf0:	4604      	mov	r4, r0
 800baf2:	6878      	ldr	r0, [r7, #4]
 800baf4:	f7ff ffe8 	bl	800bac8 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 800baf8:	4603      	mov	r3, r0
 800bafa:	4619      	mov	r1, r3
 800bafc:	4620      	mov	r0, r4
 800bafe:	f000 f8a2 	bl	800bc46 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 800bb02:	462b      	mov	r3, r5
 800bb04:	4618      	mov	r0, r3
 800bb06:	3710      	adds	r7, #16
 800bb08:	46bd      	mov	sp, r7
 800bb0a:	bdb0      	pop	{r4, r5, r7, pc}

0800bb0c <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800bb0c:	b580      	push	{r7, lr}
 800bb0e:	b084      	sub	sp, #16
 800bb10:	af00      	add	r7, sp, #0
 800bb12:	60f8      	str	r0, [r7, #12]
 800bb14:	60b9      	str	r1, [r7, #8]
 800bb16:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bb18:	68b8      	ldr	r0, [r7, #8]
 800bb1a:	f017 fbad 	bl	8023278 <_ZdlPv>
      }
 800bb1e:	3710      	adds	r7, #16
 800bb20:	46bd      	mov	sp, r7
 800bb22:	bd80      	pop	{r7, pc}

0800bb24 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800bb24:	b580      	push	{r7, lr}
 800bb26:	b084      	sub	sp, #16
 800bb28:	af00      	add	r7, sp, #0
 800bb2a:	60f8      	str	r0, [r7, #12]
 800bb2c:	60b9      	str	r1, [r7, #8]
 800bb2e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bb30:	68b8      	ldr	r0, [r7, #8]
 800bb32:	f017 fba1 	bl	8023278 <_ZdlPv>
      }
 800bb36:	3710      	adds	r7, #16
 800bb38:	46bd      	mov	sp, r7
 800bb3a:	bd80      	pop	{r7, pc}

0800bb3c <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800bb3c:	b580      	push	{r7, lr}
 800bb3e:	b084      	sub	sp, #16
 800bb40:	af00      	add	r7, sp, #0
 800bb42:	60f8      	str	r0, [r7, #12]
 800bb44:	60b9      	str	r1, [r7, #8]
 800bb46:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bb48:	68b8      	ldr	r0, [r7, #8]
 800bb4a:	f017 fb95 	bl	8023278 <_ZdlPv>
      }
 800bb4e:	3710      	adds	r7, #16
 800bb50:	46bd      	mov	sp, r7
 800bb52:	bd80      	pop	{r7, pc}

0800bb54 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800bb54:	b580      	push	{r7, lr}
 800bb56:	b084      	sub	sp, #16
 800bb58:	af00      	add	r7, sp, #0
 800bb5a:	60f8      	str	r0, [r7, #12]
 800bb5c:	60b9      	str	r1, [r7, #8]
 800bb5e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bb60:	68b8      	ldr	r0, [r7, #8]
 800bb62:	f017 fb89 	bl	8023278 <_ZdlPv>
      }
 800bb66:	3710      	adds	r7, #16
 800bb68:	46bd      	mov	sp, r7
 800bb6a:	bd80      	pop	{r7, pc}

0800bb6c <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800bb6c:	b580      	push	{r7, lr}
 800bb6e:	b084      	sub	sp, #16
 800bb70:	af00      	add	r7, sp, #0
 800bb72:	60f8      	str	r0, [r7, #12]
 800bb74:	60b9      	str	r1, [r7, #8]
 800bb76:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bb78:	68b8      	ldr	r0, [r7, #8]
 800bb7a:	f017 fb7d 	bl	8023278 <_ZdlPv>
      }
 800bb7e:	3710      	adds	r7, #16
 800bb80:	46bd      	mov	sp, r7
 800bb82:	bd80      	pop	{r7, pc}

0800bb84 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800bb84:	b580      	push	{r7, lr}
 800bb86:	b084      	sub	sp, #16
 800bb88:	af00      	add	r7, sp, #0
 800bb8a:	60f8      	str	r0, [r7, #12]
 800bb8c:	60b9      	str	r1, [r7, #8]
 800bb8e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800bb90:	68b8      	ldr	r0, [r7, #8]
 800bb92:	f017 fb71 	bl	8023278 <_ZdlPv>
      }
 800bb96:	3710      	adds	r7, #16
 800bb98:	46bd      	mov	sp, r7
 800bb9a:	bd80      	pop	{r7, pc}

0800bb9c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 800bb9c:	b590      	push	{r4, r7, lr}
 800bb9e:	b083      	sub	sp, #12
 800bba0:	af00      	add	r7, sp, #0
 800bba2:	6078      	str	r0, [r7, #4]
 800bba4:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bba6:	6838      	ldr	r0, [r7, #0]
 800bba8:	f7fc fd4a 	bl	8008640 <_ZSt11__addressofIbEPT_RS0_>
 800bbac:	4603      	mov	r3, r0
 800bbae:	4618      	mov	r0, r3
 800bbb0:	f7fc fd51 	bl	8008656 <_ZSt8_DestroyIbEvPT_>
	    return {};
 800bbb4:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bbb6:	4618      	mov	r0, r3
 800bbb8:	370c      	adds	r7, #12
 800bbba:	46bd      	mov	sp, r7
 800bbbc:	bd90      	pop	{r4, r7, pc}

0800bbbe <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
 800bbbe:	b590      	push	{r4, r7, lr}
 800bbc0:	b083      	sub	sp, #12
 800bbc2:	af00      	add	r7, sp, #0
 800bbc4:	6078      	str	r0, [r7, #4]
 800bbc6:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bbc8:	6838      	ldr	r0, [r7, #0]
 800bbca:	f7fc fd0f 	bl	80085ec <_ZSt11__addressofIiEPT_RS0_>
 800bbce:	4603      	mov	r3, r0
 800bbd0:	4618      	mov	r0, r3
 800bbd2:	f7fc fd16 	bl	8008602 <_ZSt8_DestroyIiEvPT_>
	    return {};
 800bbd6:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bbd8:	4618      	mov	r0, r3
 800bbda:	370c      	adds	r7, #12
 800bbdc:	46bd      	mov	sp, r7
 800bbde:	bd90      	pop	{r4, r7, pc}

0800bbe0 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 800bbe0:	b590      	push	{r4, r7, lr}
 800bbe2:	b083      	sub	sp, #12
 800bbe4:	af00      	add	r7, sp, #0
 800bbe6:	6078      	str	r0, [r7, #4]
 800bbe8:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bbea:	6838      	ldr	r0, [r7, #0]
 800bbec:	f7fc fd13 	bl	8008616 <_ZSt11__addressofIfEPT_RS0_>
 800bbf0:	4603      	mov	r3, r0
 800bbf2:	4618      	mov	r0, r3
 800bbf4:	f7fc fd1a 	bl	800862c <_ZSt8_DestroyIfEvPT_>
	    return {};
 800bbf8:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bbfa:	4618      	mov	r0, r3
 800bbfc:	370c      	adds	r7, #12
 800bbfe:	46bd      	mov	sp, r7
 800bc00:	bd90      	pop	{r4, r7, pc}

0800bc02 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 800bc02:	b590      	push	{r4, r7, lr}
 800bc04:	b083      	sub	sp, #12
 800bc06:	af00      	add	r7, sp, #0
 800bc08:	6078      	str	r0, [r7, #4]
 800bc0a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bc0c:	6838      	ldr	r0, [r7, #0]
 800bc0e:	f7fc fd2c 	bl	800866a <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800bc12:	4603      	mov	r3, r0
 800bc14:	4618      	mov	r0, r3
 800bc16:	f7fc fd33 	bl	8008680 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 800bc1a:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bc1c:	4618      	mov	r0, r3
 800bc1e:	370c      	adds	r7, #12
 800bc20:	46bd      	mov	sp, r7
 800bc22:	bd90      	pop	{r4, r7, pc}

0800bc24 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>:
 800bc24:	b590      	push	{r4, r7, lr}
 800bc26:	b083      	sub	sp, #12
 800bc28:	af00      	add	r7, sp, #0
 800bc2a:	6078      	str	r0, [r7, #4]
 800bc2c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bc2e:	6838      	ldr	r0, [r7, #0]
 800bc30:	f000 f81a 	bl	800bc68 <_ZSt11__addressofIP8VariableEPT_RS2_>
 800bc34:	4603      	mov	r3, r0
 800bc36:	4618      	mov	r0, r3
 800bc38:	f000 f821 	bl	800bc7e <_ZSt8_DestroyIP8VariableEvPT_>
	    return {};
 800bc3c:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bc3e:	4618      	mov	r0, r3
 800bc40:	370c      	adds	r7, #12
 800bc42:	46bd      	mov	sp, r7
 800bc44:	bd90      	pop	{r4, r7, pc}

0800bc46 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 800bc46:	b590      	push	{r4, r7, lr}
 800bc48:	b083      	sub	sp, #12
 800bc4a:	af00      	add	r7, sp, #0
 800bc4c:	6078      	str	r0, [r7, #4]
 800bc4e:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800bc50:	6838      	ldr	r0, [r7, #0]
 800bc52:	f000 f81e 	bl	800bc92 <_ZSt11__addressofIP13Function_callEPT_RS2_>
 800bc56:	4603      	mov	r3, r0
 800bc58:	4618      	mov	r0, r3
 800bc5a:	f000 f825 	bl	800bca8 <_ZSt8_DestroyIP13Function_callEvPT_>
	    return {};
 800bc5e:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800bc60:	4618      	mov	r0, r3
 800bc62:	370c      	adds	r7, #12
 800bc64:	46bd      	mov	sp, r7
 800bc66:	bd90      	pop	{r4, r7, pc}

0800bc68 <_ZSt11__addressofIP8VariableEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800bc68:	b480      	push	{r7}
 800bc6a:	b083      	sub	sp, #12
 800bc6c:	af00      	add	r7, sp, #0
 800bc6e:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800bc70:	687b      	ldr	r3, [r7, #4]
 800bc72:	4618      	mov	r0, r3
 800bc74:	370c      	adds	r7, #12
 800bc76:	46bd      	mov	sp, r7
 800bc78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc7c:	4770      	bx	lr

0800bc7e <_ZSt8_DestroyIP8VariableEvPT_>:
    _Destroy(_Tp* __pointer)
 800bc7e:	b480      	push	{r7}
 800bc80:	b083      	sub	sp, #12
 800bc82:	af00      	add	r7, sp, #0
 800bc84:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800bc86:	bf00      	nop
 800bc88:	370c      	adds	r7, #12
 800bc8a:	46bd      	mov	sp, r7
 800bc8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc90:	4770      	bx	lr

0800bc92 <_ZSt11__addressofIP13Function_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800bc92:	b480      	push	{r7}
 800bc94:	b083      	sub	sp, #12
 800bc96:	af00      	add	r7, sp, #0
 800bc98:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800bc9a:	687b      	ldr	r3, [r7, #4]
 800bc9c:	4618      	mov	r0, r3
 800bc9e:	370c      	adds	r7, #12
 800bca0:	46bd      	mov	sp, r7
 800bca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bca6:	4770      	bx	lr

0800bca8 <_ZSt8_DestroyIP13Function_callEvPT_>:
    _Destroy(_Tp* __pointer)
 800bca8:	b480      	push	{r7}
 800bcaa:	b083      	sub	sp, #12
 800bcac:	af00      	add	r7, sp, #0
 800bcae:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800bcb0:	bf00      	nop
 800bcb2:	370c      	adds	r7, #12
 800bcb4:	46bd      	mov	sp, r7
 800bcb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcba:	4770      	bx	lr

0800bcbc <_Z41__static_initialization_and_destruction_0ii>:
 800bcbc:	b590      	push	{r4, r7, lr}
 800bcbe:	b0e7      	sub	sp, #412	; 0x19c
 800bcc0:	af02      	add	r7, sp, #8
 800bcc2:	1d3b      	adds	r3, r7, #4
 800bcc4:	6018      	str	r0, [r3, #0]
 800bcc6:	463b      	mov	r3, r7
 800bcc8:	6019      	str	r1, [r3, #0]
 800bcca:	1d3b      	adds	r3, r7, #4
 800bccc:	681b      	ldr	r3, [r3, #0]
 800bcce:	2b01      	cmp	r3, #1
 800bcd0:	f040 819d 	bne.w	800c00e <_Z41__static_initialization_and_destruction_0ii+0x352>
 800bcd4:	463b      	mov	r3, r7
 800bcd6:	681b      	ldr	r3, [r3, #0]
 800bcd8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bcdc:	4293      	cmp	r3, r2
 800bcde:	f040 8196 	bne.w	800c00e <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800bce2:	f107 0314 	add.w	r3, r7, #20
 800bce6:	4618      	mov	r0, r3
 800bce8:	2322      	movs	r3, #34	; 0x22
 800bcea:	461a      	mov	r2, r3
 800bcec:	2100      	movs	r1, #0
 800bcee:	f018 ffc5 	bl	8024c7c <memset>
 800bcf2:	f107 0314 	add.w	r3, r7, #20
 800bcf6:	223a      	movs	r2, #58	; 0x3a
 800bcf8:	701a      	strb	r2, [r3, #0]
 800bcfa:	f107 0314 	add.w	r3, r7, #20
 800bcfe:	2201      	movs	r2, #1
 800bd00:	705a      	strb	r2, [r3, #1]
 800bd02:	f107 0314 	add.w	r3, r7, #20
 800bd06:	220a      	movs	r2, #10
 800bd08:	709a      	strb	r2, [r3, #2]
 800bd0a:	f107 0314 	add.w	r3, r7, #20
 800bd0e:	220a      	movs	r2, #10
 800bd10:	70da      	strb	r2, [r3, #3]
 800bd12:	f107 0314 	add.w	r3, r7, #20
 800bd16:	222c      	movs	r2, #44	; 0x2c
 800bd18:	711a      	strb	r2, [r3, #4]
 800bd1a:	f107 0314 	add.w	r3, r7, #20
 800bd1e:	220c      	movs	r2, #12
 800bd20:	715a      	strb	r2, [r3, #5]
 800bd22:	f107 0314 	add.w	r3, r7, #20
 800bd26:	222e      	movs	r2, #46	; 0x2e
 800bd28:	719a      	strb	r2, [r3, #6]
 800bd2a:	f107 0314 	add.w	r3, r7, #20
 800bd2e:	220b      	movs	r2, #11
 800bd30:	71da      	strb	r2, [r3, #7]
 800bd32:	f107 0314 	add.w	r3, r7, #20
 800bd36:	225b      	movs	r2, #91	; 0x5b
 800bd38:	721a      	strb	r2, [r3, #8]
 800bd3a:	f107 0314 	add.w	r3, r7, #20
 800bd3e:	220d      	movs	r2, #13
 800bd40:	725a      	strb	r2, [r3, #9]
 800bd42:	f107 0314 	add.w	r3, r7, #20
 800bd46:	225d      	movs	r2, #93	; 0x5d
 800bd48:	729a      	strb	r2, [r3, #10]
 800bd4a:	f107 0314 	add.w	r3, r7, #20
 800bd4e:	220e      	movs	r2, #14
 800bd50:	72da      	strb	r2, [r3, #11]
 800bd52:	f107 0314 	add.w	r3, r7, #20
 800bd56:	227c      	movs	r2, #124	; 0x7c
 800bd58:	731a      	strb	r2, [r3, #12]
 800bd5a:	f107 0314 	add.w	r3, r7, #20
 800bd5e:	2215      	movs	r2, #21
 800bd60:	735a      	strb	r2, [r3, #13]
 800bd62:	f107 0314 	add.w	r3, r7, #20
 800bd66:	2226      	movs	r2, #38	; 0x26
 800bd68:	739a      	strb	r2, [r3, #14]
 800bd6a:	f107 0314 	add.w	r3, r7, #20
 800bd6e:	2216      	movs	r2, #22
 800bd70:	73da      	strb	r2, [r3, #15]
 800bd72:	f107 0314 	add.w	r3, r7, #20
 800bd76:	222b      	movs	r2, #43	; 0x2b
 800bd78:	741a      	strb	r2, [r3, #16]
 800bd7a:	f107 0314 	add.w	r3, r7, #20
 800bd7e:	221f      	movs	r2, #31
 800bd80:	745a      	strb	r2, [r3, #17]
 800bd82:	f107 0314 	add.w	r3, r7, #20
 800bd86:	222d      	movs	r2, #45	; 0x2d
 800bd88:	749a      	strb	r2, [r3, #18]
 800bd8a:	f107 0314 	add.w	r3, r7, #20
 800bd8e:	2220      	movs	r2, #32
 800bd90:	74da      	strb	r2, [r3, #19]
 800bd92:	f107 0314 	add.w	r3, r7, #20
 800bd96:	222a      	movs	r2, #42	; 0x2a
 800bd98:	751a      	strb	r2, [r3, #20]
 800bd9a:	f107 0314 	add.w	r3, r7, #20
 800bd9e:	2221      	movs	r2, #33	; 0x21
 800bda0:	755a      	strb	r2, [r3, #21]
 800bda2:	f107 0314 	add.w	r3, r7, #20
 800bda6:	222f      	movs	r2, #47	; 0x2f
 800bda8:	759a      	strb	r2, [r3, #22]
 800bdaa:	f107 0314 	add.w	r3, r7, #20
 800bdae:	2222      	movs	r2, #34	; 0x22
 800bdb0:	75da      	strb	r2, [r3, #23]
 800bdb2:	f107 0314 	add.w	r3, r7, #20
 800bdb6:	225e      	movs	r2, #94	; 0x5e
 800bdb8:	761a      	strb	r2, [r3, #24]
 800bdba:	f107 0314 	add.w	r3, r7, #20
 800bdbe:	2223      	movs	r2, #35	; 0x23
 800bdc0:	765a      	strb	r2, [r3, #25]
 800bdc2:	f107 0314 	add.w	r3, r7, #20
 800bdc6:	2225      	movs	r2, #37	; 0x25
 800bdc8:	769a      	strb	r2, [r3, #26]
 800bdca:	f107 0314 	add.w	r3, r7, #20
 800bdce:	2224      	movs	r2, #36	; 0x24
 800bdd0:	76da      	strb	r2, [r3, #27]
 800bdd2:	f107 0314 	add.w	r3, r7, #20
 800bdd6:	2228      	movs	r2, #40	; 0x28
 800bdd8:	771a      	strb	r2, [r3, #28]
 800bdda:	f107 0314 	add.w	r3, r7, #20
 800bdde:	2226      	movs	r2, #38	; 0x26
 800bde0:	775a      	strb	r2, [r3, #29]
 800bde2:	f107 0314 	add.w	r3, r7, #20
 800bde6:	2229      	movs	r2, #41	; 0x29
 800bde8:	779a      	strb	r2, [r3, #30]
 800bdea:	f107 0314 	add.w	r3, r7, #20
 800bdee:	2227      	movs	r2, #39	; 0x27
 800bdf0:	77da      	strb	r2, [r3, #31]
 800bdf2:	f107 0314 	add.w	r3, r7, #20
 800bdf6:	2225      	movs	r2, #37	; 0x25
 800bdf8:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800bdfc:	f107 030c 	add.w	r3, r7, #12
 800be00:	f107 0214 	add.w	r2, r7, #20
 800be04:	601a      	str	r2, [r3, #0]
 800be06:	f107 030c 	add.w	r3, r7, #12
 800be0a:	2211      	movs	r2, #17
 800be0c:	605a      	str	r2, [r3, #4]
 800be0e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800be12:	4618      	mov	r0, r3
 800be14:	f7f5 ff9a 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800be18:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800be1c:	f107 020c 	add.w	r2, r7, #12
 800be20:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800be24:	9300      	str	r3, [sp, #0]
 800be26:	460b      	mov	r3, r1
 800be28:	ca06      	ldmia	r2, {r1, r2}
 800be2a:	4885      	ldr	r0, [pc, #532]	; (800c040 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800be2c:	f7f5 ffa6 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800be30:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800be34:	4618      	mov	r0, r3
 800be36:	f7f5 ff95 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800be3a:	2305      	movs	r3, #5
 800be3c:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800be40:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800be44:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800be48:	497e      	ldr	r1, [pc, #504]	; (800c044 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800be4a:	4618      	mov	r0, r3
 800be4c:	f7f5 f954 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800be50:	2306      	movs	r3, #6
 800be52:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800be56:	f207 1263 	addw	r2, r7, #355	; 0x163
 800be5a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800be5e:	331c      	adds	r3, #28
 800be60:	4979      	ldr	r1, [pc, #484]	; (800c048 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800be62:	4618      	mov	r0, r3
 800be64:	f7f5 f970 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800be68:	2307      	movs	r3, #7
 800be6a:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800be6e:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800be72:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800be76:	3338      	adds	r3, #56	; 0x38
 800be78:	4974      	ldr	r1, [pc, #464]	; (800c04c <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800be7a:	4618      	mov	r0, r3
 800be7c:	f7f5 f964 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800be80:	2308      	movs	r3, #8
 800be82:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800be86:	f207 1265 	addw	r2, r7, #357	; 0x165
 800be8a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800be8e:	3354      	adds	r3, #84	; 0x54
 800be90:	496f      	ldr	r1, [pc, #444]	; (800c050 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800be92:	4618      	mov	r0, r3
 800be94:	f7f5 f930 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800be98:	2309      	movs	r3, #9
 800be9a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800be9e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800bea2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bea6:	3370      	adds	r3, #112	; 0x70
 800bea8:	496a      	ldr	r1, [pc, #424]	; (800c054 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800beaa:	4618      	mov	r0, r3
 800beac:	f7f5 f974 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800beb0:	2310      	movs	r3, #16
 800beb2:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800beb6:	f207 1267 	addw	r2, r7, #359	; 0x167
 800beba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bebe:	338c      	adds	r3, #140	; 0x8c
 800bec0:	4965      	ldr	r1, [pc, #404]	; (800c058 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800bec2:	4618      	mov	r0, r3
 800bec4:	f7f5 f990 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800bec8:	2311      	movs	r3, #17
 800beca:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800bece:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800bed2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bed6:	33a8      	adds	r3, #168	; 0xa8
 800bed8:	4960      	ldr	r1, [pc, #384]	; (800c05c <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800beda:	4618      	mov	r0, r3
 800bedc:	f7f5 f95c 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800bee0:	2312      	movs	r3, #18
 800bee2:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800bee6:	f207 1269 	addw	r2, r7, #361	; 0x169
 800beea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800beee:	33c4      	adds	r3, #196	; 0xc4
 800bef0:	495b      	ldr	r1, [pc, #364]	; (800c060 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800bef2:	4618      	mov	r0, r3
 800bef4:	f7f5 f900 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800bef8:	2313      	movs	r3, #19
 800befa:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800befe:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800bf02:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bf06:	33e0      	adds	r3, #224	; 0xe0
 800bf08:	4956      	ldr	r1, [pc, #344]	; (800c064 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800bf0a:	4618      	mov	r0, r3
 800bf0c:	f7f5 f91c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800bf10:	2314      	movs	r3, #20
 800bf12:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800bf16:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800bf1a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bf1e:	33fc      	adds	r3, #252	; 0xfc
 800bf20:	4951      	ldr	r1, [pc, #324]	; (800c068 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800bf22:	4618      	mov	r0, r3
 800bf24:	f7f5 f988 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800bf28:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bf2c:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800bf30:	601a      	str	r2, [r3, #0]
 800bf32:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bf36:	220a      	movs	r2, #10
 800bf38:	605a      	str	r2, [r3, #4]
 800bf3a:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bf3e:	4618      	mov	r0, r3
 800bf40:	f7f5 ffa9 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800bf44:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800bf48:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800bf4c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bf50:	9300      	str	r3, [sp, #0]
 800bf52:	460b      	mov	r3, r1
 800bf54:	ca06      	ldmia	r2, {r1, r2}
 800bf56:	4845      	ldr	r0, [pc, #276]	; (800c06c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800bf58:	f7f5 ffb5 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800bf5c:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800bf60:	4618      	mov	r0, r3
 800bf62:	f7f5 ffa4 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800bf66:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800bf6a:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800bf6e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800bf72:	429c      	cmp	r4, r3
 800bf74:	d004      	beq.n	800bf80 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800bf76:	3c1c      	subs	r4, #28
 800bf78:	4620      	mov	r0, r4
 800bf7a:	f7f5 f8b0 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800bf7e:	e7f6      	b.n	800bf6e <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800bf80:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800bf84:	2200      	movs	r2, #0
 800bf86:	601a      	str	r2, [r3, #0]
 800bf88:	605a      	str	r2, [r3, #4]
 800bf8a:	609a      	str	r2, [r3, #8]
 800bf8c:	233c      	movs	r3, #60	; 0x3c
 800bf8e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800bf92:	231b      	movs	r3, #27
 800bf94:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800bf98:	231c      	movs	r3, #28
 800bf9a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800bf9e:	233e      	movs	r3, #62	; 0x3e
 800bfa0:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800bfa4:	2319      	movs	r3, #25
 800bfa6:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800bfaa:	231a      	movs	r3, #26
 800bfac:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800bfb0:	233d      	movs	r3, #61	; 0x3d
 800bfb2:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800bfb6:	2318      	movs	r3, #24
 800bfb8:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800bfbc:	231d      	movs	r3, #29
 800bfbe:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800bfc2:	2321      	movs	r3, #33	; 0x21
 800bfc4:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800bfc8:	2317      	movs	r3, #23
 800bfca:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800bfce:	231e      	movs	r3, #30
 800bfd0:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800bfd4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800bfd8:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800bfdc:	2304      	movs	r3, #4
 800bfde:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800bfe2:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800bfe6:	4618      	mov	r0, r3
 800bfe8:	f7f5 ff9d 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800bfec:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800bff0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800bff4:	9300      	str	r3, [sp, #0]
 800bff6:	4613      	mov	r3, r2
 800bff8:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800bffc:	ca06      	ldmia	r2, {r1, r2}
 800bffe:	481c      	ldr	r0, [pc, #112]	; (800c070 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800c000:	f7f5 ffa9 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800c004:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800c008:	4618      	mov	r0, r3
 800c00a:	f7f5 ff98 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800c00e:	1d3b      	adds	r3, r7, #4
 800c010:	681b      	ldr	r3, [r3, #0]
 800c012:	2b00      	cmp	r3, #0
 800c014:	d10e      	bne.n	800c034 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800c016:	463b      	mov	r3, r7
 800c018:	681b      	ldr	r3, [r3, #0]
 800c01a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c01e:	4293      	cmp	r3, r2
 800c020:	d108      	bne.n	800c034 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800c022:	4813      	ldr	r0, [pc, #76]	; (800c070 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800c024:	f7fd fc06 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800c028:	4810      	ldr	r0, [pc, #64]	; (800c06c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800c02a:	f7fd fc10 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800c02e:	4804      	ldr	r0, [pc, #16]	; (800c040 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800c030:	f7fd fc1a 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800c034:	bf00      	nop
 800c036:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800c03a:	46bd      	mov	sp, r7
 800c03c:	bd90      	pop	{r4, r7, pc}
 800c03e:	bf00      	nop
 800c040:	20000254 	.word	0x20000254
 800c044:	080293d8 	.word	0x080293d8
 800c048:	080293e0 	.word	0x080293e0
 800c04c:	080293e8 	.word	0x080293e8
 800c050:	080293f0 	.word	0x080293f0
 800c054:	080293f8 	.word	0x080293f8
 800c058:	08029400 	.word	0x08029400
 800c05c:	08029404 	.word	0x08029404
 800c060:	0802940c 	.word	0x0802940c
 800c064:	08029414 	.word	0x08029414
 800c068:	0802941c 	.word	0x0802941c
 800c06c:	2000026c 	.word	0x2000026c
 800c070:	20000284 	.word	0x20000284

0800c074 <_GLOBAL__sub_I__ZN17Primal_expressionD2Ev>:
 800c074:	b580      	push	{r7, lr}
 800c076:	af00      	add	r7, sp, #0
 800c078:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c07c:	2001      	movs	r0, #1
 800c07e:	f7ff fe1d 	bl	800bcbc <_Z41__static_initialization_and_destruction_0ii>
 800c082:	bd80      	pop	{r7, pc}

0800c084 <_GLOBAL__sub_D__ZN17Primal_expressionD2Ev>:
 800c084:	b580      	push	{r7, lr}
 800c086:	af00      	add	r7, sp, #0
 800c088:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c08c:	2000      	movs	r0, #0
 800c08e:	f7ff fe15 	bl	800bcbc <_Z41__static_initialization_and_destruction_0ii>
 800c092:	bd80      	pop	{r7, pc}

0800c094 <_ZN21Expression_calculatorC1Ev>:
#include <Expression_calculator.h>

Expression_calculator::Expression_calculator()
 800c094:	b480      	push	{r7}
 800c096:	b083      	sub	sp, #12
 800c098:	af00      	add	r7, sp, #0
 800c09a:	6078      	str	r0, [r7, #4]
{

}
 800c09c:	687b      	ldr	r3, [r7, #4]
 800c09e:	4618      	mov	r0, r3
 800c0a0:	370c      	adds	r7, #12
 800c0a2:	46bd      	mov	sp, r7
 800c0a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0a8:	4770      	bx	lr
	...

0800c0ac <_ZN21Expression_calculator12get_instanceEv>:

Expression_calculator& Expression_calculator::get_instance()
{
 800c0ac:	b580      	push	{r7, lr}
 800c0ae:	af00      	add	r7, sp, #0
	static Expression_calculator instance;
 800c0b0:	4b10      	ldr	r3, [pc, #64]	; (800c0f4 <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800c0b2:	781b      	ldrb	r3, [r3, #0]
 800c0b4:	f3bf 8f5b 	dmb	ish
 800c0b8:	b2db      	uxtb	r3, r3
 800c0ba:	f003 0301 	and.w	r3, r3, #1
 800c0be:	2b00      	cmp	r3, #0
 800c0c0:	bf0c      	ite	eq
 800c0c2:	2301      	moveq	r3, #1
 800c0c4:	2300      	movne	r3, #0
 800c0c6:	b2db      	uxtb	r3, r3
 800c0c8:	2b00      	cmp	r3, #0
 800c0ca:	d010      	beq.n	800c0ee <_ZN21Expression_calculator12get_instanceEv+0x42>
 800c0cc:	4809      	ldr	r0, [pc, #36]	; (800c0f4 <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800c0ce:	f017 f8d7 	bl	8023280 <__cxa_guard_acquire>
 800c0d2:	4603      	mov	r3, r0
 800c0d4:	2b00      	cmp	r3, #0
 800c0d6:	bf14      	ite	ne
 800c0d8:	2301      	movne	r3, #1
 800c0da:	2300      	moveq	r3, #0
 800c0dc:	b2db      	uxtb	r3, r3
 800c0de:	2b00      	cmp	r3, #0
 800c0e0:	d005      	beq.n	800c0ee <_ZN21Expression_calculator12get_instanceEv+0x42>
 800c0e2:	4805      	ldr	r0, [pc, #20]	; (800c0f8 <_ZN21Expression_calculator12get_instanceEv+0x4c>)
 800c0e4:	f7ff ffd6 	bl	800c094 <_ZN21Expression_calculatorC1Ev>
 800c0e8:	4802      	ldr	r0, [pc, #8]	; (800c0f4 <_ZN21Expression_calculator12get_instanceEv+0x48>)
 800c0ea:	f017 f8d5 	bl	8023298 <__cxa_guard_release>
	return instance;
 800c0ee:	4b02      	ldr	r3, [pc, #8]	; (800c0f8 <_ZN21Expression_calculator12get_instanceEv+0x4c>)
}
 800c0f0:	4618      	mov	r0, r3
 800c0f2:	bd80      	pop	{r7, pc}
 800c0f4:	200002e8 	.word	0x200002e8
 800c0f8:	200002e4 	.word	0x200002e4

0800c0fc <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Copy_assign_base(_Copy_assign_base&&) = default;
 800c0fc:	b580      	push	{r7, lr}
 800c0fe:	b082      	sub	sp, #8
 800c100:	af00      	add	r7, sp, #0
 800c102:	6078      	str	r0, [r7, #4]
 800c104:	6039      	str	r1, [r7, #0]
 800c106:	687b      	ldr	r3, [r7, #4]
 800c108:	683a      	ldr	r2, [r7, #0]
 800c10a:	4611      	mov	r1, r2
 800c10c:	4618      	mov	r0, r3
 800c10e:	f000 fd79 	bl	800cc04 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800c112:	687b      	ldr	r3, [r7, #4]
 800c114:	4618      	mov	r0, r3
 800c116:	3708      	adds	r7, #8
 800c118:	46bd      	mov	sp, r7
 800c11a:	bd80      	pop	{r7, pc}

0800c11c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Move_assign_base(_Move_assign_base&&) = default;
 800c11c:	b580      	push	{r7, lr}
 800c11e:	b082      	sub	sp, #8
 800c120:	af00      	add	r7, sp, #0
 800c122:	6078      	str	r0, [r7, #4]
 800c124:	6039      	str	r1, [r7, #0]
 800c126:	687b      	ldr	r3, [r7, #4]
 800c128:	683a      	ldr	r2, [r7, #0]
 800c12a:	4611      	mov	r1, r2
 800c12c:	4618      	mov	r0, r3
 800c12e:	f7ff ffe5 	bl	800c0fc <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800c132:	687b      	ldr	r3, [r7, #4]
 800c134:	4618      	mov	r0, r3
 800c136:	3708      	adds	r7, #8
 800c138:	46bd      	mov	sp, r7
 800c13a:	bd80      	pop	{r7, pc}

0800c13c <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Variant_base(_Variant_base&&) = default;
 800c13c:	b580      	push	{r7, lr}
 800c13e:	b082      	sub	sp, #8
 800c140:	af00      	add	r7, sp, #0
 800c142:	6078      	str	r0, [r7, #4]
 800c144:	6039      	str	r1, [r7, #0]
 800c146:	687b      	ldr	r3, [r7, #4]
 800c148:	683a      	ldr	r2, [r7, #0]
 800c14a:	4611      	mov	r1, r2
 800c14c:	4618      	mov	r0, r3
 800c14e:	f7ff ffe5 	bl	800c11c <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	4618      	mov	r0, r3
 800c156:	3708      	adds	r7, #8
 800c158:	46bd      	mov	sp, r7
 800c15a:	bd80      	pop	{r7, pc}

0800c15c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1EOSA_>:
      variant(variant&&) = default;
 800c15c:	b580      	push	{r7, lr}
 800c15e:	b082      	sub	sp, #8
 800c160:	af00      	add	r7, sp, #0
 800c162:	6078      	str	r0, [r7, #4]
 800c164:	6039      	str	r1, [r7, #0]
 800c166:	687b      	ldr	r3, [r7, #4]
 800c168:	683a      	ldr	r2, [r7, #0]
 800c16a:	4611      	mov	r1, r2
 800c16c:	4618      	mov	r0, r3
 800c16e:	f7ff ffe5 	bl	800c13c <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>
 800c172:	687b      	ldr	r3, [r7, #4]
 800c174:	4618      	mov	r0, r3
 800c176:	3708      	adds	r7, #8
 800c178:	46bd      	mov	sp, r7
 800c17a:	bd80      	pop	{r7, pc}

0800c17c <_ZN6SymbolC1EOS_>:
 800c17c:	b580      	push	{r7, lr}
 800c17e:	b082      	sub	sp, #8
 800c180:	af00      	add	r7, sp, #0
 800c182:	6078      	str	r0, [r7, #4]
 800c184:	6039      	str	r1, [r7, #0]
 800c186:	683b      	ldr	r3, [r7, #0]
 800c188:	781a      	ldrb	r2, [r3, #0]
 800c18a:	687b      	ldr	r3, [r7, #4]
 800c18c:	701a      	strb	r2, [r3, #0]
 800c18e:	687b      	ldr	r3, [r7, #4]
 800c190:	1d1a      	adds	r2, r3, #4
 800c192:	683b      	ldr	r3, [r7, #0]
 800c194:	3304      	adds	r3, #4
 800c196:	4619      	mov	r1, r3
 800c198:	4610      	mov	r0, r2
 800c19a:	f7ff ffdf 	bl	800c15c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1EOSA_>
 800c19e:	687b      	ldr	r3, [r7, #4]
 800c1a0:	4618      	mov	r0, r3
 800c1a2:	3708      	adds	r7, #8
 800c1a4:	46bd      	mov	sp, r7
 800c1a6:	bd80      	pop	{r7, pc}

0800c1a8 <_ZN21Expression_calculator8evaluateEP10Expression>:

Symbol Expression_calculator::evaluate(Expression *exp)
{
 800c1a8:	b590      	push	{r4, r7, lr}
 800c1aa:	b0a1      	sub	sp, #132	; 0x84
 800c1ac:	af00      	add	r7, sp, #0
 800c1ae:	60f8      	str	r0, [r7, #12]
 800c1b0:	60b9      	str	r1, [r7, #8]
 800c1b2:	607a      	str	r2, [r7, #4]
	Position_counter::get_instance().line = exp->line;
 800c1b4:	687b      	ldr	r3, [r7, #4]
 800c1b6:	681c      	ldr	r4, [r3, #0]
 800c1b8:	f00a fb42 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 800c1bc:	4603      	mov	r3, r0
 800c1be:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = exp->position;
 800c1c0:	687b      	ldr	r3, [r7, #4]
 800c1c2:	685c      	ldr	r4, [r3, #4]
 800c1c4:	f00a fb3c 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 800c1c8:	4603      	mov	r3, r0
 800c1ca:	605c      	str	r4, [r3, #4]

	if (exp->and_exps.size() > 1)
 800c1cc:	687b      	ldr	r3, [r7, #4]
 800c1ce:	3308      	adds	r3, #8
 800c1d0:	4618      	mov	r0, r3
 800c1d2:	f000 fcfa 	bl	800cbca <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 800c1d6:	4603      	mov	r3, r0
 800c1d8:	2b01      	cmp	r3, #1
 800c1da:	bf8c      	ite	hi
 800c1dc:	2301      	movhi	r3, #1
 800c1de:	2300      	movls	r3, #0
 800c1e0:	b2db      	uxtb	r3, r3
 800c1e2:	2b00      	cmp	r3, #0
 800c1e4:	d059      	beq.n	800c29a <_ZN21Expression_calculator8evaluateEP10Expression+0xf2>
	{
		Symbol var = false; // potrzebna krótsza ścieżka
 800c1e6:	f107 0310 	add.w	r3, r7, #16
 800c1ea:	2100      	movs	r1, #0
 800c1ec:	4618      	mov	r0, r3
 800c1ee:	f00a fe31 	bl	8016e54 <_ZN6SymbolC1Eb>
		for (And_expression *and_exp : exp->and_exps)
 800c1f2:	687b      	ldr	r3, [r7, #4]
 800c1f4:	3308      	adds	r3, #8
 800c1f6:	67fb      	str	r3, [r7, #124]	; 0x7c
 800c1f8:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 800c1fa:	f7fe f98e 	bl	800a51a <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 800c1fe:	4603      	mov	r3, r0
 800c200:	637b      	str	r3, [r7, #52]	; 0x34
 800c202:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 800c204:	f7fe f999 	bl	800a53a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 800c208:	4603      	mov	r3, r0
 800c20a:	633b      	str	r3, [r7, #48]	; 0x30
 800c20c:	f107 0230 	add.w	r2, r7, #48	; 0x30
 800c210:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c214:	4611      	mov	r1, r2
 800c216:	4618      	mov	r0, r3
 800c218:	f7fe f9a0 	bl	800a55c <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800c21c:	4603      	mov	r3, r0
 800c21e:	2b00      	cmp	r3, #0
 800c220:	d02f      	beq.n	800c282 <_ZN21Expression_calculator8evaluateEP10Expression+0xda>
 800c222:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c226:	4618      	mov	r0, r3
 800c228:	f7fe f9c0 	bl	800a5ac <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800c22c:	4603      	mov	r3, r0
 800c22e:	681b      	ldr	r3, [r3, #0]
 800c230:	67bb      	str	r3, [r7, #120]	; 0x78
		{
			var = var || evaluate(and_exp);
 800c232:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c236:	6fba      	ldr	r2, [r7, #120]	; 0x78
 800c238:	68b9      	ldr	r1, [r7, #8]
 800c23a:	4618      	mov	r0, r3
 800c23c:	f000 f83e 	bl	800c2bc <_ZN21Expression_calculator8evaluateEP14And_expression>
 800c240:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c244:	f107 0258 	add.w	r2, r7, #88	; 0x58
 800c248:	f107 0110 	add.w	r1, r7, #16
 800c24c:	4618      	mov	r0, r3
 800c24e:	f00b f817 	bl	8017280 <_ZN6SymbolooES_>
 800c252:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c256:	f107 0310 	add.w	r3, r7, #16
 800c25a:	4611      	mov	r1, r2
 800c25c:	4618      	mov	r0, r3
 800c25e:	f7f5 f931 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c262:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c266:	4618      	mov	r0, r3
 800c268:	f7f5 f898 	bl	800139c <_ZN6SymbolD1Ev>
 800c26c:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c270:	4618      	mov	r0, r3
 800c272:	f7f5 f893 	bl	800139c <_ZN6SymbolD1Ev>
		for (And_expression *and_exp : exp->and_exps)
 800c276:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c27a:	4618      	mov	r0, r3
 800c27c:	f7fe f986 	bl	800a58c <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800c280:	e7c4      	b.n	800c20c <_ZN21Expression_calculator8evaluateEP10Expression+0x64>
		}
		return var;
 800c282:	f107 0310 	add.w	r3, r7, #16
 800c286:	4619      	mov	r1, r3
 800c288:	68f8      	ldr	r0, [r7, #12]
 800c28a:	f7ff ff77 	bl	800c17c <_ZN6SymbolC1EOS_>
		Symbol var = false; // potrzebna krótsza ścieżka
 800c28e:	f107 0310 	add.w	r3, r7, #16
 800c292:	4618      	mov	r0, r3
 800c294:	f7f5 f882 	bl	800139c <_ZN6SymbolD1Ev>
 800c298:	e00c      	b.n	800c2b4 <_ZN21Expression_calculator8evaluateEP10Expression+0x10c>

	}
	else
	{
		return evaluate(exp->and_exps[0]);
 800c29a:	687b      	ldr	r3, [r7, #4]
 800c29c:	3308      	adds	r3, #8
 800c29e:	2100      	movs	r1, #0
 800c2a0:	4618      	mov	r0, r3
 800c2a2:	f000 fcc5 	bl	800cc30 <_ZNSt6vectorIP14And_expressionSaIS1_EEixEj>
 800c2a6:	4603      	mov	r3, r0
 800c2a8:	681a      	ldr	r2, [r3, #0]
 800c2aa:	68fb      	ldr	r3, [r7, #12]
 800c2ac:	68b9      	ldr	r1, [r7, #8]
 800c2ae:	4618      	mov	r0, r3
 800c2b0:	f000 f804 	bl	800c2bc <_ZN21Expression_calculator8evaluateEP14And_expression>
	}
}
 800c2b4:	68f8      	ldr	r0, [r7, #12]
 800c2b6:	3784      	adds	r7, #132	; 0x84
 800c2b8:	46bd      	mov	sp, r7
 800c2ba:	bd90      	pop	{r4, r7, pc}

0800c2bc <_ZN21Expression_calculator8evaluateEP14And_expression>:

Symbol Expression_calculator::evaluate(And_expression *and_exp)
{
 800c2bc:	b580      	push	{r7, lr}
 800c2be:	b0a0      	sub	sp, #128	; 0x80
 800c2c0:	af00      	add	r7, sp, #0
 800c2c2:	60f8      	str	r0, [r7, #12]
 800c2c4:	60b9      	str	r1, [r7, #8]
 800c2c6:	607a      	str	r2, [r7, #4]
	if (and_exp->comp_exps.size() > 1)
 800c2c8:	687b      	ldr	r3, [r7, #4]
 800c2ca:	4618      	mov	r0, r3
 800c2cc:	f000 fcc0 	bl	800cc50 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 800c2d0:	4603      	mov	r3, r0
 800c2d2:	2b01      	cmp	r3, #1
 800c2d4:	bf8c      	ite	hi
 800c2d6:	2301      	movhi	r3, #1
 800c2d8:	2300      	movls	r3, #0
 800c2da:	b2db      	uxtb	r3, r3
 800c2dc:	2b00      	cmp	r3, #0
 800c2de:	d058      	beq.n	800c392 <_ZN21Expression_calculator8evaluateEP14And_expression+0xd6>
	{
		Symbol var = true;
 800c2e0:	f107 0310 	add.w	r3, r7, #16
 800c2e4:	2101      	movs	r1, #1
 800c2e6:	4618      	mov	r0, r3
 800c2e8:	f00a fdb4 	bl	8016e54 <_ZN6SymbolC1Eb>
		for (Compare_expression *comp_exp : and_exp->comp_exps)
 800c2ec:	687b      	ldr	r3, [r7, #4]
 800c2ee:	67fb      	str	r3, [r7, #124]	; 0x7c
 800c2f0:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 800c2f2:	f7fe f8a2 	bl	800a43a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 800c2f6:	4603      	mov	r3, r0
 800c2f8:	637b      	str	r3, [r7, #52]	; 0x34
 800c2fa:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 800c2fc:	f7fe f8ad 	bl	800a45a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 800c300:	4603      	mov	r3, r0
 800c302:	633b      	str	r3, [r7, #48]	; 0x30
 800c304:	f107 0230 	add.w	r2, r7, #48	; 0x30
 800c308:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c30c:	4611      	mov	r1, r2
 800c30e:	4618      	mov	r0, r3
 800c310:	f7fe f8b4 	bl	800a47c <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800c314:	4603      	mov	r3, r0
 800c316:	2b00      	cmp	r3, #0
 800c318:	d02f      	beq.n	800c37a <_ZN21Expression_calculator8evaluateEP14And_expression+0xbe>
 800c31a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c31e:	4618      	mov	r0, r3
 800c320:	f7fe f8d4 	bl	800a4cc <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 800c324:	4603      	mov	r3, r0
 800c326:	681b      	ldr	r3, [r3, #0]
 800c328:	67bb      	str	r3, [r7, #120]	; 0x78
		{
			var = var && evaluate(comp_exp);
 800c32a:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c32e:	6fba      	ldr	r2, [r7, #120]	; 0x78
 800c330:	68b9      	ldr	r1, [r7, #8]
 800c332:	4618      	mov	r0, r3
 800c334:	f000 f83e 	bl	800c3b4 <_ZN21Expression_calculator8evaluateEP18Compare_expression>
 800c338:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c33c:	f107 0258 	add.w	r2, r7, #88	; 0x58
 800c340:	f107 0110 	add.w	r1, r7, #16
 800c344:	4618      	mov	r0, r3
 800c346:	f00a ff51 	bl	80171ec <_ZN6SymbolaaES_>
 800c34a:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800c34e:	f107 0310 	add.w	r3, r7, #16
 800c352:	4611      	mov	r1, r2
 800c354:	4618      	mov	r0, r3
 800c356:	f7f5 f8b5 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c35a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800c35e:	4618      	mov	r0, r3
 800c360:	f7f5 f81c 	bl	800139c <_ZN6SymbolD1Ev>
 800c364:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800c368:	4618      	mov	r0, r3
 800c36a:	f7f5 f817 	bl	800139c <_ZN6SymbolD1Ev>
		for (Compare_expression *comp_exp : and_exp->comp_exps)
 800c36e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c372:	4618      	mov	r0, r3
 800c374:	f7fe f89a 	bl	800a4ac <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 800c378:	e7c4      	b.n	800c304 <_ZN21Expression_calculator8evaluateEP14And_expression+0x48>
		}
		return var;
 800c37a:	f107 0310 	add.w	r3, r7, #16
 800c37e:	4619      	mov	r1, r3
 800c380:	68f8      	ldr	r0, [r7, #12]
 800c382:	f7ff fefb 	bl	800c17c <_ZN6SymbolC1EOS_>
		Symbol var = true;
 800c386:	f107 0310 	add.w	r3, r7, #16
 800c38a:	4618      	mov	r0, r3
 800c38c:	f7f5 f806 	bl	800139c <_ZN6SymbolD1Ev>
 800c390:	e00b      	b.n	800c3aa <_ZN21Expression_calculator8evaluateEP14And_expression+0xee>
	}
	else
	{
		return evaluate(and_exp->comp_exps[0]);
 800c392:	687b      	ldr	r3, [r7, #4]
 800c394:	2100      	movs	r1, #0
 800c396:	4618      	mov	r0, r3
 800c398:	f000 fc6a 	bl	800cc70 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEixEj>
 800c39c:	4603      	mov	r3, r0
 800c39e:	681a      	ldr	r2, [r3, #0]
 800c3a0:	68fb      	ldr	r3, [r7, #12]
 800c3a2:	68b9      	ldr	r1, [r7, #8]
 800c3a4:	4618      	mov	r0, r3
 800c3a6:	f000 f805 	bl	800c3b4 <_ZN21Expression_calculator8evaluateEP18Compare_expression>
	}
}
 800c3aa:	68f8      	ldr	r0, [r7, #12]
 800c3ac:	3780      	adds	r7, #128	; 0x80
 800c3ae:	46bd      	mov	sp, r7
 800c3b0:	bd80      	pop	{r7, pc}
	...

0800c3b4 <_ZN21Expression_calculator8evaluateEP18Compare_expression>:

Symbol Expression_calculator::evaluate(Compare_expression *comp_exp)
{
 800c3b4:	b580      	push	{r7, lr}
 800c3b6:	b0b4      	sub	sp, #208	; 0xd0
 800c3b8:	af00      	add	r7, sp, #0
 800c3ba:	60f8      	str	r0, [r7, #12]
 800c3bc:	60b9      	str	r1, [r7, #8]
 800c3be:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(comp_exp->left_rel_exp);
 800c3c0:	687b      	ldr	r3, [r7, #4]
 800c3c2:	681a      	ldr	r2, [r3, #0]
 800c3c4:	68fb      	ldr	r3, [r7, #12]
 800c3c6:	68b9      	ldr	r1, [r7, #8]
 800c3c8:	4618      	mov	r0, r3
 800c3ca:	f000 f87f 	bl	800c4cc <_ZN21Expression_calculator8evaluateEP19Relation_expression>
	if (comp_exp->right_rel_exp)
 800c3ce:	687b      	ldr	r3, [r7, #4]
 800c3d0:	685b      	ldr	r3, [r3, #4]
 800c3d2:	2b00      	cmp	r3, #0
 800c3d4:	d072      	beq.n	800c4bc <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
	{
		switch (comp_exp->op)
 800c3d6:	687b      	ldr	r3, [r7, #4]
 800c3d8:	7a1b      	ldrb	r3, [r3, #8]
 800c3da:	2b01      	cmp	r3, #1
 800c3dc:	d002      	beq.n	800c3e4 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x30>
 800c3de:	2b02      	cmp	r3, #2
 800c3e0:	d021      	beq.n	800c426 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x72>
 800c3e2:	e04e      	b.n	800c482 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0xce>
		{
		case COMP_OP_EQUAL:
			var = var == evaluate(comp_exp->right_rel_exp);
 800c3e4:	687b      	ldr	r3, [r7, #4]
 800c3e6:	685a      	ldr	r2, [r3, #4]
 800c3e8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c3ec:	68b9      	ldr	r1, [r7, #8]
 800c3ee:	4618      	mov	r0, r3
 800c3f0:	f000 f86c 	bl	800c4cc <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 800c3f4:	f107 0314 	add.w	r3, r7, #20
 800c3f8:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c3fc:	68f9      	ldr	r1, [r7, #12]
 800c3fe:	4618      	mov	r0, r3
 800c400:	f00b f982 	bl	8017708 <_ZN6SymboleqES_>
 800c404:	f107 0314 	add.w	r3, r7, #20
 800c408:	4619      	mov	r1, r3
 800c40a:	68f8      	ldr	r0, [r7, #12]
 800c40c:	f7f5 f85a 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c410:	f107 0314 	add.w	r3, r7, #20
 800c414:	4618      	mov	r0, r3
 800c416:	f7f4 ffc1 	bl	800139c <_ZN6SymbolD1Ev>
 800c41a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c41e:	4618      	mov	r0, r3
 800c420:	f7f4 ffbc 	bl	800139c <_ZN6SymbolD1Ev>
			break;
 800c424:	e04a      	b.n	800c4bc <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		case COMP_OP_NOT_EQUAL:
			var = !(var == evaluate(comp_exp->right_rel_exp));
 800c426:	687b      	ldr	r3, [r7, #4]
 800c428:	685a      	ldr	r2, [r3, #4]
 800c42a:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c42e:	68b9      	ldr	r1, [r7, #8]
 800c430:	4618      	mov	r0, r3
 800c432:	f000 f84b 	bl	800c4cc <_ZN21Expression_calculator8evaluateEP19Relation_expression>
 800c436:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c43a:	f107 0294 	add.w	r2, r7, #148	; 0x94
 800c43e:	68f9      	ldr	r1, [r7, #12]
 800c440:	4618      	mov	r0, r3
 800c442:	f00b f961 	bl	8017708 <_ZN6SymboleqES_>
 800c446:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c44a:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c44e:	4611      	mov	r1, r2
 800c450:	4618      	mov	r0, r3
 800c452:	f00a ff5f 	bl	8017314 <_ZN6SymbolntEv>
 800c456:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c45a:	4619      	mov	r1, r3
 800c45c:	68f8      	ldr	r0, [r7, #12]
 800c45e:	f7f5 f831 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c462:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c466:	4618      	mov	r0, r3
 800c468:	f7f4 ff98 	bl	800139c <_ZN6SymbolD1Ev>
 800c46c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c470:	4618      	mov	r0, r3
 800c472:	f7f4 ff93 	bl	800139c <_ZN6SymbolD1Ev>
 800c476:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c47a:	4618      	mov	r0, r3
 800c47c:	f7f4 ff8e 	bl	800139c <_ZN6SymbolD1Ev>
			break;
 800c480:	e01c      	b.n	800c4bc <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
		default:
			Transmitter::report_error("compare operator");
 800c482:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c486:	4618      	mov	r0, r3
 800c488:	f016 ff1a 	bl	80232c0 <_ZNSaIcEC1Ev>
 800c48c:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 800c490:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c494:	490c      	ldr	r1, [pc, #48]	; (800c4c8 <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x114>)
 800c496:	4618      	mov	r0, r3
 800c498:	f7f5 fcab 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c49c:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c4a0:	4618      	mov	r0, r3
 800c4a2:	f00c f96f 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c4a6:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c4aa:	4618      	mov	r0, r3
 800c4ac:	f017 f999 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c4b0:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c4b4:	4618      	mov	r0, r3
 800c4b6:	f016 ff04 	bl	80232c2 <_ZNSaIcED1Ev>
		}
	}

	return var;
 800c4ba:	e7ff      	b.n	800c4bc <_ZN21Expression_calculator8evaluateEP18Compare_expression+0x108>
 800c4bc:	bf00      	nop
}
 800c4be:	68f8      	ldr	r0, [r7, #12]
 800c4c0:	37d0      	adds	r7, #208	; 0xd0
 800c4c2:	46bd      	mov	sp, r7
 800c4c4:	bd80      	pop	{r7, pc}
 800c4c6:	bf00      	nop
 800c4c8:	08029420 	.word	0x08029420

0800c4cc <_ZN21Expression_calculator8evaluateEP19Relation_expression>:

Symbol Expression_calculator::evaluate(Relation_expression *rel_exp)
{
 800c4cc:	b580      	push	{r7, lr}
 800c4ce:	b0b4      	sub	sp, #208	; 0xd0
 800c4d0:	af00      	add	r7, sp, #0
 800c4d2:	60f8      	str	r0, [r7, #12]
 800c4d4:	60b9      	str	r1, [r7, #8]
 800c4d6:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(rel_exp->left_sum_exp);
 800c4d8:	687b      	ldr	r3, [r7, #4]
 800c4da:	681a      	ldr	r2, [r3, #0]
 800c4dc:	f107 0314 	add.w	r3, r7, #20
 800c4e0:	68b9      	ldr	r1, [r7, #8]
 800c4e2:	4618      	mov	r0, r3
 800c4e4:	f000 f89c 	bl	800c620 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
	if (rel_exp->right_sum_exp)
 800c4e8:	687b      	ldr	r3, [r7, #4]
 800c4ea:	685b      	ldr	r3, [r3, #4]
 800c4ec:	2b00      	cmp	r3, #0
 800c4ee:	f000 8085 	beq.w	800c5fc <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x130>
	{
		switch (rel_exp->op)
 800c4f2:	687b      	ldr	r3, [r7, #4]
 800c4f4:	7a1b      	ldrb	r3, [r3, #8]
 800c4f6:	3b01      	subs	r3, #1
 800c4f8:	2b03      	cmp	r3, #3
 800c4fa:	d863      	bhi.n	800c5c4 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0xf8>
 800c4fc:	a201      	add	r2, pc, #4	; (adr r2, 800c504 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x38>)
 800c4fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c502:	bf00      	nop
 800c504:	0800c56d 	.word	0x0800c56d
 800c508:	0800c599 	.word	0x0800c599
 800c50c:	0800c515 	.word	0x0800c515
 800c510:	0800c541 	.word	0x0800c541
		{
		case REL_OP_GREATER:
			return var > evaluate(rel_exp->right_sum_exp);
 800c514:	687b      	ldr	r3, [r7, #4]
 800c516:	685a      	ldr	r2, [r3, #4]
 800c518:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c51c:	68b9      	ldr	r1, [r7, #8]
 800c51e:	4618      	mov	r0, r3
 800c520:	f000 f87e 	bl	800c620 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c524:	68fb      	ldr	r3, [r7, #12]
 800c526:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c52a:	f107 0114 	add.w	r1, r7, #20
 800c52e:	4618      	mov	r0, r3
 800c530:	f00a ff2a 	bl	8017388 <_ZN6SymbolgtES_>
 800c534:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c538:	4618      	mov	r0, r3
 800c53a:	f7f4 ff2f 	bl	800139c <_ZN6SymbolD1Ev>
 800c53e:	e063      	b.n	800c608 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_GREATER_EQUAL:
			return var >= evaluate(rel_exp->right_sum_exp);
 800c540:	687b      	ldr	r3, [r7, #4]
 800c542:	685a      	ldr	r2, [r3, #4]
 800c544:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c548:	68b9      	ldr	r1, [r7, #8]
 800c54a:	4618      	mov	r0, r3
 800c54c:	f000 f868 	bl	800c620 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c550:	68fb      	ldr	r3, [r7, #12]
 800c552:	f107 0254 	add.w	r2, r7, #84	; 0x54
 800c556:	f107 0114 	add.w	r1, r7, #20
 800c55a:	4618      	mov	r0, r3
 800c55c:	f00a ff84 	bl	8017468 <_ZN6SymbolgeES_>
 800c560:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c564:	4618      	mov	r0, r3
 800c566:	f7f4 ff19 	bl	800139c <_ZN6SymbolD1Ev>
 800c56a:	e04d      	b.n	800c608 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER:
			return var < evaluate(rel_exp->right_sum_exp);
 800c56c:	687b      	ldr	r3, [r7, #4]
 800c56e:	685a      	ldr	r2, [r3, #4]
 800c570:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c574:	68b9      	ldr	r1, [r7, #8]
 800c576:	4618      	mov	r0, r3
 800c578:	f000 f852 	bl	800c620 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c57c:	68fb      	ldr	r3, [r7, #12]
 800c57e:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c582:	f107 0114 	add.w	r1, r7, #20
 800c586:	4618      	mov	r0, r3
 800c588:	f00a ffde 	bl	8017548 <_ZN6SymbolltES_>
 800c58c:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c590:	4618      	mov	r0, r3
 800c592:	f7f4 ff03 	bl	800139c <_ZN6SymbolD1Ev>
 800c596:	e037      	b.n	800c608 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		case REL_OP_SMALLER_EQUAL:
			return var <= evaluate(rel_exp->right_sum_exp);
 800c598:	687b      	ldr	r3, [r7, #4]
 800c59a:	685a      	ldr	r2, [r3, #4]
 800c59c:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c5a0:	68b9      	ldr	r1, [r7, #8]
 800c5a2:	4618      	mov	r0, r3
 800c5a4:	f000 f83c 	bl	800c620 <_ZN21Expression_calculator8evaluateEP14Sum_expression>
 800c5a8:	68fb      	ldr	r3, [r7, #12]
 800c5aa:	f107 0294 	add.w	r2, r7, #148	; 0x94
 800c5ae:	f107 0114 	add.w	r1, r7, #20
 800c5b2:	4618      	mov	r0, r3
 800c5b4:	f00b f838 	bl	8017628 <_ZN6SymbolleES_>
 800c5b8:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c5bc:	4618      	mov	r0, r3
 800c5be:	f7f4 feed 	bl	800139c <_ZN6SymbolD1Ev>
 800c5c2:	e021      	b.n	800c608 <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x13c>
		default:
			Transmitter::report_error("relation operator");
 800c5c4:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c5c8:	4618      	mov	r0, r3
 800c5ca:	f016 fe79 	bl	80232c0 <_ZNSaIcEC1Ev>
 800c5ce:	f107 02cc 	add.w	r2, r7, #204	; 0xcc
 800c5d2:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c5d6:	4911      	ldr	r1, [pc, #68]	; (800c61c <_ZN21Expression_calculator8evaluateEP19Relation_expression+0x150>)
 800c5d8:	4618      	mov	r0, r3
 800c5da:	f7f5 fc0a 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c5de:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c5e2:	4618      	mov	r0, r3
 800c5e4:	f00c f8ce 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c5e8:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c5ec:	4618      	mov	r0, r3
 800c5ee:	f017 f8f8 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c5f2:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 800c5f6:	4618      	mov	r0, r3
 800c5f8:	f016 fe63 	bl	80232c2 <_ZNSaIcED1Ev>
		}
	}

	return var;
 800c5fc:	f107 0314 	add.w	r3, r7, #20
 800c600:	4619      	mov	r1, r3
 800c602:	68f8      	ldr	r0, [r7, #12]
 800c604:	f7ff fdba 	bl	800c17c <_ZN6SymbolC1EOS_>
	Symbol var = evaluate(rel_exp->left_sum_exp);
 800c608:	f107 0314 	add.w	r3, r7, #20
 800c60c:	4618      	mov	r0, r3
 800c60e:	f7f4 fec5 	bl	800139c <_ZN6SymbolD1Ev>
}
 800c612:	68f8      	ldr	r0, [r7, #12]
 800c614:	37d0      	adds	r7, #208	; 0xd0
 800c616:	46bd      	mov	sp, r7
 800c618:	bd80      	pop	{r7, pc}
 800c61a:	bf00      	nop
 800c61c:	08029434 	.word	0x08029434

0800c620 <_ZN21Expression_calculator8evaluateEP14Sum_expression>:

Symbol Expression_calculator::evaluate(Sum_expression *sum_exp)
{
 800c620:	b580      	push	{r7, lr}
 800c622:	b0a6      	sub	sp, #152	; 0x98
 800c624:	af00      	add	r7, sp, #0
 800c626:	60f8      	str	r0, [r7, #12]
 800c628:	60b9      	str	r1, [r7, #8]
 800c62a:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(sum_exp->mult_exps[0]);
 800c62c:	687b      	ldr	r3, [r7, #4]
 800c62e:	2100      	movs	r1, #0
 800c630:	4618      	mov	r0, r3
 800c632:	f000 fb2d 	bl	800cc90 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c636:	4603      	mov	r3, r0
 800c638:	681a      	ldr	r2, [r3, #0]
 800c63a:	68fb      	ldr	r3, [r7, #12]
 800c63c:	68b9      	ldr	r1, [r7, #8]
 800c63e:	4618      	mov	r0, r3
 800c640:	f000 f87e 	bl	800c740 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 800c644:	2300      	movs	r3, #0
 800c646:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800c64a:	687b      	ldr	r3, [r7, #4]
 800c64c:	330c      	adds	r3, #12
 800c64e:	4618      	mov	r0, r3
 800c650:	f000 fb2e 	bl	800ccb0 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 800c654:	4602      	mov	r2, r0
 800c656:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c65a:	4293      	cmp	r3, r2
 800c65c:	bf34      	ite	cc
 800c65e:	2301      	movcc	r3, #1
 800c660:	2300      	movcs	r3, #0
 800c662:	b2db      	uxtb	r3, r3
 800c664:	2b00      	cmp	r3, #0
 800c666:	d066      	beq.n	800c736 <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x116>
	{
		if (sum_exp->ops[i] == SUM_OP_PLUS)
 800c668:	687b      	ldr	r3, [r7, #4]
 800c66a:	330c      	adds	r3, #12
 800c66c:	f8d7 1094 	ldr.w	r1, [r7, #148]	; 0x94
 800c670:	4618      	mov	r0, r3
 800c672:	f000 fb2c 	bl	800ccce <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>
 800c676:	4603      	mov	r3, r0
 800c678:	781b      	ldrb	r3, [r3, #0]
 800c67a:	2b00      	cmp	r3, #0
 800c67c:	bf0c      	ite	eq
 800c67e:	2301      	moveq	r3, #1
 800c680:	2300      	movne	r3, #0
 800c682:	b2db      	uxtb	r3, r3
 800c684:	2b00      	cmp	r3, #0
 800c686:	d028      	beq.n	800c6da <_ZN21Expression_calculator8evaluateEP14Sum_expression+0xba>
		{
			var = var + evaluate(sum_exp->mult_exps[i + 1]);
 800c688:	687a      	ldr	r2, [r7, #4]
 800c68a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c68e:	3301      	adds	r3, #1
 800c690:	4619      	mov	r1, r3
 800c692:	4610      	mov	r0, r2
 800c694:	f000 fafc 	bl	800cc90 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c698:	4603      	mov	r3, r0
 800c69a:	681a      	ldr	r2, [r3, #0]
 800c69c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c6a0:	68b9      	ldr	r1, [r7, #8]
 800c6a2:	4618      	mov	r0, r3
 800c6a4:	f000 f84c 	bl	800c740 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 800c6a8:	f107 0314 	add.w	r3, r7, #20
 800c6ac:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c6b0:	68f9      	ldr	r1, [r7, #12]
 800c6b2:	4618      	mov	r0, r3
 800c6b4:	f00a fc8e 	bl	8016fd4 <_ZN6SymbolplES_>
 800c6b8:	f107 0314 	add.w	r3, r7, #20
 800c6bc:	4619      	mov	r1, r3
 800c6be:	68f8      	ldr	r0, [r7, #12]
 800c6c0:	f7f4 ff00 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c6c4:	f107 0314 	add.w	r3, r7, #20
 800c6c8:	4618      	mov	r0, r3
 800c6ca:	f7f4 fe67 	bl	800139c <_ZN6SymbolD1Ev>
 800c6ce:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c6d2:	4618      	mov	r0, r3
 800c6d4:	f7f4 fe62 	bl	800139c <_ZN6SymbolD1Ev>
 800c6d8:	e027      	b.n	800c72a <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x10a>
		}
		else
		{
			var = var - evaluate(sum_exp->mult_exps[i + 1]);
 800c6da:	687a      	ldr	r2, [r7, #4]
 800c6dc:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c6e0:	3301      	adds	r3, #1
 800c6e2:	4619      	mov	r1, r3
 800c6e4:	4610      	mov	r0, r2
 800c6e6:	f000 fad3 	bl	800cc90 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>
 800c6ea:	4603      	mov	r3, r0
 800c6ec:	681a      	ldr	r2, [r3, #0]
 800c6ee:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c6f2:	68b9      	ldr	r1, [r7, #8]
 800c6f4:	4618      	mov	r0, r3
 800c6f6:	f000 f823 	bl	800c740 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>
 800c6fa:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c6fe:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c702:	68f9      	ldr	r1, [r7, #12]
 800c704:	4618      	mov	r0, r3
 800c706:	f00a fd09 	bl	801711c <_ZN6SymbolmiES_>
 800c70a:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c70e:	4619      	mov	r1, r3
 800c710:	68f8      	ldr	r0, [r7, #12]
 800c712:	f7f4 fed7 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c716:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c71a:	4618      	mov	r0, r3
 800c71c:	f7f4 fe3e 	bl	800139c <_ZN6SymbolD1Ev>
 800c720:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c724:	4618      	mov	r0, r3
 800c726:	f7f4 fe39 	bl	800139c <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < sum_exp->ops.size(); ++i)
 800c72a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800c72e:	3301      	adds	r3, #1
 800c730:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800c734:	e789      	b.n	800c64a <_ZN21Expression_calculator8evaluateEP14Sum_expression+0x2a>
		}
	}
	return var;
 800c736:	bf00      	nop
}
 800c738:	68f8      	ldr	r0, [r7, #12]
 800c73a:	3798      	adds	r7, #152	; 0x98
 800c73c:	46bd      	mov	sp, r7
 800c73e:	bd80      	pop	{r7, pc}

0800c740 <_ZN21Expression_calculator8evaluateEP19Multiply_expression>:

Symbol Expression_calculator::evaluate(Multiply_expression *mult_exp)
{
 800c740:	b580      	push	{r7, lr}
 800c742:	b0b6      	sub	sp, #216	; 0xd8
 800c744:	af00      	add	r7, sp, #0
 800c746:	60f8      	str	r0, [r7, #12]
 800c748:	60b9      	str	r1, [r7, #8]
 800c74a:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(mult_exp->pow_exps[0]);
 800c74c:	687b      	ldr	r3, [r7, #4]
 800c74e:	2100      	movs	r1, #0
 800c750:	4618      	mov	r0, r3
 800c752:	f000 facb 	bl	800ccec <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c756:	4603      	mov	r3, r0
 800c758:	681a      	ldr	r2, [r3, #0]
 800c75a:	68fb      	ldr	r3, [r7, #12]
 800c75c:	68b9      	ldr	r1, [r7, #8]
 800c75e:	4618      	mov	r0, r3
 800c760:	f000 f8b8 	bl	800c8d4 <_ZN21Expression_calculator8evaluateEP16Power_expression>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 800c764:	2300      	movs	r3, #0
 800c766:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c76a:	687b      	ldr	r3, [r7, #4]
 800c76c:	330c      	adds	r3, #12
 800c76e:	4618      	mov	r0, r3
 800c770:	f000 facc 	bl	800cd0c <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 800c774:	4602      	mov	r2, r0
 800c776:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c77a:	4293      	cmp	r3, r2
 800c77c:	bf34      	ite	cc
 800c77e:	2301      	movcc	r3, #1
 800c780:	2300      	movcs	r3, #0
 800c782:	b2db      	uxtb	r3, r3
 800c784:	2b00      	cmp	r3, #0
 800c786:	f000 80a0 	beq.w	800c8ca <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x18a>
	{
		if (mult_exp->ops[i] == MULT_OP_MULTIPLY)
 800c78a:	687b      	ldr	r3, [r7, #4]
 800c78c:	330c      	adds	r3, #12
 800c78e:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800c792:	4618      	mov	r0, r3
 800c794:	f000 fac9 	bl	800cd2a <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 800c798:	4603      	mov	r3, r0
 800c79a:	781b      	ldrb	r3, [r3, #0]
 800c79c:	2b01      	cmp	r3, #1
 800c79e:	bf0c      	ite	eq
 800c7a0:	2301      	moveq	r3, #1
 800c7a2:	2300      	movne	r3, #0
 800c7a4:	b2db      	uxtb	r3, r3
 800c7a6:	2b00      	cmp	r3, #0
 800c7a8:	d028      	beq.n	800c7fc <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0xbc>
		{
			var = var * evaluate(mult_exp->pow_exps[i + 1]);
 800c7aa:	687a      	ldr	r2, [r7, #4]
 800c7ac:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c7b0:	3301      	adds	r3, #1
 800c7b2:	4619      	mov	r1, r3
 800c7b4:	4610      	mov	r0, r2
 800c7b6:	f000 fa99 	bl	800ccec <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c7ba:	4603      	mov	r3, r0
 800c7bc:	681a      	ldr	r2, [r3, #0]
 800c7be:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c7c2:	68b9      	ldr	r1, [r7, #8]
 800c7c4:	4618      	mov	r0, r3
 800c7c6:	f000 f885 	bl	800c8d4 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c7ca:	f107 0314 	add.w	r3, r7, #20
 800c7ce:	f107 0234 	add.w	r2, r7, #52	; 0x34
 800c7d2:	68f9      	ldr	r1, [r7, #12]
 800c7d4:	4618      	mov	r0, r3
 800c7d6:	f00b f873 	bl	80178c0 <_ZN6SymbolmlES_>
 800c7da:	f107 0314 	add.w	r3, r7, #20
 800c7de:	4619      	mov	r1, r3
 800c7e0:	68f8      	ldr	r0, [r7, #12]
 800c7e2:	f7f4 fe6f 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c7e6:	f107 0314 	add.w	r3, r7, #20
 800c7ea:	4618      	mov	r0, r3
 800c7ec:	f7f4 fdd6 	bl	800139c <_ZN6SymbolD1Ev>
 800c7f0:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800c7f4:	4618      	mov	r0, r3
 800c7f6:	f7f4 fdd1 	bl	800139c <_ZN6SymbolD1Ev>
 800c7fa:	e060      	b.n	800c8be <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else if (mult_exp->ops[i] == MULT_OP_DIVIDE)
 800c7fc:	687b      	ldr	r3, [r7, #4]
 800c7fe:	330c      	adds	r3, #12
 800c800:	f8d7 10d4 	ldr.w	r1, [r7, #212]	; 0xd4
 800c804:	4618      	mov	r0, r3
 800c806:	f000 fa90 	bl	800cd2a <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>
 800c80a:	4603      	mov	r3, r0
 800c80c:	781b      	ldrb	r3, [r3, #0]
 800c80e:	2b02      	cmp	r3, #2
 800c810:	bf0c      	ite	eq
 800c812:	2301      	moveq	r3, #1
 800c814:	2300      	movne	r3, #0
 800c816:	b2db      	uxtb	r3, r3
 800c818:	2b00      	cmp	r3, #0
 800c81a:	d028      	beq.n	800c86e <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x12e>
		{
			var = var / evaluate(mult_exp->pow_exps[i + 1]);
 800c81c:	687a      	ldr	r2, [r7, #4]
 800c81e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c822:	3301      	adds	r3, #1
 800c824:	4619      	mov	r1, r3
 800c826:	4610      	mov	r0, r2
 800c828:	f000 fa60 	bl	800ccec <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c82c:	4603      	mov	r3, r0
 800c82e:	681a      	ldr	r2, [r3, #0]
 800c830:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c834:	68b9      	ldr	r1, [r7, #8]
 800c836:	4618      	mov	r0, r3
 800c838:	f000 f84c 	bl	800c8d4 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c83c:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c840:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800c844:	68f9      	ldr	r1, [r7, #12]
 800c846:	4618      	mov	r0, r3
 800c848:	f00b f8a2 	bl	8017990 <_ZN6SymboldvES_>
 800c84c:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c850:	4619      	mov	r1, r3
 800c852:	68f8      	ldr	r0, [r7, #12]
 800c854:	f7f4 fe36 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c858:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800c85c:	4618      	mov	r0, r3
 800c85e:	f7f4 fd9d 	bl	800139c <_ZN6SymbolD1Ev>
 800c862:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800c866:	4618      	mov	r0, r3
 800c868:	f7f4 fd98 	bl	800139c <_ZN6SymbolD1Ev>
 800c86c:	e027      	b.n	800c8be <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x17e>
		}
		else
		{
			var = var % evaluate(mult_exp->pow_exps[i + 1]);
 800c86e:	687a      	ldr	r2, [r7, #4]
 800c870:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c874:	3301      	adds	r3, #1
 800c876:	4619      	mov	r1, r3
 800c878:	4610      	mov	r0, r2
 800c87a:	f000 fa37 	bl	800ccec <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>
 800c87e:	4603      	mov	r3, r0
 800c880:	681a      	ldr	r2, [r3, #0]
 800c882:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c886:	68b9      	ldr	r1, [r7, #8]
 800c888:	4618      	mov	r0, r3
 800c88a:	f000 f823 	bl	800c8d4 <_ZN21Expression_calculator8evaluateEP16Power_expression>
 800c88e:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c892:	f107 02b4 	add.w	r2, r7, #180	; 0xb4
 800c896:	68f9      	ldr	r1, [r7, #12]
 800c898:	4618      	mov	r0, r3
 800c89a:	f00b f8e1 	bl	8017a60 <_ZN6SymbolrmES_>
 800c89e:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c8a2:	4619      	mov	r1, r3
 800c8a4:	68f8      	ldr	r0, [r7, #12]
 800c8a6:	f7f4 fe0d 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c8aa:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800c8ae:	4618      	mov	r0, r3
 800c8b0:	f7f4 fd74 	bl	800139c <_ZN6SymbolD1Ev>
 800c8b4:	f107 03b4 	add.w	r3, r7, #180	; 0xb4
 800c8b8:	4618      	mov	r0, r3
 800c8ba:	f7f4 fd6f 	bl	800139c <_ZN6SymbolD1Ev>
	for (unsigned int i = 0; i < mult_exp->ops.size(); ++i)
 800c8be:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800c8c2:	3301      	adds	r3, #1
 800c8c4:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800c8c8:	e74f      	b.n	800c76a <_ZN21Expression_calculator8evaluateEP19Multiply_expression+0x2a>
		}
	}
	return var;
 800c8ca:	bf00      	nop
}
 800c8cc:	68f8      	ldr	r0, [r7, #12]
 800c8ce:	37d8      	adds	r7, #216	; 0xd8
 800c8d0:	46bd      	mov	sp, r7
 800c8d2:	bd80      	pop	{r7, pc}

0800c8d4 <_ZN21Expression_calculator8evaluateEP16Power_expression>:

Symbol Expression_calculator::evaluate(Power_expression *pow_exp)
{
 800c8d4:	b580      	push	{r7, lr}
 800c8d6:	b09c      	sub	sp, #112	; 0x70
 800c8d8:	af00      	add	r7, sp, #0
 800c8da:	60f8      	str	r0, [r7, #12]
 800c8dc:	60b9      	str	r1, [r7, #8]
 800c8de:	607a      	str	r2, [r7, #4]
	Symbol var = evaluate(pow_exp->left_un_exp);
 800c8e0:	687b      	ldr	r3, [r7, #4]
 800c8e2:	681a      	ldr	r2, [r3, #0]
 800c8e4:	68fb      	ldr	r3, [r7, #12]
 800c8e6:	68b9      	ldr	r1, [r7, #8]
 800c8e8:	4618      	mov	r0, r3
 800c8ea:	f000 f836 	bl	800c95a <_ZN21Expression_calculator8evaluateEP16Unary_expression>

	if (pow_exp->right_un_exp)
 800c8ee:	687b      	ldr	r3, [r7, #4]
 800c8f0:	685b      	ldr	r3, [r3, #4]
 800c8f2:	2b00      	cmp	r3, #0
 800c8f4:	d02c      	beq.n	800c950 <_ZN21Expression_calculator8evaluateEP16Power_expression+0x7c>
	{
		Symbol temp = evaluate(pow_exp->right_un_exp);
 800c8f6:	687b      	ldr	r3, [r7, #4]
 800c8f8:	685a      	ldr	r2, [r3, #4]
 800c8fa:	f107 0310 	add.w	r3, r7, #16
 800c8fe:	68b9      	ldr	r1, [r7, #8]
 800c900:	4618      	mov	r0, r3
 800c902:	f000 f82a 	bl	800c95a <_ZN21Expression_calculator8evaluateEP16Unary_expression>
		var = var ^ temp;
 800c906:	f107 0210 	add.w	r2, r7, #16
 800c90a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c90e:	4611      	mov	r1, r2
 800c910:	4618      	mov	r0, r3
 800c912:	f7f4 fda1 	bl	8001458 <_ZN6SymbolC1ERKS_>
 800c916:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c91a:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800c91e:	68f9      	ldr	r1, [r7, #12]
 800c920:	4618      	mov	r0, r3
 800c922:	f00b f8f5 	bl	8017b10 <_ZN6SymboleoES_>
 800c926:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c92a:	4619      	mov	r1, r3
 800c92c:	68f8      	ldr	r0, [r7, #12]
 800c92e:	f7f4 fdc9 	bl	80014c4 <_ZN6SymbolaSEOS_>
 800c932:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c936:	4618      	mov	r0, r3
 800c938:	f7f4 fd30 	bl	800139c <_ZN6SymbolD1Ev>
 800c93c:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800c940:	4618      	mov	r0, r3
 800c942:	f7f4 fd2b 	bl	800139c <_ZN6SymbolD1Ev>
		Symbol temp = evaluate(pow_exp->right_un_exp);
 800c946:	f107 0310 	add.w	r3, r7, #16
 800c94a:	4618      	mov	r0, r3
 800c94c:	f7f4 fd26 	bl	800139c <_ZN6SymbolD1Ev>
	}

	return var;
 800c950:	bf00      	nop
}
 800c952:	68f8      	ldr	r0, [r7, #12]
 800c954:	3770      	adds	r7, #112	; 0x70
 800c956:	46bd      	mov	sp, r7
 800c958:	bd80      	pop	{r7, pc}

0800c95a <_ZN21Expression_calculator8evaluateEP16Unary_expression>:

Symbol Expression_calculator::evaluate(Unary_expression *un_exp)
{
 800c95a:	b580      	push	{r7, lr}
 800c95c:	b094      	sub	sp, #80	; 0x50
 800c95e:	af00      	add	r7, sp, #0
 800c960:	60f8      	str	r0, [r7, #12]
 800c962:	60b9      	str	r1, [r7, #8]
 800c964:	607a      	str	r2, [r7, #4]
	switch (un_exp->op)
 800c966:	687b      	ldr	r3, [r7, #4]
 800c968:	791b      	ldrb	r3, [r3, #4]
 800c96a:	2b00      	cmp	r3, #0
 800c96c:	d002      	beq.n	800c974 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x1a>
 800c96e:	2b01      	cmp	r3, #1
 800c970:	d008      	beq.n	800c984 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x2a>
 800c972:	e01c      	b.n	800c9ae <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x54>
	{
	case UN_OP_NONE:
		return evaluate(un_exp->prior_exp);
 800c974:	687b      	ldr	r3, [r7, #4]
 800c976:	681a      	ldr	r2, [r3, #0]
 800c978:	68fb      	ldr	r3, [r7, #12]
 800c97a:	68b9      	ldr	r1, [r7, #8]
 800c97c:	4618      	mov	r0, r3
 800c97e:	f000 f82e 	bl	800c9de <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c982:	e028      	b.n	800c9d6 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	case UN_OP_MINUS:
		return -evaluate(un_exp->prior_exp);
 800c984:	687b      	ldr	r3, [r7, #4]
 800c986:	681a      	ldr	r2, [r3, #0]
 800c988:	f107 0310 	add.w	r3, r7, #16
 800c98c:	68b9      	ldr	r1, [r7, #8]
 800c98e:	4618      	mov	r0, r3
 800c990:	f000 f825 	bl	800c9de <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c994:	68fb      	ldr	r3, [r7, #12]
 800c996:	f107 0210 	add.w	r2, r7, #16
 800c99a:	4611      	mov	r1, r2
 800c99c:	4618      	mov	r0, r3
 800c99e:	f00a ff3f 	bl	8017820 <_ZN6SymbolngEv>
 800c9a2:	f107 0310 	add.w	r3, r7, #16
 800c9a6:	4618      	mov	r0, r3
 800c9a8:	f7f4 fcf8 	bl	800139c <_ZN6SymbolD1Ev>
 800c9ac:	e013      	b.n	800c9d6 <_ZN21Expression_calculator8evaluateEP16Unary_expression+0x7c>
	default:
		return !evaluate(un_exp->prior_exp);
 800c9ae:	687b      	ldr	r3, [r7, #4]
 800c9b0:	681a      	ldr	r2, [r3, #0]
 800c9b2:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c9b6:	68b9      	ldr	r1, [r7, #8]
 800c9b8:	4618      	mov	r0, r3
 800c9ba:	f000 f810 	bl	800c9de <_ZN21Expression_calculator8evaluateEP19Priority_expression>
 800c9be:	68fb      	ldr	r3, [r7, #12]
 800c9c0:	f107 0230 	add.w	r2, r7, #48	; 0x30
 800c9c4:	4611      	mov	r1, r2
 800c9c6:	4618      	mov	r0, r3
 800c9c8:	f00a fca4 	bl	8017314 <_ZN6SymbolntEv>
 800c9cc:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c9d0:	4618      	mov	r0, r3
 800c9d2:	f7f4 fce3 	bl	800139c <_ZN6SymbolD1Ev>
	}
}
 800c9d6:	68f8      	ldr	r0, [r7, #12]
 800c9d8:	3750      	adds	r7, #80	; 0x50
 800c9da:	46bd      	mov	sp, r7
 800c9dc:	bd80      	pop	{r7, pc}

0800c9de <_ZN21Expression_calculator8evaluateEP19Priority_expression>:

Symbol Expression_calculator::evaluate(Priority_expression *prior_exp)
{
 800c9de:	b580      	push	{r7, lr}
 800c9e0:	b086      	sub	sp, #24
 800c9e2:	af00      	add	r7, sp, #0
 800c9e4:	60f8      	str	r0, [r7, #12]
 800c9e6:	60b9      	str	r1, [r7, #8]
 800c9e8:	607a      	str	r2, [r7, #4]
	if (std::holds_alternative<Expression*>(prior_exp->exp))
 800c9ea:	687b      	ldr	r3, [r7, #4]
 800c9ec:	4618      	mov	r0, r3
 800c9ee:	f7fd fbca 	bl	800a186 <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 800c9f2:	4603      	mov	r3, r0
 800c9f4:	2b00      	cmp	r3, #0
 800c9f6:	d00d      	beq.n	800ca14 <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x36>
	{
		Expression *exp = std::get<Expression*>(prior_exp->exp);
 800c9f8:	687b      	ldr	r3, [r7, #4]
 800c9fa:	4618      	mov	r0, r3
 800c9fc:	f7fd fbd4 	bl	800a1a8 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 800ca00:	4603      	mov	r3, r0
 800ca02:	681b      	ldr	r3, [r3, #0]
 800ca04:	613b      	str	r3, [r7, #16]
		return evaluate(exp);
 800ca06:	68fb      	ldr	r3, [r7, #12]
 800ca08:	693a      	ldr	r2, [r7, #16]
 800ca0a:	68b9      	ldr	r1, [r7, #8]
 800ca0c:	4618      	mov	r0, r3
 800ca0e:	f7ff fbcb 	bl	800c1a8 <_ZN21Expression_calculator8evaluateEP10Expression>
 800ca12:	e00c      	b.n	800ca2e <_ZN21Expression_calculator8evaluateEP19Priority_expression+0x50>
	}
	else
	{
		Primal_expression *exp = std::get<Primal_expression*>(prior_exp->exp);
 800ca14:	687b      	ldr	r3, [r7, #4]
 800ca16:	4618      	mov	r0, r3
 800ca18:	f7fd fbd2 	bl	800a1c0 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 800ca1c:	4603      	mov	r3, r0
 800ca1e:	681b      	ldr	r3, [r3, #0]
 800ca20:	617b      	str	r3, [r7, #20]
		return evaluate(exp);
 800ca22:	68fb      	ldr	r3, [r7, #12]
 800ca24:	697a      	ldr	r2, [r7, #20]
 800ca26:	68b9      	ldr	r1, [r7, #8]
 800ca28:	4618      	mov	r0, r3
 800ca2a:	f000 f805 	bl	800ca38 <_ZN21Expression_calculator8evaluateEP17Primal_expression>
	}
}
 800ca2e:	68f8      	ldr	r0, [r7, #12]
 800ca30:	3718      	adds	r7, #24
 800ca32:	46bd      	mov	sp, r7
 800ca34:	bd80      	pop	{r7, pc}
	...

0800ca38 <_ZN21Expression_calculator8evaluateEP17Primal_expression>:

Symbol Expression_calculator::evaluate(Primal_expression *primal_exp)
{
 800ca38:	b580      	push	{r7, lr}
 800ca3a:	b08a      	sub	sp, #40	; 0x28
 800ca3c:	af00      	add	r7, sp, #0
 800ca3e:	60f8      	str	r0, [r7, #12]
 800ca40:	60b9      	str	r1, [r7, #8]
 800ca42:	607a      	str	r2, [r7, #4]
	switch (primal_exp->type)
 800ca44:	687b      	ldr	r3, [r7, #4]
 800ca46:	781b      	ldrb	r3, [r3, #0]
 800ca48:	2b05      	cmp	r3, #5
 800ca4a:	d867      	bhi.n	800cb1c <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xe4>
 800ca4c:	a201      	add	r2, pc, #4	; (adr r2, 800ca54 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0x1c>)
 800ca4e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ca52:	bf00      	nop
 800ca54:	0800cad1 	.word	0x0800cad1
 800ca58:	0800ca6d 	.word	0x0800ca6d
 800ca5c:	0800ca85 	.word	0x0800ca85
 800ca60:	0800caa1 	.word	0x0800caa1
 800ca64:	0800cae9 	.word	0x0800cae9
 800ca68:	0800cb03 	.word	0x0800cb03
	{
	case PRIMAL_INT:
		return std::get<int>(primal_exp->content);
 800ca6c:	687b      	ldr	r3, [r7, #4]
 800ca6e:	3304      	adds	r3, #4
 800ca70:	4618      	mov	r0, r3
 800ca72:	f000 f969 	bl	800cd48 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800ca76:	4603      	mov	r3, r0
 800ca78:	681b      	ldr	r3, [r3, #0]
 800ca7a:	4619      	mov	r1, r3
 800ca7c:	68f8      	ldr	r0, [r7, #12]
 800ca7e:	f00a f995 	bl	8016dac <_ZN6SymbolC1Ei>
 800ca82:	e04f      	b.n	800cb24 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FLOAT:
		return std::get<float>(primal_exp->content);
 800ca84:	687b      	ldr	r3, [r7, #4]
 800ca86:	3304      	adds	r3, #4
 800ca88:	4618      	mov	r0, r3
 800ca8a:	f000 f969 	bl	800cd60 <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800ca8e:	4603      	mov	r3, r0
 800ca90:	edd3 7a00 	vldr	s15, [r3]
 800ca94:	eeb0 0a67 	vmov.f32	s0, s15
 800ca98:	68f8      	ldr	r0, [r7, #12]
 800ca9a:	f00a f9a0 	bl	8016dde <_ZN6SymbolC1Ef>
 800ca9e:	e041      	b.n	800cb24 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_STRING:
		return std::get<std::string>(primal_exp->content);
 800caa0:	687b      	ldr	r3, [r7, #4]
 800caa2:	3304      	adds	r3, #4
 800caa4:	4618      	mov	r0, r3
 800caa6:	f000 f967 	bl	800cd78 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800caaa:	4602      	mov	r2, r0
 800caac:	f107 0310 	add.w	r3, r7, #16
 800cab0:	4611      	mov	r1, r2
 800cab2:	4618      	mov	r0, r3
 800cab4:	f017 f864 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800cab8:	f107 0310 	add.w	r3, r7, #16
 800cabc:	4619      	mov	r1, r3
 800cabe:	68f8      	ldr	r0, [r7, #12]
 800cac0:	f00a f9e2 	bl	8016e88 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800cac4:	f107 0310 	add.w	r3, r7, #16
 800cac8:	4618      	mov	r0, r3
 800caca:	f016 fe8a 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800cace:	e029      	b.n	800cb24 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_BOOL:
		return std::get<bool>(primal_exp->content);
 800cad0:	687b      	ldr	r3, [r7, #4]
 800cad2:	3304      	adds	r3, #4
 800cad4:	4618      	mov	r0, r3
 800cad6:	f000 f95b 	bl	800cd90 <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 800cada:	4603      	mov	r3, r0
 800cadc:	781b      	ldrb	r3, [r3, #0]
 800cade:	4619      	mov	r1, r3
 800cae0:	68f8      	ldr	r0, [r7, #12]
 800cae2:	f00a f9b7 	bl	8016e54 <_ZN6SymbolC1Eb>
 800cae6:	e01d      	b.n	800cb24 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_VARIABLE:
		return evaluate(std::get<Variable*>(primal_exp->content));
 800cae8:	687b      	ldr	r3, [r7, #4]
 800caea:	3304      	adds	r3, #4
 800caec:	4618      	mov	r0, r3
 800caee:	f7fd fb0e 	bl	800a10e <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 800caf2:	4603      	mov	r3, r0
 800caf4:	681a      	ldr	r2, [r3, #0]
 800caf6:	68fb      	ldr	r3, [r7, #12]
 800caf8:	68b9      	ldr	r1, [r7, #8]
 800cafa:	4618      	mov	r0, r3
 800cafc:	f000 f816 	bl	800cb2c <_ZN21Expression_calculator8evaluateEP8Variable>
 800cb00:	e010      	b.n	800cb24 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	case PRIMAL_FUNCTION_CALL:
		return Function_handler::run_function(
				std::get<Function_call*>(primal_exp->content));
 800cb02:	687b      	ldr	r3, [r7, #4]
 800cb04:	3304      	adds	r3, #4
 800cb06:	4618      	mov	r0, r3
 800cb08:	f7fd fb1e 	bl	800a148 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 800cb0c:	4603      	mov	r3, r0
 800cb0e:	681a      	ldr	r2, [r3, #0]
 800cb10:	68fb      	ldr	r3, [r7, #12]
 800cb12:	4611      	mov	r1, r2
 800cb14:	4618      	mov	r0, r3
 800cb16:	f001 fa43 	bl	800dfa0 <_ZN16Function_handler12run_functionEP13Function_call>
 800cb1a:	e003      	b.n	800cb24 <_ZN21Expression_calculator8evaluateEP17Primal_expression+0xec>
	}
	return 0;
 800cb1c:	2100      	movs	r1, #0
 800cb1e:	68f8      	ldr	r0, [r7, #12]
 800cb20:	f00a f944 	bl	8016dac <_ZN6SymbolC1Ei>
}
 800cb24:	68f8      	ldr	r0, [r7, #12]
 800cb26:	3728      	adds	r7, #40	; 0x28
 800cb28:	46bd      	mov	sp, r7
 800cb2a:	bd80      	pop	{r7, pc}

0800cb2c <_ZN21Expression_calculator8evaluateEP8Variable>:

Symbol Expression_calculator::evaluate(Variable *var)
{
 800cb2c:	b590      	push	{r4, r7, lr}
 800cb2e:	b09d      	sub	sp, #116	; 0x74
 800cb30:	af00      	add	r7, sp, #0
 800cb32:	60f8      	str	r0, [r7, #12]
 800cb34:	60b9      	str	r1, [r7, #8]
 800cb36:	607a      	str	r2, [r7, #4]
	Symbol s = Variable_handler::get_instance().get_symbol(*var);
 800cb38:	f00c f98e 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 800cb3c:	4604      	mov	r4, r0
 800cb3e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800cb42:	6879      	ldr	r1, [r7, #4]
 800cb44:	4618      	mov	r0, r3
 800cb46:	f7f4 ff17 	bl	8001978 <_ZN8VariableC1ERKS_>
 800cb4a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800cb4e:	4619      	mov	r1, r3
 800cb50:	4620      	mov	r0, r4
 800cb52:	f00c fa56 	bl	8019002 <_ZN16Variable_handler10get_symbolE8Variable>
 800cb56:	4602      	mov	r2, r0
 800cb58:	f107 0310 	add.w	r3, r7, #16
 800cb5c:	4611      	mov	r1, r2
 800cb5e:	4618      	mov	r0, r3
 800cb60:	f7f4 fc7a 	bl	8001458 <_ZN6SymbolC1ERKS_>
 800cb64:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800cb68:	4618      	mov	r0, r3
 800cb6a:	f009 fef1 	bl	8016950 <_ZN8VariableD1Ev>

	if (var->index)
 800cb6e:	687b      	ldr	r3, [r7, #4]
 800cb70:	69db      	ldr	r3, [r3, #28]
 800cb72:	2b00      	cmp	r3, #0
 800cb74:	d01a      	beq.n	800cbac <_ZN21Expression_calculator8evaluateEP8Variable+0x80>
	{
		return s[evaluate(var->index)];
 800cb76:	687b      	ldr	r3, [r7, #4]
 800cb78:	69da      	ldr	r2, [r3, #28]
 800cb7a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800cb7e:	68b9      	ldr	r1, [r7, #8]
 800cb80:	4618      	mov	r0, r3
 800cb82:	f7ff fb11 	bl	800c1a8 <_ZN21Expression_calculator8evaluateEP10Expression>
 800cb86:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800cb8a:	f107 0310 	add.w	r3, r7, #16
 800cb8e:	4611      	mov	r1, r2
 800cb90:	4618      	mov	r0, r3
 800cb92:	f00a f991 	bl	8016eb8 <_ZN6SymbolixES_>
 800cb96:	4603      	mov	r3, r0
 800cb98:	4619      	mov	r1, r3
 800cb9a:	68f8      	ldr	r0, [r7, #12]
 800cb9c:	f7f4 fc5c 	bl	8001458 <_ZN6SymbolC1ERKS_>
 800cba0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800cba4:	4618      	mov	r0, r3
 800cba6:	f7f4 fbf9 	bl	800139c <_ZN6SymbolD1Ev>
 800cbaa:	e005      	b.n	800cbb8 <_ZN21Expression_calculator8evaluateEP8Variable+0x8c>
	}

	return s;
 800cbac:	f107 0310 	add.w	r3, r7, #16
 800cbb0:	4619      	mov	r1, r3
 800cbb2:	68f8      	ldr	r0, [r7, #12]
 800cbb4:	f7ff fae2 	bl	800c17c <_ZN6SymbolC1EOS_>
	Symbol s = Variable_handler::get_instance().get_symbol(*var);
 800cbb8:	f107 0310 	add.w	r3, r7, #16
 800cbbc:	4618      	mov	r0, r3
 800cbbe:	f7f4 fbed 	bl	800139c <_ZN6SymbolD1Ev>
}
 800cbc2:	68f8      	ldr	r0, [r7, #12]
 800cbc4:	3774      	adds	r7, #116	; 0x74
 800cbc6:	46bd      	mov	sp, r7
 800cbc8:	bd90      	pop	{r4, r7, pc}

0800cbca <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800cbca:	b480      	push	{r7}
 800cbcc:	b083      	sub	sp, #12
 800cbce:	af00      	add	r7, sp, #0
 800cbd0:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800cbd2:	687b      	ldr	r3, [r7, #4]
 800cbd4:	685a      	ldr	r2, [r3, #4]
 800cbd6:	687b      	ldr	r3, [r7, #4]
 800cbd8:	681b      	ldr	r3, [r3, #0]
 800cbda:	1ad3      	subs	r3, r2, r3
 800cbdc:	109b      	asrs	r3, r3, #2
 800cbde:	4618      	mov	r0, r3
 800cbe0:	370c      	adds	r7, #12
 800cbe2:	46bd      	mov	sp, r7
 800cbe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbe8:	4770      	bx	lr

0800cbea <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEEv>:
      using _Base::_Base;
 800cbea:	b580      	push	{r7, lr}
 800cbec:	b082      	sub	sp, #8
 800cbee:	af00      	add	r7, sp, #0
 800cbf0:	6078      	str	r0, [r7, #4]
 800cbf2:	687b      	ldr	r3, [r7, #4]
 800cbf4:	4618      	mov	r0, r3
 800cbf6:	f7f6 fbfa 	bl	80033ee <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 800cbfa:	687b      	ldr	r3, [r7, #4]
 800cbfc:	4618      	mov	r0, r3
 800cbfe:	3708      	adds	r7, #8
 800cc00:	46bd      	mov	sp, r7
 800cc02:	bd80      	pop	{r7, pc}

0800cc04 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1EOSC_>:
      _Move_ctor_base(_Move_ctor_base&& __rhs)
 800cc04:	b580      	push	{r7, lr}
 800cc06:	b082      	sub	sp, #8
 800cc08:	af00      	add	r7, sp, #0
 800cc0a:	6078      	str	r0, [r7, #4]
 800cc0c:	6039      	str	r1, [r7, #0]
      {
 800cc0e:	687b      	ldr	r3, [r7, #4]
 800cc10:	4618      	mov	r0, r3
 800cc12:	f7ff ffea 	bl	800cbea <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEEv>
	__variant_construct<_Types...>(*this, std::move(__rhs));
 800cc16:	6838      	ldr	r0, [r7, #0]
 800cc18:	f000 f8c6 	bl	800cda8 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEONSt16remove_referenceIT_E4typeEOSG_>
 800cc1c:	4603      	mov	r3, r0
 800cc1e:	4619      	mov	r1, r3
 800cc20:	6878      	ldr	r0, [r7, #4]
 800cc22:	f000 fc1b 	bl	800d45c <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_>
      }
 800cc26:	687b      	ldr	r3, [r7, #4]
 800cc28:	4618      	mov	r0, r3
 800cc2a:	3708      	adds	r7, #8
 800cc2c:	46bd      	mov	sp, r7
 800cc2e:	bd80      	pop	{r7, pc}

0800cc30 <_ZNSt6vectorIP14And_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cc30:	b480      	push	{r7}
 800cc32:	b083      	sub	sp, #12
 800cc34:	af00      	add	r7, sp, #0
 800cc36:	6078      	str	r0, [r7, #4]
 800cc38:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800cc3a:	687b      	ldr	r3, [r7, #4]
 800cc3c:	681a      	ldr	r2, [r3, #0]
 800cc3e:	683b      	ldr	r3, [r7, #0]
 800cc40:	009b      	lsls	r3, r3, #2
 800cc42:	4413      	add	r3, r2
      }
 800cc44:	4618      	mov	r0, r3
 800cc46:	370c      	adds	r7, #12
 800cc48:	46bd      	mov	sp, r7
 800cc4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc4e:	4770      	bx	lr

0800cc50 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800cc50:	b480      	push	{r7}
 800cc52:	b083      	sub	sp, #12
 800cc54:	af00      	add	r7, sp, #0
 800cc56:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800cc58:	687b      	ldr	r3, [r7, #4]
 800cc5a:	685a      	ldr	r2, [r3, #4]
 800cc5c:	687b      	ldr	r3, [r7, #4]
 800cc5e:	681b      	ldr	r3, [r3, #0]
 800cc60:	1ad3      	subs	r3, r2, r3
 800cc62:	109b      	asrs	r3, r3, #2
 800cc64:	4618      	mov	r0, r3
 800cc66:	370c      	adds	r7, #12
 800cc68:	46bd      	mov	sp, r7
 800cc6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc6e:	4770      	bx	lr

0800cc70 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cc70:	b480      	push	{r7}
 800cc72:	b083      	sub	sp, #12
 800cc74:	af00      	add	r7, sp, #0
 800cc76:	6078      	str	r0, [r7, #4]
 800cc78:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800cc7a:	687b      	ldr	r3, [r7, #4]
 800cc7c:	681a      	ldr	r2, [r3, #0]
 800cc7e:	683b      	ldr	r3, [r7, #0]
 800cc80:	009b      	lsls	r3, r3, #2
 800cc82:	4413      	add	r3, r2
      }
 800cc84:	4618      	mov	r0, r3
 800cc86:	370c      	adds	r7, #12
 800cc88:	46bd      	mov	sp, r7
 800cc8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc8e:	4770      	bx	lr

0800cc90 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cc90:	b480      	push	{r7}
 800cc92:	b083      	sub	sp, #12
 800cc94:	af00      	add	r7, sp, #0
 800cc96:	6078      	str	r0, [r7, #4]
 800cc98:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800cc9a:	687b      	ldr	r3, [r7, #4]
 800cc9c:	681a      	ldr	r2, [r3, #0]
 800cc9e:	683b      	ldr	r3, [r7, #0]
 800cca0:	009b      	lsls	r3, r3, #2
 800cca2:	4413      	add	r3, r2
      }
 800cca4:	4618      	mov	r0, r3
 800cca6:	370c      	adds	r7, #12
 800cca8:	46bd      	mov	sp, r7
 800ccaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccae:	4770      	bx	lr

0800ccb0 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800ccb0:	b480      	push	{r7}
 800ccb2:	b083      	sub	sp, #12
 800ccb4:	af00      	add	r7, sp, #0
 800ccb6:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800ccb8:	687b      	ldr	r3, [r7, #4]
 800ccba:	685a      	ldr	r2, [r3, #4]
 800ccbc:	687b      	ldr	r3, [r7, #4]
 800ccbe:	681b      	ldr	r3, [r3, #0]
 800ccc0:	1ad3      	subs	r3, r2, r3
 800ccc2:	4618      	mov	r0, r3
 800ccc4:	370c      	adds	r7, #12
 800ccc6:	46bd      	mov	sp, r7
 800ccc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cccc:	4770      	bx	lr

0800ccce <_ZNSt6vectorI12sum_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800ccce:	b480      	push	{r7}
 800ccd0:	b083      	sub	sp, #12
 800ccd2:	af00      	add	r7, sp, #0
 800ccd4:	6078      	str	r0, [r7, #4]
 800ccd6:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800ccd8:	687b      	ldr	r3, [r7, #4]
 800ccda:	681a      	ldr	r2, [r3, #0]
 800ccdc:	683b      	ldr	r3, [r7, #0]
 800ccde:	4413      	add	r3, r2
      }
 800cce0:	4618      	mov	r0, r3
 800cce2:	370c      	adds	r7, #12
 800cce4:	46bd      	mov	sp, r7
 800cce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccea:	4770      	bx	lr

0800ccec <_ZNSt6vectorIP16Power_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800ccec:	b480      	push	{r7}
 800ccee:	b083      	sub	sp, #12
 800ccf0:	af00      	add	r7, sp, #0
 800ccf2:	6078      	str	r0, [r7, #4]
 800ccf4:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800ccf6:	687b      	ldr	r3, [r7, #4]
 800ccf8:	681a      	ldr	r2, [r3, #0]
 800ccfa:	683b      	ldr	r3, [r7, #0]
 800ccfc:	009b      	lsls	r3, r3, #2
 800ccfe:	4413      	add	r3, r2
      }
 800cd00:	4618      	mov	r0, r3
 800cd02:	370c      	adds	r7, #12
 800cd04:	46bd      	mov	sp, r7
 800cd06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd0a:	4770      	bx	lr

0800cd0c <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800cd0c:	b480      	push	{r7}
 800cd0e:	b083      	sub	sp, #12
 800cd10:	af00      	add	r7, sp, #0
 800cd12:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800cd14:	687b      	ldr	r3, [r7, #4]
 800cd16:	685a      	ldr	r2, [r3, #4]
 800cd18:	687b      	ldr	r3, [r7, #4]
 800cd1a:	681b      	ldr	r3, [r3, #0]
 800cd1c:	1ad3      	subs	r3, r2, r3
 800cd1e:	4618      	mov	r0, r3
 800cd20:	370c      	adds	r7, #12
 800cd22:	46bd      	mov	sp, r7
 800cd24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd28:	4770      	bx	lr

0800cd2a <_ZNSt6vectorI13mult_operatorSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 800cd2a:	b480      	push	{r7}
 800cd2c:	b083      	sub	sp, #12
 800cd2e:	af00      	add	r7, sp, #0
 800cd30:	6078      	str	r0, [r7, #4]
 800cd32:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 800cd34:	687b      	ldr	r3, [r7, #4]
 800cd36:	681a      	ldr	r2, [r3, #0]
 800cd38:	683b      	ldr	r3, [r7, #0]
 800cd3a:	4413      	add	r3, r2
      }
 800cd3c:	4618      	mov	r0, r3
 800cd3e:	370c      	adds	r7, #12
 800cd40:	46bd      	mov	sp, r7
 800cd42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd46:	4770      	bx	lr

0800cd48 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cd48:	b580      	push	{r7, lr}
 800cd4a:	b082      	sub	sp, #8
 800cd4c:	af00      	add	r7, sp, #0
 800cd4e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cd50:	6878      	ldr	r0, [r7, #4]
 800cd52:	f000 fba1 	bl	800d498 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cd56:	4603      	mov	r3, r0
    }
 800cd58:	4618      	mov	r0, r3
 800cd5a:	3708      	adds	r7, #8
 800cd5c:	46bd      	mov	sp, r7
 800cd5e:	bd80      	pop	{r7, pc}

0800cd60 <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cd60:	b580      	push	{r7, lr}
 800cd62:	b082      	sub	sp, #8
 800cd64:	af00      	add	r7, sp, #0
 800cd66:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cd68:	6878      	ldr	r0, [r7, #4]
 800cd6a:	f000 fbb1 	bl	800d4d0 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cd6e:	4603      	mov	r3, r0
    }
 800cd70:	4618      	mov	r0, r3
 800cd72:	3708      	adds	r7, #8
 800cd74:	46bd      	mov	sp, r7
 800cd76:	bd80      	pop	{r7, pc}

0800cd78 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJbifS5_P8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cd78:	b580      	push	{r7, lr}
 800cd7a:	b082      	sub	sp, #8
 800cd7c:	af00      	add	r7, sp, #0
 800cd7e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cd80:	6878      	ldr	r0, [r7, #4]
 800cd82:	f000 fbc1 	bl	800d508 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cd86:	4603      	mov	r3, r0
    }
 800cd88:	4618      	mov	r0, r3
 800cd8a:	3708      	adds	r7, #8
 800cd8c:	46bd      	mov	sp, r7
 800cd8e:	bd80      	pop	{r7, pc}

0800cd90 <_ZSt3getIbJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800cd90:	b580      	push	{r7, lr}
 800cd92:	b082      	sub	sp, #8
 800cd94:	af00      	add	r7, sp, #0
 800cd96:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800cd98:	6878      	ldr	r0, [r7, #4]
 800cd9a:	f000 fbd1 	bl	800d540 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cd9e:	4603      	mov	r3, r0
    }
 800cda0:	4618      	mov	r0, r3
 800cda2:	3708      	adds	r7, #8
 800cda4:	46bd      	mov	sp, r7
 800cda6:	bd80      	pop	{r7, pc}

0800cda8 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEONSt16remove_referenceIT_E4typeEOSG_>:
    move(_Tp&& __t) noexcept
 800cda8:	b480      	push	{r7}
 800cdaa:	b083      	sub	sp, #12
 800cdac:	af00      	add	r7, sp, #0
 800cdae:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800cdb0:	687b      	ldr	r3, [r7, #4]
 800cdb2:	4618      	mov	r0, r3
 800cdb4:	370c      	adds	r7, #12
 800cdb6:	46bd      	mov	sp, r7
 800cdb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdbc:	4770      	bx	lr

0800cdbe <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800cdbe:	b480      	push	{r7}
 800cdc0:	b083      	sub	sp, #12
 800cdc2:	af00      	add	r7, sp, #0
 800cdc4:	6078      	str	r0, [r7, #4]
        return static_cast<variant<_Types...>&&>(__rhs);
 800cdc6:	687b      	ldr	r3, [r7, #4]
    }
 800cdc8:	4618      	mov	r0, r3
 800cdca:	370c      	adds	r7, #12
 800cdcc:	46bd      	mov	sp, r7
 800cdce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdd2:	4770      	bx	lr

0800cdd4 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cdd4:	b580      	push	{r7, lr}
 800cdd6:	b082      	sub	sp, #8
 800cdd8:	af00      	add	r7, sp, #0
 800cdda:	7138      	strb	r0, [r7, #4]
 800cddc:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cdde:	6838      	ldr	r0, [r7, #0]
 800cde0:	f000 fbf6 	bl	800d5d0 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cde4:	4603      	mov	r3, r0
 800cde6:	4618      	mov	r0, r3
 800cde8:	f000 fbfd 	bl	800d5e6 <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800cdec:	4603      	mov	r3, r0
 800cdee:	4618      	mov	r0, r3
 800cdf0:	3708      	adds	r7, #8
 800cdf2:	46bd      	mov	sp, r7
 800cdf4:	bd80      	pop	{r7, pc}

0800cdf6 <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cdf6:	b590      	push	{r4, r7, lr}
 800cdf8:	b083      	sub	sp, #12
 800cdfa:	af00      	add	r7, sp, #0
 800cdfc:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cdfe:	6878      	ldr	r0, [r7, #4]
 800ce00:	f000 fbdb 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800ce04:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ce06:	4619      	mov	r1, r3
 800ce08:	4620      	mov	r0, r4
 800ce0a:	f7ff ffe3 	bl	800cdd4 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800ce0e:	4603      	mov	r3, r0
    }
 800ce10:	4618      	mov	r0, r3
 800ce12:	370c      	adds	r7, #12
 800ce14:	46bd      	mov	sp, r7
 800ce16:	bd90      	pop	{r4, r7, pc}

0800ce18 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800ce18:	b580      	push	{r7, lr}
 800ce1a:	b082      	sub	sp, #8
 800ce1c:	af00      	add	r7, sp, #0
 800ce1e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800ce20:	6878      	ldr	r0, [r7, #4]
 800ce22:	f000 fbca 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800ce26:	4603      	mov	r3, r0
 800ce28:	4618      	mov	r0, r3
 800ce2a:	f7ff ffe4 	bl	800cdf6 <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800ce2e:	4603      	mov	r3, r0
	}
 800ce30:	4618      	mov	r0, r3
 800ce32:	3708      	adds	r7, #8
 800ce34:	46bd      	mov	sp, r7
 800ce36:	bd80      	pop	{r7, pc}

0800ce38 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800ce38:	b5b0      	push	{r4, r5, r7, lr}
 800ce3a:	b082      	sub	sp, #8
 800ce3c:	af00      	add	r7, sp, #0
 800ce3e:	6078      	str	r0, [r7, #4]
 800ce40:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800ce42:	6878      	ldr	r0, [r7, #4]
 800ce44:	f000 fba3 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800ce48:	4604      	mov	r4, r0
 800ce4a:	6838      	ldr	r0, [r7, #0]
 800ce4c:	f000 fbaa 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ce50:	4603      	mov	r3, r0
 800ce52:	4618      	mov	r0, r3
 800ce54:	f7ff ffe0 	bl	800ce18 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSJ_>
 800ce58:	4603      	mov	r3, r0
 800ce5a:	4619      	mov	r1, r3
 800ce5c:	4620      	mov	r0, r4
 800ce5e:	f000 fbcf 	bl	800d600 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800ce62:	462b      	mov	r3, r5
      }
 800ce64:	4618      	mov	r0, r3
 800ce66:	3708      	adds	r7, #8
 800ce68:	46bd      	mov	sp, r7
 800ce6a:	bdb0      	pop	{r4, r5, r7, pc}

0800ce6c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ce6c:	b5b0      	push	{r4, r5, r7, lr}
 800ce6e:	b082      	sub	sp, #8
 800ce70:	af00      	add	r7, sp, #0
 800ce72:	6078      	str	r0, [r7, #4]
 800ce74:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800ce76:	6878      	ldr	r0, [r7, #4]
 800ce78:	f000 fb89 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800ce7c:	4604      	mov	r4, r0
 800ce7e:	6838      	ldr	r0, [r7, #0]
 800ce80:	f000 fb90 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ce84:	4603      	mov	r3, r0
 800ce86:	4619      	mov	r1, r3
 800ce88:	4620      	mov	r0, r4
 800ce8a:	f7ff ffd5 	bl	800ce38 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800ce8e:	462b      	mov	r3, r5
      }
 800ce90:	4618      	mov	r0, r3
 800ce92:	3708      	adds	r7, #8
 800ce94:	46bd      	mov	sp, r7
 800ce96:	bdb0      	pop	{r4, r5, r7, pc}

0800ce98 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800ce98:	b5b0      	push	{r4, r5, r7, lr}
 800ce9a:	b082      	sub	sp, #8
 800ce9c:	af00      	add	r7, sp, #0
 800ce9e:	6078      	str	r0, [r7, #4]
 800cea0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800cea2:	6878      	ldr	r0, [r7, #4]
 800cea4:	f000 fb73 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cea8:	4604      	mov	r4, r0
 800ceaa:	6838      	ldr	r0, [r7, #0]
 800ceac:	f000 fb7a 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ceb0:	4603      	mov	r3, r0
 800ceb2:	4619      	mov	r1, r3
 800ceb4:	4620      	mov	r0, r4
 800ceb6:	f7ff ffd9 	bl	800ce6c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800ceba:	462b      	mov	r3, r5
      }
 800cebc:	4618      	mov	r0, r3
 800cebe:	3708      	adds	r7, #8
 800cec0:	46bd      	mov	sp, r7
 800cec2:	bdb0      	pop	{r4, r5, r7, pc}

0800cec4 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cec4:	b580      	push	{r7, lr}
 800cec6:	b082      	sub	sp, #8
 800cec8:	af00      	add	r7, sp, #0
 800ceca:	7138      	strb	r0, [r7, #4]
 800cecc:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cece:	6838      	ldr	r0, [r7, #0]
 800ced0:	f000 fbad 	bl	800d62e <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800ced4:	4603      	mov	r3, r0
 800ced6:	4618      	mov	r0, r3
 800ced8:	f000 fbb4 	bl	800d644 <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800cedc:	4603      	mov	r3, r0
 800cede:	4618      	mov	r0, r3
 800cee0:	3708      	adds	r7, #8
 800cee2:	46bd      	mov	sp, r7
 800cee4:	bd80      	pop	{r7, pc}

0800cee6 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cee6:	b590      	push	{r4, r7, lr}
 800cee8:	b083      	sub	sp, #12
 800ceea:	af00      	add	r7, sp, #0
 800ceec:	7138      	strb	r0, [r7, #4]
 800ceee:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cef0:	6838      	ldr	r0, [r7, #0]
 800cef2:	f000 fb6d 	bl	800d5d0 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cef6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cef8:	4619      	mov	r1, r3
 800cefa:	4620      	mov	r0, r4
 800cefc:	f7ff ffe2 	bl	800cec4 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cf00:	4603      	mov	r3, r0
    }
 800cf02:	4618      	mov	r0, r3
 800cf04:	370c      	adds	r7, #12
 800cf06:	46bd      	mov	sp, r7
 800cf08:	bd90      	pop	{r4, r7, pc}

0800cf0a <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cf0a:	b590      	push	{r4, r7, lr}
 800cf0c:	b083      	sub	sp, #12
 800cf0e:	af00      	add	r7, sp, #0
 800cf10:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cf12:	6878      	ldr	r0, [r7, #4]
 800cf14:	f000 fb51 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cf18:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cf1a:	4619      	mov	r1, r3
 800cf1c:	4620      	mov	r0, r4
 800cf1e:	f7ff ffe2 	bl	800cee6 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cf22:	4603      	mov	r3, r0
    }
 800cf24:	4618      	mov	r0, r3
 800cf26:	370c      	adds	r7, #12
 800cf28:	46bd      	mov	sp, r7
 800cf2a:	bd90      	pop	{r4, r7, pc}

0800cf2c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800cf2c:	b580      	push	{r7, lr}
 800cf2e:	b082      	sub	sp, #8
 800cf30:	af00      	add	r7, sp, #0
 800cf32:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800cf34:	6878      	ldr	r0, [r7, #4]
 800cf36:	f000 fb40 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800cf3a:	4603      	mov	r3, r0
 800cf3c:	4618      	mov	r0, r3
 800cf3e:	f7ff ffe4 	bl	800cf0a <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800cf42:	4603      	mov	r3, r0
	}
 800cf44:	4618      	mov	r0, r3
 800cf46:	3708      	adds	r7, #8
 800cf48:	46bd      	mov	sp, r7
 800cf4a:	bd80      	pop	{r7, pc}

0800cf4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800cf4c:	b5b0      	push	{r4, r5, r7, lr}
 800cf4e:	b082      	sub	sp, #8
 800cf50:	af00      	add	r7, sp, #0
 800cf52:	6078      	str	r0, [r7, #4]
 800cf54:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800cf56:	6878      	ldr	r0, [r7, #4]
 800cf58:	f000 fb19 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cf5c:	4604      	mov	r4, r0
 800cf5e:	6838      	ldr	r0, [r7, #0]
 800cf60:	f000 fb20 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cf64:	4603      	mov	r3, r0
 800cf66:	4618      	mov	r0, r3
 800cf68:	f7ff ffe0 	bl	800cf2c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSJ_>
 800cf6c:	4603      	mov	r3, r0
 800cf6e:	4619      	mov	r1, r3
 800cf70:	4620      	mov	r0, r4
 800cf72:	f000 fb74 	bl	800d65e <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800cf76:	462b      	mov	r3, r5
      }
 800cf78:	4618      	mov	r0, r3
 800cf7a:	3708      	adds	r7, #8
 800cf7c:	46bd      	mov	sp, r7
 800cf7e:	bdb0      	pop	{r4, r5, r7, pc}

0800cf80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cf80:	b5b0      	push	{r4, r5, r7, lr}
 800cf82:	b082      	sub	sp, #8
 800cf84:	af00      	add	r7, sp, #0
 800cf86:	6078      	str	r0, [r7, #4]
 800cf88:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800cf8a:	6878      	ldr	r0, [r7, #4]
 800cf8c:	f000 faff 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cf90:	4604      	mov	r4, r0
 800cf92:	6838      	ldr	r0, [r7, #0]
 800cf94:	f000 fb06 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cf98:	4603      	mov	r3, r0
 800cf9a:	4619      	mov	r1, r3
 800cf9c:	4620      	mov	r0, r4
 800cf9e:	f7ff ffd5 	bl	800cf4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cfa2:	462b      	mov	r3, r5
      }
 800cfa4:	4618      	mov	r0, r3
 800cfa6:	3708      	adds	r7, #8
 800cfa8:	46bd      	mov	sp, r7
 800cfaa:	bdb0      	pop	{r4, r5, r7, pc}

0800cfac <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800cfac:	b5b0      	push	{r4, r5, r7, lr}
 800cfae:	b082      	sub	sp, #8
 800cfb0:	af00      	add	r7, sp, #0
 800cfb2:	6078      	str	r0, [r7, #4]
 800cfb4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800cfb6:	6878      	ldr	r0, [r7, #4]
 800cfb8:	f000 fae9 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800cfbc:	4604      	mov	r4, r0
 800cfbe:	6838      	ldr	r0, [r7, #0]
 800cfc0:	f000 faf0 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cfc4:	4603      	mov	r3, r0
 800cfc6:	4619      	mov	r1, r3
 800cfc8:	4620      	mov	r0, r4
 800cfca:	f7ff ffd9 	bl	800cf80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800cfce:	462b      	mov	r3, r5
      }
 800cfd0:	4618      	mov	r0, r3
 800cfd2:	3708      	adds	r7, #8
 800cfd4:	46bd      	mov	sp, r7
 800cfd6:	bdb0      	pop	{r4, r5, r7, pc}

0800cfd8 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cfd8:	b580      	push	{r7, lr}
 800cfda:	b082      	sub	sp, #8
 800cfdc:	af00      	add	r7, sp, #0
 800cfde:	7138      	strb	r0, [r7, #4]
 800cfe0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cfe2:	6838      	ldr	r0, [r7, #0]
 800cfe4:	f000 fb52 	bl	800d68c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800cfe8:	4603      	mov	r3, r0
 800cfea:	4618      	mov	r0, r3
 800cfec:	f000 fb59 	bl	800d6a2 <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800cff0:	4603      	mov	r3, r0
 800cff2:	4618      	mov	r0, r3
 800cff4:	3708      	adds	r7, #8
 800cff6:	46bd      	mov	sp, r7
 800cff8:	bd80      	pop	{r7, pc}

0800cffa <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cffa:	b590      	push	{r4, r7, lr}
 800cffc:	b083      	sub	sp, #12
 800cffe:	af00      	add	r7, sp, #0
 800d000:	7138      	strb	r0, [r7, #4]
 800d002:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d004:	6838      	ldr	r0, [r7, #0]
 800d006:	f000 fb12 	bl	800d62e <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d00a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d00c:	4619      	mov	r1, r3
 800d00e:	4620      	mov	r0, r4
 800d010:	f7ff ffe2 	bl	800cfd8 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800d014:	4603      	mov	r3, r0
    }
 800d016:	4618      	mov	r0, r3
 800d018:	370c      	adds	r7, #12
 800d01a:	46bd      	mov	sp, r7
 800d01c:	bd90      	pop	{r4, r7, pc}

0800d01e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d01e:	b590      	push	{r4, r7, lr}
 800d020:	b083      	sub	sp, #12
 800d022:	af00      	add	r7, sp, #0
 800d024:	7138      	strb	r0, [r7, #4]
 800d026:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d028:	6838      	ldr	r0, [r7, #0]
 800d02a:	f000 fad1 	bl	800d5d0 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d02e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d030:	4619      	mov	r1, r3
 800d032:	4620      	mov	r0, r4
 800d034:	f7ff ffe1 	bl	800cffa <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d038:	4603      	mov	r3, r0
    }
 800d03a:	4618      	mov	r0, r3
 800d03c:	370c      	adds	r7, #12
 800d03e:	46bd      	mov	sp, r7
 800d040:	bd90      	pop	{r4, r7, pc}

0800d042 <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d042:	b590      	push	{r4, r7, lr}
 800d044:	b083      	sub	sp, #12
 800d046:	af00      	add	r7, sp, #0
 800d048:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d04a:	6878      	ldr	r0, [r7, #4]
 800d04c:	f000 fab5 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d050:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d052:	4619      	mov	r1, r3
 800d054:	4620      	mov	r0, r4
 800d056:	f7ff ffe2 	bl	800d01e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d05a:	4603      	mov	r3, r0
    }
 800d05c:	4618      	mov	r0, r3
 800d05e:	370c      	adds	r7, #12
 800d060:	46bd      	mov	sp, r7
 800d062:	bd90      	pop	{r4, r7, pc}

0800d064 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800d064:	b580      	push	{r7, lr}
 800d066:	b082      	sub	sp, #8
 800d068:	af00      	add	r7, sp, #0
 800d06a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800d06c:	6878      	ldr	r0, [r7, #4]
 800d06e:	f000 faa4 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d072:	4603      	mov	r3, r0
 800d074:	4618      	mov	r0, r3
 800d076:	f7ff ffe4 	bl	800d042 <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800d07a:	4603      	mov	r3, r0
	}
 800d07c:	4618      	mov	r0, r3
 800d07e:	3708      	adds	r7, #8
 800d080:	46bd      	mov	sp, r7
 800d082:	bd80      	pop	{r7, pc}

0800d084 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800d084:	b5b0      	push	{r4, r5, r7, lr}
 800d086:	b082      	sub	sp, #8
 800d088:	af00      	add	r7, sp, #0
 800d08a:	6078      	str	r0, [r7, #4]
 800d08c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800d08e:	6878      	ldr	r0, [r7, #4]
 800d090:	f000 fa7d 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d094:	4604      	mov	r4, r0
 800d096:	6838      	ldr	r0, [r7, #0]
 800d098:	f000 fa84 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d09c:	4603      	mov	r3, r0
 800d09e:	4618      	mov	r0, r3
 800d0a0:	f7ff ffe0 	bl	800d064 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSJ_>
 800d0a4:	4603      	mov	r3, r0
 800d0a6:	4619      	mov	r1, r3
 800d0a8:	4620      	mov	r0, r4
 800d0aa:	f000 fb07 	bl	800d6bc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d0ae:	462b      	mov	r3, r5
      }
 800d0b0:	4618      	mov	r0, r3
 800d0b2:	3708      	adds	r7, #8
 800d0b4:	46bd      	mov	sp, r7
 800d0b6:	bdb0      	pop	{r4, r5, r7, pc}

0800d0b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d0b8:	b5b0      	push	{r4, r5, r7, lr}
 800d0ba:	b082      	sub	sp, #8
 800d0bc:	af00      	add	r7, sp, #0
 800d0be:	6078      	str	r0, [r7, #4]
 800d0c0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d0c2:	6878      	ldr	r0, [r7, #4]
 800d0c4:	f000 fa63 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d0c8:	4604      	mov	r4, r0
 800d0ca:	6838      	ldr	r0, [r7, #0]
 800d0cc:	f000 fa6a 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d0d0:	4603      	mov	r3, r0
 800d0d2:	4619      	mov	r1, r3
 800d0d4:	4620      	mov	r0, r4
 800d0d6:	f7ff ffd5 	bl	800d084 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d0da:	462b      	mov	r3, r5
      }
 800d0dc:	4618      	mov	r0, r3
 800d0de:	3708      	adds	r7, #8
 800d0e0:	46bd      	mov	sp, r7
 800d0e2:	bdb0      	pop	{r4, r5, r7, pc}

0800d0e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d0e4:	b5b0      	push	{r4, r5, r7, lr}
 800d0e6:	b082      	sub	sp, #8
 800d0e8:	af00      	add	r7, sp, #0
 800d0ea:	6078      	str	r0, [r7, #4]
 800d0ec:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d0ee:	6878      	ldr	r0, [r7, #4]
 800d0f0:	f000 fa4d 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d0f4:	4604      	mov	r4, r0
 800d0f6:	6838      	ldr	r0, [r7, #0]
 800d0f8:	f000 fa54 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d0fc:	4603      	mov	r3, r0
 800d0fe:	4619      	mov	r1, r3
 800d100:	4620      	mov	r0, r4
 800d102:	f7ff ffd9 	bl	800d0b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d106:	462b      	mov	r3, r5
      }
 800d108:	4618      	mov	r0, r3
 800d10a:	3708      	adds	r7, #8
 800d10c:	46bd      	mov	sp, r7
 800d10e:	bdb0      	pop	{r4, r5, r7, pc}

0800d110 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800d110:	b580      	push	{r7, lr}
 800d112:	b082      	sub	sp, #8
 800d114:	af00      	add	r7, sp, #0
 800d116:	7138      	strb	r0, [r7, #4]
 800d118:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800d11a:	6838      	ldr	r0, [r7, #0]
 800d11c:	f000 fae5 	bl	800d6ea <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d120:	4603      	mov	r3, r0
 800d122:	4618      	mov	r0, r3
 800d124:	f000 faec 	bl	800d700 <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800d128:	4603      	mov	r3, r0
 800d12a:	4618      	mov	r0, r3
 800d12c:	3708      	adds	r7, #8
 800d12e:	46bd      	mov	sp, r7
 800d130:	bd80      	pop	{r7, pc}

0800d132 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d132:	b590      	push	{r4, r7, lr}
 800d134:	b083      	sub	sp, #12
 800d136:	af00      	add	r7, sp, #0
 800d138:	7138      	strb	r0, [r7, #4]
 800d13a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d13c:	6838      	ldr	r0, [r7, #0]
 800d13e:	f000 faa5 	bl	800d68c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d142:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d144:	4619      	mov	r1, r3
 800d146:	4620      	mov	r0, r4
 800d148:	f7ff ffe2 	bl	800d110 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800d14c:	4603      	mov	r3, r0
    }
 800d14e:	4618      	mov	r0, r3
 800d150:	370c      	adds	r7, #12
 800d152:	46bd      	mov	sp, r7
 800d154:	bd90      	pop	{r4, r7, pc}

0800d156 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d156:	b590      	push	{r4, r7, lr}
 800d158:	b083      	sub	sp, #12
 800d15a:	af00      	add	r7, sp, #0
 800d15c:	7138      	strb	r0, [r7, #4]
 800d15e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d160:	6838      	ldr	r0, [r7, #0]
 800d162:	f000 fa64 	bl	800d62e <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d166:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d168:	4619      	mov	r1, r3
 800d16a:	4620      	mov	r0, r4
 800d16c:	f7ff ffe1 	bl	800d132 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d170:	4603      	mov	r3, r0
    }
 800d172:	4618      	mov	r0, r3
 800d174:	370c      	adds	r7, #12
 800d176:	46bd      	mov	sp, r7
 800d178:	bd90      	pop	{r4, r7, pc}

0800d17a <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d17a:	b590      	push	{r4, r7, lr}
 800d17c:	b083      	sub	sp, #12
 800d17e:	af00      	add	r7, sp, #0
 800d180:	7138      	strb	r0, [r7, #4]
 800d182:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d184:	6838      	ldr	r0, [r7, #0]
 800d186:	f000 fa23 	bl	800d5d0 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d18a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d18c:	4619      	mov	r1, r3
 800d18e:	4620      	mov	r0, r4
 800d190:	f7ff ffe1 	bl	800d156 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d194:	4603      	mov	r3, r0
    }
 800d196:	4618      	mov	r0, r3
 800d198:	370c      	adds	r7, #12
 800d19a:	46bd      	mov	sp, r7
 800d19c:	bd90      	pop	{r4, r7, pc}

0800d19e <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d19e:	b590      	push	{r4, r7, lr}
 800d1a0:	b083      	sub	sp, #12
 800d1a2:	af00      	add	r7, sp, #0
 800d1a4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d1a6:	6878      	ldr	r0, [r7, #4]
 800d1a8:	f000 fa07 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d1ac:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d1ae:	4619      	mov	r1, r3
 800d1b0:	4620      	mov	r0, r4
 800d1b2:	f7ff ffe2 	bl	800d17a <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d1b6:	4603      	mov	r3, r0
    }
 800d1b8:	4618      	mov	r0, r3
 800d1ba:	370c      	adds	r7, #12
 800d1bc:	46bd      	mov	sp, r7
 800d1be:	bd90      	pop	{r4, r7, pc}

0800d1c0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800d1c0:	b580      	push	{r7, lr}
 800d1c2:	b082      	sub	sp, #8
 800d1c4:	af00      	add	r7, sp, #0
 800d1c6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800d1c8:	6878      	ldr	r0, [r7, #4]
 800d1ca:	f000 f9f6 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d1ce:	4603      	mov	r3, r0
 800d1d0:	4618      	mov	r0, r3
 800d1d2:	f7ff ffe4 	bl	800d19e <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800d1d6:	4603      	mov	r3, r0
	}
 800d1d8:	4618      	mov	r0, r3
 800d1da:	3708      	adds	r7, #8
 800d1dc:	46bd      	mov	sp, r7
 800d1de:	bd80      	pop	{r7, pc}

0800d1e0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800d1e0:	b5b0      	push	{r4, r5, r7, lr}
 800d1e2:	b082      	sub	sp, #8
 800d1e4:	af00      	add	r7, sp, #0
 800d1e6:	6078      	str	r0, [r7, #4]
 800d1e8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800d1ea:	6878      	ldr	r0, [r7, #4]
 800d1ec:	f000 f9cf 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d1f0:	4604      	mov	r4, r0
 800d1f2:	6838      	ldr	r0, [r7, #0]
 800d1f4:	f000 f9d6 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d1f8:	4603      	mov	r3, r0
 800d1fa:	4618      	mov	r0, r3
 800d1fc:	f7ff ffe0 	bl	800d1c0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSJ_>
 800d200:	4603      	mov	r3, r0
 800d202:	4619      	mov	r1, r3
 800d204:	4620      	mov	r0, r4
 800d206:	f000 fa8c 	bl	800d722 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d20a:	462b      	mov	r3, r5
      }
 800d20c:	4618      	mov	r0, r3
 800d20e:	3708      	adds	r7, #8
 800d210:	46bd      	mov	sp, r7
 800d212:	bdb0      	pop	{r4, r5, r7, pc}

0800d214 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d214:	b5b0      	push	{r4, r5, r7, lr}
 800d216:	b082      	sub	sp, #8
 800d218:	af00      	add	r7, sp, #0
 800d21a:	6078      	str	r0, [r7, #4]
 800d21c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d21e:	6878      	ldr	r0, [r7, #4]
 800d220:	f000 f9b5 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d224:	4604      	mov	r4, r0
 800d226:	6838      	ldr	r0, [r7, #0]
 800d228:	f000 f9bc 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d22c:	4603      	mov	r3, r0
 800d22e:	4619      	mov	r1, r3
 800d230:	4620      	mov	r0, r4
 800d232:	f7ff ffd5 	bl	800d1e0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d236:	462b      	mov	r3, r5
      }
 800d238:	4618      	mov	r0, r3
 800d23a:	3708      	adds	r7, #8
 800d23c:	46bd      	mov	sp, r7
 800d23e:	bdb0      	pop	{r4, r5, r7, pc}

0800d240 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d240:	b5b0      	push	{r4, r5, r7, lr}
 800d242:	b082      	sub	sp, #8
 800d244:	af00      	add	r7, sp, #0
 800d246:	6078      	str	r0, [r7, #4]
 800d248:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d24a:	6878      	ldr	r0, [r7, #4]
 800d24c:	f000 f99f 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d250:	4604      	mov	r4, r0
 800d252:	6838      	ldr	r0, [r7, #0]
 800d254:	f000 f9a6 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d258:	4603      	mov	r3, r0
 800d25a:	4619      	mov	r1, r3
 800d25c:	4620      	mov	r0, r4
 800d25e:	f7ff ffd9 	bl	800d214 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d262:	462b      	mov	r3, r5
      }
 800d264:	4618      	mov	r0, r3
 800d266:	3708      	adds	r7, #8
 800d268:	46bd      	mov	sp, r7
 800d26a:	bdb0      	pop	{r4, r5, r7, pc}

0800d26c <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800d26c:	b580      	push	{r7, lr}
 800d26e:	b082      	sub	sp, #8
 800d270:	af00      	add	r7, sp, #0
 800d272:	7138      	strb	r0, [r7, #4]
 800d274:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800d276:	6838      	ldr	r0, [r7, #0]
 800d278:	f000 fa6a 	bl	800d750 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800d27c:	4603      	mov	r3, r0
 800d27e:	4618      	mov	r0, r3
 800d280:	f000 fa71 	bl	800d766 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>
 800d284:	4603      	mov	r3, r0
 800d286:	4618      	mov	r0, r3
 800d288:	3708      	adds	r7, #8
 800d28a:	46bd      	mov	sp, r7
 800d28c:	bd80      	pop	{r7, pc}

0800d28e <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d28e:	b590      	push	{r4, r7, lr}
 800d290:	b083      	sub	sp, #12
 800d292:	af00      	add	r7, sp, #0
 800d294:	7138      	strb	r0, [r7, #4]
 800d296:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d298:	6838      	ldr	r0, [r7, #0]
 800d29a:	f000 fa26 	bl	800d6ea <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d29e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d2a0:	4619      	mov	r1, r3
 800d2a2:	4620      	mov	r0, r4
 800d2a4:	f7ff ffe2 	bl	800d26c <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEEDcSt16in_place_index_tILj0EEOT_>
 800d2a8:	4603      	mov	r3, r0
    }
 800d2aa:	4618      	mov	r0, r3
 800d2ac:	370c      	adds	r7, #12
 800d2ae:	46bd      	mov	sp, r7
 800d2b0:	bd90      	pop	{r4, r7, pc}

0800d2b2 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d2b2:	b590      	push	{r4, r7, lr}
 800d2b4:	b083      	sub	sp, #12
 800d2b6:	af00      	add	r7, sp, #0
 800d2b8:	7138      	strb	r0, [r7, #4]
 800d2ba:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d2bc:	6838      	ldr	r0, [r7, #0]
 800d2be:	f000 f9e5 	bl	800d68c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d2c2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d2c4:	4619      	mov	r1, r3
 800d2c6:	4620      	mov	r0, r4
 800d2c8:	f7ff ffe1 	bl	800d28e <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d2cc:	4603      	mov	r3, r0
    }
 800d2ce:	4618      	mov	r0, r3
 800d2d0:	370c      	adds	r7, #12
 800d2d2:	46bd      	mov	sp, r7
 800d2d4:	bd90      	pop	{r4, r7, pc}

0800d2d6 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d2d6:	b590      	push	{r4, r7, lr}
 800d2d8:	b083      	sub	sp, #12
 800d2da:	af00      	add	r7, sp, #0
 800d2dc:	7138      	strb	r0, [r7, #4]
 800d2de:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d2e0:	6838      	ldr	r0, [r7, #0]
 800d2e2:	f000 f9a4 	bl	800d62e <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d2e6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d2e8:	4619      	mov	r1, r3
 800d2ea:	4620      	mov	r0, r4
 800d2ec:	f7ff ffe1 	bl	800d2b2 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d2f0:	4603      	mov	r3, r0
    }
 800d2f2:	4618      	mov	r0, r3
 800d2f4:	370c      	adds	r7, #12
 800d2f6:	46bd      	mov	sp, r7
 800d2f8:	bd90      	pop	{r4, r7, pc}

0800d2fa <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d2fa:	b590      	push	{r4, r7, lr}
 800d2fc:	b083      	sub	sp, #12
 800d2fe:	af00      	add	r7, sp, #0
 800d300:	7138      	strb	r0, [r7, #4]
 800d302:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d304:	6838      	ldr	r0, [r7, #0]
 800d306:	f000 f963 	bl	800d5d0 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d30a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d30c:	4619      	mov	r1, r3
 800d30e:	4620      	mov	r0, r4
 800d310:	f7ff ffe1 	bl	800d2d6 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d314:	4603      	mov	r3, r0
    }
 800d316:	4618      	mov	r0, r3
 800d318:	370c      	adds	r7, #12
 800d31a:	46bd      	mov	sp, r7
 800d31c:	bd90      	pop	{r4, r7, pc}

0800d31e <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d31e:	b590      	push	{r4, r7, lr}
 800d320:	b083      	sub	sp, #12
 800d322:	af00      	add	r7, sp, #0
 800d324:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d326:	6878      	ldr	r0, [r7, #4]
 800d328:	f000 f947 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d32c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d32e:	4619      	mov	r1, r3
 800d330:	4620      	mov	r0, r4
 800d332:	f7ff ffe2 	bl	800d2fa <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d336:	4603      	mov	r3, r0
    }
 800d338:	4618      	mov	r0, r3
 800d33a:	370c      	adds	r7, #12
 800d33c:	46bd      	mov	sp, r7
 800d33e:	bd90      	pop	{r4, r7, pc}

0800d340 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcSJ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800d340:	b580      	push	{r7, lr}
 800d342:	b082      	sub	sp, #8
 800d344:	af00      	add	r7, sp, #0
 800d346:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800d348:	6878      	ldr	r0, [r7, #4]
 800d34a:	f000 f936 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d34e:	4603      	mov	r3, r0
 800d350:	4618      	mov	r0, r3
 800d352:	f7ff ffe4 	bl	800d31e <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 800d356:	4603      	mov	r3, r0
	}
 800d358:	4618      	mov	r0, r3
 800d35a:	3708      	adds	r7, #8
 800d35c:	46bd      	mov	sp, r7
 800d35e:	bd80      	pop	{r7, pc}

0800d360 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESP_SS_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800d360:	b5b0      	push	{r4, r5, r7, lr}
 800d362:	b082      	sub	sp, #8
 800d364:	af00      	add	r7, sp, #0
 800d366:	6078      	str	r0, [r7, #4]
 800d368:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800d36a:	6878      	ldr	r0, [r7, #4]
 800d36c:	f000 f90f 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d370:	4604      	mov	r4, r0
 800d372:	6838      	ldr	r0, [r7, #0]
 800d374:	f000 f916 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d378:	4603      	mov	r3, r0
 800d37a:	4618      	mov	r0, r3
 800d37c:	f7ff ffe0 	bl	800d340 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcSJ_>
 800d380:	4603      	mov	r3, r0
 800d382:	4619      	mov	r1, r3
 800d384:	4620      	mov	r0, r4
 800d386:	f000 f9ff 	bl	800d788 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSC_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800d38a:	462b      	mov	r3, r5
      }
 800d38c:	4618      	mov	r0, r3
 800d38e:	3708      	adds	r7, #8
 800d390:	46bd      	mov	sp, r7
 800d392:	bdb0      	pop	{r4, r5, r7, pc}

0800d394 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESP_SS_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d394:	b5b0      	push	{r4, r5, r7, lr}
 800d396:	b082      	sub	sp, #8
 800d398:	af00      	add	r7, sp, #0
 800d39a:	6078      	str	r0, [r7, #4]
 800d39c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800d39e:	6878      	ldr	r0, [r7, #4]
 800d3a0:	f000 f8f5 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d3a4:	4604      	mov	r4, r0
 800d3a6:	6838      	ldr	r0, [r7, #0]
 800d3a8:	f000 f8fc 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d3ac:	4603      	mov	r3, r0
 800d3ae:	4619      	mov	r1, r3
 800d3b0:	4620      	mov	r0, r4
 800d3b2:	f7ff ffd5 	bl	800d360 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d3b6:	462b      	mov	r3, r5
      }
 800d3b8:	4618      	mov	r0, r3
 800d3ba:	3708      	adds	r7, #8
 800d3bc:	46bd      	mov	sp, r7
 800d3be:	bdb0      	pop	{r4, r5, r7, pc}

0800d3c0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESP_SS_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800d3c0:	b5b0      	push	{r4, r5, r7, lr}
 800d3c2:	b082      	sub	sp, #8
 800d3c4:	af00      	add	r7, sp, #0
 800d3c6:	6078      	str	r0, [r7, #4]
 800d3c8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800d3ca:	6878      	ldr	r0, [r7, #4]
 800d3cc:	f000 f8df 	bl	800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d3d0:	4604      	mov	r4, r0
 800d3d2:	6838      	ldr	r0, [r7, #0]
 800d3d4:	f000 f8e6 	bl	800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d3d8:	4603      	mov	r3, r0
 800d3da:	4619      	mov	r1, r3
 800d3dc:	4620      	mov	r0, r4
 800d3de:	f7ff ffd9 	bl	800d394 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISC_EEERNS0_15_Move_ctor_baseILb0EJifbSA_SE_EEESG_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SE_EEEJEEESt5tupleIJSS_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESP_SS_>
				   std::forward<_Variants>(__vars)...);
 800d3e2:	462b      	mov	r3, r5
      }
 800d3e4:	4618      	mov	r0, r3
 800d3e6:	3708      	adds	r7, #8
 800d3e8:	46bd      	mov	sp, r7
 800d3ea:	bdb0      	pop	{r4, r5, r7, pc}

0800d3ec <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKST_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800d3ec:	b580      	push	{r7, lr}
 800d3ee:	b082      	sub	sp, #8
 800d3f0:	af00      	add	r7, sp, #0
 800d3f2:	6078      	str	r0, [r7, #4]
 800d3f4:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800d3f6:	683b      	ldr	r3, [r7, #0]
 800d3f8:	009b      	lsls	r3, r3, #2
 800d3fa:	687a      	ldr	r2, [r7, #4]
 800d3fc:	4413      	add	r3, r2
 800d3fe:	4618      	mov	r0, r3
 800d400:	f000 f9d9 	bl	800d7b6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>
 800d404:	4603      	mov	r3, r0
	}
 800d406:	4618      	mov	r0, r3
 800d408:	3708      	adds	r7, #8
 800d40a:	46bd      	mov	sp, r7
 800d40c:	bd80      	pop	{r7, pc}
	...

0800d410 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800d410:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d412:	b085      	sub	sp, #20
 800d414:	af00      	add	r7, sp, #0
 800d416:	6078      	str	r0, [r7, #4]
 800d418:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800d41a:	4b0f      	ldr	r3, [pc, #60]	; (800d458 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_+0x48>)
 800d41c:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800d41e:	6838      	ldr	r0, [r7, #0]
 800d420:	f7f4 fb7a 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 800d424:	4603      	mov	r3, r0
 800d426:	4619      	mov	r1, r3
 800d428:	68f8      	ldr	r0, [r7, #12]
 800d42a:	f7ff ffdf 	bl	800d3ec <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJLj5EEE9_M_accessIJEEERKST_jDpT_>
 800d42e:	4603      	mov	r3, r0
 800d430:	681b      	ldr	r3, [r3, #0]
 800d432:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800d434:	68bc      	ldr	r4, [r7, #8]
 800d436:	6878      	ldr	r0, [r7, #4]
 800d438:	f000 f9c8 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d43c:	4605      	mov	r5, r0
 800d43e:	6838      	ldr	r0, [r7, #0]
 800d440:	f000 f8bb 	bl	800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800d444:	4603      	mov	r3, r0
 800d446:	4619      	mov	r1, r3
 800d448:	4628      	mov	r0, r5
 800d44a:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800d44c:	4633      	mov	r3, r6
    }
 800d44e:	4618      	mov	r0, r3
 800d450:	3714      	adds	r7, #20
 800d452:	46bd      	mov	sp, r7
 800d454:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d456:	bf00      	nop
 800d458:	0802a018 	.word	0x0802a018

0800d45c <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 800d45c:	b580      	push	{r7, lr}
 800d45e:	b084      	sub	sp, #16
 800d460:	af00      	add	r7, sp, #0
 800d462:	6078      	str	r0, [r7, #4]
 800d464:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 800d466:	683b      	ldr	r3, [r7, #0]
 800d468:	7e1a      	ldrb	r2, [r3, #24]
 800d46a:	687b      	ldr	r3, [r7, #4]
 800d46c:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d46e:	687b      	ldr	r3, [r7, #4]
 800d470:	60fb      	str	r3, [r7, #12]
 800d472:	6838      	ldr	r0, [r7, #0]
 800d474:	f000 f880 	bl	800d578 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>
 800d478:	4603      	mov	r3, r0
 800d47a:	4618      	mov	r0, r3
 800d47c:	f7ff fc9f 	bl	800cdbe <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S9_EEEEDcOT0_>
 800d480:	4602      	mov	r2, r0
 800d482:	f107 030c 	add.w	r3, r7, #12
 800d486:	4611      	mov	r1, r2
 800d488:	4618      	mov	r0, r3
 800d48a:	f7ff ffc1 	bl	800d410 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SC_EEEEDcSJ_DpOT2_>
    }
 800d48e:	bf00      	nop
 800d490:	3710      	adds	r7, #16
 800d492:	46bd      	mov	sp, r7
 800d494:	bd80      	pop	{r7, pc}
	...

0800d498 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d498:	b580      	push	{r7, lr}
 800d49a:	b082      	sub	sp, #8
 800d49c:	af00      	add	r7, sp, #0
 800d49e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d4a0:	6878      	ldr	r0, [r7, #4]
 800d4a2:	f7fc fe10 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d4a6:	4603      	mov	r3, r0
 800d4a8:	2b01      	cmp	r3, #1
 800d4aa:	bf14      	ite	ne
 800d4ac:	2301      	movne	r3, #1
 800d4ae:	2300      	moveq	r3, #0
 800d4b0:	b2db      	uxtb	r3, r3
 800d4b2:	2b00      	cmp	r3, #0
 800d4b4:	d002      	beq.n	800d4bc <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d4b6:	4805      	ldr	r0, [pc, #20]	; (800d4cc <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d4b8:	f7f3 fddb 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d4bc:	6878      	ldr	r0, [r7, #4]
 800d4be:	f7fd fcbf 	bl	800ae40 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d4c2:	4603      	mov	r3, r0
    }
 800d4c4:	4618      	mov	r0, r3
 800d4c6:	3708      	adds	r7, #8
 800d4c8:	46bd      	mov	sp, r7
 800d4ca:	bd80      	pop	{r7, pc}
 800d4cc:	08029448 	.word	0x08029448

0800d4d0 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d4d0:	b580      	push	{r7, lr}
 800d4d2:	b082      	sub	sp, #8
 800d4d4:	af00      	add	r7, sp, #0
 800d4d6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d4d8:	6878      	ldr	r0, [r7, #4]
 800d4da:	f7fc fdf4 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d4de:	4603      	mov	r3, r0
 800d4e0:	2b02      	cmp	r3, #2
 800d4e2:	bf14      	ite	ne
 800d4e4:	2301      	movne	r3, #1
 800d4e6:	2300      	moveq	r3, #0
 800d4e8:	b2db      	uxtb	r3, r3
 800d4ea:	2b00      	cmp	r3, #0
 800d4ec:	d002      	beq.n	800d4f4 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d4ee:	4805      	ldr	r0, [pc, #20]	; (800d504 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d4f0:	f7f3 fdbf 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d4f4:	6878      	ldr	r0, [r7, #4]
 800d4f6:	f7fd fd3f 	bl	800af78 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d4fa:	4603      	mov	r3, r0
    }
 800d4fc:	4618      	mov	r0, r3
 800d4fe:	3708      	adds	r7, #8
 800d500:	46bd      	mov	sp, r7
 800d502:	bd80      	pop	{r7, pc}
 800d504:	08029448 	.word	0x08029448

0800d508 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d508:	b580      	push	{r7, lr}
 800d50a:	b082      	sub	sp, #8
 800d50c:	af00      	add	r7, sp, #0
 800d50e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d510:	6878      	ldr	r0, [r7, #4]
 800d512:	f7fc fdd8 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d516:	4603      	mov	r3, r0
 800d518:	2b03      	cmp	r3, #3
 800d51a:	bf14      	ite	ne
 800d51c:	2301      	movne	r3, #1
 800d51e:	2300      	moveq	r3, #0
 800d520:	b2db      	uxtb	r3, r3
 800d522:	2b00      	cmp	r3, #0
 800d524:	d002      	beq.n	800d52c <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d526:	4805      	ldr	r0, [pc, #20]	; (800d53c <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d528:	f7f3 fda3 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d52c:	6878      	ldr	r0, [r7, #4]
 800d52e:	f7fd fdd1 	bl	800b0d4 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d532:	4603      	mov	r3, r0
    }
 800d534:	4618      	mov	r0, r3
 800d536:	3708      	adds	r7, #8
 800d538:	46bd      	mov	sp, r7
 800d53a:	bd80      	pop	{r7, pc}
 800d53c:	08029448 	.word	0x08029448

0800d540 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d540:	b580      	push	{r7, lr}
 800d542:	b082      	sub	sp, #8
 800d544:	af00      	add	r7, sp, #0
 800d546:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d548:	6878      	ldr	r0, [r7, #4]
 800d54a:	f7fc fdbc 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 800d54e:	4603      	mov	r3, r0
 800d550:	2b00      	cmp	r3, #0
 800d552:	bf14      	ite	ne
 800d554:	2301      	movne	r3, #1
 800d556:	2300      	moveq	r3, #0
 800d558:	b2db      	uxtb	r3, r3
 800d55a:	2b00      	cmp	r3, #0
 800d55c:	d002      	beq.n	800d564 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d55e:	4805      	ldr	r0, [pc, #20]	; (800d574 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d560:	f7f3 fd87 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d564:	6878      	ldr	r0, [r7, #4]
 800d566:	f7fd fbe1 	bl	800ad2c <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 800d56a:	4603      	mov	r3, r0
    }
 800d56c:	4618      	mov	r0, r3
 800d56e:	3708      	adds	r7, #8
 800d570:	46bd      	mov	sp, r7
 800d572:	bd80      	pop	{r7, pc}
 800d574:	08029448 	.word	0x08029448

0800d578 <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d578:	b480      	push	{r7}
 800d57a:	b083      	sub	sp, #12
 800d57c:	af00      	add	r7, sp, #0
 800d57e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d580:	687b      	ldr	r3, [r7, #4]
 800d582:	4618      	mov	r0, r3
 800d584:	370c      	adds	r7, #12
 800d586:	46bd      	mov	sp, r7
 800d588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d58c:	4770      	bx	lr

0800d58e <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d58e:	b480      	push	{r7}
 800d590:	b083      	sub	sp, #12
 800d592:	af00      	add	r7, sp, #0
 800d594:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d596:	687b      	ldr	r3, [r7, #4]
 800d598:	4618      	mov	r0, r3
 800d59a:	370c      	adds	r7, #12
 800d59c:	46bd      	mov	sp, r7
 800d59e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5a2:	4770      	bx	lr

0800d5a4 <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d5a4:	b480      	push	{r7}
 800d5a6:	b083      	sub	sp, #12
 800d5a8:	af00      	add	r7, sp, #0
 800d5aa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d5ac:	687b      	ldr	r3, [r7, #4]
 800d5ae:	4618      	mov	r0, r3
 800d5b0:	370c      	adds	r7, #12
 800d5b2:	46bd      	mov	sp, r7
 800d5b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5b8:	4770      	bx	lr

0800d5ba <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d5ba:	b480      	push	{r7}
 800d5bc:	b083      	sub	sp, #12
 800d5be:	af00      	add	r7, sp, #0
 800d5c0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d5c2:	687b      	ldr	r3, [r7, #4]
 800d5c4:	4618      	mov	r0, r3
 800d5c6:	370c      	adds	r7, #12
 800d5c8:	46bd      	mov	sp, r7
 800d5ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5ce:	4770      	bx	lr

0800d5d0 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d5d0:	b480      	push	{r7}
 800d5d2:	b083      	sub	sp, #12
 800d5d4:	af00      	add	r7, sp, #0
 800d5d6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d5d8:	687b      	ldr	r3, [r7, #4]
 800d5da:	4618      	mov	r0, r3
 800d5dc:	370c      	adds	r7, #12
 800d5de:	46bd      	mov	sp, r7
 800d5e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5e4:	4770      	bx	lr

0800d5e6 <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d5e6:	b580      	push	{r7, lr}
 800d5e8:	b082      	sub	sp, #8
 800d5ea:	af00      	add	r7, sp, #0
 800d5ec:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d5ee:	687b      	ldr	r3, [r7, #4]
 800d5f0:	4618      	mov	r0, r3
 800d5f2:	f7f9 fd58 	bl	80070a6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800d5f6:	4603      	mov	r3, r0
 800d5f8:	4618      	mov	r0, r3
 800d5fa:	3708      	adds	r7, #8
 800d5fc:	46bd      	mov	sp, r7
 800d5fe:	bd80      	pop	{r7, pc}

0800d600 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d600:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d602:	b083      	sub	sp, #12
 800d604:	af00      	add	r7, sp, #0
 800d606:	6078      	str	r0, [r7, #4]
 800d608:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d60a:	6878      	ldr	r0, [r7, #4]
 800d60c:	f000 f8de 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d610:	4604      	mov	r4, r0
 800d612:	6838      	ldr	r0, [r7, #0]
 800d614:	f7fa fab0 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800d618:	4603      	mov	r3, r0
 800d61a:	461a      	mov	r2, r3
 800d61c:	4621      	mov	r1, r4
 800d61e:	4628      	mov	r0, r5
 800d620:	f000 f8df 	bl	800d7e2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JiEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d624:	4633      	mov	r3, r6
    }
 800d626:	4618      	mov	r0, r3
 800d628:	370c      	adds	r7, #12
 800d62a:	46bd      	mov	sp, r7
 800d62c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d62e <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d62e:	b480      	push	{r7}
 800d630:	b083      	sub	sp, #12
 800d632:	af00      	add	r7, sp, #0
 800d634:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d636:	687b      	ldr	r3, [r7, #4]
 800d638:	4618      	mov	r0, r3
 800d63a:	370c      	adds	r7, #12
 800d63c:	46bd      	mov	sp, r7
 800d63e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d642:	4770      	bx	lr

0800d644 <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d644:	b580      	push	{r7, lr}
 800d646:	b082      	sub	sp, #8
 800d648:	af00      	add	r7, sp, #0
 800d64a:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d64c:	687b      	ldr	r3, [r7, #4]
 800d64e:	4618      	mov	r0, r3
 800d650:	f7f9 fd4d 	bl	80070ee <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 800d654:	4603      	mov	r3, r0
 800d656:	4618      	mov	r0, r3
 800d658:	3708      	adds	r7, #8
 800d65a:	46bd      	mov	sp, r7
 800d65c:	bd80      	pop	{r7, pc}

0800d65e <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d65e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d660:	b083      	sub	sp, #12
 800d662:	af00      	add	r7, sp, #0
 800d664:	6078      	str	r0, [r7, #4]
 800d666:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d668:	6878      	ldr	r0, [r7, #4]
 800d66a:	f000 f8af 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d66e:	4604      	mov	r4, r0
 800d670:	6838      	ldr	r0, [r7, #0]
 800d672:	f7fa faab 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800d676:	4603      	mov	r3, r0
 800d678:	461a      	mov	r2, r3
 800d67a:	4621      	mov	r1, r4
 800d67c:	4628      	mov	r0, r5
 800d67e:	f000 f8c7 	bl	800d810 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JfEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d682:	4633      	mov	r3, r6
    }
 800d684:	4618      	mov	r0, r3
 800d686:	370c      	adds	r7, #12
 800d688:	46bd      	mov	sp, r7
 800d68a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d68c <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d68c:	b480      	push	{r7}
 800d68e:	b083      	sub	sp, #12
 800d690:	af00      	add	r7, sp, #0
 800d692:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d694:	687b      	ldr	r3, [r7, #4]
 800d696:	4618      	mov	r0, r3
 800d698:	370c      	adds	r7, #12
 800d69a:	46bd      	mov	sp, r7
 800d69c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6a0:	4770      	bx	lr

0800d6a2 <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 800d6a2:	b580      	push	{r7, lr}
 800d6a4:	b082      	sub	sp, #8
 800d6a6:	af00      	add	r7, sp, #0
 800d6a8:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 800d6aa:	687b      	ldr	r3, [r7, #4]
 800d6ac:	4618      	mov	r0, r3
 800d6ae:	f7f9 fd42 	bl	8007136 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800d6b2:	4603      	mov	r3, r0
 800d6b4:	4618      	mov	r0, r3
 800d6b6:	3708      	adds	r7, #8
 800d6b8:	46bd      	mov	sp, r7
 800d6ba:	bd80      	pop	{r7, pc}

0800d6bc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d6bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6be:	b083      	sub	sp, #12
 800d6c0:	af00      	add	r7, sp, #0
 800d6c2:	6078      	str	r0, [r7, #4]
 800d6c4:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d6c6:	6878      	ldr	r0, [r7, #4]
 800d6c8:	f000 f880 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d6cc:	4604      	mov	r4, r0
 800d6ce:	6838      	ldr	r0, [r7, #0]
 800d6d0:	f7fa fac2 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800d6d4:	4603      	mov	r3, r0
 800d6d6:	461a      	mov	r2, r3
 800d6d8:	4621      	mov	r1, r4
 800d6da:	4628      	mov	r0, r5
 800d6dc:	f000 f8af 	bl	800d83e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JbEESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d6e0:	4633      	mov	r3, r6
    }
 800d6e2:	4618      	mov	r0, r3
 800d6e4:	370c      	adds	r7, #12
 800d6e6:	46bd      	mov	sp, r7
 800d6e8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d6ea <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d6ea:	b480      	push	{r7}
 800d6ec:	b083      	sub	sp, #12
 800d6ee:	af00      	add	r7, sp, #0
 800d6f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d6f2:	687b      	ldr	r3, [r7, #4]
 800d6f4:	4618      	mov	r0, r3
 800d6f6:	370c      	adds	r7, #12
 800d6f8:	46bd      	mov	sp, r7
 800d6fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6fe:	4770      	bx	lr

0800d700 <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800d700:	b580      	push	{r7, lr}
 800d702:	b082      	sub	sp, #8
 800d704:	af00      	add	r7, sp, #0
 800d706:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800d708:	687b      	ldr	r3, [r7, #4]
 800d70a:	4618      	mov	r0, r3
 800d70c:	f7f7 fb12 	bl	8004d34 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 800d710:	4603      	mov	r3, r0
 800d712:	4618      	mov	r0, r3
 800d714:	f7f9 fd33 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800d718:	4603      	mov	r3, r0
 800d71a:	4618      	mov	r0, r3
 800d71c:	3708      	adds	r7, #8
 800d71e:	46bd      	mov	sp, r7
 800d720:	bd80      	pop	{r7, pc}

0800d722 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d722:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d724:	b083      	sub	sp, #12
 800d726:	af00      	add	r7, sp, #0
 800d728:	6078      	str	r0, [r7, #4]
 800d72a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d72c:	6878      	ldr	r0, [r7, #4]
 800d72e:	f000 f84d 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d732:	4604      	mov	r4, r0
 800d734:	6838      	ldr	r0, [r7, #0]
 800d736:	f7fa fad7 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800d73a:	4603      	mov	r3, r0
 800d73c:	461a      	mov	r2, r3
 800d73e:	4621      	mov	r1, r4
 800d740:	4628      	mov	r0, r5
 800d742:	f000 f893 	bl	800d86c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JS9_EESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d746:	4633      	mov	r3, r6
    }
 800d748:	4618      	mov	r0, r3
 800d74a:	370c      	adds	r7, #12
 800d74c:	46bd      	mov	sp, r7
 800d74e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d750 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorI6SymbolSaIS4_EEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d750:	b480      	push	{r7}
 800d752:	b083      	sub	sp, #12
 800d754:	af00      	add	r7, sp, #0
 800d756:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d758:	687b      	ldr	r3, [r7, #4]
 800d75a:	4618      	mov	r0, r3
 800d75c:	370c      	adds	r7, #12
 800d75e:	46bd      	mov	sp, r7
 800d760:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d764:	4770      	bx	lr

0800d766 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorI6SymbolSaIS3_EELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 800d766:	b580      	push	{r7, lr}
 800d768:	b082      	sub	sp, #8
 800d76a:	af00      	add	r7, sp, #0
 800d76c:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 800d76e:	687b      	ldr	r3, [r7, #4]
 800d770:	4618      	mov	r0, r3
 800d772:	f7f7 fb1f 	bl	8004db4 <_ZN9__gnu_cxx16__aligned_membufISt6vectorI6SymbolSaIS2_EEE6_M_ptrEv>
 800d776:	4603      	mov	r3, r0
 800d778:	4618      	mov	r0, r3
 800d77a:	f7f9 fd24 	bl	80071c6 <_ZSt4moveIRSt6vectorI6SymbolSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_>
 800d77e:	4603      	mov	r3, r0
 800d780:	4618      	mov	r0, r3
 800d782:	3708      	adds	r7, #8
 800d784:	46bd      	mov	sp, r7
 800d786:	bd80      	pop	{r7, pc}

0800d788 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_JSC_EENSt15__invoke_resultISK_JDpT0_EE4typeESL_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d788:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d78a:	b083      	sub	sp, #12
 800d78c:	af00      	add	r7, sp, #0
 800d78e:	6078      	str	r0, [r7, #4]
 800d790:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d792:	6878      	ldr	r0, [r7, #4]
 800d794:	f000 f81a 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d798:	4604      	mov	r4, r0
 800d79a:	6838      	ldr	r0, [r7, #0]
 800d79c:	f7fa fb2a 	bl	8007df4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800d7a0:	4603      	mov	r3, r0
 800d7a2:	461a      	mov	r2, r3
 800d7a4:	4621      	mov	r1, r4
 800d7a6:	4628      	mov	r0, r5
 800d7a8:	f000 f877 	bl	800d89a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JSD_EESL_St14__invoke_otherSI_DpOT1_>
					std::forward<_Args>(__args)...);
 800d7ac:	4633      	mov	r3, r6
    }
 800d7ae:	4618      	mov	r0, r3
 800d7b0:	370c      	adds	r7, #12
 800d7b2:	46bd      	mov	sp, r7
 800d7b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d7b6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS0_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 800d7b6:	b480      	push	{r7}
 800d7b8:	b083      	sub	sp, #12
 800d7ba:	af00      	add	r7, sp, #0
 800d7bc:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800d7be:	687b      	ldr	r3, [r7, #4]
 800d7c0:	4618      	mov	r0, r3
 800d7c2:	370c      	adds	r7, #12
 800d7c4:	46bd      	mov	sp, r7
 800d7c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7ca:	4770      	bx	lr

0800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d7cc:	b480      	push	{r7}
 800d7ce:	b083      	sub	sp, #12
 800d7d0:	af00      	add	r7, sp, #0
 800d7d2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d7d4:	687b      	ldr	r3, [r7, #4]
 800d7d6:	4618      	mov	r0, r3
 800d7d8:	370c      	adds	r7, #12
 800d7da:	46bd      	mov	sp, r7
 800d7dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7e0:	4770      	bx	lr

0800d7e2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JiEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d7e2:	b5b0      	push	{r4, r5, r7, lr}
 800d7e4:	b084      	sub	sp, #16
 800d7e6:	af00      	add	r7, sp, #0
 800d7e8:	7338      	strb	r0, [r7, #12]
 800d7ea:	60b9      	str	r1, [r7, #8]
 800d7ec:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d7ee:	68b8      	ldr	r0, [r7, #8]
 800d7f0:	f7ff ffec 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d7f4:	4604      	mov	r4, r0
 800d7f6:	6878      	ldr	r0, [r7, #4]
 800d7f8:	f7fa f9be 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800d7fc:	4603      	mov	r3, r0
 800d7fe:	4619      	mov	r1, r3
 800d800:	4620      	mov	r0, r4
 800d802:	f000 f861 	bl	800d8c8 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESK_>
 800d806:	462b      	mov	r3, r5
 800d808:	4618      	mov	r0, r3
 800d80a:	3710      	adds	r7, #16
 800d80c:	46bd      	mov	sp, r7
 800d80e:	bdb0      	pop	{r4, r5, r7, pc}

0800d810 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JfEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d810:	b5b0      	push	{r4, r5, r7, lr}
 800d812:	b084      	sub	sp, #16
 800d814:	af00      	add	r7, sp, #0
 800d816:	7338      	strb	r0, [r7, #12]
 800d818:	60b9      	str	r1, [r7, #8]
 800d81a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d81c:	68b8      	ldr	r0, [r7, #8]
 800d81e:	f7ff ffd5 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d822:	4604      	mov	r4, r0
 800d824:	6878      	ldr	r0, [r7, #4]
 800d826:	f7fa f9d1 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800d82a:	4603      	mov	r3, r0
 800d82c:	4619      	mov	r1, r3
 800d82e:	4620      	mov	r0, r4
 800d830:	f000 f862 	bl	800d8f8 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESK_>
 800d834:	462b      	mov	r3, r5
 800d836:	4618      	mov	r0, r3
 800d838:	3710      	adds	r7, #16
 800d83a:	46bd      	mov	sp, r7
 800d83c:	bdb0      	pop	{r4, r5, r7, pc}

0800d83e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JbEESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d83e:	b5b0      	push	{r4, r5, r7, lr}
 800d840:	b084      	sub	sp, #16
 800d842:	af00      	add	r7, sp, #0
 800d844:	7338      	strb	r0, [r7, #12]
 800d846:	60b9      	str	r1, [r7, #8]
 800d848:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d84a:	68b8      	ldr	r0, [r7, #8]
 800d84c:	f7ff ffbe 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d850:	4604      	mov	r4, r0
 800d852:	6878      	ldr	r0, [r7, #4]
 800d854:	f7fa fa00 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800d858:	4603      	mov	r3, r0
 800d85a:	4619      	mov	r1, r3
 800d85c:	4620      	mov	r0, r4
 800d85e:	f000 f863 	bl	800d928 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESK_>
 800d862:	462b      	mov	r3, r5
 800d864:	4618      	mov	r0, r3
 800d866:	3710      	adds	r7, #16
 800d868:	46bd      	mov	sp, r7
 800d86a:	bdb0      	pop	{r4, r5, r7, pc}

0800d86c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JS9_EESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d86c:	b5b0      	push	{r4, r5, r7, lr}
 800d86e:	b084      	sub	sp, #16
 800d870:	af00      	add	r7, sp, #0
 800d872:	7338      	strb	r0, [r7, #12]
 800d874:	60b9      	str	r1, [r7, #8]
 800d876:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d878:	68b8      	ldr	r0, [r7, #8]
 800d87a:	f7ff ffa7 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d87e:	4604      	mov	r4, r0
 800d880:	6878      	ldr	r0, [r7, #4]
 800d882:	f7fa fa31 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800d886:	4603      	mov	r3, r0
 800d888:	4619      	mov	r1, r3
 800d88a:	4620      	mov	r0, r4
 800d88c:	f000 f864 	bl	800d958 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESK_>
 800d890:	462b      	mov	r3, r5
 800d892:	4618      	mov	r0, r3
 800d894:	3710      	adds	r7, #16
 800d896:	46bd      	mov	sp, r7
 800d898:	bdb0      	pop	{r4, r5, r7, pc}

0800d89a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISB_EEERNS1_15_Move_ctor_baseILb0EJifbS9_SD_EEESF_EEvOT0_OT1_EUlOT_E_JSD_EESL_St14__invoke_otherSI_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800d89a:	b5b0      	push	{r4, r5, r7, lr}
 800d89c:	b084      	sub	sp, #16
 800d89e:	af00      	add	r7, sp, #0
 800d8a0:	7338      	strb	r0, [r7, #12]
 800d8a2:	60b9      	str	r1, [r7, #8]
 800d8a4:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800d8a6:	68b8      	ldr	r0, [r7, #8]
 800d8a8:	f7ff ff90 	bl	800d7cc <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEERNS1_15_Move_ctor_baseILb0EJifbS8_SC_EEESE_EEvOT0_OT1_EUlOT_E_ESL_RNSt16remove_referenceISK_E4typeE>
 800d8ac:	4604      	mov	r4, r0
 800d8ae:	6878      	ldr	r0, [r7, #4]
 800d8b0:	f7fa faa0 	bl	8007df4 <_ZSt7forwardISt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800d8b4:	4603      	mov	r3, r0
 800d8b6:	4619      	mov	r1, r3
 800d8b8:	4620      	mov	r0, r4
 800d8ba:	f000 f865 	bl	800d988 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clISB_EENS0_16__variant_cookieESK_>
 800d8be:	462b      	mov	r3, r5
 800d8c0:	4618      	mov	r0, r3
 800d8c2:	3710      	adds	r7, #16
 800d8c4:	46bd      	mov	sp, r7
 800d8c6:	bdb0      	pop	{r4, r5, r7, pc}

0800d8c8 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESK_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d8c8:	b5b0      	push	{r4, r5, r7, lr}
 800d8ca:	b082      	sub	sp, #8
 800d8cc:	af00      	add	r7, sp, #0
 800d8ce:	6078      	str	r0, [r7, #4]
 800d8d0:	6039      	str	r1, [r7, #0]
 800d8d2:	687b      	ldr	r3, [r7, #4]
 800d8d4:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d8d6:	4618      	mov	r0, r3
 800d8d8:	f000 f86e 	bl	800d9b8 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d8dc:	4604      	mov	r4, r0
 800d8de:	6838      	ldr	r0, [r7, #0]
 800d8e0:	f000 f875 	bl	800d9ce <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800d8e4:	4603      	mov	r3, r0
 800d8e6:	4619      	mov	r1, r3
 800d8e8:	4620      	mov	r0, r4
 800d8ea:	f000 f87b 	bl	800d9e4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEiEEvOT_OT0_>
	  return {};
 800d8ee:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d8f0:	4618      	mov	r0, r3
 800d8f2:	3708      	adds	r7, #8
 800d8f4:	46bd      	mov	sp, r7
 800d8f6:	bdb0      	pop	{r4, r5, r7, pc}

0800d8f8 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESK_>:
 800d8f8:	b5b0      	push	{r4, r5, r7, lr}
 800d8fa:	b082      	sub	sp, #8
 800d8fc:	af00      	add	r7, sp, #0
 800d8fe:	6078      	str	r0, [r7, #4]
 800d900:	6039      	str	r1, [r7, #0]
 800d902:	687b      	ldr	r3, [r7, #4]
 800d904:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d906:	4618      	mov	r0, r3
 800d908:	f000 f856 	bl	800d9b8 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d90c:	4604      	mov	r4, r0
 800d90e:	6838      	ldr	r0, [r7, #0]
 800d910:	f000 f882 	bl	800da18 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800d914:	4603      	mov	r3, r0
 800d916:	4619      	mov	r1, r3
 800d918:	4620      	mov	r0, r4
 800d91a:	f000 f888 	bl	800da2e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEfEEvOT_OT0_>
	  return {};
 800d91e:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d920:	4618      	mov	r0, r3
 800d922:	3708      	adds	r7, #8
 800d924:	46bd      	mov	sp, r7
 800d926:	bdb0      	pop	{r4, r5, r7, pc}

0800d928 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESK_>:
 800d928:	b5b0      	push	{r4, r5, r7, lr}
 800d92a:	b082      	sub	sp, #8
 800d92c:	af00      	add	r7, sp, #0
 800d92e:	6078      	str	r0, [r7, #4]
 800d930:	6039      	str	r1, [r7, #0]
 800d932:	687b      	ldr	r3, [r7, #4]
 800d934:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d936:	4618      	mov	r0, r3
 800d938:	f000 f83e 	bl	800d9b8 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d93c:	4604      	mov	r4, r0
 800d93e:	6838      	ldr	r0, [r7, #0]
 800d940:	f000 f88f 	bl	800da62 <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800d944:	4603      	mov	r3, r0
 800d946:	4619      	mov	r1, r3
 800d948:	4620      	mov	r0, r4
 800d94a:	f000 f895 	bl	800da78 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEbEEvOT_OT0_>
	  return {};
 800d94e:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d950:	4618      	mov	r0, r3
 800d952:	3708      	adds	r7, #8
 800d954:	46bd      	mov	sp, r7
 800d956:	bdb0      	pop	{r4, r5, r7, pc}

0800d958 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESK_>:
 800d958:	b5b0      	push	{r4, r5, r7, lr}
 800d95a:	b082      	sub	sp, #8
 800d95c:	af00      	add	r7, sp, #0
 800d95e:	6078      	str	r0, [r7, #4]
 800d960:	6039      	str	r1, [r7, #0]
 800d962:	687b      	ldr	r3, [r7, #4]
 800d964:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d966:	4618      	mov	r0, r3
 800d968:	f000 f826 	bl	800d9b8 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d96c:	4604      	mov	r4, r0
 800d96e:	6838      	ldr	r0, [r7, #0]
 800d970:	f000 f89d 	bl	800daae <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800d974:	4603      	mov	r3, r0
 800d976:	4619      	mov	r1, r3
 800d978:	4620      	mov	r0, r4
 800d97a:	f000 f8a3 	bl	800dac4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEES8_EEvOT_OT0_>
	  return {};
 800d97e:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d980:	4618      	mov	r0, r3
 800d982:	3708      	adds	r7, #8
 800d984:	46bd      	mov	sp, r7
 800d986:	bdb0      	pop	{r4, r5, r7, pc}

0800d988 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEERNS0_15_Move_ctor_baseILb0EJifbS7_SB_EEESD_EEvOT0_OT1_ENUlOT_E_clISB_EENS0_16__variant_cookieESK_>:
 800d988:	b5b0      	push	{r4, r5, r7, lr}
 800d98a:	b082      	sub	sp, #8
 800d98c:	af00      	add	r7, sp, #0
 800d98e:	6078      	str	r0, [r7, #4]
 800d990:	6039      	str	r1, [r7, #0]
 800d992:	687b      	ldr	r3, [r7, #4]
 800d994:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800d996:	4618      	mov	r0, r3
 800d998:	f000 f80e 	bl	800d9b8 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d99c:	4604      	mov	r4, r0
 800d99e:	6838      	ldr	r0, [r7, #0]
 800d9a0:	f000 f8ac 	bl	800dafc <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800d9a4:	4603      	mov	r3, r0
 800d9a6:	4619      	mov	r1, r3
 800d9a8:	4620      	mov	r0, r4
 800d9aa:	f000 f8b2 	bl	800db12 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEESC_EEvOT_OT0_>
	  return {};
 800d9ae:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800d9b0:	4618      	mov	r0, r3
 800d9b2:	3708      	adds	r7, #8
 800d9b4:	46bd      	mov	sp, r7
 800d9b6:	bdb0      	pop	{r4, r5, r7, pc}

0800d9b8 <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d9b8:	b480      	push	{r7}
 800d9ba:	b083      	sub	sp, #12
 800d9bc:	af00      	add	r7, sp, #0
 800d9be:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d9c0:	687b      	ldr	r3, [r7, #4]
 800d9c2:	4618      	mov	r0, r3
 800d9c4:	370c      	adds	r7, #12
 800d9c6:	46bd      	mov	sp, r7
 800d9c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9cc:	4770      	bx	lr

0800d9ce <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d9ce:	b480      	push	{r7}
 800d9d0:	b083      	sub	sp, #12
 800d9d2:	af00      	add	r7, sp, #0
 800d9d4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d9d6:	687b      	ldr	r3, [r7, #4]
 800d9d8:	4618      	mov	r0, r3
 800d9da:	370c      	adds	r7, #12
 800d9dc:	46bd      	mov	sp, r7
 800d9de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9e2:	4770      	bx	lr

0800d9e4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800d9e4:	b590      	push	{r4, r7, lr}
 800d9e6:	b085      	sub	sp, #20
 800d9e8:	af00      	add	r7, sp, #0
 800d9ea:	6078      	str	r0, [r7, #4]
 800d9ec:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800d9ee:	687b      	ldr	r3, [r7, #4]
 800d9f0:	4618      	mov	r0, r3
 800d9f2:	f7fa f823 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800d9f6:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800d9f8:	6838      	ldr	r0, [r7, #0]
 800d9fa:	f7ff ffe8 	bl	800d9ce <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 800d9fe:	4603      	mov	r3, r0
        ::new (__storage)
 800da00:	681c      	ldr	r4, [r3, #0]
 800da02:	68fb      	ldr	r3, [r7, #12]
 800da04:	4619      	mov	r1, r3
 800da06:	2004      	movs	r0, #4
 800da08:	f7f3 fb27 	bl	800105a <_ZnwjPv>
 800da0c:	4603      	mov	r3, r0
 800da0e:	601c      	str	r4, [r3, #0]
    }
 800da10:	bf00      	nop
 800da12:	3714      	adds	r7, #20
 800da14:	46bd      	mov	sp, r7
 800da16:	bd90      	pop	{r4, r7, pc}

0800da18 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800da18:	b480      	push	{r7}
 800da1a:	b083      	sub	sp, #12
 800da1c:	af00      	add	r7, sp, #0
 800da1e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800da20:	687b      	ldr	r3, [r7, #4]
 800da22:	4618      	mov	r0, r3
 800da24:	370c      	adds	r7, #12
 800da26:	46bd      	mov	sp, r7
 800da28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da2c:	4770      	bx	lr

0800da2e <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800da2e:	b590      	push	{r4, r7, lr}
 800da30:	b085      	sub	sp, #20
 800da32:	af00      	add	r7, sp, #0
 800da34:	6078      	str	r0, [r7, #4]
 800da36:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800da38:	687b      	ldr	r3, [r7, #4]
 800da3a:	4618      	mov	r0, r3
 800da3c:	f7f9 fffe 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800da40:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800da42:	6838      	ldr	r0, [r7, #0]
 800da44:	f7ff ffe8 	bl	800da18 <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 800da48:	4603      	mov	r3, r0
        ::new (__storage)
 800da4a:	681c      	ldr	r4, [r3, #0]
 800da4c:	68fb      	ldr	r3, [r7, #12]
 800da4e:	4619      	mov	r1, r3
 800da50:	2004      	movs	r0, #4
 800da52:	f7f3 fb02 	bl	800105a <_ZnwjPv>
 800da56:	4603      	mov	r3, r0
 800da58:	601c      	str	r4, [r3, #0]
    }
 800da5a:	bf00      	nop
 800da5c:	3714      	adds	r7, #20
 800da5e:	46bd      	mov	sp, r7
 800da60:	bd90      	pop	{r4, r7, pc}

0800da62 <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800da62:	b480      	push	{r7}
 800da64:	b083      	sub	sp, #12
 800da66:	af00      	add	r7, sp, #0
 800da68:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800da6a:	687b      	ldr	r3, [r7, #4]
 800da6c:	4618      	mov	r0, r3
 800da6e:	370c      	adds	r7, #12
 800da70:	46bd      	mov	sp, r7
 800da72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da76:	4770      	bx	lr

0800da78 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800da78:	b590      	push	{r4, r7, lr}
 800da7a:	b085      	sub	sp, #20
 800da7c:	af00      	add	r7, sp, #0
 800da7e:	6078      	str	r0, [r7, #4]
 800da80:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800da82:	687b      	ldr	r3, [r7, #4]
 800da84:	4618      	mov	r0, r3
 800da86:	f7f9 ffd9 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800da8a:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800da8c:	6838      	ldr	r0, [r7, #0]
 800da8e:	f7ff ffe8 	bl	800da62 <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 800da92:	4603      	mov	r3, r0
        ::new (__storage)
 800da94:	781c      	ldrb	r4, [r3, #0]
 800da96:	68fb      	ldr	r3, [r7, #12]
 800da98:	4619      	mov	r1, r3
 800da9a:	2001      	movs	r0, #1
 800da9c:	f7f3 fadd 	bl	800105a <_ZnwjPv>
 800daa0:	4603      	mov	r3, r0
 800daa2:	4622      	mov	r2, r4
 800daa4:	701a      	strb	r2, [r3, #0]
    }
 800daa6:	bf00      	nop
 800daa8:	3714      	adds	r7, #20
 800daaa:	46bd      	mov	sp, r7
 800daac:	bd90      	pop	{r4, r7, pc}

0800daae <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800daae:	b480      	push	{r7}
 800dab0:	b083      	sub	sp, #12
 800dab2:	af00      	add	r7, sp, #0
 800dab4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800dab6:	687b      	ldr	r3, [r7, #4]
 800dab8:	4618      	mov	r0, r3
 800daba:	370c      	adds	r7, #12
 800dabc:	46bd      	mov	sp, r7
 800dabe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dac2:	4770      	bx	lr

0800dac4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEES8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800dac4:	b590      	push	{r4, r7, lr}
 800dac6:	b085      	sub	sp, #20
 800dac8:	af00      	add	r7, sp, #0
 800daca:	6078      	str	r0, [r7, #4]
 800dacc:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800dace:	687b      	ldr	r3, [r7, #4]
 800dad0:	4618      	mov	r0, r3
 800dad2:	f7f9 ffb3 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800dad6:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800dad8:	6838      	ldr	r0, [r7, #0]
 800dada:	f7ff ffe8 	bl	800daae <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800dade:	4604      	mov	r4, r0
        ::new (__storage)
 800dae0:	68fb      	ldr	r3, [r7, #12]
 800dae2:	4619      	mov	r1, r3
 800dae4:	2018      	movs	r0, #24
 800dae6:	f7f3 fab8 	bl	800105a <_ZnwjPv>
 800daea:	4603      	mov	r3, r0
 800daec:	4621      	mov	r1, r4
 800daee:	4618      	mov	r0, r3
 800daf0:	f015 fe5d 	bl	80237ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 800daf4:	bf00      	nop
 800daf6:	3714      	adds	r7, #20
 800daf8:	46bd      	mov	sp, r7
 800dafa:	bd90      	pop	{r4, r7, pc}

0800dafc <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800dafc:	b480      	push	{r7}
 800dafe:	b083      	sub	sp, #12
 800db00:	af00      	add	r7, sp, #0
 800db02:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800db04:	687b      	ldr	r3, [r7, #4]
 800db06:	4618      	mov	r0, r3
 800db08:	370c      	adds	r7, #12
 800db0a:	46bd      	mov	sp, r7
 800db0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db10:	4770      	bx	lr

0800db12 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEESC_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800db12:	b590      	push	{r4, r7, lr}
 800db14:	b085      	sub	sp, #20
 800db16:	af00      	add	r7, sp, #0
 800db18:	6078      	str	r0, [r7, #4]
 800db1a:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800db1c:	687b      	ldr	r3, [r7, #4]
 800db1e:	4618      	mov	r0, r3
 800db20:	f7f9 ff8c 	bl	8007a3c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEPT_RSE_>
 800db24:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800db26:	6838      	ldr	r0, [r7, #0]
 800db28:	f7ff ffe8 	bl	800dafc <_ZSt7forwardIOSt6vectorI6SymbolSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE>
 800db2c:	4604      	mov	r4, r0
        ::new (__storage)
 800db2e:	68fb      	ldr	r3, [r7, #12]
 800db30:	4619      	mov	r1, r3
 800db32:	200c      	movs	r0, #12
 800db34:	f7f3 fa91 	bl	800105a <_ZnwjPv>
 800db38:	4603      	mov	r3, r0
 800db3a:	4621      	mov	r1, r4
 800db3c:	4618      	mov	r0, r3
 800db3e:	f7fa f980 	bl	8007e42 <_ZNSt6vectorI6SymbolSaIS0_EEC1EOS2_>
    }
 800db42:	bf00      	nop
 800db44:	3714      	adds	r7, #20
 800db46:	46bd      	mov	sp, r7
 800db48:	bd90      	pop	{r4, r7, pc}
	...

0800db4c <_Z41__static_initialization_and_destruction_0ii>:
 800db4c:	b590      	push	{r4, r7, lr}
 800db4e:	b0e7      	sub	sp, #412	; 0x19c
 800db50:	af02      	add	r7, sp, #8
 800db52:	1d3b      	adds	r3, r7, #4
 800db54:	6018      	str	r0, [r3, #0]
 800db56:	463b      	mov	r3, r7
 800db58:	6019      	str	r1, [r3, #0]
 800db5a:	1d3b      	adds	r3, r7, #4
 800db5c:	681b      	ldr	r3, [r3, #0]
 800db5e:	2b01      	cmp	r3, #1
 800db60:	f040 819d 	bne.w	800de9e <_Z41__static_initialization_and_destruction_0ii+0x352>
 800db64:	463b      	mov	r3, r7
 800db66:	681b      	ldr	r3, [r3, #0]
 800db68:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800db6c:	4293      	cmp	r3, r2
 800db6e:	f040 8196 	bne.w	800de9e <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800db72:	f107 0314 	add.w	r3, r7, #20
 800db76:	4618      	mov	r0, r3
 800db78:	2322      	movs	r3, #34	; 0x22
 800db7a:	461a      	mov	r2, r3
 800db7c:	2100      	movs	r1, #0
 800db7e:	f017 f87d 	bl	8024c7c <memset>
 800db82:	f107 0314 	add.w	r3, r7, #20
 800db86:	223a      	movs	r2, #58	; 0x3a
 800db88:	701a      	strb	r2, [r3, #0]
 800db8a:	f107 0314 	add.w	r3, r7, #20
 800db8e:	2201      	movs	r2, #1
 800db90:	705a      	strb	r2, [r3, #1]
 800db92:	f107 0314 	add.w	r3, r7, #20
 800db96:	220a      	movs	r2, #10
 800db98:	709a      	strb	r2, [r3, #2]
 800db9a:	f107 0314 	add.w	r3, r7, #20
 800db9e:	220a      	movs	r2, #10
 800dba0:	70da      	strb	r2, [r3, #3]
 800dba2:	f107 0314 	add.w	r3, r7, #20
 800dba6:	222c      	movs	r2, #44	; 0x2c
 800dba8:	711a      	strb	r2, [r3, #4]
 800dbaa:	f107 0314 	add.w	r3, r7, #20
 800dbae:	220c      	movs	r2, #12
 800dbb0:	715a      	strb	r2, [r3, #5]
 800dbb2:	f107 0314 	add.w	r3, r7, #20
 800dbb6:	222e      	movs	r2, #46	; 0x2e
 800dbb8:	719a      	strb	r2, [r3, #6]
 800dbba:	f107 0314 	add.w	r3, r7, #20
 800dbbe:	220b      	movs	r2, #11
 800dbc0:	71da      	strb	r2, [r3, #7]
 800dbc2:	f107 0314 	add.w	r3, r7, #20
 800dbc6:	225b      	movs	r2, #91	; 0x5b
 800dbc8:	721a      	strb	r2, [r3, #8]
 800dbca:	f107 0314 	add.w	r3, r7, #20
 800dbce:	220d      	movs	r2, #13
 800dbd0:	725a      	strb	r2, [r3, #9]
 800dbd2:	f107 0314 	add.w	r3, r7, #20
 800dbd6:	225d      	movs	r2, #93	; 0x5d
 800dbd8:	729a      	strb	r2, [r3, #10]
 800dbda:	f107 0314 	add.w	r3, r7, #20
 800dbde:	220e      	movs	r2, #14
 800dbe0:	72da      	strb	r2, [r3, #11]
 800dbe2:	f107 0314 	add.w	r3, r7, #20
 800dbe6:	227c      	movs	r2, #124	; 0x7c
 800dbe8:	731a      	strb	r2, [r3, #12]
 800dbea:	f107 0314 	add.w	r3, r7, #20
 800dbee:	2215      	movs	r2, #21
 800dbf0:	735a      	strb	r2, [r3, #13]
 800dbf2:	f107 0314 	add.w	r3, r7, #20
 800dbf6:	2226      	movs	r2, #38	; 0x26
 800dbf8:	739a      	strb	r2, [r3, #14]
 800dbfa:	f107 0314 	add.w	r3, r7, #20
 800dbfe:	2216      	movs	r2, #22
 800dc00:	73da      	strb	r2, [r3, #15]
 800dc02:	f107 0314 	add.w	r3, r7, #20
 800dc06:	222b      	movs	r2, #43	; 0x2b
 800dc08:	741a      	strb	r2, [r3, #16]
 800dc0a:	f107 0314 	add.w	r3, r7, #20
 800dc0e:	221f      	movs	r2, #31
 800dc10:	745a      	strb	r2, [r3, #17]
 800dc12:	f107 0314 	add.w	r3, r7, #20
 800dc16:	222d      	movs	r2, #45	; 0x2d
 800dc18:	749a      	strb	r2, [r3, #18]
 800dc1a:	f107 0314 	add.w	r3, r7, #20
 800dc1e:	2220      	movs	r2, #32
 800dc20:	74da      	strb	r2, [r3, #19]
 800dc22:	f107 0314 	add.w	r3, r7, #20
 800dc26:	222a      	movs	r2, #42	; 0x2a
 800dc28:	751a      	strb	r2, [r3, #20]
 800dc2a:	f107 0314 	add.w	r3, r7, #20
 800dc2e:	2221      	movs	r2, #33	; 0x21
 800dc30:	755a      	strb	r2, [r3, #21]
 800dc32:	f107 0314 	add.w	r3, r7, #20
 800dc36:	222f      	movs	r2, #47	; 0x2f
 800dc38:	759a      	strb	r2, [r3, #22]
 800dc3a:	f107 0314 	add.w	r3, r7, #20
 800dc3e:	2222      	movs	r2, #34	; 0x22
 800dc40:	75da      	strb	r2, [r3, #23]
 800dc42:	f107 0314 	add.w	r3, r7, #20
 800dc46:	225e      	movs	r2, #94	; 0x5e
 800dc48:	761a      	strb	r2, [r3, #24]
 800dc4a:	f107 0314 	add.w	r3, r7, #20
 800dc4e:	2223      	movs	r2, #35	; 0x23
 800dc50:	765a      	strb	r2, [r3, #25]
 800dc52:	f107 0314 	add.w	r3, r7, #20
 800dc56:	2225      	movs	r2, #37	; 0x25
 800dc58:	769a      	strb	r2, [r3, #26]
 800dc5a:	f107 0314 	add.w	r3, r7, #20
 800dc5e:	2224      	movs	r2, #36	; 0x24
 800dc60:	76da      	strb	r2, [r3, #27]
 800dc62:	f107 0314 	add.w	r3, r7, #20
 800dc66:	2228      	movs	r2, #40	; 0x28
 800dc68:	771a      	strb	r2, [r3, #28]
 800dc6a:	f107 0314 	add.w	r3, r7, #20
 800dc6e:	2226      	movs	r2, #38	; 0x26
 800dc70:	775a      	strb	r2, [r3, #29]
 800dc72:	f107 0314 	add.w	r3, r7, #20
 800dc76:	2229      	movs	r2, #41	; 0x29
 800dc78:	779a      	strb	r2, [r3, #30]
 800dc7a:	f107 0314 	add.w	r3, r7, #20
 800dc7e:	2227      	movs	r2, #39	; 0x27
 800dc80:	77da      	strb	r2, [r3, #31]
 800dc82:	f107 0314 	add.w	r3, r7, #20
 800dc86:	2225      	movs	r2, #37	; 0x25
 800dc88:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800dc8c:	f107 030c 	add.w	r3, r7, #12
 800dc90:	f107 0214 	add.w	r2, r7, #20
 800dc94:	601a      	str	r2, [r3, #0]
 800dc96:	f107 030c 	add.w	r3, r7, #12
 800dc9a:	2211      	movs	r2, #17
 800dc9c:	605a      	str	r2, [r3, #4]
 800dc9e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800dca2:	4618      	mov	r0, r3
 800dca4:	f7f4 f852 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800dca8:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800dcac:	f107 020c 	add.w	r2, r7, #12
 800dcb0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800dcb4:	9300      	str	r3, [sp, #0]
 800dcb6:	460b      	mov	r3, r1
 800dcb8:	ca06      	ldmia	r2, {r1, r2}
 800dcba:	4885      	ldr	r0, [pc, #532]	; (800ded0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800dcbc:	f7f4 f85e 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800dcc0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800dcc4:	4618      	mov	r0, r3
 800dcc6:	f7f4 f84d 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800dcca:	2305      	movs	r3, #5
 800dccc:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800dcd0:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800dcd4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dcd8:	497e      	ldr	r1, [pc, #504]	; (800ded4 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800dcda:	4618      	mov	r0, r3
 800dcdc:	f7f3 fa0c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800dce0:	2306      	movs	r3, #6
 800dce2:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800dce6:	f207 1263 	addw	r2, r7, #355	; 0x163
 800dcea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dcee:	331c      	adds	r3, #28
 800dcf0:	4979      	ldr	r1, [pc, #484]	; (800ded8 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800dcf2:	4618      	mov	r0, r3
 800dcf4:	f7f3 fa28 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800dcf8:	2307      	movs	r3, #7
 800dcfa:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800dcfe:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800dd02:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd06:	3338      	adds	r3, #56	; 0x38
 800dd08:	4974      	ldr	r1, [pc, #464]	; (800dedc <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800dd0a:	4618      	mov	r0, r3
 800dd0c:	f7f3 fa1c 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800dd10:	2308      	movs	r3, #8
 800dd12:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800dd16:	f207 1265 	addw	r2, r7, #357	; 0x165
 800dd1a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd1e:	3354      	adds	r3, #84	; 0x54
 800dd20:	496f      	ldr	r1, [pc, #444]	; (800dee0 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800dd22:	4618      	mov	r0, r3
 800dd24:	f7f3 f9e8 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800dd28:	2309      	movs	r3, #9
 800dd2a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800dd2e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800dd32:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd36:	3370      	adds	r3, #112	; 0x70
 800dd38:	496a      	ldr	r1, [pc, #424]	; (800dee4 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800dd3a:	4618      	mov	r0, r3
 800dd3c:	f7f3 fa2c 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800dd40:	2310      	movs	r3, #16
 800dd42:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800dd46:	f207 1267 	addw	r2, r7, #359	; 0x167
 800dd4a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd4e:	338c      	adds	r3, #140	; 0x8c
 800dd50:	4965      	ldr	r1, [pc, #404]	; (800dee8 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800dd52:	4618      	mov	r0, r3
 800dd54:	f7f3 fa48 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800dd58:	2311      	movs	r3, #17
 800dd5a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800dd5e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800dd62:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd66:	33a8      	adds	r3, #168	; 0xa8
 800dd68:	4960      	ldr	r1, [pc, #384]	; (800deec <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800dd6a:	4618      	mov	r0, r3
 800dd6c:	f7f3 fa14 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800dd70:	2312      	movs	r3, #18
 800dd72:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800dd76:	f207 1269 	addw	r2, r7, #361	; 0x169
 800dd7a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd7e:	33c4      	adds	r3, #196	; 0xc4
 800dd80:	495b      	ldr	r1, [pc, #364]	; (800def0 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800dd82:	4618      	mov	r0, r3
 800dd84:	f7f3 f9b8 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800dd88:	2313      	movs	r3, #19
 800dd8a:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800dd8e:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800dd92:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800dd96:	33e0      	adds	r3, #224	; 0xe0
 800dd98:	4956      	ldr	r1, [pc, #344]	; (800def4 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800dd9a:	4618      	mov	r0, r3
 800dd9c:	f7f3 f9d4 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800dda0:	2314      	movs	r3, #20
 800dda2:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800dda6:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800ddaa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ddae:	33fc      	adds	r3, #252	; 0xfc
 800ddb0:	4951      	ldr	r1, [pc, #324]	; (800def8 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800ddb2:	4618      	mov	r0, r3
 800ddb4:	f7f3 fa40 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800ddb8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ddbc:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800ddc0:	601a      	str	r2, [r3, #0]
 800ddc2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ddc6:	220a      	movs	r2, #10
 800ddc8:	605a      	str	r2, [r3, #4]
 800ddca:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ddce:	4618      	mov	r0, r3
 800ddd0:	f7f4 f861 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800ddd4:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800ddd8:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800dddc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800dde0:	9300      	str	r3, [sp, #0]
 800dde2:	460b      	mov	r3, r1
 800dde4:	ca06      	ldmia	r2, {r1, r2}
 800dde6:	4845      	ldr	r0, [pc, #276]	; (800defc <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800dde8:	f7f4 f86d 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800ddec:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ddf0:	4618      	mov	r0, r3
 800ddf2:	f7f4 f85c 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800ddf6:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800ddfa:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800ddfe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800de02:	429c      	cmp	r4, r3
 800de04:	d004      	beq.n	800de10 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800de06:	3c1c      	subs	r4, #28
 800de08:	4620      	mov	r0, r4
 800de0a:	f7f3 f968 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800de0e:	e7f6      	b.n	800ddfe <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800de10:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800de14:	2200      	movs	r2, #0
 800de16:	601a      	str	r2, [r3, #0]
 800de18:	605a      	str	r2, [r3, #4]
 800de1a:	609a      	str	r2, [r3, #8]
 800de1c:	233c      	movs	r3, #60	; 0x3c
 800de1e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800de22:	231b      	movs	r3, #27
 800de24:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800de28:	231c      	movs	r3, #28
 800de2a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800de2e:	233e      	movs	r3, #62	; 0x3e
 800de30:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800de34:	2319      	movs	r3, #25
 800de36:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800de3a:	231a      	movs	r3, #26
 800de3c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800de40:	233d      	movs	r3, #61	; 0x3d
 800de42:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800de46:	2318      	movs	r3, #24
 800de48:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800de4c:	231d      	movs	r3, #29
 800de4e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800de52:	2321      	movs	r3, #33	; 0x21
 800de54:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800de58:	2317      	movs	r3, #23
 800de5a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800de5e:	231e      	movs	r3, #30
 800de60:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800de64:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800de68:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800de6c:	2304      	movs	r3, #4
 800de6e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800de72:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800de76:	4618      	mov	r0, r3
 800de78:	f7f4 f855 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800de7c:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800de80:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800de84:	9300      	str	r3, [sp, #0]
 800de86:	4613      	mov	r3, r2
 800de88:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800de8c:	ca06      	ldmia	r2, {r1, r2}
 800de8e:	481c      	ldr	r0, [pc, #112]	; (800df00 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800de90:	f7f4 f861 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800de94:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800de98:	4618      	mov	r0, r3
 800de9a:	f7f4 f850 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800de9e:	1d3b      	adds	r3, r7, #4
 800dea0:	681b      	ldr	r3, [r3, #0]
 800dea2:	2b00      	cmp	r3, #0
 800dea4:	d10e      	bne.n	800dec4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800dea6:	463b      	mov	r3, r7
 800dea8:	681b      	ldr	r3, [r3, #0]
 800deaa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800deae:	4293      	cmp	r3, r2
 800deb0:	d108      	bne.n	800dec4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800deb2:	4813      	ldr	r0, [pc, #76]	; (800df00 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800deb4:	f7fb fcbe 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800deb8:	4810      	ldr	r0, [pc, #64]	; (800defc <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800deba:	f7fb fcc8 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800debe:	4804      	ldr	r0, [pc, #16]	; (800ded0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800dec0:	f7fb fcd2 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800dec4:	bf00      	nop
 800dec6:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800deca:	46bd      	mov	sp, r7
 800decc:	bd90      	pop	{r4, r7, pc}
 800dece:	bf00      	nop
 800ded0:	2000029c 	.word	0x2000029c
 800ded4:	08029488 	.word	0x08029488
 800ded8:	08029490 	.word	0x08029490
 800dedc:	08029498 	.word	0x08029498
 800dee0:	080294a0 	.word	0x080294a0
 800dee4:	080294a8 	.word	0x080294a8
 800dee8:	080294b0 	.word	0x080294b0
 800deec:	080294b4 	.word	0x080294b4
 800def0:	080294bc 	.word	0x080294bc
 800def4:	080294c4 	.word	0x080294c4
 800def8:	080294cc 	.word	0x080294cc
 800defc:	200002b4 	.word	0x200002b4
 800df00:	200002cc 	.word	0x200002cc

0800df04 <_GLOBAL__sub_I__ZN21Expression_calculatorC2Ev>:
 800df04:	b580      	push	{r7, lr}
 800df06:	af00      	add	r7, sp, #0
 800df08:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800df0c:	2001      	movs	r0, #1
 800df0e:	f7ff fe1d 	bl	800db4c <_Z41__static_initialization_and_destruction_0ii>
 800df12:	bd80      	pop	{r7, pc}

0800df14 <_GLOBAL__sub_D__ZN21Expression_calculatorC2Ev>:
 800df14:	b580      	push	{r7, lr}
 800df16:	af00      	add	r7, sp, #0
 800df18:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800df1c:	2000      	movs	r0, #0
 800df1e:	f7ff fe15 	bl	800db4c <_Z41__static_initialization_and_destruction_0ii>
 800df22:	bd80      	pop	{r7, pc}

0800df24 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>:
 800df24:	b580      	push	{r7, lr}
 800df26:	b082      	sub	sp, #8
 800df28:	af00      	add	r7, sp, #0
 800df2a:	6078      	str	r0, [r7, #4]
 800df2c:	687b      	ldr	r3, [r7, #4]
 800df2e:	4618      	mov	r0, r3
 800df30:	f000 f8e4 	bl	800e0fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>
 800df34:	687b      	ldr	r3, [r7, #4]
 800df36:	4618      	mov	r0, r3
 800df38:	3708      	adds	r7, #8
 800df3a:	46bd      	mov	sp, r7
 800df3c:	bd80      	pop	{r7, pc}

0800df3e <_ZN16Function_handlerD1Ev>:

typedef Symbol (*function_pointer)(arglist);

#define ADD_FUNCTION(x) functions.insert({#x, &x});

class Function_handler
 800df3e:	b580      	push	{r7, lr}
 800df40:	b082      	sub	sp, #8
 800df42:	af00      	add	r7, sp, #0
 800df44:	6078      	str	r0, [r7, #4]
 800df46:	687b      	ldr	r3, [r7, #4]
 800df48:	4618      	mov	r0, r3
 800df4a:	f7ff ffeb 	bl	800df24 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEED1Ev>
 800df4e:	687b      	ldr	r3, [r7, #4]
 800df50:	4618      	mov	r0, r3
 800df52:	3708      	adds	r7, #8
 800df54:	46bd      	mov	sp, r7
 800df56:	bd80      	pop	{r7, pc}

0800df58 <__tcf_0>:
#include "Function_handler.h"

Symbol Function_handler::run_function(Function_call *fcall)
{
	static Function_handler instance;
 800df58:	b580      	push	{r7, lr}
 800df5a:	af00      	add	r7, sp, #0
 800df5c:	4801      	ldr	r0, [pc, #4]	; (800df64 <__tcf_0+0xc>)
 800df5e:	f7ff ffee 	bl	800df3e <_ZN16Function_handlerD1Ev>
 800df62:	bd80      	pop	{r7, pc}
 800df64:	20000334 	.word	0x20000334

0800df68 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>:
      variant() = default;
 800df68:	b580      	push	{r7, lr}
 800df6a:	b082      	sub	sp, #8
 800df6c:	af00      	add	r7, sp, #0
 800df6e:	6078      	str	r0, [r7, #4]
 800df70:	687b      	ldr	r3, [r7, #4]
 800df72:	4618      	mov	r0, r3
 800df74:	f000 f9f4 	bl	800e360 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>
 800df78:	687b      	ldr	r3, [r7, #4]
 800df7a:	4618      	mov	r0, r3
 800df7c:	3708      	adds	r7, #8
 800df7e:	46bd      	mov	sp, r7
 800df80:	bd80      	pop	{r7, pc}

0800df82 <_ZN6SymbolC1Ev>:
{
public:
	symbol_type type;
	symbol_value value;

	Symbol() = default;
 800df82:	b580      	push	{r7, lr}
 800df84:	b082      	sub	sp, #8
 800df86:	af00      	add	r7, sp, #0
 800df88:	6078      	str	r0, [r7, #4]
 800df8a:	687b      	ldr	r3, [r7, #4]
 800df8c:	3304      	adds	r3, #4
 800df8e:	4618      	mov	r0, r3
 800df90:	f7ff ffea 	bl	800df68 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
 800df94:	687b      	ldr	r3, [r7, #4]
 800df96:	4618      	mov	r0, r3
 800df98:	3708      	adds	r7, #8
 800df9a:	46bd      	mov	sp, r7
 800df9c:	bd80      	pop	{r7, pc}
	...

0800dfa0 <_ZN16Function_handler12run_functionEP13Function_call>:
{
 800dfa0:	b590      	push	{r4, r7, lr}
 800dfa2:	b095      	sub	sp, #84	; 0x54
 800dfa4:	af00      	add	r7, sp, #0
 800dfa6:	6078      	str	r0, [r7, #4]
 800dfa8:	6039      	str	r1, [r7, #0]
	static Function_handler instance;
 800dfaa:	4b49      	ldr	r3, [pc, #292]	; (800e0d0 <_ZN16Function_handler12run_functionEP13Function_call+0x130>)
 800dfac:	781b      	ldrb	r3, [r3, #0]
 800dfae:	f3bf 8f5b 	dmb	ish
 800dfb2:	b2db      	uxtb	r3, r3
 800dfb4:	f003 0301 	and.w	r3, r3, #1
 800dfb8:	2b00      	cmp	r3, #0
 800dfba:	bf0c      	ite	eq
 800dfbc:	2301      	moveq	r3, #1
 800dfbe:	2300      	movne	r3, #0
 800dfc0:	b2db      	uxtb	r3, r3
 800dfc2:	2b00      	cmp	r3, #0
 800dfc4:	d013      	beq.n	800dfee <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800dfc6:	4842      	ldr	r0, [pc, #264]	; (800e0d0 <_ZN16Function_handler12run_functionEP13Function_call+0x130>)
 800dfc8:	f015 f95a 	bl	8023280 <__cxa_guard_acquire>
 800dfcc:	4603      	mov	r3, r0
 800dfce:	2b00      	cmp	r3, #0
 800dfd0:	bf14      	ite	ne
 800dfd2:	2301      	movne	r3, #1
 800dfd4:	2300      	moveq	r3, #0
 800dfd6:	b2db      	uxtb	r3, r3
 800dfd8:	2b00      	cmp	r3, #0
 800dfda:	d008      	beq.n	800dfee <_ZN16Function_handler12run_functionEP13Function_call+0x4e>
 800dfdc:	483d      	ldr	r0, [pc, #244]	; (800e0d4 <_ZN16Function_handler12run_functionEP13Function_call+0x134>)
 800dfde:	f011 fab1 	bl	801f544 <_ZN16Function_handlerC1Ev>
 800dfe2:	483b      	ldr	r0, [pc, #236]	; (800e0d0 <_ZN16Function_handler12run_functionEP13Function_call+0x130>)
 800dfe4:	f015 f958 	bl	8023298 <__cxa_guard_release>
 800dfe8:	483b      	ldr	r0, [pc, #236]	; (800e0d8 <_ZN16Function_handler12run_functionEP13Function_call+0x138>)
 800dfea:	f016 fd9e 	bl	8024b2a <atexit>

	Position_counter::get_instance().line = fcall->line;
 800dfee:	683b      	ldr	r3, [r7, #0]
 800dff0:	681c      	ldr	r4, [r3, #0]
 800dff2:	f008 fc25 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 800dff6:	4603      	mov	r3, r0
 800dff8:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = fcall->position;
 800dffa:	683b      	ldr	r3, [r7, #0]
 800dffc:	685c      	ldr	r4, [r3, #4]
 800dffe:	f008 fc1f 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 800e002:	4603      	mov	r3, r0
 800e004:	605c      	str	r4, [r3, #4]

	auto search = instance.functions.find(fcall->id);
 800e006:	683b      	ldr	r3, [r7, #0]
 800e008:	3308      	adds	r3, #8
 800e00a:	4619      	mov	r1, r3
 800e00c:	4831      	ldr	r0, [pc, #196]	; (800e0d4 <_ZN16Function_handler12run_functionEP13Function_call+0x134>)
 800e00e:	f000 f88a 	bl	800e126 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>
 800e012:	4603      	mov	r3, r0
 800e014:	60bb      	str	r3, [r7, #8]
	if (search != instance.functions.end())
 800e016:	482f      	ldr	r0, [pc, #188]	; (800e0d4 <_ZN16Function_handler12run_functionEP13Function_call+0x134>)
 800e018:	f000 f894 	bl	800e144 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>
 800e01c:	4603      	mov	r3, r0
 800e01e:	60fb      	str	r3, [r7, #12]
 800e020:	f107 020c 	add.w	r2, r7, #12
 800e024:	f107 0308 	add.w	r3, r7, #8
 800e028:	4611      	mov	r1, r2
 800e02a:	4618      	mov	r0, r3
 800e02c:	f000 f897 	bl	800e15e <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800e030:	4603      	mov	r3, r0
 800e032:	2b00      	cmp	r3, #0
 800e034:	d01d      	beq.n	800e072 <_ZN16Function_handler12run_functionEP13Function_call+0xd2>
	{
		function_pointer fun = search->second;
 800e036:	f107 0308 	add.w	r3, r7, #8
 800e03a:	4618      	mov	r0, r3
 800e03c:	f000 f8a3 	bl	800e186 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>
 800e040:	4603      	mov	r3, r0
 800e042:	699b      	ldr	r3, [r3, #24]
 800e044:	64fb      	str	r3, [r7, #76]	; 0x4c
		return fun(fcall->arguments);
 800e046:	6cfc      	ldr	r4, [r7, #76]	; 0x4c
 800e048:	683b      	ldr	r3, [r7, #0]
 800e04a:	f103 0220 	add.w	r2, r3, #32
 800e04e:	f107 0310 	add.w	r3, r7, #16
 800e052:	4611      	mov	r1, r2
 800e054:	4618      	mov	r0, r3
 800e056:	f000 f8a4 	bl	800e1a2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 800e05a:	687b      	ldr	r3, [r7, #4]
 800e05c:	f107 0210 	add.w	r2, r7, #16
 800e060:	4611      	mov	r1, r2
 800e062:	4618      	mov	r0, r3
 800e064:	47a0      	blx	r4
 800e066:	f107 0310 	add.w	r3, r7, #16
 800e06a:	4618      	mov	r0, r3
 800e06c:	f000 f8d6 	bl	800e21c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 800e070:	e029      	b.n	800e0c6 <_ZN16Function_handler12run_functionEP13Function_call+0x126>
	}
	else
	{
		Transmitter::report_error(std::string("function " + fcall->id + " not found"));
 800e072:	683b      	ldr	r3, [r7, #0]
 800e074:	f103 0208 	add.w	r2, r3, #8
 800e078:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800e07c:	4917      	ldr	r1, [pc, #92]	; (800e0dc <_ZN16Function_handler12run_functionEP13Function_call+0x13c>)
 800e07e:	4618      	mov	r0, r3
 800e080:	f000 f8e7 	bl	800e252 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 800e084:	f107 031c 	add.w	r3, r7, #28
 800e088:	f107 0134 	add.w	r1, r7, #52	; 0x34
 800e08c:	4a14      	ldr	r2, [pc, #80]	; (800e0e0 <_ZN16Function_handler12run_functionEP13Function_call+0x140>)
 800e08e:	4618      	mov	r0, r3
 800e090:	f000 f904 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 800e094:	f107 031c 	add.w	r3, r7, #28
 800e098:	4618      	mov	r0, r3
 800e09a:	f00a fb73 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800e09e:	f107 031c 	add.w	r3, r7, #28
 800e0a2:	4618      	mov	r0, r3
 800e0a4:	f015 fb9d 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800e0a8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800e0ac:	4618      	mov	r0, r3
 800e0ae:	f015 fb98 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return {};
 800e0b2:	687b      	ldr	r3, [r7, #4]
 800e0b4:	4618      	mov	r0, r3
 800e0b6:	2320      	movs	r3, #32
 800e0b8:	461a      	mov	r2, r3
 800e0ba:	2100      	movs	r1, #0
 800e0bc:	f016 fdde 	bl	8024c7c <memset>
 800e0c0:	6878      	ldr	r0, [r7, #4]
 800e0c2:	f7ff ff5e 	bl	800df82 <_ZN6SymbolC1Ev>
	}
}
 800e0c6:	6878      	ldr	r0, [r7, #4]
 800e0c8:	3754      	adds	r7, #84	; 0x54
 800e0ca:	46bd      	mov	sp, r7
 800e0cc:	bd90      	pop	{r4, r7, pc}
 800e0ce:	bf00      	nop
 800e0d0:	2000034c 	.word	0x2000034c
 800e0d4:	20000334 	.word	0x20000334
 800e0d8:	0800df59 	.word	0x0800df59
 800e0dc:	080294d0 	.word	0x080294d0
 800e0e0:	080294dc 	.word	0x080294dc

0800e0e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800e0e4:	b580      	push	{r7, lr}
 800e0e6:	b082      	sub	sp, #8
 800e0e8:	af00      	add	r7, sp, #0
 800e0ea:	6078      	str	r0, [r7, #4]
 800e0ec:	6878      	ldr	r0, [r7, #4]
 800e0ee:	f000 f944 	bl	800e37a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>
 800e0f2:	687b      	ldr	r3, [r7, #4]
 800e0f4:	4618      	mov	r0, r3
 800e0f6:	3708      	adds	r7, #8
 800e0f8:	46bd      	mov	sp, r7
 800e0fa:	bd80      	pop	{r7, pc}

0800e0fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 800e0fc:	b580      	push	{r7, lr}
 800e0fe:	b082      	sub	sp, #8
 800e100:	af00      	add	r7, sp, #0
 800e102:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800e104:	6878      	ldr	r0, [r7, #4]
 800e106:	f000 f963 	bl	800e3d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800e10a:	4603      	mov	r3, r0
 800e10c:	4619      	mov	r1, r3
 800e10e:	6878      	ldr	r0, [r7, #4]
 800e110:	f000 f93f 	bl	800e392 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
 800e114:	687b      	ldr	r3, [r7, #4]
 800e116:	4618      	mov	r0, r3
 800e118:	f7ff ffe4 	bl	800e0e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EED1Ev>
 800e11c:	687b      	ldr	r3, [r7, #4]
 800e11e:	4618      	mov	r0, r3
 800e120:	3708      	adds	r7, #8
 800e122:	46bd      	mov	sp, r7
 800e124:	bd80      	pop	{r7, pc}

0800e126 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE4findERSH_>:
       *  pointing to the sought after %pair.  If unsuccessful it returns the
       *  past-the-end ( @c end() ) iterator.
       */

      iterator
      find(const key_type& __x)
 800e126:	b580      	push	{r7, lr}
 800e128:	b082      	sub	sp, #8
 800e12a:	af00      	add	r7, sp, #0
 800e12c:	6078      	str	r0, [r7, #4]
 800e12e:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800e130:	687b      	ldr	r3, [r7, #4]
 800e132:	6839      	ldr	r1, [r7, #0]
 800e134:	4618      	mov	r0, r3
 800e136:	f000 f957 	bl	800e3e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>
 800e13a:	4603      	mov	r3, r0
 800e13c:	4618      	mov	r0, r3
 800e13e:	3708      	adds	r7, #8
 800e140:	46bd      	mov	sp, r7
 800e142:	bd80      	pop	{r7, pc}

0800e144 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800e144:	b580      	push	{r7, lr}
 800e146:	b082      	sub	sp, #8
 800e148:	af00      	add	r7, sp, #0
 800e14a:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800e14c:	687b      	ldr	r3, [r7, #4]
 800e14e:	4618      	mov	r0, r3
 800e150:	f000 f986 	bl	800e460 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e154:	4603      	mov	r3, r0
 800e156:	4618      	mov	r0, r3
 800e158:	3708      	adds	r7, #8
 800e15a:	46bd      	mov	sp, r7
 800e15c:	bd80      	pop	{r7, pc}

0800e15e <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800e15e:	b480      	push	{r7}
 800e160:	b083      	sub	sp, #12
 800e162:	af00      	add	r7, sp, #0
 800e164:	6078      	str	r0, [r7, #4]
 800e166:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800e168:	687b      	ldr	r3, [r7, #4]
 800e16a:	681a      	ldr	r2, [r3, #0]
 800e16c:	683b      	ldr	r3, [r7, #0]
 800e16e:	681b      	ldr	r3, [r3, #0]
 800e170:	429a      	cmp	r2, r3
 800e172:	bf14      	ite	ne
 800e174:	2301      	movne	r3, #1
 800e176:	2300      	moveq	r3, #0
 800e178:	b2db      	uxtb	r3, r3
 800e17a:	4618      	mov	r0, r3
 800e17c:	370c      	adds	r7, #12
 800e17e:	46bd      	mov	sp, r7
 800e180:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e184:	4770      	bx	lr

0800e186 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800e186:	b580      	push	{r7, lr}
 800e188:	b082      	sub	sp, #8
 800e18a:	af00      	add	r7, sp, #0
 800e18c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 800e18e:	687b      	ldr	r3, [r7, #4]
 800e190:	681b      	ldr	r3, [r3, #0]
 800e192:	4618      	mov	r0, r3
 800e194:	f000 f975 	bl	800e482 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e198:	4603      	mov	r3, r0
 800e19a:	4618      	mov	r0, r3
 800e19c:	3708      	adds	r7, #8
 800e19e:	46bd      	mov	sp, r7
 800e1a0:	bd80      	pop	{r7, pc}

0800e1a2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>:
      vector(const vector& __x)
 800e1a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e1a4:	b085      	sub	sp, #20
 800e1a6:	af00      	add	r7, sp, #0
 800e1a8:	6078      	str	r0, [r7, #4]
 800e1aa:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 800e1ac:	687c      	ldr	r4, [r7, #4]
 800e1ae:	6838      	ldr	r0, [r7, #0]
 800e1b0:	f7f4 fafd 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800e1b4:	4605      	mov	r5, r0
 800e1b6:	683b      	ldr	r3, [r7, #0]
 800e1b8:	4618      	mov	r0, r3
 800e1ba:	f000 f97e 	bl	800e4ba <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e1be:	4602      	mov	r2, r0
 800e1c0:	f107 030c 	add.w	r3, r7, #12
 800e1c4:	4611      	mov	r1, r2
 800e1c6:	4618      	mov	r0, r3
 800e1c8:	f000 f969 	bl	800e49e <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>
 800e1cc:	f107 030c 	add.w	r3, r7, #12
 800e1d0:	461a      	mov	r2, r3
 800e1d2:	4629      	mov	r1, r5
 800e1d4:	4620      	mov	r0, r4
 800e1d6:	f000 f993 	bl	800e500 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>
 800e1da:	f107 030c 	add.w	r3, r7, #12
 800e1de:	4618      	mov	r0, r3
 800e1e0:	f000 f976 	bl	800e4d0 <_ZNSaIP10ExpressionED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800e1e4:	6838      	ldr	r0, [r7, #0]
 800e1e6:	f000 f9b8 	bl	800e55a <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 800e1ea:	4605      	mov	r5, r0
 800e1ec:	6838      	ldr	r0, [r7, #0]
 800e1ee:	f000 f9c8 	bl	800e582 <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>
 800e1f2:	4606      	mov	r6, r0
 800e1f4:	687b      	ldr	r3, [r7, #4]
 800e1f6:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 800e1f8:	687b      	ldr	r3, [r7, #4]
 800e1fa:	4618      	mov	r0, r3
 800e1fc:	f000 f9d5 	bl	800e5aa <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e200:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 800e202:	4622      	mov	r2, r4
 800e204:	4631      	mov	r1, r6
 800e206:	4628      	mov	r0, r5
 800e208:	f000 f9da 	bl	800e5c0 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>
 800e20c:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 800e20e:	687b      	ldr	r3, [r7, #4]
 800e210:	605a      	str	r2, [r3, #4]
      }
 800e212:	687b      	ldr	r3, [r7, #4]
 800e214:	4618      	mov	r0, r3
 800e216:	3714      	adds	r7, #20
 800e218:	46bd      	mov	sp, r7
 800e21a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e21c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800e21c:	b5b0      	push	{r4, r5, r7, lr}
 800e21e:	b082      	sub	sp, #8
 800e220:	af00      	add	r7, sp, #0
 800e222:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800e224:	687b      	ldr	r3, [r7, #4]
 800e226:	681c      	ldr	r4, [r3, #0]
 800e228:	687b      	ldr	r3, [r7, #4]
 800e22a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800e22c:	687b      	ldr	r3, [r7, #4]
 800e22e:	4618      	mov	r0, r3
 800e230:	f000 f9bb 	bl	800e5aa <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e234:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800e236:	461a      	mov	r2, r3
 800e238:	4629      	mov	r1, r5
 800e23a:	4620      	mov	r0, r4
 800e23c:	f000 f9d1 	bl	800e5e2 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
      }
 800e240:	687b      	ldr	r3, [r7, #4]
 800e242:	4618      	mov	r0, r3
 800e244:	f000 f970 	bl	800e528 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>
 800e248:	687b      	ldr	r3, [r7, #4]
 800e24a:	4618      	mov	r0, r3
 800e24c:	3708      	adds	r7, #8
 800e24e:	46bd      	mov	sp, r7
 800e250:	bdb0      	pop	{r4, r5, r7, pc}

0800e252 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    }
#endif  // !_GLIBCXX_USE_CXX11_ABI
   
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
 800e252:	b580      	push	{r7, lr}
 800e254:	b086      	sub	sp, #24
 800e256:	af00      	add	r7, sp, #0
 800e258:	60f8      	str	r0, [r7, #12]
 800e25a:	60b9      	str	r1, [r7, #8]
 800e25c:	607a      	str	r2, [r7, #4]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      __glibcxx_requires_string(__lhs);
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      const __size_type __len = _Traits::length(__lhs);
 800e25e:	68b8      	ldr	r0, [r7, #8]
 800e260:	f7f2 fee4 	bl	800102c <_ZNSt11char_traitsIcE6lengthEPKc>
 800e264:	6178      	str	r0, [r7, #20]
      __string_type __str;
 800e266:	68f8      	ldr	r0, [r7, #12]
 800e268:	f015 fa9a 	bl	80237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
      __str.reserve(__len + __rhs.size());
 800e26c:	6878      	ldr	r0, [r7, #4]
 800e26e:	f015 faec 	bl	802384a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 800e272:	4602      	mov	r2, r0
 800e274:	697b      	ldr	r3, [r7, #20]
 800e276:	4413      	add	r3, r2
 800e278:	4619      	mov	r1, r3
 800e27a:	68f8      	ldr	r0, [r7, #12]
 800e27c:	f015 faf1 	bl	8023862 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
      __str.append(__lhs, __len);
 800e280:	697a      	ldr	r2, [r7, #20]
 800e282:	68b9      	ldr	r1, [r7, #8]
 800e284:	68f8      	ldr	r0, [r7, #12]
 800e286:	f015 fc2b 	bl	8023ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
      __str.append(__rhs);
 800e28a:	6879      	ldr	r1, [r7, #4]
 800e28c:	68f8      	ldr	r0, [r7, #12]
 800e28e:	f015 fc1d 	bl	8023acc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 800e292:	bf00      	nop
    }
 800e294:	68f8      	ldr	r0, [r7, #12]
 800e296:	3718      	adds	r7, #24
 800e298:	46bd      	mov	sp, r7
 800e29a:	bd80      	pop	{r7, pc}

0800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 800e29c:	b580      	push	{r7, lr}
 800e29e:	b084      	sub	sp, #16
 800e2a0:	af00      	add	r7, sp, #0
 800e2a2:	60f8      	str	r0, [r7, #12]
 800e2a4:	60b9      	str	r1, [r7, #8]
 800e2a6:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 800e2a8:	6879      	ldr	r1, [r7, #4]
 800e2aa:	68b8      	ldr	r0, [r7, #8]
 800e2ac:	f015 fc28 	bl	8023b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 800e2b0:	4603      	mov	r3, r0
 800e2b2:	4618      	mov	r0, r3
 800e2b4:	f7f8 ff63 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800e2b8:	4603      	mov	r3, r0
 800e2ba:	4619      	mov	r1, r3
 800e2bc:	68f8      	ldr	r0, [r7, #12]
 800e2be:	f015 fa76 	bl	80237ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 800e2c2:	68f8      	ldr	r0, [r7, #12]
 800e2c4:	3710      	adds	r7, #16
 800e2c6:	46bd      	mov	sp, r7
 800e2c8:	bd80      	pop	{r7, pc}

0800e2ca <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800e2ca:	b580      	push	{r7, lr}
 800e2cc:	b082      	sub	sp, #8
 800e2ce:	af00      	add	r7, sp, #0
 800e2d0:	6078      	str	r0, [r7, #4]
 800e2d2:	7039      	strb	r1, [r7, #0]
 800e2d4:	687b      	ldr	r3, [r7, #4]
 800e2d6:	4611      	mov	r1, r2
 800e2d8:	4618      	mov	r0, r3
 800e2da:	f000 f9ae 	bl	800e63a <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e2de:	687b      	ldr	r3, [r7, #4]
 800e2e0:	4618      	mov	r0, r3
 800e2e2:	3708      	adds	r7, #8
 800e2e4:	46bd      	mov	sp, r7
 800e2e6:	bd80      	pop	{r7, pc}

0800e2e8 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800e2e8:	b580      	push	{r7, lr}
 800e2ea:	b082      	sub	sp, #8
 800e2ec:	af00      	add	r7, sp, #0
 800e2ee:	6078      	str	r0, [r7, #4]
 800e2f0:	7039      	strb	r1, [r7, #0]
 800e2f2:	687b      	ldr	r3, [r7, #4]
 800e2f4:	4611      	mov	r1, r2
 800e2f6:	4618      	mov	r0, r3
 800e2f8:	f7ff ffe7 	bl	800e2ca <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e2fc:	687b      	ldr	r3, [r7, #4]
 800e2fe:	4618      	mov	r0, r3
 800e300:	3708      	adds	r7, #8
 800e302:	46bd      	mov	sp, r7
 800e304:	bd80      	pop	{r7, pc}

0800e306 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800e306:	b580      	push	{r7, lr}
 800e308:	b082      	sub	sp, #8
 800e30a:	af00      	add	r7, sp, #0
 800e30c:	6078      	str	r0, [r7, #4]
 800e30e:	7039      	strb	r1, [r7, #0]
 800e310:	687b      	ldr	r3, [r7, #4]
 800e312:	4611      	mov	r1, r2
 800e314:	4618      	mov	r0, r3
 800e316:	f7ff ffe7 	bl	800e2e8 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e31a:	687b      	ldr	r3, [r7, #4]
 800e31c:	4618      	mov	r0, r3
 800e31e:	3708      	adds	r7, #8
 800e320:	46bd      	mov	sp, r7
 800e322:	bd80      	pop	{r7, pc}

0800e324 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800e324:	b580      	push	{r7, lr}
 800e326:	b082      	sub	sp, #8
 800e328:	af00      	add	r7, sp, #0
 800e32a:	6078      	str	r0, [r7, #4]
 800e32c:	7039      	strb	r1, [r7, #0]
 800e32e:	687b      	ldr	r3, [r7, #4]
 800e330:	4611      	mov	r1, r2
 800e332:	4618      	mov	r0, r3
 800e334:	f7ff ffe7 	bl	800e306 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e338:	687b      	ldr	r3, [r7, #4]
 800e33a:	4618      	mov	r0, r3
 800e33c:	3708      	adds	r7, #8
 800e33e:	46bd      	mov	sp, r7
 800e340:	bd80      	pop	{r7, pc}

0800e342 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800e342:	b580      	push	{r7, lr}
 800e344:	b082      	sub	sp, #8
 800e346:	af00      	add	r7, sp, #0
 800e348:	6078      	str	r0, [r7, #4]
 800e34a:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 800e34c:	687b      	ldr	r3, [r7, #4]
 800e34e:	4611      	mov	r1, r2
 800e350:	4618      	mov	r0, r3
 800e352:	f7ff ffe7 	bl	800e324 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800e356:	687b      	ldr	r3, [r7, #4]
 800e358:	4618      	mov	r0, r3
 800e35a:	3708      	adds	r7, #8
 800e35c:	46bd      	mov	sp, r7
 800e35e:	bd80      	pop	{r7, pc}

0800e360 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1Ev>:
      _Variant_base()
 800e360:	b580      	push	{r7, lr}
 800e362:	b082      	sub	sp, #8
 800e364:	af00      	add	r7, sp, #0
 800e366:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 800e368:	4619      	mov	r1, r3
 800e36a:	6878      	ldr	r0, [r7, #4]
 800e36c:	f7ff ffe9 	bl	800e342 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800e370:	687b      	ldr	r3, [r7, #4]
 800e372:	4618      	mov	r0, r3
 800e374:	3708      	adds	r7, #8
 800e376:	46bd      	mov	sp, r7
 800e378:	bd80      	pop	{r7, pc}

0800e37a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEED1Ev>:
 800e37a:	b580      	push	{r7, lr}
 800e37c:	b082      	sub	sp, #8
 800e37e:	af00      	add	r7, sp, #0
 800e380:	6078      	str	r0, [r7, #4]
 800e382:	6878      	ldr	r0, [r7, #4]
 800e384:	f000 f96b 	bl	800e65e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>
 800e388:	687b      	ldr	r3, [r7, #4]
 800e38a:	4618      	mov	r0, r3
 800e38c:	3708      	adds	r7, #8
 800e38e:	46bd      	mov	sp, r7
 800e390:	bd80      	pop	{r7, pc}

0800e392 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e392:	b580      	push	{r7, lr}
 800e394:	b084      	sub	sp, #16
 800e396:	af00      	add	r7, sp, #0
 800e398:	6078      	str	r0, [r7, #4]
 800e39a:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 800e39c:	683b      	ldr	r3, [r7, #0]
 800e39e:	2b00      	cmp	r3, #0
 800e3a0:	d012      	beq.n	800e3c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0x36>
	  _M_erase(_S_right(__x));
 800e3a2:	6838      	ldr	r0, [r7, #0]
 800e3a4:	f000 f966 	bl	800e674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800e3a8:	4603      	mov	r3, r0
 800e3aa:	4619      	mov	r1, r3
 800e3ac:	6878      	ldr	r0, [r7, #4]
 800e3ae:	f7ff fff0 	bl	800e392 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E>
	  _Link_type __y = _S_left(__x);
 800e3b2:	6838      	ldr	r0, [r7, #0]
 800e3b4:	f000 f96a 	bl	800e68c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800e3b8:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 800e3ba:	6839      	ldr	r1, [r7, #0]
 800e3bc:	6878      	ldr	r0, [r7, #4]
 800e3be:	f000 f971 	bl	800e6a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>
	  __x = __y;
 800e3c2:	68fb      	ldr	r3, [r7, #12]
 800e3c4:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800e3c6:	e7e9      	b.n	800e39c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_eraseEPSt13_Rb_tree_nodeISG_E+0xa>
    }
 800e3c8:	bf00      	nop
 800e3ca:	3710      	adds	r7, #16
 800e3cc:	46bd      	mov	sp, r7
 800e3ce:	bd80      	pop	{r7, pc}

0800e3d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 800e3d0:	b480      	push	{r7}
 800e3d2:	b083      	sub	sp, #12
 800e3d4:	af00      	add	r7, sp, #0
 800e3d6:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 800e3d8:	687b      	ldr	r3, [r7, #4]
 800e3da:	689b      	ldr	r3, [r3, #8]
 800e3dc:	4618      	mov	r0, r3
 800e3de:	370c      	adds	r7, #12
 800e3e0:	46bd      	mov	sp, r7
 800e3e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3e6:	4770      	bx	lr

0800e3e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e3e8:	b590      	push	{r4, r7, lr}
 800e3ea:	b085      	sub	sp, #20
 800e3ec:	af00      	add	r7, sp, #0
 800e3ee:	6078      	str	r0, [r7, #4]
 800e3f0:	6039      	str	r1, [r7, #0]
    find(const _Key& __k)
    {
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 800e3f2:	6878      	ldr	r0, [r7, #4]
 800e3f4:	f7ff ffec 	bl	800e3d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 800e3f8:	4604      	mov	r4, r0
 800e3fa:	6878      	ldr	r0, [r7, #4]
 800e3fc:	f000 f963 	bl	800e6c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 800e400:	4602      	mov	r2, r0
 800e402:	683b      	ldr	r3, [r7, #0]
 800e404:	4621      	mov	r1, r4
 800e406:	6878      	ldr	r0, [r7, #4]
 800e408:	f000 f969 	bl	800e6de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>
 800e40c:	4603      	mov	r3, r0
 800e40e:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 800e410:	6878      	ldr	r0, [r7, #4]
 800e412:	f000 f825 	bl	800e460 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e416:	4603      	mov	r3, r0
 800e418:	60fb      	str	r3, [r7, #12]
 800e41a:	f107 020c 	add.w	r2, r7, #12
 800e41e:	f107 0308 	add.w	r3, r7, #8
 800e422:	4611      	mov	r1, r2
 800e424:	4618      	mov	r0, r3
 800e426:	f000 f98b 	bl	800e740 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 800e42a:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 800e42c:	2b00      	cmp	r3, #0
 800e42e:	d10d      	bne.n	800e44c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 800e430:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 800e432:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 800e434:	4618      	mov	r0, r3
 800e436:	f000 f997 	bl	800e768 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800e43a:	4603      	mov	r3, r0
 800e43c:	461a      	mov	r2, r3
 800e43e:	6839      	ldr	r1, [r7, #0]
 800e440:	4620      	mov	r0, r4
 800e442:	f7f8 fb1c 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800e446:	4603      	mov	r3, r0
 800e448:	2b00      	cmp	r3, #0
 800e44a:	d004      	beq.n	800e456 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 800e44c:	6878      	ldr	r0, [r7, #4]
 800e44e:	f000 f807 	bl	800e460 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>
 800e452:	4603      	mov	r3, r0
 800e454:	e000      	b.n	800e458 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE4findERS7_+0x70>
 800e456:	68bb      	ldr	r3, [r7, #8]
    }
 800e458:	4618      	mov	r0, r3
 800e45a:	3714      	adds	r7, #20
 800e45c:	46bd      	mov	sp, r7
 800e45e:	bd90      	pop	{r4, r7, pc}

0800e460 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800e460:	b580      	push	{r7, lr}
 800e462:	b084      	sub	sp, #16
 800e464:	af00      	add	r7, sp, #0
 800e466:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800e468:	687b      	ldr	r3, [r7, #4]
 800e46a:	1d1a      	adds	r2, r3, #4
 800e46c:	f107 030c 	add.w	r3, r7, #12
 800e470:	4611      	mov	r1, r2
 800e472:	4618      	mov	r0, r3
 800e474:	f000 f984 	bl	800e780 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800e478:	68fb      	ldr	r3, [r7, #12]
 800e47a:	4618      	mov	r0, r3
 800e47c:	3710      	adds	r7, #16
 800e47e:	46bd      	mov	sp, r7
 800e480:	bd80      	pop	{r7, pc}

0800e482 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr()
 800e482:	b580      	push	{r7, lr}
 800e484:	b082      	sub	sp, #8
 800e486:	af00      	add	r7, sp, #0
 800e488:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800e48a:	687b      	ldr	r3, [r7, #4]
 800e48c:	3310      	adds	r3, #16
 800e48e:	4618      	mov	r0, r3
 800e490:	f000 f985 	bl	800e79e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800e494:	4603      	mov	r3, r0
 800e496:	4618      	mov	r0, r3
 800e498:	3708      	adds	r7, #8
 800e49a:	46bd      	mov	sp, r7
 800e49c:	bd80      	pop	{r7, pc}

0800e49e <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 800e49e:	b580      	push	{r7, lr}
 800e4a0:	b082      	sub	sp, #8
 800e4a2:	af00      	add	r7, sp, #0
 800e4a4:	6078      	str	r0, [r7, #4]
 800e4a6:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 800e4a8:	687b      	ldr	r3, [r7, #4]
 800e4aa:	6839      	ldr	r1, [r7, #0]
 800e4ac:	4618      	mov	r0, r3
 800e4ae:	f000 f982 	bl	800e7b6 <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>
 800e4b2:	6878      	ldr	r0, [r7, #4]
 800e4b4:	3708      	adds	r7, #8
 800e4b6:	46bd      	mov	sp, r7
 800e4b8:	bd80      	pop	{r7, pc}

0800e4ba <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800e4ba:	b480      	push	{r7}
 800e4bc:	b083      	sub	sp, #12
 800e4be:	af00      	add	r7, sp, #0
 800e4c0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e4c2:	687b      	ldr	r3, [r7, #4]
 800e4c4:	4618      	mov	r0, r3
 800e4c6:	370c      	adds	r7, #12
 800e4c8:	46bd      	mov	sp, r7
 800e4ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4ce:	4770      	bx	lr

0800e4d0 <_ZNSaIP10ExpressionED1Ev>:
 800e4d0:	b580      	push	{r7, lr}
 800e4d2:	b082      	sub	sp, #8
 800e4d4:	af00      	add	r7, sp, #0
 800e4d6:	6078      	str	r0, [r7, #4]
 800e4d8:	6878      	ldr	r0, [r7, #4]
 800e4da:	f000 f979 	bl	800e7d0 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>
 800e4de:	687b      	ldr	r3, [r7, #4]
 800e4e0:	4618      	mov	r0, r3
 800e4e2:	3708      	adds	r7, #8
 800e4e4:	46bd      	mov	sp, r7
 800e4e6:	bd80      	pop	{r7, pc}

0800e4e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800e4e8:	b580      	push	{r7, lr}
 800e4ea:	b082      	sub	sp, #8
 800e4ec:	af00      	add	r7, sp, #0
 800e4ee:	6078      	str	r0, [r7, #4]
 800e4f0:	6878      	ldr	r0, [r7, #4]
 800e4f2:	f7ff ffed 	bl	800e4d0 <_ZNSaIP10ExpressionED1Ev>
 800e4f6:	687b      	ldr	r3, [r7, #4]
 800e4f8:	4618      	mov	r0, r3
 800e4fa:	3708      	adds	r7, #8
 800e4fc:	46bd      	mov	sp, r7
 800e4fe:	bd80      	pop	{r7, pc}

0800e500 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 800e500:	b580      	push	{r7, lr}
 800e502:	b084      	sub	sp, #16
 800e504:	af00      	add	r7, sp, #0
 800e506:	60f8      	str	r0, [r7, #12]
 800e508:	60b9      	str	r1, [r7, #8]
 800e50a:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 800e50c:	68fb      	ldr	r3, [r7, #12]
 800e50e:	6879      	ldr	r1, [r7, #4]
 800e510:	4618      	mov	r0, r3
 800e512:	f000 f968 	bl	800e7e6 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
 800e516:	68b9      	ldr	r1, [r7, #8]
 800e518:	68f8      	ldr	r0, [r7, #12]
 800e51a:	f000 f976 	bl	800e80a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>
 800e51e:	68fb      	ldr	r3, [r7, #12]
 800e520:	4618      	mov	r0, r3
 800e522:	3710      	adds	r7, #16
 800e524:	46bd      	mov	sp, r7
 800e526:	bd80      	pop	{r7, pc}

0800e528 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800e528:	b580      	push	{r7, lr}
 800e52a:	b082      	sub	sp, #8
 800e52c:	af00      	add	r7, sp, #0
 800e52e:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800e530:	687b      	ldr	r3, [r7, #4]
 800e532:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800e534:	687b      	ldr	r3, [r7, #4]
 800e536:	689a      	ldr	r2, [r3, #8]
 800e538:	687b      	ldr	r3, [r7, #4]
 800e53a:	681b      	ldr	r3, [r3, #0]
 800e53c:	1ad3      	subs	r3, r2, r3
 800e53e:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800e540:	461a      	mov	r2, r3
 800e542:	6878      	ldr	r0, [r7, #4]
 800e544:	f000 f97c 	bl	800e840 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 800e548:	687b      	ldr	r3, [r7, #4]
 800e54a:	4618      	mov	r0, r3
 800e54c:	f7ff ffcc 	bl	800e4e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>
 800e550:	687b      	ldr	r3, [r7, #4]
 800e552:	4618      	mov	r0, r3
 800e554:	3708      	adds	r7, #8
 800e556:	46bd      	mov	sp, r7
 800e558:	bd80      	pop	{r7, pc}

0800e55a <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 800e55a:	b580      	push	{r7, lr}
 800e55c:	b084      	sub	sp, #16
 800e55e:	af00      	add	r7, sp, #0
 800e560:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 800e562:	687b      	ldr	r3, [r7, #4]
 800e564:	681b      	ldr	r3, [r3, #0]
 800e566:	60fb      	str	r3, [r7, #12]
 800e568:	f107 020c 	add.w	r2, r7, #12
 800e56c:	f107 0308 	add.w	r3, r7, #8
 800e570:	4611      	mov	r1, r2
 800e572:	4618      	mov	r0, r3
 800e574:	f000 f977 	bl	800e866 <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800e578:	68bb      	ldr	r3, [r7, #8]
 800e57a:	4618      	mov	r0, r3
 800e57c:	3710      	adds	r7, #16
 800e57e:	46bd      	mov	sp, r7
 800e580:	bd80      	pop	{r7, pc}

0800e582 <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800e582:	b580      	push	{r7, lr}
 800e584:	b084      	sub	sp, #16
 800e586:	af00      	add	r7, sp, #0
 800e588:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 800e58a:	687b      	ldr	r3, [r7, #4]
 800e58c:	685b      	ldr	r3, [r3, #4]
 800e58e:	60fb      	str	r3, [r7, #12]
 800e590:	f107 020c 	add.w	r2, r7, #12
 800e594:	f107 0308 	add.w	r3, r7, #8
 800e598:	4611      	mov	r1, r2
 800e59a:	4618      	mov	r0, r3
 800e59c:	f000 f963 	bl	800e866 <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 800e5a0:	68bb      	ldr	r3, [r7, #8]
 800e5a2:	4618      	mov	r0, r3
 800e5a4:	3710      	adds	r7, #16
 800e5a6:	46bd      	mov	sp, r7
 800e5a8:	bd80      	pop	{r7, pc}

0800e5aa <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800e5aa:	b480      	push	{r7}
 800e5ac:	b083      	sub	sp, #12
 800e5ae:	af00      	add	r7, sp, #0
 800e5b0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e5b2:	687b      	ldr	r3, [r7, #4]
 800e5b4:	4618      	mov	r0, r3
 800e5b6:	370c      	adds	r7, #12
 800e5b8:	46bd      	mov	sp, r7
 800e5ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5be:	4770      	bx	lr

0800e5c0 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 800e5c0:	b580      	push	{r7, lr}
 800e5c2:	b084      	sub	sp, #16
 800e5c4:	af00      	add	r7, sp, #0
 800e5c6:	60f8      	str	r0, [r7, #12]
 800e5c8:	60b9      	str	r1, [r7, #8]
 800e5ca:	607a      	str	r2, [r7, #4]
 800e5cc:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 800e5ce:	687a      	ldr	r2, [r7, #4]
 800e5d0:	68b9      	ldr	r1, [r7, #8]
 800e5d2:	68f8      	ldr	r0, [r7, #12]
 800e5d4:	f000 f957 	bl	800e886 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800e5d8:	4603      	mov	r3, r0
 800e5da:	4618      	mov	r0, r3
 800e5dc:	3710      	adds	r7, #16
 800e5de:	46bd      	mov	sp, r7
 800e5e0:	bd80      	pop	{r7, pc}

0800e5e2 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800e5e2:	b580      	push	{r7, lr}
 800e5e4:	b084      	sub	sp, #16
 800e5e6:	af00      	add	r7, sp, #0
 800e5e8:	60f8      	str	r0, [r7, #12]
 800e5ea:	60b9      	str	r1, [r7, #8]
 800e5ec:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800e5ee:	68b9      	ldr	r1, [r7, #8]
 800e5f0:	68f8      	ldr	r0, [r7, #12]
 800e5f2:	f000 f95a 	bl	800e8aa <_ZSt8_DestroyIPP10ExpressionEvT_S3_>
    }
 800e5f6:	bf00      	nop
 800e5f8:	3710      	adds	r7, #16
 800e5fa:	46bd      	mov	sp, r7
 800e5fc:	bd80      	pop	{r7, pc}

0800e5fe <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800e5fe:	b480      	push	{r7}
 800e600:	b083      	sub	sp, #12
 800e602:	af00      	add	r7, sp, #0
 800e604:	6078      	str	r0, [r7, #4]
 800e606:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 800e608:	687b      	ldr	r3, [r7, #4]
 800e60a:	2200      	movs	r2, #0
 800e60c:	601a      	str	r2, [r3, #0]
	{ }
 800e60e:	687b      	ldr	r3, [r7, #4]
 800e610:	4618      	mov	r0, r3
 800e612:	370c      	adds	r7, #12
 800e614:	46bd      	mov	sp, r7
 800e616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e61a:	4770      	bx	lr

0800e61c <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800e61c:	b580      	push	{r7, lr}
 800e61e:	b082      	sub	sp, #8
 800e620:	af00      	add	r7, sp, #0
 800e622:	6078      	str	r0, [r7, #4]
 800e624:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800e626:	687b      	ldr	r3, [r7, #4]
 800e628:	4611      	mov	r1, r2
 800e62a:	4618      	mov	r0, r3
 800e62c:	f7ff ffe7 	bl	800e5fe <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800e630:	687b      	ldr	r3, [r7, #4]
 800e632:	4618      	mov	r0, r3
 800e634:	3708      	adds	r7, #8
 800e636:	46bd      	mov	sp, r7
 800e638:	bd80      	pop	{r7, pc}

0800e63a <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800e63a:	b580      	push	{r7, lr}
 800e63c:	b082      	sub	sp, #8
 800e63e:	af00      	add	r7, sp, #0
 800e640:	6078      	str	r0, [r7, #4]
 800e642:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 800e644:	687b      	ldr	r3, [r7, #4]
 800e646:	4611      	mov	r1, r2
 800e648:	4618      	mov	r0, r3
 800e64a:	f7ff ffe7 	bl	800e61c <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 800e64e:	687b      	ldr	r3, [r7, #4]
 800e650:	2200      	movs	r2, #0
 800e652:	761a      	strb	r2, [r3, #24]
	{ }
 800e654:	687b      	ldr	r3, [r7, #4]
 800e656:	4618      	mov	r0, r3
 800e658:	3708      	adds	r7, #8
 800e65a:	46bd      	mov	sp, r7
 800e65c:	bd80      	pop	{r7, pc}

0800e65e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800e65e:	b480      	push	{r7}
 800e660:	b083      	sub	sp, #12
 800e662:	af00      	add	r7, sp, #0
 800e664:	6078      	str	r0, [r7, #4]
 800e666:	687b      	ldr	r3, [r7, #4]
 800e668:	4618      	mov	r0, r3
 800e66a:	370c      	adds	r7, #12
 800e66c:	46bd      	mov	sp, r7
 800e66e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e672:	4770      	bx	lr

0800e674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e674:	b480      	push	{r7}
 800e676:	b083      	sub	sp, #12
 800e678:	af00      	add	r7, sp, #0
 800e67a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 800e67c:	687b      	ldr	r3, [r7, #4]
 800e67e:	68db      	ldr	r3, [r3, #12]
 800e680:	4618      	mov	r0, r3
 800e682:	370c      	adds	r7, #12
 800e684:	46bd      	mov	sp, r7
 800e686:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e68a:	4770      	bx	lr

0800e68c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e68c:	b480      	push	{r7}
 800e68e:	b083      	sub	sp, #12
 800e690:	af00      	add	r7, sp, #0
 800e692:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800e694:	687b      	ldr	r3, [r7, #4]
 800e696:	689b      	ldr	r3, [r3, #8]
 800e698:	4618      	mov	r0, r3
 800e69a:	370c      	adds	r7, #12
 800e69c:	46bd      	mov	sp, r7
 800e69e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6a2:	4770      	bx	lr

0800e6a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e6a4:	b580      	push	{r7, lr}
 800e6a6:	b082      	sub	sp, #8
 800e6a8:	af00      	add	r7, sp, #0
 800e6aa:	6078      	str	r0, [r7, #4]
 800e6ac:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 800e6ae:	6839      	ldr	r1, [r7, #0]
 800e6b0:	6878      	ldr	r0, [r7, #4]
 800e6b2:	f000 f907 	bl	800e8c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>
	_M_put_node(__p);
 800e6b6:	6839      	ldr	r1, [r7, #0]
 800e6b8:	6878      	ldr	r0, [r7, #4]
 800e6ba:	f000 f918 	bl	800e8ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>
      }
 800e6be:	bf00      	nop
 800e6c0:	3708      	adds	r7, #8
 800e6c2:	46bd      	mov	sp, r7
 800e6c4:	bd80      	pop	{r7, pc}

0800e6c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 800e6c6:	b480      	push	{r7}
 800e6c8:	b083      	sub	sp, #12
 800e6ca:	af00      	add	r7, sp, #0
 800e6cc:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800e6ce:	687b      	ldr	r3, [r7, #4]
 800e6d0:	3304      	adds	r3, #4
 800e6d2:	4618      	mov	r0, r3
 800e6d4:	370c      	adds	r7, #12
 800e6d6:	46bd      	mov	sp, r7
 800e6d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6dc:	4770      	bx	lr

0800e6de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800e6de:	b590      	push	{r4, r7, lr}
 800e6e0:	b087      	sub	sp, #28
 800e6e2:	af00      	add	r7, sp, #0
 800e6e4:	60f8      	str	r0, [r7, #12]
 800e6e6:	60b9      	str	r1, [r7, #8]
 800e6e8:	607a      	str	r2, [r7, #4]
 800e6ea:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800e6ec:	68bb      	ldr	r3, [r7, #8]
 800e6ee:	2b00      	cmp	r3, #0
 800e6f0:	d01b      	beq.n	800e72a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 800e6f2:	68fc      	ldr	r4, [r7, #12]
 800e6f4:	68b8      	ldr	r0, [r7, #8]
 800e6f6:	f000 f90c 	bl	800e912 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800e6fa:	4603      	mov	r3, r0
 800e6fc:	683a      	ldr	r2, [r7, #0]
 800e6fe:	4619      	mov	r1, r3
 800e700:	4620      	mov	r0, r4
 800e702:	f7f8 f9bc 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800e706:	4603      	mov	r3, r0
 800e708:	f083 0301 	eor.w	r3, r3, #1
 800e70c:	b2db      	uxtb	r3, r3
 800e70e:	2b00      	cmp	r3, #0
 800e710:	d006      	beq.n	800e720 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 800e712:	68bb      	ldr	r3, [r7, #8]
 800e714:	607b      	str	r3, [r7, #4]
 800e716:	68b8      	ldr	r0, [r7, #8]
 800e718:	f7ff ffb8 	bl	800e68c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 800e71c:	60b8      	str	r0, [r7, #8]
 800e71e:	e7e5      	b.n	800e6ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 800e720:	68b8      	ldr	r0, [r7, #8]
 800e722:	f7ff ffa7 	bl	800e674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 800e726:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 800e728:	e7e0      	b.n	800e6ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_lower_boundEPSt13_Rb_tree_nodeISG_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 800e72a:	f107 0314 	add.w	r3, r7, #20
 800e72e:	6879      	ldr	r1, [r7, #4]
 800e730:	4618      	mov	r0, r3
 800e732:	f000 f825 	bl	800e780 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 800e736:	697b      	ldr	r3, [r7, #20]
    }
 800e738:	4618      	mov	r0, r3
 800e73a:	371c      	adds	r7, #28
 800e73c:	46bd      	mov	sp, r7
 800e73e:	bd90      	pop	{r4, r7, pc}

0800e740 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800e740:	b480      	push	{r7}
 800e742:	b083      	sub	sp, #12
 800e744:	af00      	add	r7, sp, #0
 800e746:	6078      	str	r0, [r7, #4]
 800e748:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800e74a:	687b      	ldr	r3, [r7, #4]
 800e74c:	681a      	ldr	r2, [r3, #0]
 800e74e:	683b      	ldr	r3, [r7, #0]
 800e750:	681b      	ldr	r3, [r3, #0]
 800e752:	429a      	cmp	r2, r3
 800e754:	bf0c      	ite	eq
 800e756:	2301      	moveq	r3, #1
 800e758:	2300      	movne	r3, #0
 800e75a:	b2db      	uxtb	r3, r3
 800e75c:	4618      	mov	r0, r3
 800e75e:	370c      	adds	r7, #12
 800e760:	46bd      	mov	sp, r7
 800e762:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e766:	4770      	bx	lr

0800e768 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 800e768:	b580      	push	{r7, lr}
 800e76a:	b082      	sub	sp, #8
 800e76c:	af00      	add	r7, sp, #0
 800e76e:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 800e770:	6878      	ldr	r0, [r7, #4]
 800e772:	f000 f8ce 	bl	800e912 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 800e776:	4603      	mov	r3, r0
 800e778:	4618      	mov	r0, r3
 800e77a:	3708      	adds	r7, #8
 800e77c:	46bd      	mov	sp, r7
 800e77e:	bd80      	pop	{r7, pc}

0800e780 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800e780:	b480      	push	{r7}
 800e782:	b083      	sub	sp, #12
 800e784:	af00      	add	r7, sp, #0
 800e786:	6078      	str	r0, [r7, #4]
 800e788:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800e78a:	687b      	ldr	r3, [r7, #4]
 800e78c:	683a      	ldr	r2, [r7, #0]
 800e78e:	601a      	str	r2, [r3, #0]
 800e790:	687b      	ldr	r3, [r7, #4]
 800e792:	4618      	mov	r0, r3
 800e794:	370c      	adds	r7, #12
 800e796:	46bd      	mov	sp, r7
 800e798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e79c:	4770      	bx	lr

0800e79e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 800e79e:	b580      	push	{r7, lr}
 800e7a0:	b082      	sub	sp, #8
 800e7a2:	af00      	add	r7, sp, #0
 800e7a4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800e7a6:	6878      	ldr	r0, [r7, #4]
 800e7a8:	f000 f8c6 	bl	800e938 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800e7ac:	4603      	mov	r3, r0
 800e7ae:	4618      	mov	r0, r3
 800e7b0:	3708      	adds	r7, #8
 800e7b2:	46bd      	mov	sp, r7
 800e7b4:	bd80      	pop	{r7, pc}

0800e7b6 <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 800e7b6:	b580      	push	{r7, lr}
 800e7b8:	b082      	sub	sp, #8
 800e7ba:	af00      	add	r7, sp, #0
 800e7bc:	6078      	str	r0, [r7, #4]
 800e7be:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 800e7c0:	6839      	ldr	r1, [r7, #0]
 800e7c2:	6878      	ldr	r0, [r7, #4]
 800e7c4:	f000 f8c3 	bl	800e94e <_ZNSaIP10ExpressionEC1ERKS1_>
 800e7c8:	6878      	ldr	r0, [r7, #4]
 800e7ca:	3708      	adds	r7, #8
 800e7cc:	46bd      	mov	sp, r7
 800e7ce:	bd80      	pop	{r7, pc}

0800e7d0 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>:
 800e7d0:	b480      	push	{r7}
 800e7d2:	b083      	sub	sp, #12
 800e7d4:	af00      	add	r7, sp, #0
 800e7d6:	6078      	str	r0, [r7, #4]
 800e7d8:	687b      	ldr	r3, [r7, #4]
 800e7da:	4618      	mov	r0, r3
 800e7dc:	370c      	adds	r7, #12
 800e7de:	46bd      	mov	sp, r7
 800e7e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7e4:	4770      	bx	lr

0800e7e6 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 800e7e6:	b580      	push	{r7, lr}
 800e7e8:	b082      	sub	sp, #8
 800e7ea:	af00      	add	r7, sp, #0
 800e7ec:	6078      	str	r0, [r7, #4]
 800e7ee:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 800e7f0:	6839      	ldr	r1, [r7, #0]
 800e7f2:	6878      	ldr	r0, [r7, #4]
 800e7f4:	f000 f8ab 	bl	800e94e <_ZNSaIP10ExpressionEC1ERKS1_>
 800e7f8:	687b      	ldr	r3, [r7, #4]
 800e7fa:	4618      	mov	r0, r3
 800e7fc:	f000 f8b5 	bl	800e96a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 800e800:	687b      	ldr	r3, [r7, #4]
 800e802:	4618      	mov	r0, r3
 800e804:	3708      	adds	r7, #8
 800e806:	46bd      	mov	sp, r7
 800e808:	bd80      	pop	{r7, pc}

0800e80a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 800e80a:	b580      	push	{r7, lr}
 800e80c:	b082      	sub	sp, #8
 800e80e:	af00      	add	r7, sp, #0
 800e810:	6078      	str	r0, [r7, #4]
 800e812:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 800e814:	6839      	ldr	r1, [r7, #0]
 800e816:	6878      	ldr	r0, [r7, #4]
 800e818:	f000 f8bb 	bl	800e992 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 800e81c:	4602      	mov	r2, r0
 800e81e:	687b      	ldr	r3, [r7, #4]
 800e820:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 800e822:	687b      	ldr	r3, [r7, #4]
 800e824:	681a      	ldr	r2, [r3, #0]
 800e826:	687b      	ldr	r3, [r7, #4]
 800e828:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 800e82a:	687b      	ldr	r3, [r7, #4]
 800e82c:	681a      	ldr	r2, [r3, #0]
 800e82e:	683b      	ldr	r3, [r7, #0]
 800e830:	009b      	lsls	r3, r3, #2
 800e832:	441a      	add	r2, r3
 800e834:	687b      	ldr	r3, [r7, #4]
 800e836:	609a      	str	r2, [r3, #8]
      }
 800e838:	bf00      	nop
 800e83a:	3708      	adds	r7, #8
 800e83c:	46bd      	mov	sp, r7
 800e83e:	bd80      	pop	{r7, pc}

0800e840 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800e840:	b580      	push	{r7, lr}
 800e842:	b084      	sub	sp, #16
 800e844:	af00      	add	r7, sp, #0
 800e846:	60f8      	str	r0, [r7, #12]
 800e848:	60b9      	str	r1, [r7, #8]
 800e84a:	607a      	str	r2, [r7, #4]
	if (__p)
 800e84c:	68bb      	ldr	r3, [r7, #8]
 800e84e:	2b00      	cmp	r3, #0
 800e850:	d005      	beq.n	800e85e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800e852:	68fb      	ldr	r3, [r7, #12]
 800e854:	687a      	ldr	r2, [r7, #4]
 800e856:	68b9      	ldr	r1, [r7, #8]
 800e858:	4618      	mov	r0, r3
 800e85a:	f000 f8ae 	bl	800e9ba <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>
      }
 800e85e:	bf00      	nop
 800e860:	3710      	adds	r7, #16
 800e862:	46bd      	mov	sp, r7
 800e864:	bd80      	pop	{r7, pc}

0800e866 <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800e866:	b480      	push	{r7}
 800e868:	b083      	sub	sp, #12
 800e86a:	af00      	add	r7, sp, #0
 800e86c:	6078      	str	r0, [r7, #4]
 800e86e:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800e870:	683b      	ldr	r3, [r7, #0]
 800e872:	681a      	ldr	r2, [r3, #0]
 800e874:	687b      	ldr	r3, [r7, #4]
 800e876:	601a      	str	r2, [r3, #0]
 800e878:	687b      	ldr	r3, [r7, #4]
 800e87a:	4618      	mov	r0, r3
 800e87c:	370c      	adds	r7, #12
 800e87e:	46bd      	mov	sp, r7
 800e880:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e884:	4770      	bx	lr

0800e886 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 800e886:	b580      	push	{r7, lr}
 800e888:	b086      	sub	sp, #24
 800e88a:	af00      	add	r7, sp, #0
 800e88c:	60f8      	str	r0, [r7, #12]
 800e88e:	60b9      	str	r1, [r7, #8]
 800e890:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 800e892:	2301      	movs	r3, #1
 800e894:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 800e896:	687a      	ldr	r2, [r7, #4]
 800e898:	68b9      	ldr	r1, [r7, #8]
 800e89a:	68f8      	ldr	r0, [r7, #12]
 800e89c:	f000 f89c 	bl	800e9d8 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>
 800e8a0:	4603      	mov	r3, r0
    }
 800e8a2:	4618      	mov	r0, r3
 800e8a4:	3718      	adds	r7, #24
 800e8a6:	46bd      	mov	sp, r7
 800e8a8:	bd80      	pop	{r7, pc}

0800e8aa <_ZSt8_DestroyIPP10ExpressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800e8aa:	b580      	push	{r7, lr}
 800e8ac:	b082      	sub	sp, #8
 800e8ae:	af00      	add	r7, sp, #0
 800e8b0:	6078      	str	r0, [r7, #4]
 800e8b2:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800e8b4:	6839      	ldr	r1, [r7, #0]
 800e8b6:	6878      	ldr	r0, [r7, #4]
 800e8b8:	f000 f89e 	bl	800e9f8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>
    }
 800e8bc:	bf00      	nop
 800e8be:	3708      	adds	r7, #8
 800e8c0:	46bd      	mov	sp, r7
 800e8c2:	bd80      	pop	{r7, pc}

0800e8c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e8c4:	b590      	push	{r4, r7, lr}
 800e8c6:	b083      	sub	sp, #12
 800e8c8:	af00      	add	r7, sp, #0
 800e8ca:	6078      	str	r0, [r7, #4]
 800e8cc:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 800e8ce:	6878      	ldr	r0, [r7, #4]
 800e8d0:	f000 f89d 	bl	800ea0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800e8d4:	4604      	mov	r4, r0
 800e8d6:	6838      	ldr	r0, [r7, #0]
 800e8d8:	f7ff fdd3 	bl	800e482 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e8dc:	4603      	mov	r3, r0
 800e8de:	4619      	mov	r1, r3
 800e8e0:	4620      	mov	r0, r4
 800e8e2:	f000 f89f 	bl	800ea24 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>
      }
 800e8e6:	bf00      	nop
 800e8e8:	370c      	adds	r7, #12
 800e8ea:	46bd      	mov	sp, r7
 800e8ec:	bd90      	pop	{r4, r7, pc}

0800e8ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_put_nodeEPSt13_Rb_tree_nodeISG_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800e8ee:	b580      	push	{r7, lr}
 800e8f0:	b082      	sub	sp, #8
 800e8f2:	af00      	add	r7, sp, #0
 800e8f4:	6078      	str	r0, [r7, #4]
 800e8f6:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 800e8f8:	6878      	ldr	r0, [r7, #4]
 800e8fa:	f000 f888 	bl	800ea0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 800e8fe:	4603      	mov	r3, r0
 800e900:	2201      	movs	r2, #1
 800e902:	6839      	ldr	r1, [r7, #0]
 800e904:	4618      	mov	r0, r3
 800e906:	f000 f89a 	bl	800ea3e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>
 800e90a:	bf00      	nop
 800e90c:	3708      	adds	r7, #8
 800e90e:	46bd      	mov	sp, r7
 800e910:	bd80      	pop	{r7, pc}

0800e912 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>:
      _S_key(_Const_Link_type __x)
 800e912:	b580      	push	{r7, lr}
 800e914:	b084      	sub	sp, #16
 800e916:	af00      	add	r7, sp, #0
 800e918:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800e91a:	6878      	ldr	r0, [r7, #4]
 800e91c:	f000 f89e 	bl	800ea5c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 800e920:	4602      	mov	r2, r0
 800e922:	f107 030c 	add.w	r3, r7, #12
 800e926:	4611      	mov	r1, r2
 800e928:	4618      	mov	r0, r3
 800e92a:	f000 f8a5 	bl	800ea78 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>
 800e92e:	4603      	mov	r3, r0
      }
 800e930:	4618      	mov	r0, r3
 800e932:	3710      	adds	r7, #16
 800e934:	46bd      	mov	sp, r7
 800e936:	bd80      	pop	{r7, pc}

0800e938 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 800e938:	b480      	push	{r7}
 800e93a:	b083      	sub	sp, #12
 800e93c:	af00      	add	r7, sp, #0
 800e93e:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 800e940:	687b      	ldr	r3, [r7, #4]
 800e942:	4618      	mov	r0, r3
 800e944:	370c      	adds	r7, #12
 800e946:	46bd      	mov	sp, r7
 800e948:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e94c:	4770      	bx	lr

0800e94e <_ZNSaIP10ExpressionEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 800e94e:	b580      	push	{r7, lr}
 800e950:	b082      	sub	sp, #8
 800e952:	af00      	add	r7, sp, #0
 800e954:	6078      	str	r0, [r7, #4]
 800e956:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800e958:	6839      	ldr	r1, [r7, #0]
 800e95a:	6878      	ldr	r0, [r7, #4]
 800e95c:	f000 f898 	bl	800ea90 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>
 800e960:	687b      	ldr	r3, [r7, #4]
 800e962:	4618      	mov	r0, r3
 800e964:	3708      	adds	r7, #8
 800e966:	46bd      	mov	sp, r7
 800e968:	bd80      	pop	{r7, pc}

0800e96a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800e96a:	b480      	push	{r7}
 800e96c:	b083      	sub	sp, #12
 800e96e:	af00      	add	r7, sp, #0
 800e970:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 800e972:	687b      	ldr	r3, [r7, #4]
 800e974:	2200      	movs	r2, #0
 800e976:	601a      	str	r2, [r3, #0]
 800e978:	687b      	ldr	r3, [r7, #4]
 800e97a:	2200      	movs	r2, #0
 800e97c:	605a      	str	r2, [r3, #4]
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	2200      	movs	r2, #0
 800e982:	609a      	str	r2, [r3, #8]
	{ }
 800e984:	687b      	ldr	r3, [r7, #4]
 800e986:	4618      	mov	r0, r3
 800e988:	370c      	adds	r7, #12
 800e98a:	46bd      	mov	sp, r7
 800e98c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e990:	4770      	bx	lr

0800e992 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800e992:	b580      	push	{r7, lr}
 800e994:	b082      	sub	sp, #8
 800e996:	af00      	add	r7, sp, #0
 800e998:	6078      	str	r0, [r7, #4]
 800e99a:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800e99c:	683b      	ldr	r3, [r7, #0]
 800e99e:	2b00      	cmp	r3, #0
 800e9a0:	d006      	beq.n	800e9b0 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x1e>
 800e9a2:	687b      	ldr	r3, [r7, #4]
 800e9a4:	6839      	ldr	r1, [r7, #0]
 800e9a6:	4618      	mov	r0, r3
 800e9a8:	f000 f87e 	bl	800eaa8 <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>
 800e9ac:	4603      	mov	r3, r0
 800e9ae:	e000      	b.n	800e9b2 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x20>
 800e9b0:	2300      	movs	r3, #0
      }
 800e9b2:	4618      	mov	r0, r3
 800e9b4:	3708      	adds	r7, #8
 800e9b6:	46bd      	mov	sp, r7
 800e9b8:	bd80      	pop	{r7, pc}

0800e9ba <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800e9ba:	b580      	push	{r7, lr}
 800e9bc:	b084      	sub	sp, #16
 800e9be:	af00      	add	r7, sp, #0
 800e9c0:	60f8      	str	r0, [r7, #12]
 800e9c2:	60b9      	str	r1, [r7, #8]
 800e9c4:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800e9c6:	687a      	ldr	r2, [r7, #4]
 800e9c8:	68b9      	ldr	r1, [r7, #8]
 800e9ca:	68f8      	ldr	r0, [r7, #12]
 800e9cc:	f000 f87b 	bl	800eac6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>
 800e9d0:	bf00      	nop
 800e9d2:	3710      	adds	r7, #16
 800e9d4:	46bd      	mov	sp, r7
 800e9d6:	bd80      	pop	{r7, pc}

0800e9d8 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800e9d8:	b580      	push	{r7, lr}
 800e9da:	b084      	sub	sp, #16
 800e9dc:	af00      	add	r7, sp, #0
 800e9de:	60f8      	str	r0, [r7, #12]
 800e9e0:	60b9      	str	r1, [r7, #8]
 800e9e2:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 800e9e4:	687a      	ldr	r2, [r7, #4]
 800e9e6:	68b9      	ldr	r1, [r7, #8]
 800e9e8:	68f8      	ldr	r0, [r7, #12]
 800e9ea:	f000 f878 	bl	800eade <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 800e9ee:	4603      	mov	r3, r0
 800e9f0:	4618      	mov	r0, r3
 800e9f2:	3710      	adds	r7, #16
 800e9f4:	46bd      	mov	sp, r7
 800e9f6:	bd80      	pop	{r7, pc}

0800e9f8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800e9f8:	b480      	push	{r7}
 800e9fa:	b083      	sub	sp, #12
 800e9fc:	af00      	add	r7, sp, #0
 800e9fe:	6078      	str	r0, [r7, #4]
 800ea00:	6039      	str	r1, [r7, #0]
 800ea02:	bf00      	nop
 800ea04:	370c      	adds	r7, #12
 800ea06:	46bd      	mov	sp, r7
 800ea08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea0c:	4770      	bx	lr

0800ea0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800ea0e:	b480      	push	{r7}
 800ea10:	b083      	sub	sp, #12
 800ea12:	af00      	add	r7, sp, #0
 800ea14:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800ea16:	687b      	ldr	r3, [r7, #4]
 800ea18:	4618      	mov	r0, r3
 800ea1a:	370c      	adds	r7, #12
 800ea1c:	46bd      	mov	sp, r7
 800ea1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea22:	4770      	bx	lr

0800ea24 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE7destroyISH_EEvRSJ_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800ea24:	b580      	push	{r7, lr}
 800ea26:	b082      	sub	sp, #8
 800ea28:	af00      	add	r7, sp, #0
 800ea2a:	6078      	str	r0, [r7, #4]
 800ea2c:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 800ea2e:	6839      	ldr	r1, [r7, #0]
 800ea30:	6878      	ldr	r0, [r7, #4]
 800ea32:	f000 f879 	bl	800eb28 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>
 800ea36:	bf00      	nop
 800ea38:	3708      	adds	r7, #8
 800ea3a:	46bd      	mov	sp, r7
 800ea3c:	bd80      	pop	{r7, pc}

0800ea3e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE10deallocateERSJ_PSI_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800ea3e:	b580      	push	{r7, lr}
 800ea40:	b084      	sub	sp, #16
 800ea42:	af00      	add	r7, sp, #0
 800ea44:	60f8      	str	r0, [r7, #12]
 800ea46:	60b9      	str	r1, [r7, #8]
 800ea48:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800ea4a:	687a      	ldr	r2, [r7, #4]
 800ea4c:	68b9      	ldr	r1, [r7, #8]
 800ea4e:	68f8      	ldr	r0, [r7, #12]
 800ea50:	f000 f876 	bl	800eb40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>
 800ea54:	bf00      	nop
 800ea56:	3710      	adds	r7, #16
 800ea58:	46bd      	mov	sp, r7
 800ea5a:	bd80      	pop	{r7, pc}

0800ea5c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>:
      _M_valptr() const
 800ea5c:	b580      	push	{r7, lr}
 800ea5e:	b082      	sub	sp, #8
 800ea60:	af00      	add	r7, sp, #0
 800ea62:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 800ea64:	687b      	ldr	r3, [r7, #4]
 800ea66:	3310      	adds	r3, #16
 800ea68:	4618      	mov	r0, r3
 800ea6a:	f000 f875 	bl	800eb58 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>
 800ea6e:	4603      	mov	r3, r0
 800ea70:	4618      	mov	r0, r3
 800ea72:	3708      	adds	r7, #8
 800ea74:	46bd      	mov	sp, r7
 800ea76:	bd80      	pop	{r7, pc}

0800ea78 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERKSG_>:
      operator()(const _Pair& __x) const
 800ea78:	b480      	push	{r7}
 800ea7a:	b083      	sub	sp, #12
 800ea7c:	af00      	add	r7, sp, #0
 800ea7e:	6078      	str	r0, [r7, #4]
 800ea80:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 800ea82:	683b      	ldr	r3, [r7, #0]
 800ea84:	4618      	mov	r0, r3
 800ea86:	370c      	adds	r7, #12
 800ea88:	46bd      	mov	sp, r7
 800ea8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea8e:	4770      	bx	lr

0800ea90 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 800ea90:	b480      	push	{r7}
 800ea92:	b083      	sub	sp, #12
 800ea94:	af00      	add	r7, sp, #0
 800ea96:	6078      	str	r0, [r7, #4]
 800ea98:	6039      	str	r1, [r7, #0]
 800ea9a:	687b      	ldr	r3, [r7, #4]
 800ea9c:	4618      	mov	r0, r3
 800ea9e:	370c      	adds	r7, #12
 800eaa0:	46bd      	mov	sp, r7
 800eaa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eaa6:	4770      	bx	lr

0800eaa8 <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 800eaa8:	b580      	push	{r7, lr}
 800eaaa:	b082      	sub	sp, #8
 800eaac:	af00      	add	r7, sp, #0
 800eaae:	6078      	str	r0, [r7, #4]
 800eab0:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800eab2:	2200      	movs	r2, #0
 800eab4:	6839      	ldr	r1, [r7, #0]
 800eab6:	6878      	ldr	r0, [r7, #4]
 800eab8:	f000 f85a 	bl	800eb70 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>
 800eabc:	4603      	mov	r3, r0
 800eabe:	4618      	mov	r0, r3
 800eac0:	3708      	adds	r7, #8
 800eac2:	46bd      	mov	sp, r7
 800eac4:	bd80      	pop	{r7, pc}

0800eac6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800eac6:	b580      	push	{r7, lr}
 800eac8:	b084      	sub	sp, #16
 800eaca:	af00      	add	r7, sp, #0
 800eacc:	60f8      	str	r0, [r7, #12]
 800eace:	60b9      	str	r1, [r7, #8]
 800ead0:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800ead2:	68b8      	ldr	r0, [r7, #8]
 800ead4:	f014 fbd0 	bl	8023278 <_ZdlPv>
      }
 800ead8:	3710      	adds	r7, #16
 800eada:	46bd      	mov	sp, r7
 800eadc:	bd80      	pop	{r7, pc}

0800eade <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    copy(_II __first, _II __last, _OI __result)
 800eade:	b590      	push	{r4, r7, lr}
 800eae0:	b085      	sub	sp, #20
 800eae2:	af00      	add	r7, sp, #0
 800eae4:	60f8      	str	r0, [r7, #12]
 800eae6:	60b9      	str	r1, [r7, #8]
 800eae8:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 800eaea:	68f8      	ldr	r0, [r7, #12]
 800eaec:	f000 f85f 	bl	800ebae <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800eaf0:	4604      	mov	r4, r0
 800eaf2:	68b8      	ldr	r0, [r7, #8]
 800eaf4:	f000 f85b 	bl	800ebae <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800eaf8:	4603      	mov	r3, r0
 800eafa:	687a      	ldr	r2, [r7, #4]
 800eafc:	4619      	mov	r1, r3
 800eafe:	4620      	mov	r0, r4
 800eb00:	f000 f860 	bl	800ebc4 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>
 800eb04:	4603      	mov	r3, r0
    }
 800eb06:	4618      	mov	r0, r3
 800eb08:	3714      	adds	r7, #20
 800eb0a:	46bd      	mov	sp, r7
 800eb0c:	bd90      	pop	{r4, r7, pc}

0800eb0e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>:
    struct pair
 800eb0e:	b580      	push	{r7, lr}
 800eb10:	b082      	sub	sp, #8
 800eb12:	af00      	add	r7, sp, #0
 800eb14:	6078      	str	r0, [r7, #4]
 800eb16:	687b      	ldr	r3, [r7, #4]
 800eb18:	4618      	mov	r0, r3
 800eb1a:	f014 fe62 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800eb1e:	687b      	ldr	r3, [r7, #4]
 800eb20:	4618      	mov	r0, r3
 800eb22:	3708      	adds	r7, #8
 800eb24:	46bd      	mov	sp, r7
 800eb26:	bd80      	pop	{r7, pc}

0800eb28 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE7destroyISI_EEvPT_>:
	destroy(_Up* __p)
 800eb28:	b580      	push	{r7, lr}
 800eb2a:	b082      	sub	sp, #8
 800eb2c:	af00      	add	r7, sp, #0
 800eb2e:	6078      	str	r0, [r7, #4]
 800eb30:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 800eb32:	6838      	ldr	r0, [r7, #0]
 800eb34:	f7ff ffeb 	bl	800eb0e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
 800eb38:	bf00      	nop
 800eb3a:	3708      	adds	r7, #8
 800eb3c:	46bd      	mov	sp, r7
 800eb3e:	bd80      	pop	{r7, pc}

0800eb40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE10deallocateEPSJ_j>:
      deallocate(pointer __p, size_type)
 800eb40:	b580      	push	{r7, lr}
 800eb42:	b084      	sub	sp, #16
 800eb44:	af00      	add	r7, sp, #0
 800eb46:	60f8      	str	r0, [r7, #12]
 800eb48:	60b9      	str	r1, [r7, #8]
 800eb4a:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800eb4c:	68b8      	ldr	r0, [r7, #8]
 800eb4e:	f014 fb93 	bl	8023278 <_ZdlPv>
      }
 800eb52:	3710      	adds	r7, #16
 800eb54:	46bd      	mov	sp, r7
 800eb56:	bd80      	pop	{r7, pc}

0800eb58 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800eb58:	b580      	push	{r7, lr}
 800eb5a:	b082      	sub	sp, #8
 800eb5c:	af00      	add	r7, sp, #0
 800eb5e:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800eb60:	6878      	ldr	r0, [r7, #4]
 800eb62:	f000 f852 	bl	800ec0a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>
 800eb66:	4603      	mov	r3, r0
 800eb68:	4618      	mov	r0, r3
 800eb6a:	3708      	adds	r7, #8
 800eb6c:	46bd      	mov	sp, r7
 800eb6e:	bd80      	pop	{r7, pc}

0800eb70 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 800eb70:	b580      	push	{r7, lr}
 800eb72:	b084      	sub	sp, #16
 800eb74:	af00      	add	r7, sp, #0
 800eb76:	60f8      	str	r0, [r7, #12]
 800eb78:	60b9      	str	r1, [r7, #8]
 800eb7a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800eb7c:	68f8      	ldr	r0, [r7, #12]
 800eb7e:	f000 f84f 	bl	800ec20 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 800eb82:	4602      	mov	r2, r0
 800eb84:	68bb      	ldr	r3, [r7, #8]
 800eb86:	4293      	cmp	r3, r2
 800eb88:	bf8c      	ite	hi
 800eb8a:	2301      	movhi	r3, #1
 800eb8c:	2300      	movls	r3, #0
 800eb8e:	b2db      	uxtb	r3, r3
 800eb90:	2b00      	cmp	r3, #0
 800eb92:	d001      	beq.n	800eb98 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800eb94:	f014 fc48 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800eb98:	68bb      	ldr	r3, [r7, #8]
 800eb9a:	009b      	lsls	r3, r3, #2
 800eb9c:	4618      	mov	r0, r3
 800eb9e:	f014 fb7e 	bl	802329e <_Znwj>
 800eba2:	4603      	mov	r3, r0
 800eba4:	bf00      	nop
      }
 800eba6:	4618      	mov	r0, r3
 800eba8:	3710      	adds	r7, #16
 800ebaa:	46bd      	mov	sp, r7
 800ebac:	bd80      	pop	{r7, pc}

0800ebae <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>:
    __miter_base(_Iterator __it)
 800ebae:	b480      	push	{r7}
 800ebb0:	b083      	sub	sp, #12
 800ebb2:	af00      	add	r7, sp, #0
 800ebb4:	6078      	str	r0, [r7, #4]
    { return __it; }
 800ebb6:	687b      	ldr	r3, [r7, #4]
 800ebb8:	4618      	mov	r0, r3
 800ebba:	370c      	adds	r7, #12
 800ebbc:	46bd      	mov	sp, r7
 800ebbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebc2:	4770      	bx	lr

0800ebc4 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800ebc4:	b5b0      	push	{r4, r5, r7, lr}
 800ebc6:	b084      	sub	sp, #16
 800ebc8:	af00      	add	r7, sp, #0
 800ebca:	60f8      	str	r0, [r7, #12]
 800ebcc:	60b9      	str	r1, [r7, #8]
 800ebce:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 800ebd0:	68f8      	ldr	r0, [r7, #12]
 800ebd2:	f000 f831 	bl	800ec38 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800ebd6:	4604      	mov	r4, r0
 800ebd8:	68b8      	ldr	r0, [r7, #8]
 800ebda:	f000 f82d 	bl	800ec38 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800ebde:	4605      	mov	r5, r0
 800ebe0:	687b      	ldr	r3, [r7, #4]
 800ebe2:	4618      	mov	r0, r3
 800ebe4:	f000 f836 	bl	800ec54 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 800ebe8:	4603      	mov	r3, r0
 800ebea:	461a      	mov	r2, r3
 800ebec:	4629      	mov	r1, r5
 800ebee:	4620      	mov	r0, r4
 800ebf0:	f000 f83b 	bl	800ec6a <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 800ebf4:	4602      	mov	r2, r0
 800ebf6:	1d3b      	adds	r3, r7, #4
 800ebf8:	4611      	mov	r1, r2
 800ebfa:	4618      	mov	r0, r3
 800ebfc:	f000 f847 	bl	800ec8e <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>
 800ec00:	4603      	mov	r3, r0
    }
 800ec02:	4618      	mov	r0, r3
 800ec04:	3710      	adds	r7, #16
 800ec06:	46bd      	mov	sp, r7
 800ec08:	bdb0      	pop	{r4, r5, r7, pc}

0800ec0a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 800ec0a:	b480      	push	{r7}
 800ec0c:	b083      	sub	sp, #12
 800ec0e:	af00      	add	r7, sp, #0
 800ec10:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800ec12:	687b      	ldr	r3, [r7, #4]
 800ec14:	4618      	mov	r0, r3
 800ec16:	370c      	adds	r7, #12
 800ec18:	46bd      	mov	sp, r7
 800ec1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec1e:	4770      	bx	lr

0800ec20 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800ec20:	b480      	push	{r7}
 800ec22:	b083      	sub	sp, #12
 800ec24:	af00      	add	r7, sp, #0
 800ec26:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800ec28:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 800ec2c:	4618      	mov	r0, r3
 800ec2e:	370c      	adds	r7, #12
 800ec30:	46bd      	mov	sp, r7
 800ec32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec36:	4770      	bx	lr

0800ec38 <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800ec38:	b580      	push	{r7, lr}
 800ec3a:	b082      	sub	sp, #8
 800ec3c:	af00      	add	r7, sp, #0
 800ec3e:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 800ec40:	1d3b      	adds	r3, r7, #4
 800ec42:	4618      	mov	r0, r3
 800ec44:	f000 f82f 	bl	800eca6 <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800ec48:	4603      	mov	r3, r0
 800ec4a:	681b      	ldr	r3, [r3, #0]
 800ec4c:	4618      	mov	r0, r3
 800ec4e:	3708      	adds	r7, #8
 800ec50:	46bd      	mov	sp, r7
 800ec52:	bd80      	pop	{r7, pc}

0800ec54 <_ZSt12__niter_baseIPP10ExpressionET_S3_>:
    __niter_base(_Iterator __it)
 800ec54:	b480      	push	{r7}
 800ec56:	b083      	sub	sp, #12
 800ec58:	af00      	add	r7, sp, #0
 800ec5a:	6078      	str	r0, [r7, #4]
    { return __it; }
 800ec5c:	687b      	ldr	r3, [r7, #4]
 800ec5e:	4618      	mov	r0, r3
 800ec60:	370c      	adds	r7, #12
 800ec62:	46bd      	mov	sp, r7
 800ec64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec68:	4770      	bx	lr

0800ec6a <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 800ec6a:	b580      	push	{r7, lr}
 800ec6c:	b086      	sub	sp, #24
 800ec6e:	af00      	add	r7, sp, #0
 800ec70:	60f8      	str	r0, [r7, #12]
 800ec72:	60b9      	str	r1, [r7, #8]
 800ec74:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 800ec76:	2301      	movs	r3, #1
 800ec78:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 800ec7a:	687a      	ldr	r2, [r7, #4]
 800ec7c:	68b9      	ldr	r1, [r7, #8]
 800ec7e:	68f8      	ldr	r0, [r7, #12]
 800ec80:	f000 f81c 	bl	800ecbc <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>
 800ec84:	4603      	mov	r3, r0
    }
 800ec86:	4618      	mov	r0, r3
 800ec88:	3718      	adds	r7, #24
 800ec8a:	46bd      	mov	sp, r7
 800ec8c:	bd80      	pop	{r7, pc}

0800ec8e <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 800ec8e:	b480      	push	{r7}
 800ec90:	b083      	sub	sp, #12
 800ec92:	af00      	add	r7, sp, #0
 800ec94:	6078      	str	r0, [r7, #4]
 800ec96:	6039      	str	r1, [r7, #0]
    { return __res; }
 800ec98:	683b      	ldr	r3, [r7, #0]
 800ec9a:	4618      	mov	r0, r3
 800ec9c:	370c      	adds	r7, #12
 800ec9e:	46bd      	mov	sp, r7
 800eca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eca4:	4770      	bx	lr

0800eca6 <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800eca6:	b480      	push	{r7}
 800eca8:	b083      	sub	sp, #12
 800ecaa:	af00      	add	r7, sp, #0
 800ecac:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800ecae:	687b      	ldr	r3, [r7, #4]
 800ecb0:	4618      	mov	r0, r3
 800ecb2:	370c      	adds	r7, #12
 800ecb4:	46bd      	mov	sp, r7
 800ecb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecba:	4770      	bx	lr

0800ecbc <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 800ecbc:	b580      	push	{r7, lr}
 800ecbe:	b086      	sub	sp, #24
 800ecc0:	af00      	add	r7, sp, #0
 800ecc2:	60f8      	str	r0, [r7, #12]
 800ecc4:	60b9      	str	r1, [r7, #8]
 800ecc6:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 800ecc8:	68ba      	ldr	r2, [r7, #8]
 800ecca:	68fb      	ldr	r3, [r7, #12]
 800eccc:	1ad3      	subs	r3, r2, r3
 800ecce:	109b      	asrs	r3, r3, #2
 800ecd0:	617b      	str	r3, [r7, #20]
	  if (_Num)
 800ecd2:	697b      	ldr	r3, [r7, #20]
 800ecd4:	2b00      	cmp	r3, #0
 800ecd6:	d006      	beq.n	800ece6 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800ecd8:	697b      	ldr	r3, [r7, #20]
 800ecda:	009b      	lsls	r3, r3, #2
 800ecdc:	461a      	mov	r2, r3
 800ecde:	68f9      	ldr	r1, [r7, #12]
 800ece0:	6878      	ldr	r0, [r7, #4]
 800ece2:	f015 ffb1 	bl	8024c48 <memmove>
	  return __result + _Num;
 800ece6:	697b      	ldr	r3, [r7, #20]
 800ece8:	009b      	lsls	r3, r3, #2
 800ecea:	687a      	ldr	r2, [r7, #4]
 800ecec:	4413      	add	r3, r2
	}
 800ecee:	4618      	mov	r0, r3
 800ecf0:	3718      	adds	r7, #24
 800ecf2:	46bd      	mov	sp, r7
 800ecf4:	bd80      	pop	{r7, pc}
	...

0800ecf8 <_Z41__static_initialization_and_destruction_0ii>:
 800ecf8:	b590      	push	{r4, r7, lr}
 800ecfa:	b0e7      	sub	sp, #412	; 0x19c
 800ecfc:	af02      	add	r7, sp, #8
 800ecfe:	1d3b      	adds	r3, r7, #4
 800ed00:	6018      	str	r0, [r3, #0]
 800ed02:	463b      	mov	r3, r7
 800ed04:	6019      	str	r1, [r3, #0]
 800ed06:	1d3b      	adds	r3, r7, #4
 800ed08:	681b      	ldr	r3, [r3, #0]
 800ed0a:	2b01      	cmp	r3, #1
 800ed0c:	f040 819d 	bne.w	800f04a <_Z41__static_initialization_and_destruction_0ii+0x352>
 800ed10:	463b      	mov	r3, r7
 800ed12:	681b      	ldr	r3, [r3, #0]
 800ed14:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ed18:	4293      	cmp	r3, r2
 800ed1a:	f040 8196 	bne.w	800f04a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800ed1e:	f107 0314 	add.w	r3, r7, #20
 800ed22:	4618      	mov	r0, r3
 800ed24:	2322      	movs	r3, #34	; 0x22
 800ed26:	461a      	mov	r2, r3
 800ed28:	2100      	movs	r1, #0
 800ed2a:	f015 ffa7 	bl	8024c7c <memset>
 800ed2e:	f107 0314 	add.w	r3, r7, #20
 800ed32:	223a      	movs	r2, #58	; 0x3a
 800ed34:	701a      	strb	r2, [r3, #0]
 800ed36:	f107 0314 	add.w	r3, r7, #20
 800ed3a:	2201      	movs	r2, #1
 800ed3c:	705a      	strb	r2, [r3, #1]
 800ed3e:	f107 0314 	add.w	r3, r7, #20
 800ed42:	220a      	movs	r2, #10
 800ed44:	709a      	strb	r2, [r3, #2]
 800ed46:	f107 0314 	add.w	r3, r7, #20
 800ed4a:	220a      	movs	r2, #10
 800ed4c:	70da      	strb	r2, [r3, #3]
 800ed4e:	f107 0314 	add.w	r3, r7, #20
 800ed52:	222c      	movs	r2, #44	; 0x2c
 800ed54:	711a      	strb	r2, [r3, #4]
 800ed56:	f107 0314 	add.w	r3, r7, #20
 800ed5a:	220c      	movs	r2, #12
 800ed5c:	715a      	strb	r2, [r3, #5]
 800ed5e:	f107 0314 	add.w	r3, r7, #20
 800ed62:	222e      	movs	r2, #46	; 0x2e
 800ed64:	719a      	strb	r2, [r3, #6]
 800ed66:	f107 0314 	add.w	r3, r7, #20
 800ed6a:	220b      	movs	r2, #11
 800ed6c:	71da      	strb	r2, [r3, #7]
 800ed6e:	f107 0314 	add.w	r3, r7, #20
 800ed72:	225b      	movs	r2, #91	; 0x5b
 800ed74:	721a      	strb	r2, [r3, #8]
 800ed76:	f107 0314 	add.w	r3, r7, #20
 800ed7a:	220d      	movs	r2, #13
 800ed7c:	725a      	strb	r2, [r3, #9]
 800ed7e:	f107 0314 	add.w	r3, r7, #20
 800ed82:	225d      	movs	r2, #93	; 0x5d
 800ed84:	729a      	strb	r2, [r3, #10]
 800ed86:	f107 0314 	add.w	r3, r7, #20
 800ed8a:	220e      	movs	r2, #14
 800ed8c:	72da      	strb	r2, [r3, #11]
 800ed8e:	f107 0314 	add.w	r3, r7, #20
 800ed92:	227c      	movs	r2, #124	; 0x7c
 800ed94:	731a      	strb	r2, [r3, #12]
 800ed96:	f107 0314 	add.w	r3, r7, #20
 800ed9a:	2215      	movs	r2, #21
 800ed9c:	735a      	strb	r2, [r3, #13]
 800ed9e:	f107 0314 	add.w	r3, r7, #20
 800eda2:	2226      	movs	r2, #38	; 0x26
 800eda4:	739a      	strb	r2, [r3, #14]
 800eda6:	f107 0314 	add.w	r3, r7, #20
 800edaa:	2216      	movs	r2, #22
 800edac:	73da      	strb	r2, [r3, #15]
 800edae:	f107 0314 	add.w	r3, r7, #20
 800edb2:	222b      	movs	r2, #43	; 0x2b
 800edb4:	741a      	strb	r2, [r3, #16]
 800edb6:	f107 0314 	add.w	r3, r7, #20
 800edba:	221f      	movs	r2, #31
 800edbc:	745a      	strb	r2, [r3, #17]
 800edbe:	f107 0314 	add.w	r3, r7, #20
 800edc2:	222d      	movs	r2, #45	; 0x2d
 800edc4:	749a      	strb	r2, [r3, #18]
 800edc6:	f107 0314 	add.w	r3, r7, #20
 800edca:	2220      	movs	r2, #32
 800edcc:	74da      	strb	r2, [r3, #19]
 800edce:	f107 0314 	add.w	r3, r7, #20
 800edd2:	222a      	movs	r2, #42	; 0x2a
 800edd4:	751a      	strb	r2, [r3, #20]
 800edd6:	f107 0314 	add.w	r3, r7, #20
 800edda:	2221      	movs	r2, #33	; 0x21
 800eddc:	755a      	strb	r2, [r3, #21]
 800edde:	f107 0314 	add.w	r3, r7, #20
 800ede2:	222f      	movs	r2, #47	; 0x2f
 800ede4:	759a      	strb	r2, [r3, #22]
 800ede6:	f107 0314 	add.w	r3, r7, #20
 800edea:	2222      	movs	r2, #34	; 0x22
 800edec:	75da      	strb	r2, [r3, #23]
 800edee:	f107 0314 	add.w	r3, r7, #20
 800edf2:	225e      	movs	r2, #94	; 0x5e
 800edf4:	761a      	strb	r2, [r3, #24]
 800edf6:	f107 0314 	add.w	r3, r7, #20
 800edfa:	2223      	movs	r2, #35	; 0x23
 800edfc:	765a      	strb	r2, [r3, #25]
 800edfe:	f107 0314 	add.w	r3, r7, #20
 800ee02:	2225      	movs	r2, #37	; 0x25
 800ee04:	769a      	strb	r2, [r3, #26]
 800ee06:	f107 0314 	add.w	r3, r7, #20
 800ee0a:	2224      	movs	r2, #36	; 0x24
 800ee0c:	76da      	strb	r2, [r3, #27]
 800ee0e:	f107 0314 	add.w	r3, r7, #20
 800ee12:	2228      	movs	r2, #40	; 0x28
 800ee14:	771a      	strb	r2, [r3, #28]
 800ee16:	f107 0314 	add.w	r3, r7, #20
 800ee1a:	2226      	movs	r2, #38	; 0x26
 800ee1c:	775a      	strb	r2, [r3, #29]
 800ee1e:	f107 0314 	add.w	r3, r7, #20
 800ee22:	2229      	movs	r2, #41	; 0x29
 800ee24:	779a      	strb	r2, [r3, #30]
 800ee26:	f107 0314 	add.w	r3, r7, #20
 800ee2a:	2227      	movs	r2, #39	; 0x27
 800ee2c:	77da      	strb	r2, [r3, #31]
 800ee2e:	f107 0314 	add.w	r3, r7, #20
 800ee32:	2225      	movs	r2, #37	; 0x25
 800ee34:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800ee38:	f107 030c 	add.w	r3, r7, #12
 800ee3c:	f107 0214 	add.w	r2, r7, #20
 800ee40:	601a      	str	r2, [r3, #0]
 800ee42:	f107 030c 	add.w	r3, r7, #12
 800ee46:	2211      	movs	r2, #17
 800ee48:	605a      	str	r2, [r3, #4]
 800ee4a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ee4e:	4618      	mov	r0, r3
 800ee50:	f7f2 ff7c 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800ee54:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800ee58:	f107 020c 	add.w	r2, r7, #12
 800ee5c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ee60:	9300      	str	r3, [sp, #0]
 800ee62:	460b      	mov	r3, r1
 800ee64:	ca06      	ldmia	r2, {r1, r2}
 800ee66:	4885      	ldr	r0, [pc, #532]	; (800f07c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800ee68:	f7f2 ff88 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800ee6c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ee70:	4618      	mov	r0, r3
 800ee72:	f7f2 ff77 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800ee76:	2305      	movs	r3, #5
 800ee78:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800ee7c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800ee80:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ee84:	497e      	ldr	r1, [pc, #504]	; (800f080 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800ee86:	4618      	mov	r0, r3
 800ee88:	f7f2 f936 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800ee8c:	2306      	movs	r3, #6
 800ee8e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800ee92:	f207 1263 	addw	r2, r7, #355	; 0x163
 800ee96:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ee9a:	331c      	adds	r3, #28
 800ee9c:	4979      	ldr	r1, [pc, #484]	; (800f084 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800ee9e:	4618      	mov	r0, r3
 800eea0:	f7f2 f952 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800eea4:	2307      	movs	r3, #7
 800eea6:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800eeaa:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800eeae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800eeb2:	3338      	adds	r3, #56	; 0x38
 800eeb4:	4974      	ldr	r1, [pc, #464]	; (800f088 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800eeb6:	4618      	mov	r0, r3
 800eeb8:	f7f2 f946 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800eebc:	2308      	movs	r3, #8
 800eebe:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800eec2:	f207 1265 	addw	r2, r7, #357	; 0x165
 800eec6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800eeca:	3354      	adds	r3, #84	; 0x54
 800eecc:	496f      	ldr	r1, [pc, #444]	; (800f08c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800eece:	4618      	mov	r0, r3
 800eed0:	f7f2 f912 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800eed4:	2309      	movs	r3, #9
 800eed6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800eeda:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800eede:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800eee2:	3370      	adds	r3, #112	; 0x70
 800eee4:	496a      	ldr	r1, [pc, #424]	; (800f090 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800eee6:	4618      	mov	r0, r3
 800eee8:	f7f2 f956 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800eeec:	2310      	movs	r3, #16
 800eeee:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800eef2:	f207 1267 	addw	r2, r7, #359	; 0x167
 800eef6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800eefa:	338c      	adds	r3, #140	; 0x8c
 800eefc:	4965      	ldr	r1, [pc, #404]	; (800f094 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800eefe:	4618      	mov	r0, r3
 800ef00:	f7f2 f972 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800ef04:	2311      	movs	r3, #17
 800ef06:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800ef0a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800ef0e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef12:	33a8      	adds	r3, #168	; 0xa8
 800ef14:	4960      	ldr	r1, [pc, #384]	; (800f098 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800ef16:	4618      	mov	r0, r3
 800ef18:	f7f2 f93e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800ef1c:	2312      	movs	r3, #18
 800ef1e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800ef22:	f207 1269 	addw	r2, r7, #361	; 0x169
 800ef26:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef2a:	33c4      	adds	r3, #196	; 0xc4
 800ef2c:	495b      	ldr	r1, [pc, #364]	; (800f09c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800ef2e:	4618      	mov	r0, r3
 800ef30:	f7f2 f8e2 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800ef34:	2313      	movs	r3, #19
 800ef36:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800ef3a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800ef3e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef42:	33e0      	adds	r3, #224	; 0xe0
 800ef44:	4956      	ldr	r1, [pc, #344]	; (800f0a0 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800ef46:	4618      	mov	r0, r3
 800ef48:	f7f2 f8fe 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800ef4c:	2314      	movs	r3, #20
 800ef4e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800ef52:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800ef56:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ef5a:	33fc      	adds	r3, #252	; 0xfc
 800ef5c:	4951      	ldr	r1, [pc, #324]	; (800f0a4 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800ef5e:	4618      	mov	r0, r3
 800ef60:	f7f2 f96a 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800ef64:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ef68:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800ef6c:	601a      	str	r2, [r3, #0]
 800ef6e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ef72:	220a      	movs	r2, #10
 800ef74:	605a      	str	r2, [r3, #4]
 800ef76:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ef7a:	4618      	mov	r0, r3
 800ef7c:	f7f2 ff8b 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800ef80:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800ef84:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800ef88:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ef8c:	9300      	str	r3, [sp, #0]
 800ef8e:	460b      	mov	r3, r1
 800ef90:	ca06      	ldmia	r2, {r1, r2}
 800ef92:	4845      	ldr	r0, [pc, #276]	; (800f0a8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800ef94:	f7f2 ff97 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800ef98:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ef9c:	4618      	mov	r0, r3
 800ef9e:	f7f2 ff86 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800efa2:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800efa6:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800efaa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800efae:	429c      	cmp	r4, r3
 800efb0:	d004      	beq.n	800efbc <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800efb2:	3c1c      	subs	r4, #28
 800efb4:	4620      	mov	r0, r4
 800efb6:	f7f2 f892 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800efba:	e7f6      	b.n	800efaa <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800efbc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800efc0:	2200      	movs	r2, #0
 800efc2:	601a      	str	r2, [r3, #0]
 800efc4:	605a      	str	r2, [r3, #4]
 800efc6:	609a      	str	r2, [r3, #8]
 800efc8:	233c      	movs	r3, #60	; 0x3c
 800efca:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800efce:	231b      	movs	r3, #27
 800efd0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800efd4:	231c      	movs	r3, #28
 800efd6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800efda:	233e      	movs	r3, #62	; 0x3e
 800efdc:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800efe0:	2319      	movs	r3, #25
 800efe2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800efe6:	231a      	movs	r3, #26
 800efe8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800efec:	233d      	movs	r3, #61	; 0x3d
 800efee:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800eff2:	2318      	movs	r3, #24
 800eff4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800eff8:	231d      	movs	r3, #29
 800effa:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800effe:	2321      	movs	r3, #33	; 0x21
 800f000:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800f004:	2317      	movs	r3, #23
 800f006:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800f00a:	231e      	movs	r3, #30
 800f00c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800f010:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800f014:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800f018:	2304      	movs	r3, #4
 800f01a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800f01e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f022:	4618      	mov	r0, r3
 800f024:	f7f2 ff7f 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800f028:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800f02c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f030:	9300      	str	r3, [sp, #0]
 800f032:	4613      	mov	r3, r2
 800f034:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800f038:	ca06      	ldmia	r2, {r1, r2}
 800f03a:	481c      	ldr	r0, [pc, #112]	; (800f0ac <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800f03c:	f7f2 ff8b 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800f040:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f044:	4618      	mov	r0, r3
 800f046:	f7f2 ff7a 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800f04a:	1d3b      	adds	r3, r7, #4
 800f04c:	681b      	ldr	r3, [r3, #0]
 800f04e:	2b00      	cmp	r3, #0
 800f050:	d10e      	bne.n	800f070 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800f052:	463b      	mov	r3, r7
 800f054:	681b      	ldr	r3, [r3, #0]
 800f056:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f05a:	4293      	cmp	r3, r2
 800f05c:	d108      	bne.n	800f070 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800f05e:	4813      	ldr	r0, [pc, #76]	; (800f0ac <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800f060:	f7fa fbe8 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800f064:	4810      	ldr	r0, [pc, #64]	; (800f0a8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800f066:	f7fa fbf2 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800f06a:	4804      	ldr	r0, [pc, #16]	; (800f07c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800f06c:	f7fa fbfc 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800f070:	bf00      	nop
 800f072:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800f076:	46bd      	mov	sp, r7
 800f078:	bd90      	pop	{r4, r7, pc}
 800f07a:	bf00      	nop
 800f07c:	200002ec 	.word	0x200002ec
 800f080:	08029514 	.word	0x08029514
 800f084:	0802951c 	.word	0x0802951c
 800f088:	08029524 	.word	0x08029524
 800f08c:	0802952c 	.word	0x0802952c
 800f090:	08029534 	.word	0x08029534
 800f094:	0802953c 	.word	0x0802953c
 800f098:	08029540 	.word	0x08029540
 800f09c:	08029548 	.word	0x08029548
 800f0a0:	08029550 	.word	0x08029550
 800f0a4:	08029558 	.word	0x08029558
 800f0a8:	20000304 	.word	0x20000304
 800f0ac:	2000031c 	.word	0x2000031c

0800f0b0 <_GLOBAL__sub_I__ZN16Function_handler12run_functionEP13Function_call>:
 800f0b0:	b580      	push	{r7, lr}
 800f0b2:	af00      	add	r7, sp, #0
 800f0b4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f0b8:	2001      	movs	r0, #1
 800f0ba:	f7ff fe1d 	bl	800ecf8 <_Z41__static_initialization_and_destruction_0ii>
 800f0be:	bd80      	pop	{r7, pc}

0800f0c0 <_GLOBAL__sub_D__ZN16Function_handler12run_functionEP13Function_call>:
 800f0c0:	b580      	push	{r7, lr}
 800f0c2:	af00      	add	r7, sp, #0
 800f0c4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f0c8:	2000      	movs	r0, #0
 800f0ca:	f7ff fe15 	bl	800ecf8 <_Z41__static_initialization_and_destruction_0ii>
 800f0ce:	bd80      	pop	{r7, pc}

0800f0d0 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>:

#if _GLIBCXX_USE_C99_STDLIB
  // 21.4 Numeric Conversions [string.conversions].
  inline int
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
 800f0d0:	b580      	push	{r7, lr}
 800f0d2:	b086      	sub	sp, #24
 800f0d4:	af02      	add	r7, sp, #8
 800f0d6:	60f8      	str	r0, [r7, #12]
 800f0d8:	60b9      	str	r1, [r7, #8]
 800f0da:	607a      	str	r2, [r7, #4]
 800f0dc:	68f8      	ldr	r0, [r7, #12]
 800f0de:	f014 fd29 	bl	8023b34 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800f0e2:	4602      	mov	r2, r0
 800f0e4:	687b      	ldr	r3, [r7, #4]
 800f0e6:	9300      	str	r3, [sp, #0]
 800f0e8:	68bb      	ldr	r3, [r7, #8]
 800f0ea:	4904      	ldr	r1, [pc, #16]	; (800f0fc <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x2c>)
 800f0ec:	4804      	ldr	r0, [pc, #16]	; (800f100 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x30>)
 800f0ee:	f000 fd18 	bl	800fb22 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 800f0f2:	4603      	mov	r3, r0
					__idx, __base); }
 800f0f4:	4618      	mov	r0, r3
 800f0f6:	3710      	adds	r7, #16
 800f0f8:	46bd      	mov	sp, r7
 800f0fa:	bd80      	pop	{r7, pc}
 800f0fc:	0802955c 	.word	0x0802955c
 800f100:	080265a9 	.word	0x080265a9

0800f104 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>:
			     __idx, __base); }

  // NB: strtof vs strtod.
  inline float
  stof(const string& __str, size_t* __idx = 0)
  { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
 800f104:	b580      	push	{r7, lr}
 800f106:	b082      	sub	sp, #8
 800f108:	af00      	add	r7, sp, #0
 800f10a:	6078      	str	r0, [r7, #4]
 800f10c:	6039      	str	r1, [r7, #0]
 800f10e:	6878      	ldr	r0, [r7, #4]
 800f110:	f014 fd10 	bl	8023b34 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800f114:	4602      	mov	r2, r0
 800f116:	683b      	ldr	r3, [r7, #0]
 800f118:	4905      	ldr	r1, [pc, #20]	; (800f130 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x2c>)
 800f11a:	4806      	ldr	r0, [pc, #24]	; (800f134 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x30>)
 800f11c:	f000 fd81 	bl	800fc22 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 800f120:	eef0 7a40 	vmov.f32	s15, s0
 800f124:	eeb0 0a67 	vmov.f32	s0, s15
 800f128:	3708      	adds	r7, #8
 800f12a:	46bd      	mov	sp, r7
 800f12c:	bd80      	pop	{r7, pc}
 800f12e:	bf00      	nop
 800f130:	08029564 	.word	0x08029564
 800f134:	080263ed 	.word	0x080263ed

0800f138 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 800f138:	b580      	push	{r7, lr}
 800f13a:	b082      	sub	sp, #8
 800f13c:	af00      	add	r7, sp, #0
 800f13e:	6078      	str	r0, [r7, #4]
 800f140:	687b      	ldr	r3, [r7, #4]
 800f142:	4618      	mov	r0, r3
 800f144:	f000 fe0e 	bl	800fd64 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f148:	687b      	ldr	r3, [r7, #4]
 800f14a:	4618      	mov	r0, r3
 800f14c:	3708      	adds	r7, #8
 800f14e:	46bd      	mov	sp, r7
 800f150:	bd80      	pop	{r7, pc}

0800f152 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 800f152:	b580      	push	{r7, lr}
 800f154:	b082      	sub	sp, #8
 800f156:	af00      	add	r7, sp, #0
 800f158:	6078      	str	r0, [r7, #4]
 800f15a:	687b      	ldr	r3, [r7, #4]
 800f15c:	4618      	mov	r0, r3
 800f15e:	f7ff ffeb 	bl	800f138 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f162:	687b      	ldr	r3, [r7, #4]
 800f164:	4618      	mov	r0, r3
 800f166:	3708      	adds	r7, #8
 800f168:	46bd      	mov	sp, r7
 800f16a:	bd80      	pop	{r7, pc}

0800f16c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 800f16c:	b580      	push	{r7, lr}
 800f16e:	b082      	sub	sp, #8
 800f170:	af00      	add	r7, sp, #0
 800f172:	6078      	str	r0, [r7, #4]
 800f174:	687b      	ldr	r3, [r7, #4]
 800f176:	4618      	mov	r0, r3
 800f178:	f7ff ffeb 	bl	800f152 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f17c:	687b      	ldr	r3, [r7, #4]
 800f17e:	4618      	mov	r0, r3
 800f180:	3708      	adds	r7, #8
 800f182:	46bd      	mov	sp, r7
 800f184:	bd80      	pop	{r7, pc}

0800f186 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 800f186:	b580      	push	{r7, lr}
 800f188:	b082      	sub	sp, #8
 800f18a:	af00      	add	r7, sp, #0
 800f18c:	6078      	str	r0, [r7, #4]
 800f18e:	687b      	ldr	r3, [r7, #4]
 800f190:	4618      	mov	r0, r3
 800f192:	f7ff ffeb 	bl	800f16c <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f196:	687b      	ldr	r3, [r7, #4]
 800f198:	4618      	mov	r0, r3
 800f19a:	3708      	adds	r7, #8
 800f19c:	46bd      	mov	sp, r7
 800f19e:	bd80      	pop	{r7, pc}

0800f1a0 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 800f1a0:	b580      	push	{r7, lr}
 800f1a2:	b082      	sub	sp, #8
 800f1a4:	af00      	add	r7, sp, #0
 800f1a6:	6078      	str	r0, [r7, #4]
 800f1a8:	687b      	ldr	r3, [r7, #4]
 800f1aa:	4618      	mov	r0, r3
 800f1ac:	f7ff ffeb 	bl	800f186 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f1b0:	687b      	ldr	r3, [r7, #4]
 800f1b2:	4618      	mov	r0, r3
 800f1b4:	3708      	adds	r7, #8
 800f1b6:	46bd      	mov	sp, r7
 800f1b8:	bd80      	pop	{r7, pc}

0800f1ba <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      variant() = default;
 800f1ba:	b580      	push	{r7, lr}
 800f1bc:	b082      	sub	sp, #8
 800f1be:	af00      	add	r7, sp, #0
 800f1c0:	6078      	str	r0, [r7, #4]
 800f1c2:	687b      	ldr	r3, [r7, #4]
 800f1c4:	4618      	mov	r0, r3
 800f1c6:	f000 fdc0 	bl	800fd4a <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 800f1ca:	687b      	ldr	r3, [r7, #4]
 800f1cc:	4618      	mov	r0, r3
 800f1ce:	3708      	adds	r7, #8
 800f1d0:	46bd      	mov	sp, r7
 800f1d2:	bd80      	pop	{r7, pc}

0800f1d4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~variant() = default;
 800f1d4:	b580      	push	{r7, lr}
 800f1d6:	b082      	sub	sp, #8
 800f1d8:	af00      	add	r7, sp, #0
 800f1da:	6078      	str	r0, [r7, #4]
 800f1dc:	687b      	ldr	r3, [r7, #4]
 800f1de:	4618      	mov	r0, r3
 800f1e0:	f7ff ffde 	bl	800f1a0 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f1e4:	687b      	ldr	r3, [r7, #4]
 800f1e6:	4618      	mov	r0, r3
 800f1e8:	3708      	adds	r7, #8
 800f1ea:	46bd      	mov	sp, r7
 800f1ec:	bd80      	pop	{r7, pc}

0800f1ee <_ZN5TokenC1Ev>:
#include <string>
#include "token_types.h"

typedef std::variant<std::string, int, float, bool> token_value;

class Token
 800f1ee:	b580      	push	{r7, lr}
 800f1f0:	b082      	sub	sp, #8
 800f1f2:	af00      	add	r7, sp, #0
 800f1f4:	6078      	str	r0, [r7, #4]
 800f1f6:	687b      	ldr	r3, [r7, #4]
 800f1f8:	3304      	adds	r3, #4
 800f1fa:	4618      	mov	r0, r3
 800f1fc:	f7ff ffdd 	bl	800f1ba <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 800f200:	687b      	ldr	r3, [r7, #4]
 800f202:	4618      	mov	r0, r3
 800f204:	3708      	adds	r7, #8
 800f206:	46bd      	mov	sp, r7
 800f208:	bd80      	pop	{r7, pc}

0800f20a <_ZN5TokenD1Ev>:
 800f20a:	b580      	push	{r7, lr}
 800f20c:	b082      	sub	sp, #8
 800f20e:	af00      	add	r7, sp, #0
 800f210:	6078      	str	r0, [r7, #4]
 800f212:	687b      	ldr	r3, [r7, #4]
 800f214:	3304      	adds	r3, #4
 800f216:	4618      	mov	r0, r3
 800f218:	f7ff ffdc 	bl	800f1d4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 800f21c:	687b      	ldr	r3, [r7, #4]
 800f21e:	4618      	mov	r0, r3
 800f220:	3708      	adds	r7, #8
 800f222:	46bd      	mov	sp, r7
 800f224:	bd80      	pop	{r7, pc}

0800f226 <_ZN5LexerC1Ev>:
#include <Lexer.h>

Lexer::Lexer()
 800f226:	b580      	push	{r7, lr}
 800f228:	b082      	sub	sp, #8
 800f22a:	af00      	add	r7, sp, #0
 800f22c:	6078      	str	r0, [r7, #4]
 800f22e:	687b      	ldr	r3, [r7, #4]
 800f230:	3304      	adds	r3, #4
 800f232:	4618      	mov	r0, r3
 800f234:	f7ff ffdb 	bl	800f1ee <_ZN5TokenC1Ev>
{
	// needs to start with whitespace in buffer
	char_buffer = ' ';
 800f238:	687b      	ldr	r3, [r7, #4]
 800f23a:	2220      	movs	r2, #32
 800f23c:	701a      	strb	r2, [r3, #0]
}
 800f23e:	687b      	ldr	r3, [r7, #4]
 800f240:	4618      	mov	r0, r3
 800f242:	3708      	adds	r7, #8
 800f244:	46bd      	mov	sp, r7
 800f246:	bd80      	pop	{r7, pc}

0800f248 <_ZN5Lexer17match_single_charEv>:

bool Lexer::match_single_char()
{
 800f248:	b580      	push	{r7, lr}
 800f24a:	b084      	sub	sp, #16
 800f24c:	af00      	add	r7, sp, #0
 800f24e:	6078      	str	r0, [r7, #4]
	auto result = token_chars.find(char_buffer);
 800f250:	687b      	ldr	r3, [r7, #4]
 800f252:	4619      	mov	r1, r3
 800f254:	4815      	ldr	r0, [pc, #84]	; (800f2ac <_ZN5Lexer17match_single_charEv+0x64>)
 800f256:	f000 fd91 	bl	800fd7c <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 800f25a:	4603      	mov	r3, r0
 800f25c:	60bb      	str	r3, [r7, #8]
	if (result != token_chars.end())
 800f25e:	4813      	ldr	r0, [pc, #76]	; (800f2ac <_ZN5Lexer17match_single_charEv+0x64>)
 800f260:	f000 fd9b 	bl	800fd9a <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 800f264:	4603      	mov	r3, r0
 800f266:	60fb      	str	r3, [r7, #12]
 800f268:	f107 020c 	add.w	r2, r7, #12
 800f26c:	f107 0308 	add.w	r3, r7, #8
 800f270:	4611      	mov	r1, r2
 800f272:	4618      	mov	r0, r3
 800f274:	f000 fd9e 	bl	800fdb4 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 800f278:	4603      	mov	r3, r0
 800f27a:	2b00      	cmp	r3, #0
 800f27c:	d010      	beq.n	800f2a0 <_ZN5Lexer17match_single_charEv+0x58>
	{
		product.type = result->second;
 800f27e:	f107 0308 	add.w	r3, r7, #8
 800f282:	4618      	mov	r0, r3
 800f284:	f000 fdaa 	bl	800fddc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>
 800f288:	4603      	mov	r3, r0
 800f28a:	785a      	ldrb	r2, [r3, #1]
 800f28c:	687b      	ldr	r3, [r7, #4]
 800f28e:	711a      	strb	r2, [r3, #4]
		char_buffer = Transmitter::receive_code_char();
 800f290:	f009 fb7a 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f294:	4603      	mov	r3, r0
 800f296:	461a      	mov	r2, r3
 800f298:	687b      	ldr	r3, [r7, #4]
 800f29a:	701a      	strb	r2, [r3, #0]
		return true;
 800f29c:	2301      	movs	r3, #1
 800f29e:	e000      	b.n	800f2a2 <_ZN5Lexer17match_single_charEv+0x5a>
	}
	return false;
 800f2a0:	2300      	movs	r3, #0
}
 800f2a2:	4618      	mov	r0, r3
 800f2a4:	3710      	adds	r7, #16
 800f2a6:	46bd      	mov	sp, r7
 800f2a8:	bd80      	pop	{r7, pc}
 800f2aa:	bf00      	nop
 800f2ac:	20000350 	.word	0x20000350

0800f2b0 <_ZN5Lexer17match_double_charEv>:

bool Lexer::match_double_char()
{
 800f2b0:	b580      	push	{r7, lr}
 800f2b2:	b084      	sub	sp, #16
 800f2b4:	af00      	add	r7, sp, #0
 800f2b6:	6078      	str	r0, [r7, #4]
	auto result = token_double_chars.find(char_buffer);
 800f2b8:	687b      	ldr	r3, [r7, #4]
 800f2ba:	4619      	mov	r1, r3
 800f2bc:	481f      	ldr	r0, [pc, #124]	; (800f33c <_ZN5Lexer17match_double_charEv+0x8c>)
 800f2be:	f000 fd9b 	bl	800fdf8 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 800f2c2:	4603      	mov	r3, r0
 800f2c4:	60bb      	str	r3, [r7, #8]
	if (result != token_double_chars.end())
 800f2c6:	481d      	ldr	r0, [pc, #116]	; (800f33c <_ZN5Lexer17match_double_charEv+0x8c>)
 800f2c8:	f000 fda5 	bl	800fe16 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 800f2cc:	4603      	mov	r3, r0
 800f2ce:	60fb      	str	r3, [r7, #12]
 800f2d0:	f107 020c 	add.w	r2, r7, #12
 800f2d4:	f107 0308 	add.w	r3, r7, #8
 800f2d8:	4611      	mov	r1, r2
 800f2da:	4618      	mov	r0, r3
 800f2dc:	f000 fda8 	bl	800fe30 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 800f2e0:	4603      	mov	r3, r0
 800f2e2:	2b00      	cmp	r3, #0
 800f2e4:	d024      	beq.n	800f330 <_ZN5Lexer17match_double_charEv+0x80>
	{
		char_buffer = Transmitter::receive_code_char();
 800f2e6:	f009 fb4f 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f2ea:	4603      	mov	r3, r0
 800f2ec:	461a      	mov	r2, r3
 800f2ee:	687b      	ldr	r3, [r7, #4]
 800f2f0:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '=')
 800f2f2:	687b      	ldr	r3, [r7, #4]
 800f2f4:	781b      	ldrb	r3, [r3, #0]
 800f2f6:	2b3d      	cmp	r3, #61	; 0x3d
 800f2f8:	d10f      	bne.n	800f31a <_ZN5Lexer17match_double_charEv+0x6a>
		{
			product.type = result->second.double_char;
 800f2fa:	f107 0308 	add.w	r3, r7, #8
 800f2fe:	4618      	mov	r0, r3
 800f300:	f000 fdaa 	bl	800fe58 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 800f304:	4603      	mov	r3, r0
 800f306:	789a      	ldrb	r2, [r3, #2]
 800f308:	687b      	ldr	r3, [r7, #4]
 800f30a:	711a      	strb	r2, [r3, #4]
			char_buffer = Transmitter::receive_code_char();
 800f30c:	f009 fb3c 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f310:	4603      	mov	r3, r0
 800f312:	461a      	mov	r2, r3
 800f314:	687b      	ldr	r3, [r7, #4]
 800f316:	701a      	strb	r2, [r3, #0]
 800f318:	e008      	b.n	800f32c <_ZN5Lexer17match_double_charEv+0x7c>
		}
		else
		{
			product.type = result->second.single_char;
 800f31a:	f107 0308 	add.w	r3, r7, #8
 800f31e:	4618      	mov	r0, r3
 800f320:	f000 fd9a 	bl	800fe58 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 800f324:	4603      	mov	r3, r0
 800f326:	785a      	ldrb	r2, [r3, #1]
 800f328:	687b      	ldr	r3, [r7, #4]
 800f32a:	711a      	strb	r2, [r3, #4]
		}
		return true;
 800f32c:	2301      	movs	r3, #1
 800f32e:	e000      	b.n	800f332 <_ZN5Lexer17match_double_charEv+0x82>
	}
	return false;
 800f330:	2300      	movs	r3, #0
}
 800f332:	4618      	mov	r0, r3
 800f334:	3710      	adds	r7, #16
 800f336:	46bd      	mov	sp, r7
 800f338:	bd80      	pop	{r7, pc}
 800f33a:	bf00      	nop
 800f33c:	20000380 	.word	0x20000380

0800f340 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_word(std::string &word)
{
 800f340:	b580      	push	{r7, lr}
 800f342:	b082      	sub	sp, #8
 800f344:	af00      	add	r7, sp, #0
 800f346:	6078      	str	r0, [r7, #4]
 800f348:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 800f34a:	687b      	ldr	r3, [r7, #4]
 800f34c:	781b      	ldrb	r3, [r3, #0]
 800f34e:	4619      	mov	r1, r3
 800f350:	6838      	ldr	r0, [r7, #0]
 800f352:	f014 fabd 	bl	80238d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 800f356:	f009 fb17 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f35a:	4603      	mov	r3, r0
 800f35c:	461a      	mov	r2, r3
 800f35e:	687b      	ldr	r3, [r7, #4]
 800f360:	701a      	strb	r2, [r3, #0]
	} while (isalnum(char_buffer) || char_buffer == '_');
 800f362:	687b      	ldr	r3, [r7, #4]
 800f364:	781b      	ldrb	r3, [r3, #0]
 800f366:	4618      	mov	r0, r3
 800f368:	f015 fc10 	bl	8024b8c <isalnum>
 800f36c:	4603      	mov	r3, r0
 800f36e:	2b00      	cmp	r3, #0
 800f370:	d1eb      	bne.n	800f34a <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
 800f372:	687b      	ldr	r3, [r7, #4]
 800f374:	781b      	ldrb	r3, [r3, #0]
 800f376:	2b5f      	cmp	r3, #95	; 0x5f
 800f378:	d100      	bne.n	800f37c <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c>
	do
 800f37a:	e7e6      	b.n	800f34a <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 800f37c:	bf00      	nop
 800f37e:	3708      	adds	r7, #8
 800f380:	46bd      	mov	sp, r7
 800f382:	bd80      	pop	{r7, pc}

0800f384 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_keyword_or_id(std::string &word)
{
 800f384:	b580      	push	{r7, lr}
 800f386:	b08a      	sub	sp, #40	; 0x28
 800f388:	af00      	add	r7, sp, #0
 800f38a:	6078      	str	r0, [r7, #4]
 800f38c:	6039      	str	r1, [r7, #0]
	auto result = token_strings.find(word);
 800f38e:	6839      	ldr	r1, [r7, #0]
 800f390:	481c      	ldr	r0, [pc, #112]	; (800f404 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 800f392:	f000 fd6f 	bl	800fe74 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 800f396:	4603      	mov	r3, r0
 800f398:	60bb      	str	r3, [r7, #8]
	if (result != token_strings.end())
 800f39a:	481a      	ldr	r0, [pc, #104]	; (800f404 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 800f39c:	f000 fd79 	bl	800fe92 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 800f3a0:	4603      	mov	r3, r0
 800f3a2:	60fb      	str	r3, [r7, #12]
 800f3a4:	f107 020c 	add.w	r2, r7, #12
 800f3a8:	f107 0308 	add.w	r3, r7, #8
 800f3ac:	4611      	mov	r1, r2
 800f3ae:	4618      	mov	r0, r3
 800f3b0:	f000 fd7c 	bl	800feac <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 800f3b4:	4603      	mov	r3, r0
 800f3b6:	2b00      	cmp	r3, #0
 800f3b8:	d009      	beq.n	800f3ce <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a>
	{
		product.type = result->second;
 800f3ba:	f107 0308 	add.w	r3, r7, #8
 800f3be:	4618      	mov	r0, r3
 800f3c0:	f000 fd88 	bl	800fed4 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>
 800f3c4:	4603      	mov	r3, r0
 800f3c6:	7e1a      	ldrb	r2, [r3, #24]
 800f3c8:	687b      	ldr	r3, [r7, #4]
 800f3ca:	711a      	strb	r2, [r3, #4]
	else
	{
		product.type = TOKEN_IDENTIFIER;
		product.value = std::string(word);
	}
}
 800f3cc:	e015      	b.n	800f3fa <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x76>
		product.type = TOKEN_IDENTIFIER;
 800f3ce:	687b      	ldr	r3, [r7, #4]
 800f3d0:	2202      	movs	r2, #2
 800f3d2:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 800f3d4:	f107 0310 	add.w	r3, r7, #16
 800f3d8:	6839      	ldr	r1, [r7, #0]
 800f3da:	4618      	mov	r0, r3
 800f3dc:	f014 fbd0 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800f3e0:	687b      	ldr	r3, [r7, #4]
 800f3e2:	3308      	adds	r3, #8
 800f3e4:	f107 0210 	add.w	r2, r7, #16
 800f3e8:	4611      	mov	r1, r2
 800f3ea:	4618      	mov	r0, r3
 800f3ec:	f000 fd93 	bl	800ff16 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 800f3f0:	f107 0310 	add.w	r3, r7, #16
 800f3f4:	4618      	mov	r0, r3
 800f3f6:	f014 f9f4 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800f3fa:	bf00      	nop
 800f3fc:	3728      	adds	r7, #40	; 0x28
 800f3fe:	46bd      	mov	sp, r7
 800f400:	bd80      	pop	{r7, pc}
 800f402:	bf00      	nop
 800f404:	20000368 	.word	0x20000368

0800f408 <_ZN5Lexer19build_keyword_or_idEv>:

bool Lexer::build_keyword_or_id()
{
 800f408:	b590      	push	{r4, r7, lr}
 800f40a:	b089      	sub	sp, #36	; 0x24
 800f40c:	af00      	add	r7, sp, #0
 800f40e:	6078      	str	r0, [r7, #4]
	if (isalpha(char_buffer))
 800f410:	687b      	ldr	r3, [r7, #4]
 800f412:	781b      	ldrb	r3, [r3, #0]
 800f414:	4618      	mov	r0, r3
 800f416:	f015 fbc1 	bl	8024b9c <isalpha>
 800f41a:	4603      	mov	r3, r0
 800f41c:	2b00      	cmp	r3, #0
 800f41e:	d017      	beq.n	800f450 <_ZN5Lexer19build_keyword_or_idEv+0x48>
	{
		std::string word;
 800f420:	f107 0308 	add.w	r3, r7, #8
 800f424:	4618      	mov	r0, r3
 800f426:	f014 f9bb 	bl	80237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_word(word);
 800f42a:	f107 0308 	add.w	r3, r7, #8
 800f42e:	4619      	mov	r1, r3
 800f430:	6878      	ldr	r0, [r7, #4]
 800f432:	f7ff ff85 	bl	800f340 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_keyword_or_id(word);
 800f436:	f107 0308 	add.w	r3, r7, #8
 800f43a:	4619      	mov	r1, r3
 800f43c:	6878      	ldr	r0, [r7, #4]
 800f43e:	f7ff ffa1 	bl	800f384 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800f442:	2401      	movs	r4, #1
		std::string word;
 800f444:	f107 0308 	add.w	r3, r7, #8
 800f448:	4618      	mov	r0, r3
 800f44a:	f014 f9ca 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f44e:	e000      	b.n	800f452 <_ZN5Lexer19build_keyword_or_idEv+0x4a>
	}
	return false;
 800f450:	2400      	movs	r4, #0
 800f452:	4623      	mov	r3, r4
}
 800f454:	4618      	mov	r0, r3
 800f456:	3724      	adds	r7, #36	; 0x24
 800f458:	46bd      	mov	sp, r7
 800f45a:	bd90      	pop	{r4, r7, pc}

0800f45c <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_int(std::string &word)
{
 800f45c:	b580      	push	{r7, lr}
 800f45e:	b082      	sub	sp, #8
 800f460:	af00      	add	r7, sp, #0
 800f462:	6078      	str	r0, [r7, #4]
 800f464:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 800f466:	687b      	ldr	r3, [r7, #4]
 800f468:	781b      	ldrb	r3, [r3, #0]
 800f46a:	4619      	mov	r1, r3
 800f46c:	6838      	ldr	r0, [r7, #0]
 800f46e:	f014 fa2f 	bl	80238d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = Transmitter::receive_code_char();
 800f472:	f009 fa89 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f476:	4603      	mov	r3, r0
 800f478:	461a      	mov	r2, r3
 800f47a:	687b      	ldr	r3, [r7, #4]
 800f47c:	701a      	strb	r2, [r3, #0]
	} while (isdigit(char_buffer));
 800f47e:	687b      	ldr	r3, [r7, #4]
 800f480:	781b      	ldrb	r3, [r3, #0]
 800f482:	3b30      	subs	r3, #48	; 0x30
 800f484:	2b09      	cmp	r3, #9
 800f486:	bf94      	ite	ls
 800f488:	2301      	movls	r3, #1
 800f48a:	2300      	movhi	r3, #0
 800f48c:	b2db      	uxtb	r3, r3
 800f48e:	2b00      	cmp	r3, #0
 800f490:	d000      	beq.n	800f494 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	do
 800f492:	e7e8      	b.n	800f466 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 800f494:	bf00      	nop
 800f496:	3708      	adds	r7, #8
 800f498:	46bd      	mov	sp, r7
 800f49a:	bd80      	pop	{r7, pc}

0800f49c <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_int_or_float(std::string &word)
{
 800f49c:	b580      	push	{r7, lr}
 800f49e:	b084      	sub	sp, #16
 800f4a0:	af00      	add	r7, sp, #0
 800f4a2:	6078      	str	r0, [r7, #4]
 800f4a4:	6039      	str	r1, [r7, #0]
	if (char_buffer != '.')
 800f4a6:	687b      	ldr	r3, [r7, #4]
 800f4a8:	781b      	ldrb	r3, [r3, #0]
 800f4aa:	2b2e      	cmp	r3, #46	; 0x2e
 800f4ac:	d012      	beq.n	800f4d4 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	{
		product.type = TOKEN_INT;
 800f4ae:	687b      	ldr	r3, [r7, #4]
 800f4b0:	2203      	movs	r2, #3
 800f4b2:	711a      	strb	r2, [r3, #4]
		product.value = std::stoi(word);
 800f4b4:	220a      	movs	r2, #10
 800f4b6:	2100      	movs	r1, #0
 800f4b8:	6838      	ldr	r0, [r7, #0]
 800f4ba:	f7ff fe09 	bl	800f0d0 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>
 800f4be:	4603      	mov	r3, r0
 800f4c0:	60bb      	str	r3, [r7, #8]
 800f4c2:	687b      	ldr	r3, [r7, #4]
 800f4c4:	3308      	adds	r3, #8
 800f4c6:	f107 0208 	add.w	r2, r7, #8
 800f4ca:	4611      	mov	r1, r2
 800f4cc:	4618      	mov	r0, r3
 800f4ce:	f000 fd4e 	bl	800ff6e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
	{
		build_int(word);
		product.type = TOKEN_FLOAT;
		product.value = std::stof(word);
	}
}
 800f4d2:	e016      	b.n	800f502 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x66>
		build_int(word);
 800f4d4:	6839      	ldr	r1, [r7, #0]
 800f4d6:	6878      	ldr	r0, [r7, #4]
 800f4d8:	f7ff ffc0 	bl	800f45c <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_FLOAT;
 800f4dc:	687b      	ldr	r3, [r7, #4]
 800f4de:	2204      	movs	r2, #4
 800f4e0:	711a      	strb	r2, [r3, #4]
		product.value = std::stof(word);
 800f4e2:	2100      	movs	r1, #0
 800f4e4:	6838      	ldr	r0, [r7, #0]
 800f4e6:	f7ff fe0d 	bl	800f104 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 800f4ea:	eef0 7a40 	vmov.f32	s15, s0
 800f4ee:	edc7 7a03 	vstr	s15, [r7, #12]
 800f4f2:	687b      	ldr	r3, [r7, #4]
 800f4f4:	3308      	adds	r3, #8
 800f4f6:	f107 020c 	add.w	r2, r7, #12
 800f4fa:	4611      	mov	r1, r2
 800f4fc:	4618      	mov	r0, r3
 800f4fe:	f000 fd60 	bl	800ffc2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
}
 800f502:	bf00      	nop
 800f504:	3710      	adds	r7, #16
 800f506:	46bd      	mov	sp, r7
 800f508:	bd80      	pop	{r7, pc}

0800f50a <_ZN5Lexer18build_int_or_floatEv>:

bool Lexer::build_int_or_float()
{
 800f50a:	b590      	push	{r4, r7, lr}
 800f50c:	b089      	sub	sp, #36	; 0x24
 800f50e:	af00      	add	r7, sp, #0
 800f510:	6078      	str	r0, [r7, #4]
	if (isdigit(char_buffer) && char_buffer != '0')
 800f512:	687b      	ldr	r3, [r7, #4]
 800f514:	781b      	ldrb	r3, [r3, #0]
 800f516:	3b30      	subs	r3, #48	; 0x30
 800f518:	2b09      	cmp	r3, #9
 800f51a:	bf94      	ite	ls
 800f51c:	2301      	movls	r3, #1
 800f51e:	2300      	movhi	r3, #0
 800f520:	b2db      	uxtb	r3, r3
 800f522:	2b00      	cmp	r3, #0
 800f524:	d01b      	beq.n	800f55e <_ZN5Lexer18build_int_or_floatEv+0x54>
 800f526:	687b      	ldr	r3, [r7, #4]
 800f528:	781b      	ldrb	r3, [r3, #0]
 800f52a:	2b30      	cmp	r3, #48	; 0x30
 800f52c:	d017      	beq.n	800f55e <_ZN5Lexer18build_int_or_floatEv+0x54>
	{
		std::string word;
 800f52e:	f107 0308 	add.w	r3, r7, #8
 800f532:	4618      	mov	r0, r3
 800f534:	f014 f934 	bl	80237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_int(word);
 800f538:	f107 0308 	add.w	r3, r7, #8
 800f53c:	4619      	mov	r1, r3
 800f53e:	6878      	ldr	r0, [r7, #4]
 800f540:	f7ff ff8c 	bl	800f45c <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_int_or_float(word);
 800f544:	f107 0308 	add.w	r3, r7, #8
 800f548:	4619      	mov	r1, r3
 800f54a:	6878      	ldr	r0, [r7, #4]
 800f54c:	f7ff ffa6 	bl	800f49c <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800f550:	2401      	movs	r4, #1
		std::string word;
 800f552:	f107 0308 	add.w	r3, r7, #8
 800f556:	4618      	mov	r0, r3
 800f558:	f014 f943 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f55c:	e000      	b.n	800f560 <_ZN5Lexer18build_int_or_floatEv+0x56>
	}
	return false;
 800f55e:	2400      	movs	r4, #0
 800f560:	4623      	mov	r3, r4
}
 800f562:	4618      	mov	r0, r3
 800f564:	3724      	adds	r7, #36	; 0x24
 800f566:	46bd      	mov	sp, r7
 800f568:	bd90      	pop	{r4, r7, pc}

0800f56a <_ZN5Lexer20build_0_int_or_floatEv>:

bool Lexer::build_0_int_or_float()
{
 800f56a:	b580      	push	{r7, lr}
 800f56c:	b08a      	sub	sp, #40	; 0x28
 800f56e:	af00      	add	r7, sp, #0
 800f570:	6078      	str	r0, [r7, #4]
	if (char_buffer == '0')
 800f572:	687b      	ldr	r3, [r7, #4]
 800f574:	781b      	ldrb	r3, [r3, #0]
 800f576:	2b30      	cmp	r3, #48	; 0x30
 800f578:	d13e      	bne.n	800f5f8 <_ZN5Lexer20build_0_int_or_floatEv+0x8e>
	{
		char_buffer = Transmitter::receive_code_char();
 800f57a:	f009 fa05 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f57e:	4603      	mov	r3, r0
 800f580:	461a      	mov	r2, r3
 800f582:	687b      	ldr	r3, [r7, #4]
 800f584:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '.')
 800f586:	687b      	ldr	r3, [r7, #4]
 800f588:	781b      	ldrb	r3, [r3, #0]
 800f58a:	2b2e      	cmp	r3, #46	; 0x2e
 800f58c:	d125      	bne.n	800f5da <_ZN5Lexer20build_0_int_or_floatEv+0x70>
		{
			std::string word;
 800f58e:	f107 0308 	add.w	r3, r7, #8
 800f592:	4618      	mov	r0, r3
 800f594:	f014 f904 	bl	80237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
			build_int(word);
 800f598:	f107 0308 	add.w	r3, r7, #8
 800f59c:	4619      	mov	r1, r3
 800f59e:	6878      	ldr	r0, [r7, #4]
 800f5a0:	f7ff ff5c 	bl	800f45c <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
			product.type = TOKEN_FLOAT;
 800f5a4:	687b      	ldr	r3, [r7, #4]
 800f5a6:	2204      	movs	r2, #4
 800f5a8:	711a      	strb	r2, [r3, #4]
			product.value = std::stof(word);
 800f5aa:	f107 0308 	add.w	r3, r7, #8
 800f5ae:	2100      	movs	r1, #0
 800f5b0:	4618      	mov	r0, r3
 800f5b2:	f7ff fda7 	bl	800f104 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 800f5b6:	eef0 7a40 	vmov.f32	s15, s0
 800f5ba:	edc7 7a08 	vstr	s15, [r7, #32]
 800f5be:	687b      	ldr	r3, [r7, #4]
 800f5c0:	3308      	adds	r3, #8
 800f5c2:	f107 0220 	add.w	r2, r7, #32
 800f5c6:	4611      	mov	r1, r2
 800f5c8:	4618      	mov	r0, r3
 800f5ca:	f000 fcfa 	bl	800ffc2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
			std::string word;
 800f5ce:	f107 0308 	add.w	r3, r7, #8
 800f5d2:	4618      	mov	r0, r3
 800f5d4:	f014 f905 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f5d8:	e00c      	b.n	800f5f4 <_ZN5Lexer20build_0_int_or_floatEv+0x8a>
		}
		else
		{
			product.type = TOKEN_INT;
 800f5da:	687b      	ldr	r3, [r7, #4]
 800f5dc:	2203      	movs	r2, #3
 800f5de:	711a      	strb	r2, [r3, #4]
			product.value = 0;
 800f5e0:	2300      	movs	r3, #0
 800f5e2:	627b      	str	r3, [r7, #36]	; 0x24
 800f5e4:	687b      	ldr	r3, [r7, #4]
 800f5e6:	3308      	adds	r3, #8
 800f5e8:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800f5ec:	4611      	mov	r1, r2
 800f5ee:	4618      	mov	r0, r3
 800f5f0:	f000 fcbd 	bl	800ff6e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
		}
		return true;
 800f5f4:	2301      	movs	r3, #1
 800f5f6:	e000      	b.n	800f5fa <_ZN5Lexer20build_0_int_or_floatEv+0x90>
	}
	return false;
 800f5f8:	2300      	movs	r3, #0
}
 800f5fa:	4618      	mov	r0, r3
 800f5fc:	3728      	adds	r7, #40	; 0x28
 800f5fe:	46bd      	mov	sp, r7
 800f600:	bd80      	pop	{r7, pc}
	...

0800f604 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_escape_char(std::string &word)
{
 800f604:	b580      	push	{r7, lr}
 800f606:	b084      	sub	sp, #16
 800f608:	af00      	add	r7, sp, #0
 800f60a:	6078      	str	r0, [r7, #4]
 800f60c:	6039      	str	r1, [r7, #0]
	char true_char;
	switch (char_buffer)
 800f60e:	687b      	ldr	r3, [r7, #4]
 800f610:	781b      	ldrb	r3, [r3, #0]
 800f612:	2b76      	cmp	r3, #118	; 0x76
 800f614:	dc66      	bgt.n	800f6e4 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f616:	2b5c      	cmp	r3, #92	; 0x5c
 800f618:	da04      	bge.n	800f624 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20>
 800f61a:	2b22      	cmp	r3, #34	; 0x22
 800f61c:	d047      	beq.n	800f6ae <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xaa>
 800f61e:	2b27      	cmp	r3, #39	; 0x27
 800f620:	d03f      	beq.n	800f6a2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
		break;
	case 'v':
		true_char = '\v';
		break;
	default:
		return;
 800f622:	e05f      	b.n	800f6e4 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f624:	3b5c      	subs	r3, #92	; 0x5c
 800f626:	2b1a      	cmp	r3, #26
 800f628:	d85c      	bhi.n	800f6e4 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800f62a:	a201      	add	r2, pc, #4	; (adr r2, 800f630 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>)
 800f62c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f630:	0800f6a9 	.word	0x0800f6a9
 800f634:	0800f6e5 	.word	0x0800f6e5
 800f638:	0800f6e5 	.word	0x0800f6e5
 800f63c:	0800f6e5 	.word	0x0800f6e5
 800f640:	0800f6e5 	.word	0x0800f6e5
 800f644:	0800f6e5 	.word	0x0800f6e5
 800f648:	0800f6c1 	.word	0x0800f6c1
 800f64c:	0800f6e5 	.word	0x0800f6e5
 800f650:	0800f6e5 	.word	0x0800f6e5
 800f654:	0800f6e5 	.word	0x0800f6e5
 800f658:	0800f6c7 	.word	0x0800f6c7
 800f65c:	0800f6e5 	.word	0x0800f6e5
 800f660:	0800f6e5 	.word	0x0800f6e5
 800f664:	0800f6e5 	.word	0x0800f6e5
 800f668:	0800f6e5 	.word	0x0800f6e5
 800f66c:	0800f6e5 	.word	0x0800f6e5
 800f670:	0800f6e5 	.word	0x0800f6e5
 800f674:	0800f6e5 	.word	0x0800f6e5
 800f678:	0800f69d 	.word	0x0800f69d
 800f67c:	0800f6e5 	.word	0x0800f6e5
 800f680:	0800f6e5 	.word	0x0800f6e5
 800f684:	0800f6e5 	.word	0x0800f6e5
 800f688:	0800f6b5 	.word	0x0800f6b5
 800f68c:	0800f6e5 	.word	0x0800f6e5
 800f690:	0800f6bb 	.word	0x0800f6bb
 800f694:	0800f6e5 	.word	0x0800f6e5
 800f698:	0800f6cd 	.word	0x0800f6cd
		true_char = '\n';
 800f69c:	230a      	movs	r3, #10
 800f69e:	73fb      	strb	r3, [r7, #15]
		break;
 800f6a0:	e017      	b.n	800f6d2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\'';
 800f6a2:	2327      	movs	r3, #39	; 0x27
 800f6a4:	73fb      	strb	r3, [r7, #15]
		break;
 800f6a6:	e014      	b.n	800f6d2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\\';
 800f6a8:	235c      	movs	r3, #92	; 0x5c
 800f6aa:	73fb      	strb	r3, [r7, #15]
		break;
 800f6ac:	e011      	b.n	800f6d2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\"';
 800f6ae:	2322      	movs	r3, #34	; 0x22
 800f6b0:	73fb      	strb	r3, [r7, #15]
		break;
 800f6b2:	e00e      	b.n	800f6d2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\r';
 800f6b4:	230d      	movs	r3, #13
 800f6b6:	73fb      	strb	r3, [r7, #15]
		break;
 800f6b8:	e00b      	b.n	800f6d2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\t';
 800f6ba:	2309      	movs	r3, #9
 800f6bc:	73fb      	strb	r3, [r7, #15]
		break;
 800f6be:	e008      	b.n	800f6d2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\b';
 800f6c0:	2308      	movs	r3, #8
 800f6c2:	73fb      	strb	r3, [r7, #15]
		break;
 800f6c4:	e005      	b.n	800f6d2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\f';
 800f6c6:	230c      	movs	r3, #12
 800f6c8:	73fb      	strb	r3, [r7, #15]
		break;
 800f6ca:	e002      	b.n	800f6d2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\v';
 800f6cc:	230b      	movs	r3, #11
 800f6ce:	73fb      	strb	r3, [r7, #15]
		break;
 800f6d0:	bf00      	nop
	}
	word.pop_back();
 800f6d2:	6838      	ldr	r0, [r7, #0]
 800f6d4:	f014 f921 	bl	802391a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>
	word.push_back(true_char);
 800f6d8:	7bfb      	ldrb	r3, [r7, #15]
 800f6da:	4619      	mov	r1, r3
 800f6dc:	6838      	ldr	r0, [r7, #0]
 800f6de:	f014 f8f7 	bl	80238d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 800f6e2:	e000      	b.n	800f6e6 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe2>
		return;
 800f6e4:	bf00      	nop
}
 800f6e6:	3710      	adds	r7, #16
 800f6e8:	46bd      	mov	sp, r7
 800f6ea:	bd80      	pop	{r7, pc}

0800f6ec <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::add_string_char(std::string &word)
{
 800f6ec:	b580      	push	{r7, lr}
 800f6ee:	b082      	sub	sp, #8
 800f6f0:	af00      	add	r7, sp, #0
 800f6f2:	6078      	str	r0, [r7, #4]
 800f6f4:	6039      	str	r1, [r7, #0]
	if (word.back() == '\\')
 800f6f6:	6838      	ldr	r0, [r7, #0]
 800f6f8:	f014 f8e5 	bl	80238c6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 800f6fc:	4603      	mov	r3, r0
 800f6fe:	781b      	ldrb	r3, [r3, #0]
 800f700:	2b5c      	cmp	r3, #92	; 0x5c
 800f702:	bf0c      	ite	eq
 800f704:	2301      	moveq	r3, #1
 800f706:	2300      	movne	r3, #0
 800f708:	b2db      	uxtb	r3, r3
 800f70a:	2b00      	cmp	r3, #0
 800f70c:	d004      	beq.n	800f718 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
	{
		match_escape_char(word);
 800f70e:	6839      	ldr	r1, [r7, #0]
 800f710:	6878      	ldr	r0, [r7, #4]
 800f712:	f7ff ff77 	bl	800f604 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800f716:	e005      	b.n	800f724 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	}
	else
	{
		word.push_back(char_buffer);
 800f718:	687b      	ldr	r3, [r7, #4]
 800f71a:	781b      	ldrb	r3, [r3, #0]
 800f71c:	4619      	mov	r1, r3
 800f71e:	6838      	ldr	r0, [r7, #0]
 800f720:	f014 f8d6 	bl	80238d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
	}
	char_buffer = Transmitter::receive_code_char();
 800f724:	f009 f930 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f728:	4603      	mov	r3, r0
 800f72a:	461a      	mov	r2, r3
 800f72c:	687b      	ldr	r3, [r7, #4]
 800f72e:	701a      	strb	r2, [r3, #0]
}
 800f730:	bf00      	nop
 800f732:	3708      	adds	r7, #8
 800f734:	46bd      	mov	sp, r7
 800f736:	bd80      	pop	{r7, pc}

0800f738 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_string_content(std::string &word)
{
 800f738:	b580      	push	{r7, lr}
 800f73a:	b082      	sub	sp, #8
 800f73c:	af00      	add	r7, sp, #0
 800f73e:	6078      	str	r0, [r7, #4]
 800f740:	6039      	str	r1, [r7, #0]
	char_buffer = Transmitter::receive_code_char();
 800f742:	f009 f921 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f746:	4603      	mov	r3, r0
 800f748:	461a      	mov	r2, r3
 800f74a:	687b      	ldr	r3, [r7, #4]
 800f74c:	701a      	strb	r2, [r3, #0]
	while (!(char_buffer == '\"' && word.back() != '\\'))
 800f74e:	687b      	ldr	r3, [r7, #4]
 800f750:	781b      	ldrb	r3, [r3, #0]
 800f752:	2b22      	cmp	r3, #34	; 0x22
 800f754:	d106      	bne.n	800f764 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
 800f756:	6838      	ldr	r0, [r7, #0]
 800f758:	f014 f8b5 	bl	80238c6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 800f75c:	4603      	mov	r3, r0
 800f75e:	781b      	ldrb	r3, [r3, #0]
 800f760:	2b5c      	cmp	r3, #92	; 0x5c
 800f762:	d101      	bne.n	800f768 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x30>
 800f764:	2301      	movs	r3, #1
 800f766:	e000      	b.n	800f76a <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32>
 800f768:	2300      	movs	r3, #0
 800f76a:	2b00      	cmp	r3, #0
 800f76c:	d004      	beq.n	800f778 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40>
	{
		add_string_char(word);
 800f76e:	6839      	ldr	r1, [r7, #0]
 800f770:	6878      	ldr	r0, [r7, #4]
 800f772:	f7ff ffbb 	bl	800f6ec <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
	while (!(char_buffer == '\"' && word.back() != '\\'))
 800f776:	e7ea      	b.n	800f74e <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x16>
	}
	char_buffer = Transmitter::receive_code_char();
 800f778:	f009 f906 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f77c:	4603      	mov	r3, r0
 800f77e:	461a      	mov	r2, r3
 800f780:	687b      	ldr	r3, [r7, #4]
 800f782:	701a      	strb	r2, [r3, #0]
}
 800f784:	bf00      	nop
 800f786:	3708      	adds	r7, #8
 800f788:	46bd      	mov	sp, r7
 800f78a:	bd80      	pop	{r7, pc}

0800f78c <_ZN5Lexer12build_stringEv>:

bool Lexer::build_string()
{
 800f78c:	b590      	push	{r4, r7, lr}
 800f78e:	b08f      	sub	sp, #60	; 0x3c
 800f790:	af00      	add	r7, sp, #0
 800f792:	6078      	str	r0, [r7, #4]
	if (char_buffer == '\"')
 800f794:	687b      	ldr	r3, [r7, #4]
 800f796:	781b      	ldrb	r3, [r3, #0]
 800f798:	2b22      	cmp	r3, #34	; 0x22
 800f79a:	d129      	bne.n	800f7f0 <_ZN5Lexer12build_stringEv+0x64>
	{
		std::string word;
 800f79c:	f107 0308 	add.w	r3, r7, #8
 800f7a0:	4618      	mov	r0, r3
 800f7a2:	f013 fffd 	bl	80237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_string_content(word);
 800f7a6:	f107 0308 	add.w	r3, r7, #8
 800f7aa:	4619      	mov	r1, r3
 800f7ac:	6878      	ldr	r0, [r7, #4]
 800f7ae:	f7ff ffc3 	bl	800f738 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_STRING;
 800f7b2:	687b      	ldr	r3, [r7, #4]
 800f7b4:	220f      	movs	r2, #15
 800f7b6:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 800f7b8:	f107 0208 	add.w	r2, r7, #8
 800f7bc:	f107 0320 	add.w	r3, r7, #32
 800f7c0:	4611      	mov	r1, r2
 800f7c2:	4618      	mov	r0, r3
 800f7c4:	f014 f9dc 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800f7c8:	687b      	ldr	r3, [r7, #4]
 800f7ca:	3308      	adds	r3, #8
 800f7cc:	f107 0220 	add.w	r2, r7, #32
 800f7d0:	4611      	mov	r1, r2
 800f7d2:	4618      	mov	r0, r3
 800f7d4:	f000 fb9f 	bl	800ff16 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 800f7d8:	f107 0320 	add.w	r3, r7, #32
 800f7dc:	4618      	mov	r0, r3
 800f7de:	f014 f800 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return true;
 800f7e2:	2401      	movs	r4, #1
		std::string word;
 800f7e4:	f107 0308 	add.w	r3, r7, #8
 800f7e8:	4618      	mov	r0, r3
 800f7ea:	f013 fffa 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800f7ee:	e000      	b.n	800f7f2 <_ZN5Lexer12build_stringEv+0x66>
	}
	return false;
 800f7f0:	2400      	movs	r4, #0
 800f7f2:	4623      	mov	r3, r4
}
 800f7f4:	4618      	mov	r0, r3
 800f7f6:	373c      	adds	r7, #60	; 0x3c
 800f7f8:	46bd      	mov	sp, r7
 800f7fa:	bd90      	pop	{r4, r7, pc}

0800f7fc <_ZN5Lexer17build_token_valueEv>:

bool Lexer::build_token_value()
{
 800f7fc:	b580      	push	{r7, lr}
 800f7fe:	b082      	sub	sp, #8
 800f800:	af00      	add	r7, sp, #0
 800f802:	6078      	str	r0, [r7, #4]
	return match_single_char() || match_double_char() || build_keyword_or_id()
 800f804:	6878      	ldr	r0, [r7, #4]
 800f806:	f7ff fd1f 	bl	800f248 <_ZN5Lexer17match_single_charEv>
 800f80a:	4603      	mov	r3, r0
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 800f80c:	2b00      	cmp	r3, #0
 800f80e:	d11d      	bne.n	800f84c <_ZN5Lexer17build_token_valueEv+0x50>
	return match_single_char() || match_double_char() || build_keyword_or_id()
 800f810:	6878      	ldr	r0, [r7, #4]
 800f812:	f7ff fd4d 	bl	800f2b0 <_ZN5Lexer17match_double_charEv>
 800f816:	4603      	mov	r3, r0
 800f818:	2b00      	cmp	r3, #0
 800f81a:	d117      	bne.n	800f84c <_ZN5Lexer17build_token_valueEv+0x50>
 800f81c:	6878      	ldr	r0, [r7, #4]
 800f81e:	f7ff fdf3 	bl	800f408 <_ZN5Lexer19build_keyword_or_idEv>
 800f822:	4603      	mov	r3, r0
 800f824:	2b00      	cmp	r3, #0
 800f826:	d111      	bne.n	800f84c <_ZN5Lexer17build_token_valueEv+0x50>
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 800f828:	6878      	ldr	r0, [r7, #4]
 800f82a:	f7ff fe6e 	bl	800f50a <_ZN5Lexer18build_int_or_floatEv>
 800f82e:	4603      	mov	r3, r0
 800f830:	2b00      	cmp	r3, #0
 800f832:	d10b      	bne.n	800f84c <_ZN5Lexer17build_token_valueEv+0x50>
 800f834:	6878      	ldr	r0, [r7, #4]
 800f836:	f7ff fe98 	bl	800f56a <_ZN5Lexer20build_0_int_or_floatEv>
 800f83a:	4603      	mov	r3, r0
 800f83c:	2b00      	cmp	r3, #0
 800f83e:	d105      	bne.n	800f84c <_ZN5Lexer17build_token_valueEv+0x50>
 800f840:	6878      	ldr	r0, [r7, #4]
 800f842:	f7ff ffa3 	bl	800f78c <_ZN5Lexer12build_stringEv>
 800f846:	4603      	mov	r3, r0
 800f848:	2b00      	cmp	r3, #0
 800f84a:	d001      	beq.n	800f850 <_ZN5Lexer17build_token_valueEv+0x54>
 800f84c:	2301      	movs	r3, #1
 800f84e:	e000      	b.n	800f852 <_ZN5Lexer17build_token_valueEv+0x56>
 800f850:	2300      	movs	r3, #0
}
 800f852:	4618      	mov	r0, r3
 800f854:	3708      	adds	r7, #8
 800f856:	46bd      	mov	sp, r7
 800f858:	bd80      	pop	{r7, pc}

0800f85a <_ZN5LexerD1Ev>:
#define INC_LEXER_H_

#include "Transmitter.h"
#include "Token.h"

class Lexer
 800f85a:	b580      	push	{r7, lr}
 800f85c:	b082      	sub	sp, #8
 800f85e:	af00      	add	r7, sp, #0
 800f860:	6078      	str	r0, [r7, #4]
 800f862:	687b      	ldr	r3, [r7, #4]
 800f864:	3304      	adds	r3, #4
 800f866:	4618      	mov	r0, r3
 800f868:	f7ff fccf 	bl	800f20a <_ZN5TokenD1Ev>
 800f86c:	687b      	ldr	r3, [r7, #4]
 800f86e:	4618      	mov	r0, r3
 800f870:	3708      	adds	r7, #8
 800f872:	46bd      	mov	sp, r7
 800f874:	bd80      	pop	{r7, pc}
	...

0800f878 <__tcf_0>:

Token Lexer::build_token()
{
	static Lexer lex;
 800f878:	b580      	push	{r7, lr}
 800f87a:	af00      	add	r7, sp, #0
 800f87c:	4801      	ldr	r0, [pc, #4]	; (800f884 <__tcf_0+0xc>)
 800f87e:	f7ff ffec 	bl	800f85a <_ZN5LexerD1Ev>
 800f882:	bd80      	pop	{r7, pc}
 800f884:	20000398 	.word	0x20000398

0800f888 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 800f888:	b580      	push	{r7, lr}
 800f88a:	b082      	sub	sp, #8
 800f88c:	af00      	add	r7, sp, #0
 800f88e:	6078      	str	r0, [r7, #4]
 800f890:	6039      	str	r1, [r7, #0]
 800f892:	687b      	ldr	r3, [r7, #4]
 800f894:	683a      	ldr	r2, [r7, #0]
 800f896:	4611      	mov	r1, r2
 800f898:	4618      	mov	r0, r3
 800f89a:	f000 fbbc 	bl	8010016 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f89e:	687b      	ldr	r3, [r7, #4]
 800f8a0:	4618      	mov	r0, r3
 800f8a2:	3708      	adds	r7, #8
 800f8a4:	46bd      	mov	sp, r7
 800f8a6:	bd80      	pop	{r7, pc}

0800f8a8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 800f8a8:	b580      	push	{r7, lr}
 800f8aa:	b082      	sub	sp, #8
 800f8ac:	af00      	add	r7, sp, #0
 800f8ae:	6078      	str	r0, [r7, #4]
 800f8b0:	6039      	str	r1, [r7, #0]
 800f8b2:	687b      	ldr	r3, [r7, #4]
 800f8b4:	683a      	ldr	r2, [r7, #0]
 800f8b6:	4611      	mov	r1, r2
 800f8b8:	4618      	mov	r0, r3
 800f8ba:	f7ff ffe5 	bl	800f888 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f8be:	687b      	ldr	r3, [r7, #4]
 800f8c0:	4618      	mov	r0, r3
 800f8c2:	3708      	adds	r7, #8
 800f8c4:	46bd      	mov	sp, r7
 800f8c6:	bd80      	pop	{r7, pc}

0800f8c8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 800f8c8:	b580      	push	{r7, lr}
 800f8ca:	b082      	sub	sp, #8
 800f8cc:	af00      	add	r7, sp, #0
 800f8ce:	6078      	str	r0, [r7, #4]
 800f8d0:	6039      	str	r1, [r7, #0]
 800f8d2:	687b      	ldr	r3, [r7, #4]
 800f8d4:	683a      	ldr	r2, [r7, #0]
 800f8d6:	4611      	mov	r1, r2
 800f8d8:	4618      	mov	r0, r3
 800f8da:	f7ff ffe5 	bl	800f8a8 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f8de:	687b      	ldr	r3, [r7, #4]
 800f8e0:	4618      	mov	r0, r3
 800f8e2:	3708      	adds	r7, #8
 800f8e4:	46bd      	mov	sp, r7
 800f8e6:	bd80      	pop	{r7, pc}

0800f8e8 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Variant_base(const _Variant_base&) = default;
 800f8e8:	b580      	push	{r7, lr}
 800f8ea:	b082      	sub	sp, #8
 800f8ec:	af00      	add	r7, sp, #0
 800f8ee:	6078      	str	r0, [r7, #4]
 800f8f0:	6039      	str	r1, [r7, #0]
 800f8f2:	687b      	ldr	r3, [r7, #4]
 800f8f4:	683a      	ldr	r2, [r7, #0]
 800f8f6:	4611      	mov	r1, r2
 800f8f8:	4618      	mov	r0, r3
 800f8fa:	f7ff ffe5 	bl	800f8c8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f8fe:	687b      	ldr	r3, [r7, #4]
 800f900:	4618      	mov	r0, r3
 800f902:	3708      	adds	r7, #8
 800f904:	46bd      	mov	sp, r7
 800f906:	bd80      	pop	{r7, pc}

0800f908 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>:
      variant(const variant& __rhs) = default;
 800f908:	b580      	push	{r7, lr}
 800f90a:	b082      	sub	sp, #8
 800f90c:	af00      	add	r7, sp, #0
 800f90e:	6078      	str	r0, [r7, #4]
 800f910:	6039      	str	r1, [r7, #0]
 800f912:	687b      	ldr	r3, [r7, #4]
 800f914:	683a      	ldr	r2, [r7, #0]
 800f916:	4611      	mov	r1, r2
 800f918:	4618      	mov	r0, r3
 800f91a:	f7ff ffe5 	bl	800f8e8 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 800f91e:	687b      	ldr	r3, [r7, #4]
 800f920:	4618      	mov	r0, r3
 800f922:	3708      	adds	r7, #8
 800f924:	46bd      	mov	sp, r7
 800f926:	bd80      	pop	{r7, pc}

0800f928 <_ZN5TokenC1ERKS_>:
 800f928:	b580      	push	{r7, lr}
 800f92a:	b082      	sub	sp, #8
 800f92c:	af00      	add	r7, sp, #0
 800f92e:	6078      	str	r0, [r7, #4]
 800f930:	6039      	str	r1, [r7, #0]
 800f932:	683b      	ldr	r3, [r7, #0]
 800f934:	781a      	ldrb	r2, [r3, #0]
 800f936:	687b      	ldr	r3, [r7, #4]
 800f938:	701a      	strb	r2, [r3, #0]
 800f93a:	687b      	ldr	r3, [r7, #4]
 800f93c:	1d1a      	adds	r2, r3, #4
 800f93e:	683b      	ldr	r3, [r7, #0]
 800f940:	3304      	adds	r3, #4
 800f942:	4619      	mov	r1, r3
 800f944:	4610      	mov	r0, r2
 800f946:	f7ff ffdf 	bl	800f908 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>
 800f94a:	687b      	ldr	r3, [r7, #4]
 800f94c:	4618      	mov	r0, r3
 800f94e:	3708      	adds	r7, #8
 800f950:	46bd      	mov	sp, r7
 800f952:	bd80      	pop	{r7, pc}

0800f954 <_ZN5Lexer11build_tokenEv>:
{
 800f954:	b580      	push	{r7, lr}
 800f956:	b082      	sub	sp, #8
 800f958:	af00      	add	r7, sp, #0
 800f95a:	6078      	str	r0, [r7, #4]
	static Lexer lex;
 800f95c:	4b1b      	ldr	r3, [pc, #108]	; (800f9cc <_ZN5Lexer11build_tokenEv+0x78>)
 800f95e:	781b      	ldrb	r3, [r3, #0]
 800f960:	f3bf 8f5b 	dmb	ish
 800f964:	b2db      	uxtb	r3, r3
 800f966:	f003 0301 	and.w	r3, r3, #1
 800f96a:	2b00      	cmp	r3, #0
 800f96c:	bf0c      	ite	eq
 800f96e:	2301      	moveq	r3, #1
 800f970:	2300      	movne	r3, #0
 800f972:	b2db      	uxtb	r3, r3
 800f974:	2b00      	cmp	r3, #0
 800f976:	d013      	beq.n	800f9a0 <_ZN5Lexer11build_tokenEv+0x4c>
 800f978:	4814      	ldr	r0, [pc, #80]	; (800f9cc <_ZN5Lexer11build_tokenEv+0x78>)
 800f97a:	f013 fc81 	bl	8023280 <__cxa_guard_acquire>
 800f97e:	4603      	mov	r3, r0
 800f980:	2b00      	cmp	r3, #0
 800f982:	bf14      	ite	ne
 800f984:	2301      	movne	r3, #1
 800f986:	2300      	moveq	r3, #0
 800f988:	b2db      	uxtb	r3, r3
 800f98a:	2b00      	cmp	r3, #0
 800f98c:	d008      	beq.n	800f9a0 <_ZN5Lexer11build_tokenEv+0x4c>
 800f98e:	4810      	ldr	r0, [pc, #64]	; (800f9d0 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f990:	f7ff fc49 	bl	800f226 <_ZN5LexerC1Ev>
 800f994:	480d      	ldr	r0, [pc, #52]	; (800f9cc <_ZN5Lexer11build_tokenEv+0x78>)
 800f996:	f013 fc7f 	bl	8023298 <__cxa_guard_release>
 800f99a:	480e      	ldr	r0, [pc, #56]	; (800f9d4 <_ZN5Lexer11build_tokenEv+0x80>)
 800f99c:	f015 f8c5 	bl	8024b2a <atexit>
	lex.get_working_char();
 800f9a0:	480b      	ldr	r0, [pc, #44]	; (800f9d0 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f9a2:	f000 f86f 	bl	800fa84 <_ZN5Lexer16get_working_charEv>

	if (lex.build_token_value())
 800f9a6:	480a      	ldr	r0, [pc, #40]	; (800f9d0 <_ZN5Lexer11build_tokenEv+0x7c>)
 800f9a8:	f7ff ff28 	bl	800f7fc <_ZN5Lexer17build_token_valueEv>
 800f9ac:	4603      	mov	r3, r0
 800f9ae:	2b00      	cmp	r3, #0
 800f9b0:	d004      	beq.n	800f9bc <_ZN5Lexer11build_tokenEv+0x68>
	{
		return lex.product;
 800f9b2:	4909      	ldr	r1, [pc, #36]	; (800f9d8 <_ZN5Lexer11build_tokenEv+0x84>)
 800f9b4:	6878      	ldr	r0, [r7, #4]
 800f9b6:	f7ff ffb7 	bl	800f928 <_ZN5TokenC1ERKS_>
 800f9ba:	e003      	b.n	800f9c4 <_ZN5Lexer11build_tokenEv+0x70>
	}

	return lex.product;
 800f9bc:	4906      	ldr	r1, [pc, #24]	; (800f9d8 <_ZN5Lexer11build_tokenEv+0x84>)
 800f9be:	6878      	ldr	r0, [r7, #4]
 800f9c0:	f7ff ffb2 	bl	800f928 <_ZN5TokenC1ERKS_>
}
 800f9c4:	6878      	ldr	r0, [r7, #4]
 800f9c6:	3708      	adds	r7, #8
 800f9c8:	46bd      	mov	sp, r7
 800f9ca:	bd80      	pop	{r7, pc}
 800f9cc:	200003bc 	.word	0x200003bc
 800f9d0:	20000398 	.word	0x20000398
 800f9d4:	0800f879 	.word	0x0800f879
 800f9d8:	2000039c 	.word	0x2000039c

0800f9dc <_ZN5Lexer12skip_commentEv>:

void Lexer::skip_comment()
{
 800f9dc:	b580      	push	{r7, lr}
 800f9de:	b082      	sub	sp, #8
 800f9e0:	af00      	add	r7, sp, #0
 800f9e2:	6078      	str	r0, [r7, #4]
	while (char_buffer == '#')
 800f9e4:	687b      	ldr	r3, [r7, #4]
 800f9e6:	781b      	ldrb	r3, [r3, #0]
 800f9e8:	2b23      	cmp	r3, #35	; 0x23
 800f9ea:	d111      	bne.n	800fa10 <_ZN5Lexer12skip_commentEv+0x34>
	{
		while (char_buffer != '\n')
 800f9ec:	687b      	ldr	r3, [r7, #4]
 800f9ee:	781b      	ldrb	r3, [r3, #0]
 800f9f0:	2b0a      	cmp	r3, #10
 800f9f2:	d006      	beq.n	800fa02 <_ZN5Lexer12skip_commentEv+0x26>
		{
			char_buffer = Transmitter::receive_code_char();
 800f9f4:	f008 ffc8 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800f9f8:	4603      	mov	r3, r0
 800f9fa:	461a      	mov	r2, r3
 800f9fc:	687b      	ldr	r3, [r7, #4]
 800f9fe:	701a      	strb	r2, [r3, #0]
		while (char_buffer != '\n')
 800fa00:	e7f4      	b.n	800f9ec <_ZN5Lexer12skip_commentEv+0x10>
		}
		char_buffer = Transmitter::receive_code_char();
 800fa02:	f008 ffc1 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800fa06:	4603      	mov	r3, r0
 800fa08:	461a      	mov	r2, r3
 800fa0a:	687b      	ldr	r3, [r7, #4]
 800fa0c:	701a      	strb	r2, [r3, #0]
	while (char_buffer == '#')
 800fa0e:	e7e9      	b.n	800f9e4 <_ZN5Lexer12skip_commentEv+0x8>
	}
}
 800fa10:	bf00      	nop
 800fa12:	3708      	adds	r7, #8
 800fa14:	46bd      	mov	sp, r7
 800fa16:	bd80      	pop	{r7, pc}

0800fa18 <_ZN5Lexer15skip_whitespaceEv>:

void Lexer::skip_whitespace()
{
 800fa18:	b580      	push	{r7, lr}
 800fa1a:	b082      	sub	sp, #8
 800fa1c:	af00      	add	r7, sp, #0
 800fa1e:	6078      	str	r0, [r7, #4]
	while (isspace(char_buffer) && char_buffer != '\n')
 800fa20:	687b      	ldr	r3, [r7, #4]
 800fa22:	781b      	ldrb	r3, [r3, #0]
 800fa24:	4618      	mov	r0, r3
 800fa26:	f015 f8c1 	bl	8024bac <isspace>
 800fa2a:	4603      	mov	r3, r0
 800fa2c:	2b00      	cmp	r3, #0
 800fa2e:	d00a      	beq.n	800fa46 <_ZN5Lexer15skip_whitespaceEv+0x2e>
 800fa30:	687b      	ldr	r3, [r7, #4]
 800fa32:	781b      	ldrb	r3, [r3, #0]
 800fa34:	2b0a      	cmp	r3, #10
 800fa36:	d006      	beq.n	800fa46 <_ZN5Lexer15skip_whitespaceEv+0x2e>
	{
		char_buffer = Transmitter::receive_code_char();
 800fa38:	f008 ffa6 	bl	8018988 <_ZN11Transmitter17receive_code_charEv>
 800fa3c:	4603      	mov	r3, r0
 800fa3e:	461a      	mov	r2, r3
 800fa40:	687b      	ldr	r3, [r7, #4]
 800fa42:	701a      	strb	r2, [r3, #0]
	while (isspace(char_buffer) && char_buffer != '\n')
 800fa44:	e7ec      	b.n	800fa20 <_ZN5Lexer15skip_whitespaceEv+0x8>
	}
}
 800fa46:	bf00      	nop
 800fa48:	3708      	adds	r7, #8
 800fa4a:	46bd      	mov	sp, r7
 800fa4c:	bd80      	pop	{r7, pc}

0800fa4e <_ZN5Lexer15is_invalid_charEv>:

bool Lexer::is_invalid_char()
{
 800fa4e:	b580      	push	{r7, lr}
 800fa50:	b082      	sub	sp, #8
 800fa52:	af00      	add	r7, sp, #0
 800fa54:	6078      	str	r0, [r7, #4]
	return (isspace(char_buffer) && char_buffer != '\n') || char_buffer == '#';
 800fa56:	687b      	ldr	r3, [r7, #4]
 800fa58:	781b      	ldrb	r3, [r3, #0]
 800fa5a:	4618      	mov	r0, r3
 800fa5c:	f015 f8a6 	bl	8024bac <isspace>
 800fa60:	4603      	mov	r3, r0
 800fa62:	2b00      	cmp	r3, #0
 800fa64:	d003      	beq.n	800fa6e <_ZN5Lexer15is_invalid_charEv+0x20>
 800fa66:	687b      	ldr	r3, [r7, #4]
 800fa68:	781b      	ldrb	r3, [r3, #0]
 800fa6a:	2b0a      	cmp	r3, #10
 800fa6c:	d103      	bne.n	800fa76 <_ZN5Lexer15is_invalid_charEv+0x28>
 800fa6e:	687b      	ldr	r3, [r7, #4]
 800fa70:	781b      	ldrb	r3, [r3, #0]
 800fa72:	2b23      	cmp	r3, #35	; 0x23
 800fa74:	d101      	bne.n	800fa7a <_ZN5Lexer15is_invalid_charEv+0x2c>
 800fa76:	2301      	movs	r3, #1
 800fa78:	e000      	b.n	800fa7c <_ZN5Lexer15is_invalid_charEv+0x2e>
 800fa7a:	2300      	movs	r3, #0
}
 800fa7c:	4618      	mov	r0, r3
 800fa7e:	3708      	adds	r7, #8
 800fa80:	46bd      	mov	sp, r7
 800fa82:	bd80      	pop	{r7, pc}

0800fa84 <_ZN5Lexer16get_working_charEv>:

void Lexer::get_working_char()
{
 800fa84:	b580      	push	{r7, lr}
 800fa86:	b082      	sub	sp, #8
 800fa88:	af00      	add	r7, sp, #0
 800fa8a:	6078      	str	r0, [r7, #4]
	while (is_invalid_char())
 800fa8c:	6878      	ldr	r0, [r7, #4]
 800fa8e:	f7ff ffde 	bl	800fa4e <_ZN5Lexer15is_invalid_charEv>
 800fa92:	4603      	mov	r3, r0
 800fa94:	2b00      	cmp	r3, #0
 800fa96:	d006      	beq.n	800faa6 <_ZN5Lexer16get_working_charEv+0x22>
	{
		skip_comment();
 800fa98:	6878      	ldr	r0, [r7, #4]
 800fa9a:	f7ff ff9f 	bl	800f9dc <_ZN5Lexer12skip_commentEv>
		skip_whitespace();
 800fa9e:	6878      	ldr	r0, [r7, #4]
 800faa0:	f7ff ffba 	bl	800fa18 <_ZN5Lexer15skip_whitespaceEv>
	while (is_invalid_char())
 800faa4:	e7f2      	b.n	800fa8c <_ZN5Lexer16get_working_charEv+0x8>
	}
}
 800faa6:	bf00      	nop
 800faa8:	3708      	adds	r7, #8
 800faaa:	46bd      	mov	sp, r7
 800faac:	bd80      	pop	{r7, pc}

0800faae <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
      _Ret __ret;

      _CharT* __endptr;

      struct _Save_errno {
	_Save_errno() : _M_errno(errno) { errno = 0; }
 800faae:	b580      	push	{r7, lr}
 800fab0:	b082      	sub	sp, #8
 800fab2:	af00      	add	r7, sp, #0
 800fab4:	6078      	str	r0, [r7, #4]
 800fab6:	f015 f83f 	bl	8024b38 <__errno>
 800faba:	4603      	mov	r3, r0
 800fabc:	681a      	ldr	r2, [r3, #0]
 800fabe:	687b      	ldr	r3, [r7, #4]
 800fac0:	601a      	str	r2, [r3, #0]
 800fac2:	f015 f839 	bl	8024b38 <__errno>
 800fac6:	4603      	mov	r3, r0
 800fac8:	2200      	movs	r2, #0
 800faca:	601a      	str	r2, [r3, #0]
 800facc:	687b      	ldr	r3, [r7, #4]
 800face:	4618      	mov	r0, r3
 800fad0:	3708      	adds	r7, #8
 800fad2:	46bd      	mov	sp, r7
 800fad4:	bd80      	pop	{r7, pc}

0800fad6 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 800fad6:	b590      	push	{r4, r7, lr}
 800fad8:	b083      	sub	sp, #12
 800fada:	af00      	add	r7, sp, #0
 800fadc:	6078      	str	r0, [r7, #4]
 800fade:	f015 f82b 	bl	8024b38 <__errno>
 800fae2:	4603      	mov	r3, r0
 800fae4:	681b      	ldr	r3, [r3, #0]
 800fae6:	2b00      	cmp	r3, #0
 800fae8:	bf0c      	ite	eq
 800faea:	2301      	moveq	r3, #1
 800faec:	2300      	movne	r3, #0
 800faee:	b2db      	uxtb	r3, r3
 800faf0:	2b00      	cmp	r3, #0
 800faf2:	d005      	beq.n	800fb00 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800faf4:	687b      	ldr	r3, [r7, #4]
 800faf6:	681c      	ldr	r4, [r3, #0]
 800faf8:	f015 f81e 	bl	8024b38 <__errno>
 800fafc:	4603      	mov	r3, r0
 800fafe:	601c      	str	r4, [r3, #0]
 800fb00:	687b      	ldr	r3, [r7, #4]
 800fb02:	4618      	mov	r0, r3
 800fb04:	370c      	adds	r7, #12
 800fb06:	46bd      	mov	sp, r7
 800fb08:	bd90      	pop	{r4, r7, pc}

0800fb0a <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>:
      struct _Range_chk {
	  static bool
	  _S_chk(_TRet, std::false_type) { return false; }

	  static bool
	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
 800fb0a:	b480      	push	{r7}
 800fb0c:	b083      	sub	sp, #12
 800fb0e:	af00      	add	r7, sp, #0
 800fb10:	6078      	str	r0, [r7, #4]
 800fb12:	7039      	strb	r1, [r7, #0]
	  {
	    return __val < _TRet(__numeric_traits<int>::__min)
	      || __val > _TRet(__numeric_traits<int>::__max);
 800fb14:	2300      	movs	r3, #0
	  }
 800fb16:	4618      	mov	r0, r3
 800fb18:	370c      	adds	r7, #12
 800fb1a:	46bd      	mov	sp, r7
 800fb1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb20:	4770      	bx	lr

0800fb22 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800fb22:	b590      	push	{r4, r7, lr}
 800fb24:	b08b      	sub	sp, #44	; 0x2c
 800fb26:	af00      	add	r7, sp, #0
 800fb28:	60f8      	str	r0, [r7, #12]
 800fb2a:	60b9      	str	r1, [r7, #8]
 800fb2c:	607a      	str	r2, [r7, #4]
 800fb2e:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800fb30:	f107 0314 	add.w	r3, r7, #20
 800fb34:	4618      	mov	r0, r3
 800fb36:	f7ff ffba 	bl	800faae <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      };

      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 800fb3a:	68fb      	ldr	r3, [r7, #12]
 800fb3c:	f107 0118 	add.w	r1, r7, #24
 800fb40:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800fb42:	6878      	ldr	r0, [r7, #4]
 800fb44:	4798      	blx	r3
 800fb46:	6278      	str	r0, [r7, #36]	; 0x24

      if (__endptr == __str)
 800fb48:	69bb      	ldr	r3, [r7, #24]
 800fb4a:	687a      	ldr	r2, [r7, #4]
 800fb4c:	429a      	cmp	r2, r3
 800fb4e:	d102      	bne.n	800fb56 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x34>
	std::__throw_invalid_argument(__name);
 800fb50:	68b8      	ldr	r0, [r7, #8]
 800fb52:	f013 fc6f 	bl	8023434 <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 800fb56:	f014 ffef 	bl	8024b38 <__errno>
 800fb5a:	4603      	mov	r3, r0
 800fb5c:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 800fb5e:	2b22      	cmp	r3, #34	; 0x22
 800fb60:	d006      	beq.n	800fb70 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x4e>
 800fb62:	4621      	mov	r1, r4
 800fb64:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800fb66:	f7ff ffd0 	bl	800fb0a <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>
 800fb6a:	4603      	mov	r3, r0
 800fb6c:	2b00      	cmp	r3, #0
 800fb6e:	d001      	beq.n	800fb74 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 800fb70:	2301      	movs	r3, #1
 800fb72:	e000      	b.n	800fb76 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x54>
 800fb74:	2300      	movs	r3, #0
      else if (errno == ERANGE
 800fb76:	2b00      	cmp	r3, #0
 800fb78:	d002      	beq.n	800fb80 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x5e>
	std::__throw_out_of_range(__name);
 800fb7a:	68b8      	ldr	r0, [r7, #8]
 800fb7c:	f013 fc60 	bl	8023440 <_ZSt20__throw_out_of_rangePKc>
      else
	__ret = __tmp;
 800fb80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fb82:	623b      	str	r3, [r7, #32]

      if (__idx)
 800fb84:	683b      	ldr	r3, [r7, #0]
 800fb86:	2b00      	cmp	r3, #0
 800fb88:	d005      	beq.n	800fb96 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x74>
	*__idx = __endptr - __str;
 800fb8a:	69ba      	ldr	r2, [r7, #24]
 800fb8c:	687b      	ldr	r3, [r7, #4]
 800fb8e:	1ad3      	subs	r3, r2, r3
 800fb90:	461a      	mov	r2, r3
 800fb92:	683b      	ldr	r3, [r7, #0]
 800fb94:	601a      	str	r2, [r3, #0]

      return __ret;
 800fb96:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 800fb98:	f107 0314 	add.w	r3, r7, #20
 800fb9c:	4618      	mov	r0, r3
 800fb9e:	f7ff ff9a 	bl	800fad6 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 800fba2:	4623      	mov	r3, r4
    }
 800fba4:	4618      	mov	r0, r3
 800fba6:	372c      	adds	r7, #44	; 0x2c
 800fba8:	46bd      	mov	sp, r7
 800fbaa:	bd90      	pop	{r4, r7, pc}

0800fbac <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
	_Save_errno() : _M_errno(errno) { errno = 0; }
 800fbac:	b580      	push	{r7, lr}
 800fbae:	b082      	sub	sp, #8
 800fbb0:	af00      	add	r7, sp, #0
 800fbb2:	6078      	str	r0, [r7, #4]
 800fbb4:	f014 ffc0 	bl	8024b38 <__errno>
 800fbb8:	4603      	mov	r3, r0
 800fbba:	681a      	ldr	r2, [r3, #0]
 800fbbc:	687b      	ldr	r3, [r7, #4]
 800fbbe:	601a      	str	r2, [r3, #0]
 800fbc0:	f014 ffba 	bl	8024b38 <__errno>
 800fbc4:	4603      	mov	r3, r0
 800fbc6:	2200      	movs	r2, #0
 800fbc8:	601a      	str	r2, [r3, #0]
 800fbca:	687b      	ldr	r3, [r7, #4]
 800fbcc:	4618      	mov	r0, r3
 800fbce:	3708      	adds	r7, #8
 800fbd0:	46bd      	mov	sp, r7
 800fbd2:	bd80      	pop	{r7, pc}

0800fbd4 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 800fbd4:	b590      	push	{r4, r7, lr}
 800fbd6:	b083      	sub	sp, #12
 800fbd8:	af00      	add	r7, sp, #0
 800fbda:	6078      	str	r0, [r7, #4]
 800fbdc:	f014 ffac 	bl	8024b38 <__errno>
 800fbe0:	4603      	mov	r3, r0
 800fbe2:	681b      	ldr	r3, [r3, #0]
 800fbe4:	2b00      	cmp	r3, #0
 800fbe6:	bf0c      	ite	eq
 800fbe8:	2301      	moveq	r3, #1
 800fbea:	2300      	movne	r3, #0
 800fbec:	b2db      	uxtb	r3, r3
 800fbee:	2b00      	cmp	r3, #0
 800fbf0:	d005      	beq.n	800fbfe <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800fbf2:	687b      	ldr	r3, [r7, #4]
 800fbf4:	681c      	ldr	r4, [r3, #0]
 800fbf6:	f014 ff9f 	bl	8024b38 <__errno>
 800fbfa:	4603      	mov	r3, r0
 800fbfc:	601c      	str	r4, [r3, #0]
 800fbfe:	687b      	ldr	r3, [r7, #4]
 800fc00:	4618      	mov	r0, r3
 800fc02:	370c      	adds	r7, #12
 800fc04:	46bd      	mov	sp, r7
 800fc06:	bd90      	pop	{r4, r7, pc}

0800fc08 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>:
	  _S_chk(_TRet, std::false_type) { return false; }
 800fc08:	b480      	push	{r7}
 800fc0a:	b083      	sub	sp, #12
 800fc0c:	af00      	add	r7, sp, #0
 800fc0e:	ed87 0a01 	vstr	s0, [r7, #4]
 800fc12:	7038      	strb	r0, [r7, #0]
 800fc14:	2300      	movs	r3, #0
 800fc16:	4618      	mov	r0, r3
 800fc18:	370c      	adds	r7, #12
 800fc1a:	46bd      	mov	sp, r7
 800fc1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc20:	4770      	bx	lr

0800fc22 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800fc22:	b590      	push	{r4, r7, lr}
 800fc24:	b08b      	sub	sp, #44	; 0x2c
 800fc26:	af00      	add	r7, sp, #0
 800fc28:	60f8      	str	r0, [r7, #12]
 800fc2a:	60b9      	str	r1, [r7, #8]
 800fc2c:	607a      	str	r2, [r7, #4]
 800fc2e:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800fc30:	f107 0314 	add.w	r3, r7, #20
 800fc34:	4618      	mov	r0, r3
 800fc36:	f7ff ffb9 	bl	800fbac <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 800fc3a:	68fb      	ldr	r3, [r7, #12]
 800fc3c:	f107 0218 	add.w	r2, r7, #24
 800fc40:	4611      	mov	r1, r2
 800fc42:	6878      	ldr	r0, [r7, #4]
 800fc44:	4798      	blx	r3
 800fc46:	ed87 0a09 	vstr	s0, [r7, #36]	; 0x24
      if (__endptr == __str)
 800fc4a:	69bb      	ldr	r3, [r7, #24]
 800fc4c:	687a      	ldr	r2, [r7, #4]
 800fc4e:	429a      	cmp	r2, r3
 800fc50:	d102      	bne.n	800fc58 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x36>
	std::__throw_invalid_argument(__name);
 800fc52:	68b8      	ldr	r0, [r7, #8]
 800fc54:	f013 fbee 	bl	8023434 <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 800fc58:	f014 ff6e 	bl	8024b38 <__errno>
 800fc5c:	4603      	mov	r3, r0
 800fc5e:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 800fc60:	2b22      	cmp	r3, #34	; 0x22
 800fc62:	d007      	beq.n	800fc74 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 800fc64:	4620      	mov	r0, r4
 800fc66:	ed97 0a09 	vldr	s0, [r7, #36]	; 0x24
 800fc6a:	f7ff ffcd 	bl	800fc08 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>
 800fc6e:	4603      	mov	r3, r0
 800fc70:	2b00      	cmp	r3, #0
 800fc72:	d001      	beq.n	800fc78 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x56>
 800fc74:	2301      	movs	r3, #1
 800fc76:	e000      	b.n	800fc7a <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x58>
 800fc78:	2300      	movs	r3, #0
      else if (errno == ERANGE
 800fc7a:	2b00      	cmp	r3, #0
 800fc7c:	d002      	beq.n	800fc84 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x62>
	std::__throw_out_of_range(__name);
 800fc7e:	68b8      	ldr	r0, [r7, #8]
 800fc80:	f013 fbde 	bl	8023440 <_ZSt20__throw_out_of_rangePKc>
	__ret = __tmp;
 800fc84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fc86:	623b      	str	r3, [r7, #32]
      if (__idx)
 800fc88:	683b      	ldr	r3, [r7, #0]
 800fc8a:	2b00      	cmp	r3, #0
 800fc8c:	d005      	beq.n	800fc9a <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x78>
	*__idx = __endptr - __str;
 800fc8e:	69ba      	ldr	r2, [r7, #24]
 800fc90:	687b      	ldr	r3, [r7, #4]
 800fc92:	1ad3      	subs	r3, r2, r3
 800fc94:	461a      	mov	r2, r3
 800fc96:	683b      	ldr	r3, [r7, #0]
 800fc98:	601a      	str	r2, [r3, #0]
      return __ret;
 800fc9a:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 800fc9c:	f107 0314 	add.w	r3, r7, #20
 800fca0:	4618      	mov	r0, r3
 800fca2:	f7ff ff97 	bl	800fbd4 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 800fca6:	ee07 4a90 	vmov	s15, r4
    }
 800fcaa:	eeb0 0a67 	vmov.f32	s0, s15
 800fcae:	372c      	adds	r7, #44	; 0x2c
 800fcb0:	46bd      	mov	sp, r7
 800fcb2:	bd90      	pop	{r4, r7, pc}

0800fcb4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fcb4:	b580      	push	{r7, lr}
 800fcb6:	b082      	sub	sp, #8
 800fcb8:	af00      	add	r7, sp, #0
 800fcba:	6078      	str	r0, [r7, #4]
 800fcbc:	7039      	strb	r1, [r7, #0]
 800fcbe:	687b      	ldr	r3, [r7, #4]
 800fcc0:	4611      	mov	r1, r2
 800fcc2:	4618      	mov	r0, r3
 800fcc4:	f000 f9df 	bl	8010086 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fcc8:	687b      	ldr	r3, [r7, #4]
 800fcca:	4618      	mov	r0, r3
 800fccc:	3708      	adds	r7, #8
 800fcce:	46bd      	mov	sp, r7
 800fcd0:	bd80      	pop	{r7, pc}

0800fcd2 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fcd2:	b580      	push	{r7, lr}
 800fcd4:	b082      	sub	sp, #8
 800fcd6:	af00      	add	r7, sp, #0
 800fcd8:	6078      	str	r0, [r7, #4]
 800fcda:	7039      	strb	r1, [r7, #0]
 800fcdc:	687b      	ldr	r3, [r7, #4]
 800fcde:	4611      	mov	r1, r2
 800fce0:	4618      	mov	r0, r3
 800fce2:	f7ff ffe7 	bl	800fcb4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fce6:	687b      	ldr	r3, [r7, #4]
 800fce8:	4618      	mov	r0, r3
 800fcea:	3708      	adds	r7, #8
 800fcec:	46bd      	mov	sp, r7
 800fcee:	bd80      	pop	{r7, pc}

0800fcf0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fcf0:	b580      	push	{r7, lr}
 800fcf2:	b082      	sub	sp, #8
 800fcf4:	af00      	add	r7, sp, #0
 800fcf6:	6078      	str	r0, [r7, #4]
 800fcf8:	7039      	strb	r1, [r7, #0]
 800fcfa:	687b      	ldr	r3, [r7, #4]
 800fcfc:	4611      	mov	r1, r2
 800fcfe:	4618      	mov	r0, r3
 800fd00:	f7ff ffe7 	bl	800fcd2 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fd04:	687b      	ldr	r3, [r7, #4]
 800fd06:	4618      	mov	r0, r3
 800fd08:	3708      	adds	r7, #8
 800fd0a:	46bd      	mov	sp, r7
 800fd0c:	bd80      	pop	{r7, pc}

0800fd0e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800fd0e:	b580      	push	{r7, lr}
 800fd10:	b082      	sub	sp, #8
 800fd12:	af00      	add	r7, sp, #0
 800fd14:	6078      	str	r0, [r7, #4]
 800fd16:	7039      	strb	r1, [r7, #0]
 800fd18:	687b      	ldr	r3, [r7, #4]
 800fd1a:	4611      	mov	r1, r2
 800fd1c:	4618      	mov	r0, r3
 800fd1e:	f7ff ffe7 	bl	800fcf0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fd22:	687b      	ldr	r3, [r7, #4]
 800fd24:	4618      	mov	r0, r3
 800fd26:	3708      	adds	r7, #8
 800fd28:	46bd      	mov	sp, r7
 800fd2a:	bd80      	pop	{r7, pc}

0800fd2c <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800fd2c:	b580      	push	{r7, lr}
 800fd2e:	b082      	sub	sp, #8
 800fd30:	af00      	add	r7, sp, #0
 800fd32:	6078      	str	r0, [r7, #4]
 800fd34:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 800fd36:	687b      	ldr	r3, [r7, #4]
 800fd38:	4611      	mov	r1, r2
 800fd3a:	4618      	mov	r0, r3
 800fd3c:	f7ff ffe7 	bl	800fd0e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800fd40:	687b      	ldr	r3, [r7, #4]
 800fd42:	4618      	mov	r0, r3
 800fd44:	3708      	adds	r7, #8
 800fd46:	46bd      	mov	sp, r7
 800fd48:	bd80      	pop	{r7, pc}

0800fd4a <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      _Variant_base()
 800fd4a:	b580      	push	{r7, lr}
 800fd4c:	b082      	sub	sp, #8
 800fd4e:	af00      	add	r7, sp, #0
 800fd50:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 800fd52:	4619      	mov	r1, r3
 800fd54:	6878      	ldr	r0, [r7, #4]
 800fd56:	f7ff ffe9 	bl	800fd2c <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800fd5a:	687b      	ldr	r3, [r7, #4]
 800fd5c:	4618      	mov	r0, r3
 800fd5e:	3708      	adds	r7, #8
 800fd60:	46bd      	mov	sp, r7
 800fd62:	bd80      	pop	{r7, pc}

0800fd64 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~_Variant_storage()
 800fd64:	b580      	push	{r7, lr}
 800fd66:	b082      	sub	sp, #8
 800fd68:	af00      	add	r7, sp, #0
 800fd6a:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 800fd6c:	6878      	ldr	r0, [r7, #4]
 800fd6e:	f000 f99c 	bl	80100aa <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
 800fd72:	687b      	ldr	r3, [r7, #4]
 800fd74:	4618      	mov	r0, r3
 800fd76:	3708      	adds	r7, #8
 800fd78:	46bd      	mov	sp, r7
 800fd7a:	bd80      	pop	{r7, pc}

0800fd7c <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
       *  iterator pointing to the sought after %pair. If unsuccessful it
       *  returns the past-the-end ( @c end() ) iterator.
       */

      const_iterator
      find(const key_type& __x) const
 800fd7c:	b580      	push	{r7, lr}
 800fd7e:	b082      	sub	sp, #8
 800fd80:	af00      	add	r7, sp, #0
 800fd82:	6078      	str	r0, [r7, #4]
 800fd84:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fd86:	687b      	ldr	r3, [r7, #4]
 800fd88:	6839      	ldr	r1, [r7, #0]
 800fd8a:	4618      	mov	r0, r3
 800fd8c:	f000 f99b 	bl	80100c6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 800fd90:	4603      	mov	r3, r0
 800fd92:	4618      	mov	r0, r3
 800fd94:	3708      	adds	r7, #8
 800fd96:	46bd      	mov	sp, r7
 800fd98:	bd80      	pop	{r7, pc}

0800fd9a <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fd9a:	b580      	push	{r7, lr}
 800fd9c:	b082      	sub	sp, #8
 800fd9e:	af00      	add	r7, sp, #0
 800fda0:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fda2:	687b      	ldr	r3, [r7, #4]
 800fda4:	4618      	mov	r0, r3
 800fda6:	f000 f9ca 	bl	801013e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fdaa:	4603      	mov	r3, r0
 800fdac:	4618      	mov	r0, r3
 800fdae:	3708      	adds	r7, #8
 800fdb0:	46bd      	mov	sp, r7
 800fdb2:	bd80      	pop	{r7, pc}

0800fdb4 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fdb4:	b480      	push	{r7}
 800fdb6:	b083      	sub	sp, #12
 800fdb8:	af00      	add	r7, sp, #0
 800fdba:	6078      	str	r0, [r7, #4]
 800fdbc:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800fdbe:	687b      	ldr	r3, [r7, #4]
 800fdc0:	681a      	ldr	r2, [r3, #0]
 800fdc2:	683b      	ldr	r3, [r7, #0]
 800fdc4:	681b      	ldr	r3, [r3, #0]
 800fdc6:	429a      	cmp	r2, r3
 800fdc8:	bf14      	ite	ne
 800fdca:	2301      	movne	r3, #1
 800fdcc:	2300      	moveq	r3, #0
 800fdce:	b2db      	uxtb	r3, r3
 800fdd0:	4618      	mov	r0, r3
 800fdd2:	370c      	adds	r7, #12
 800fdd4:	46bd      	mov	sp, r7
 800fdd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdda:	4770      	bx	lr

0800fddc <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fddc:	b580      	push	{r7, lr}
 800fdde:	b082      	sub	sp, #8
 800fde0:	af00      	add	r7, sp, #0
 800fde2:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fde4:	687b      	ldr	r3, [r7, #4]
 800fde6:	681b      	ldr	r3, [r3, #0]
 800fde8:	4618      	mov	r0, r3
 800fdea:	f7f8 fada 	bl	80083a2 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800fdee:	4603      	mov	r3, r0
 800fdf0:	4618      	mov	r0, r3
 800fdf2:	3708      	adds	r7, #8
 800fdf4:	46bd      	mov	sp, r7
 800fdf6:	bd80      	pop	{r7, pc}

0800fdf8 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
      find(const key_type& __x) const
 800fdf8:	b580      	push	{r7, lr}
 800fdfa:	b082      	sub	sp, #8
 800fdfc:	af00      	add	r7, sp, #0
 800fdfe:	6078      	str	r0, [r7, #4]
 800fe00:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fe02:	687b      	ldr	r3, [r7, #4]
 800fe04:	6839      	ldr	r1, [r7, #0]
 800fe06:	4618      	mov	r0, r3
 800fe08:	f000 f9aa 	bl	8010160 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 800fe0c:	4603      	mov	r3, r0
 800fe0e:	4618      	mov	r0, r3
 800fe10:	3708      	adds	r7, #8
 800fe12:	46bd      	mov	sp, r7
 800fe14:	bd80      	pop	{r7, pc}

0800fe16 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fe16:	b580      	push	{r7, lr}
 800fe18:	b082      	sub	sp, #8
 800fe1a:	af00      	add	r7, sp, #0
 800fe1c:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fe1e:	687b      	ldr	r3, [r7, #4]
 800fe20:	4618      	mov	r0, r3
 800fe22:	f000 f9d9 	bl	80101d8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 800fe26:	4603      	mov	r3, r0
 800fe28:	4618      	mov	r0, r3
 800fe2a:	3708      	adds	r7, #8
 800fe2c:	46bd      	mov	sp, r7
 800fe2e:	bd80      	pop	{r7, pc}

0800fe30 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fe30:	b480      	push	{r7}
 800fe32:	b083      	sub	sp, #12
 800fe34:	af00      	add	r7, sp, #0
 800fe36:	6078      	str	r0, [r7, #4]
 800fe38:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800fe3a:	687b      	ldr	r3, [r7, #4]
 800fe3c:	681a      	ldr	r2, [r3, #0]
 800fe3e:	683b      	ldr	r3, [r7, #0]
 800fe40:	681b      	ldr	r3, [r3, #0]
 800fe42:	429a      	cmp	r2, r3
 800fe44:	bf14      	ite	ne
 800fe46:	2301      	movne	r3, #1
 800fe48:	2300      	moveq	r3, #0
 800fe4a:	b2db      	uxtb	r3, r3
 800fe4c:	4618      	mov	r0, r3
 800fe4e:	370c      	adds	r7, #12
 800fe50:	46bd      	mov	sp, r7
 800fe52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe56:	4770      	bx	lr

0800fe58 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fe58:	b580      	push	{r7, lr}
 800fe5a:	b082      	sub	sp, #8
 800fe5c:	af00      	add	r7, sp, #0
 800fe5e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fe60:	687b      	ldr	r3, [r7, #4]
 800fe62:	681b      	ldr	r3, [r3, #0]
 800fe64:	4618      	mov	r0, r3
 800fe66:	f7f8 fb77 	bl	8008558 <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 800fe6a:	4603      	mov	r3, r0
 800fe6c:	4618      	mov	r0, r3
 800fe6e:	3708      	adds	r7, #8
 800fe70:	46bd      	mov	sp, r7
 800fe72:	bd80      	pop	{r7, pc}

0800fe74 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x) const
 800fe74:	b580      	push	{r7, lr}
 800fe76:	b082      	sub	sp, #8
 800fe78:	af00      	add	r7, sp, #0
 800fe7a:	6078      	str	r0, [r7, #4]
 800fe7c:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 800fe7e:	687b      	ldr	r3, [r7, #4]
 800fe80:	6839      	ldr	r1, [r7, #0]
 800fe82:	4618      	mov	r0, r3
 800fe84:	f000 f9b9 	bl	80101fa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 800fe88:	4603      	mov	r3, r0
 800fe8a:	4618      	mov	r0, r3
 800fe8c:	3708      	adds	r7, #8
 800fe8e:	46bd      	mov	sp, r7
 800fe90:	bd80      	pop	{r7, pc}

0800fe92 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 800fe92:	b580      	push	{r7, lr}
 800fe94:	b082      	sub	sp, #8
 800fe96:	af00      	add	r7, sp, #0
 800fe98:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fe9a:	687b      	ldr	r3, [r7, #4]
 800fe9c:	4618      	mov	r0, r3
 800fe9e:	f000 f9e8 	bl	8010272 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 800fea2:	4603      	mov	r3, r0
 800fea4:	4618      	mov	r0, r3
 800fea6:	3708      	adds	r7, #8
 800fea8:	46bd      	mov	sp, r7
 800feaa:	bd80      	pop	{r7, pc}

0800feac <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800feac:	b480      	push	{r7}
 800feae:	b083      	sub	sp, #12
 800feb0:	af00      	add	r7, sp, #0
 800feb2:	6078      	str	r0, [r7, #4]
 800feb4:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 800feb6:	687b      	ldr	r3, [r7, #4]
 800feb8:	681a      	ldr	r2, [r3, #0]
 800feba:	683b      	ldr	r3, [r7, #0]
 800febc:	681b      	ldr	r3, [r3, #0]
 800febe:	429a      	cmp	r2, r3
 800fec0:	bf14      	ite	ne
 800fec2:	2301      	movne	r3, #1
 800fec4:	2300      	moveq	r3, #0
 800fec6:	b2db      	uxtb	r3, r3
 800fec8:	4618      	mov	r0, r3
 800feca:	370c      	adds	r7, #12
 800fecc:	46bd      	mov	sp, r7
 800fece:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fed2:	4770      	bx	lr

0800fed4 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 800fed4:	b580      	push	{r7, lr}
 800fed6:	b082      	sub	sp, #8
 800fed8:	af00      	add	r7, sp, #0
 800feda:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fedc:	687b      	ldr	r3, [r7, #4]
 800fede:	681b      	ldr	r3, [r3, #0]
 800fee0:	4618      	mov	r0, r3
 800fee2:	f7f8 facc 	bl	800847e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 800fee6:	4603      	mov	r3, r0
 800fee8:	4618      	mov	r0, r3
 800feea:	3708      	adds	r7, #8
 800feec:	46bd      	mov	sp, r7
 800feee:	bd80      	pop	{r7, pc}

0800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>:
      constexpr size_t index() const noexcept
 800fef0:	b480      	push	{r7}
 800fef2:	b083      	sub	sp, #12
 800fef4:	af00      	add	r7, sp, #0
 800fef6:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 800fef8:	687b      	ldr	r3, [r7, #4]
 800fefa:	7e1b      	ldrb	r3, [r3, #24]
 800fefc:	2bff      	cmp	r3, #255	; 0xff
 800fefe:	d102      	bne.n	800ff06 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x16>
	  return variant_npos;
 800ff00:	f04f 33ff 	mov.w	r3, #4294967295
 800ff04:	e001      	b.n	800ff0a <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x1a>
	return this->_M_index;
 800ff06:	687b      	ldr	r3, [r7, #4]
 800ff08:	7e1b      	ldrb	r3, [r3, #24]
      }
 800ff0a:	4618      	mov	r0, r3
 800ff0c:	370c      	adds	r7, #12
 800ff0e:	46bd      	mov	sp, r7
 800ff10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff14:	4770      	bx	lr

0800ff16 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800ff16:	b590      	push	{r4, r7, lr}
 800ff18:	b085      	sub	sp, #20
 800ff1a:	af00      	add	r7, sp, #0
 800ff1c:	6078      	str	r0, [r7, #4]
 800ff1e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800ff20:	2300      	movs	r3, #0
 800ff22:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800ff24:	6878      	ldr	r0, [r7, #4]
 800ff26:	f7ff ffe3 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800ff2a:	4603      	mov	r3, r0
 800ff2c:	2b00      	cmp	r3, #0
 800ff2e:	bf0c      	ite	eq
 800ff30:	2301      	moveq	r3, #1
 800ff32:	2300      	movne	r3, #0
 800ff34:	b2db      	uxtb	r3, r3
 800ff36:	2b00      	cmp	r3, #0
 800ff38:	d00c      	beq.n	800ff54 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800ff3a:	6838      	ldr	r0, [r7, #0]
 800ff3c:	f7f7 fed4 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800ff40:	4604      	mov	r4, r0
 800ff42:	6878      	ldr	r0, [r7, #4]
 800ff44:	f000 f9c8 	bl	80102d8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800ff48:	4603      	mov	r3, r0
 800ff4a:	4621      	mov	r1, r4
 800ff4c:	4618      	mov	r0, r3
 800ff4e:	f013 fc54 	bl	80237fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800ff52:	e007      	b.n	800ff64 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800ff54:	6838      	ldr	r0, [r7, #0]
 800ff56:	f7f7 fec7 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800ff5a:	4603      	mov	r3, r0
 800ff5c:	4619      	mov	r1, r3
 800ff5e:	6878      	ldr	r0, [r7, #4]
 800ff60:	f000 f9d6 	bl	8010310 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 800ff64:	687b      	ldr	r3, [r7, #4]
	}
 800ff66:	4618      	mov	r0, r3
 800ff68:	3714      	adds	r7, #20
 800ff6a:	46bd      	mov	sp, r7
 800ff6c:	bd90      	pop	{r4, r7, pc}

0800ff6e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800ff6e:	b590      	push	{r4, r7, lr}
 800ff70:	b085      	sub	sp, #20
 800ff72:	af00      	add	r7, sp, #0
 800ff74:	6078      	str	r0, [r7, #4]
 800ff76:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800ff78:	2301      	movs	r3, #1
 800ff7a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800ff7c:	6878      	ldr	r0, [r7, #4]
 800ff7e:	f7ff ffb7 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800ff82:	4603      	mov	r3, r0
 800ff84:	2b01      	cmp	r3, #1
 800ff86:	bf0c      	ite	eq
 800ff88:	2301      	moveq	r3, #1
 800ff8a:	2300      	movne	r3, #0
 800ff8c:	b2db      	uxtb	r3, r3
 800ff8e:	2b00      	cmp	r3, #0
 800ff90:	d00a      	beq.n	800ffa8 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800ff92:	6838      	ldr	r0, [r7, #0]
 800ff94:	f7f7 fdf0 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800ff98:	4603      	mov	r3, r0
 800ff9a:	681c      	ldr	r4, [r3, #0]
 800ff9c:	6878      	ldr	r0, [r7, #4]
 800ff9e:	f000 fa05 	bl	80103ac <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800ffa2:	4603      	mov	r3, r0
 800ffa4:	601c      	str	r4, [r3, #0]
 800ffa6:	e007      	b.n	800ffb8 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800ffa8:	6838      	ldr	r0, [r7, #0]
 800ffaa:	f7f7 fde5 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800ffae:	4603      	mov	r3, r0
 800ffb0:	4619      	mov	r1, r3
 800ffb2:	6878      	ldr	r0, [r7, #4]
 800ffb4:	f000 fa16 	bl	80103e4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 800ffb8:	687b      	ldr	r3, [r7, #4]
	}
 800ffba:	4618      	mov	r0, r3
 800ffbc:	3714      	adds	r7, #20
 800ffbe:	46bd      	mov	sp, r7
 800ffc0:	bd90      	pop	{r4, r7, pc}

0800ffc2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 800ffc2:	b590      	push	{r4, r7, lr}
 800ffc4:	b085      	sub	sp, #20
 800ffc6:	af00      	add	r7, sp, #0
 800ffc8:	6078      	str	r0, [r7, #4]
 800ffca:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800ffcc:	2302      	movs	r3, #2
 800ffce:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800ffd0:	6878      	ldr	r0, [r7, #4]
 800ffd2:	f7ff ff8d 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800ffd6:	4603      	mov	r3, r0
 800ffd8:	2b02      	cmp	r3, #2
 800ffda:	bf0c      	ite	eq
 800ffdc:	2301      	moveq	r3, #1
 800ffde:	2300      	movne	r3, #0
 800ffe0:	b2db      	uxtb	r3, r3
 800ffe2:	2b00      	cmp	r3, #0
 800ffe4:	d00a      	beq.n	800fffc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800ffe6:	6838      	ldr	r0, [r7, #0]
 800ffe8:	f7f7 fdf0 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800ffec:	4603      	mov	r3, r0
 800ffee:	681c      	ldr	r4, [r3, #0]
 800fff0:	6878      	ldr	r0, [r7, #4]
 800fff2:	f000 fa57 	bl	80104a4 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800fff6:	4603      	mov	r3, r0
 800fff8:	601c      	str	r4, [r3, #0]
 800fffa:	e007      	b.n	801000c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800fffc:	6838      	ldr	r0, [r7, #0]
 800fffe:	f7f7 fde5 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8010002:	4603      	mov	r3, r0
 8010004:	4619      	mov	r1, r3
 8010006:	6878      	ldr	r0, [r7, #4]
 8010008:	f000 fa68 	bl	80104dc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 801000c:	687b      	ldr	r3, [r7, #4]
	}
 801000e:	4618      	mov	r0, r3
 8010010:	3714      	adds	r7, #20
 8010012:	46bd      	mov	sp, r7
 8010014:	bd90      	pop	{r4, r7, pc}

08010016 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 8010016:	b580      	push	{r7, lr}
 8010018:	b082      	sub	sp, #8
 801001a:	af00      	add	r7, sp, #0
 801001c:	6078      	str	r0, [r7, #4]
 801001e:	6039      	str	r1, [r7, #0]
      {
 8010020:	687b      	ldr	r3, [r7, #4]
 8010022:	4618      	mov	r0, r3
 8010024:	f000 fa80 	bl	8010528 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 8010028:	6839      	ldr	r1, [r7, #0]
 801002a:	6878      	ldr	r0, [r7, #4]
 801002c:	f000 fd1a 	bl	8010a64 <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>
      }
 8010030:	687b      	ldr	r3, [r7, #4]
 8010032:	4618      	mov	r0, r3
 8010034:	3708      	adds	r7, #8
 8010036:	46bd      	mov	sp, r7
 8010038:	bd80      	pop	{r7, pc}

0801003a <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801003a:	b580      	push	{r7, lr}
 801003c:	b082      	sub	sp, #8
 801003e:	af00      	add	r7, sp, #0
 8010040:	6078      	str	r0, [r7, #4]
 8010042:	7039      	strb	r1, [r7, #0]
	  ::new ((void*)std::addressof(_M_storage))
 8010044:	687b      	ldr	r3, [r7, #4]
 8010046:	4618      	mov	r0, r3
 8010048:	f7f8 ffe4 	bl	8009014 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 801004c:	4603      	mov	r3, r0
 801004e:	4619      	mov	r1, r3
 8010050:	2018      	movs	r0, #24
 8010052:	f7f1 f802 	bl	800105a <_ZnwjPv>
 8010056:	4603      	mov	r3, r0
 8010058:	4618      	mov	r0, r3
 801005a:	f013 fba1 	bl	80237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
	}
 801005e:	687b      	ldr	r3, [r7, #4]
 8010060:	4618      	mov	r0, r3
 8010062:	3708      	adds	r7, #8
 8010064:	46bd      	mov	sp, r7
 8010066:	bd80      	pop	{r7, pc}

08010068 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8010068:	b580      	push	{r7, lr}
 801006a:	b082      	sub	sp, #8
 801006c:	af00      	add	r7, sp, #0
 801006e:	6078      	str	r0, [r7, #4]
 8010070:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8010072:	687b      	ldr	r3, [r7, #4]
 8010074:	4611      	mov	r1, r2
 8010076:	4618      	mov	r0, r3
 8010078:	f7ff ffdf 	bl	801003a <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801007c:	687b      	ldr	r3, [r7, #4]
 801007e:	4618      	mov	r0, r3
 8010080:	3708      	adds	r7, #8
 8010082:	46bd      	mov	sp, r7
 8010084:	bd80      	pop	{r7, pc}

08010086 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8010086:	b580      	push	{r7, lr}
 8010088:	b082      	sub	sp, #8
 801008a:	af00      	add	r7, sp, #0
 801008c:	6078      	str	r0, [r7, #4]
 801008e:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8010090:	687b      	ldr	r3, [r7, #4]
 8010092:	4611      	mov	r1, r2
 8010094:	4618      	mov	r0, r3
 8010096:	f7ff ffe7 	bl	8010068 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801009a:	687b      	ldr	r3, [r7, #4]
 801009c:	2200      	movs	r2, #0
 801009e:	761a      	strb	r2, [r3, #24]
	{ }
 80100a0:	687b      	ldr	r3, [r7, #4]
 80100a2:	4618      	mov	r0, r3
 80100a4:	3708      	adds	r7, #8
 80100a6:	46bd      	mov	sp, r7
 80100a8:	bd80      	pop	{r7, pc}

080100aa <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>:
      void _M_reset()
 80100aa:	b580      	push	{r7, lr}
 80100ac:	b082      	sub	sp, #8
 80100ae:	af00      	add	r7, sp, #0
 80100b0:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 80100b2:	6878      	ldr	r0, [r7, #4]
 80100b4:	f000 fee6 	bl	8010e84 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>
	_M_index = variant_npos;
 80100b8:	687b      	ldr	r3, [r7, #4]
 80100ba:	22ff      	movs	r2, #255	; 0xff
 80100bc:	761a      	strb	r2, [r3, #24]
      }
 80100be:	bf00      	nop
 80100c0:	3708      	adds	r7, #8
 80100c2:	46bd      	mov	sp, r7
 80100c4:	bd80      	pop	{r7, pc}

080100c6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80100c6:	b590      	push	{r4, r7, lr}
 80100c8:	b085      	sub	sp, #20
 80100ca:	af00      	add	r7, sp, #0
 80100cc:	6078      	str	r0, [r7, #4]
 80100ce:	6039      	str	r1, [r7, #0]
    find(const _Key& __k) const
    {
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 80100d0:	6878      	ldr	r0, [r7, #4]
 80100d2:	f000 fee9 	bl	8010ea8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80100d6:	4604      	mov	r4, r0
 80100d8:	6878      	ldr	r0, [r7, #4]
 80100da:	f000 fef1 	bl	8010ec0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80100de:	4602      	mov	r2, r0
 80100e0:	683b      	ldr	r3, [r7, #0]
 80100e2:	4621      	mov	r1, r4
 80100e4:	6878      	ldr	r0, [r7, #4]
 80100e6:	f000 fef7 	bl	8010ed8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 80100ea:	4603      	mov	r3, r0
 80100ec:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 80100ee:	6878      	ldr	r0, [r7, #4]
 80100f0:	f000 f825 	bl	801013e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 80100f4:	4603      	mov	r3, r0
 80100f6:	60fb      	str	r3, [r7, #12]
 80100f8:	f107 020c 	add.w	r2, r7, #12
 80100fc:	f107 0308 	add.w	r3, r7, #8
 8010100:	4611      	mov	r1, r2
 8010102:	4618      	mov	r0, r3
 8010104:	f000 ff19 	bl	8010f3a <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 8010108:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 801010a:	2b00      	cmp	r3, #0
 801010c:	d10d      	bne.n	801012a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 801010e:	687c      	ldr	r4, [r7, #4]
 8010110:	68bb      	ldr	r3, [r7, #8]
 8010112:	4618      	mov	r0, r3
 8010114:	f7f6 fb12 	bl	800673c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8010118:	4603      	mov	r3, r0
 801011a:	461a      	mov	r2, r3
 801011c:	6839      	ldr	r1, [r7, #0]
 801011e:	4620      	mov	r0, r4
 8010120:	f7f6 fb18 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8010124:	4603      	mov	r3, r0
 8010126:	2b00      	cmp	r3, #0
 8010128:	d004      	beq.n	8010134 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 801012a:	6878      	ldr	r0, [r7, #4]
 801012c:	f000 f807 	bl	801013e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8010130:	4603      	mov	r3, r0
 8010132:	e000      	b.n	8010136 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 8010134:	68bb      	ldr	r3, [r7, #8]
    }
 8010136:	4618      	mov	r0, r3
 8010138:	3714      	adds	r7, #20
 801013a:	46bd      	mov	sp, r7
 801013c:	bd90      	pop	{r4, r7, pc}

0801013e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 801013e:	b580      	push	{r7, lr}
 8010140:	b084      	sub	sp, #16
 8010142:	af00      	add	r7, sp, #0
 8010144:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 8010146:	687b      	ldr	r3, [r7, #4]
 8010148:	1d1a      	adds	r2, r3, #4
 801014a:	f107 030c 	add.w	r3, r7, #12
 801014e:	4611      	mov	r1, r2
 8010150:	4618      	mov	r0, r3
 8010152:	f000 ff06 	bl	8010f62 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8010156:	68fb      	ldr	r3, [r7, #12]
 8010158:	4618      	mov	r0, r3
 801015a:	3710      	adds	r7, #16
 801015c:	46bd      	mov	sp, r7
 801015e:	bd80      	pop	{r7, pc}

08010160 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010160:	b590      	push	{r4, r7, lr}
 8010162:	b085      	sub	sp, #20
 8010164:	af00      	add	r7, sp, #0
 8010166:	6078      	str	r0, [r7, #4]
 8010168:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 801016a:	6878      	ldr	r0, [r7, #4]
 801016c:	f000 ff08 	bl	8010f80 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8010170:	4604      	mov	r4, r0
 8010172:	6878      	ldr	r0, [r7, #4]
 8010174:	f000 ff10 	bl	8010f98 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8010178:	4602      	mov	r2, r0
 801017a:	683b      	ldr	r3, [r7, #0]
 801017c:	4621      	mov	r1, r4
 801017e:	6878      	ldr	r0, [r7, #4]
 8010180:	f000 ff16 	bl	8010fb0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 8010184:	4603      	mov	r3, r0
 8010186:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8010188:	6878      	ldr	r0, [r7, #4]
 801018a:	f000 f825 	bl	80101d8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 801018e:	4603      	mov	r3, r0
 8010190:	60fb      	str	r3, [r7, #12]
 8010192:	f107 020c 	add.w	r2, r7, #12
 8010196:	f107 0308 	add.w	r3, r7, #8
 801019a:	4611      	mov	r1, r2
 801019c:	4618      	mov	r0, r3
 801019e:	f000 ff38 	bl	8011012 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 80101a2:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 80101a4:	2b00      	cmp	r3, #0
 80101a6:	d10d      	bne.n	80101c4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 80101a8:	687c      	ldr	r4, [r7, #4]
 80101aa:	68bb      	ldr	r3, [r7, #8]
 80101ac:	4618      	mov	r0, r3
 80101ae:	f7f6 fda4 	bl	8006cfa <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80101b2:	4603      	mov	r3, r0
 80101b4:	461a      	mov	r2, r3
 80101b6:	6839      	ldr	r1, [r7, #0]
 80101b8:	4620      	mov	r0, r4
 80101ba:	f7f6 facb 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 80101be:	4603      	mov	r3, r0
 80101c0:	2b00      	cmp	r3, #0
 80101c2:	d004      	beq.n	80101ce <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 80101c4:	6878      	ldr	r0, [r7, #4]
 80101c6:	f000 f807 	bl	80101d8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 80101ca:	4603      	mov	r3, r0
 80101cc:	e000      	b.n	80101d0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 80101ce:	68bb      	ldr	r3, [r7, #8]
    }
 80101d0:	4618      	mov	r0, r3
 80101d2:	3714      	adds	r7, #20
 80101d4:	46bd      	mov	sp, r7
 80101d6:	bd90      	pop	{r4, r7, pc}

080101d8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 80101d8:	b580      	push	{r7, lr}
 80101da:	b084      	sub	sp, #16
 80101dc:	af00      	add	r7, sp, #0
 80101de:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 80101e0:	687b      	ldr	r3, [r7, #4]
 80101e2:	1d1a      	adds	r2, r3, #4
 80101e4:	f107 030c 	add.w	r3, r7, #12
 80101e8:	4611      	mov	r1, r2
 80101ea:	4618      	mov	r0, r3
 80101ec:	f000 ff25 	bl	801103a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 80101f0:	68fb      	ldr	r3, [r7, #12]
 80101f2:	4618      	mov	r0, r3
 80101f4:	3710      	adds	r7, #16
 80101f6:	46bd      	mov	sp, r7
 80101f8:	bd80      	pop	{r7, pc}

080101fa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80101fa:	b590      	push	{r4, r7, lr}
 80101fc:	b085      	sub	sp, #20
 80101fe:	af00      	add	r7, sp, #0
 8010200:	6078      	str	r0, [r7, #4]
 8010202:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8010204:	6878      	ldr	r0, [r7, #4]
 8010206:	f000 ff27 	bl	8011058 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 801020a:	4604      	mov	r4, r0
 801020c:	6878      	ldr	r0, [r7, #4]
 801020e:	f000 ff2f 	bl	8011070 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8010212:	4602      	mov	r2, r0
 8010214:	683b      	ldr	r3, [r7, #0]
 8010216:	4621      	mov	r1, r4
 8010218:	6878      	ldr	r0, [r7, #4]
 801021a:	f000 ff35 	bl	8011088 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>
 801021e:	4603      	mov	r3, r0
 8010220:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8010222:	6878      	ldr	r0, [r7, #4]
 8010224:	f000 f825 	bl	8010272 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8010228:	4603      	mov	r3, r0
 801022a:	60fb      	str	r3, [r7, #12]
 801022c:	f107 020c 	add.w	r2, r7, #12
 8010230:	f107 0308 	add.w	r3, r7, #8
 8010234:	4611      	mov	r1, r2
 8010236:	4618      	mov	r0, r3
 8010238:	f000 ff57 	bl	80110ea <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 801023c:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 801023e:	2b00      	cmp	r3, #0
 8010240:	d10d      	bne.n	801025e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 8010242:	687c      	ldr	r4, [r7, #4]
 8010244:	68bb      	ldr	r3, [r7, #8]
 8010246:	4618      	mov	r0, r3
 8010248:	f7f6 fc0d 	bl	8006a66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801024c:	4603      	mov	r3, r0
 801024e:	461a      	mov	r2, r3
 8010250:	6839      	ldr	r1, [r7, #0]
 8010252:	4620      	mov	r0, r4
 8010254:	f7f6 fc13 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8010258:	4603      	mov	r3, r0
 801025a:	2b00      	cmp	r3, #0
 801025c:	d004      	beq.n	8010268 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 801025e:	6878      	ldr	r0, [r7, #4]
 8010260:	f000 f807 	bl	8010272 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8010264:	4603      	mov	r3, r0
 8010266:	e000      	b.n	801026a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 8010268:	68bb      	ldr	r3, [r7, #8]
    }
 801026a:	4618      	mov	r0, r3
 801026c:	3714      	adds	r7, #20
 801026e:	46bd      	mov	sp, r7
 8010270:	bd90      	pop	{r4, r7, pc}

08010272 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8010272:	b580      	push	{r7, lr}
 8010274:	b084      	sub	sp, #16
 8010276:	af00      	add	r7, sp, #0
 8010278:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 801027a:	687b      	ldr	r3, [r7, #4]
 801027c:	1d1a      	adds	r2, r3, #4
 801027e:	f107 030c 	add.w	r3, r7, #12
 8010282:	4611      	mov	r1, r2
 8010284:	4618      	mov	r0, r3
 8010286:	f000 ff44 	bl	8011112 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 801028a:	68fb      	ldr	r3, [r7, #12]
 801028c:	4618      	mov	r0, r3
 801028e:	3710      	adds	r7, #16
 8010290:	46bd      	mov	sp, r7
 8010292:	bd80      	pop	{r7, pc}

08010294 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010294:	b580      	push	{r7, lr}
 8010296:	b082      	sub	sp, #8
 8010298:	af00      	add	r7, sp, #0
 801029a:	7138      	strb	r0, [r7, #4]
 801029c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801029e:	6838      	ldr	r0, [r7, #0]
 80102a0:	f000 ff51 	bl	8011146 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80102a4:	4603      	mov	r3, r0
 80102a6:	4618      	mov	r0, r3
 80102a8:	f7f3 fb5b 	bl	8003962 <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 80102ac:	4603      	mov	r3, r0
 80102ae:	4618      	mov	r0, r3
 80102b0:	3708      	adds	r7, #8
 80102b2:	46bd      	mov	sp, r7
 80102b4:	bd80      	pop	{r7, pc}

080102b6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80102b6:	b590      	push	{r4, r7, lr}
 80102b8:	b083      	sub	sp, #12
 80102ba:	af00      	add	r7, sp, #0
 80102bc:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80102be:	6878      	ldr	r0, [r7, #4]
 80102c0:	f000 ff36 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80102c4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80102c6:	4619      	mov	r1, r3
 80102c8:	4620      	mov	r0, r4
 80102ca:	f7ff ffe3 	bl	8010294 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80102ce:	4603      	mov	r3, r0
    }
 80102d0:	4618      	mov	r0, r3
 80102d2:	370c      	adds	r7, #12
 80102d4:	46bd      	mov	sp, r7
 80102d6:	bd90      	pop	{r4, r7, pc}

080102d8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 80102d8:	b580      	push	{r7, lr}
 80102da:	b082      	sub	sp, #8
 80102dc:	af00      	add	r7, sp, #0
 80102de:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80102e0:	6878      	ldr	r0, [r7, #4]
 80102e2:	f7ff fe05 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80102e6:	4603      	mov	r3, r0
 80102e8:	2b00      	cmp	r3, #0
 80102ea:	bf14      	ite	ne
 80102ec:	2301      	movne	r3, #1
 80102ee:	2300      	moveq	r3, #0
 80102f0:	b2db      	uxtb	r3, r3
 80102f2:	2b00      	cmp	r3, #0
 80102f4:	d002      	beq.n	80102fc <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80102f6:	4805      	ldr	r0, [pc, #20]	; (801030c <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80102f8:	f7f0 febb 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80102fc:	6878      	ldr	r0, [r7, #4]
 80102fe:	f7ff ffda 	bl	80102b6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010302:	4603      	mov	r3, r0
    }
 8010304:	4618      	mov	r0, r3
 8010306:	3708      	adds	r7, #8
 8010308:	46bd      	mov	sp, r7
 801030a:	bd80      	pop	{r7, pc}
 801030c:	0802956c 	.word	0x0802956c

08010310 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8010310:	b580      	push	{r7, lr}
 8010312:	b082      	sub	sp, #8
 8010314:	af00      	add	r7, sp, #0
 8010316:	6078      	str	r0, [r7, #4]
 8010318:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801031a:	687b      	ldr	r3, [r7, #4]
 801031c:	4618      	mov	r0, r3
 801031e:	f7ff fec4 	bl	80100aa <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8010322:	6838      	ldr	r0, [r7, #0]
 8010324:	f7f7 fce0 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010328:	4603      	mov	r3, r0
 801032a:	4619      	mov	r1, r3
 801032c:	6878      	ldr	r0, [r7, #4]
 801032e:	f000 ff15 	bl	801115c <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8010332:	6878      	ldr	r0, [r7, #4]
 8010334:	f7ff ffd0 	bl	80102d8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8010338:	4603      	mov	r3, r0
	}
 801033a:	4618      	mov	r0, r3
 801033c:	3708      	adds	r7, #8
 801033e:	46bd      	mov	sp, r7
 8010340:	bd80      	pop	{r7, pc}

08010342 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010342:	b580      	push	{r7, lr}
 8010344:	b082      	sub	sp, #8
 8010346:	af00      	add	r7, sp, #0
 8010348:	7138      	strb	r0, [r7, #4]
 801034a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801034c:	6838      	ldr	r0, [r7, #0]
 801034e:	f000 ff26 	bl	801119e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010352:	4603      	mov	r3, r0
 8010354:	4618      	mov	r0, r3
 8010356:	f7f2 fe09 	bl	8002f6c <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 801035a:	4603      	mov	r3, r0
 801035c:	4618      	mov	r0, r3
 801035e:	3708      	adds	r7, #8
 8010360:	46bd      	mov	sp, r7
 8010362:	bd80      	pop	{r7, pc}

08010364 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010364:	b590      	push	{r4, r7, lr}
 8010366:	b083      	sub	sp, #12
 8010368:	af00      	add	r7, sp, #0
 801036a:	7138      	strb	r0, [r7, #4]
 801036c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801036e:	6838      	ldr	r0, [r7, #0]
 8010370:	f000 fee9 	bl	8011146 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8010374:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010376:	4619      	mov	r1, r3
 8010378:	4620      	mov	r0, r4
 801037a:	f7ff ffe2 	bl	8010342 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801037e:	4603      	mov	r3, r0
    }
 8010380:	4618      	mov	r0, r3
 8010382:	370c      	adds	r7, #12
 8010384:	46bd      	mov	sp, r7
 8010386:	bd90      	pop	{r4, r7, pc}

08010388 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010388:	b590      	push	{r4, r7, lr}
 801038a:	b083      	sub	sp, #12
 801038c:	af00      	add	r7, sp, #0
 801038e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010390:	6878      	ldr	r0, [r7, #4]
 8010392:	f000 fecd 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010396:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010398:	4619      	mov	r1, r3
 801039a:	4620      	mov	r0, r4
 801039c:	f7ff ffe2 	bl	8010364 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80103a0:	4603      	mov	r3, r0
    }
 80103a2:	4618      	mov	r0, r3
 80103a4:	370c      	adds	r7, #12
 80103a6:	46bd      	mov	sp, r7
 80103a8:	bd90      	pop	{r4, r7, pc}
	...

080103ac <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 80103ac:	b580      	push	{r7, lr}
 80103ae:	b082      	sub	sp, #8
 80103b0:	af00      	add	r7, sp, #0
 80103b2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80103b4:	6878      	ldr	r0, [r7, #4]
 80103b6:	f7ff fd9b 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80103ba:	4603      	mov	r3, r0
 80103bc:	2b01      	cmp	r3, #1
 80103be:	bf14      	ite	ne
 80103c0:	2301      	movne	r3, #1
 80103c2:	2300      	moveq	r3, #0
 80103c4:	b2db      	uxtb	r3, r3
 80103c6:	2b00      	cmp	r3, #0
 80103c8:	d002      	beq.n	80103d0 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80103ca:	4805      	ldr	r0, [pc, #20]	; (80103e0 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80103cc:	f7f0 fe51 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80103d0:	6878      	ldr	r0, [r7, #4]
 80103d2:	f7ff ffd9 	bl	8010388 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80103d6:	4603      	mov	r3, r0
    }
 80103d8:	4618      	mov	r0, r3
 80103da:	3708      	adds	r7, #8
 80103dc:	46bd      	mov	sp, r7
 80103de:	bd80      	pop	{r7, pc}
 80103e0:	0802956c 	.word	0x0802956c

080103e4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 80103e4:	b580      	push	{r7, lr}
 80103e6:	b082      	sub	sp, #8
 80103e8:	af00      	add	r7, sp, #0
 80103ea:	6078      	str	r0, [r7, #4]
 80103ec:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80103ee:	687b      	ldr	r3, [r7, #4]
 80103f0:	4618      	mov	r0, r3
 80103f2:	f7ff fe5a 	bl	80100aa <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80103f6:	6838      	ldr	r0, [r7, #0]
 80103f8:	f7f7 fbbe 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80103fc:	4603      	mov	r3, r0
 80103fe:	4619      	mov	r1, r3
 8010400:	6878      	ldr	r0, [r7, #4]
 8010402:	f000 fed7 	bl	80111b4 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8010406:	6878      	ldr	r0, [r7, #4]
 8010408:	f7ff ffd0 	bl	80103ac <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801040c:	4603      	mov	r3, r0
	}
 801040e:	4618      	mov	r0, r3
 8010410:	3708      	adds	r7, #8
 8010412:	46bd      	mov	sp, r7
 8010414:	bd80      	pop	{r7, pc}

08010416 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010416:	b580      	push	{r7, lr}
 8010418:	b082      	sub	sp, #8
 801041a:	af00      	add	r7, sp, #0
 801041c:	7138      	strb	r0, [r7, #4]
 801041e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010420:	6838      	ldr	r0, [r7, #0]
 8010422:	f000 fee6 	bl	80111f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010426:	4603      	mov	r3, r0
 8010428:	4618      	mov	r0, r3
 801042a:	f7f3 fa32 	bl	8003892 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 801042e:	4603      	mov	r3, r0
 8010430:	4618      	mov	r0, r3
 8010432:	3708      	adds	r7, #8
 8010434:	46bd      	mov	sp, r7
 8010436:	bd80      	pop	{r7, pc}

08010438 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010438:	b590      	push	{r4, r7, lr}
 801043a:	b083      	sub	sp, #12
 801043c:	af00      	add	r7, sp, #0
 801043e:	7138      	strb	r0, [r7, #4]
 8010440:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010442:	6838      	ldr	r0, [r7, #0]
 8010444:	f000 feab 	bl	801119e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010448:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801044a:	4619      	mov	r1, r3
 801044c:	4620      	mov	r0, r4
 801044e:	f7ff ffe2 	bl	8010416 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010452:	4603      	mov	r3, r0
    }
 8010454:	4618      	mov	r0, r3
 8010456:	370c      	adds	r7, #12
 8010458:	46bd      	mov	sp, r7
 801045a:	bd90      	pop	{r4, r7, pc}

0801045c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801045c:	b590      	push	{r4, r7, lr}
 801045e:	b083      	sub	sp, #12
 8010460:	af00      	add	r7, sp, #0
 8010462:	7138      	strb	r0, [r7, #4]
 8010464:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010466:	6838      	ldr	r0, [r7, #0]
 8010468:	f000 fe6d 	bl	8011146 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801046c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801046e:	4619      	mov	r1, r3
 8010470:	4620      	mov	r0, r4
 8010472:	f7ff ffe1 	bl	8010438 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010476:	4603      	mov	r3, r0
    }
 8010478:	4618      	mov	r0, r3
 801047a:	370c      	adds	r7, #12
 801047c:	46bd      	mov	sp, r7
 801047e:	bd90      	pop	{r4, r7, pc}

08010480 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010480:	b590      	push	{r4, r7, lr}
 8010482:	b083      	sub	sp, #12
 8010484:	af00      	add	r7, sp, #0
 8010486:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010488:	6878      	ldr	r0, [r7, #4]
 801048a:	f000 fe51 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801048e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010490:	4619      	mov	r1, r3
 8010492:	4620      	mov	r0, r4
 8010494:	f7ff ffe2 	bl	801045c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010498:	4603      	mov	r3, r0
    }
 801049a:	4618      	mov	r0, r3
 801049c:	370c      	adds	r7, #12
 801049e:	46bd      	mov	sp, r7
 80104a0:	bd90      	pop	{r4, r7, pc}
	...

080104a4 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 80104a4:	b580      	push	{r7, lr}
 80104a6:	b082      	sub	sp, #8
 80104a8:	af00      	add	r7, sp, #0
 80104aa:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80104ac:	6878      	ldr	r0, [r7, #4]
 80104ae:	f7ff fd1f 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80104b2:	4603      	mov	r3, r0
 80104b4:	2b02      	cmp	r3, #2
 80104b6:	bf14      	ite	ne
 80104b8:	2301      	movne	r3, #1
 80104ba:	2300      	moveq	r3, #0
 80104bc:	b2db      	uxtb	r3, r3
 80104be:	2b00      	cmp	r3, #0
 80104c0:	d002      	beq.n	80104c8 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80104c2:	4805      	ldr	r0, [pc, #20]	; (80104d8 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80104c4:	f7f0 fdd5 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80104c8:	6878      	ldr	r0, [r7, #4]
 80104ca:	f7ff ffd9 	bl	8010480 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80104ce:	4603      	mov	r3, r0
    }
 80104d0:	4618      	mov	r0, r3
 80104d2:	3708      	adds	r7, #8
 80104d4:	46bd      	mov	sp, r7
 80104d6:	bd80      	pop	{r7, pc}
 80104d8:	0802956c 	.word	0x0802956c

080104dc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 80104dc:	b580      	push	{r7, lr}
 80104de:	b082      	sub	sp, #8
 80104e0:	af00      	add	r7, sp, #0
 80104e2:	6078      	str	r0, [r7, #4]
 80104e4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80104e6:	687b      	ldr	r3, [r7, #4]
 80104e8:	4618      	mov	r0, r3
 80104ea:	f7ff fdde 	bl	80100aa <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80104ee:	6838      	ldr	r0, [r7, #0]
 80104f0:	f7f7 fb6c 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 80104f4:	4603      	mov	r3, r0
 80104f6:	4619      	mov	r1, r3
 80104f8:	6878      	ldr	r0, [r7, #4]
 80104fa:	f000 fe85 	bl	8011208 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80104fe:	6878      	ldr	r0, [r7, #4]
 8010500:	f7ff ffd0 	bl	80104a4 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8010504:	4603      	mov	r3, r0
	}
 8010506:	4618      	mov	r0, r3
 8010508:	3708      	adds	r7, #8
 801050a:	46bd      	mov	sp, r7
 801050c:	bd80      	pop	{r7, pc}

0801050e <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 801050e:	b580      	push	{r7, lr}
 8010510:	b082      	sub	sp, #8
 8010512:	af00      	add	r7, sp, #0
 8010514:	6078      	str	r0, [r7, #4]
 8010516:	687b      	ldr	r3, [r7, #4]
 8010518:	4618      	mov	r0, r3
 801051a:	f000 fe94 	bl	8011246 <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>
 801051e:	687b      	ldr	r3, [r7, #4]
 8010520:	4618      	mov	r0, r3
 8010522:	3708      	adds	r7, #8
 8010524:	46bd      	mov	sp, r7
 8010526:	bd80      	pop	{r7, pc}

08010528 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 8010528:	b580      	push	{r7, lr}
 801052a:	b082      	sub	sp, #8
 801052c:	af00      	add	r7, sp, #0
 801052e:	6078      	str	r0, [r7, #4]
 8010530:	687b      	ldr	r3, [r7, #4]
 8010532:	4618      	mov	r0, r3
 8010534:	f7ff ffeb 	bl	801050e <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 8010538:	687b      	ldr	r3, [r7, #4]
 801053a:	22ff      	movs	r2, #255	; 0xff
 801053c:	761a      	strb	r2, [r3, #24]
 801053e:	687b      	ldr	r3, [r7, #4]
 8010540:	4618      	mov	r0, r3
 8010542:	3708      	adds	r7, #8
 8010544:	46bd      	mov	sp, r7
 8010546:	bd80      	pop	{r7, pc}

08010548 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8010548:	b480      	push	{r7}
 801054a:	b083      	sub	sp, #12
 801054c:	af00      	add	r7, sp, #0
 801054e:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 8010550:	687b      	ldr	r3, [r7, #4]
    }
 8010552:	4618      	mov	r0, r3
 8010554:	370c      	adds	r7, #12
 8010556:	46bd      	mov	sp, r7
 8010558:	f85d 7b04 	ldr.w	r7, [sp], #4
 801055c:	4770      	bx	lr

0801055e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801055e:	b580      	push	{r7, lr}
 8010560:	b082      	sub	sp, #8
 8010562:	af00      	add	r7, sp, #0
 8010564:	7138      	strb	r0, [r7, #4]
 8010566:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010568:	6838      	ldr	r0, [r7, #0]
 801056a:	f000 fe9a 	bl	80112a2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 801056e:	4603      	mov	r3, r0
 8010570:	4618      	mov	r0, r3
 8010572:	f7f3 fd78 	bl	8004066 <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8010576:	4603      	mov	r3, r0
 8010578:	4618      	mov	r0, r3
 801057a:	3708      	adds	r7, #8
 801057c:	46bd      	mov	sp, r7
 801057e:	bd80      	pop	{r7, pc}

08010580 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010580:	b590      	push	{r4, r7, lr}
 8010582:	b083      	sub	sp, #12
 8010584:	af00      	add	r7, sp, #0
 8010586:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010588:	6878      	ldr	r0, [r7, #4]
 801058a:	f000 fe7f 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801058e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010590:	4619      	mov	r1, r3
 8010592:	4620      	mov	r0, r4
 8010594:	f7ff ffe3 	bl	801055e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010598:	4603      	mov	r3, r0
    }
 801059a:	4618      	mov	r0, r3
 801059c:	370c      	adds	r7, #12
 801059e:	46bd      	mov	sp, r7
 80105a0:	bd90      	pop	{r4, r7, pc}

080105a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80105a2:	b580      	push	{r7, lr}
 80105a4:	b082      	sub	sp, #8
 80105a6:	af00      	add	r7, sp, #0
 80105a8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80105aa:	6878      	ldr	r0, [r7, #4]
 80105ac:	f000 fe6e 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80105b0:	4603      	mov	r3, r0
 80105b2:	4618      	mov	r0, r3
 80105b4:	f7ff ffe4 	bl	8010580 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80105b8:	4603      	mov	r3, r0
	}
 80105ba:	4618      	mov	r0, r3
 80105bc:	3708      	adds	r7, #8
 80105be:	46bd      	mov	sp, r7
 80105c0:	bd80      	pop	{r7, pc}

080105c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80105c2:	b5b0      	push	{r4, r5, r7, lr}
 80105c4:	b082      	sub	sp, #8
 80105c6:	af00      	add	r7, sp, #0
 80105c8:	6078      	str	r0, [r7, #4]
 80105ca:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80105cc:	6878      	ldr	r0, [r7, #4]
 80105ce:	f000 fe52 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80105d2:	4604      	mov	r4, r0
 80105d4:	6838      	ldr	r0, [r7, #0]
 80105d6:	f000 fe59 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80105da:	4603      	mov	r3, r0
 80105dc:	4618      	mov	r0, r3
 80105de:	f7ff ffe0 	bl	80105a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>
 80105e2:	4603      	mov	r3, r0
 80105e4:	4619      	mov	r1, r3
 80105e6:	4620      	mov	r0, r4
 80105e8:	f000 fe66 	bl	80112b8 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80105ec:	462b      	mov	r3, r5
      }
 80105ee:	4618      	mov	r0, r3
 80105f0:	3708      	adds	r7, #8
 80105f2:	46bd      	mov	sp, r7
 80105f4:	bdb0      	pop	{r4, r5, r7, pc}

080105f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80105f6:	b5b0      	push	{r4, r5, r7, lr}
 80105f8:	b082      	sub	sp, #8
 80105fa:	af00      	add	r7, sp, #0
 80105fc:	6078      	str	r0, [r7, #4]
 80105fe:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010600:	6878      	ldr	r0, [r7, #4]
 8010602:	f000 fe38 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010606:	4604      	mov	r4, r0
 8010608:	6838      	ldr	r0, [r7, #0]
 801060a:	f000 fe3f 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801060e:	4603      	mov	r3, r0
 8010610:	4619      	mov	r1, r3
 8010612:	4620      	mov	r0, r4
 8010614:	f7ff ffd5 	bl	80105c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010618:	462b      	mov	r3, r5
      }
 801061a:	4618      	mov	r0, r3
 801061c:	3708      	adds	r7, #8
 801061e:	46bd      	mov	sp, r7
 8010620:	bdb0      	pop	{r4, r5, r7, pc}

08010622 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010622:	b5b0      	push	{r4, r5, r7, lr}
 8010624:	b082      	sub	sp, #8
 8010626:	af00      	add	r7, sp, #0
 8010628:	6078      	str	r0, [r7, #4]
 801062a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801062c:	6878      	ldr	r0, [r7, #4]
 801062e:	f000 fe22 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010632:	4604      	mov	r4, r0
 8010634:	6838      	ldr	r0, [r7, #0]
 8010636:	f000 fe29 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801063a:	4603      	mov	r3, r0
 801063c:	4619      	mov	r1, r3
 801063e:	4620      	mov	r0, r4
 8010640:	f7ff ffd9 	bl	80105f6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010644:	462b      	mov	r3, r5
      }
 8010646:	4618      	mov	r0, r3
 8010648:	3708      	adds	r7, #8
 801064a:	46bd      	mov	sp, r7
 801064c:	bdb0      	pop	{r4, r5, r7, pc}

0801064e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801064e:	b580      	push	{r7, lr}
 8010650:	b082      	sub	sp, #8
 8010652:	af00      	add	r7, sp, #0
 8010654:	7138      	strb	r0, [r7, #4]
 8010656:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010658:	6838      	ldr	r0, [r7, #0]
 801065a:	f000 fe44 	bl	80112e6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801065e:	4603      	mov	r3, r0
 8010660:	4618      	mov	r0, r3
 8010662:	f7f3 fc64 	bl	8003f2e <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8010666:	4603      	mov	r3, r0
 8010668:	4618      	mov	r0, r3
 801066a:	3708      	adds	r7, #8
 801066c:	46bd      	mov	sp, r7
 801066e:	bd80      	pop	{r7, pc}

08010670 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010670:	b590      	push	{r4, r7, lr}
 8010672:	b083      	sub	sp, #12
 8010674:	af00      	add	r7, sp, #0
 8010676:	7138      	strb	r0, [r7, #4]
 8010678:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801067a:	6838      	ldr	r0, [r7, #0]
 801067c:	f000 fe11 	bl	80112a2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010680:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010682:	4619      	mov	r1, r3
 8010684:	4620      	mov	r0, r4
 8010686:	f7ff ffe2 	bl	801064e <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801068a:	4603      	mov	r3, r0
    }
 801068c:	4618      	mov	r0, r3
 801068e:	370c      	adds	r7, #12
 8010690:	46bd      	mov	sp, r7
 8010692:	bd90      	pop	{r4, r7, pc}

08010694 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010694:	b590      	push	{r4, r7, lr}
 8010696:	b083      	sub	sp, #12
 8010698:	af00      	add	r7, sp, #0
 801069a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801069c:	6878      	ldr	r0, [r7, #4]
 801069e:	f000 fdf5 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80106a2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80106a4:	4619      	mov	r1, r3
 80106a6:	4620      	mov	r0, r4
 80106a8:	f7ff ffe2 	bl	8010670 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80106ac:	4603      	mov	r3, r0
    }
 80106ae:	4618      	mov	r0, r3
 80106b0:	370c      	adds	r7, #12
 80106b2:	46bd      	mov	sp, r7
 80106b4:	bd90      	pop	{r4, r7, pc}

080106b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80106b6:	b580      	push	{r7, lr}
 80106b8:	b082      	sub	sp, #8
 80106ba:	af00      	add	r7, sp, #0
 80106bc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80106be:	6878      	ldr	r0, [r7, #4]
 80106c0:	f000 fde4 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80106c4:	4603      	mov	r3, r0
 80106c6:	4618      	mov	r0, r3
 80106c8:	f7ff ffe4 	bl	8010694 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80106cc:	4603      	mov	r3, r0
	}
 80106ce:	4618      	mov	r0, r3
 80106d0:	3708      	adds	r7, #8
 80106d2:	46bd      	mov	sp, r7
 80106d4:	bd80      	pop	{r7, pc}

080106d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80106d6:	b5b0      	push	{r4, r5, r7, lr}
 80106d8:	b082      	sub	sp, #8
 80106da:	af00      	add	r7, sp, #0
 80106dc:	6078      	str	r0, [r7, #4]
 80106de:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80106e0:	6878      	ldr	r0, [r7, #4]
 80106e2:	f000 fdc8 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80106e6:	4604      	mov	r4, r0
 80106e8:	6838      	ldr	r0, [r7, #0]
 80106ea:	f000 fdcf 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80106ee:	4603      	mov	r3, r0
 80106f0:	4618      	mov	r0, r3
 80106f2:	f7ff ffe0 	bl	80106b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>
 80106f6:	4603      	mov	r3, r0
 80106f8:	4619      	mov	r1, r3
 80106fa:	4620      	mov	r0, r4
 80106fc:	f000 fdfe 	bl	80112fc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010700:	462b      	mov	r3, r5
      }
 8010702:	4618      	mov	r0, r3
 8010704:	3708      	adds	r7, #8
 8010706:	46bd      	mov	sp, r7
 8010708:	bdb0      	pop	{r4, r5, r7, pc}

0801070a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801070a:	b5b0      	push	{r4, r5, r7, lr}
 801070c:	b082      	sub	sp, #8
 801070e:	af00      	add	r7, sp, #0
 8010710:	6078      	str	r0, [r7, #4]
 8010712:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010714:	6878      	ldr	r0, [r7, #4]
 8010716:	f000 fdae 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801071a:	4604      	mov	r4, r0
 801071c:	6838      	ldr	r0, [r7, #0]
 801071e:	f000 fdb5 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010722:	4603      	mov	r3, r0
 8010724:	4619      	mov	r1, r3
 8010726:	4620      	mov	r0, r4
 8010728:	f7ff ffd5 	bl	80106d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 801072c:	462b      	mov	r3, r5
      }
 801072e:	4618      	mov	r0, r3
 8010730:	3708      	adds	r7, #8
 8010732:	46bd      	mov	sp, r7
 8010734:	bdb0      	pop	{r4, r5, r7, pc}

08010736 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010736:	b5b0      	push	{r4, r5, r7, lr}
 8010738:	b082      	sub	sp, #8
 801073a:	af00      	add	r7, sp, #0
 801073c:	6078      	str	r0, [r7, #4]
 801073e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010740:	6878      	ldr	r0, [r7, #4]
 8010742:	f000 fd98 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010746:	4604      	mov	r4, r0
 8010748:	6838      	ldr	r0, [r7, #0]
 801074a:	f000 fd9f 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801074e:	4603      	mov	r3, r0
 8010750:	4619      	mov	r1, r3
 8010752:	4620      	mov	r0, r4
 8010754:	f7ff ffd9 	bl	801070a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010758:	462b      	mov	r3, r5
      }
 801075a:	4618      	mov	r0, r3
 801075c:	3708      	adds	r7, #8
 801075e:	46bd      	mov	sp, r7
 8010760:	bdb0      	pop	{r4, r5, r7, pc}

08010762 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010762:	b580      	push	{r7, lr}
 8010764:	b082      	sub	sp, #8
 8010766:	af00      	add	r7, sp, #0
 8010768:	7138      	strb	r0, [r7, #4]
 801076a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801076c:	6838      	ldr	r0, [r7, #0]
 801076e:	f000 fddc 	bl	801132a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010772:	4603      	mov	r3, r0
 8010774:	4618      	mov	r0, r3
 8010776:	f7f3 fc0e 	bl	8003f96 <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 801077a:	4603      	mov	r3, r0
 801077c:	4618      	mov	r0, r3
 801077e:	3708      	adds	r7, #8
 8010780:	46bd      	mov	sp, r7
 8010782:	bd80      	pop	{r7, pc}

08010784 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010784:	b590      	push	{r4, r7, lr}
 8010786:	b083      	sub	sp, #12
 8010788:	af00      	add	r7, sp, #0
 801078a:	7138      	strb	r0, [r7, #4]
 801078c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801078e:	6838      	ldr	r0, [r7, #0]
 8010790:	f000 fda9 	bl	80112e6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8010794:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010796:	4619      	mov	r1, r3
 8010798:	4620      	mov	r0, r4
 801079a:	f7ff ffe2 	bl	8010762 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 801079e:	4603      	mov	r3, r0
    }
 80107a0:	4618      	mov	r0, r3
 80107a2:	370c      	adds	r7, #12
 80107a4:	46bd      	mov	sp, r7
 80107a6:	bd90      	pop	{r4, r7, pc}

080107a8 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80107a8:	b590      	push	{r4, r7, lr}
 80107aa:	b083      	sub	sp, #12
 80107ac:	af00      	add	r7, sp, #0
 80107ae:	7138      	strb	r0, [r7, #4]
 80107b0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80107b2:	6838      	ldr	r0, [r7, #0]
 80107b4:	f000 fd75 	bl	80112a2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 80107b8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80107ba:	4619      	mov	r1, r3
 80107bc:	4620      	mov	r0, r4
 80107be:	f7ff ffe1 	bl	8010784 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80107c2:	4603      	mov	r3, r0
    }
 80107c4:	4618      	mov	r0, r3
 80107c6:	370c      	adds	r7, #12
 80107c8:	46bd      	mov	sp, r7
 80107ca:	bd90      	pop	{r4, r7, pc}

080107cc <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80107cc:	b590      	push	{r4, r7, lr}
 80107ce:	b083      	sub	sp, #12
 80107d0:	af00      	add	r7, sp, #0
 80107d2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80107d4:	6878      	ldr	r0, [r7, #4]
 80107d6:	f000 fd59 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80107da:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80107dc:	4619      	mov	r1, r3
 80107de:	4620      	mov	r0, r4
 80107e0:	f7ff ffe2 	bl	80107a8 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80107e4:	4603      	mov	r3, r0
    }
 80107e6:	4618      	mov	r0, r3
 80107e8:	370c      	adds	r7, #12
 80107ea:	46bd      	mov	sp, r7
 80107ec:	bd90      	pop	{r4, r7, pc}

080107ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80107ee:	b580      	push	{r7, lr}
 80107f0:	b082      	sub	sp, #8
 80107f2:	af00      	add	r7, sp, #0
 80107f4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80107f6:	6878      	ldr	r0, [r7, #4]
 80107f8:	f000 fd48 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80107fc:	4603      	mov	r3, r0
 80107fe:	4618      	mov	r0, r3
 8010800:	f7ff ffe4 	bl	80107cc <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010804:	4603      	mov	r3, r0
	}
 8010806:	4618      	mov	r0, r3
 8010808:	3708      	adds	r7, #8
 801080a:	46bd      	mov	sp, r7
 801080c:	bd80      	pop	{r7, pc}

0801080e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801080e:	b5b0      	push	{r4, r5, r7, lr}
 8010810:	b082      	sub	sp, #8
 8010812:	af00      	add	r7, sp, #0
 8010814:	6078      	str	r0, [r7, #4]
 8010816:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010818:	6878      	ldr	r0, [r7, #4]
 801081a:	f000 fd2c 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801081e:	4604      	mov	r4, r0
 8010820:	6838      	ldr	r0, [r7, #0]
 8010822:	f000 fd33 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010826:	4603      	mov	r3, r0
 8010828:	4618      	mov	r0, r3
 801082a:	f7ff ffe0 	bl	80107ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>
 801082e:	4603      	mov	r3, r0
 8010830:	4619      	mov	r1, r3
 8010832:	4620      	mov	r0, r4
 8010834:	f000 fd84 	bl	8011340 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010838:	462b      	mov	r3, r5
      }
 801083a:	4618      	mov	r0, r3
 801083c:	3708      	adds	r7, #8
 801083e:	46bd      	mov	sp, r7
 8010840:	bdb0      	pop	{r4, r5, r7, pc}

08010842 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010842:	b5b0      	push	{r4, r5, r7, lr}
 8010844:	b082      	sub	sp, #8
 8010846:	af00      	add	r7, sp, #0
 8010848:	6078      	str	r0, [r7, #4]
 801084a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801084c:	6878      	ldr	r0, [r7, #4]
 801084e:	f000 fd12 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010852:	4604      	mov	r4, r0
 8010854:	6838      	ldr	r0, [r7, #0]
 8010856:	f000 fd19 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 801085a:	4603      	mov	r3, r0
 801085c:	4619      	mov	r1, r3
 801085e:	4620      	mov	r0, r4
 8010860:	f7ff ffd5 	bl	801080e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010864:	462b      	mov	r3, r5
      }
 8010866:	4618      	mov	r0, r3
 8010868:	3708      	adds	r7, #8
 801086a:	46bd      	mov	sp, r7
 801086c:	bdb0      	pop	{r4, r5, r7, pc}

0801086e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801086e:	b5b0      	push	{r4, r5, r7, lr}
 8010870:	b082      	sub	sp, #8
 8010872:	af00      	add	r7, sp, #0
 8010874:	6078      	str	r0, [r7, #4]
 8010876:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010878:	6878      	ldr	r0, [r7, #4]
 801087a:	f000 fcfc 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801087e:	4604      	mov	r4, r0
 8010880:	6838      	ldr	r0, [r7, #0]
 8010882:	f000 fd03 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010886:	4603      	mov	r3, r0
 8010888:	4619      	mov	r1, r3
 801088a:	4620      	mov	r0, r4
 801088c:	f7ff ffd9 	bl	8010842 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 8010890:	462b      	mov	r3, r5
      }
 8010892:	4618      	mov	r0, r3
 8010894:	3708      	adds	r7, #8
 8010896:	46bd      	mov	sp, r7
 8010898:	bdb0      	pop	{r4, r5, r7, pc}

0801089a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801089a:	b580      	push	{r7, lr}
 801089c:	b082      	sub	sp, #8
 801089e:	af00      	add	r7, sp, #0
 80108a0:	7138      	strb	r0, [r7, #4]
 80108a2:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80108a4:	6838      	ldr	r0, [r7, #0]
 80108a6:	f000 fd62 	bl	801136e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80108aa:	4603      	mov	r3, r0
 80108ac:	4618      	mov	r0, r3
 80108ae:	f7f3 fba6 	bl	8003ffe <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 80108b2:	4603      	mov	r3, r0
 80108b4:	4618      	mov	r0, r3
 80108b6:	3708      	adds	r7, #8
 80108b8:	46bd      	mov	sp, r7
 80108ba:	bd80      	pop	{r7, pc}

080108bc <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80108bc:	b590      	push	{r4, r7, lr}
 80108be:	b083      	sub	sp, #12
 80108c0:	af00      	add	r7, sp, #0
 80108c2:	7138      	strb	r0, [r7, #4]
 80108c4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80108c6:	6838      	ldr	r0, [r7, #0]
 80108c8:	f000 fd2f 	bl	801132a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80108cc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80108ce:	4619      	mov	r1, r3
 80108d0:	4620      	mov	r0, r4
 80108d2:	f7ff ffe2 	bl	801089a <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 80108d6:	4603      	mov	r3, r0
    }
 80108d8:	4618      	mov	r0, r3
 80108da:	370c      	adds	r7, #12
 80108dc:	46bd      	mov	sp, r7
 80108de:	bd90      	pop	{r4, r7, pc}

080108e0 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80108e0:	b590      	push	{r4, r7, lr}
 80108e2:	b083      	sub	sp, #12
 80108e4:	af00      	add	r7, sp, #0
 80108e6:	7138      	strb	r0, [r7, #4]
 80108e8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80108ea:	6838      	ldr	r0, [r7, #0]
 80108ec:	f000 fcfb 	bl	80112e6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80108f0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80108f2:	4619      	mov	r1, r3
 80108f4:	4620      	mov	r0, r4
 80108f6:	f7ff ffe1 	bl	80108bc <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80108fa:	4603      	mov	r3, r0
    }
 80108fc:	4618      	mov	r0, r3
 80108fe:	370c      	adds	r7, #12
 8010900:	46bd      	mov	sp, r7
 8010902:	bd90      	pop	{r4, r7, pc}

08010904 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010904:	b590      	push	{r4, r7, lr}
 8010906:	b083      	sub	sp, #12
 8010908:	af00      	add	r7, sp, #0
 801090a:	7138      	strb	r0, [r7, #4]
 801090c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801090e:	6838      	ldr	r0, [r7, #0]
 8010910:	f000 fcc7 	bl	80112a2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010914:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010916:	4619      	mov	r1, r3
 8010918:	4620      	mov	r0, r4
 801091a:	f7ff ffe1 	bl	80108e0 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801091e:	4603      	mov	r3, r0
    }
 8010920:	4618      	mov	r0, r3
 8010922:	370c      	adds	r7, #12
 8010924:	46bd      	mov	sp, r7
 8010926:	bd90      	pop	{r4, r7, pc}

08010928 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010928:	b590      	push	{r4, r7, lr}
 801092a:	b083      	sub	sp, #12
 801092c:	af00      	add	r7, sp, #0
 801092e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010930:	6878      	ldr	r0, [r7, #4]
 8010932:	f000 fcab 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010936:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010938:	4619      	mov	r1, r3
 801093a:	4620      	mov	r0, r4
 801093c:	f7ff ffe2 	bl	8010904 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010940:	4603      	mov	r3, r0
    }
 8010942:	4618      	mov	r0, r3
 8010944:	370c      	adds	r7, #12
 8010946:	46bd      	mov	sp, r7
 8010948:	bd90      	pop	{r4, r7, pc}

0801094a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801094a:	b580      	push	{r7, lr}
 801094c:	b082      	sub	sp, #8
 801094e:	af00      	add	r7, sp, #0
 8010950:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010952:	6878      	ldr	r0, [r7, #4]
 8010954:	f000 fc9a 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010958:	4603      	mov	r3, r0
 801095a:	4618      	mov	r0, r3
 801095c:	f7ff ffe4 	bl	8010928 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010960:	4603      	mov	r3, r0
	}
 8010962:	4618      	mov	r0, r3
 8010964:	3708      	adds	r7, #8
 8010966:	46bd      	mov	sp, r7
 8010968:	bd80      	pop	{r7, pc}

0801096a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801096a:	b5b0      	push	{r4, r5, r7, lr}
 801096c:	b082      	sub	sp, #8
 801096e:	af00      	add	r7, sp, #0
 8010970:	6078      	str	r0, [r7, #4]
 8010972:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010974:	6878      	ldr	r0, [r7, #4]
 8010976:	f000 fc7e 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801097a:	4604      	mov	r4, r0
 801097c:	6838      	ldr	r0, [r7, #0]
 801097e:	f000 fc85 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010982:	4603      	mov	r3, r0
 8010984:	4618      	mov	r0, r3
 8010986:	f7ff ffe0 	bl	801094a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>
 801098a:	4603      	mov	r3, r0
 801098c:	4619      	mov	r1, r3
 801098e:	4620      	mov	r0, r4
 8010990:	f000 fcf8 	bl	8011384 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010994:	462b      	mov	r3, r5
      }
 8010996:	4618      	mov	r0, r3
 8010998:	3708      	adds	r7, #8
 801099a:	46bd      	mov	sp, r7
 801099c:	bdb0      	pop	{r4, r5, r7, pc}

0801099e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801099e:	b5b0      	push	{r4, r5, r7, lr}
 80109a0:	b082      	sub	sp, #8
 80109a2:	af00      	add	r7, sp, #0
 80109a4:	6078      	str	r0, [r7, #4]
 80109a6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80109a8:	6878      	ldr	r0, [r7, #4]
 80109aa:	f000 fc64 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80109ae:	4604      	mov	r4, r0
 80109b0:	6838      	ldr	r0, [r7, #0]
 80109b2:	f000 fc6b 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80109b6:	4603      	mov	r3, r0
 80109b8:	4619      	mov	r1, r3
 80109ba:	4620      	mov	r0, r4
 80109bc:	f7ff ffd5 	bl	801096a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80109c0:	462b      	mov	r3, r5
      }
 80109c2:	4618      	mov	r0, r3
 80109c4:	3708      	adds	r7, #8
 80109c6:	46bd      	mov	sp, r7
 80109c8:	bdb0      	pop	{r4, r5, r7, pc}

080109ca <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80109ca:	b5b0      	push	{r4, r5, r7, lr}
 80109cc:	b082      	sub	sp, #8
 80109ce:	af00      	add	r7, sp, #0
 80109d0:	6078      	str	r0, [r7, #4]
 80109d2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80109d4:	6878      	ldr	r0, [r7, #4]
 80109d6:	f000 fc4e 	bl	8011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80109da:	4604      	mov	r4, r0
 80109dc:	6838      	ldr	r0, [r7, #0]
 80109de:	f000 fc55 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 80109e2:	4603      	mov	r3, r0
 80109e4:	4619      	mov	r1, r3
 80109e6:	4620      	mov	r0, r4
 80109e8:	f7ff ffd9 	bl	801099e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 80109ec:	462b      	mov	r3, r5
      }
 80109ee:	4618      	mov	r0, r3
 80109f0:	3708      	adds	r7, #8
 80109f2:	46bd      	mov	sp, r7
 80109f4:	bdb0      	pop	{r4, r5, r7, pc}

080109f6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 80109f6:	b580      	push	{r7, lr}
 80109f8:	b082      	sub	sp, #8
 80109fa:	af00      	add	r7, sp, #0
 80109fc:	6078      	str	r0, [r7, #4]
 80109fe:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8010a00:	683b      	ldr	r3, [r7, #0]
 8010a02:	009b      	lsls	r3, r3, #2
 8010a04:	687a      	ldr	r2, [r7, #4]
 8010a06:	4413      	add	r3, r2
 8010a08:	4618      	mov	r0, r3
 8010a0a:	f000 fcd2 	bl	80113b2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8010a0e:	4603      	mov	r3, r0
	}
 8010a10:	4618      	mov	r0, r3
 8010a12:	3708      	adds	r7, #8
 8010a14:	46bd      	mov	sp, r7
 8010a16:	bd80      	pop	{r7, pc}

08010a18 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8010a18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010a1a:	b085      	sub	sp, #20
 8010a1c:	af00      	add	r7, sp, #0
 8010a1e:	6078      	str	r0, [r7, #4]
 8010a20:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8010a22:	4b0f      	ldr	r3, [pc, #60]	; (8010a60 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_+0x48>)
 8010a24:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8010a26:	6838      	ldr	r0, [r7, #0]
 8010a28:	f7ff fa62 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8010a2c:	4603      	mov	r3, r0
 8010a2e:	4619      	mov	r1, r3
 8010a30:	68f8      	ldr	r0, [r7, #12]
 8010a32:	f7ff ffe0 	bl	80109f6 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>
 8010a36:	4603      	mov	r3, r0
 8010a38:	681b      	ldr	r3, [r3, #0]
 8010a3a:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8010a3c:	68bc      	ldr	r4, [r7, #8]
 8010a3e:	6878      	ldr	r0, [r7, #4]
 8010a40:	f000 fcc2 	bl	80113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8010a44:	4605      	mov	r5, r0
 8010a46:	6838      	ldr	r0, [r7, #0]
 8010a48:	f000 fc20 	bl	801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010a4c:	4603      	mov	r3, r0
 8010a4e:	4619      	mov	r1, r3
 8010a50:	4628      	mov	r0, r5
 8010a52:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8010a54:	4633      	mov	r3, r6
    }
 8010a56:	4618      	mov	r0, r3
 8010a58:	3714      	adds	r7, #20
 8010a5a:	46bd      	mov	sp, r7
 8010a5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a5e:	bf00      	nop
 8010a60:	0802a02c 	.word	0x0802a02c

08010a64 <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 8010a64:	b580      	push	{r7, lr}
 8010a66:	b084      	sub	sp, #16
 8010a68:	af00      	add	r7, sp, #0
 8010a6a:	6078      	str	r0, [r7, #4]
 8010a6c:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 8010a6e:	683b      	ldr	r3, [r7, #0]
 8010a70:	7e1a      	ldrb	r2, [r3, #24]
 8010a72:	687b      	ldr	r3, [r7, #4]
 8010a74:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8010a76:	687b      	ldr	r3, [r7, #4]
 8010a78:	60fb      	str	r3, [r7, #12]
 8010a7a:	6838      	ldr	r0, [r7, #0]
 8010a7c:	f000 fbf0 	bl	8011260 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 8010a80:	4603      	mov	r3, r0
 8010a82:	4618      	mov	r0, r3
 8010a84:	f7ff fd60 	bl	8010548 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>
 8010a88:	4602      	mov	r2, r0
 8010a8a:	f107 030c 	add.w	r3, r7, #12
 8010a8e:	4611      	mov	r1, r2
 8010a90:	4618      	mov	r0, r3
 8010a92:	f7ff ffc1 	bl	8010a18 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>
    }
 8010a96:	bf00      	nop
 8010a98:	3710      	adds	r7, #16
 8010a9a:	46bd      	mov	sp, r7
 8010a9c:	bd80      	pop	{r7, pc}

08010a9e <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8010a9e:	b480      	push	{r7}
 8010aa0:	b083      	sub	sp, #12
 8010aa2:	af00      	add	r7, sp, #0
 8010aa4:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8010aa6:	687b      	ldr	r3, [r7, #4]
    }
 8010aa8:	4618      	mov	r0, r3
 8010aaa:	370c      	adds	r7, #12
 8010aac:	46bd      	mov	sp, r7
 8010aae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ab2:	4770      	bx	lr

08010ab4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010ab4:	b580      	push	{r7, lr}
 8010ab6:	b082      	sub	sp, #8
 8010ab8:	af00      	add	r7, sp, #0
 8010aba:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010abc:	6878      	ldr	r0, [r7, #4]
 8010abe:	f000 fb37 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010ac2:	4603      	mov	r3, r0
 8010ac4:	4618      	mov	r0, r3
 8010ac6:	f7ff fbf6 	bl	80102b6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010aca:	4603      	mov	r3, r0
	}
 8010acc:	4618      	mov	r0, r3
 8010ace:	3708      	adds	r7, #8
 8010ad0:	46bd      	mov	sp, r7
 8010ad2:	bd80      	pop	{r7, pc}

08010ad4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010ad4:	b5b0      	push	{r4, r5, r7, lr}
 8010ad6:	b082      	sub	sp, #8
 8010ad8:	af00      	add	r7, sp, #0
 8010ada:	6078      	str	r0, [r7, #4]
 8010adc:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010ade:	6878      	ldr	r0, [r7, #4]
 8010ae0:	f000 fc7d 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010ae4:	4604      	mov	r4, r0
 8010ae6:	6838      	ldr	r0, [r7, #0]
 8010ae8:	f000 fb22 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010aec:	4603      	mov	r3, r0
 8010aee:	4618      	mov	r0, r3
 8010af0:	f7ff ffe0 	bl	8010ab4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>
 8010af4:	4603      	mov	r3, r0
 8010af6:	4619      	mov	r1, r3
 8010af8:	4620      	mov	r0, r4
 8010afa:	f000 fc7b 	bl	80113f4 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010afe:	462b      	mov	r3, r5
      }
 8010b00:	4618      	mov	r0, r3
 8010b02:	3708      	adds	r7, #8
 8010b04:	46bd      	mov	sp, r7
 8010b06:	bdb0      	pop	{r4, r5, r7, pc}

08010b08 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010b08:	b5b0      	push	{r4, r5, r7, lr}
 8010b0a:	b082      	sub	sp, #8
 8010b0c:	af00      	add	r7, sp, #0
 8010b0e:	6078      	str	r0, [r7, #4]
 8010b10:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010b12:	6878      	ldr	r0, [r7, #4]
 8010b14:	f000 fc63 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b18:	4604      	mov	r4, r0
 8010b1a:	6838      	ldr	r0, [r7, #0]
 8010b1c:	f000 fb08 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b20:	4603      	mov	r3, r0
 8010b22:	4619      	mov	r1, r3
 8010b24:	4620      	mov	r0, r4
 8010b26:	f7ff ffd5 	bl	8010ad4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010b2a:	462b      	mov	r3, r5
      }
 8010b2c:	4618      	mov	r0, r3
 8010b2e:	3708      	adds	r7, #8
 8010b30:	46bd      	mov	sp, r7
 8010b32:	bdb0      	pop	{r4, r5, r7, pc}

08010b34 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010b34:	b5b0      	push	{r4, r5, r7, lr}
 8010b36:	b082      	sub	sp, #8
 8010b38:	af00      	add	r7, sp, #0
 8010b3a:	6078      	str	r0, [r7, #4]
 8010b3c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010b3e:	6878      	ldr	r0, [r7, #4]
 8010b40:	f000 fc4d 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b44:	4604      	mov	r4, r0
 8010b46:	6838      	ldr	r0, [r7, #0]
 8010b48:	f000 faf2 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b4c:	4603      	mov	r3, r0
 8010b4e:	4619      	mov	r1, r3
 8010b50:	4620      	mov	r0, r4
 8010b52:	f7ff ffd9 	bl	8010b08 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010b56:	462b      	mov	r3, r5
      }
 8010b58:	4618      	mov	r0, r3
 8010b5a:	3708      	adds	r7, #8
 8010b5c:	46bd      	mov	sp, r7
 8010b5e:	bdb0      	pop	{r4, r5, r7, pc}

08010b60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010b60:	b580      	push	{r7, lr}
 8010b62:	b082      	sub	sp, #8
 8010b64:	af00      	add	r7, sp, #0
 8010b66:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010b68:	6878      	ldr	r0, [r7, #4]
 8010b6a:	f000 fae1 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b6e:	4603      	mov	r3, r0
 8010b70:	4618      	mov	r0, r3
 8010b72:	f7ff fc09 	bl	8010388 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010b76:	4603      	mov	r3, r0
	}
 8010b78:	4618      	mov	r0, r3
 8010b7a:	3708      	adds	r7, #8
 8010b7c:	46bd      	mov	sp, r7
 8010b7e:	bd80      	pop	{r7, pc}

08010b80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010b80:	b5b0      	push	{r4, r5, r7, lr}
 8010b82:	b082      	sub	sp, #8
 8010b84:	af00      	add	r7, sp, #0
 8010b86:	6078      	str	r0, [r7, #4]
 8010b88:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010b8a:	6878      	ldr	r0, [r7, #4]
 8010b8c:	f000 fc27 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010b90:	4604      	mov	r4, r0
 8010b92:	6838      	ldr	r0, [r7, #0]
 8010b94:	f000 facc 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010b98:	4603      	mov	r3, r0
 8010b9a:	4618      	mov	r0, r3
 8010b9c:	f7ff ffe0 	bl	8010b60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>
 8010ba0:	4603      	mov	r3, r0
 8010ba2:	4619      	mov	r1, r3
 8010ba4:	4620      	mov	r0, r4
 8010ba6:	f000 fc3c 	bl	8011422 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010baa:	462b      	mov	r3, r5
      }
 8010bac:	4618      	mov	r0, r3
 8010bae:	3708      	adds	r7, #8
 8010bb0:	46bd      	mov	sp, r7
 8010bb2:	bdb0      	pop	{r4, r5, r7, pc}

08010bb4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010bb4:	b5b0      	push	{r4, r5, r7, lr}
 8010bb6:	b082      	sub	sp, #8
 8010bb8:	af00      	add	r7, sp, #0
 8010bba:	6078      	str	r0, [r7, #4]
 8010bbc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010bbe:	6878      	ldr	r0, [r7, #4]
 8010bc0:	f000 fc0d 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010bc4:	4604      	mov	r4, r0
 8010bc6:	6838      	ldr	r0, [r7, #0]
 8010bc8:	f000 fab2 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010bcc:	4603      	mov	r3, r0
 8010bce:	4619      	mov	r1, r3
 8010bd0:	4620      	mov	r0, r4
 8010bd2:	f7ff ffd5 	bl	8010b80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010bd6:	462b      	mov	r3, r5
      }
 8010bd8:	4618      	mov	r0, r3
 8010bda:	3708      	adds	r7, #8
 8010bdc:	46bd      	mov	sp, r7
 8010bde:	bdb0      	pop	{r4, r5, r7, pc}

08010be0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010be0:	b5b0      	push	{r4, r5, r7, lr}
 8010be2:	b082      	sub	sp, #8
 8010be4:	af00      	add	r7, sp, #0
 8010be6:	6078      	str	r0, [r7, #4]
 8010be8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010bea:	6878      	ldr	r0, [r7, #4]
 8010bec:	f000 fbf7 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010bf0:	4604      	mov	r4, r0
 8010bf2:	6838      	ldr	r0, [r7, #0]
 8010bf4:	f000 fa9c 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010bf8:	4603      	mov	r3, r0
 8010bfa:	4619      	mov	r1, r3
 8010bfc:	4620      	mov	r0, r4
 8010bfe:	f7ff ffd9 	bl	8010bb4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010c02:	462b      	mov	r3, r5
      }
 8010c04:	4618      	mov	r0, r3
 8010c06:	3708      	adds	r7, #8
 8010c08:	46bd      	mov	sp, r7
 8010c0a:	bdb0      	pop	{r4, r5, r7, pc}

08010c0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010c0c:	b580      	push	{r7, lr}
 8010c0e:	b082      	sub	sp, #8
 8010c10:	af00      	add	r7, sp, #0
 8010c12:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010c14:	6878      	ldr	r0, [r7, #4]
 8010c16:	f000 fa8b 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010c1a:	4603      	mov	r3, r0
 8010c1c:	4618      	mov	r0, r3
 8010c1e:	f7ff fc2f 	bl	8010480 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010c22:	4603      	mov	r3, r0
	}
 8010c24:	4618      	mov	r0, r3
 8010c26:	3708      	adds	r7, #8
 8010c28:	46bd      	mov	sp, r7
 8010c2a:	bd80      	pop	{r7, pc}

08010c2c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010c2c:	b5b0      	push	{r4, r5, r7, lr}
 8010c2e:	b082      	sub	sp, #8
 8010c30:	af00      	add	r7, sp, #0
 8010c32:	6078      	str	r0, [r7, #4]
 8010c34:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010c36:	6878      	ldr	r0, [r7, #4]
 8010c38:	f000 fbd1 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010c3c:	4604      	mov	r4, r0
 8010c3e:	6838      	ldr	r0, [r7, #0]
 8010c40:	f000 fa76 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010c44:	4603      	mov	r3, r0
 8010c46:	4618      	mov	r0, r3
 8010c48:	f7ff ffe0 	bl	8010c0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>
 8010c4c:	4603      	mov	r3, r0
 8010c4e:	4619      	mov	r1, r3
 8010c50:	4620      	mov	r0, r4
 8010c52:	f000 fbfd 	bl	8011450 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010c56:	462b      	mov	r3, r5
      }
 8010c58:	4618      	mov	r0, r3
 8010c5a:	3708      	adds	r7, #8
 8010c5c:	46bd      	mov	sp, r7
 8010c5e:	bdb0      	pop	{r4, r5, r7, pc}

08010c60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010c60:	b5b0      	push	{r4, r5, r7, lr}
 8010c62:	b082      	sub	sp, #8
 8010c64:	af00      	add	r7, sp, #0
 8010c66:	6078      	str	r0, [r7, #4]
 8010c68:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010c6a:	6878      	ldr	r0, [r7, #4]
 8010c6c:	f000 fbb7 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010c70:	4604      	mov	r4, r0
 8010c72:	6838      	ldr	r0, [r7, #0]
 8010c74:	f000 fa5c 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010c78:	4603      	mov	r3, r0
 8010c7a:	4619      	mov	r1, r3
 8010c7c:	4620      	mov	r0, r4
 8010c7e:	f7ff ffd5 	bl	8010c2c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010c82:	462b      	mov	r3, r5
      }
 8010c84:	4618      	mov	r0, r3
 8010c86:	3708      	adds	r7, #8
 8010c88:	46bd      	mov	sp, r7
 8010c8a:	bdb0      	pop	{r4, r5, r7, pc}

08010c8c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010c8c:	b5b0      	push	{r4, r5, r7, lr}
 8010c8e:	b082      	sub	sp, #8
 8010c90:	af00      	add	r7, sp, #0
 8010c92:	6078      	str	r0, [r7, #4]
 8010c94:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010c96:	6878      	ldr	r0, [r7, #4]
 8010c98:	f000 fba1 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010c9c:	4604      	mov	r4, r0
 8010c9e:	6838      	ldr	r0, [r7, #0]
 8010ca0:	f000 fa46 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010ca4:	4603      	mov	r3, r0
 8010ca6:	4619      	mov	r1, r3
 8010ca8:	4620      	mov	r0, r4
 8010caa:	f7ff ffd9 	bl	8010c60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010cae:	462b      	mov	r3, r5
      }
 8010cb0:	4618      	mov	r0, r3
 8010cb2:	3708      	adds	r7, #8
 8010cb4:	46bd      	mov	sp, r7
 8010cb6:	bdb0      	pop	{r4, r5, r7, pc}

08010cb8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010cb8:	b580      	push	{r7, lr}
 8010cba:	b082      	sub	sp, #8
 8010cbc:	af00      	add	r7, sp, #0
 8010cbe:	7138      	strb	r0, [r7, #4]
 8010cc0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010cc2:	6838      	ldr	r0, [r7, #0]
 8010cc4:	f000 fbdb 	bl	801147e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010cc8:	4603      	mov	r3, r0
 8010cca:	4618      	mov	r0, r3
 8010ccc:	f7f2 fe15 	bl	80038fa <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8010cd0:	4603      	mov	r3, r0
 8010cd2:	4618      	mov	r0, r3
 8010cd4:	3708      	adds	r7, #8
 8010cd6:	46bd      	mov	sp, r7
 8010cd8:	bd80      	pop	{r7, pc}

08010cda <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010cda:	b590      	push	{r4, r7, lr}
 8010cdc:	b083      	sub	sp, #12
 8010cde:	af00      	add	r7, sp, #0
 8010ce0:	7138      	strb	r0, [r7, #4]
 8010ce2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010ce4:	6838      	ldr	r0, [r7, #0]
 8010ce6:	f000 fa84 	bl	80111f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010cea:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010cec:	4619      	mov	r1, r3
 8010cee:	4620      	mov	r0, r4
 8010cf0:	f7ff ffe2 	bl	8010cb8 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010cf4:	4603      	mov	r3, r0
    }
 8010cf6:	4618      	mov	r0, r3
 8010cf8:	370c      	adds	r7, #12
 8010cfa:	46bd      	mov	sp, r7
 8010cfc:	bd90      	pop	{r4, r7, pc}

08010cfe <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010cfe:	b590      	push	{r4, r7, lr}
 8010d00:	b083      	sub	sp, #12
 8010d02:	af00      	add	r7, sp, #0
 8010d04:	7138      	strb	r0, [r7, #4]
 8010d06:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010d08:	6838      	ldr	r0, [r7, #0]
 8010d0a:	f000 fa48 	bl	801119e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8010d0e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010d10:	4619      	mov	r1, r3
 8010d12:	4620      	mov	r0, r4
 8010d14:	f7ff ffe1 	bl	8010cda <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010d18:	4603      	mov	r3, r0
    }
 8010d1a:	4618      	mov	r0, r3
 8010d1c:	370c      	adds	r7, #12
 8010d1e:	46bd      	mov	sp, r7
 8010d20:	bd90      	pop	{r4, r7, pc}

08010d22 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010d22:	b590      	push	{r4, r7, lr}
 8010d24:	b083      	sub	sp, #12
 8010d26:	af00      	add	r7, sp, #0
 8010d28:	7138      	strb	r0, [r7, #4]
 8010d2a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010d2c:	6838      	ldr	r0, [r7, #0]
 8010d2e:	f000 fa0a 	bl	8011146 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8010d32:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010d34:	4619      	mov	r1, r3
 8010d36:	4620      	mov	r0, r4
 8010d38:	f7ff ffe1 	bl	8010cfe <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010d3c:	4603      	mov	r3, r0
    }
 8010d3e:	4618      	mov	r0, r3
 8010d40:	370c      	adds	r7, #12
 8010d42:	46bd      	mov	sp, r7
 8010d44:	bd90      	pop	{r4, r7, pc}

08010d46 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010d46:	b590      	push	{r4, r7, lr}
 8010d48:	b083      	sub	sp, #12
 8010d4a:	af00      	add	r7, sp, #0
 8010d4c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010d4e:	6878      	ldr	r0, [r7, #4]
 8010d50:	f000 f9ee 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010d54:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010d56:	4619      	mov	r1, r3
 8010d58:	4620      	mov	r0, r4
 8010d5a:	f7ff ffe2 	bl	8010d22 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010d5e:	4603      	mov	r3, r0
    }
 8010d60:	4618      	mov	r0, r3
 8010d62:	370c      	adds	r7, #12
 8010d64:	46bd      	mov	sp, r7
 8010d66:	bd90      	pop	{r4, r7, pc}

08010d68 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010d68:	b580      	push	{r7, lr}
 8010d6a:	b082      	sub	sp, #8
 8010d6c:	af00      	add	r7, sp, #0
 8010d6e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010d70:	6878      	ldr	r0, [r7, #4]
 8010d72:	f000 f9dd 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010d76:	4603      	mov	r3, r0
 8010d78:	4618      	mov	r0, r3
 8010d7a:	f7ff ffe4 	bl	8010d46 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8010d7e:	4603      	mov	r3, r0
	}
 8010d80:	4618      	mov	r0, r3
 8010d82:	3708      	adds	r7, #8
 8010d84:	46bd      	mov	sp, r7
 8010d86:	bd80      	pop	{r7, pc}

08010d88 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010d88:	b5b0      	push	{r4, r5, r7, lr}
 8010d8a:	b082      	sub	sp, #8
 8010d8c:	af00      	add	r7, sp, #0
 8010d8e:	6078      	str	r0, [r7, #4]
 8010d90:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010d92:	6878      	ldr	r0, [r7, #4]
 8010d94:	f000 fb23 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010d98:	4604      	mov	r4, r0
 8010d9a:	6838      	ldr	r0, [r7, #0]
 8010d9c:	f000 f9c8 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010da0:	4603      	mov	r3, r0
 8010da2:	4618      	mov	r0, r3
 8010da4:	f7ff ffe0 	bl	8010d68 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>
 8010da8:	4603      	mov	r3, r0
 8010daa:	4619      	mov	r1, r3
 8010dac:	4620      	mov	r0, r4
 8010dae:	f000 fb71 	bl	8011494 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8010db2:	462b      	mov	r3, r5
      }
 8010db4:	4618      	mov	r0, r3
 8010db6:	3708      	adds	r7, #8
 8010db8:	46bd      	mov	sp, r7
 8010dba:	bdb0      	pop	{r4, r5, r7, pc}

08010dbc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010dbc:	b5b0      	push	{r4, r5, r7, lr}
 8010dbe:	b082      	sub	sp, #8
 8010dc0:	af00      	add	r7, sp, #0
 8010dc2:	6078      	str	r0, [r7, #4]
 8010dc4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010dc6:	6878      	ldr	r0, [r7, #4]
 8010dc8:	f000 fb09 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010dcc:	4604      	mov	r4, r0
 8010dce:	6838      	ldr	r0, [r7, #0]
 8010dd0:	f000 f9ae 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010dd4:	4603      	mov	r3, r0
 8010dd6:	4619      	mov	r1, r3
 8010dd8:	4620      	mov	r0, r4
 8010dda:	f7ff ffd5 	bl	8010d88 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010dde:	462b      	mov	r3, r5
      }
 8010de0:	4618      	mov	r0, r3
 8010de2:	3708      	adds	r7, #8
 8010de4:	46bd      	mov	sp, r7
 8010de6:	bdb0      	pop	{r4, r5, r7, pc}

08010de8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010de8:	b5b0      	push	{r4, r5, r7, lr}
 8010dea:	b082      	sub	sp, #8
 8010dec:	af00      	add	r7, sp, #0
 8010dee:	6078      	str	r0, [r7, #4]
 8010df0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010df2:	6878      	ldr	r0, [r7, #4]
 8010df4:	f000 faf3 	bl	80113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010df8:	4604      	mov	r4, r0
 8010dfa:	6838      	ldr	r0, [r7, #0]
 8010dfc:	f000 f998 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010e00:	4603      	mov	r3, r0
 8010e02:	4619      	mov	r1, r3
 8010e04:	4620      	mov	r0, r4
 8010e06:	f7ff ffd9 	bl	8010dbc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8010e0a:	462b      	mov	r3, r5
      }
 8010e0c:	4618      	mov	r0, r3
 8010e0e:	3708      	adds	r7, #8
 8010e10:	46bd      	mov	sp, r7
 8010e12:	bdb0      	pop	{r4, r5, r7, pc}

08010e14 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8010e14:	b580      	push	{r7, lr}
 8010e16:	b082      	sub	sp, #8
 8010e18:	af00      	add	r7, sp, #0
 8010e1a:	6078      	str	r0, [r7, #4]
 8010e1c:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8010e1e:	683b      	ldr	r3, [r7, #0]
 8010e20:	009b      	lsls	r3, r3, #2
 8010e22:	687a      	ldr	r2, [r7, #4]
 8010e24:	4413      	add	r3, r2
 8010e26:	4618      	mov	r0, r3
 8010e28:	f000 fb4b 	bl	80114c2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8010e2c:	4603      	mov	r3, r0
	}
 8010e2e:	4618      	mov	r0, r3
 8010e30:	3708      	adds	r7, #8
 8010e32:	46bd      	mov	sp, r7
 8010e34:	bd80      	pop	{r7, pc}
	...

08010e38 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8010e38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e3a:	b085      	sub	sp, #20
 8010e3c:	af00      	add	r7, sp, #0
 8010e3e:	6078      	str	r0, [r7, #4]
 8010e40:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8010e42:	4b0f      	ldr	r3, [pc, #60]	; (8010e80 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 8010e44:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8010e46:	6838      	ldr	r0, [r7, #0]
 8010e48:	f7ff f852 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8010e4c:	4603      	mov	r3, r0
 8010e4e:	4619      	mov	r1, r3
 8010e50:	68f8      	ldr	r0, [r7, #12]
 8010e52:	f7ff ffdf 	bl	8010e14 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>
 8010e56:	4603      	mov	r3, r0
 8010e58:	681b      	ldr	r3, [r3, #0]
 8010e5a:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8010e5c:	68bc      	ldr	r4, [r7, #8]
 8010e5e:	6878      	ldr	r0, [r7, #4]
 8010e60:	f000 fb3a 	bl	80114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8010e64:	4605      	mov	r5, r0
 8010e66:	6838      	ldr	r0, [r7, #0]
 8010e68:	f000 f962 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8010e6c:	4603      	mov	r3, r0
 8010e6e:	4619      	mov	r1, r3
 8010e70:	4628      	mov	r0, r5
 8010e72:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8010e74:	4633      	mov	r3, r6
    }
 8010e76:	4618      	mov	r0, r3
 8010e78:	3714      	adds	r7, #20
 8010e7a:	46bd      	mov	sp, r7
 8010e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e7e:	bf00      	nop
 8010e80:	0802a03c 	.word	0x0802a03c

08010e84 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 8010e84:	b580      	push	{r7, lr}
 8010e86:	b084      	sub	sp, #16
 8010e88:	af00      	add	r7, sp, #0
 8010e8a:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8010e8c:	6878      	ldr	r0, [r7, #4]
 8010e8e:	f7ff fe06 	bl	8010a9e <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>
 8010e92:	4602      	mov	r2, r0
 8010e94:	f107 030c 	add.w	r3, r7, #12
 8010e98:	4611      	mov	r1, r2
 8010e9a:	4618      	mov	r0, r3
 8010e9c:	f7ff ffcc 	bl	8010e38 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
      }
 8010ea0:	bf00      	nop
 8010ea2:	3710      	adds	r7, #16
 8010ea4:	46bd      	mov	sp, r7
 8010ea6:	bd80      	pop	{r7, pc}

08010ea8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010ea8:	b480      	push	{r7}
 8010eaa:	b083      	sub	sp, #12
 8010eac:	af00      	add	r7, sp, #0
 8010eae:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010eb0:	687b      	ldr	r3, [r7, #4]
 8010eb2:	689b      	ldr	r3, [r3, #8]
      }
 8010eb4:	4618      	mov	r0, r3
 8010eb6:	370c      	adds	r7, #12
 8010eb8:	46bd      	mov	sp, r7
 8010eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ebe:	4770      	bx	lr

08010ec0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8010ec0:	b480      	push	{r7}
 8010ec2:	b083      	sub	sp, #12
 8010ec4:	af00      	add	r7, sp, #0
 8010ec6:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8010ec8:	687b      	ldr	r3, [r7, #4]
 8010eca:	3304      	adds	r3, #4
 8010ecc:	4618      	mov	r0, r3
 8010ece:	370c      	adds	r7, #12
 8010ed0:	46bd      	mov	sp, r7
 8010ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ed6:	4770      	bx	lr

08010ed8 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010ed8:	b590      	push	{r4, r7, lr}
 8010eda:	b087      	sub	sp, #28
 8010edc:	af00      	add	r7, sp, #0
 8010ede:	60f8      	str	r0, [r7, #12]
 8010ee0:	60b9      	str	r1, [r7, #8]
 8010ee2:	607a      	str	r2, [r7, #4]
 8010ee4:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8010ee6:	68bb      	ldr	r3, [r7, #8]
 8010ee8:	2b00      	cmp	r3, #0
 8010eea:	d01b      	beq.n	8010f24 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010eec:	68fc      	ldr	r4, [r7, #12]
 8010eee:	68b8      	ldr	r0, [r7, #8]
 8010ef0:	f7f6 fb7c 	bl	80075ec <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8010ef4:	4603      	mov	r3, r0
 8010ef6:	683a      	ldr	r2, [r7, #0]
 8010ef8:	4619      	mov	r1, r3
 8010efa:	4620      	mov	r0, r4
 8010efc:	f7f5 fc2a 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8010f00:	4603      	mov	r3, r0
 8010f02:	f083 0301 	eor.w	r3, r3, #1
 8010f06:	b2db      	uxtb	r3, r3
 8010f08:	2b00      	cmp	r3, #0
 8010f0a:	d006      	beq.n	8010f1a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010f0c:	68bb      	ldr	r3, [r7, #8]
 8010f0e:	607b      	str	r3, [r7, #4]
 8010f10:	68b8      	ldr	r0, [r7, #8]
 8010f12:	f000 faec 	bl	80114ee <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8010f16:	60b8      	str	r0, [r7, #8]
 8010f18:	e7e5      	b.n	8010ee6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 8010f1a:	68b8      	ldr	r0, [r7, #8]
 8010f1c:	f000 faf3 	bl	8011506 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8010f20:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010f22:	e7e0      	b.n	8010ee6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 8010f24:	f107 0314 	add.w	r3, r7, #20
 8010f28:	6879      	ldr	r1, [r7, #4]
 8010f2a:	4618      	mov	r0, r3
 8010f2c:	f000 f819 	bl	8010f62 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8010f30:	697b      	ldr	r3, [r7, #20]
    }
 8010f32:	4618      	mov	r0, r3
 8010f34:	371c      	adds	r7, #28
 8010f36:	46bd      	mov	sp, r7
 8010f38:	bd90      	pop	{r4, r7, pc}

08010f3a <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8010f3a:	b480      	push	{r7}
 8010f3c:	b083      	sub	sp, #12
 8010f3e:	af00      	add	r7, sp, #0
 8010f40:	6078      	str	r0, [r7, #4]
 8010f42:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8010f44:	687b      	ldr	r3, [r7, #4]
 8010f46:	681a      	ldr	r2, [r3, #0]
 8010f48:	683b      	ldr	r3, [r7, #0]
 8010f4a:	681b      	ldr	r3, [r3, #0]
 8010f4c:	429a      	cmp	r2, r3
 8010f4e:	bf0c      	ite	eq
 8010f50:	2301      	moveq	r3, #1
 8010f52:	2300      	movne	r3, #0
 8010f54:	b2db      	uxtb	r3, r3
 8010f56:	4618      	mov	r0, r3
 8010f58:	370c      	adds	r7, #12
 8010f5a:	46bd      	mov	sp, r7
 8010f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f60:	4770      	bx	lr

08010f62 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8010f62:	b480      	push	{r7}
 8010f64:	b083      	sub	sp, #12
 8010f66:	af00      	add	r7, sp, #0
 8010f68:	6078      	str	r0, [r7, #4]
 8010f6a:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8010f6c:	687b      	ldr	r3, [r7, #4]
 8010f6e:	683a      	ldr	r2, [r7, #0]
 8010f70:	601a      	str	r2, [r3, #0]
 8010f72:	687b      	ldr	r3, [r7, #4]
 8010f74:	4618      	mov	r0, r3
 8010f76:	370c      	adds	r7, #12
 8010f78:	46bd      	mov	sp, r7
 8010f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f7e:	4770      	bx	lr

08010f80 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8010f80:	b480      	push	{r7}
 8010f82:	b083      	sub	sp, #12
 8010f84:	af00      	add	r7, sp, #0
 8010f86:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8010f88:	687b      	ldr	r3, [r7, #4]
 8010f8a:	689b      	ldr	r3, [r3, #8]
      }
 8010f8c:	4618      	mov	r0, r3
 8010f8e:	370c      	adds	r7, #12
 8010f90:	46bd      	mov	sp, r7
 8010f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f96:	4770      	bx	lr

08010f98 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8010f98:	b480      	push	{r7}
 8010f9a:	b083      	sub	sp, #12
 8010f9c:	af00      	add	r7, sp, #0
 8010f9e:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8010fa0:	687b      	ldr	r3, [r7, #4]
 8010fa2:	3304      	adds	r3, #4
 8010fa4:	4618      	mov	r0, r3
 8010fa6:	370c      	adds	r7, #12
 8010fa8:	46bd      	mov	sp, r7
 8010faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fae:	4770      	bx	lr

08010fb0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010fb0:	b590      	push	{r4, r7, lr}
 8010fb2:	b087      	sub	sp, #28
 8010fb4:	af00      	add	r7, sp, #0
 8010fb6:	60f8      	str	r0, [r7, #12]
 8010fb8:	60b9      	str	r1, [r7, #8]
 8010fba:	607a      	str	r2, [r7, #4]
 8010fbc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8010fbe:	68bb      	ldr	r3, [r7, #8]
 8010fc0:	2b00      	cmp	r3, #0
 8010fc2:	d01b      	beq.n	8010ffc <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010fc4:	68fc      	ldr	r4, [r7, #12]
 8010fc6:	68b8      	ldr	r0, [r7, #8]
 8010fc8:	f7f6 fc65 	bl	8007896 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8010fcc:	4603      	mov	r3, r0
 8010fce:	683a      	ldr	r2, [r7, #0]
 8010fd0:	4619      	mov	r1, r3
 8010fd2:	4620      	mov	r0, r4
 8010fd4:	f7f5 fbbe 	bl	8006754 <_ZNKSt4lessIcEclERKcS2_>
 8010fd8:	4603      	mov	r3, r0
 8010fda:	f083 0301 	eor.w	r3, r3, #1
 8010fde:	b2db      	uxtb	r3, r3
 8010fe0:	2b00      	cmp	r3, #0
 8010fe2:	d006      	beq.n	8010ff2 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010fe4:	68bb      	ldr	r3, [r7, #8]
 8010fe6:	607b      	str	r3, [r7, #4]
 8010fe8:	68b8      	ldr	r0, [r7, #8]
 8010fea:	f000 fa98 	bl	801151e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 8010fee:	60b8      	str	r0, [r7, #8]
 8010ff0:	e7e5      	b.n	8010fbe <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 8010ff2:	68b8      	ldr	r0, [r7, #8]
 8010ff4:	f000 fa9f 	bl	8011536 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 8010ff8:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010ffa:	e7e0      	b.n	8010fbe <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 8010ffc:	f107 0314 	add.w	r3, r7, #20
 8011000:	6879      	ldr	r1, [r7, #4]
 8011002:	4618      	mov	r0, r3
 8011004:	f000 f819 	bl	801103a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 8011008:	697b      	ldr	r3, [r7, #20]
    }
 801100a:	4618      	mov	r0, r3
 801100c:	371c      	adds	r7, #28
 801100e:	46bd      	mov	sp, r7
 8011010:	bd90      	pop	{r4, r7, pc}

08011012 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8011012:	b480      	push	{r7}
 8011014:	b083      	sub	sp, #12
 8011016:	af00      	add	r7, sp, #0
 8011018:	6078      	str	r0, [r7, #4]
 801101a:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 801101c:	687b      	ldr	r3, [r7, #4]
 801101e:	681a      	ldr	r2, [r3, #0]
 8011020:	683b      	ldr	r3, [r7, #0]
 8011022:	681b      	ldr	r3, [r3, #0]
 8011024:	429a      	cmp	r2, r3
 8011026:	bf0c      	ite	eq
 8011028:	2301      	moveq	r3, #1
 801102a:	2300      	movne	r3, #0
 801102c:	b2db      	uxtb	r3, r3
 801102e:	4618      	mov	r0, r3
 8011030:	370c      	adds	r7, #12
 8011032:	46bd      	mov	sp, r7
 8011034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011038:	4770      	bx	lr

0801103a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801103a:	b480      	push	{r7}
 801103c:	b083      	sub	sp, #12
 801103e:	af00      	add	r7, sp, #0
 8011040:	6078      	str	r0, [r7, #4]
 8011042:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8011044:	687b      	ldr	r3, [r7, #4]
 8011046:	683a      	ldr	r2, [r7, #0]
 8011048:	601a      	str	r2, [r3, #0]
 801104a:	687b      	ldr	r3, [r7, #4]
 801104c:	4618      	mov	r0, r3
 801104e:	370c      	adds	r7, #12
 8011050:	46bd      	mov	sp, r7
 8011052:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011056:	4770      	bx	lr

08011058 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 8011058:	b480      	push	{r7}
 801105a:	b083      	sub	sp, #12
 801105c:	af00      	add	r7, sp, #0
 801105e:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 8011060:	687b      	ldr	r3, [r7, #4]
 8011062:	689b      	ldr	r3, [r3, #8]
      }
 8011064:	4618      	mov	r0, r3
 8011066:	370c      	adds	r7, #12
 8011068:	46bd      	mov	sp, r7
 801106a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801106e:	4770      	bx	lr

08011070 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 8011070:	b480      	push	{r7}
 8011072:	b083      	sub	sp, #12
 8011074:	af00      	add	r7, sp, #0
 8011076:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8011078:	687b      	ldr	r3, [r7, #4]
 801107a:	3304      	adds	r3, #4
 801107c:	4618      	mov	r0, r3
 801107e:	370c      	adds	r7, #12
 8011080:	46bd      	mov	sp, r7
 8011082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011086:	4770      	bx	lr

08011088 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8011088:	b590      	push	{r4, r7, lr}
 801108a:	b087      	sub	sp, #28
 801108c:	af00      	add	r7, sp, #0
 801108e:	60f8      	str	r0, [r7, #12]
 8011090:	60b9      	str	r1, [r7, #8]
 8011092:	607a      	str	r2, [r7, #4]
 8011094:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8011096:	68bb      	ldr	r3, [r7, #8]
 8011098:	2b00      	cmp	r3, #0
 801109a:	d01b      	beq.n	80110d4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 801109c:	68fc      	ldr	r4, [r7, #12]
 801109e:	68b8      	ldr	r0, [r7, #8]
 80110a0:	f7f6 fb4c 	bl	800773c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 80110a4:	4603      	mov	r3, r0
 80110a6:	683a      	ldr	r2, [r7, #0]
 80110a8:	4619      	mov	r1, r3
 80110aa:	4620      	mov	r0, r4
 80110ac:	f7f5 fce7 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80110b0:	4603      	mov	r3, r0
 80110b2:	f083 0301 	eor.w	r3, r3, #1
 80110b6:	b2db      	uxtb	r3, r3
 80110b8:	2b00      	cmp	r3, #0
 80110ba:	d006      	beq.n	80110ca <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 80110bc:	68bb      	ldr	r3, [r7, #8]
 80110be:	607b      	str	r3, [r7, #4]
 80110c0:	68b8      	ldr	r0, [r7, #8]
 80110c2:	f000 fa44 	bl	801154e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>
 80110c6:	60b8      	str	r0, [r7, #8]
 80110c8:	e7e5      	b.n	8011096 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 80110ca:	68b8      	ldr	r0, [r7, #8]
 80110cc:	f000 fa4b 	bl	8011566 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>
 80110d0:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 80110d2:	e7e0      	b.n	8011096 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
      return const_iterator(__y);
 80110d4:	f107 0314 	add.w	r3, r7, #20
 80110d8:	6879      	ldr	r1, [r7, #4]
 80110da:	4618      	mov	r0, r3
 80110dc:	f000 f819 	bl	8011112 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 80110e0:	697b      	ldr	r3, [r7, #20]
    }
 80110e2:	4618      	mov	r0, r3
 80110e4:	371c      	adds	r7, #28
 80110e6:	46bd      	mov	sp, r7
 80110e8:	bd90      	pop	{r4, r7, pc}

080110ea <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80110ea:	b480      	push	{r7}
 80110ec:	b083      	sub	sp, #12
 80110ee:	af00      	add	r7, sp, #0
 80110f0:	6078      	str	r0, [r7, #4]
 80110f2:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80110f4:	687b      	ldr	r3, [r7, #4]
 80110f6:	681a      	ldr	r2, [r3, #0]
 80110f8:	683b      	ldr	r3, [r7, #0]
 80110fa:	681b      	ldr	r3, [r3, #0]
 80110fc:	429a      	cmp	r2, r3
 80110fe:	bf0c      	ite	eq
 8011100:	2301      	moveq	r3, #1
 8011102:	2300      	movne	r3, #0
 8011104:	b2db      	uxtb	r3, r3
 8011106:	4618      	mov	r0, r3
 8011108:	370c      	adds	r7, #12
 801110a:	46bd      	mov	sp, r7
 801110c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011110:	4770      	bx	lr

08011112 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011112:	b480      	push	{r7}
 8011114:	b083      	sub	sp, #12
 8011116:	af00      	add	r7, sp, #0
 8011118:	6078      	str	r0, [r7, #4]
 801111a:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 801111c:	687b      	ldr	r3, [r7, #4]
 801111e:	683a      	ldr	r2, [r7, #0]
 8011120:	601a      	str	r2, [r3, #0]
 8011122:	687b      	ldr	r3, [r7, #4]
 8011124:	4618      	mov	r0, r3
 8011126:	370c      	adds	r7, #12
 8011128:	46bd      	mov	sp, r7
 801112a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801112e:	4770      	bx	lr

08011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011130:	b480      	push	{r7}
 8011132:	b083      	sub	sp, #12
 8011134:	af00      	add	r7, sp, #0
 8011136:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011138:	687b      	ldr	r3, [r7, #4]
 801113a:	4618      	mov	r0, r3
 801113c:	370c      	adds	r7, #12
 801113e:	46bd      	mov	sp, r7
 8011140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011144:	4770      	bx	lr

08011146 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011146:	b480      	push	{r7}
 8011148:	b083      	sub	sp, #12
 801114a:	af00      	add	r7, sp, #0
 801114c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801114e:	687b      	ldr	r3, [r7, #4]
 8011150:	4618      	mov	r0, r3
 8011152:	370c      	adds	r7, #12
 8011154:	46bd      	mov	sp, r7
 8011156:	f85d 7b04 	ldr.w	r7, [sp], #4
 801115a:	4770      	bx	lr

0801115c <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801115c:	b590      	push	{r4, r7, lr}
 801115e:	b085      	sub	sp, #20
 8011160:	af00      	add	r7, sp, #0
 8011162:	6078      	str	r0, [r7, #4]
 8011164:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8011166:	687b      	ldr	r3, [r7, #4]
 8011168:	2200      	movs	r2, #0
 801116a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801116c:	6878      	ldr	r0, [r7, #4]
 801116e:	f7ff f8a2 	bl	80102b6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8011172:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8011174:	6838      	ldr	r0, [r7, #0]
 8011176:	f7f6 fdb7 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801117a:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 801117c:	68f8      	ldr	r0, [r7, #12]
 801117e:	f7f7 fb01 	bl	8008784 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8011182:	4603      	mov	r3, r0
 8011184:	4619      	mov	r1, r3
 8011186:	2018      	movs	r0, #24
 8011188:	f7ef ff67 	bl	800105a <_ZnwjPv>
 801118c:	4603      	mov	r3, r0
 801118e:	4621      	mov	r1, r4
 8011190:	4618      	mov	r0, r3
 8011192:	f012 fb0c 	bl	80237ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 8011196:	bf00      	nop
 8011198:	3714      	adds	r7, #20
 801119a:	46bd      	mov	sp, r7
 801119c:	bd90      	pop	{r4, r7, pc}

0801119e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801119e:	b480      	push	{r7}
 80111a0:	b083      	sub	sp, #12
 80111a2:	af00      	add	r7, sp, #0
 80111a4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80111a6:	687b      	ldr	r3, [r7, #4]
 80111a8:	4618      	mov	r0, r3
 80111aa:	370c      	adds	r7, #12
 80111ac:	46bd      	mov	sp, r7
 80111ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80111b2:	4770      	bx	lr

080111b4 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80111b4:	b590      	push	{r4, r7, lr}
 80111b6:	b085      	sub	sp, #20
 80111b8:	af00      	add	r7, sp, #0
 80111ba:	6078      	str	r0, [r7, #4]
 80111bc:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80111be:	687b      	ldr	r3, [r7, #4]
 80111c0:	2201      	movs	r2, #1
 80111c2:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80111c4:	6878      	ldr	r0, [r7, #4]
 80111c6:	f7ff f8df 	bl	8010388 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80111ca:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80111cc:	6838      	ldr	r0, [r7, #0]
 80111ce:	f7f6 fcd3 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80111d2:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80111d4:	681c      	ldr	r4, [r3, #0]
 80111d6:	68f8      	ldr	r0, [r7, #12]
 80111d8:	f7f7 fab0 	bl	800873c <_ZSt9addressofIiEPT_RS0_>
 80111dc:	4603      	mov	r3, r0
 80111de:	4619      	mov	r1, r3
 80111e0:	2004      	movs	r0, #4
 80111e2:	f7ef ff3a 	bl	800105a <_ZnwjPv>
 80111e6:	4603      	mov	r3, r0
 80111e8:	601c      	str	r4, [r3, #0]
    }
 80111ea:	bf00      	nop
 80111ec:	3714      	adds	r7, #20
 80111ee:	46bd      	mov	sp, r7
 80111f0:	bd90      	pop	{r4, r7, pc}

080111f2 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80111f2:	b480      	push	{r7}
 80111f4:	b083      	sub	sp, #12
 80111f6:	af00      	add	r7, sp, #0
 80111f8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80111fa:	687b      	ldr	r3, [r7, #4]
 80111fc:	4618      	mov	r0, r3
 80111fe:	370c      	adds	r7, #12
 8011200:	46bd      	mov	sp, r7
 8011202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011206:	4770      	bx	lr

08011208 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8011208:	b590      	push	{r4, r7, lr}
 801120a:	b085      	sub	sp, #20
 801120c:	af00      	add	r7, sp, #0
 801120e:	6078      	str	r0, [r7, #4]
 8011210:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8011212:	687b      	ldr	r3, [r7, #4]
 8011214:	2202      	movs	r2, #2
 8011216:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8011218:	6878      	ldr	r0, [r7, #4]
 801121a:	f7ff f931 	bl	8010480 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 801121e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8011220:	6838      	ldr	r0, [r7, #0]
 8011222:	f7f6 fcd3 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8011226:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8011228:	681c      	ldr	r4, [r3, #0]
 801122a:	68f8      	ldr	r0, [r7, #12]
 801122c:	f7f7 fa92 	bl	8008754 <_ZSt9addressofIfEPT_RS0_>
 8011230:	4603      	mov	r3, r0
 8011232:	4619      	mov	r1, r3
 8011234:	2004      	movs	r0, #4
 8011236:	f7ef ff10 	bl	800105a <_ZnwjPv>
 801123a:	4603      	mov	r3, r0
 801123c:	601c      	str	r4, [r3, #0]
    }
 801123e:	bf00      	nop
 8011240:	3714      	adds	r7, #20
 8011242:	46bd      	mov	sp, r7
 8011244:	bd90      	pop	{r4, r7, pc}

08011246 <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8011246:	b580      	push	{r7, lr}
 8011248:	b082      	sub	sp, #8
 801124a:	af00      	add	r7, sp, #0
 801124c:	6078      	str	r0, [r7, #4]
 801124e:	687b      	ldr	r3, [r7, #4]
 8011250:	4618      	mov	r0, r3
 8011252:	f000 f994 	bl	801157e <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>
 8011256:	687b      	ldr	r3, [r7, #4]
 8011258:	4618      	mov	r0, r3
 801125a:	3708      	adds	r7, #8
 801125c:	46bd      	mov	sp, r7
 801125e:	bd80      	pop	{r7, pc}

08011260 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011260:	b480      	push	{r7}
 8011262:	b083      	sub	sp, #12
 8011264:	af00      	add	r7, sp, #0
 8011266:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011268:	687b      	ldr	r3, [r7, #4]
 801126a:	4618      	mov	r0, r3
 801126c:	370c      	adds	r7, #12
 801126e:	46bd      	mov	sp, r7
 8011270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011274:	4770      	bx	lr

08011276 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011276:	b480      	push	{r7}
 8011278:	b083      	sub	sp, #12
 801127a:	af00      	add	r7, sp, #0
 801127c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801127e:	687b      	ldr	r3, [r7, #4]
 8011280:	4618      	mov	r0, r3
 8011282:	370c      	adds	r7, #12
 8011284:	46bd      	mov	sp, r7
 8011286:	f85d 7b04 	ldr.w	r7, [sp], #4
 801128a:	4770      	bx	lr

0801128c <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801128c:	b480      	push	{r7}
 801128e:	b083      	sub	sp, #12
 8011290:	af00      	add	r7, sp, #0
 8011292:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011294:	687b      	ldr	r3, [r7, #4]
 8011296:	4618      	mov	r0, r3
 8011298:	370c      	adds	r7, #12
 801129a:	46bd      	mov	sp, r7
 801129c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112a0:	4770      	bx	lr

080112a2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80112a2:	b480      	push	{r7}
 80112a4:	b083      	sub	sp, #12
 80112a6:	af00      	add	r7, sp, #0
 80112a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80112aa:	687b      	ldr	r3, [r7, #4]
 80112ac:	4618      	mov	r0, r3
 80112ae:	370c      	adds	r7, #12
 80112b0:	46bd      	mov	sp, r7
 80112b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112b6:	4770      	bx	lr

080112b8 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80112b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112ba:	b083      	sub	sp, #12
 80112bc:	af00      	add	r7, sp, #0
 80112be:	6078      	str	r0, [r7, #4]
 80112c0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80112c2:	6878      	ldr	r0, [r7, #4]
 80112c4:	f000 f880 	bl	80113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80112c8:	4604      	mov	r4, r0
 80112ca:	6838      	ldr	r0, [r7, #0]
 80112cc:	f7f3 fec2 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80112d0:	4603      	mov	r3, r0
 80112d2:	461a      	mov	r2, r3
 80112d4:	4621      	mov	r1, r4
 80112d6:	4628      	mov	r0, r5
 80112d8:	f000 f95e 	bl	8011598 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 80112dc:	4633      	mov	r3, r6
    }
 80112de:	4618      	mov	r0, r3
 80112e0:	370c      	adds	r7, #12
 80112e2:	46bd      	mov	sp, r7
 80112e4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080112e6 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80112e6:	b480      	push	{r7}
 80112e8:	b083      	sub	sp, #12
 80112ea:	af00      	add	r7, sp, #0
 80112ec:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80112ee:	687b      	ldr	r3, [r7, #4]
 80112f0:	4618      	mov	r0, r3
 80112f2:	370c      	adds	r7, #12
 80112f4:	46bd      	mov	sp, r7
 80112f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112fa:	4770      	bx	lr

080112fc <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80112fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112fe:	b083      	sub	sp, #12
 8011300:	af00      	add	r7, sp, #0
 8011302:	6078      	str	r0, [r7, #4]
 8011304:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011306:	6878      	ldr	r0, [r7, #4]
 8011308:	f000 f85e 	bl	80113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 801130c:	4604      	mov	r4, r0
 801130e:	6838      	ldr	r0, [r7, #0]
 8011310:	f7f3 fe19 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8011314:	4603      	mov	r3, r0
 8011316:	461a      	mov	r2, r3
 8011318:	4621      	mov	r1, r4
 801131a:	4628      	mov	r0, r5
 801131c:	f000 f953 	bl	80115c6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8011320:	4633      	mov	r3, r6
    }
 8011322:	4618      	mov	r0, r3
 8011324:	370c      	adds	r7, #12
 8011326:	46bd      	mov	sp, r7
 8011328:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801132a <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801132a:	b480      	push	{r7}
 801132c:	b083      	sub	sp, #12
 801132e:	af00      	add	r7, sp, #0
 8011330:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011332:	687b      	ldr	r3, [r7, #4]
 8011334:	4618      	mov	r0, r3
 8011336:	370c      	adds	r7, #12
 8011338:	46bd      	mov	sp, r7
 801133a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801133e:	4770      	bx	lr

08011340 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011342:	b083      	sub	sp, #12
 8011344:	af00      	add	r7, sp, #0
 8011346:	6078      	str	r0, [r7, #4]
 8011348:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801134a:	6878      	ldr	r0, [r7, #4]
 801134c:	f000 f83c 	bl	80113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011350:	4604      	mov	r4, r0
 8011352:	6838      	ldr	r0, [r7, #0]
 8011354:	f7f3 fe20 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8011358:	4603      	mov	r3, r0
 801135a:	461a      	mov	r2, r3
 801135c:	4621      	mov	r1, r4
 801135e:	4628      	mov	r0, r5
 8011360:	f000 f948 	bl	80115f4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 8011364:	4633      	mov	r3, r6
    }
 8011366:	4618      	mov	r0, r3
 8011368:	370c      	adds	r7, #12
 801136a:	46bd      	mov	sp, r7
 801136c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801136e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801136e:	b480      	push	{r7}
 8011370:	b083      	sub	sp, #12
 8011372:	af00      	add	r7, sp, #0
 8011374:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011376:	687b      	ldr	r3, [r7, #4]
 8011378:	4618      	mov	r0, r3
 801137a:	370c      	adds	r7, #12
 801137c:	46bd      	mov	sp, r7
 801137e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011382:	4770      	bx	lr

08011384 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011384:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011386:	b083      	sub	sp, #12
 8011388:	af00      	add	r7, sp, #0
 801138a:	6078      	str	r0, [r7, #4]
 801138c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801138e:	6878      	ldr	r0, [r7, #4]
 8011390:	f000 f81a 	bl	80113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011394:	4604      	mov	r4, r0
 8011396:	6838      	ldr	r0, [r7, #0]
 8011398:	f7f3 fe27 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 801139c:	4603      	mov	r3, r0
 801139e:	461a      	mov	r2, r3
 80113a0:	4621      	mov	r1, r4
 80113a2:	4628      	mov	r0, r5
 80113a4:	f000 f93d 	bl	8011622 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 80113a8:	4633      	mov	r3, r6
    }
 80113aa:	4618      	mov	r0, r3
 80113ac:	370c      	adds	r7, #12
 80113ae:	46bd      	mov	sp, r7
 80113b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080113b2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 80113b2:	b480      	push	{r7}
 80113b4:	b083      	sub	sp, #12
 80113b6:	af00      	add	r7, sp, #0
 80113b8:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 80113ba:	687b      	ldr	r3, [r7, #4]
 80113bc:	4618      	mov	r0, r3
 80113be:	370c      	adds	r7, #12
 80113c0:	46bd      	mov	sp, r7
 80113c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113c6:	4770      	bx	lr

080113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80113c8:	b480      	push	{r7}
 80113ca:	b083      	sub	sp, #12
 80113cc:	af00      	add	r7, sp, #0
 80113ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80113d0:	687b      	ldr	r3, [r7, #4]
 80113d2:	4618      	mov	r0, r3
 80113d4:	370c      	adds	r7, #12
 80113d6:	46bd      	mov	sp, r7
 80113d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113dc:	4770      	bx	lr

080113de <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80113de:	b480      	push	{r7}
 80113e0:	b083      	sub	sp, #12
 80113e2:	af00      	add	r7, sp, #0
 80113e4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80113e6:	687b      	ldr	r3, [r7, #4]
 80113e8:	4618      	mov	r0, r3
 80113ea:	370c      	adds	r7, #12
 80113ec:	46bd      	mov	sp, r7
 80113ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113f2:	4770      	bx	lr

080113f4 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80113f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80113f6:	b083      	sub	sp, #12
 80113f8:	af00      	add	r7, sp, #0
 80113fa:	6078      	str	r0, [r7, #4]
 80113fc:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80113fe:	6878      	ldr	r0, [r7, #4]
 8011400:	f000 f86a 	bl	80114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011404:	4604      	mov	r4, r0
 8011406:	6838      	ldr	r0, [r7, #0]
 8011408:	f7f3 fca0 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801140c:	4603      	mov	r3, r0
 801140e:	461a      	mov	r2, r3
 8011410:	4621      	mov	r1, r4
 8011412:	4628      	mov	r0, r5
 8011414:	f000 f91c 	bl	8011650 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011418:	4633      	mov	r3, r6
    }
 801141a:	4618      	mov	r0, r3
 801141c:	370c      	adds	r7, #12
 801141e:	46bd      	mov	sp, r7
 8011420:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011422 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011422:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011424:	b083      	sub	sp, #12
 8011426:	af00      	add	r7, sp, #0
 8011428:	6078      	str	r0, [r7, #4]
 801142a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801142c:	6878      	ldr	r0, [r7, #4]
 801142e:	f000 f853 	bl	80114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011432:	4604      	mov	r4, r0
 8011434:	6838      	ldr	r0, [r7, #0]
 8011436:	f7f3 fbe1 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801143a:	4603      	mov	r3, r0
 801143c:	461a      	mov	r2, r3
 801143e:	4621      	mov	r1, r4
 8011440:	4628      	mov	r0, r5
 8011442:	f000 f91c 	bl	801167e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011446:	4633      	mov	r3, r6
    }
 8011448:	4618      	mov	r0, r3
 801144a:	370c      	adds	r7, #12
 801144c:	46bd      	mov	sp, r7
 801144e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011450 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011450:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011452:	b083      	sub	sp, #12
 8011454:	af00      	add	r7, sp, #0
 8011456:	6078      	str	r0, [r7, #4]
 8011458:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801145a:	6878      	ldr	r0, [r7, #4]
 801145c:	f000 f83c 	bl	80114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011460:	4604      	mov	r4, r0
 8011462:	6838      	ldr	r0, [r7, #0]
 8011464:	f7f3 fbfe 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8011468:	4603      	mov	r3, r0
 801146a:	461a      	mov	r2, r3
 801146c:	4621      	mov	r1, r4
 801146e:	4628      	mov	r0, r5
 8011470:	f000 f91c 	bl	80116ac <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011474:	4633      	mov	r3, r6
    }
 8011476:	4618      	mov	r0, r3
 8011478:	370c      	adds	r7, #12
 801147a:	46bd      	mov	sp, r7
 801147c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801147e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801147e:	b480      	push	{r7}
 8011480:	b083      	sub	sp, #12
 8011482:	af00      	add	r7, sp, #0
 8011484:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011486:	687b      	ldr	r3, [r7, #4]
 8011488:	4618      	mov	r0, r3
 801148a:	370c      	adds	r7, #12
 801148c:	46bd      	mov	sp, r7
 801148e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011492:	4770      	bx	lr

08011494 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011494:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011496:	b083      	sub	sp, #12
 8011498:	af00      	add	r7, sp, #0
 801149a:	6078      	str	r0, [r7, #4]
 801149c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801149e:	6878      	ldr	r0, [r7, #4]
 80114a0:	f000 f81a 	bl	80114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80114a4:	4604      	mov	r4, r0
 80114a6:	6838      	ldr	r0, [r7, #0]
 80114a8:	f7f3 fc10 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80114ac:	4603      	mov	r3, r0
 80114ae:	461a      	mov	r2, r3
 80114b0:	4621      	mov	r1, r4
 80114b2:	4628      	mov	r0, r5
 80114b4:	f000 f911 	bl	80116da <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80114b8:	4633      	mov	r3, r6
    }
 80114ba:	4618      	mov	r0, r3
 80114bc:	370c      	adds	r7, #12
 80114be:	46bd      	mov	sp, r7
 80114c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080114c2 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 80114c2:	b480      	push	{r7}
 80114c4:	b083      	sub	sp, #12
 80114c6:	af00      	add	r7, sp, #0
 80114c8:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 80114ca:	687b      	ldr	r3, [r7, #4]
 80114cc:	4618      	mov	r0, r3
 80114ce:	370c      	adds	r7, #12
 80114d0:	46bd      	mov	sp, r7
 80114d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114d6:	4770      	bx	lr

080114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80114d8:	b480      	push	{r7}
 80114da:	b083      	sub	sp, #12
 80114dc:	af00      	add	r7, sp, #0
 80114de:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80114e0:	687b      	ldr	r3, [r7, #4]
 80114e2:	4618      	mov	r0, r3
 80114e4:	370c      	adds	r7, #12
 80114e6:	46bd      	mov	sp, r7
 80114e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114ec:	4770      	bx	lr

080114ee <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80114ee:	b480      	push	{r7}
 80114f0:	b083      	sub	sp, #12
 80114f2:	af00      	add	r7, sp, #0
 80114f4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 80114f6:	687b      	ldr	r3, [r7, #4]
 80114f8:	689b      	ldr	r3, [r3, #8]
 80114fa:	4618      	mov	r0, r3
 80114fc:	370c      	adds	r7, #12
 80114fe:	46bd      	mov	sp, r7
 8011500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011504:	4770      	bx	lr

08011506 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011506:	b480      	push	{r7}
 8011508:	b083      	sub	sp, #12
 801150a:	af00      	add	r7, sp, #0
 801150c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 801150e:	687b      	ldr	r3, [r7, #4]
 8011510:	68db      	ldr	r3, [r3, #12]
 8011512:	4618      	mov	r0, r3
 8011514:	370c      	adds	r7, #12
 8011516:	46bd      	mov	sp, r7
 8011518:	f85d 7b04 	ldr.w	r7, [sp], #4
 801151c:	4770      	bx	lr

0801151e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801151e:	b480      	push	{r7}
 8011520:	b083      	sub	sp, #12
 8011522:	af00      	add	r7, sp, #0
 8011524:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 8011526:	687b      	ldr	r3, [r7, #4]
 8011528:	689b      	ldr	r3, [r3, #8]
 801152a:	4618      	mov	r0, r3
 801152c:	370c      	adds	r7, #12
 801152e:	46bd      	mov	sp, r7
 8011530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011534:	4770      	bx	lr

08011536 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011536:	b480      	push	{r7}
 8011538:	b083      	sub	sp, #12
 801153a:	af00      	add	r7, sp, #0
 801153c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 801153e:	687b      	ldr	r3, [r7, #4]
 8011540:	68db      	ldr	r3, [r3, #12]
 8011542:	4618      	mov	r0, r3
 8011544:	370c      	adds	r7, #12
 8011546:	46bd      	mov	sp, r7
 8011548:	f85d 7b04 	ldr.w	r7, [sp], #4
 801154c:	4770      	bx	lr

0801154e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801154e:	b480      	push	{r7}
 8011550:	b083      	sub	sp, #12
 8011552:	af00      	add	r7, sp, #0
 8011554:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 8011556:	687b      	ldr	r3, [r7, #4]
 8011558:	689b      	ldr	r3, [r3, #8]
 801155a:	4618      	mov	r0, r3
 801155c:	370c      	adds	r7, #12
 801155e:	46bd      	mov	sp, r7
 8011560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011564:	4770      	bx	lr

08011566 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8011566:	b480      	push	{r7}
 8011568:	b083      	sub	sp, #12
 801156a:	af00      	add	r7, sp, #0
 801156c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 801156e:	687b      	ldr	r3, [r7, #4]
 8011570:	68db      	ldr	r3, [r3, #12]
 8011572:	4618      	mov	r0, r3
 8011574:	370c      	adds	r7, #12
 8011576:	46bd      	mov	sp, r7
 8011578:	f85d 7b04 	ldr.w	r7, [sp], #4
 801157c:	4770      	bx	lr

0801157e <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 801157e:	b580      	push	{r7, lr}
 8011580:	b082      	sub	sp, #8
 8011582:	af00      	add	r7, sp, #0
 8011584:	6078      	str	r0, [r7, #4]
 8011586:	687b      	ldr	r3, [r7, #4]
 8011588:	4618      	mov	r0, r3
 801158a:	f000 f8bd 	bl	8011708 <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>
 801158e:	687b      	ldr	r3, [r7, #4]
 8011590:	4618      	mov	r0, r3
 8011592:	3708      	adds	r7, #8
 8011594:	46bd      	mov	sp, r7
 8011596:	bd80      	pop	{r7, pc}

08011598 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011598:	b5b0      	push	{r4, r5, r7, lr}
 801159a:	b084      	sub	sp, #16
 801159c:	af00      	add	r7, sp, #0
 801159e:	7338      	strb	r0, [r7, #12]
 80115a0:	60b9      	str	r1, [r7, #8]
 80115a2:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80115a4:	68b8      	ldr	r0, [r7, #8]
 80115a6:	f7ff ff0f 	bl	80113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80115aa:	4604      	mov	r4, r0
 80115ac:	6878      	ldr	r0, [r7, #4]
 80115ae:	f7f3 fd51 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80115b2:	4603      	mov	r3, r0
 80115b4:	4619      	mov	r1, r3
 80115b6:	4620      	mov	r0, r4
 80115b8:	f000 f8b1 	bl	801171e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>
 80115bc:	462b      	mov	r3, r5
 80115be:	4618      	mov	r0, r3
 80115c0:	3710      	adds	r7, #16
 80115c2:	46bd      	mov	sp, r7
 80115c4:	bdb0      	pop	{r4, r5, r7, pc}

080115c6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80115c6:	b5b0      	push	{r4, r5, r7, lr}
 80115c8:	b084      	sub	sp, #16
 80115ca:	af00      	add	r7, sp, #0
 80115cc:	7338      	strb	r0, [r7, #12]
 80115ce:	60b9      	str	r1, [r7, #8]
 80115d0:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80115d2:	68b8      	ldr	r0, [r7, #8]
 80115d4:	f7ff fef8 	bl	80113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 80115d8:	4604      	mov	r4, r0
 80115da:	6878      	ldr	r0, [r7, #4]
 80115dc:	f7f3 fcb3 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80115e0:	4603      	mov	r3, r0
 80115e2:	4619      	mov	r1, r3
 80115e4:	4620      	mov	r0, r4
 80115e6:	f000 f8b2 	bl	801174e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>
 80115ea:	462b      	mov	r3, r5
 80115ec:	4618      	mov	r0, r3
 80115ee:	3710      	adds	r7, #16
 80115f0:	46bd      	mov	sp, r7
 80115f2:	bdb0      	pop	{r4, r5, r7, pc}

080115f4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80115f4:	b5b0      	push	{r4, r5, r7, lr}
 80115f6:	b084      	sub	sp, #16
 80115f8:	af00      	add	r7, sp, #0
 80115fa:	7338      	strb	r0, [r7, #12]
 80115fc:	60b9      	str	r1, [r7, #8]
 80115fe:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011600:	68b8      	ldr	r0, [r7, #8]
 8011602:	f7ff fee1 	bl	80113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011606:	4604      	mov	r4, r0
 8011608:	6878      	ldr	r0, [r7, #4]
 801160a:	f7f3 fcc5 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 801160e:	4603      	mov	r3, r0
 8011610:	4619      	mov	r1, r3
 8011612:	4620      	mov	r0, r4
 8011614:	f000 f8b3 	bl	801177e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>
 8011618:	462b      	mov	r3, r5
 801161a:	4618      	mov	r0, r3
 801161c:	3710      	adds	r7, #16
 801161e:	46bd      	mov	sp, r7
 8011620:	bdb0      	pop	{r4, r5, r7, pc}

08011622 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011622:	b5b0      	push	{r4, r5, r7, lr}
 8011624:	b084      	sub	sp, #16
 8011626:	af00      	add	r7, sp, #0
 8011628:	7338      	strb	r0, [r7, #12]
 801162a:	60b9      	str	r1, [r7, #8]
 801162c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801162e:	68b8      	ldr	r0, [r7, #8]
 8011630:	f7ff feca 	bl	80113c8 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 8011634:	4604      	mov	r4, r0
 8011636:	6878      	ldr	r0, [r7, #4]
 8011638:	f7f3 fcd7 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 801163c:	4603      	mov	r3, r0
 801163e:	4619      	mov	r1, r3
 8011640:	4620      	mov	r0, r4
 8011642:	f000 f8b4 	bl	80117ae <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>
 8011646:	462b      	mov	r3, r5
 8011648:	4618      	mov	r0, r3
 801164a:	3710      	adds	r7, #16
 801164c:	46bd      	mov	sp, r7
 801164e:	bdb0      	pop	{r4, r5, r7, pc}

08011650 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011650:	b5b0      	push	{r4, r5, r7, lr}
 8011652:	b084      	sub	sp, #16
 8011654:	af00      	add	r7, sp, #0
 8011656:	7338      	strb	r0, [r7, #12]
 8011658:	60b9      	str	r1, [r7, #8]
 801165a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801165c:	68b8      	ldr	r0, [r7, #8]
 801165e:	f7ff ff3b 	bl	80114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011662:	4604      	mov	r4, r0
 8011664:	6878      	ldr	r0, [r7, #4]
 8011666:	f7f3 fb71 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801166a:	4603      	mov	r3, r0
 801166c:	4619      	mov	r1, r3
 801166e:	4620      	mov	r0, r4
 8011670:	f000 f8b5 	bl	80117de <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>
 8011674:	462b      	mov	r3, r5
 8011676:	4618      	mov	r0, r3
 8011678:	3710      	adds	r7, #16
 801167a:	46bd      	mov	sp, r7
 801167c:	bdb0      	pop	{r4, r5, r7, pc}

0801167e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801167e:	b5b0      	push	{r4, r5, r7, lr}
 8011680:	b084      	sub	sp, #16
 8011682:	af00      	add	r7, sp, #0
 8011684:	7338      	strb	r0, [r7, #12]
 8011686:	60b9      	str	r1, [r7, #8]
 8011688:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801168a:	68b8      	ldr	r0, [r7, #8]
 801168c:	f7ff ff24 	bl	80114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8011690:	4604      	mov	r4, r0
 8011692:	6878      	ldr	r0, [r7, #4]
 8011694:	f7f3 fab2 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8011698:	4603      	mov	r3, r0
 801169a:	4619      	mov	r1, r3
 801169c:	4620      	mov	r0, r4
 801169e:	f000 f8af 	bl	8011800 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>
 80116a2:	462b      	mov	r3, r5
 80116a4:	4618      	mov	r0, r3
 80116a6:	3710      	adds	r7, #16
 80116a8:	46bd      	mov	sp, r7
 80116aa:	bdb0      	pop	{r4, r5, r7, pc}

080116ac <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80116ac:	b5b0      	push	{r4, r5, r7, lr}
 80116ae:	b084      	sub	sp, #16
 80116b0:	af00      	add	r7, sp, #0
 80116b2:	7338      	strb	r0, [r7, #12]
 80116b4:	60b9      	str	r1, [r7, #8]
 80116b6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80116b8:	68b8      	ldr	r0, [r7, #8]
 80116ba:	f7ff ff0d 	bl	80114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80116be:	4604      	mov	r4, r0
 80116c0:	6878      	ldr	r0, [r7, #4]
 80116c2:	f7f3 facf 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80116c6:	4603      	mov	r3, r0
 80116c8:	4619      	mov	r1, r3
 80116ca:	4620      	mov	r0, r4
 80116cc:	f000 f8a9 	bl	8011822 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>
 80116d0:	462b      	mov	r3, r5
 80116d2:	4618      	mov	r0, r3
 80116d4:	3710      	adds	r7, #16
 80116d6:	46bd      	mov	sp, r7
 80116d8:	bdb0      	pop	{r4, r5, r7, pc}

080116da <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80116da:	b5b0      	push	{r4, r5, r7, lr}
 80116dc:	b084      	sub	sp, #16
 80116de:	af00      	add	r7, sp, #0
 80116e0:	7338      	strb	r0, [r7, #12]
 80116e2:	60b9      	str	r1, [r7, #8]
 80116e4:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80116e6:	68b8      	ldr	r0, [r7, #8]
 80116e8:	f7ff fef6 	bl	80114d8 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80116ec:	4604      	mov	r4, r0
 80116ee:	6878      	ldr	r0, [r7, #4]
 80116f0:	f7f3 faec 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80116f4:	4603      	mov	r3, r0
 80116f6:	4619      	mov	r1, r3
 80116f8:	4620      	mov	r0, r4
 80116fa:	f000 f8a3 	bl	8011844 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>
 80116fe:	462b      	mov	r3, r5
 8011700:	4618      	mov	r0, r3
 8011702:	3710      	adds	r7, #16
 8011704:	46bd      	mov	sp, r7
 8011706:	bdb0      	pop	{r4, r5, r7, pc}

08011708 <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>:
 8011708:	b480      	push	{r7}
 801170a:	b083      	sub	sp, #12
 801170c:	af00      	add	r7, sp, #0
 801170e:	6078      	str	r0, [r7, #4]
 8011710:	687b      	ldr	r3, [r7, #4]
 8011712:	4618      	mov	r0, r3
 8011714:	370c      	adds	r7, #12
 8011716:	46bd      	mov	sp, r7
 8011718:	f85d 7b04 	ldr.w	r7, [sp], #4
 801171c:	4770      	bx	lr

0801171e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801171e:	b5b0      	push	{r4, r5, r7, lr}
 8011720:	b082      	sub	sp, #8
 8011722:	af00      	add	r7, sp, #0
 8011724:	6078      	str	r0, [r7, #4]
 8011726:	6039      	str	r1, [r7, #0]
 8011728:	687b      	ldr	r3, [r7, #4]
 801172a:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801172c:	4618      	mov	r0, r3
 801172e:	f000 f89a 	bl	8011866 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8011732:	4604      	mov	r4, r0
 8011734:	6838      	ldr	r0, [r7, #0]
 8011736:	f7f3 fc8d 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801173a:	4603      	mov	r3, r0
 801173c:	4619      	mov	r1, r3
 801173e:	4620      	mov	r0, r4
 8011740:	f000 f8b3 	bl	80118aa <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>
	  return {};
 8011744:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8011746:	4618      	mov	r0, r3
 8011748:	3708      	adds	r7, #8
 801174a:	46bd      	mov	sp, r7
 801174c:	bdb0      	pop	{r4, r5, r7, pc}

0801174e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>:
 801174e:	b5b0      	push	{r4, r5, r7, lr}
 8011750:	b082      	sub	sp, #8
 8011752:	af00      	add	r7, sp, #0
 8011754:	6078      	str	r0, [r7, #4]
 8011756:	6039      	str	r1, [r7, #0]
 8011758:	687b      	ldr	r3, [r7, #4]
 801175a:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801175c:	4618      	mov	r0, r3
 801175e:	f000 f882 	bl	8011866 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8011762:	4604      	mov	r4, r0
 8011764:	6838      	ldr	r0, [r7, #0]
 8011766:	f7f3 fbee 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 801176a:	4603      	mov	r3, r0
 801176c:	4619      	mov	r1, r3
 801176e:	4620      	mov	r0, r4
 8011770:	f000 f8b7 	bl	80118e2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>
	  return {};
 8011774:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8011776:	4618      	mov	r0, r3
 8011778:	3708      	adds	r7, #8
 801177a:	46bd      	mov	sp, r7
 801177c:	bdb0      	pop	{r4, r5, r7, pc}

0801177e <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>:
 801177e:	b5b0      	push	{r4, r5, r7, lr}
 8011780:	b082      	sub	sp, #8
 8011782:	af00      	add	r7, sp, #0
 8011784:	6078      	str	r0, [r7, #4]
 8011786:	6039      	str	r1, [r7, #0]
 8011788:	687b      	ldr	r3, [r7, #4]
 801178a:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801178c:	4618      	mov	r0, r3
 801178e:	f000 f86a 	bl	8011866 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8011792:	4604      	mov	r4, r0
 8011794:	6838      	ldr	r0, [r7, #0]
 8011796:	f7f3 fbff 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 801179a:	4603      	mov	r3, r0
 801179c:	4619      	mov	r1, r3
 801179e:	4620      	mov	r0, r4
 80117a0:	f000 f8b9 	bl	8011916 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>
	  return {};
 80117a4:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80117a6:	4618      	mov	r0, r3
 80117a8:	3708      	adds	r7, #8
 80117aa:	46bd      	mov	sp, r7
 80117ac:	bdb0      	pop	{r4, r5, r7, pc}

080117ae <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>:
 80117ae:	b5b0      	push	{r4, r5, r7, lr}
 80117b0:	b082      	sub	sp, #8
 80117b2:	af00      	add	r7, sp, #0
 80117b4:	6078      	str	r0, [r7, #4]
 80117b6:	6039      	str	r1, [r7, #0]
 80117b8:	687b      	ldr	r3, [r7, #4]
 80117ba:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 80117bc:	4618      	mov	r0, r3
 80117be:	f000 f852 	bl	8011866 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80117c2:	4604      	mov	r4, r0
 80117c4:	6838      	ldr	r0, [r7, #0]
 80117c6:	f7f3 fc10 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 80117ca:	4603      	mov	r3, r0
 80117cc:	4619      	mov	r1, r3
 80117ce:	4620      	mov	r0, r4
 80117d0:	f000 f8bb 	bl	801194a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>
	  return {};
 80117d4:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 80117d6:	4618      	mov	r0, r3
 80117d8:	3708      	adds	r7, #8
 80117da:	46bd      	mov	sp, r7
 80117dc:	bdb0      	pop	{r4, r5, r7, pc}

080117de <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>:
	__do_visit([](auto&& __this_mem) mutable
 80117de:	b590      	push	{r4, r7, lr}
 80117e0:	b083      	sub	sp, #12
 80117e2:	af00      	add	r7, sp, #0
 80117e4:	6078      	str	r0, [r7, #4]
 80117e6:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80117e8:	6838      	ldr	r0, [r7, #0]
 80117ea:	f7f6 ff3e 	bl	800866a <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 80117ee:	4603      	mov	r3, r0
 80117f0:	4618      	mov	r0, r3
 80117f2:	f7f6 ff45 	bl	8008680 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 80117f6:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80117f8:	4618      	mov	r0, r3
 80117fa:	370c      	adds	r7, #12
 80117fc:	46bd      	mov	sp, r7
 80117fe:	bd90      	pop	{r4, r7, pc}

08011800 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>:
 8011800:	b590      	push	{r4, r7, lr}
 8011802:	b083      	sub	sp, #12
 8011804:	af00      	add	r7, sp, #0
 8011806:	6078      	str	r0, [r7, #4]
 8011808:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 801180a:	6838      	ldr	r0, [r7, #0]
 801180c:	f7f6 feee 	bl	80085ec <_ZSt11__addressofIiEPT_RS0_>
 8011810:	4603      	mov	r3, r0
 8011812:	4618      	mov	r0, r3
 8011814:	f7f6 fef5 	bl	8008602 <_ZSt8_DestroyIiEvPT_>
	    return {};
 8011818:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 801181a:	4618      	mov	r0, r3
 801181c:	370c      	adds	r7, #12
 801181e:	46bd      	mov	sp, r7
 8011820:	bd90      	pop	{r4, r7, pc}

08011822 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>:
 8011822:	b590      	push	{r4, r7, lr}
 8011824:	b083      	sub	sp, #12
 8011826:	af00      	add	r7, sp, #0
 8011828:	6078      	str	r0, [r7, #4]
 801182a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 801182c:	6838      	ldr	r0, [r7, #0]
 801182e:	f7f6 fef2 	bl	8008616 <_ZSt11__addressofIfEPT_RS0_>
 8011832:	4603      	mov	r3, r0
 8011834:	4618      	mov	r0, r3
 8011836:	f7f6 fef9 	bl	800862c <_ZSt8_DestroyIfEvPT_>
	    return {};
 801183a:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 801183c:	4618      	mov	r0, r3
 801183e:	370c      	adds	r7, #12
 8011840:	46bd      	mov	sp, r7
 8011842:	bd90      	pop	{r4, r7, pc}

08011844 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>:
 8011844:	b590      	push	{r4, r7, lr}
 8011846:	b083      	sub	sp, #12
 8011848:	af00      	add	r7, sp, #0
 801184a:	6078      	str	r0, [r7, #4]
 801184c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 801184e:	6838      	ldr	r0, [r7, #0]
 8011850:	f7f6 fef6 	bl	8008640 <_ZSt11__addressofIbEPT_RS0_>
 8011854:	4603      	mov	r3, r0
 8011856:	4618      	mov	r0, r3
 8011858:	f7f6 fefd 	bl	8008656 <_ZSt8_DestroyIbEvPT_>
	    return {};
 801185c:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 801185e:	4618      	mov	r0, r3
 8011860:	370c      	adds	r7, #12
 8011862:	46bd      	mov	sp, r7
 8011864:	bd90      	pop	{r4, r7, pc}

08011866 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011866:	b480      	push	{r7}
 8011868:	b083      	sub	sp, #12
 801186a:	af00      	add	r7, sp, #0
 801186c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801186e:	687b      	ldr	r3, [r7, #4]
 8011870:	4618      	mov	r0, r3
 8011872:	370c      	adds	r7, #12
 8011874:	46bd      	mov	sp, r7
 8011876:	f85d 7b04 	ldr.w	r7, [sp], #4
 801187a:	4770      	bx	lr

0801187c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    addressof(_Tp& __r) noexcept
 801187c:	b580      	push	{r7, lr}
 801187e:	b082      	sub	sp, #8
 8011880:	af00      	add	r7, sp, #0
 8011882:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8011884:	6878      	ldr	r0, [r7, #4]
 8011886:	f000 f805 	bl	8011894 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 801188a:	4603      	mov	r3, r0
 801188c:	4618      	mov	r0, r3
 801188e:	3708      	adds	r7, #8
 8011890:	46bd      	mov	sp, r7
 8011892:	bd80      	pop	{r7, pc}

08011894 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8011894:	b480      	push	{r7}
 8011896:	b083      	sub	sp, #12
 8011898:	af00      	add	r7, sp, #0
 801189a:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801189c:	687b      	ldr	r3, [r7, #4]
 801189e:	4618      	mov	r0, r3
 80118a0:	370c      	adds	r7, #12
 80118a2:	46bd      	mov	sp, r7
 80118a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118a8:	4770      	bx	lr

080118aa <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80118aa:	b590      	push	{r4, r7, lr}
 80118ac:	b085      	sub	sp, #20
 80118ae:	af00      	add	r7, sp, #0
 80118b0:	6078      	str	r0, [r7, #4]
 80118b2:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80118b4:	687b      	ldr	r3, [r7, #4]
 80118b6:	4618      	mov	r0, r3
 80118b8:	f7ff ffe0 	bl	801187c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 80118bc:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80118be:	6838      	ldr	r0, [r7, #0]
 80118c0:	f7f3 fbc8 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80118c4:	4604      	mov	r4, r0
        ::new (__storage)
 80118c6:	68fb      	ldr	r3, [r7, #12]
 80118c8:	4619      	mov	r1, r3
 80118ca:	2018      	movs	r0, #24
 80118cc:	f7ef fbc5 	bl	800105a <_ZnwjPv>
 80118d0:	4603      	mov	r3, r0
 80118d2:	4621      	mov	r1, r4
 80118d4:	4618      	mov	r0, r3
 80118d6:	f012 f953 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 80118da:	bf00      	nop
 80118dc:	3714      	adds	r7, #20
 80118de:	46bd      	mov	sp, r7
 80118e0:	bd90      	pop	{r4, r7, pc}

080118e2 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 80118e2:	b590      	push	{r4, r7, lr}
 80118e4:	b085      	sub	sp, #20
 80118e6:	af00      	add	r7, sp, #0
 80118e8:	6078      	str	r0, [r7, #4]
 80118ea:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 80118ec:	687b      	ldr	r3, [r7, #4]
 80118ee:	4618      	mov	r0, r3
 80118f0:	f7ff ffc4 	bl	801187c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 80118f4:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 80118f6:	6838      	ldr	r0, [r7, #0]
 80118f8:	f7f3 fb25 	bl	8004f46 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 80118fc:	4603      	mov	r3, r0
        ::new (__storage)
 80118fe:	681c      	ldr	r4, [r3, #0]
 8011900:	68fb      	ldr	r3, [r7, #12]
 8011902:	4619      	mov	r1, r3
 8011904:	2004      	movs	r0, #4
 8011906:	f7ef fba8 	bl	800105a <_ZnwjPv>
 801190a:	4603      	mov	r3, r0
 801190c:	601c      	str	r4, [r3, #0]
    }
 801190e:	bf00      	nop
 8011910:	3714      	adds	r7, #20
 8011912:	46bd      	mov	sp, r7
 8011914:	bd90      	pop	{r4, r7, pc}

08011916 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 8011916:	b590      	push	{r4, r7, lr}
 8011918:	b085      	sub	sp, #20
 801191a:	af00      	add	r7, sp, #0
 801191c:	6078      	str	r0, [r7, #4]
 801191e:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8011920:	687b      	ldr	r3, [r7, #4]
 8011922:	4618      	mov	r0, r3
 8011924:	f7ff ffaa 	bl	801187c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 8011928:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801192a:	6838      	ldr	r0, [r7, #0]
 801192c:	f7f3 fb34 	bl	8004f98 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8011930:	4603      	mov	r3, r0
        ::new (__storage)
 8011932:	681c      	ldr	r4, [r3, #0]
 8011934:	68fb      	ldr	r3, [r7, #12]
 8011936:	4619      	mov	r1, r3
 8011938:	2004      	movs	r0, #4
 801193a:	f7ef fb8e 	bl	800105a <_ZnwjPv>
 801193e:	4603      	mov	r3, r0
 8011940:	601c      	str	r4, [r3, #0]
    }
 8011942:	bf00      	nop
 8011944:	3714      	adds	r7, #20
 8011946:	46bd      	mov	sp, r7
 8011948:	bd90      	pop	{r4, r7, pc}

0801194a <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801194a:	b590      	push	{r4, r7, lr}
 801194c:	b085      	sub	sp, #20
 801194e:	af00      	add	r7, sp, #0
 8011950:	6078      	str	r0, [r7, #4]
 8011952:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 8011954:	687b      	ldr	r3, [r7, #4]
 8011956:	4618      	mov	r0, r3
 8011958:	f7ff ff90 	bl	801187c <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 801195c:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801195e:	6838      	ldr	r0, [r7, #0]
 8011960:	f7f3 fb43 	bl	8004fea <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8011964:	4603      	mov	r3, r0
        ::new (__storage)
 8011966:	781c      	ldrb	r4, [r3, #0]
 8011968:	68fb      	ldr	r3, [r7, #12]
 801196a:	4619      	mov	r1, r3
 801196c:	2001      	movs	r0, #1
 801196e:	f7ef fb74 	bl	800105a <_ZnwjPv>
 8011972:	4603      	mov	r3, r0
 8011974:	4622      	mov	r2, r4
 8011976:	701a      	strb	r2, [r3, #0]
    }
 8011978:	bf00      	nop
 801197a:	3714      	adds	r7, #20
 801197c:	46bd      	mov	sp, r7
 801197e:	bd90      	pop	{r4, r7, pc}

08011980 <_Z41__static_initialization_and_destruction_0ii>:
 8011980:	b590      	push	{r4, r7, lr}
 8011982:	b0e7      	sub	sp, #412	; 0x19c
 8011984:	af02      	add	r7, sp, #8
 8011986:	1d3b      	adds	r3, r7, #4
 8011988:	6018      	str	r0, [r3, #0]
 801198a:	463b      	mov	r3, r7
 801198c:	6019      	str	r1, [r3, #0]
 801198e:	1d3b      	adds	r3, r7, #4
 8011990:	681b      	ldr	r3, [r3, #0]
 8011992:	2b01      	cmp	r3, #1
 8011994:	f040 819d 	bne.w	8011cd2 <_Z41__static_initialization_and_destruction_0ii+0x352>
 8011998:	463b      	mov	r3, r7
 801199a:	681b      	ldr	r3, [r3, #0]
 801199c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80119a0:	4293      	cmp	r3, r2
 80119a2:	f040 8196 	bne.w	8011cd2 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80119a6:	f107 0314 	add.w	r3, r7, #20
 80119aa:	4618      	mov	r0, r3
 80119ac:	2322      	movs	r3, #34	; 0x22
 80119ae:	461a      	mov	r2, r3
 80119b0:	2100      	movs	r1, #0
 80119b2:	f013 f963 	bl	8024c7c <memset>
 80119b6:	f107 0314 	add.w	r3, r7, #20
 80119ba:	223a      	movs	r2, #58	; 0x3a
 80119bc:	701a      	strb	r2, [r3, #0]
 80119be:	f107 0314 	add.w	r3, r7, #20
 80119c2:	2201      	movs	r2, #1
 80119c4:	705a      	strb	r2, [r3, #1]
 80119c6:	f107 0314 	add.w	r3, r7, #20
 80119ca:	220a      	movs	r2, #10
 80119cc:	709a      	strb	r2, [r3, #2]
 80119ce:	f107 0314 	add.w	r3, r7, #20
 80119d2:	220a      	movs	r2, #10
 80119d4:	70da      	strb	r2, [r3, #3]
 80119d6:	f107 0314 	add.w	r3, r7, #20
 80119da:	222c      	movs	r2, #44	; 0x2c
 80119dc:	711a      	strb	r2, [r3, #4]
 80119de:	f107 0314 	add.w	r3, r7, #20
 80119e2:	220c      	movs	r2, #12
 80119e4:	715a      	strb	r2, [r3, #5]
 80119e6:	f107 0314 	add.w	r3, r7, #20
 80119ea:	222e      	movs	r2, #46	; 0x2e
 80119ec:	719a      	strb	r2, [r3, #6]
 80119ee:	f107 0314 	add.w	r3, r7, #20
 80119f2:	220b      	movs	r2, #11
 80119f4:	71da      	strb	r2, [r3, #7]
 80119f6:	f107 0314 	add.w	r3, r7, #20
 80119fa:	225b      	movs	r2, #91	; 0x5b
 80119fc:	721a      	strb	r2, [r3, #8]
 80119fe:	f107 0314 	add.w	r3, r7, #20
 8011a02:	220d      	movs	r2, #13
 8011a04:	725a      	strb	r2, [r3, #9]
 8011a06:	f107 0314 	add.w	r3, r7, #20
 8011a0a:	225d      	movs	r2, #93	; 0x5d
 8011a0c:	729a      	strb	r2, [r3, #10]
 8011a0e:	f107 0314 	add.w	r3, r7, #20
 8011a12:	220e      	movs	r2, #14
 8011a14:	72da      	strb	r2, [r3, #11]
 8011a16:	f107 0314 	add.w	r3, r7, #20
 8011a1a:	227c      	movs	r2, #124	; 0x7c
 8011a1c:	731a      	strb	r2, [r3, #12]
 8011a1e:	f107 0314 	add.w	r3, r7, #20
 8011a22:	2215      	movs	r2, #21
 8011a24:	735a      	strb	r2, [r3, #13]
 8011a26:	f107 0314 	add.w	r3, r7, #20
 8011a2a:	2226      	movs	r2, #38	; 0x26
 8011a2c:	739a      	strb	r2, [r3, #14]
 8011a2e:	f107 0314 	add.w	r3, r7, #20
 8011a32:	2216      	movs	r2, #22
 8011a34:	73da      	strb	r2, [r3, #15]
 8011a36:	f107 0314 	add.w	r3, r7, #20
 8011a3a:	222b      	movs	r2, #43	; 0x2b
 8011a3c:	741a      	strb	r2, [r3, #16]
 8011a3e:	f107 0314 	add.w	r3, r7, #20
 8011a42:	221f      	movs	r2, #31
 8011a44:	745a      	strb	r2, [r3, #17]
 8011a46:	f107 0314 	add.w	r3, r7, #20
 8011a4a:	222d      	movs	r2, #45	; 0x2d
 8011a4c:	749a      	strb	r2, [r3, #18]
 8011a4e:	f107 0314 	add.w	r3, r7, #20
 8011a52:	2220      	movs	r2, #32
 8011a54:	74da      	strb	r2, [r3, #19]
 8011a56:	f107 0314 	add.w	r3, r7, #20
 8011a5a:	222a      	movs	r2, #42	; 0x2a
 8011a5c:	751a      	strb	r2, [r3, #20]
 8011a5e:	f107 0314 	add.w	r3, r7, #20
 8011a62:	2221      	movs	r2, #33	; 0x21
 8011a64:	755a      	strb	r2, [r3, #21]
 8011a66:	f107 0314 	add.w	r3, r7, #20
 8011a6a:	222f      	movs	r2, #47	; 0x2f
 8011a6c:	759a      	strb	r2, [r3, #22]
 8011a6e:	f107 0314 	add.w	r3, r7, #20
 8011a72:	2222      	movs	r2, #34	; 0x22
 8011a74:	75da      	strb	r2, [r3, #23]
 8011a76:	f107 0314 	add.w	r3, r7, #20
 8011a7a:	225e      	movs	r2, #94	; 0x5e
 8011a7c:	761a      	strb	r2, [r3, #24]
 8011a7e:	f107 0314 	add.w	r3, r7, #20
 8011a82:	2223      	movs	r2, #35	; 0x23
 8011a84:	765a      	strb	r2, [r3, #25]
 8011a86:	f107 0314 	add.w	r3, r7, #20
 8011a8a:	2225      	movs	r2, #37	; 0x25
 8011a8c:	769a      	strb	r2, [r3, #26]
 8011a8e:	f107 0314 	add.w	r3, r7, #20
 8011a92:	2224      	movs	r2, #36	; 0x24
 8011a94:	76da      	strb	r2, [r3, #27]
 8011a96:	f107 0314 	add.w	r3, r7, #20
 8011a9a:	2228      	movs	r2, #40	; 0x28
 8011a9c:	771a      	strb	r2, [r3, #28]
 8011a9e:	f107 0314 	add.w	r3, r7, #20
 8011aa2:	2226      	movs	r2, #38	; 0x26
 8011aa4:	775a      	strb	r2, [r3, #29]
 8011aa6:	f107 0314 	add.w	r3, r7, #20
 8011aaa:	2229      	movs	r2, #41	; 0x29
 8011aac:	779a      	strb	r2, [r3, #30]
 8011aae:	f107 0314 	add.w	r3, r7, #20
 8011ab2:	2227      	movs	r2, #39	; 0x27
 8011ab4:	77da      	strb	r2, [r3, #31]
 8011ab6:	f107 0314 	add.w	r3, r7, #20
 8011aba:	2225      	movs	r2, #37	; 0x25
 8011abc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8011ac0:	f107 030c 	add.w	r3, r7, #12
 8011ac4:	f107 0214 	add.w	r2, r7, #20
 8011ac8:	601a      	str	r2, [r3, #0]
 8011aca:	f107 030c 	add.w	r3, r7, #12
 8011ace:	2211      	movs	r2, #17
 8011ad0:	605a      	str	r2, [r3, #4]
 8011ad2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8011ad6:	4618      	mov	r0, r3
 8011ad8:	f7f0 f938 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8011adc:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8011ae0:	f107 020c 	add.w	r2, r7, #12
 8011ae4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8011ae8:	9300      	str	r3, [sp, #0]
 8011aea:	460b      	mov	r3, r1
 8011aec:	ca06      	ldmia	r2, {r1, r2}
 8011aee:	4885      	ldr	r0, [pc, #532]	; (8011d04 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8011af0:	f7f0 f944 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8011af4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8011af8:	4618      	mov	r0, r3
 8011afa:	f7f0 f933 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8011afe:	2305      	movs	r3, #5
 8011b00:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8011b04:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8011b08:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011b0c:	497e      	ldr	r1, [pc, #504]	; (8011d08 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8011b0e:	4618      	mov	r0, r3
 8011b10:	f7ef faf2 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8011b14:	2306      	movs	r3, #6
 8011b16:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8011b1a:	f207 1263 	addw	r2, r7, #355	; 0x163
 8011b1e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011b22:	331c      	adds	r3, #28
 8011b24:	4979      	ldr	r1, [pc, #484]	; (8011d0c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8011b26:	4618      	mov	r0, r3
 8011b28:	f7ef fb0e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8011b2c:	2307      	movs	r3, #7
 8011b2e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8011b32:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8011b36:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011b3a:	3338      	adds	r3, #56	; 0x38
 8011b3c:	4974      	ldr	r1, [pc, #464]	; (8011d10 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8011b3e:	4618      	mov	r0, r3
 8011b40:	f7ef fb02 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8011b44:	2308      	movs	r3, #8
 8011b46:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8011b4a:	f207 1265 	addw	r2, r7, #357	; 0x165
 8011b4e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011b52:	3354      	adds	r3, #84	; 0x54
 8011b54:	496f      	ldr	r1, [pc, #444]	; (8011d14 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8011b56:	4618      	mov	r0, r3
 8011b58:	f7ef face 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8011b5c:	2309      	movs	r3, #9
 8011b5e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8011b62:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8011b66:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011b6a:	3370      	adds	r3, #112	; 0x70
 8011b6c:	496a      	ldr	r1, [pc, #424]	; (8011d18 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8011b6e:	4618      	mov	r0, r3
 8011b70:	f7ef fb12 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8011b74:	2310      	movs	r3, #16
 8011b76:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8011b7a:	f207 1267 	addw	r2, r7, #359	; 0x167
 8011b7e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011b82:	338c      	adds	r3, #140	; 0x8c
 8011b84:	4965      	ldr	r1, [pc, #404]	; (8011d1c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8011b86:	4618      	mov	r0, r3
 8011b88:	f7ef fb2e 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8011b8c:	2311      	movs	r3, #17
 8011b8e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8011b92:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8011b96:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011b9a:	33a8      	adds	r3, #168	; 0xa8
 8011b9c:	4960      	ldr	r1, [pc, #384]	; (8011d20 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8011b9e:	4618      	mov	r0, r3
 8011ba0:	f7ef fafa 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8011ba4:	2312      	movs	r3, #18
 8011ba6:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8011baa:	f207 1269 	addw	r2, r7, #361	; 0x169
 8011bae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011bb2:	33c4      	adds	r3, #196	; 0xc4
 8011bb4:	495b      	ldr	r1, [pc, #364]	; (8011d24 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8011bb6:	4618      	mov	r0, r3
 8011bb8:	f7ef fa9e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8011bbc:	2313      	movs	r3, #19
 8011bbe:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8011bc2:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8011bc6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011bca:	33e0      	adds	r3, #224	; 0xe0
 8011bcc:	4956      	ldr	r1, [pc, #344]	; (8011d28 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8011bce:	4618      	mov	r0, r3
 8011bd0:	f7ef faba 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8011bd4:	2314      	movs	r3, #20
 8011bd6:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8011bda:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8011bde:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011be2:	33fc      	adds	r3, #252	; 0xfc
 8011be4:	4951      	ldr	r1, [pc, #324]	; (8011d2c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8011be6:	4618      	mov	r0, r3
 8011be8:	f7ef fb26 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8011bec:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8011bf0:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8011bf4:	601a      	str	r2, [r3, #0]
 8011bf6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8011bfa:	220a      	movs	r2, #10
 8011bfc:	605a      	str	r2, [r3, #4]
 8011bfe:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011c02:	4618      	mov	r0, r3
 8011c04:	f7f0 f947 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8011c08:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8011c0c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8011c10:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011c14:	9300      	str	r3, [sp, #0]
 8011c16:	460b      	mov	r3, r1
 8011c18:	ca06      	ldmia	r2, {r1, r2}
 8011c1a:	4845      	ldr	r0, [pc, #276]	; (8011d30 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8011c1c:	f7f0 f953 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8011c20:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8011c24:	4618      	mov	r0, r3
 8011c26:	f7f0 f942 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8011c2a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8011c2e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8011c32:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8011c36:	429c      	cmp	r4, r3
 8011c38:	d004      	beq.n	8011c44 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8011c3a:	3c1c      	subs	r4, #28
 8011c3c:	4620      	mov	r0, r4
 8011c3e:	f7ef fa4e 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8011c42:	e7f6      	b.n	8011c32 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8011c44:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8011c48:	2200      	movs	r2, #0
 8011c4a:	601a      	str	r2, [r3, #0]
 8011c4c:	605a      	str	r2, [r3, #4]
 8011c4e:	609a      	str	r2, [r3, #8]
 8011c50:	233c      	movs	r3, #60	; 0x3c
 8011c52:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8011c56:	231b      	movs	r3, #27
 8011c58:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8011c5c:	231c      	movs	r3, #28
 8011c5e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8011c62:	233e      	movs	r3, #62	; 0x3e
 8011c64:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8011c68:	2319      	movs	r3, #25
 8011c6a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8011c6e:	231a      	movs	r3, #26
 8011c70:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8011c74:	233d      	movs	r3, #61	; 0x3d
 8011c76:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8011c7a:	2318      	movs	r3, #24
 8011c7c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8011c80:	231d      	movs	r3, #29
 8011c82:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8011c86:	2321      	movs	r3, #33	; 0x21
 8011c88:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8011c8c:	2317      	movs	r3, #23
 8011c8e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8011c92:	231e      	movs	r3, #30
 8011c94:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8011c98:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8011c9c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8011ca0:	2304      	movs	r3, #4
 8011ca2:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8011ca6:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8011caa:	4618      	mov	r0, r3
 8011cac:	f7f0 f93b 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8011cb0:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8011cb4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8011cb8:	9300      	str	r3, [sp, #0]
 8011cba:	4613      	mov	r3, r2
 8011cbc:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8011cc0:	ca06      	ldmia	r2, {r1, r2}
 8011cc2:	481c      	ldr	r0, [pc, #112]	; (8011d34 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8011cc4:	f7f0 f947 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8011cc8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8011ccc:	4618      	mov	r0, r3
 8011cce:	f7f0 f936 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8011cd2:	1d3b      	adds	r3, r7, #4
 8011cd4:	681b      	ldr	r3, [r3, #0]
 8011cd6:	2b00      	cmp	r3, #0
 8011cd8:	d10e      	bne.n	8011cf8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8011cda:	463b      	mov	r3, r7
 8011cdc:	681b      	ldr	r3, [r3, #0]
 8011cde:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011ce2:	4293      	cmp	r3, r2
 8011ce4:	d108      	bne.n	8011cf8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8011ce6:	4813      	ldr	r0, [pc, #76]	; (8011d34 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8011ce8:	f7f7 fda4 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8011cec:	4810      	ldr	r0, [pc, #64]	; (8011d30 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8011cee:	f7f7 fdae 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8011cf2:	4804      	ldr	r0, [pc, #16]	; (8011d04 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8011cf4:	f7f7 fdb8 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8011cf8:	bf00      	nop
 8011cfa:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8011cfe:	46bd      	mov	sp, r7
 8011d00:	bd90      	pop	{r4, r7, pc}
 8011d02:	bf00      	nop
 8011d04:	20000350 	.word	0x20000350
 8011d08:	080295ac 	.word	0x080295ac
 8011d0c:	080295b4 	.word	0x080295b4
 8011d10:	080295bc 	.word	0x080295bc
 8011d14:	080295c4 	.word	0x080295c4
 8011d18:	080295cc 	.word	0x080295cc
 8011d1c:	080295d4 	.word	0x080295d4
 8011d20:	080295d8 	.word	0x080295d8
 8011d24:	080295e0 	.word	0x080295e0
 8011d28:	080295e8 	.word	0x080295e8
 8011d2c:	080295f0 	.word	0x080295f0
 8011d30:	20000368 	.word	0x20000368
 8011d34:	20000380 	.word	0x20000380

08011d38 <_GLOBAL__sub_I__ZN5LexerC2Ev>:
 8011d38:	b580      	push	{r7, lr}
 8011d3a:	af00      	add	r7, sp, #0
 8011d3c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011d40:	2001      	movs	r0, #1
 8011d42:	f7ff fe1d 	bl	8011980 <_Z41__static_initialization_and_destruction_0ii>
 8011d46:	bd80      	pop	{r7, pc}

08011d48 <_GLOBAL__sub_D__ZN5LexerC2Ev>:
 8011d48:	b580      	push	{r7, lr}
 8011d4a:	af00      	add	r7, sp, #0
 8011d4c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011d50:	2000      	movs	r0, #0
 8011d52:	f7ff fe15 	bl	8011980 <_Z41__static_initialization_and_destruction_0ii>
 8011d56:	bd80      	pop	{r7, pc}

08011d58 <_ZNSt7__cxx119to_stringEi>:
  // NB: (v)snprintf vs sprintf.

  // DR 1261.
  inline string
  to_string(int __val)
  { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
 8011d58:	b580      	push	{r7, lr}
 8011d5a:	b084      	sub	sp, #16
 8011d5c:	af02      	add	r7, sp, #8
 8011d5e:	6078      	str	r0, [r7, #4]
 8011d60:	6039      	str	r1, [r7, #0]
					   "%d", __val); }
 8011d62:	6878      	ldr	r0, [r7, #4]
 8011d64:	683b      	ldr	r3, [r7, #0]
 8011d66:	9300      	str	r3, [sp, #0]
 8011d68:	4b04      	ldr	r3, [pc, #16]	; (8011d7c <_ZNSt7__cxx119to_stringEi+0x24>)
 8011d6a:	2210      	movs	r2, #16
 8011d6c:	4904      	ldr	r1, [pc, #16]	; (8011d80 <_ZNSt7__cxx119to_stringEi+0x28>)
 8011d6e:	f000 fa73 	bl	8012258 <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>
 8011d72:	6878      	ldr	r0, [r7, #4]
 8011d74:	3708      	adds	r7, #8
 8011d76:	46bd      	mov	sp, r7
 8011d78:	bd80      	pop	{r7, pc}
 8011d7a:	bf00      	nop
 8011d7c:	080295f4 	.word	0x080295f4
 8011d80:	08026699 	.word	0x08026699

08011d84 <_ZNSt7__cxx119to_stringEj>:

  inline string
  to_string(unsigned __val)
  { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
 8011d84:	b580      	push	{r7, lr}
 8011d86:	b084      	sub	sp, #16
 8011d88:	af02      	add	r7, sp, #8
 8011d8a:	6078      	str	r0, [r7, #4]
 8011d8c:	6039      	str	r1, [r7, #0]
					   4 * sizeof(unsigned),
					   "%u", __val); }
 8011d8e:	6878      	ldr	r0, [r7, #4]
 8011d90:	683b      	ldr	r3, [r7, #0]
 8011d92:	9300      	str	r3, [sp, #0]
 8011d94:	4b04      	ldr	r3, [pc, #16]	; (8011da8 <_ZNSt7__cxx119to_stringEj+0x24>)
 8011d96:	2210      	movs	r2, #16
 8011d98:	4904      	ldr	r1, [pc, #16]	; (8011dac <_ZNSt7__cxx119to_stringEj+0x28>)
 8011d9a:	f000 fa5d 	bl	8012258 <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>
 8011d9e:	6878      	ldr	r0, [r7, #4]
 8011da0:	3708      	adds	r7, #8
 8011da2:	46bd      	mov	sp, r7
 8011da4:	bd80      	pop	{r7, pc}
 8011da6:	bf00      	nop
 8011da8:	080295f8 	.word	0x080295f8
 8011dac:	08026699 	.word	0x08026699

08011db0 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>:
namespace
{

// todo dober miejsce
void assert_arguments(int expected, arglist arguments)
{
 8011db0:	b580      	push	{r7, lr}
 8011db2:	b0a6      	sub	sp, #152	; 0x98
 8011db4:	af00      	add	r7, sp, #0
 8011db6:	6078      	str	r0, [r7, #4]
 8011db8:	6039      	str	r1, [r7, #0]
	if(arguments.size() != (unsigned int)expected)
 8011dba:	6838      	ldr	r0, [r7, #0]
 8011dbc:	f7f0 fcf7 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8011dc0:	4602      	mov	r2, r0
 8011dc2:	687b      	ldr	r3, [r7, #4]
 8011dc4:	429a      	cmp	r2, r3
 8011dc6:	bf14      	ite	ne
 8011dc8:	2301      	movne	r3, #1
 8011dca:	2300      	moveq	r3, #0
 8011dcc:	b2db      	uxtb	r3, r3
 8011dce:	2b00      	cmp	r3, #0
 8011dd0:	d053      	beq.n	8011e7a <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xca>
	{
		Transmitter::report_error(std::string("expected " + std::to_string(expected) + " arguments, found " + std::to_string(arguments.size()) + "\n"));
 8011dd2:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8011dd6:	6879      	ldr	r1, [r7, #4]
 8011dd8:	4618      	mov	r0, r3
 8011dda:	f7ff ffbd 	bl	8011d58 <_ZNSt7__cxx119to_stringEi>
 8011dde:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8011de2:	f107 0268 	add.w	r2, r7, #104	; 0x68
 8011de6:	4927      	ldr	r1, [pc, #156]	; (8011e84 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xd4>)
 8011de8:	4618      	mov	r0, r3
 8011dea:	f000 fa6d 	bl	80122c8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
 8011dee:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8011df2:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8011df6:	4a24      	ldr	r2, [pc, #144]	; (8011e88 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xd8>)
 8011df8:	4618      	mov	r0, r3
 8011dfa:	f7fc fa4f 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8011dfe:	6838      	ldr	r0, [r7, #0]
 8011e00:	f7f0 fcd5 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8011e04:	4602      	mov	r2, r0
 8011e06:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8011e0a:	4611      	mov	r1, r2
 8011e0c:	4618      	mov	r0, r3
 8011e0e:	f7ff ffb9 	bl	8011d84 <_ZNSt7__cxx119to_stringEj>
 8011e12:	f107 0320 	add.w	r3, r7, #32
 8011e16:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8011e1a:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8011e1e:	4618      	mov	r0, r3
 8011e20:	f000 fa6a 	bl	80122f8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>
 8011e24:	f107 0308 	add.w	r3, r7, #8
 8011e28:	f107 0120 	add.w	r1, r7, #32
 8011e2c:	4a17      	ldr	r2, [pc, #92]	; (8011e8c <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE+0xdc>)
 8011e2e:	4618      	mov	r0, r3
 8011e30:	f7fc fa34 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8011e34:	f107 0308 	add.w	r3, r7, #8
 8011e38:	4618      	mov	r0, r3
 8011e3a:	f006 fca3 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011e3e:	f107 0308 	add.w	r3, r7, #8
 8011e42:	4618      	mov	r0, r3
 8011e44:	f011 fccd 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011e48:	f107 0320 	add.w	r3, r7, #32
 8011e4c:	4618      	mov	r0, r3
 8011e4e:	f011 fcc8 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011e52:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8011e56:	4618      	mov	r0, r3
 8011e58:	f011 fcc3 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011e5c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8011e60:	4618      	mov	r0, r3
 8011e62:	f011 fcbe 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011e66:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8011e6a:	4618      	mov	r0, r3
 8011e6c:	f011 fcb9 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011e70:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8011e74:	4618      	mov	r0, r3
 8011e76:	f011 fcb4 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8011e7a:	bf00      	nop
 8011e7c:	3798      	adds	r7, #152	; 0x98
 8011e7e:	46bd      	mov	sp, r7
 8011e80:	bd80      	pop	{r7, pc}
 8011e82:	bf00      	nop
 8011e84:	080295fc 	.word	0x080295fc
 8011e88:	08029608 	.word	0x08029608
 8011e8c:	0802961c 	.word	0x0802961c

08011e90 <_ZN12_GLOBAL__N_16resizeER6SymbolSt6vectorIP10ExpressionSaIS4_EE>:

void resize(Symbol& var, arglist arguments)
{
 8011e90:	b590      	push	{r4, r7, lr}
 8011e92:	b08f      	sub	sp, #60	; 0x3c
 8011e94:	af00      	add	r7, sp, #0
 8011e96:	6078      	str	r0, [r7, #4]
 8011e98:	6039      	str	r1, [r7, #0]
	assert_arguments(1, arguments);
 8011e9a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011e9e:	6839      	ldr	r1, [r7, #0]
 8011ea0:	4618      	mov	r0, r3
 8011ea2:	f7fc f97e 	bl	800e1a2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011ea6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011eaa:	4619      	mov	r1, r3
 8011eac:	2001      	movs	r0, #1
 8011eae:	f7ff ff7f 	bl	8011db0 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>
 8011eb2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011eb6:	4618      	mov	r0, r3
 8011eb8:	f7fc f9b0 	bl	800e21c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	Symbol size_symbol = EVALUATE(arguments[0]);
 8011ebc:	f7fa f8f6 	bl	800c0ac <_ZN21Expression_calculator12get_instanceEv>
 8011ec0:	4604      	mov	r4, r0
 8011ec2:	2100      	movs	r1, #0
 8011ec4:	6838      	ldr	r0, [r7, #0]
 8011ec6:	f7f0 fc82 	bl	80027ce <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 8011eca:	4603      	mov	r3, r0
 8011ecc:	681a      	ldr	r2, [r3, #0]
 8011ece:	f107 0308 	add.w	r3, r7, #8
 8011ed2:	4621      	mov	r1, r4
 8011ed4:	4618      	mov	r0, r3
 8011ed6:	f7fa f967 	bl	800c1a8 <_ZN21Expression_calculator8evaluateEP10Expression>
	size_symbol.assert_type(SYMBOL_INT);
 8011eda:	f107 0308 	add.w	r3, r7, #8
 8011ede:	2100      	movs	r1, #0
 8011ee0:	4618      	mov	r0, r3
 8011ee2:	f005 fee3 	bl	8017cac <_ZN6Symbol11assert_typeE11symbol_type>
	int size = std::get<int>(size_symbol.value);
 8011ee6:	f107 0308 	add.w	r3, r7, #8
 8011eea:	3304      	adds	r3, #4
 8011eec:	4618      	mov	r0, r3
 8011eee:	f7ef fe07 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8011ef2:	4603      	mov	r3, r0
 8011ef4:	681b      	ldr	r3, [r3, #0]
 8011ef6:	637b      	str	r3, [r7, #52]	; 0x34
	var.resize(size);
 8011ef8:	6b79      	ldr	r1, [r7, #52]	; 0x34
 8011efa:	6878      	ldr	r0, [r7, #4]
 8011efc:	f005 ff04 	bl	8017d08 <_ZN6Symbol6resizeEi>
	Symbol size_symbol = EVALUATE(arguments[0]);
 8011f00:	f107 0308 	add.w	r3, r7, #8
 8011f04:	4618      	mov	r0, r3
 8011f06:	f7ef fa49 	bl	800139c <_ZN6SymbolD1Ev>
}
 8011f0a:	bf00      	nop
 8011f0c:	373c      	adds	r7, #60	; 0x3c
 8011f0e:	46bd      	mov	sp, r7
 8011f10:	bd90      	pop	{r4, r7, pc}

08011f12 <_ZN12_GLOBAL__N_15roundER6SymbolSt6vectorIP10ExpressionSaIS4_EE>:

void round(Symbol& var, arglist arguments)
{
 8011f12:	b580      	push	{r7, lr}
 8011f14:	b086      	sub	sp, #24
 8011f16:	af00      	add	r7, sp, #0
 8011f18:	6078      	str	r0, [r7, #4]
 8011f1a:	6039      	str	r1, [r7, #0]
	assert_arguments(0, arguments);
 8011f1c:	f107 030c 	add.w	r3, r7, #12
 8011f20:	6839      	ldr	r1, [r7, #0]
 8011f22:	4618      	mov	r0, r3
 8011f24:	f7fc f93d 	bl	800e1a2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011f28:	f107 030c 	add.w	r3, r7, #12
 8011f2c:	4619      	mov	r1, r3
 8011f2e:	2000      	movs	r0, #0
 8011f30:	f7ff ff3e 	bl	8011db0 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>
 8011f34:	f107 030c 	add.w	r3, r7, #12
 8011f38:	4618      	mov	r0, r3
 8011f3a:	f7fc f96f 	bl	800e21c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	var.round();
 8011f3e:	6878      	ldr	r0, [r7, #4]
 8011f40:	f005 ff12 	bl	8017d68 <_ZN6Symbol5roundEv>
}
 8011f44:	bf00      	nop
 8011f46:	3718      	adds	r7, #24
 8011f48:	46bd      	mov	sp, r7
 8011f4a:	bd80      	pop	{r7, pc}

08011f4c <_ZN12_GLOBAL__N_18floatifyER6SymbolSt6vectorIP10ExpressionSaIS4_EE>:

void floatify(Symbol& var, arglist arguments)
{
 8011f4c:	b580      	push	{r7, lr}
 8011f4e:	b086      	sub	sp, #24
 8011f50:	af00      	add	r7, sp, #0
 8011f52:	6078      	str	r0, [r7, #4]
 8011f54:	6039      	str	r1, [r7, #0]
	assert_arguments(0, arguments);
 8011f56:	f107 030c 	add.w	r3, r7, #12
 8011f5a:	6839      	ldr	r1, [r7, #0]
 8011f5c:	4618      	mov	r0, r3
 8011f5e:	f7fc f920 	bl	800e1a2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8011f62:	f107 030c 	add.w	r3, r7, #12
 8011f66:	4619      	mov	r1, r3
 8011f68:	2000      	movs	r0, #0
 8011f6a:	f7ff ff21 	bl	8011db0 <_ZN12_GLOBAL__N_116assert_argumentsEiSt6vectorIP10ExpressionSaIS2_EE>
 8011f6e:	f107 030c 	add.w	r3, r7, #12
 8011f72:	4618      	mov	r0, r3
 8011f74:	f7fc f952 	bl	800e21c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	var.floatify();
 8011f78:	6878      	ldr	r0, [r7, #4]
 8011f7a:	f005 ff3f 	bl	8017dfc <_ZN6Symbol8floatifyEv>
}
 8011f7e:	bf00      	nop
 8011f80:	3718      	adds	r7, #24
 8011f82:	46bd      	mov	sp, r7
 8011f84:	bd80      	pop	{r7, pc}

08011f86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8011f86:	b580      	push	{r7, lr}
 8011f88:	b082      	sub	sp, #8
 8011f8a:	af00      	add	r7, sp, #0
 8011f8c:	6078      	str	r0, [r7, #4]
 8011f8e:	6878      	ldr	r0, [r7, #4]
 8011f90:	f000 fa08 	bl	80123a4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEED1Ev>
 8011f94:	687b      	ldr	r3, [r7, #4]
 8011f96:	4618      	mov	r0, r3
 8011f98:	3708      	adds	r7, #8
 8011f9a:	46bd      	mov	sp, r7
 8011f9c:	bd80      	pop	{r7, pc}

08011f9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>:
      _Rb_tree() = default;
 8011f9e:	b580      	push	{r7, lr}
 8011fa0:	b082      	sub	sp, #8
 8011fa2:	af00      	add	r7, sp, #0
 8011fa4:	6078      	str	r0, [r7, #4]
 8011fa6:	687b      	ldr	r3, [r7, #4]
 8011fa8:	4618      	mov	r0, r3
 8011faa:	f000 f9e6 	bl	801237a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>
 8011fae:	687b      	ldr	r3, [r7, #4]
 8011fb0:	4618      	mov	r0, r3
 8011fb2:	3708      	adds	r7, #8
 8011fb4:	46bd      	mov	sp, r7
 8011fb6:	bd80      	pop	{r7, pc}

08011fb8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>:
      map() = default;
 8011fb8:	b580      	push	{r7, lr}
 8011fba:	b082      	sub	sp, #8
 8011fbc:	af00      	add	r7, sp, #0
 8011fbe:	6078      	str	r0, [r7, #4]
 8011fc0:	687b      	ldr	r3, [r7, #4]
 8011fc2:	4618      	mov	r0, r3
 8011fc4:	f7ff ffeb 	bl	8011f9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>
 8011fc8:	687b      	ldr	r3, [r7, #4]
 8011fca:	4618      	mov	r0, r3
 8011fcc:	3708      	adds	r7, #8
 8011fce:	46bd      	mov	sp, r7
 8011fd0:	bd80      	pop	{r7, pc}

08011fd2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>:
      ~map() = default;
 8011fd2:	b580      	push	{r7, lr}
 8011fd4:	b082      	sub	sp, #8
 8011fd6:	af00      	add	r7, sp, #0
 8011fd8:	6078      	str	r0, [r7, #4]
 8011fda:	687b      	ldr	r3, [r7, #4]
 8011fdc:	4618      	mov	r0, r3
 8011fde:	f000 f9ed 	bl	80123bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>
 8011fe2:	687b      	ldr	r3, [r7, #4]
 8011fe4:	4618      	mov	r0, r3
 8011fe6:	3708      	adds	r7, #8
 8011fe8:	46bd      	mov	sp, r7
 8011fea:	bd80      	pop	{r7, pc}

08011fec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>:
 8011fec:	b580      	push	{r7, lr}
 8011fee:	b082      	sub	sp, #8
 8011ff0:	af00      	add	r7, sp, #0
 8011ff2:	6078      	str	r0, [r7, #4]
 8011ff4:	687b      	ldr	r3, [r7, #4]
 8011ff6:	4618      	mov	r0, r3
 8011ff8:	f011 fbf3 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011ffc:	687b      	ldr	r3, [r7, #4]
 8011ffe:	4618      	mov	r0, r3
 8012000:	3708      	adds	r7, #8
 8012002:	46bd      	mov	sp, r7
 8012004:	bd80      	pop	{r7, pc}
	...

08012008 <_ZN14Method_handlerC1Ev>:

}

Method_handler::Method_handler()
 8012008:	b590      	push	{r4, r7, lr}
 801200a:	b0a1      	sub	sp, #132	; 0x84
 801200c:	af00      	add	r7, sp, #0
 801200e:	6078      	str	r0, [r7, #4]
 8012010:	687b      	ldr	r3, [r7, #4]
 8012012:	4618      	mov	r0, r3
 8012014:	f7ff ffd0 	bl	8011fb8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>
{
	ADD_METHOD(round);
 8012018:	687c      	ldr	r4, [r7, #4]
 801201a:	4b26      	ldr	r3, [pc, #152]	; (80120b4 <_ZN14Method_handlerC1Ev+0xac>)
 801201c:	62fb      	str	r3, [r7, #44]	; 0x2c
 801201e:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8012022:	f107 0310 	add.w	r3, r7, #16
 8012026:	4924      	ldr	r1, [pc, #144]	; (80120b8 <_ZN14Method_handlerC1Ev+0xb0>)
 8012028:	4618      	mov	r0, r3
 801202a:	f000 f9dc 	bl	80123e6 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA6_KcLb1EEEOT_RKSF_>
 801202e:	f107 0308 	add.w	r3, r7, #8
 8012032:	f107 0210 	add.w	r2, r7, #16
 8012036:	4621      	mov	r1, r4
 8012038:	4618      	mov	r0, r3
 801203a:	f000 f9f9 	bl	8012430 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>
 801203e:	f107 0310 	add.w	r3, r7, #16
 8012042:	4618      	mov	r0, r3
 8012044:	f7ff ffd2 	bl	8011fec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
	ADD_METHOD(floatify);
 8012048:	687c      	ldr	r4, [r7, #4]
 801204a:	4b1c      	ldr	r3, [pc, #112]	; (80120bc <_ZN14Method_handlerC1Ev+0xb4>)
 801204c:	657b      	str	r3, [r7, #84]	; 0x54
 801204e:	f107 0254 	add.w	r2, r7, #84	; 0x54
 8012052:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8012056:	491a      	ldr	r1, [pc, #104]	; (80120c0 <_ZN14Method_handlerC1Ev+0xb8>)
 8012058:	4618      	mov	r0, r3
 801205a:	f000 f9fd 	bl	8012458 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA9_KcSF_Lb1EEEOT_OT0_>
 801205e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8012062:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8012066:	4621      	mov	r1, r4
 8012068:	4618      	mov	r0, r3
 801206a:	f000 f9e1 	bl	8012430 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>
 801206e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8012072:	4618      	mov	r0, r3
 8012074:	f7ff ffba 	bl	8011fec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
	ADD_METHOD(resize);
 8012078:	687c      	ldr	r4, [r7, #4]
 801207a:	4b12      	ldr	r3, [pc, #72]	; (80120c4 <_ZN14Method_handlerC1Ev+0xbc>)
 801207c:	67fb      	str	r3, [r7, #124]	; 0x7c
 801207e:	f107 027c 	add.w	r2, r7, #124	; 0x7c
 8012082:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8012086:	4910      	ldr	r1, [pc, #64]	; (80120c8 <_ZN14Method_handlerC1Ev+0xc0>)
 8012088:	4618      	mov	r0, r3
 801208a:	f000 fa0d 	bl	80124a8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA7_KcSF_Lb1EEEOT_OT0_>
 801208e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8012092:	f107 0260 	add.w	r2, r7, #96	; 0x60
 8012096:	4621      	mov	r1, r4
 8012098:	4618      	mov	r0, r3
 801209a:	f000 f9c9 	bl	8012430 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>
 801209e:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80120a2:	4618      	mov	r0, r3
 80120a4:	f7ff ffa2 	bl	8011fec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
}
 80120a8:	687b      	ldr	r3, [r7, #4]
 80120aa:	4618      	mov	r0, r3
 80120ac:	3784      	adds	r7, #132	; 0x84
 80120ae:	46bd      	mov	sp, r7
 80120b0:	bd90      	pop	{r4, r7, pc}
 80120b2:	bf00      	nop
 80120b4:	08011f13 	.word	0x08011f13
 80120b8:	08029634 	.word	0x08029634
 80120bc:	08011f4d 	.word	0x08011f4d
 80120c0:	0802963c 	.word	0x0802963c
 80120c4:	08011e91 	.word	0x08011e91
 80120c8:	08029648 	.word	0x08029648

080120cc <_ZN14Method_handlerD1Ev>:

typedef void (*method_pointer)(Symbol&, arglist);

#define ADD_METHOD(x) methods.insert({#x, &x});

class Method_handler
 80120cc:	b580      	push	{r7, lr}
 80120ce:	b082      	sub	sp, #8
 80120d0:	af00      	add	r7, sp, #0
 80120d2:	6078      	str	r0, [r7, #4]
 80120d4:	687b      	ldr	r3, [r7, #4]
 80120d6:	4618      	mov	r0, r3
 80120d8:	f7ff ff7b 	bl	8011fd2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>
 80120dc:	687b      	ldr	r3, [r7, #4]
 80120de:	4618      	mov	r0, r3
 80120e0:	3708      	adds	r7, #8
 80120e2:	46bd      	mov	sp, r7
 80120e4:	bd80      	pop	{r7, pc}
	...

080120e8 <__tcf_0>:

void Method_handler::run_method(Method_call *mcall)
{
	static Method_handler instance;
 80120e8:	b580      	push	{r7, lr}
 80120ea:	af00      	add	r7, sp, #0
 80120ec:	4801      	ldr	r0, [pc, #4]	; (80120f4 <__tcf_0+0xc>)
 80120ee:	f7ff ffed 	bl	80120cc <_ZN14Method_handlerD1Ev>
 80120f2:	bd80      	pop	{r7, pc}
 80120f4:	20000408 	.word	0x20000408

080120f8 <_ZN14Method_handler10run_methodEP11Method_call>:
{
 80120f8:	b590      	push	{r4, r7, lr}
 80120fa:	b09f      	sub	sp, #124	; 0x7c
 80120fc:	af00      	add	r7, sp, #0
 80120fe:	6078      	str	r0, [r7, #4]
	static Method_handler instance;
 8012100:	4b50      	ldr	r3, [pc, #320]	; (8012244 <_ZN14Method_handler10run_methodEP11Method_call+0x14c>)
 8012102:	781b      	ldrb	r3, [r3, #0]
 8012104:	f3bf 8f5b 	dmb	ish
 8012108:	b2db      	uxtb	r3, r3
 801210a:	f003 0301 	and.w	r3, r3, #1
 801210e:	2b00      	cmp	r3, #0
 8012110:	bf0c      	ite	eq
 8012112:	2301      	moveq	r3, #1
 8012114:	2300      	movne	r3, #0
 8012116:	b2db      	uxtb	r3, r3
 8012118:	2b00      	cmp	r3, #0
 801211a:	d013      	beq.n	8012144 <_ZN14Method_handler10run_methodEP11Method_call+0x4c>
 801211c:	4849      	ldr	r0, [pc, #292]	; (8012244 <_ZN14Method_handler10run_methodEP11Method_call+0x14c>)
 801211e:	f011 f8af 	bl	8023280 <__cxa_guard_acquire>
 8012122:	4603      	mov	r3, r0
 8012124:	2b00      	cmp	r3, #0
 8012126:	bf14      	ite	ne
 8012128:	2301      	movne	r3, #1
 801212a:	2300      	moveq	r3, #0
 801212c:	b2db      	uxtb	r3, r3
 801212e:	2b00      	cmp	r3, #0
 8012130:	d008      	beq.n	8012144 <_ZN14Method_handler10run_methodEP11Method_call+0x4c>
 8012132:	4845      	ldr	r0, [pc, #276]	; (8012248 <_ZN14Method_handler10run_methodEP11Method_call+0x150>)
 8012134:	f7ff ff68 	bl	8012008 <_ZN14Method_handlerC1Ev>
 8012138:	4842      	ldr	r0, [pc, #264]	; (8012244 <_ZN14Method_handler10run_methodEP11Method_call+0x14c>)
 801213a:	f011 f8ad 	bl	8023298 <__cxa_guard_release>
 801213e:	4843      	ldr	r0, [pc, #268]	; (801224c <_ZN14Method_handler10run_methodEP11Method_call+0x154>)
 8012140:	f012 fcf3 	bl	8024b2a <atexit>

	Position_counter::get_instance().line = mcall->call->line;
 8012144:	687b      	ldr	r3, [r7, #4]
 8012146:	685b      	ldr	r3, [r3, #4]
 8012148:	681c      	ldr	r4, [r3, #0]
 801214a:	f004 fb79 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 801214e:	4603      	mov	r3, r0
 8012150:	601c      	str	r4, [r3, #0]
	Position_counter::get_instance().position = mcall->call->position;
 8012152:	687b      	ldr	r3, [r7, #4]
 8012154:	685b      	ldr	r3, [r3, #4]
 8012156:	685c      	ldr	r4, [r3, #4]
 8012158:	f004 fb72 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 801215c:	4603      	mov	r3, r0
 801215e:	605c      	str	r4, [r3, #4]

	auto search = instance.methods.find(mcall->call->id);
 8012160:	687b      	ldr	r3, [r7, #4]
 8012162:	685b      	ldr	r3, [r3, #4]
 8012164:	3308      	adds	r3, #8
 8012166:	4619      	mov	r1, r3
 8012168:	4837      	ldr	r0, [pc, #220]	; (8012248 <_ZN14Method_handler10run_methodEP11Method_call+0x150>)
 801216a:	f000 f9c5 	bl	80124f8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>
 801216e:	4603      	mov	r3, r0
 8012170:	60fb      	str	r3, [r7, #12]
	if (search == instance.methods.end())
 8012172:	4835      	ldr	r0, [pc, #212]	; (8012248 <_ZN14Method_handler10run_methodEP11Method_call+0x150>)
 8012174:	f000 f9cf 	bl	8012516 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>
 8012178:	4603      	mov	r3, r0
 801217a:	613b      	str	r3, [r7, #16]
 801217c:	f107 0210 	add.w	r2, r7, #16
 8012180:	f107 030c 	add.w	r3, r7, #12
 8012184:	4611      	mov	r1, r2
 8012186:	4618      	mov	r0, r3
 8012188:	f000 f9d2 	bl	8012530 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 801218c:	4603      	mov	r3, r0
 801218e:	2b00      	cmp	r3, #0
 8012190:	d020      	beq.n	80121d4 <_ZN14Method_handler10run_methodEP11Method_call+0xdc>
	{
		Transmitter::report_error(std::string("method " + mcall->call->id + " not found"));
 8012192:	687b      	ldr	r3, [r7, #4]
 8012194:	685b      	ldr	r3, [r3, #4]
 8012196:	f103 0208 	add.w	r2, r3, #8
 801219a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801219e:	492c      	ldr	r1, [pc, #176]	; (8012250 <_ZN14Method_handler10run_methodEP11Method_call+0x158>)
 80121a0:	4618      	mov	r0, r3
 80121a2:	f7fc f856 	bl	800e252 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 80121a6:	f107 0314 	add.w	r3, r7, #20
 80121aa:	f107 012c 	add.w	r1, r7, #44	; 0x2c
 80121ae:	4a29      	ldr	r2, [pc, #164]	; (8012254 <_ZN14Method_handler10run_methodEP11Method_call+0x15c>)
 80121b0:	4618      	mov	r0, r3
 80121b2:	f7fc f873 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 80121b6:	f107 0314 	add.w	r3, r7, #20
 80121ba:	4618      	mov	r0, r3
 80121bc:	f006 fae2 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80121c0:	f107 0314 	add.w	r3, r7, #20
 80121c4:	4618      	mov	r0, r3
 80121c6:	f011 fb0c 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80121ca:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80121ce:	4618      	mov	r0, r3
 80121d0:	f011 fb07 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	method_pointer method = search->second;
 80121d4:	f107 030c 	add.w	r3, r7, #12
 80121d8:	4618      	mov	r0, r3
 80121da:	f000 f9bd 	bl	8012558 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEptEv>
 80121de:	4603      	mov	r3, r0
 80121e0:	699b      	ldr	r3, [r3, #24]
 80121e2:	677b      	str	r3, [r7, #116]	; 0x74

	Symbol& var = Variable_handler::get_instance().get_symbol(*mcall->vector);
 80121e4:	f006 fe38 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 80121e8:	4604      	mov	r4, r0
 80121ea:	687b      	ldr	r3, [r7, #4]
 80121ec:	681a      	ldr	r2, [r3, #0]
 80121ee:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80121f2:	4611      	mov	r1, r2
 80121f4:	4618      	mov	r0, r3
 80121f6:	f7ef fbbf 	bl	8001978 <_ZN8VariableC1ERKS_>
 80121fa:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80121fe:	4619      	mov	r1, r3
 8012200:	4620      	mov	r0, r4
 8012202:	f006 fefe 	bl	8019002 <_ZN16Variable_handler10get_symbolE8Variable>
 8012206:	6738      	str	r0, [r7, #112]	; 0x70
 8012208:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801220c:	4618      	mov	r0, r3
 801220e:	f004 fb9f 	bl	8016950 <_ZN8VariableD1Ev>

	method(var, mcall->call->arguments);
 8012212:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 8012214:	687b      	ldr	r3, [r7, #4]
 8012216:	685b      	ldr	r3, [r3, #4]
 8012218:	f103 0220 	add.w	r2, r3, #32
 801221c:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8012220:	4611      	mov	r1, r2
 8012222:	4618      	mov	r0, r3
 8012224:	f7fb ffbd 	bl	800e1a2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8012228:	f107 0364 	add.w	r3, r7, #100	; 0x64
 801222c:	4619      	mov	r1, r3
 801222e:	6f38      	ldr	r0, [r7, #112]	; 0x70
 8012230:	47a0      	blx	r4
 8012232:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8012236:	4618      	mov	r0, r3
 8012238:	f7fb fff0 	bl	800e21c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
}
 801223c:	bf00      	nop
 801223e:	377c      	adds	r7, #124	; 0x7c
 8012240:	46bd      	mov	sp, r7
 8012242:	bd90      	pop	{r4, r7, pc}
 8012244:	20000420 	.word	0x20000420
 8012248:	20000408 	.word	0x20000408
 801224c:	080120e9 	.word	0x080120e9
 8012250:	08029650 	.word	0x08029650
 8012254:	08029658 	.word	0x08029658

08012258 <_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z>:

  // Helper for the to_string / to_wstring functions.
  template<typename _String, typename _CharT = typename _String::value_type>
    _String
    __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 8012258:	b408      	push	{r3}
 801225a:	b590      	push	{r4, r7, lr}
 801225c:	b088      	sub	sp, #32
 801225e:	af00      	add	r7, sp, #0
 8012260:	60f8      	str	r0, [r7, #12]
 8012262:	60b9      	str	r1, [r7, #8]
 8012264:	607a      	str	r2, [r7, #4]
				 __builtin_va_list), std::size_t __n,
		 const _CharT* __fmt, ...)
    {
      // XXX Eventually the result should be constructed in-place in
      // the __cxx11 string, likely with the help of internal hooks.
      _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 8012266:	687b      	ldr	r3, [r7, #4]
 8012268:	3307      	adds	r3, #7
 801226a:	08db      	lsrs	r3, r3, #3
 801226c:	00db      	lsls	r3, r3, #3
 801226e:	ebad 0d03 	sub.w	sp, sp, r3
 8012272:	466b      	mov	r3, sp
 8012274:	3307      	adds	r3, #7
 8012276:	08db      	lsrs	r3, r3, #3
 8012278:	00db      	lsls	r3, r3, #3
 801227a:	61fb      	str	r3, [r7, #28]
							  * __n));

      __builtin_va_list __args;
      __builtin_va_start(__args, __fmt);
 801227c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8012280:	613b      	str	r3, [r7, #16]

      const int __len = __convf(__s, __n, __fmt, __args);
 8012282:	68bc      	ldr	r4, [r7, #8]
 8012284:	693b      	ldr	r3, [r7, #16]
 8012286:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8012288:	6879      	ldr	r1, [r7, #4]
 801228a:	69f8      	ldr	r0, [r7, #28]
 801228c:	47a0      	blx	r4
 801228e:	61b8      	str	r0, [r7, #24]

      __builtin_va_end(__args);

      return _String(__s, __s + __len);
 8012290:	69bb      	ldr	r3, [r7, #24]
 8012292:	69fa      	ldr	r2, [r7, #28]
 8012294:	18d4      	adds	r4, r2, r3
 8012296:	f107 0314 	add.w	r3, r7, #20
 801229a:	4618      	mov	r0, r3
 801229c:	f011 f810 	bl	80232c0 <_ZNSaIcEC1Ev>
 80122a0:	f107 0314 	add.w	r3, r7, #20
 80122a4:	4622      	mov	r2, r4
 80122a6:	69f9      	ldr	r1, [r7, #28]
 80122a8:	68f8      	ldr	r0, [r7, #12]
 80122aa:	f000 f963 	bl	8012574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>
 80122ae:	f107 0314 	add.w	r3, r7, #20
 80122b2:	4618      	mov	r0, r3
 80122b4:	f011 f805 	bl	80232c2 <_ZNSaIcED1Ev>
 80122b8:	bf00      	nop
    }
 80122ba:	68f8      	ldr	r0, [r7, #12]
 80122bc:	3720      	adds	r7, #32
 80122be:	46bd      	mov	sp, r7
 80122c0:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 80122c4:	b001      	add	sp, #4
 80122c6:	4770      	bx	lr

080122c8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
    operator+(const _CharT* __lhs,
 80122c8:	b580      	push	{r7, lr}
 80122ca:	b084      	sub	sp, #16
 80122cc:	af00      	add	r7, sp, #0
 80122ce:	60f8      	str	r0, [r7, #12]
 80122d0:	60b9      	str	r1, [r7, #8]
 80122d2:	607a      	str	r2, [r7, #4]
    { return std::move(__rhs.insert(0, __lhs)); }
 80122d4:	68ba      	ldr	r2, [r7, #8]
 80122d6:	2100      	movs	r1, #0
 80122d8:	6878      	ldr	r0, [r7, #4]
 80122da:	f011 fbc5 	bl	8023a68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>
 80122de:	4603      	mov	r3, r0
 80122e0:	4618      	mov	r0, r3
 80122e2:	f7f4 ff4c 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 80122e6:	4603      	mov	r3, r0
 80122e8:	4619      	mov	r1, r3
 80122ea:	68f8      	ldr	r0, [r7, #12]
 80122ec:	f011 fa5f 	bl	80237ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 80122f0:	68f8      	ldr	r0, [r7, #12]
 80122f2:	3710      	adds	r7, #16
 80122f4:	46bd      	mov	sp, r7
 80122f6:	bd80      	pop	{r7, pc}

080122f8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 80122f8:	b590      	push	{r4, r7, lr}
 80122fa:	b087      	sub	sp, #28
 80122fc:	af00      	add	r7, sp, #0
 80122fe:	60f8      	str	r0, [r7, #12]
 8012300:	60b9      	str	r1, [r7, #8]
 8012302:	607a      	str	r2, [r7, #4]
      const auto __size = __lhs.size() + __rhs.size();
 8012304:	68b8      	ldr	r0, [r7, #8]
 8012306:	f011 faa0 	bl	802384a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 801230a:	4604      	mov	r4, r0
 801230c:	6878      	ldr	r0, [r7, #4]
 801230e:	f011 fa9c 	bl	802384a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 8012312:	4603      	mov	r3, r0
 8012314:	4423      	add	r3, r4
 8012316:	617b      	str	r3, [r7, #20]
      const bool __cond = (__size > __lhs.capacity()
 8012318:	68b8      	ldr	r0, [r7, #8]
 801231a:	f011 fa9a 	bl	8023852 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
 801231e:	4602      	mov	r2, r0
			   && __size <= __rhs.capacity());
 8012320:	697b      	ldr	r3, [r7, #20]
 8012322:	4293      	cmp	r3, r2
 8012324:	d908      	bls.n	8012338 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x40>
 8012326:	6878      	ldr	r0, [r7, #4]
 8012328:	f011 fa93 	bl	8023852 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
 801232c:	4602      	mov	r2, r0
 801232e:	697b      	ldr	r3, [r7, #20]
 8012330:	4293      	cmp	r3, r2
 8012332:	d801      	bhi.n	8012338 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x40>
 8012334:	2301      	movs	r3, #1
 8012336:	e000      	b.n	801233a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x42>
 8012338:	2300      	movs	r3, #0
      const bool __cond = (__size > __lhs.capacity()
 801233a:	74fb      	strb	r3, [r7, #19]
	            : std::move(__lhs.append(__rhs));
 801233c:	7cfb      	ldrb	r3, [r7, #19]
 801233e:	2b00      	cmp	r3, #0
 8012340:	d00a      	beq.n	8012358 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x60>
      return __cond ? std::move(__rhs.insert(0, __lhs))
 8012342:	68ba      	ldr	r2, [r7, #8]
 8012344:	2100      	movs	r1, #0
 8012346:	6878      	ldr	r0, [r7, #4]
 8012348:	f011 fb84 	bl	8023a54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>
 801234c:	4603      	mov	r3, r0
 801234e:	4618      	mov	r0, r3
 8012350:	f7f4 ff15 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8012354:	4603      	mov	r3, r0
 8012356:	e008      	b.n	801236a <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x72>
	            : std::move(__lhs.append(__rhs));
 8012358:	6879      	ldr	r1, [r7, #4]
 801235a:	68b8      	ldr	r0, [r7, #8]
 801235c:	f011 fbb6 	bl	8023acc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8012360:	4603      	mov	r3, r0
 8012362:	4618      	mov	r0, r3
 8012364:	f7f4 ff0b 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8012368:	4603      	mov	r3, r0
 801236a:	4619      	mov	r1, r3
 801236c:	68f8      	ldr	r0, [r7, #12]
 801236e:	f011 fa1e 	bl	80237ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 8012372:	68f8      	ldr	r0, [r7, #12]
 8012374:	371c      	adds	r7, #28
 8012376:	46bd      	mov	sp, r7
 8012378:	bd90      	pop	{r4, r7, pc}

0801237a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801237a:	b580      	push	{r7, lr}
 801237c:	b082      	sub	sp, #8
 801237e:	af00      	add	r7, sp, #0
 8012380:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 8012382:	6878      	ldr	r0, [r7, #4]
 8012384:	f000 f911 	bl	80125aa <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>
 8012388:	687b      	ldr	r3, [r7, #4]
 801238a:	4618      	mov	r0, r3
 801238c:	f000 f919 	bl	80125c2 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 8012390:	687b      	ldr	r3, [r7, #4]
 8012392:	3304      	adds	r3, #4
 8012394:	4618      	mov	r0, r3
 8012396:	f7ee fe72 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801239a:	687b      	ldr	r3, [r7, #4]
 801239c:	4618      	mov	r0, r3
 801239e:	3708      	adds	r7, #8
 80123a0:	46bd      	mov	sp, r7
 80123a2:	bd80      	pop	{r7, pc}

080123a4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80123a4:	b580      	push	{r7, lr}
 80123a6:	b082      	sub	sp, #8
 80123a8:	af00      	add	r7, sp, #0
 80123aa:	6078      	str	r0, [r7, #4]
 80123ac:	6878      	ldr	r0, [r7, #4]
 80123ae:	f000 f913 	bl	80125d8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEED1Ev>
 80123b2:	687b      	ldr	r3, [r7, #4]
 80123b4:	4618      	mov	r0, r3
 80123b6:	3708      	adds	r7, #8
 80123b8:	46bd      	mov	sp, r7
 80123ba:	bd80      	pop	{r7, pc}

080123bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80123bc:	b580      	push	{r7, lr}
 80123be:	b082      	sub	sp, #8
 80123c0:	af00      	add	r7, sp, #0
 80123c2:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80123c4:	6878      	ldr	r0, [r7, #4]
 80123c6:	f000 f931 	bl	801262c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 80123ca:	4603      	mov	r3, r0
 80123cc:	4619      	mov	r1, r3
 80123ce:	6878      	ldr	r0, [r7, #4]
 80123d0:	f000 f90d 	bl	80125ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
 80123d4:	687b      	ldr	r3, [r7, #4]
 80123d6:	4618      	mov	r0, r3
 80123d8:	f7ff fdd5 	bl	8011f86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>
 80123dc:	687b      	ldr	r3, [r7, #4]
 80123de:	4618      	mov	r0, r3
 80123e0:	3708      	adds	r7, #8
 80123e2:	46bd      	mov	sp, r7
 80123e4:	bd80      	pop	{r7, pc}

080123e6 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA6_KcLb1EEEOT_RKSF_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 80123e6:	b5b0      	push	{r4, r5, r7, lr}
 80123e8:	b086      	sub	sp, #24
 80123ea:	af00      	add	r7, sp, #0
 80123ec:	60f8      	str	r0, [r7, #12]
 80123ee:	60b9      	str	r1, [r7, #8]
 80123f0:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 80123f2:	68fc      	ldr	r4, [r7, #12]
 80123f4:	68b8      	ldr	r0, [r7, #8]
 80123f6:	f7ef fd22 	bl	8001e3e <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80123fa:	4605      	mov	r5, r0
 80123fc:	f107 0314 	add.w	r3, r7, #20
 8012400:	4618      	mov	r0, r3
 8012402:	f010 ff5d 	bl	80232c0 <_ZNSaIcEC1Ev>
 8012406:	f107 0314 	add.w	r3, r7, #20
 801240a:	461a      	mov	r2, r3
 801240c:	4629      	mov	r1, r5
 801240e:	4620      	mov	r0, r4
 8012410:	f7ef fcef 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012414:	f107 0314 	add.w	r3, r7, #20
 8012418:	4618      	mov	r0, r3
 801241a:	f010 ff52 	bl	80232c2 <_ZNSaIcED1Ev>
 801241e:	687b      	ldr	r3, [r7, #4]
 8012420:	681a      	ldr	r2, [r3, #0]
 8012422:	68fb      	ldr	r3, [r7, #12]
 8012424:	619a      	str	r2, [r3, #24]
 8012426:	68fb      	ldr	r3, [r7, #12]
 8012428:	4618      	mov	r0, r3
 801242a:	3718      	adds	r7, #24
 801242c:	46bd      	mov	sp, r7
 801242e:	bdb0      	pop	{r4, r5, r7, pc}

08012430 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>:
      insert(value_type&& __x)
 8012430:	b590      	push	{r4, r7, lr}
 8012432:	b085      	sub	sp, #20
 8012434:	af00      	add	r7, sp, #0
 8012436:	60f8      	str	r0, [r7, #12]
 8012438:	60b9      	str	r1, [r7, #8]
 801243a:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801243c:	68bc      	ldr	r4, [r7, #8]
 801243e:	6878      	ldr	r0, [r7, #4]
 8012440:	f000 f900 	bl	8012644 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>
 8012444:	4602      	mov	r2, r0
 8012446:	68fb      	ldr	r3, [r7, #12]
 8012448:	4621      	mov	r1, r4
 801244a:	4618      	mov	r0, r3
 801244c:	f000 f905 	bl	801265a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>
 8012450:	68f8      	ldr	r0, [r7, #12]
 8012452:	3714      	adds	r7, #20
 8012454:	46bd      	mov	sp, r7
 8012456:	bd90      	pop	{r4, r7, pc}

08012458 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA9_KcSF_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8012458:	b5b0      	push	{r4, r5, r7, lr}
 801245a:	b086      	sub	sp, #24
 801245c:	af00      	add	r7, sp, #0
 801245e:	60f8      	str	r0, [r7, #12]
 8012460:	60b9      	str	r1, [r7, #8]
 8012462:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8012464:	68fc      	ldr	r4, [r7, #12]
 8012466:	68b8      	ldr	r0, [r7, #8]
 8012468:	f000 f946 	bl	80126f8 <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801246c:	4605      	mov	r5, r0
 801246e:	f107 0314 	add.w	r3, r7, #20
 8012472:	4618      	mov	r0, r3
 8012474:	f010 ff24 	bl	80232c0 <_ZNSaIcEC1Ev>
 8012478:	f107 0314 	add.w	r3, r7, #20
 801247c:	461a      	mov	r2, r3
 801247e:	4629      	mov	r1, r5
 8012480:	4620      	mov	r0, r4
 8012482:	f7ef fcb6 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012486:	f107 0314 	add.w	r3, r7, #20
 801248a:	4618      	mov	r0, r3
 801248c:	f010 ff19 	bl	80232c2 <_ZNSaIcED1Ev>
 8012490:	6878      	ldr	r0, [r7, #4]
 8012492:	f000 f93c 	bl	801270e <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8012496:	4603      	mov	r3, r0
 8012498:	681a      	ldr	r2, [r3, #0]
 801249a:	68fb      	ldr	r3, [r7, #12]
 801249c:	619a      	str	r2, [r3, #24]
 801249e:	68fb      	ldr	r3, [r7, #12]
 80124a0:	4618      	mov	r0, r3
 80124a2:	3718      	adds	r7, #24
 80124a4:	46bd      	mov	sp, r7
 80124a6:	bdb0      	pop	{r4, r5, r7, pc}

080124a8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1IRA7_KcSF_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80124a8:	b5b0      	push	{r4, r5, r7, lr}
 80124aa:	b086      	sub	sp, #24
 80124ac:	af00      	add	r7, sp, #0
 80124ae:	60f8      	str	r0, [r7, #12]
 80124b0:	60b9      	str	r1, [r7, #8]
 80124b2:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80124b4:	68fc      	ldr	r4, [r7, #12]
 80124b6:	68b8      	ldr	r0, [r7, #8]
 80124b8:	f7ef fccc 	bl	8001e54 <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80124bc:	4605      	mov	r5, r0
 80124be:	f107 0314 	add.w	r3, r7, #20
 80124c2:	4618      	mov	r0, r3
 80124c4:	f010 fefc 	bl	80232c0 <_ZNSaIcEC1Ev>
 80124c8:	f107 0314 	add.w	r3, r7, #20
 80124cc:	461a      	mov	r2, r3
 80124ce:	4629      	mov	r1, r5
 80124d0:	4620      	mov	r0, r4
 80124d2:	f7ef fc8e 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80124d6:	f107 0314 	add.w	r3, r7, #20
 80124da:	4618      	mov	r0, r3
 80124dc:	f010 fef1 	bl	80232c2 <_ZNSaIcED1Ev>
 80124e0:	6878      	ldr	r0, [r7, #4]
 80124e2:	f000 f914 	bl	801270e <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80124e6:	4603      	mov	r3, r0
 80124e8:	681a      	ldr	r2, [r3, #0]
 80124ea:	68fb      	ldr	r3, [r7, #12]
 80124ec:	619a      	str	r2, [r3, #24]
 80124ee:	68fb      	ldr	r3, [r7, #12]
 80124f0:	4618      	mov	r0, r3
 80124f2:	3718      	adds	r7, #24
 80124f4:	46bd      	mov	sp, r7
 80124f6:	bdb0      	pop	{r4, r5, r7, pc}

080124f8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>:
      find(const key_type& __x)
 80124f8:	b580      	push	{r7, lr}
 80124fa:	b082      	sub	sp, #8
 80124fc:	af00      	add	r7, sp, #0
 80124fe:	6078      	str	r0, [r7, #4]
 8012500:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8012502:	687b      	ldr	r3, [r7, #4]
 8012504:	6839      	ldr	r1, [r7, #0]
 8012506:	4618      	mov	r0, r3
 8012508:	f000 f90c 	bl	8012724 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>
 801250c:	4603      	mov	r3, r0
 801250e:	4618      	mov	r0, r3
 8012510:	3708      	adds	r7, #8
 8012512:	46bd      	mov	sp, r7
 8012514:	bd80      	pop	{r7, pc}

08012516 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8012516:	b580      	push	{r7, lr}
 8012518:	b082      	sub	sp, #8
 801251a:	af00      	add	r7, sp, #0
 801251c:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 801251e:	687b      	ldr	r3, [r7, #4]
 8012520:	4618      	mov	r0, r3
 8012522:	f000 f93b 	bl	801279c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 8012526:	4603      	mov	r3, r0
 8012528:	4618      	mov	r0, r3
 801252a:	3708      	adds	r7, #8
 801252c:	46bd      	mov	sp, r7
 801252e:	bd80      	pop	{r7, pc}

08012530 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8012530:	b480      	push	{r7}
 8012532:	b083      	sub	sp, #12
 8012534:	af00      	add	r7, sp, #0
 8012536:	6078      	str	r0, [r7, #4]
 8012538:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 801253a:	687b      	ldr	r3, [r7, #4]
 801253c:	681a      	ldr	r2, [r3, #0]
 801253e:	683b      	ldr	r3, [r7, #0]
 8012540:	681b      	ldr	r3, [r3, #0]
 8012542:	429a      	cmp	r2, r3
 8012544:	bf0c      	ite	eq
 8012546:	2301      	moveq	r3, #1
 8012548:	2300      	movne	r3, #0
 801254a:	b2db      	uxtb	r3, r3
 801254c:	4618      	mov	r0, r3
 801254e:	370c      	adds	r7, #12
 8012550:	46bd      	mov	sp, r7
 8012552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012556:	4770      	bx	lr

08012558 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8012558:	b580      	push	{r7, lr}
 801255a:	b082      	sub	sp, #8
 801255c:	af00      	add	r7, sp, #0
 801255e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 8012560:	687b      	ldr	r3, [r7, #4]
 8012562:	681b      	ldr	r3, [r3, #0]
 8012564:	4618      	mov	r0, r3
 8012566:	f000 f92a 	bl	80127be <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 801256a:	4603      	mov	r3, r0
 801256c:	4618      	mov	r0, r3
 801256e:	3708      	adds	r7, #8
 8012570:	46bd      	mov	sp, r7
 8012572:	bd80      	pop	{r7, pc}

08012574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IPcvEET_S7_RKS3_>:
        basic_string(_InputIterator __beg, _InputIterator __end,
 8012574:	b590      	push	{r4, r7, lr}
 8012576:	b085      	sub	sp, #20
 8012578:	af00      	add	r7, sp, #0
 801257a:	60f8      	str	r0, [r7, #12]
 801257c:	60b9      	str	r1, [r7, #8]
 801257e:	607a      	str	r2, [r7, #4]
 8012580:	603b      	str	r3, [r7, #0]
	: _M_dataplus(_M_local_data(), __a)
 8012582:	68fc      	ldr	r4, [r7, #12]
 8012584:	68f8      	ldr	r0, [r7, #12]
 8012586:	f011 f81b 	bl	80235c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 801258a:	4603      	mov	r3, r0
 801258c:	683a      	ldr	r2, [r7, #0]
 801258e:	4619      	mov	r1, r3
 8012590:	4620      	mov	r0, r4
 8012592:	f011 faf3 	bl	8023b7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
	{ _M_construct(__beg, __end); }
 8012596:	687a      	ldr	r2, [r7, #4]
 8012598:	68b9      	ldr	r1, [r7, #8]
 801259a:	68f8      	ldr	r0, [r7, #12]
 801259c:	f000 f91d 	bl	80127da <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_>
 80125a0:	68fb      	ldr	r3, [r7, #12]
 80125a2:	4618      	mov	r0, r3
 80125a4:	3714      	adds	r7, #20
 80125a6:	46bd      	mov	sp, r7
 80125a8:	bd90      	pop	{r4, r7, pc}

080125aa <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 80125aa:	b580      	push	{r7, lr}
 80125ac:	b082      	sub	sp, #8
 80125ae:	af00      	add	r7, sp, #0
 80125b0:	6078      	str	r0, [r7, #4]
 80125b2:	6878      	ldr	r0, [r7, #4]
 80125b4:	f000 f920 	bl	80127f8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>
 80125b8:	687b      	ldr	r3, [r7, #4]
 80125ba:	4618      	mov	r0, r3
 80125bc:	3708      	adds	r7, #8
 80125be:	46bd      	mov	sp, r7
 80125c0:	bd80      	pop	{r7, pc}

080125c2 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
 80125c2:	b480      	push	{r7}
 80125c4:	b083      	sub	sp, #12
 80125c6:	af00      	add	r7, sp, #0
 80125c8:	6078      	str	r0, [r7, #4]
      { }
 80125ca:	687b      	ldr	r3, [r7, #4]
 80125cc:	4618      	mov	r0, r3
 80125ce:	370c      	adds	r7, #12
 80125d0:	46bd      	mov	sp, r7
 80125d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80125d6:	4770      	bx	lr

080125d8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80125d8:	b480      	push	{r7}
 80125da:	b083      	sub	sp, #12
 80125dc:	af00      	add	r7, sp, #0
 80125de:	6078      	str	r0, [r7, #4]
 80125e0:	687b      	ldr	r3, [r7, #4]
 80125e2:	4618      	mov	r0, r3
 80125e4:	370c      	adds	r7, #12
 80125e6:	46bd      	mov	sp, r7
 80125e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80125ec:	4770      	bx	lr

080125ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80125ee:	b580      	push	{r7, lr}
 80125f0:	b084      	sub	sp, #16
 80125f2:	af00      	add	r7, sp, #0
 80125f4:	6078      	str	r0, [r7, #4]
 80125f6:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 80125f8:	683b      	ldr	r3, [r7, #0]
 80125fa:	2b00      	cmp	r3, #0
 80125fc:	d012      	beq.n	8012624 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0x36>
	  _M_erase(_S_right(__x));
 80125fe:	6838      	ldr	r0, [r7, #0]
 8012600:	f000 f905 	bl	801280e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 8012604:	4603      	mov	r3, r0
 8012606:	4619      	mov	r1, r3
 8012608:	6878      	ldr	r0, [r7, #4]
 801260a:	f7ff fff0 	bl	80125ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
	  _Link_type __y = _S_left(__x);
 801260e:	6838      	ldr	r0, [r7, #0]
 8012610:	f000 f909 	bl	8012826 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 8012614:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8012616:	6839      	ldr	r1, [r7, #0]
 8012618:	6878      	ldr	r0, [r7, #4]
 801261a:	f000 f910 	bl	801283e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>
	  __x = __y;
 801261e:	68fb      	ldr	r3, [r7, #12]
 8012620:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8012622:	e7e9      	b.n	80125f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0xa>
    }
 8012624:	bf00      	nop
 8012626:	3710      	adds	r7, #16
 8012628:	46bd      	mov	sp, r7
 801262a:	bd80      	pop	{r7, pc}

0801262c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 801262c:	b480      	push	{r7}
 801262e:	b083      	sub	sp, #12
 8012630:	af00      	add	r7, sp, #0
 8012632:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8012634:	687b      	ldr	r3, [r7, #4]
 8012636:	689b      	ldr	r3, [r3, #8]
 8012638:	4618      	mov	r0, r3
 801263a:	370c      	adds	r7, #12
 801263c:	46bd      	mov	sp, r7
 801263e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012642:	4770      	bx	lr

08012644 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>:
    move(_Tp&& __t) noexcept
 8012644:	b480      	push	{r7}
 8012646:	b083      	sub	sp, #12
 8012648:	af00      	add	r7, sp, #0
 801264a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801264c:	687b      	ldr	r3, [r7, #4]
 801264e:	4618      	mov	r0, r3
 8012650:	370c      	adds	r7, #12
 8012652:	46bd      	mov	sp, r7
 8012654:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012658:	4770      	bx	lr

0801265a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801265a:	b5b0      	push	{r4, r5, r7, lr}
 801265c:	b08e      	sub	sp, #56	; 0x38
 801265e:	af02      	add	r7, sp, #8
 8012660:	60f8      	str	r0, [r7, #12]
 8012662:	60b9      	str	r1, [r7, #8]
 8012664:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 8012666:	f107 031c 	add.w	r3, r7, #28
 801266a:	6879      	ldr	r1, [r7, #4]
 801266c:	4618      	mov	r0, r3
 801266e:	f000 f97c 	bl	801296a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 8012672:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 8012674:	f107 0314 	add.w	r3, r7, #20
 8012678:	68b9      	ldr	r1, [r7, #8]
 801267a:	4618      	mov	r0, r3
 801267c:	f000 f8f0 	bl	8012860 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 8012680:	69bb      	ldr	r3, [r7, #24]
 8012682:	2b00      	cmp	r3, #0
 8012684:	d022      	beq.n	80126cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 8012686:	f107 0310 	add.w	r3, r7, #16
 801268a:	68b9      	ldr	r1, [r7, #8]
 801268c:	4618      	mov	r0, r3
 801268e:	f000 f978 	bl	8012982 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>
	  return _Res(_M_insert_(__res.first, __res.second,
 8012692:	697c      	ldr	r4, [r7, #20]
 8012694:	69bd      	ldr	r5, [r7, #24]
 8012696:	6878      	ldr	r0, [r7, #4]
 8012698:	f000 f982 	bl	80129a0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801269c:	4602      	mov	r2, r0
 801269e:	f107 0310 	add.w	r3, r7, #16
 80126a2:	9300      	str	r3, [sp, #0]
 80126a4:	4613      	mov	r3, r2
 80126a6:	462a      	mov	r2, r5
 80126a8:	4621      	mov	r1, r4
 80126aa:	68b8      	ldr	r0, [r7, #8]
 80126ac:	f000 f983 	bl	80129b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>
 80126b0:	4603      	mov	r3, r0
 80126b2:	623b      	str	r3, [r7, #32]
		      true);
 80126b4:	2301      	movs	r3, #1
 80126b6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80126ba:	f107 0227 	add.w	r2, r7, #39	; 0x27
 80126be:	f107 0320 	add.w	r3, r7, #32
 80126c2:	4619      	mov	r1, r3
 80126c4:	68f8      	ldr	r0, [r7, #12]
 80126c6:	f000 f9bf 	bl	8012a48 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
 80126ca:	e011      	b.n	80126f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 80126cc:	697a      	ldr	r2, [r7, #20]
 80126ce:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80126d2:	4611      	mov	r1, r2
 80126d4:	4618      	mov	r0, r3
 80126d6:	f000 f9d0 	bl	8012a7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 80126da:	2300      	movs	r3, #0
 80126dc:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 80126e0:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 80126e4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80126e8:	4619      	mov	r1, r3
 80126ea:	68f8      	ldr	r0, [r7, #12]
 80126ec:	f000 f9ac 	bl	8012a48 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
    }
 80126f0:	68f8      	ldr	r0, [r7, #12]
 80126f2:	3730      	adds	r7, #48	; 0x30
 80126f4:	46bd      	mov	sp, r7
 80126f6:	bdb0      	pop	{r4, r5, r7, pc}

080126f8 <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80126f8:	b480      	push	{r7}
 80126fa:	b083      	sub	sp, #12
 80126fc:	af00      	add	r7, sp, #0
 80126fe:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012700:	687b      	ldr	r3, [r7, #4]
 8012702:	4618      	mov	r0, r3
 8012704:	370c      	adds	r7, #12
 8012706:	46bd      	mov	sp, r7
 8012708:	f85d 7b04 	ldr.w	r7, [sp], #4
 801270c:	4770      	bx	lr

0801270e <_ZSt7forwardIPFvR6SymbolSt6vectorIP10ExpressionSaIS4_EEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801270e:	b480      	push	{r7}
 8012710:	b083      	sub	sp, #12
 8012712:	af00      	add	r7, sp, #0
 8012714:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012716:	687b      	ldr	r3, [r7, #4]
 8012718:	4618      	mov	r0, r3
 801271a:	370c      	adds	r7, #12
 801271c:	46bd      	mov	sp, r7
 801271e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012722:	4770      	bx	lr

08012724 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012724:	b590      	push	{r4, r7, lr}
 8012726:	b085      	sub	sp, #20
 8012728:	af00      	add	r7, sp, #0
 801272a:	6078      	str	r0, [r7, #4]
 801272c:	6039      	str	r1, [r7, #0]
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 801272e:	6878      	ldr	r0, [r7, #4]
 8012730:	f7ff ff7c 	bl	801262c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 8012734:	4604      	mov	r4, r0
 8012736:	6878      	ldr	r0, [r7, #4]
 8012738:	f000 f9ae 	bl	8012a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 801273c:	4602      	mov	r2, r0
 801273e:	683b      	ldr	r3, [r7, #0]
 8012740:	4621      	mov	r1, r4
 8012742:	6878      	ldr	r0, [r7, #4]
 8012744:	f000 f9b4 	bl	8012ab0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>
 8012748:	4603      	mov	r3, r0
 801274a:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 801274c:	6878      	ldr	r0, [r7, #4]
 801274e:	f000 f825 	bl	801279c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 8012752:	4603      	mov	r3, r0
 8012754:	60fb      	str	r3, [r7, #12]
 8012756:	f107 020c 	add.w	r2, r7, #12
 801275a:	f107 0308 	add.w	r3, r7, #8
 801275e:	4611      	mov	r1, r2
 8012760:	4618      	mov	r0, r3
 8012762:	f7ff fee5 	bl	8012530 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 8012766:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 8012768:	2b00      	cmp	r3, #0
 801276a:	d10d      	bne.n	8012788 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 801276c:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 801276e:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 8012770:	4618      	mov	r0, r3
 8012772:	f000 f9ce 	bl	8012b12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8012776:	4603      	mov	r3, r0
 8012778:	461a      	mov	r2, r3
 801277a:	6839      	ldr	r1, [r7, #0]
 801277c:	4620      	mov	r0, r4
 801277e:	f7f4 f97e 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012782:	4603      	mov	r3, r0
 8012784:	2b00      	cmp	r3, #0
 8012786:	d004      	beq.n	8012792 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8012788:	6878      	ldr	r0, [r7, #4]
 801278a:	f000 f807 	bl	801279c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 801278e:	4603      	mov	r3, r0
 8012790:	e000      	b.n	8012794 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x70>
 8012792:	68bb      	ldr	r3, [r7, #8]
    }
 8012794:	4618      	mov	r0, r3
 8012796:	3714      	adds	r7, #20
 8012798:	46bd      	mov	sp, r7
 801279a:	bd90      	pop	{r4, r7, pc}

0801279c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801279c:	b580      	push	{r7, lr}
 801279e:	b084      	sub	sp, #16
 80127a0:	af00      	add	r7, sp, #0
 80127a2:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 80127a4:	687b      	ldr	r3, [r7, #4]
 80127a6:	1d1a      	adds	r2, r3, #4
 80127a8:	f107 030c 	add.w	r3, r7, #12
 80127ac:	4611      	mov	r1, r2
 80127ae:	4618      	mov	r0, r3
 80127b0:	f000 f963 	bl	8012a7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 80127b4:	68fb      	ldr	r3, [r7, #12]
 80127b6:	4618      	mov	r0, r3
 80127b8:	3710      	adds	r7, #16
 80127ba:	46bd      	mov	sp, r7
 80127bc:	bd80      	pop	{r7, pc}

080127be <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr()
 80127be:	b580      	push	{r7, lr}
 80127c0:	b082      	sub	sp, #8
 80127c2:	af00      	add	r7, sp, #0
 80127c4:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80127c6:	687b      	ldr	r3, [r7, #4]
 80127c8:	3310      	adds	r3, #16
 80127ca:	4618      	mov	r0, r3
 80127cc:	f000 f9ad 	bl	8012b2a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 80127d0:	4603      	mov	r3, r0
 80127d2:	4618      	mov	r0, r3
 80127d4:	3708      	adds	r7, #8
 80127d6:	46bd      	mov	sp, r7
 80127d8:	bd80      	pop	{r7, pc}

080127da <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 80127da:	b580      	push	{r7, lr}
 80127dc:	b084      	sub	sp, #16
 80127de:	af00      	add	r7, sp, #0
 80127e0:	60f8      	str	r0, [r7, #12]
 80127e2:	60b9      	str	r1, [r7, #8]
 80127e4:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 80127e6:	687a      	ldr	r2, [r7, #4]
 80127e8:	68b9      	ldr	r1, [r7, #8]
 80127ea:	68f8      	ldr	r0, [r7, #12]
 80127ec:	f000 f9a9 	bl	8012b42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type>
        }
 80127f0:	bf00      	nop
 80127f2:	3710      	adds	r7, #16
 80127f4:	46bd      	mov	sp, r7
 80127f6:	bd80      	pop	{r7, pc}

080127f8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80127f8:	b480      	push	{r7}
 80127fa:	b083      	sub	sp, #12
 80127fc:	af00      	add	r7, sp, #0
 80127fe:	6078      	str	r0, [r7, #4]
 8012800:	687b      	ldr	r3, [r7, #4]
 8012802:	4618      	mov	r0, r3
 8012804:	370c      	adds	r7, #12
 8012806:	46bd      	mov	sp, r7
 8012808:	f85d 7b04 	ldr.w	r7, [sp], #4
 801280c:	4770      	bx	lr

0801280e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801280e:	b480      	push	{r7}
 8012810:	b083      	sub	sp, #12
 8012812:	af00      	add	r7, sp, #0
 8012814:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8012816:	687b      	ldr	r3, [r7, #4]
 8012818:	68db      	ldr	r3, [r3, #12]
 801281a:	4618      	mov	r0, r3
 801281c:	370c      	adds	r7, #12
 801281e:	46bd      	mov	sp, r7
 8012820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012824:	4770      	bx	lr

08012826 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8012826:	b480      	push	{r7}
 8012828:	b083      	sub	sp, #12
 801282a:	af00      	add	r7, sp, #0
 801282c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 801282e:	687b      	ldr	r3, [r7, #4]
 8012830:	689b      	ldr	r3, [r3, #8]
 8012832:	4618      	mov	r0, r3
 8012834:	370c      	adds	r7, #12
 8012836:	46bd      	mov	sp, r7
 8012838:	f85d 7b04 	ldr.w	r7, [sp], #4
 801283c:	4770      	bx	lr

0801283e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 801283e:	b580      	push	{r7, lr}
 8012840:	b082      	sub	sp, #8
 8012842:	af00      	add	r7, sp, #0
 8012844:	6078      	str	r0, [r7, #4]
 8012846:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8012848:	6839      	ldr	r1, [r7, #0]
 801284a:	6878      	ldr	r0, [r7, #4]
 801284c:	f000 f98a 	bl	8012b64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>
	_M_put_node(__p);
 8012850:	6839      	ldr	r1, [r7, #0]
 8012852:	6878      	ldr	r0, [r7, #4]
 8012854:	f000 f99b 	bl	8012b8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>
      }
 8012858:	bf00      	nop
 801285a:	3708      	adds	r7, #8
 801285c:	46bd      	mov	sp, r7
 801285e:	bd80      	pop	{r7, pc}

08012860 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012860:	b590      	push	{r4, r7, lr}
 8012862:	b08b      	sub	sp, #44	; 0x2c
 8012864:	af00      	add	r7, sp, #0
 8012866:	60f8      	str	r0, [r7, #12]
 8012868:	60b9      	str	r1, [r7, #8]
 801286a:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 801286c:	68b8      	ldr	r0, [r7, #8]
 801286e:	f7ff fedd 	bl	801262c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 8012872:	4603      	mov	r3, r0
 8012874:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8012876:	68b8      	ldr	r0, [r7, #8]
 8012878:	f000 f90e 	bl	8012a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 801287c:	4603      	mov	r3, r0
 801287e:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8012880:	2301      	movs	r3, #1
 8012882:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8012886:	69bb      	ldr	r3, [r7, #24]
 8012888:	2b00      	cmp	r3, #0
 801288a:	d020      	beq.n	80128ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 801288c:	69bb      	ldr	r3, [r7, #24]
 801288e:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8012890:	68bc      	ldr	r4, [r7, #8]
 8012892:	69bb      	ldr	r3, [r7, #24]
 8012894:	4618      	mov	r0, r3
 8012896:	f000 f98c 	bl	8012bb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 801289a:	4603      	mov	r3, r0
 801289c:	461a      	mov	r2, r3
 801289e:	6879      	ldr	r1, [r7, #4]
 80128a0:	4620      	mov	r0, r4
 80128a2:	f7f4 f8ec 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80128a6:	4603      	mov	r3, r0
 80128a8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 80128ac:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80128b0:	2b00      	cmp	r3, #0
 80128b2:	d005      	beq.n	80128c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x60>
 80128b4:	69bb      	ldr	r3, [r7, #24]
 80128b6:	4618      	mov	r0, r3
 80128b8:	f7ff ffb5 	bl	8012826 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 80128bc:	4603      	mov	r3, r0
 80128be:	e004      	b.n	80128ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6a>
 80128c0:	69bb      	ldr	r3, [r7, #24]
 80128c2:	4618      	mov	r0, r3
 80128c4:	f7ff ffa3 	bl	801280e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 80128c8:	4603      	mov	r3, r0
 80128ca:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 80128cc:	e7db      	b.n	8012886 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 80128ce:	697a      	ldr	r2, [r7, #20]
 80128d0:	f107 0310 	add.w	r3, r7, #16
 80128d4:	4611      	mov	r1, r2
 80128d6:	4618      	mov	r0, r3
 80128d8:	f000 f8cf 	bl	8012a7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 80128dc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80128e0:	2b00      	cmp	r3, #0
 80128e2:	d01d      	beq.n	8012920 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 80128e4:	68b8      	ldr	r0, [r7, #8]
 80128e6:	f000 f977 	bl	8012bd8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>
 80128ea:	4603      	mov	r3, r0
 80128ec:	61fb      	str	r3, [r7, #28]
 80128ee:	f107 021c 	add.w	r2, r7, #28
 80128f2:	f107 0310 	add.w	r3, r7, #16
 80128f6:	4611      	mov	r1, r2
 80128f8:	4618      	mov	r0, r3
 80128fa:	f7ff fe19 	bl	8012530 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEESK_>
 80128fe:	4603      	mov	r3, r0
 8012900:	2b00      	cmp	r3, #0
 8012902:	d008      	beq.n	8012916 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8012904:	f107 0214 	add.w	r2, r7, #20
 8012908:	f107 0318 	add.w	r3, r7, #24
 801290c:	4619      	mov	r1, r3
 801290e:	68f8      	ldr	r0, [r7, #12]
 8012910:	f000 f973 	bl	8012bfa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 8012914:	e025      	b.n	8012962 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 8012916:	f107 0310 	add.w	r3, r7, #16
 801291a:	4618      	mov	r0, r3
 801291c:	f000 f986 	bl	8012c2c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8012920:	68bc      	ldr	r4, [r7, #8]
 8012922:	693b      	ldr	r3, [r7, #16]
 8012924:	4618      	mov	r0, r3
 8012926:	f000 f8f4 	bl	8012b12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801292a:	4603      	mov	r3, r0
 801292c:	687a      	ldr	r2, [r7, #4]
 801292e:	4619      	mov	r1, r3
 8012930:	4620      	mov	r0, r4
 8012932:	f7f4 f8a4 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012936:	4603      	mov	r3, r0
 8012938:	2b00      	cmp	r3, #0
 801293a:	d008      	beq.n	801294e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 801293c:	f107 0214 	add.w	r2, r7, #20
 8012940:	f107 0318 	add.w	r3, r7, #24
 8012944:	4619      	mov	r1, r3
 8012946:	68f8      	ldr	r0, [r7, #12]
 8012948:	f000 f957 	bl	8012bfa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 801294c:	e009      	b.n	8012962 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 801294e:	2300      	movs	r3, #0
 8012950:	623b      	str	r3, [r7, #32]
 8012952:	f107 0220 	add.w	r2, r7, #32
 8012956:	f107 0310 	add.w	r3, r7, #16
 801295a:	4619      	mov	r1, r3
 801295c:	68f8      	ldr	r0, [r7, #12]
 801295e:	f7f3 fff0 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8012962:	68f8      	ldr	r0, [r7, #12]
 8012964:	372c      	adds	r7, #44	; 0x2c
 8012966:	46bd      	mov	sp, r7
 8012968:	bd90      	pop	{r4, r7, pc}

0801296a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>:
      operator()(_Pair& __x) const
 801296a:	b480      	push	{r7}
 801296c:	b083      	sub	sp, #12
 801296e:	af00      	add	r7, sp, #0
 8012970:	6078      	str	r0, [r7, #4]
 8012972:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8012974:	683b      	ldr	r3, [r7, #0]
 8012976:	4618      	mov	r0, r3
 8012978:	370c      	adds	r7, #12
 801297a:	46bd      	mov	sp, r7
 801297c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012980:	4770      	bx	lr

08012982 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>:
	_Alloc_node(_Rb_tree& __t)
 8012982:	b480      	push	{r7}
 8012984:	b083      	sub	sp, #12
 8012986:	af00      	add	r7, sp, #0
 8012988:	6078      	str	r0, [r7, #4]
 801298a:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801298c:	687b      	ldr	r3, [r7, #4]
 801298e:	683a      	ldr	r2, [r7, #0]
 8012990:	601a      	str	r2, [r3, #0]
 8012992:	687b      	ldr	r3, [r7, #4]
 8012994:	4618      	mov	r0, r3
 8012996:	370c      	adds	r7, #12
 8012998:	46bd      	mov	sp, r7
 801299a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801299e:	4770      	bx	lr

080129a0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80129a0:	b480      	push	{r7}
 80129a2:	b083      	sub	sp, #12
 80129a4:	af00      	add	r7, sp, #0
 80129a6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80129a8:	687b      	ldr	r3, [r7, #4]
 80129aa:	4618      	mov	r0, r3
 80129ac:	370c      	adds	r7, #12
 80129ae:	46bd      	mov	sp, r7
 80129b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80129b4:	4770      	bx	lr

080129b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80129b6:	b5b0      	push	{r4, r5, r7, lr}
 80129b8:	b088      	sub	sp, #32
 80129ba:	af00      	add	r7, sp, #0
 80129bc:	60f8      	str	r0, [r7, #12]
 80129be:	60b9      	str	r1, [r7, #8]
 80129c0:	607a      	str	r2, [r7, #4]
 80129c2:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80129c4:	68bb      	ldr	r3, [r7, #8]
 80129c6:	2b00      	cmp	r3, #0
 80129c8:	d11a      	bne.n	8012a00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 80129ca:	68f8      	ldr	r0, [r7, #12]
 80129cc:	f000 f864 	bl	8012a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 80129d0:	4602      	mov	r2, r0
 80129d2:	687b      	ldr	r3, [r7, #4]
 80129d4:	4293      	cmp	r3, r2
 80129d6:	d013      	beq.n	8012a00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80129d8:	68fc      	ldr	r4, [r7, #12]
 80129da:	f107 0310 	add.w	r3, r7, #16
 80129de:	6839      	ldr	r1, [r7, #0]
 80129e0:	4618      	mov	r0, r3
 80129e2:	f7ff ffc2 	bl	801296a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 80129e6:	4605      	mov	r5, r0
 80129e8:	6878      	ldr	r0, [r7, #4]
 80129ea:	f000 f892 	bl	8012b12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80129ee:	4603      	mov	r3, r0
 80129f0:	461a      	mov	r2, r3
 80129f2:	4629      	mov	r1, r5
 80129f4:	4620      	mov	r0, r4
 80129f6:	f7f4 f842 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80129fa:	4603      	mov	r3, r0
 80129fc:	2b00      	cmp	r3, #0
 80129fe:	d001      	beq.n	8012a04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4e>
 8012a00:	2301      	movs	r3, #1
 8012a02:	e000      	b.n	8012a06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x50>
 8012a04:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8012a06:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8012a08:	6838      	ldr	r0, [r7, #0]
 8012a0a:	f7ff ffc9 	bl	80129a0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012a0e:	4603      	mov	r3, r0
 8012a10:	4619      	mov	r1, r3
 8012a12:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8012a14:	f000 f91b 	bl	8012c4e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>
 8012a18:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8012a1a:	68fb      	ldr	r3, [r7, #12]
 8012a1c:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8012a1e:	7ff8      	ldrb	r0, [r7, #31]
 8012a20:	687a      	ldr	r2, [r7, #4]
 8012a22:	69b9      	ldr	r1, [r7, #24]
 8012a24:	f010 fca4 	bl	8023370 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8012a28:	68fb      	ldr	r3, [r7, #12]
 8012a2a:	695b      	ldr	r3, [r3, #20]
 8012a2c:	1c5a      	adds	r2, r3, #1
 8012a2e:	68fb      	ldr	r3, [r7, #12]
 8012a30:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8012a32:	f107 0314 	add.w	r3, r7, #20
 8012a36:	69b9      	ldr	r1, [r7, #24]
 8012a38:	4618      	mov	r0, r3
 8012a3a:	f000 f81e 	bl	8012a7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012a3e:	697b      	ldr	r3, [r7, #20]
      }
 8012a40:	4618      	mov	r0, r3
 8012a42:	3720      	adds	r7, #32
 8012a44:	46bd      	mov	sp, r7
 8012a46:	bdb0      	pop	{r4, r5, r7, pc}

08012a48 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8012a48:	b580      	push	{r7, lr}
 8012a4a:	b084      	sub	sp, #16
 8012a4c:	af00      	add	r7, sp, #0
 8012a4e:	60f8      	str	r0, [r7, #12]
 8012a50:	60b9      	str	r1, [r7, #8]
 8012a52:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8012a54:	68b8      	ldr	r0, [r7, #8]
 8012a56:	f000 f90e 	bl	8012c76 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8012a5a:	4602      	mov	r2, r0
 8012a5c:	68fb      	ldr	r3, [r7, #12]
 8012a5e:	6812      	ldr	r2, [r2, #0]
 8012a60:	601a      	str	r2, [r3, #0]
 8012a62:	6878      	ldr	r0, [r7, #4]
 8012a64:	f7f5 f8f8 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8012a68:	4603      	mov	r3, r0
 8012a6a:	781a      	ldrb	r2, [r3, #0]
 8012a6c:	68fb      	ldr	r3, [r7, #12]
 8012a6e:	711a      	strb	r2, [r3, #4]
 8012a70:	68fb      	ldr	r3, [r7, #12]
 8012a72:	4618      	mov	r0, r3
 8012a74:	3710      	adds	r7, #16
 8012a76:	46bd      	mov	sp, r7
 8012a78:	bd80      	pop	{r7, pc}

08012a7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8012a7a:	b480      	push	{r7}
 8012a7c:	b083      	sub	sp, #12
 8012a7e:	af00      	add	r7, sp, #0
 8012a80:	6078      	str	r0, [r7, #4]
 8012a82:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8012a84:	687b      	ldr	r3, [r7, #4]
 8012a86:	683a      	ldr	r2, [r7, #0]
 8012a88:	601a      	str	r2, [r3, #0]
 8012a8a:	687b      	ldr	r3, [r7, #4]
 8012a8c:	4618      	mov	r0, r3
 8012a8e:	370c      	adds	r7, #12
 8012a90:	46bd      	mov	sp, r7
 8012a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012a96:	4770      	bx	lr

08012a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8012a98:	b480      	push	{r7}
 8012a9a:	b083      	sub	sp, #12
 8012a9c:	af00      	add	r7, sp, #0
 8012a9e:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8012aa0:	687b      	ldr	r3, [r7, #4]
 8012aa2:	3304      	adds	r3, #4
 8012aa4:	4618      	mov	r0, r3
 8012aa6:	370c      	adds	r7, #12
 8012aa8:	46bd      	mov	sp, r7
 8012aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012aae:	4770      	bx	lr

08012ab0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8012ab0:	b590      	push	{r4, r7, lr}
 8012ab2:	b087      	sub	sp, #28
 8012ab4:	af00      	add	r7, sp, #0
 8012ab6:	60f8      	str	r0, [r7, #12]
 8012ab8:	60b9      	str	r1, [r7, #8]
 8012aba:	607a      	str	r2, [r7, #4]
 8012abc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8012abe:	68bb      	ldr	r3, [r7, #8]
 8012ac0:	2b00      	cmp	r3, #0
 8012ac2:	d01b      	beq.n	8012afc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8012ac4:	68fc      	ldr	r4, [r7, #12]
 8012ac6:	68b8      	ldr	r0, [r7, #8]
 8012ac8:	f000 f873 	bl	8012bb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 8012acc:	4603      	mov	r3, r0
 8012ace:	683a      	ldr	r2, [r7, #0]
 8012ad0:	4619      	mov	r1, r3
 8012ad2:	4620      	mov	r0, r4
 8012ad4:	f7f3 ffd3 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8012ad8:	4603      	mov	r3, r0
 8012ada:	f083 0301 	eor.w	r3, r3, #1
 8012ade:	b2db      	uxtb	r3, r3
 8012ae0:	2b00      	cmp	r3, #0
 8012ae2:	d006      	beq.n	8012af2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8012ae4:	68bb      	ldr	r3, [r7, #8]
 8012ae6:	607b      	str	r3, [r7, #4]
 8012ae8:	68b8      	ldr	r0, [r7, #8]
 8012aea:	f7ff fe9c 	bl	8012826 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 8012aee:	60b8      	str	r0, [r7, #8]
 8012af0:	e7e5      	b.n	8012abe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8012af2:	68b8      	ldr	r0, [r7, #8]
 8012af4:	f7ff fe8b 	bl	801280e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 8012af8:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8012afa:	e7e0      	b.n	8012abe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 8012afc:	f107 0314 	add.w	r3, r7, #20
 8012b00:	6879      	ldr	r1, [r7, #4]
 8012b02:	4618      	mov	r0, r3
 8012b04:	f7ff ffb9 	bl	8012a7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012b08:	697b      	ldr	r3, [r7, #20]
    }
 8012b0a:	4618      	mov	r0, r3
 8012b0c:	371c      	adds	r7, #28
 8012b0e:	46bd      	mov	sp, r7
 8012b10:	bd90      	pop	{r4, r7, pc}

08012b12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8012b12:	b580      	push	{r7, lr}
 8012b14:	b082      	sub	sp, #8
 8012b16:	af00      	add	r7, sp, #0
 8012b18:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8012b1a:	6878      	ldr	r0, [r7, #4]
 8012b1c:	f000 f849 	bl	8012bb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 8012b20:	4603      	mov	r3, r0
 8012b22:	4618      	mov	r0, r3
 8012b24:	3708      	adds	r7, #8
 8012b26:	46bd      	mov	sp, r7
 8012b28:	bd80      	pop	{r7, pc}

08012b2a <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 8012b2a:	b580      	push	{r7, lr}
 8012b2c:	b082      	sub	sp, #8
 8012b2e:	af00      	add	r7, sp, #0
 8012b30:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8012b32:	6878      	ldr	r0, [r7, #4]
 8012b34:	f000 f8aa 	bl	8012c8c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 8012b38:	4603      	mov	r3, r0
 8012b3a:	4618      	mov	r0, r3
 8012b3c:	3708      	adds	r7, #8
 8012b3e:	46bd      	mov	sp, r7
 8012b40:	bd80      	pop	{r7, pc}

08012b42 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 8012b42:	b590      	push	{r4, r7, lr}
 8012b44:	b087      	sub	sp, #28
 8012b46:	af00      	add	r7, sp, #0
 8012b48:	60f8      	str	r0, [r7, #12]
 8012b4a:	60b9      	str	r1, [r7, #8]
 8012b4c:	607a      	str	r2, [r7, #4]
 8012b4e:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 8012b50:	4623      	mov	r3, r4
 8012b52:	687a      	ldr	r2, [r7, #4]
 8012b54:	68b9      	ldr	r1, [r7, #8]
 8012b56:	68f8      	ldr	r0, [r7, #12]
 8012b58:	f000 f8b8 	bl	8012ccc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
	}
 8012b5c:	bf00      	nop
 8012b5e:	371c      	adds	r7, #28
 8012b60:	46bd      	mov	sp, r7
 8012b62:	bd90      	pop	{r4, r7, pc}

08012b64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8012b64:	b590      	push	{r4, r7, lr}
 8012b66:	b083      	sub	sp, #12
 8012b68:	af00      	add	r7, sp, #0
 8012b6a:	6078      	str	r0, [r7, #4]
 8012b6c:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8012b6e:	6878      	ldr	r0, [r7, #4]
 8012b70:	f000 f8f4 	bl	8012d5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012b74:	4604      	mov	r4, r0
 8012b76:	6838      	ldr	r0, [r7, #0]
 8012b78:	f7ff fe21 	bl	80127be <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8012b7c:	4603      	mov	r3, r0
 8012b7e:	4619      	mov	r1, r3
 8012b80:	4620      	mov	r0, r4
 8012b82:	f000 f8f6 	bl	8012d72 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>
      }
 8012b86:	bf00      	nop
 8012b88:	370c      	adds	r7, #12
 8012b8a:	46bd      	mov	sp, r7
 8012b8c:	bd90      	pop	{r4, r7, pc}

08012b8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8012b8e:	b580      	push	{r7, lr}
 8012b90:	b082      	sub	sp, #8
 8012b92:	af00      	add	r7, sp, #0
 8012b94:	6078      	str	r0, [r7, #4]
 8012b96:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8012b98:	6878      	ldr	r0, [r7, #4]
 8012b9a:	f000 f8df 	bl	8012d5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012b9e:	4603      	mov	r3, r0
 8012ba0:	2201      	movs	r2, #1
 8012ba2:	6839      	ldr	r1, [r7, #0]
 8012ba4:	4618      	mov	r0, r3
 8012ba6:	f000 f8f1 	bl	8012d8c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>
 8012baa:	bf00      	nop
 8012bac:	3708      	adds	r7, #8
 8012bae:	46bd      	mov	sp, r7
 8012bb0:	bd80      	pop	{r7, pc}

08012bb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>:
      _S_key(_Const_Link_type __x)
 8012bb2:	b580      	push	{r7, lr}
 8012bb4:	b084      	sub	sp, #16
 8012bb6:	af00      	add	r7, sp, #0
 8012bb8:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8012bba:	6878      	ldr	r0, [r7, #4]
 8012bbc:	f000 f8f5 	bl	8012daa <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8012bc0:	4602      	mov	r2, r0
 8012bc2:	f107 030c 	add.w	r3, r7, #12
 8012bc6:	4611      	mov	r1, r2
 8012bc8:	4618      	mov	r0, r3
 8012bca:	f000 f8fc 	bl	8012dc6 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>
 8012bce:	4603      	mov	r3, r0
      }
 8012bd0:	4618      	mov	r0, r3
 8012bd2:	3710      	adds	r7, #16
 8012bd4:	46bd      	mov	sp, r7
 8012bd6:	bd80      	pop	{r7, pc}

08012bd8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8012bd8:	b580      	push	{r7, lr}
 8012bda:	b084      	sub	sp, #16
 8012bdc:	af00      	add	r7, sp, #0
 8012bde:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8012be0:	687b      	ldr	r3, [r7, #4]
 8012be2:	68da      	ldr	r2, [r3, #12]
 8012be4:	f107 030c 	add.w	r3, r7, #12
 8012be8:	4611      	mov	r1, r2
 8012bea:	4618      	mov	r0, r3
 8012bec:	f7ff ff45 	bl	8012a7a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8012bf0:	68fb      	ldr	r3, [r7, #12]
 8012bf2:	4618      	mov	r0, r3
 8012bf4:	3710      	adds	r7, #16
 8012bf6:	46bd      	mov	sp, r7
 8012bf8:	bd80      	pop	{r7, pc}

08012bfa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8012bfa:	b580      	push	{r7, lr}
 8012bfc:	b084      	sub	sp, #16
 8012bfe:	af00      	add	r7, sp, #0
 8012c00:	60f8      	str	r0, [r7, #12]
 8012c02:	60b9      	str	r1, [r7, #8]
 8012c04:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8012c06:	68b8      	ldr	r0, [r7, #8]
 8012c08:	f000 f8e9 	bl	8012dde <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>
 8012c0c:	4603      	mov	r3, r0
 8012c0e:	681a      	ldr	r2, [r3, #0]
 8012c10:	68fb      	ldr	r3, [r7, #12]
 8012c12:	601a      	str	r2, [r3, #0]
 8012c14:	6878      	ldr	r0, [r7, #4]
 8012c16:	f7f4 fcfc 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8012c1a:	4603      	mov	r3, r0
 8012c1c:	681a      	ldr	r2, [r3, #0]
 8012c1e:	68fb      	ldr	r3, [r7, #12]
 8012c20:	605a      	str	r2, [r3, #4]
 8012c22:	68fb      	ldr	r3, [r7, #12]
 8012c24:	4618      	mov	r0, r3
 8012c26:	3710      	adds	r7, #16
 8012c28:	46bd      	mov	sp, r7
 8012c2a:	bd80      	pop	{r7, pc}

08012c2c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8012c2c:	b580      	push	{r7, lr}
 8012c2e:	b082      	sub	sp, #8
 8012c30:	af00      	add	r7, sp, #0
 8012c32:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8012c34:	687b      	ldr	r3, [r7, #4]
 8012c36:	681b      	ldr	r3, [r3, #0]
 8012c38:	4618      	mov	r0, r3
 8012c3a:	f010 fb97 	bl	802336c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8012c3e:	4602      	mov	r2, r0
 8012c40:	687b      	ldr	r3, [r7, #4]
 8012c42:	601a      	str	r2, [r3, #0]
	return *this;
 8012c44:	687b      	ldr	r3, [r7, #4]
      }
 8012c46:	4618      	mov	r0, r3
 8012c48:	3708      	adds	r7, #8
 8012c4a:	46bd      	mov	sp, r7
 8012c4c:	bd80      	pop	{r7, pc}

08012c4e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>:
	  operator()(_Arg&& __arg) const
 8012c4e:	b590      	push	{r4, r7, lr}
 8012c50:	b083      	sub	sp, #12
 8012c52:	af00      	add	r7, sp, #0
 8012c54:	6078      	str	r0, [r7, #4]
 8012c56:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8012c58:	687b      	ldr	r3, [r7, #4]
 8012c5a:	681c      	ldr	r4, [r3, #0]
 8012c5c:	6838      	ldr	r0, [r7, #0]
 8012c5e:	f7ff fe9f 	bl	80129a0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012c62:	4603      	mov	r3, r0
 8012c64:	4619      	mov	r1, r3
 8012c66:	4620      	mov	r0, r4
 8012c68:	f000 f8c4 	bl	8012df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>
 8012c6c:	4603      	mov	r3, r0
 8012c6e:	4618      	mov	r0, r3
 8012c70:	370c      	adds	r7, #12
 8012c72:	46bd      	mov	sp, r7
 8012c74:	bd90      	pop	{r4, r7, pc}

08012c76 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012c76:	b480      	push	{r7}
 8012c78:	b083      	sub	sp, #12
 8012c7a:	af00      	add	r7, sp, #0
 8012c7c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012c7e:	687b      	ldr	r3, [r7, #4]
 8012c80:	4618      	mov	r0, r3
 8012c82:	370c      	adds	r7, #12
 8012c84:	46bd      	mov	sp, r7
 8012c86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c8a:	4770      	bx	lr

08012c8c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 8012c8c:	b480      	push	{r7}
 8012c8e:	b083      	sub	sp, #12
 8012c90:	af00      	add	r7, sp, #0
 8012c92:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8012c94:	687b      	ldr	r3, [r7, #4]
 8012c96:	4618      	mov	r0, r3
 8012c98:	370c      	adds	r7, #12
 8012c9a:	46bd      	mov	sp, r7
 8012c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ca0:	4770      	bx	lr

08012ca2 <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_>:
    distance(_InputIterator __first, _InputIterator __last)
 8012ca2:	b5b0      	push	{r4, r5, r7, lr}
 8012ca4:	b082      	sub	sp, #8
 8012ca6:	af00      	add	r7, sp, #0
 8012ca8:	6078      	str	r0, [r7, #4]
 8012caa:	6039      	str	r1, [r7, #0]
      return std::__distance(__first, __last,
 8012cac:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 8012cae:	1d3b      	adds	r3, r7, #4
 8012cb0:	4618      	mov	r0, r3
 8012cb2:	f000 f8c6 	bl	8012e42 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__distance(__first, __last,
 8012cb6:	462a      	mov	r2, r5
 8012cb8:	6839      	ldr	r1, [r7, #0]
 8012cba:	4620      	mov	r0, r4
 8012cbc:	f000 f8cb 	bl	8012e56 <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag>
 8012cc0:	4603      	mov	r3, r0
    }
 8012cc2:	4618      	mov	r0, r3
 8012cc4:	3708      	adds	r7, #8
 8012cc6:	46bd      	mov	sp, r7
 8012cc8:	bdb0      	pop	{r4, r5, r7, pc}
	...

08012ccc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
 8012ccc:	b580      	push	{r7, lr}
 8012cce:	b086      	sub	sp, #24
 8012cd0:	af00      	add	r7, sp, #0
 8012cd2:	60f8      	str	r0, [r7, #12]
 8012cd4:	60b9      	str	r1, [r7, #8]
 8012cd6:	607a      	str	r2, [r7, #4]
 8012cd8:	703b      	strb	r3, [r7, #0]
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 8012cda:	68b8      	ldr	r0, [r7, #8]
 8012cdc:	f000 f8a1 	bl	8012e22 <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_>
 8012ce0:	4603      	mov	r3, r0
 8012ce2:	2b00      	cmp	r3, #0
 8012ce4:	d005      	beq.n	8012cf2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x26>
 8012ce6:	68ba      	ldr	r2, [r7, #8]
 8012ce8:	687b      	ldr	r3, [r7, #4]
 8012cea:	429a      	cmp	r2, r3
 8012cec:	d001      	beq.n	8012cf2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x26>
 8012cee:	2301      	movs	r3, #1
 8012cf0:	e000      	b.n	8012cf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x28>
 8012cf2:	2300      	movs	r3, #0
 8012cf4:	2b00      	cmp	r3, #0
 8012cf6:	d002      	beq.n	8012cfe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 8012cf8:	4817      	ldr	r0, [pc, #92]	; (8012d58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x8c>)
 8012cfa:	f010 fb98 	bl	802342e <_ZSt19__throw_logic_errorPKc>
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 8012cfe:	6879      	ldr	r1, [r7, #4]
 8012d00:	68b8      	ldr	r0, [r7, #8]
 8012d02:	f7ff ffce 	bl	8012ca2 <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_>
 8012d06:	4603      	mov	r3, r0
 8012d08:	617b      	str	r3, [r7, #20]
	if (__dnew > size_type(_S_local_capacity))
 8012d0a:	697b      	ldr	r3, [r7, #20]
 8012d0c:	2b0f      	cmp	r3, #15
 8012d0e:	d910      	bls.n	8012d32 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x66>
	    _M_data(_M_create(__dnew, size_type(0)));
 8012d10:	f107 0314 	add.w	r3, r7, #20
 8012d14:	2200      	movs	r2, #0
 8012d16:	4619      	mov	r1, r3
 8012d18:	68f8      	ldr	r0, [r7, #12]
 8012d1a:	f010 fc5b 	bl	80235d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8012d1e:	4603      	mov	r3, r0
 8012d20:	4619      	mov	r1, r3
 8012d22:	68f8      	ldr	r0, [r7, #12]
 8012d24:	f010 fc48 	bl	80235b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 8012d28:	697b      	ldr	r3, [r7, #20]
 8012d2a:	4619      	mov	r1, r3
 8012d2c:	68f8      	ldr	r0, [r7, #12]
 8012d2e:	f010 fc49 	bl	80235c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 8012d32:	68f8      	ldr	r0, [r7, #12]
 8012d34:	f010 fc42 	bl	80235bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 8012d38:	4603      	mov	r3, r0
 8012d3a:	687a      	ldr	r2, [r7, #4]
 8012d3c:	68b9      	ldr	r1, [r7, #8]
 8012d3e:	4618      	mov	r0, r3
 8012d40:	f010 fcad 	bl	802369e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
	_M_set_length(__dnew);
 8012d44:	697b      	ldr	r3, [r7, #20]
 8012d46:	4619      	mov	r1, r3
 8012d48:	68f8      	ldr	r0, [r7, #12]
 8012d4a:	f010 fc3d 	bl	80235c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 8012d4e:	bf00      	nop
 8012d50:	3718      	adds	r7, #24
 8012d52:	46bd      	mov	sp, r7
 8012d54:	bd80      	pop	{r7, pc}
 8012d56:	bf00      	nop
 8012d58:	08029664 	.word	0x08029664

08012d5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8012d5c:	b480      	push	{r7}
 8012d5e:	b083      	sub	sp, #12
 8012d60:	af00      	add	r7, sp, #0
 8012d62:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8012d64:	687b      	ldr	r3, [r7, #4]
 8012d66:	4618      	mov	r0, r3
 8012d68:	370c      	adds	r7, #12
 8012d6a:	46bd      	mov	sp, r7
 8012d6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012d70:	4770      	bx	lr

08012d72 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8012d72:	b580      	push	{r7, lr}
 8012d74:	b082      	sub	sp, #8
 8012d76:	af00      	add	r7, sp, #0
 8012d78:	6078      	str	r0, [r7, #4]
 8012d7a:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8012d7c:	6839      	ldr	r1, [r7, #0]
 8012d7e:	6878      	ldr	r0, [r7, #4]
 8012d80:	f000 f878 	bl	8012e74 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>
 8012d84:	bf00      	nop
 8012d86:	3708      	adds	r7, #8
 8012d88:	46bd      	mov	sp, r7
 8012d8a:	bd80      	pop	{r7, pc}

08012d8c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8012d8c:	b580      	push	{r7, lr}
 8012d8e:	b084      	sub	sp, #16
 8012d90:	af00      	add	r7, sp, #0
 8012d92:	60f8      	str	r0, [r7, #12]
 8012d94:	60b9      	str	r1, [r7, #8]
 8012d96:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8012d98:	687a      	ldr	r2, [r7, #4]
 8012d9a:	68b9      	ldr	r1, [r7, #8]
 8012d9c:	68f8      	ldr	r0, [r7, #12]
 8012d9e:	f000 f875 	bl	8012e8c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>
 8012da2:	bf00      	nop
 8012da4:	3710      	adds	r7, #16
 8012da6:	46bd      	mov	sp, r7
 8012da8:	bd80      	pop	{r7, pc}

08012daa <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr() const
 8012daa:	b580      	push	{r7, lr}
 8012dac:	b082      	sub	sp, #8
 8012dae:	af00      	add	r7, sp, #0
 8012db0:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8012db2:	687b      	ldr	r3, [r7, #4]
 8012db4:	3310      	adds	r3, #16
 8012db6:	4618      	mov	r0, r3
 8012db8:	f000 f874 	bl	8012ea4 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 8012dbc:	4603      	mov	r3, r0
 8012dbe:	4618      	mov	r0, r3
 8012dc0:	3708      	adds	r7, #8
 8012dc2:	46bd      	mov	sp, r7
 8012dc4:	bd80      	pop	{r7, pc}

08012dc6 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>:
      operator()(const _Pair& __x) const
 8012dc6:	b480      	push	{r7}
 8012dc8:	b083      	sub	sp, #12
 8012dca:	af00      	add	r7, sp, #0
 8012dcc:	6078      	str	r0, [r7, #4]
 8012dce:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8012dd0:	683b      	ldr	r3, [r7, #0]
 8012dd2:	4618      	mov	r0, r3
 8012dd4:	370c      	adds	r7, #12
 8012dd6:	46bd      	mov	sp, r7
 8012dd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ddc:	4770      	bx	lr

08012dde <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8012dde:	b480      	push	{r7}
 8012de0:	b083      	sub	sp, #12
 8012de2:	af00      	add	r7, sp, #0
 8012de4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8012de6:	687b      	ldr	r3, [r7, #4]
 8012de8:	4618      	mov	r0, r3
 8012dea:	370c      	adds	r7, #12
 8012dec:	46bd      	mov	sp, r7
 8012dee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012df2:	4770      	bx	lr

08012df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8012df4:	b580      	push	{r7, lr}
 8012df6:	b084      	sub	sp, #16
 8012df8:	af00      	add	r7, sp, #0
 8012dfa:	6078      	str	r0, [r7, #4]
 8012dfc:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8012dfe:	6878      	ldr	r0, [r7, #4]
 8012e00:	f000 f85c 	bl	8012ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>
 8012e04:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8012e06:	6838      	ldr	r0, [r7, #0]
 8012e08:	f7ff fdca 	bl	80129a0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012e0c:	4603      	mov	r3, r0
 8012e0e:	461a      	mov	r2, r3
 8012e10:	68f9      	ldr	r1, [r7, #12]
 8012e12:	6878      	ldr	r0, [r7, #4]
 8012e14:	f000 f863 	bl	8012ede <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>
	  return __tmp;
 8012e18:	68fb      	ldr	r3, [r7, #12]
	}
 8012e1a:	4618      	mov	r0, r3
 8012e1c:	3710      	adds	r7, #16
 8012e1e:	46bd      	mov	sp, r7
 8012e20:	bd80      	pop	{r7, pc}

08012e22 <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_>:
    __is_null_pointer(_Type* __ptr)
 8012e22:	b480      	push	{r7}
 8012e24:	b083      	sub	sp, #12
 8012e26:	af00      	add	r7, sp, #0
 8012e28:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 8012e2a:	687b      	ldr	r3, [r7, #4]
 8012e2c:	2b00      	cmp	r3, #0
 8012e2e:	bf0c      	ite	eq
 8012e30:	2301      	moveq	r3, #1
 8012e32:	2300      	movne	r3, #0
 8012e34:	b2db      	uxtb	r3, r3
 8012e36:	4618      	mov	r0, r3
 8012e38:	370c      	adds	r7, #12
 8012e3a:	46bd      	mov	sp, r7
 8012e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e40:	4770      	bx	lr

08012e42 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
 8012e42:	b480      	push	{r7}
 8012e44:	b083      	sub	sp, #12
 8012e46:	af00      	add	r7, sp, #0
 8012e48:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8012e4a:	4618      	mov	r0, r3
 8012e4c:	370c      	adds	r7, #12
 8012e4e:	46bd      	mov	sp, r7
 8012e50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e54:	4770      	bx	lr

08012e56 <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8012e56:	b480      	push	{r7}
 8012e58:	b085      	sub	sp, #20
 8012e5a:	af00      	add	r7, sp, #0
 8012e5c:	60f8      	str	r0, [r7, #12]
 8012e5e:	60b9      	str	r1, [r7, #8]
 8012e60:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8012e62:	68ba      	ldr	r2, [r7, #8]
 8012e64:	68fb      	ldr	r3, [r7, #12]
 8012e66:	1ad3      	subs	r3, r2, r3
    }
 8012e68:	4618      	mov	r0, r3
 8012e6a:	3714      	adds	r7, #20
 8012e6c:	46bd      	mov	sp, r7
 8012e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e72:	4770      	bx	lr

08012e74 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>:
	destroy(_Up* __p)
 8012e74:	b580      	push	{r7, lr}
 8012e76:	b082      	sub	sp, #8
 8012e78:	af00      	add	r7, sp, #0
 8012e7a:	6078      	str	r0, [r7, #4]
 8012e7c:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8012e7e:	6838      	ldr	r0, [r7, #0]
 8012e80:	f7ff f8b4 	bl	8011fec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEED1Ev>
 8012e84:	bf00      	nop
 8012e86:	3708      	adds	r7, #8
 8012e88:	46bd      	mov	sp, r7
 8012e8a:	bd80      	pop	{r7, pc}

08012e8c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>:
      deallocate(pointer __p, size_type)
 8012e8c:	b580      	push	{r7, lr}
 8012e8e:	b084      	sub	sp, #16
 8012e90:	af00      	add	r7, sp, #0
 8012e92:	60f8      	str	r0, [r7, #12]
 8012e94:	60b9      	str	r1, [r7, #8]
 8012e96:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8012e98:	68b8      	ldr	r0, [r7, #8]
 8012e9a:	f010 f9ed 	bl	8023278 <_ZdlPv>
      }
 8012e9e:	3710      	adds	r7, #16
 8012ea0:	46bd      	mov	sp, r7
 8012ea2:	bd80      	pop	{r7, pc}

08012ea4 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8012ea4:	b580      	push	{r7, lr}
 8012ea6:	b082      	sub	sp, #8
 8012ea8:	af00      	add	r7, sp, #0
 8012eaa:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8012eac:	6878      	ldr	r0, [r7, #4]
 8012eae:	f000 f836 	bl	8012f1e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 8012eb2:	4603      	mov	r3, r0
 8012eb4:	4618      	mov	r0, r3
 8012eb6:	3708      	adds	r7, #8
 8012eb8:	46bd      	mov	sp, r7
 8012eba:	bd80      	pop	{r7, pc}

08012ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>:
      _M_get_node()
 8012ebc:	b580      	push	{r7, lr}
 8012ebe:	b082      	sub	sp, #8
 8012ec0:	af00      	add	r7, sp, #0
 8012ec2:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8012ec4:	6878      	ldr	r0, [r7, #4]
 8012ec6:	f7ff ff49 	bl	8012d5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012eca:	4603      	mov	r3, r0
 8012ecc:	2101      	movs	r1, #1
 8012ece:	4618      	mov	r0, r3
 8012ed0:	f000 f830 	bl	8012f34 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>
 8012ed4:	4603      	mov	r3, r0
 8012ed6:	4618      	mov	r0, r3
 8012ed8:	3708      	adds	r7, #8
 8012eda:	46bd      	mov	sp, r7
 8012edc:	bd80      	pop	{r7, pc}

08012ede <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8012ede:	b5b0      	push	{r4, r5, r7, lr}
 8012ee0:	b084      	sub	sp, #16
 8012ee2:	af00      	add	r7, sp, #0
 8012ee4:	60f8      	str	r0, [r7, #12]
 8012ee6:	60b9      	str	r1, [r7, #8]
 8012ee8:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8012eea:	68bb      	ldr	r3, [r7, #8]
 8012eec:	4619      	mov	r1, r3
 8012eee:	202c      	movs	r0, #44	; 0x2c
 8012ef0:	f7ee f8b3 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8012ef4:	68f8      	ldr	r0, [r7, #12]
 8012ef6:	f7ff ff31 	bl	8012d5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8012efa:	4604      	mov	r4, r0
 8012efc:	68b8      	ldr	r0, [r7, #8]
 8012efe:	f7ff fc5e 	bl	80127be <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8012f02:	4605      	mov	r5, r0
 8012f04:	6878      	ldr	r0, [r7, #4]
 8012f06:	f7ff fd4b 	bl	80129a0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012f0a:	4603      	mov	r3, r0
 8012f0c:	461a      	mov	r2, r3
 8012f0e:	4629      	mov	r1, r5
 8012f10:	4620      	mov	r0, r4
 8012f12:	f000 f81e 	bl	8012f52 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>
	}
 8012f16:	bf00      	nop
 8012f18:	3710      	adds	r7, #16
 8012f1a:	46bd      	mov	sp, r7
 8012f1c:	bdb0      	pop	{r4, r5, r7, pc}

08012f1e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 8012f1e:	b480      	push	{r7}
 8012f20:	b083      	sub	sp, #12
 8012f22:	af00      	add	r7, sp, #0
 8012f24:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8012f26:	687b      	ldr	r3, [r7, #4]
 8012f28:	4618      	mov	r0, r3
 8012f2a:	370c      	adds	r7, #12
 8012f2c:	46bd      	mov	sp, r7
 8012f2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f32:	4770      	bx	lr

08012f34 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>:
      allocate(allocator_type& __a, size_type __n)
 8012f34:	b580      	push	{r7, lr}
 8012f36:	b082      	sub	sp, #8
 8012f38:	af00      	add	r7, sp, #0
 8012f3a:	6078      	str	r0, [r7, #4]
 8012f3c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8012f3e:	2200      	movs	r2, #0
 8012f40:	6839      	ldr	r1, [r7, #0]
 8012f42:	6878      	ldr	r0, [r7, #4]
 8012f44:	f000 f818 	bl	8012f78 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>
 8012f48:	4603      	mov	r3, r0
 8012f4a:	4618      	mov	r0, r3
 8012f4c:	3708      	adds	r7, #8
 8012f4e:	46bd      	mov	sp, r7
 8012f50:	bd80      	pop	{r7, pc}

08012f52 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8012f52:	b580      	push	{r7, lr}
 8012f54:	b084      	sub	sp, #16
 8012f56:	af00      	add	r7, sp, #0
 8012f58:	60f8      	str	r0, [r7, #12]
 8012f5a:	60b9      	str	r1, [r7, #8]
 8012f5c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8012f5e:	6878      	ldr	r0, [r7, #4]
 8012f60:	f7ff fd1e 	bl	80129a0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012f64:	4603      	mov	r3, r0
 8012f66:	461a      	mov	r2, r3
 8012f68:	68b9      	ldr	r1, [r7, #8]
 8012f6a:	68f8      	ldr	r0, [r7, #12]
 8012f6c:	f000 f839 	bl	8012fe2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>
 8012f70:	bf00      	nop
 8012f72:	3710      	adds	r7, #16
 8012f74:	46bd      	mov	sp, r7
 8012f76:	bd80      	pop	{r7, pc}

08012f78 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8012f78:	b580      	push	{r7, lr}
 8012f7a:	b084      	sub	sp, #16
 8012f7c:	af00      	add	r7, sp, #0
 8012f7e:	60f8      	str	r0, [r7, #12]
 8012f80:	60b9      	str	r1, [r7, #8]
 8012f82:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8012f84:	68f8      	ldr	r0, [r7, #12]
 8012f86:	f000 f845 	bl	8013014 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>
 8012f8a:	4602      	mov	r2, r0
 8012f8c:	68bb      	ldr	r3, [r7, #8]
 8012f8e:	4293      	cmp	r3, r2
 8012f90:	bf8c      	ite	hi
 8012f92:	2301      	movhi	r3, #1
 8012f94:	2300      	movls	r3, #0
 8012f96:	b2db      	uxtb	r3, r3
 8012f98:	2b00      	cmp	r3, #0
 8012f9a:	d001      	beq.n	8012fa0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8012f9c:	f010 fa44 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8012fa0:	68bb      	ldr	r3, [r7, #8]
 8012fa2:	222c      	movs	r2, #44	; 0x2c
 8012fa4:	fb02 f303 	mul.w	r3, r2, r3
 8012fa8:	4618      	mov	r0, r3
 8012faa:	f010 f978 	bl	802329e <_Znwj>
 8012fae:	4603      	mov	r3, r0
 8012fb0:	bf00      	nop
      }
 8012fb2:	4618      	mov	r0, r3
 8012fb4:	3710      	adds	r7, #16
 8012fb6:	46bd      	mov	sp, r7
 8012fb8:	bd80      	pop	{r7, pc}

08012fba <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>:
      constexpr pair(pair&&) = default;
 8012fba:	b580      	push	{r7, lr}
 8012fbc:	b082      	sub	sp, #8
 8012fbe:	af00      	add	r7, sp, #0
 8012fc0:	6078      	str	r0, [r7, #4]
 8012fc2:	6039      	str	r1, [r7, #0]
 8012fc4:	687b      	ldr	r3, [r7, #4]
 8012fc6:	683a      	ldr	r2, [r7, #0]
 8012fc8:	4611      	mov	r1, r2
 8012fca:	4618      	mov	r0, r3
 8012fcc:	f010 fdd8 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8012fd0:	683b      	ldr	r3, [r7, #0]
 8012fd2:	699a      	ldr	r2, [r3, #24]
 8012fd4:	687b      	ldr	r3, [r7, #4]
 8012fd6:	619a      	str	r2, [r3, #24]
 8012fd8:	687b      	ldr	r3, [r7, #4]
 8012fda:	4618      	mov	r0, r3
 8012fdc:	3708      	adds	r7, #8
 8012fde:	46bd      	mov	sp, r7
 8012fe0:	bd80      	pop	{r7, pc}

08012fe2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8012fe2:	b590      	push	{r4, r7, lr}
 8012fe4:	b085      	sub	sp, #20
 8012fe6:	af00      	add	r7, sp, #0
 8012fe8:	60f8      	str	r0, [r7, #12]
 8012fea:	60b9      	str	r1, [r7, #8]
 8012fec:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8012fee:	6878      	ldr	r0, [r7, #4]
 8012ff0:	f7ff fcd6 	bl	80129a0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8012ff4:	4604      	mov	r4, r0
 8012ff6:	68bb      	ldr	r3, [r7, #8]
 8012ff8:	4619      	mov	r1, r3
 8012ffa:	201c      	movs	r0, #28
 8012ffc:	f7ee f82d 	bl	800105a <_ZnwjPv>
 8013000:	4603      	mov	r3, r0
 8013002:	4621      	mov	r1, r4
 8013004:	4618      	mov	r0, r3
 8013006:	f7ff ffd8 	bl	8012fba <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>
 801300a:	bf00      	nop
 801300c:	3714      	adds	r7, #20
 801300e:	46bd      	mov	sp, r7
 8013010:	bd90      	pop	{r4, r7, pc}
	...

08013014 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8013014:	b480      	push	{r7}
 8013016:	b083      	sub	sp, #12
 8013018:	af00      	add	r7, sp, #0
 801301a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801301c:	4b03      	ldr	r3, [pc, #12]	; (801302c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFvR6SymbolSt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv+0x18>)
      }
 801301e:	4618      	mov	r0, r3
 8013020:	370c      	adds	r7, #12
 8013022:	46bd      	mov	sp, r7
 8013024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013028:	4770      	bx	lr
 801302a:	bf00      	nop
 801302c:	02e8ba2e 	.word	0x02e8ba2e

08013030 <_Z41__static_initialization_and_destruction_0ii>:
 8013030:	b590      	push	{r4, r7, lr}
 8013032:	b0e7      	sub	sp, #412	; 0x19c
 8013034:	af02      	add	r7, sp, #8
 8013036:	1d3b      	adds	r3, r7, #4
 8013038:	6018      	str	r0, [r3, #0]
 801303a:	463b      	mov	r3, r7
 801303c:	6019      	str	r1, [r3, #0]
 801303e:	1d3b      	adds	r3, r7, #4
 8013040:	681b      	ldr	r3, [r3, #0]
 8013042:	2b01      	cmp	r3, #1
 8013044:	f040 819d 	bne.w	8013382 <_Z41__static_initialization_and_destruction_0ii+0x352>
 8013048:	463b      	mov	r3, r7
 801304a:	681b      	ldr	r3, [r3, #0]
 801304c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013050:	4293      	cmp	r3, r2
 8013052:	f040 8196 	bne.w	8013382 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8013056:	f107 0314 	add.w	r3, r7, #20
 801305a:	4618      	mov	r0, r3
 801305c:	2322      	movs	r3, #34	; 0x22
 801305e:	461a      	mov	r2, r3
 8013060:	2100      	movs	r1, #0
 8013062:	f011 fe0b 	bl	8024c7c <memset>
 8013066:	f107 0314 	add.w	r3, r7, #20
 801306a:	223a      	movs	r2, #58	; 0x3a
 801306c:	701a      	strb	r2, [r3, #0]
 801306e:	f107 0314 	add.w	r3, r7, #20
 8013072:	2201      	movs	r2, #1
 8013074:	705a      	strb	r2, [r3, #1]
 8013076:	f107 0314 	add.w	r3, r7, #20
 801307a:	220a      	movs	r2, #10
 801307c:	709a      	strb	r2, [r3, #2]
 801307e:	f107 0314 	add.w	r3, r7, #20
 8013082:	220a      	movs	r2, #10
 8013084:	70da      	strb	r2, [r3, #3]
 8013086:	f107 0314 	add.w	r3, r7, #20
 801308a:	222c      	movs	r2, #44	; 0x2c
 801308c:	711a      	strb	r2, [r3, #4]
 801308e:	f107 0314 	add.w	r3, r7, #20
 8013092:	220c      	movs	r2, #12
 8013094:	715a      	strb	r2, [r3, #5]
 8013096:	f107 0314 	add.w	r3, r7, #20
 801309a:	222e      	movs	r2, #46	; 0x2e
 801309c:	719a      	strb	r2, [r3, #6]
 801309e:	f107 0314 	add.w	r3, r7, #20
 80130a2:	220b      	movs	r2, #11
 80130a4:	71da      	strb	r2, [r3, #7]
 80130a6:	f107 0314 	add.w	r3, r7, #20
 80130aa:	225b      	movs	r2, #91	; 0x5b
 80130ac:	721a      	strb	r2, [r3, #8]
 80130ae:	f107 0314 	add.w	r3, r7, #20
 80130b2:	220d      	movs	r2, #13
 80130b4:	725a      	strb	r2, [r3, #9]
 80130b6:	f107 0314 	add.w	r3, r7, #20
 80130ba:	225d      	movs	r2, #93	; 0x5d
 80130bc:	729a      	strb	r2, [r3, #10]
 80130be:	f107 0314 	add.w	r3, r7, #20
 80130c2:	220e      	movs	r2, #14
 80130c4:	72da      	strb	r2, [r3, #11]
 80130c6:	f107 0314 	add.w	r3, r7, #20
 80130ca:	227c      	movs	r2, #124	; 0x7c
 80130cc:	731a      	strb	r2, [r3, #12]
 80130ce:	f107 0314 	add.w	r3, r7, #20
 80130d2:	2215      	movs	r2, #21
 80130d4:	735a      	strb	r2, [r3, #13]
 80130d6:	f107 0314 	add.w	r3, r7, #20
 80130da:	2226      	movs	r2, #38	; 0x26
 80130dc:	739a      	strb	r2, [r3, #14]
 80130de:	f107 0314 	add.w	r3, r7, #20
 80130e2:	2216      	movs	r2, #22
 80130e4:	73da      	strb	r2, [r3, #15]
 80130e6:	f107 0314 	add.w	r3, r7, #20
 80130ea:	222b      	movs	r2, #43	; 0x2b
 80130ec:	741a      	strb	r2, [r3, #16]
 80130ee:	f107 0314 	add.w	r3, r7, #20
 80130f2:	221f      	movs	r2, #31
 80130f4:	745a      	strb	r2, [r3, #17]
 80130f6:	f107 0314 	add.w	r3, r7, #20
 80130fa:	222d      	movs	r2, #45	; 0x2d
 80130fc:	749a      	strb	r2, [r3, #18]
 80130fe:	f107 0314 	add.w	r3, r7, #20
 8013102:	2220      	movs	r2, #32
 8013104:	74da      	strb	r2, [r3, #19]
 8013106:	f107 0314 	add.w	r3, r7, #20
 801310a:	222a      	movs	r2, #42	; 0x2a
 801310c:	751a      	strb	r2, [r3, #20]
 801310e:	f107 0314 	add.w	r3, r7, #20
 8013112:	2221      	movs	r2, #33	; 0x21
 8013114:	755a      	strb	r2, [r3, #21]
 8013116:	f107 0314 	add.w	r3, r7, #20
 801311a:	222f      	movs	r2, #47	; 0x2f
 801311c:	759a      	strb	r2, [r3, #22]
 801311e:	f107 0314 	add.w	r3, r7, #20
 8013122:	2222      	movs	r2, #34	; 0x22
 8013124:	75da      	strb	r2, [r3, #23]
 8013126:	f107 0314 	add.w	r3, r7, #20
 801312a:	225e      	movs	r2, #94	; 0x5e
 801312c:	761a      	strb	r2, [r3, #24]
 801312e:	f107 0314 	add.w	r3, r7, #20
 8013132:	2223      	movs	r2, #35	; 0x23
 8013134:	765a      	strb	r2, [r3, #25]
 8013136:	f107 0314 	add.w	r3, r7, #20
 801313a:	2225      	movs	r2, #37	; 0x25
 801313c:	769a      	strb	r2, [r3, #26]
 801313e:	f107 0314 	add.w	r3, r7, #20
 8013142:	2224      	movs	r2, #36	; 0x24
 8013144:	76da      	strb	r2, [r3, #27]
 8013146:	f107 0314 	add.w	r3, r7, #20
 801314a:	2228      	movs	r2, #40	; 0x28
 801314c:	771a      	strb	r2, [r3, #28]
 801314e:	f107 0314 	add.w	r3, r7, #20
 8013152:	2226      	movs	r2, #38	; 0x26
 8013154:	775a      	strb	r2, [r3, #29]
 8013156:	f107 0314 	add.w	r3, r7, #20
 801315a:	2229      	movs	r2, #41	; 0x29
 801315c:	779a      	strb	r2, [r3, #30]
 801315e:	f107 0314 	add.w	r3, r7, #20
 8013162:	2227      	movs	r2, #39	; 0x27
 8013164:	77da      	strb	r2, [r3, #31]
 8013166:	f107 0314 	add.w	r3, r7, #20
 801316a:	2225      	movs	r2, #37	; 0x25
 801316c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8013170:	f107 030c 	add.w	r3, r7, #12
 8013174:	f107 0214 	add.w	r2, r7, #20
 8013178:	601a      	str	r2, [r3, #0]
 801317a:	f107 030c 	add.w	r3, r7, #12
 801317e:	2211      	movs	r2, #17
 8013180:	605a      	str	r2, [r3, #4]
 8013182:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013186:	4618      	mov	r0, r3
 8013188:	f7ee fde0 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801318c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8013190:	f107 020c 	add.w	r2, r7, #12
 8013194:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013198:	9300      	str	r3, [sp, #0]
 801319a:	460b      	mov	r3, r1
 801319c:	ca06      	ldmia	r2, {r1, r2}
 801319e:	4885      	ldr	r0, [pc, #532]	; (80133b4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80131a0:	f7ee fdec 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80131a4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80131a8:	4618      	mov	r0, r3
 80131aa:	f7ee fddb 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80131ae:	2305      	movs	r3, #5
 80131b0:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80131b4:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80131b8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80131bc:	497e      	ldr	r1, [pc, #504]	; (80133b8 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80131be:	4618      	mov	r0, r3
 80131c0:	f7ed ff9a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80131c4:	2306      	movs	r3, #6
 80131c6:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80131ca:	f207 1263 	addw	r2, r7, #355	; 0x163
 80131ce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80131d2:	331c      	adds	r3, #28
 80131d4:	4979      	ldr	r1, [pc, #484]	; (80133bc <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80131d6:	4618      	mov	r0, r3
 80131d8:	f7ed ffb6 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80131dc:	2307      	movs	r3, #7
 80131de:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 80131e2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80131e6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80131ea:	3338      	adds	r3, #56	; 0x38
 80131ec:	4974      	ldr	r1, [pc, #464]	; (80133c0 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 80131ee:	4618      	mov	r0, r3
 80131f0:	f7ed ffaa 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 80131f4:	2308      	movs	r3, #8
 80131f6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 80131fa:	f207 1265 	addw	r2, r7, #357	; 0x165
 80131fe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8013202:	3354      	adds	r3, #84	; 0x54
 8013204:	496f      	ldr	r1, [pc, #444]	; (80133c4 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8013206:	4618      	mov	r0, r3
 8013208:	f7ed ff76 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801320c:	2309      	movs	r3, #9
 801320e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8013212:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8013216:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801321a:	3370      	adds	r3, #112	; 0x70
 801321c:	496a      	ldr	r1, [pc, #424]	; (80133c8 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801321e:	4618      	mov	r0, r3
 8013220:	f7ed ffba 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8013224:	2310      	movs	r3, #16
 8013226:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801322a:	f207 1267 	addw	r2, r7, #359	; 0x167
 801322e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8013232:	338c      	adds	r3, #140	; 0x8c
 8013234:	4965      	ldr	r1, [pc, #404]	; (80133cc <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8013236:	4618      	mov	r0, r3
 8013238:	f7ed ffd6 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801323c:	2311      	movs	r3, #17
 801323e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8013242:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8013246:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801324a:	33a8      	adds	r3, #168	; 0xa8
 801324c:	4960      	ldr	r1, [pc, #384]	; (80133d0 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801324e:	4618      	mov	r0, r3
 8013250:	f7ed ffa2 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8013254:	2312      	movs	r3, #18
 8013256:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801325a:	f207 1269 	addw	r2, r7, #361	; 0x169
 801325e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8013262:	33c4      	adds	r3, #196	; 0xc4
 8013264:	495b      	ldr	r1, [pc, #364]	; (80133d4 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8013266:	4618      	mov	r0, r3
 8013268:	f7ed ff46 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801326c:	2313      	movs	r3, #19
 801326e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8013272:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8013276:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801327a:	33e0      	adds	r3, #224	; 0xe0
 801327c:	4956      	ldr	r1, [pc, #344]	; (80133d8 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801327e:	4618      	mov	r0, r3
 8013280:	f7ed ff62 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8013284:	2314      	movs	r3, #20
 8013286:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801328a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801328e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8013292:	33fc      	adds	r3, #252	; 0xfc
 8013294:	4951      	ldr	r1, [pc, #324]	; (80133dc <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8013296:	4618      	mov	r0, r3
 8013298:	f7ed ffce 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801329c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80132a0:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80132a4:	601a      	str	r2, [r3, #0]
 80132a6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80132aa:	220a      	movs	r2, #10
 80132ac:	605a      	str	r2, [r3, #4]
 80132ae:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80132b2:	4618      	mov	r0, r3
 80132b4:	f7ee fdef 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80132b8:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80132bc:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80132c0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80132c4:	9300      	str	r3, [sp, #0]
 80132c6:	460b      	mov	r3, r1
 80132c8:	ca06      	ldmia	r2, {r1, r2}
 80132ca:	4845      	ldr	r0, [pc, #276]	; (80133e0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80132cc:	f7ee fdfb 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80132d0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80132d4:	4618      	mov	r0, r3
 80132d6:	f7ee fdea 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80132da:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80132de:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80132e2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80132e6:	429c      	cmp	r4, r3
 80132e8:	d004      	beq.n	80132f4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80132ea:	3c1c      	subs	r4, #28
 80132ec:	4620      	mov	r0, r4
 80132ee:	f7ed fef6 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80132f2:	e7f6      	b.n	80132e2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 80132f4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80132f8:	2200      	movs	r2, #0
 80132fa:	601a      	str	r2, [r3, #0]
 80132fc:	605a      	str	r2, [r3, #4]
 80132fe:	609a      	str	r2, [r3, #8]
 8013300:	233c      	movs	r3, #60	; 0x3c
 8013302:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8013306:	231b      	movs	r3, #27
 8013308:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801330c:	231c      	movs	r3, #28
 801330e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8013312:	233e      	movs	r3, #62	; 0x3e
 8013314:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8013318:	2319      	movs	r3, #25
 801331a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801331e:	231a      	movs	r3, #26
 8013320:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8013324:	233d      	movs	r3, #61	; 0x3d
 8013326:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801332a:	2318      	movs	r3, #24
 801332c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8013330:	231d      	movs	r3, #29
 8013332:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8013336:	2321      	movs	r3, #33	; 0x21
 8013338:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801333c:	2317      	movs	r3, #23
 801333e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8013342:	231e      	movs	r3, #30
 8013344:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8013348:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801334c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8013350:	2304      	movs	r3, #4
 8013352:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8013356:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801335a:	4618      	mov	r0, r3
 801335c:	f7ee fde3 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8013360:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8013364:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8013368:	9300      	str	r3, [sp, #0]
 801336a:	4613      	mov	r3, r2
 801336c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8013370:	ca06      	ldmia	r2, {r1, r2}
 8013372:	481c      	ldr	r0, [pc, #112]	; (80133e4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8013374:	f7ee fdef 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8013378:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801337c:	4618      	mov	r0, r3
 801337e:	f7ee fdde 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8013382:	1d3b      	adds	r3, r7, #4
 8013384:	681b      	ldr	r3, [r3, #0]
 8013386:	2b00      	cmp	r3, #0
 8013388:	d10e      	bne.n	80133a8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801338a:	463b      	mov	r3, r7
 801338c:	681b      	ldr	r3, [r3, #0]
 801338e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013392:	4293      	cmp	r3, r2
 8013394:	d108      	bne.n	80133a8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8013396:	4813      	ldr	r0, [pc, #76]	; (80133e4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8013398:	f7f6 fa4c 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801339c:	4810      	ldr	r0, [pc, #64]	; (80133e0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801339e:	f7f6 fa56 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80133a2:	4804      	ldr	r0, [pc, #16]	; (80133b4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80133a4:	f7f6 fa60 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80133a8:	bf00      	nop
 80133aa:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80133ae:	46bd      	mov	sp, r7
 80133b0:	bd90      	pop	{r4, r7, pc}
 80133b2:	bf00      	nop
 80133b4:	200003c0 	.word	0x200003c0
 80133b8:	08029690 	.word	0x08029690
 80133bc:	08029698 	.word	0x08029698
 80133c0:	080296a0 	.word	0x080296a0
 80133c4:	080296a8 	.word	0x080296a8
 80133c8:	080296b0 	.word	0x080296b0
 80133cc:	080296b8 	.word	0x080296b8
 80133d0:	080296bc 	.word	0x080296bc
 80133d4:	080296c4 	.word	0x080296c4
 80133d8:	080296cc 	.word	0x080296cc
 80133dc:	080296d4 	.word	0x080296d4
 80133e0:	200003d8 	.word	0x200003d8
 80133e4:	200003f0 	.word	0x200003f0

080133e8 <_GLOBAL__sub_I__ZN14Method_handlerC2Ev>:
 80133e8:	b580      	push	{r7, lr}
 80133ea:	af00      	add	r7, sp, #0
 80133ec:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80133f0:	2001      	movs	r0, #1
 80133f2:	f7ff fe1d 	bl	8013030 <_Z41__static_initialization_and_destruction_0ii>
 80133f6:	bd80      	pop	{r7, pc}

080133f8 <_GLOBAL__sub_D__ZN14Method_handlerC2Ev>:
 80133f8:	b580      	push	{r7, lr}
 80133fa:	af00      	add	r7, sp, #0
 80133fc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013400:	2000      	movs	r0, #0
 8013402:	f7ff fe15 	bl	8013030 <_Z41__static_initialization_and_destruction_0ii>
 8013406:	bd80      	pop	{r7, pc}

08013408 <_ZN6ParserC1Ev>:
	delete setup;
	delete loop;
	delete finish;
}

Parser::Parser()
 8013408:	b580      	push	{r7, lr}
 801340a:	b082      	sub	sp, #8
 801340c:	af00      	add	r7, sp, #0
 801340e:	6078      	str	r0, [r7, #4]
 8013410:	687b      	ldr	r3, [r7, #4]
 8013412:	4618      	mov	r0, r3
 8013414:	f7fb feeb 	bl	800f1ee <_ZN5TokenC1Ev>
{

}
 8013418:	687b      	ldr	r3, [r7, #4]
 801341a:	4618      	mov	r0, r3
 801341c:	3708      	adds	r7, #8
 801341e:	46bd      	mov	sp, r7
 8013420:	bd80      	pop	{r7, pc}
	...

08013424 <_ZN6Parser11parse_whileEv>:

While_statement* Parser::parse_while()
{
 8013424:	b580      	push	{r7, lr}
 8013426:	b092      	sub	sp, #72	; 0x48
 8013428:	af00      	add	r7, sp, #0
 801342a:	6078      	str	r0, [r7, #4]
	auto st = new While_statement();
 801342c:	2008      	movs	r0, #8
 801342e:	f00f ff36 	bl	802329e <_Znwj>
 8013432:	4603      	mov	r3, r0
 8013434:	2200      	movs	r2, #0
 8013436:	601a      	str	r2, [r3, #0]
 8013438:	2200      	movs	r2, #0
 801343a:	605a      	str	r2, [r3, #4]
 801343c:	647b      	str	r3, [r7, #68]	; 0x44
	st->condition = parse_expression();
 801343e:	6878      	ldr	r0, [r7, #4]
 8013440:	f007 fe14 	bl	801b06c <_ZN6Parser16parse_expressionEv>
 8013444:	4602      	mov	r2, r0
 8013446:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8013448:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 801344a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801344e:	4618      	mov	r0, r3
 8013450:	f00f ff36 	bl	80232c0 <_ZNSaIcEC1Ev>
 8013454:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8013458:	f107 030c 	add.w	r3, r7, #12
 801345c:	4921      	ldr	r1, [pc, #132]	; (80134e4 <_ZN6Parser11parse_whileEv+0xc0>)
 801345e:	4618      	mov	r0, r3
 8013460:	f7ee fcc7 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013464:	f107 030c 	add.w	r3, r7, #12
 8013468:	461a      	mov	r2, r3
 801346a:	210a      	movs	r1, #10
 801346c:	6878      	ldr	r0, [r7, #4]
 801346e:	f000 fad5 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013472:	f107 030c 	add.w	r3, r7, #12
 8013476:	4618      	mov	r0, r3
 8013478:	f010 f9b3 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801347c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013480:	4618      	mov	r0, r3
 8013482:	f00f ff1e 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013486:	6878      	ldr	r0, [r7, #4]
 8013488:	f000 fdeb 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	st->while_body = parse_body();
 801348c:	6878      	ldr	r0, [r7, #4]
 801348e:	f000 fd85 	bl	8013f9c <_ZN6Parser10parse_bodyEv>
 8013492:	4602      	mov	r2, r0
 8013494:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8013496:	605a      	str	r2, [r3, #4]
	assert_token(TOKEN_END, "\"end\" after if body");
 8013498:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801349c:	4618      	mov	r0, r3
 801349e:	f00f ff0f 	bl	80232c0 <_ZNSaIcEC1Ev>
 80134a2:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80134a6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80134aa:	490f      	ldr	r1, [pc, #60]	; (80134e8 <_ZN6Parser11parse_whileEv+0xc4>)
 80134ac:	4618      	mov	r0, r3
 80134ae:	f7ee fca0 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80134b2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80134b6:	461a      	mov	r2, r3
 80134b8:	2114      	movs	r1, #20
 80134ba:	6878      	ldr	r0, [r7, #4]
 80134bc:	f000 faae 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80134c0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80134c4:	4618      	mov	r0, r3
 80134c6:	f010 f98c 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80134ca:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80134ce:	4618      	mov	r0, r3
 80134d0:	f00f fef7 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 80134d4:	6878      	ldr	r0, [r7, #4]
 80134d6:	f000 fdc4 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	return st;
 80134da:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 80134dc:	4618      	mov	r0, r3
 80134de:	3748      	adds	r7, #72	; 0x48
 80134e0:	46bd      	mov	sp, r7
 80134e2:	bd80      	pop	{r7, pc}
 80134e4:	080296d8 	.word	0x080296d8
 80134e8:	08029700 	.word	0x08029700

080134ec <_ZN6Parser20parse_elseif_contentEP12If_statement>:

void Parser::parse_elseif_content(If_statement *st)
{
 80134ec:	b590      	push	{r4, r7, lr}
 80134ee:	b08d      	sub	sp, #52	; 0x34
 80134f0:	af00      	add	r7, sp, #0
 80134f2:	6078      	str	r0, [r7, #4]
 80134f4:	6039      	str	r1, [r7, #0]
	get_next_token();
 80134f6:	6878      	ldr	r0, [r7, #4]
 80134f8:	f000 fdb3 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	st->conditions.push_back(parse_expression());
 80134fc:	683c      	ldr	r4, [r7, #0]
 80134fe:	6878      	ldr	r0, [r7, #4]
 8013500:	f007 fdb4 	bl	801b06c <_ZN6Parser16parse_expressionEv>
 8013504:	4603      	mov	r3, r0
 8013506:	60fb      	str	r3, [r7, #12]
 8013508:	f107 030c 	add.w	r3, r7, #12
 801350c:	4619      	mov	r1, r3
 801350e:	4620      	mov	r0, r4
 8013510:	f000 ff60 	bl	80143d4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 8013514:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013518:	4618      	mov	r0, r3
 801351a:	f00f fed1 	bl	80232c0 <_ZNSaIcEC1Ev>
 801351e:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013522:	f107 0310 	add.w	r3, r7, #16
 8013526:	4915      	ldr	r1, [pc, #84]	; (801357c <_ZN6Parser20parse_elseif_contentEP12If_statement+0x90>)
 8013528:	4618      	mov	r0, r3
 801352a:	f7ee fc62 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801352e:	f107 0310 	add.w	r3, r7, #16
 8013532:	461a      	mov	r2, r3
 8013534:	210a      	movs	r1, #10
 8013536:	6878      	ldr	r0, [r7, #4]
 8013538:	f000 fa70 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801353c:	f107 0310 	add.w	r3, r7, #16
 8013540:	4618      	mov	r0, r3
 8013542:	f010 f94e 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013546:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801354a:	4618      	mov	r0, r3
 801354c:	f00f feb9 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013550:	6878      	ldr	r0, [r7, #4]
 8013552:	f000 fd86 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 8013556:	683b      	ldr	r3, [r7, #0]
 8013558:	f103 040c 	add.w	r4, r3, #12
 801355c:	6878      	ldr	r0, [r7, #4]
 801355e:	f000 fd1d 	bl	8013f9c <_ZN6Parser10parse_bodyEv>
 8013562:	4603      	mov	r3, r0
 8013564:	62fb      	str	r3, [r7, #44]	; 0x2c
 8013566:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801356a:	4619      	mov	r1, r3
 801356c:	4620      	mov	r0, r4
 801356e:	f000 ff42 	bl	80143f6 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 8013572:	bf00      	nop
 8013574:	3734      	adds	r7, #52	; 0x34
 8013576:	46bd      	mov	sp, r7
 8013578:	bd90      	pop	{r4, r7, pc}
 801357a:	bf00      	nop
 801357c:	080296d8 	.word	0x080296d8

08013580 <_ZN6Parser18parse_else_contentEP12If_statement>:

void Parser::parse_else_content(If_statement *st)
{
 8013580:	b590      	push	{r4, r7, lr}
 8013582:	b08b      	sub	sp, #44	; 0x2c
 8013584:	af00      	add	r7, sp, #0
 8013586:	6078      	str	r0, [r7, #4]
 8013588:	6039      	str	r1, [r7, #0]
	get_next_token();
 801358a:	6878      	ldr	r0, [r7, #4]
 801358c:	f000 fd69 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after \"else\"");
 8013590:	f107 0320 	add.w	r3, r7, #32
 8013594:	4618      	mov	r0, r3
 8013596:	f00f fe93 	bl	80232c0 <_ZNSaIcEC1Ev>
 801359a:	f107 0220 	add.w	r2, r7, #32
 801359e:	f107 0308 	add.w	r3, r7, #8
 80135a2:	4915      	ldr	r1, [pc, #84]	; (80135f8 <_ZN6Parser18parse_else_contentEP12If_statement+0x78>)
 80135a4:	4618      	mov	r0, r3
 80135a6:	f7ee fc24 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80135aa:	f107 0308 	add.w	r3, r7, #8
 80135ae:	461a      	mov	r2, r3
 80135b0:	210a      	movs	r1, #10
 80135b2:	6878      	ldr	r0, [r7, #4]
 80135b4:	f000 fa32 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80135b8:	f107 0308 	add.w	r3, r7, #8
 80135bc:	4618      	mov	r0, r3
 80135be:	f010 f910 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80135c2:	f107 0320 	add.w	r3, r7, #32
 80135c6:	4618      	mov	r0, r3
 80135c8:	f00f fe7b 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 80135cc:	6878      	ldr	r0, [r7, #4]
 80135ce:	f000 fd48 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 80135d2:	683b      	ldr	r3, [r7, #0]
 80135d4:	f103 040c 	add.w	r4, r3, #12
 80135d8:	6878      	ldr	r0, [r7, #4]
 80135da:	f000 fcdf 	bl	8013f9c <_ZN6Parser10parse_bodyEv>
 80135de:	4603      	mov	r3, r0
 80135e0:	627b      	str	r3, [r7, #36]	; 0x24
 80135e2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80135e6:	4619      	mov	r1, r3
 80135e8:	4620      	mov	r0, r4
 80135ea:	f000 ff04 	bl	80143f6 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 80135ee:	bf00      	nop
 80135f0:	372c      	adds	r7, #44	; 0x2c
 80135f2:	46bd      	mov	sp, r7
 80135f4:	bd90      	pop	{r4, r7, pc}
 80135f6:	bf00      	nop
 80135f8:	08029714 	.word	0x08029714

080135fc <_ZN6Parser16parse_if_contentEP12If_statement>:

void Parser::parse_if_content(If_statement *st)
{
 80135fc:	b590      	push	{r4, r7, lr}
 80135fe:	b08d      	sub	sp, #52	; 0x34
 8013600:	af00      	add	r7, sp, #0
 8013602:	6078      	str	r0, [r7, #4]
 8013604:	6039      	str	r1, [r7, #0]
	st->conditions.push_back(parse_expression());
 8013606:	683c      	ldr	r4, [r7, #0]
 8013608:	6878      	ldr	r0, [r7, #4]
 801360a:	f007 fd2f 	bl	801b06c <_ZN6Parser16parse_expressionEv>
 801360e:	4603      	mov	r3, r0
 8013610:	60fb      	str	r3, [r7, #12]
 8013612:	f107 030c 	add.w	r3, r7, #12
 8013616:	4619      	mov	r1, r3
 8013618:	4620      	mov	r0, r4
 801361a:	f000 fedb 	bl	80143d4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 801361e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013622:	4618      	mov	r0, r3
 8013624:	f00f fe4c 	bl	80232c0 <_ZNSaIcEC1Ev>
 8013628:	f107 0228 	add.w	r2, r7, #40	; 0x28
 801362c:	f107 0310 	add.w	r3, r7, #16
 8013630:	4914      	ldr	r1, [pc, #80]	; (8013684 <_ZN6Parser16parse_if_contentEP12If_statement+0x88>)
 8013632:	4618      	mov	r0, r3
 8013634:	f7ee fbdd 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013638:	f107 0310 	add.w	r3, r7, #16
 801363c:	461a      	mov	r2, r3
 801363e:	210a      	movs	r1, #10
 8013640:	6878      	ldr	r0, [r7, #4]
 8013642:	f000 f9eb 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013646:	f107 0310 	add.w	r3, r7, #16
 801364a:	4618      	mov	r0, r3
 801364c:	f010 f8c9 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013650:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013654:	4618      	mov	r0, r3
 8013656:	f00f fe34 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 801365a:	6878      	ldr	r0, [r7, #4]
 801365c:	f000 fd01 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 8013660:	683b      	ldr	r3, [r7, #0]
 8013662:	f103 040c 	add.w	r4, r3, #12
 8013666:	6878      	ldr	r0, [r7, #4]
 8013668:	f000 fc98 	bl	8013f9c <_ZN6Parser10parse_bodyEv>
 801366c:	4603      	mov	r3, r0
 801366e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8013670:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013674:	4619      	mov	r1, r3
 8013676:	4620      	mov	r0, r4
 8013678:	f000 febd 	bl	80143f6 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 801367c:	bf00      	nop
 801367e:	3734      	adds	r7, #52	; 0x34
 8013680:	46bd      	mov	sp, r7
 8013682:	bd90      	pop	{r4, r7, pc}
 8013684:	080296d8 	.word	0x080296d8

08013688 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013688:	b580      	push	{r7, lr}
 801368a:	b082      	sub	sp, #8
 801368c:	af00      	add	r7, sp, #0
 801368e:	6078      	str	r0, [r7, #4]
 8013690:	687b      	ldr	r3, [r7, #4]
 8013692:	4618      	mov	r0, r3
 8013694:	f000 fec0 	bl	8014418 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>
 8013698:	687b      	ldr	r3, [r7, #4]
 801369a:	4618      	mov	r0, r3
 801369c:	3708      	adds	r7, #8
 801369e:	46bd      	mov	sp, r7
 80136a0:	bd80      	pop	{r7, pc}

080136a2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>:
      vector() = default;
 80136a2:	b580      	push	{r7, lr}
 80136a4:	b082      	sub	sp, #8
 80136a6:	af00      	add	r7, sp, #0
 80136a8:	6078      	str	r0, [r7, #4]
 80136aa:	687b      	ldr	r3, [r7, #4]
 80136ac:	4618      	mov	r0, r3
 80136ae:	f7ff ffeb 	bl	8013688 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>
 80136b2:	687b      	ldr	r3, [r7, #4]
 80136b4:	4618      	mov	r0, r3
 80136b6:	3708      	adds	r7, #8
 80136b8:	46bd      	mov	sp, r7
 80136ba:	bd80      	pop	{r7, pc}

080136bc <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>:
      _Vector_base() = default;
 80136bc:	b580      	push	{r7, lr}
 80136be:	b082      	sub	sp, #8
 80136c0:	af00      	add	r7, sp, #0
 80136c2:	6078      	str	r0, [r7, #4]
 80136c4:	687b      	ldr	r3, [r7, #4]
 80136c6:	4618      	mov	r0, r3
 80136c8:	f000 feb6 	bl	8014438 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>
 80136cc:	687b      	ldr	r3, [r7, #4]
 80136ce:	4618      	mov	r0, r3
 80136d0:	3708      	adds	r7, #8
 80136d2:	46bd      	mov	sp, r7
 80136d4:	bd80      	pop	{r7, pc}

080136d6 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>:
      vector() = default;
 80136d6:	b580      	push	{r7, lr}
 80136d8:	b082      	sub	sp, #8
 80136da:	af00      	add	r7, sp, #0
 80136dc:	6078      	str	r0, [r7, #4]
 80136de:	687b      	ldr	r3, [r7, #4]
 80136e0:	4618      	mov	r0, r3
 80136e2:	f7ff ffeb 	bl	80136bc <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>
 80136e6:	687b      	ldr	r3, [r7, #4]
 80136e8:	4618      	mov	r0, r3
 80136ea:	3708      	adds	r7, #8
 80136ec:	46bd      	mov	sp, r7
 80136ee:	bd80      	pop	{r7, pc}

080136f0 <_ZN12If_statementC1Ev>:
public:
	~Body();
	std::vector<Statement*> statements;
};

class If_statement
 80136f0:	b580      	push	{r7, lr}
 80136f2:	b082      	sub	sp, #8
 80136f4:	af00      	add	r7, sp, #0
 80136f6:	6078      	str	r0, [r7, #4]
 80136f8:	687b      	ldr	r3, [r7, #4]
 80136fa:	4618      	mov	r0, r3
 80136fc:	f7ff ffd1 	bl	80136a2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 8013700:	687b      	ldr	r3, [r7, #4]
 8013702:	330c      	adds	r3, #12
 8013704:	4618      	mov	r0, r3
 8013706:	f7ff ffe6 	bl	80136d6 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>
 801370a:	687b      	ldr	r3, [r7, #4]
 801370c:	4618      	mov	r0, r3
 801370e:	3708      	adds	r7, #8
 8013710:	46bd      	mov	sp, r7
 8013712:	bd80      	pop	{r7, pc}

08013714 <_ZN6Parser8parse_ifEv>:

If_statement* Parser::parse_if()
{
 8013714:	b590      	push	{r4, r7, lr}
 8013716:	b08b      	sub	sp, #44	; 0x2c
 8013718:	af00      	add	r7, sp, #0
 801371a:	6078      	str	r0, [r7, #4]
	auto st = new If_statement();
 801371c:	2018      	movs	r0, #24
 801371e:	f00f fdbe 	bl	802329e <_Znwj>
 8013722:	4603      	mov	r3, r0
 8013724:	461c      	mov	r4, r3
 8013726:	4622      	mov	r2, r4
 8013728:	2300      	movs	r3, #0
 801372a:	6013      	str	r3, [r2, #0]
 801372c:	6053      	str	r3, [r2, #4]
 801372e:	6093      	str	r3, [r2, #8]
 8013730:	60d3      	str	r3, [r2, #12]
 8013732:	6113      	str	r3, [r2, #16]
 8013734:	6153      	str	r3, [r2, #20]
 8013736:	4620      	mov	r0, r4
 8013738:	f7ff ffda 	bl	80136f0 <_ZN12If_statementC1Ev>
 801373c:	627c      	str	r4, [r7, #36]	; 0x24

	parse_if_content(st);
 801373e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013740:	6878      	ldr	r0, [r7, #4]
 8013742:	f7ff ff5b 	bl	80135fc <_ZN6Parser16parse_if_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 8013746:	687b      	ldr	r3, [r7, #4]
 8013748:	781b      	ldrb	r3, [r3, #0]
 801374a:	2b11      	cmp	r3, #17
 801374c:	d104      	bne.n	8013758 <_ZN6Parser8parse_ifEv+0x44>
	{
		parse_elseif_content(st);
 801374e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013750:	6878      	ldr	r0, [r7, #4]
 8013752:	f7ff fecb 	bl	80134ec <_ZN6Parser20parse_elseif_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 8013756:	e7f6      	b.n	8013746 <_ZN6Parser8parse_ifEv+0x32>
	}
	if (token_buffer.type == TOKEN_ELSE)
 8013758:	687b      	ldr	r3, [r7, #4]
 801375a:	781b      	ldrb	r3, [r3, #0]
 801375c:	2b12      	cmp	r3, #18
 801375e:	d103      	bne.n	8013768 <_ZN6Parser8parse_ifEv+0x54>
	{
		parse_else_content(st);
 8013760:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8013762:	6878      	ldr	r0, [r7, #4]
 8013764:	f7ff ff0c 	bl	8013580 <_ZN6Parser18parse_else_contentEP12If_statement>
	}
	assert_token(TOKEN_END, "\"end\" after if body");
 8013768:	f107 0320 	add.w	r3, r7, #32
 801376c:	4618      	mov	r0, r3
 801376e:	f00f fda7 	bl	80232c0 <_ZNSaIcEC1Ev>
 8013772:	f107 0220 	add.w	r2, r7, #32
 8013776:	f107 0308 	add.w	r3, r7, #8
 801377a:	490e      	ldr	r1, [pc, #56]	; (80137b4 <_ZN6Parser8parse_ifEv+0xa0>)
 801377c:	4618      	mov	r0, r3
 801377e:	f7ee fb38 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013782:	f107 0308 	add.w	r3, r7, #8
 8013786:	461a      	mov	r2, r3
 8013788:	2114      	movs	r1, #20
 801378a:	6878      	ldr	r0, [r7, #4]
 801378c:	f000 f946 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013790:	f107 0308 	add.w	r3, r7, #8
 8013794:	4618      	mov	r0, r3
 8013796:	f010 f824 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801379a:	f107 0320 	add.w	r3, r7, #32
 801379e:	4618      	mov	r0, r3
 80137a0:	f00f fd8f 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 80137a4:	6878      	ldr	r0, [r7, #4]
 80137a6:	f000 fc5c 	bl	8014062 <_ZN6Parser14get_next_tokenEv>

	return st;
 80137aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 80137ac:	4618      	mov	r0, r3
 80137ae:	372c      	adds	r7, #44	; 0x2c
 80137b0:	46bd      	mov	sp, r7
 80137b2:	bd90      	pop	{r4, r7, pc}
 80137b4:	08029700 	.word	0x08029700

080137b8 <_ZN6Parser20parse_variable_indexEP8Variable>:

void Parser::parse_variable_index(Variable *var)
{
 80137b8:	b580      	push	{r7, lr}
 80137ba:	b08a      	sub	sp, #40	; 0x28
 80137bc:	af00      	add	r7, sp, #0
 80137be:	6078      	str	r0, [r7, #4]
 80137c0:	6039      	str	r1, [r7, #0]
	if (token_buffer.type == TOKEN_LEFT_SQUARE)
 80137c2:	687b      	ldr	r3, [r7, #4]
 80137c4:	781b      	ldrb	r3, [r3, #0]
 80137c6:	2b0d      	cmp	r3, #13
 80137c8:	d12a      	bne.n	8013820 <_ZN6Parser20parse_variable_indexEP8Variable+0x68>
	{
		get_next_token();
 80137ca:	6878      	ldr	r0, [r7, #4]
 80137cc:	f000 fc49 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		var->index = parse_expression();
 80137d0:	6878      	ldr	r0, [r7, #4]
 80137d2:	f007 fc4b 	bl	801b06c <_ZN6Parser16parse_expressionEv>
 80137d6:	4602      	mov	r2, r0
 80137d8:	683b      	ldr	r3, [r7, #0]
 80137da:	61da      	str	r2, [r3, #28]
		assert_token(TOKEN_RIGHT_SQUARE, "closing square bracket");
 80137dc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80137e0:	4618      	mov	r0, r3
 80137e2:	f00f fd6d 	bl	80232c0 <_ZNSaIcEC1Ev>
 80137e6:	f107 0224 	add.w	r2, r7, #36	; 0x24
 80137ea:	f107 030c 	add.w	r3, r7, #12
 80137ee:	4910      	ldr	r1, [pc, #64]	; (8013830 <_ZN6Parser20parse_variable_indexEP8Variable+0x78>)
 80137f0:	4618      	mov	r0, r3
 80137f2:	f7ee fafe 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80137f6:	f107 030c 	add.w	r3, r7, #12
 80137fa:	461a      	mov	r2, r3
 80137fc:	210e      	movs	r1, #14
 80137fe:	6878      	ldr	r0, [r7, #4]
 8013800:	f000 f90c 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013804:	f107 030c 	add.w	r3, r7, #12
 8013808:	4618      	mov	r0, r3
 801380a:	f00f ffea 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801380e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013812:	4618      	mov	r0, r3
 8013814:	f00f fd55 	bl	80232c2 <_ZNSaIcED1Ev>
		get_next_token();
 8013818:	6878      	ldr	r0, [r7, #4]
 801381a:	f000 fc22 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	}
	else
	{
		var->index = nullptr;
	}
}
 801381e:	e002      	b.n	8013826 <_ZN6Parser20parse_variable_indexEP8Variable+0x6e>
		var->index = nullptr;
 8013820:	683b      	ldr	r3, [r7, #0]
 8013822:	2200      	movs	r2, #0
 8013824:	61da      	str	r2, [r3, #28]
}
 8013826:	bf00      	nop
 8013828:	3728      	adds	r7, #40	; 0x28
 801382a:	46bd      	mov	sp, r7
 801382c:	bd80      	pop	{r7, pc}
 801382e:	bf00      	nop
 8013830:	0802972c 	.word	0x0802972c

08013834 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::parse_member_selection_id(std::string &id)
{
 8013834:	b580      	push	{r7, lr}
 8013836:	b096      	sub	sp, #88	; 0x58
 8013838:	af00      	add	r7, sp, #0
 801383a:	6078      	str	r0, [r7, #4]
 801383c:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_COLON, "colon operator \":\"");
 801383e:	f107 0320 	add.w	r3, r7, #32
 8013842:	4618      	mov	r0, r3
 8013844:	f00f fd3c 	bl	80232c0 <_ZNSaIcEC1Ev>
 8013848:	f107 0220 	add.w	r2, r7, #32
 801384c:	f107 0308 	add.w	r3, r7, #8
 8013850:	4929      	ldr	r1, [pc, #164]	; (80138f8 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc4>)
 8013852:	4618      	mov	r0, r3
 8013854:	f7ee facd 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013858:	f107 0308 	add.w	r3, r7, #8
 801385c:	461a      	mov	r2, r3
 801385e:	2101      	movs	r1, #1
 8013860:	6878      	ldr	r0, [r7, #4]
 8013862:	f000 f8db 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013866:	f107 0308 	add.w	r3, r7, #8
 801386a:	4618      	mov	r0, r3
 801386c:	f00f ffb9 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013870:	f107 0320 	add.w	r3, r7, #32
 8013874:	4618      	mov	r0, r3
 8013876:	f00f fd24 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 801387a:	6878      	ldr	r0, [r7, #4]
 801387c:	f000 fbf1 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_IDENTIFIER, "identifier");
 8013880:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013884:	4618      	mov	r0, r3
 8013886:	f00f fd1b 	bl	80232c0 <_ZNSaIcEC1Ev>
 801388a:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801388e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013892:	491a      	ldr	r1, [pc, #104]	; (80138fc <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc8>)
 8013894:	4618      	mov	r0, r3
 8013896:	f7ee faac 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801389a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801389e:	461a      	mov	r2, r3
 80138a0:	2102      	movs	r1, #2
 80138a2:	6878      	ldr	r0, [r7, #4]
 80138a4:	f000 f8ba 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80138a8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80138ac:	4618      	mov	r0, r3
 80138ae:	f00f ff98 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80138b2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80138b6:	4618      	mov	r0, r3
 80138b8:	f00f fd03 	bl	80232c2 <_ZNSaIcED1Ev>
	id = std::string(std::get<std::string>(token_buffer.value));
 80138bc:	687b      	ldr	r3, [r7, #4]
 80138be:	3304      	adds	r3, #4
 80138c0:	4618      	mov	r0, r3
 80138c2:	f000 fdc9 	bl	8014458 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 80138c6:	4602      	mov	r2, r0
 80138c8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80138cc:	4611      	mov	r1, r2
 80138ce:	4618      	mov	r0, r3
 80138d0:	f010 f956 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80138d4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80138d8:	4619      	mov	r1, r3
 80138da:	6838      	ldr	r0, [r7, #0]
 80138dc:	f00f ff8d 	bl	80237fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 80138e0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80138e4:	4618      	mov	r0, r3
 80138e6:	f00f ff7c 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	get_next_token();
 80138ea:	6878      	ldr	r0, [r7, #4]
 80138ec:	f000 fbb9 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
}
 80138f0:	bf00      	nop
 80138f2:	3758      	adds	r7, #88	; 0x58
 80138f4:	46bd      	mov	sp, r7
 80138f6:	bd80      	pop	{r7, pc}
 80138f8:	08029744 	.word	0x08029744
 80138fc:	08029758 	.word	0x08029758

08013900 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>:

void Parser::parse_variable_id(std::string &id, Variable *var)
{
 8013900:	b580      	push	{r7, lr}
 8013902:	b08a      	sub	sp, #40	; 0x28
 8013904:	af00      	add	r7, sp, #0
 8013906:	60f8      	str	r0, [r7, #12]
 8013908:	60b9      	str	r1, [r7, #8]
 801390a:	607a      	str	r2, [r7, #4]
	if (id == "Arg")
 801390c:	491b      	ldr	r1, [pc, #108]	; (801397c <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x7c>)
 801390e:	68b8      	ldr	r0, [r7, #8]
 8013910:	f000 fdae 	bl	8014470 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8013914:	4603      	mov	r3, r0
 8013916:	2b00      	cmp	r3, #0
 8013918:	d007      	beq.n	801392a <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x2a>
	{
		var->type = VARIABLE_ARG;
 801391a:	687b      	ldr	r3, [r7, #4]
 801391c:	2201      	movs	r2, #1
 801391e:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 8013920:	68b9      	ldr	r1, [r7, #8]
 8013922:	68f8      	ldr	r0, [r7, #12]
 8013924:	f7ff ff86 	bl	8013834 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013928:	e011      	b.n	801394e <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else if (id == "Par")
 801392a:	4915      	ldr	r1, [pc, #84]	; (8013980 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x80>)
 801392c:	68b8      	ldr	r0, [r7, #8]
 801392e:	f000 fd9f 	bl	8014470 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 8013932:	4603      	mov	r3, r0
 8013934:	2b00      	cmp	r3, #0
 8013936:	d007      	beq.n	8013948 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x48>
	{
		var->type = VARIABLE_PAR;
 8013938:	687b      	ldr	r3, [r7, #4]
 801393a:	2202      	movs	r2, #2
 801393c:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 801393e:	68b9      	ldr	r1, [r7, #8]
 8013940:	68f8      	ldr	r0, [r7, #12]
 8013942:	f7ff ff77 	bl	8013834 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013946:	e002      	b.n	801394e <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else
	{
		var->type = VARIABLE_LOCAL;
 8013948:	687b      	ldr	r3, [r7, #4]
 801394a:	2200      	movs	r2, #0
 801394c:	701a      	strb	r2, [r3, #0]
	}

	var->id = std::string(id);
 801394e:	f107 0310 	add.w	r3, r7, #16
 8013952:	68b9      	ldr	r1, [r7, #8]
 8013954:	4618      	mov	r0, r3
 8013956:	f010 f913 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801395a:	687b      	ldr	r3, [r7, #4]
 801395c:	3304      	adds	r3, #4
 801395e:	f107 0210 	add.w	r2, r7, #16
 8013962:	4611      	mov	r1, r2
 8013964:	4618      	mov	r0, r3
 8013966:	f00f ff48 	bl	80237fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801396a:	f107 0310 	add.w	r3, r7, #16
 801396e:	4618      	mov	r0, r3
 8013970:	f00f ff37 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8013974:	bf00      	nop
 8013976:	3728      	adds	r7, #40	; 0x28
 8013978:	46bd      	mov	sp, r7
 801397a:	bd80      	pop	{r7, pc}
 801397c:	08029764 	.word	0x08029764
 8013980:	08029768 	.word	0x08029768

08013984 <_ZN8VariableC1Ev>:
 8013984:	b580      	push	{r7, lr}
 8013986:	b082      	sub	sp, #8
 8013988:	af00      	add	r7, sp, #0
 801398a:	6078      	str	r0, [r7, #4]
 801398c:	687b      	ldr	r3, [r7, #4]
 801398e:	3304      	adds	r3, #4
 8013990:	4618      	mov	r0, r3
 8013992:	f00f ff05 	bl	80237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8013996:	687b      	ldr	r3, [r7, #4]
 8013998:	4618      	mov	r0, r3
 801399a:	3708      	adds	r7, #8
 801399c:	46bd      	mov	sp, r7
 801399e:	bd80      	pop	{r7, pc}

080139a0 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Variable* Parser::parse_variable(std::string &id)
{
 80139a0:	b590      	push	{r4, r7, lr}
 80139a2:	b085      	sub	sp, #20
 80139a4:	af00      	add	r7, sp, #0
 80139a6:	6078      	str	r0, [r7, #4]
 80139a8:	6039      	str	r1, [r7, #0]
	auto var = new Variable();
 80139aa:	2020      	movs	r0, #32
 80139ac:	f00f fc77 	bl	802329e <_Znwj>
 80139b0:	4603      	mov	r3, r0
 80139b2:	461c      	mov	r4, r3
 80139b4:	4620      	mov	r0, r4
 80139b6:	2320      	movs	r3, #32
 80139b8:	461a      	mov	r2, r3
 80139ba:	2100      	movs	r1, #0
 80139bc:	f011 f95e 	bl	8024c7c <memset>
 80139c0:	4620      	mov	r0, r4
 80139c2:	f7ff ffdf 	bl	8013984 <_ZN8VariableC1Ev>
 80139c6:	60fc      	str	r4, [r7, #12]
	parse_variable_id(id, var);
 80139c8:	68fa      	ldr	r2, [r7, #12]
 80139ca:	6839      	ldr	r1, [r7, #0]
 80139cc:	6878      	ldr	r0, [r7, #4]
 80139ce:	f7ff ff97 	bl	8013900 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>
	parse_variable_index(var);
 80139d2:	68f9      	ldr	r1, [r7, #12]
 80139d4:	6878      	ldr	r0, [r7, #4]
 80139d6:	f7ff feef 	bl	80137b8 <_ZN6Parser20parse_variable_indexEP8Variable>
	return var;
 80139da:	68fb      	ldr	r3, [r7, #12]
}
 80139dc:	4618      	mov	r0, r3
 80139de:	3714      	adds	r7, #20
 80139e0:	46bd      	mov	sp, r7
 80139e2:	bd90      	pop	{r4, r7, pc}

080139e4 <_ZN6Parser16parse_assignmentEP8Variable>:

Assignment* Parser::parse_assignment(Variable* var)
{
 80139e4:	b580      	push	{r7, lr}
 80139e6:	b084      	sub	sp, #16
 80139e8:	af00      	add	r7, sp, #0
 80139ea:	6078      	str	r0, [r7, #4]
 80139ec:	6039      	str	r1, [r7, #0]
	auto st = new Assignment();
 80139ee:	2008      	movs	r0, #8
 80139f0:	f00f fc55 	bl	802329e <_Znwj>
 80139f4:	4603      	mov	r3, r0
 80139f6:	2200      	movs	r2, #0
 80139f8:	601a      	str	r2, [r3, #0]
 80139fa:	2200      	movs	r2, #0
 80139fc:	605a      	str	r2, [r3, #4]
 80139fe:	60fb      	str	r3, [r7, #12]
	st->var = var;
 8013a00:	68fb      	ldr	r3, [r7, #12]
 8013a02:	683a      	ldr	r2, [r7, #0]
 8013a04:	601a      	str	r2, [r3, #0]
	st->value = parse_expression();
 8013a06:	6878      	ldr	r0, [r7, #4]
 8013a08:	f007 fb30 	bl	801b06c <_ZN6Parser16parse_expressionEv>
 8013a0c:	4602      	mov	r2, r0
 8013a0e:	68fb      	ldr	r3, [r7, #12]
 8013a10:	605a      	str	r2, [r3, #4]
	return st;
 8013a12:	68fb      	ldr	r3, [r7, #12]
}
 8013a14:	4618      	mov	r0, r3
 8013a16:	3710      	adds	r7, #16
 8013a18:	46bd      	mov	sp, r7
 8013a1a:	bd80      	pop	{r7, pc}

08013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::assert_token(token_type type, const std::string message)
{
 8013a1c:	b580      	push	{r7, lr}
 8013a1e:	b096      	sub	sp, #88	; 0x58
 8013a20:	af00      	add	r7, sp, #0
 8013a22:	60f8      	str	r0, [r7, #12]
 8013a24:	460b      	mov	r3, r1
 8013a26:	607a      	str	r2, [r7, #4]
 8013a28:	72fb      	strb	r3, [r7, #11]
	if (token_buffer.type != type)
 8013a2a:	68fb      	ldr	r3, [r7, #12]
 8013a2c:	781b      	ldrb	r3, [r3, #0]
 8013a2e:	7afa      	ldrb	r2, [r7, #11]
 8013a30:	429a      	cmp	r2, r3
 8013a32:	d02a      	beq.n	8013a8a <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6e>
	{
		std::string msg = "expected " + message + "\n";
 8013a34:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013a38:	687a      	ldr	r2, [r7, #4]
 8013a3a:	4916      	ldr	r1, [pc, #88]	; (8013a94 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 8013a3c:	4618      	mov	r0, r3
 8013a3e:	f7fa fc08 	bl	800e252 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8013a42:	f107 0310 	add.w	r3, r7, #16
 8013a46:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8013a4a:	4a13      	ldr	r2, [pc, #76]	; (8013a98 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 8013a4c:	4618      	mov	r0, r3
 8013a4e:	f7fa fc25 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8013a52:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013a56:	4618      	mov	r0, r3
 8013a58:	f00f fec3 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		Transmitter::report_error(msg);
 8013a5c:	f107 0210 	add.w	r2, r7, #16
 8013a60:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013a64:	4611      	mov	r1, r2
 8013a66:	4618      	mov	r0, r3
 8013a68:	f010 f88a 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013a6c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013a70:	4618      	mov	r0, r3
 8013a72:	f004 fe87 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013a76:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013a7a:	4618      	mov	r0, r3
 8013a7c:	f00f feb1 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		std::string msg = "expected " + message + "\n";
 8013a80:	f107 0310 	add.w	r3, r7, #16
 8013a84:	4618      	mov	r0, r3
 8013a86:	f00f feac 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8013a8a:	bf00      	nop
 8013a8c:	3758      	adds	r7, #88	; 0x58
 8013a8e:	46bd      	mov	sp, r7
 8013a90:	bd80      	pop	{r7, pc}
 8013a92:	bf00      	nop
 8013a94:	0802976c 	.word	0x0802976c
 8013a98:	08029778 	.word	0x08029778

08013a9c <_ZN6Parser24parse_function_argumentsEP13Function_call>:

void Parser::parse_function_arguments(Function_call *f)
{
 8013a9c:	b590      	push	{r4, r7, lr}
 8013a9e:	b085      	sub	sp, #20
 8013aa0:	af00      	add	r7, sp, #0
 8013aa2:	6078      	str	r0, [r7, #4]
 8013aa4:	6039      	str	r1, [r7, #0]
	if (token_buffer.type != TOKEN_RIGHT_BRACKET)
 8013aa6:	687b      	ldr	r3, [r7, #4]
 8013aa8:	781b      	ldrb	r3, [r3, #0]
 8013aaa:	2b27      	cmp	r3, #39	; 0x27
 8013aac:	d023      	beq.n	8013af6 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
	{
		f->arguments.push_back(parse_expression());
 8013aae:	683b      	ldr	r3, [r7, #0]
 8013ab0:	f103 0420 	add.w	r4, r3, #32
 8013ab4:	6878      	ldr	r0, [r7, #4]
 8013ab6:	f007 fad9 	bl	801b06c <_ZN6Parser16parse_expressionEv>
 8013aba:	4603      	mov	r3, r0
 8013abc:	60bb      	str	r3, [r7, #8]
 8013abe:	f107 0308 	add.w	r3, r7, #8
 8013ac2:	4619      	mov	r1, r3
 8013ac4:	4620      	mov	r0, r4
 8013ac6:	f000 fc85 	bl	80143d4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 8013aca:	687b      	ldr	r3, [r7, #4]
 8013acc:	781b      	ldrb	r3, [r3, #0]
 8013ace:	2b0c      	cmp	r3, #12
 8013ad0:	d111      	bne.n	8013af6 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
		{
			get_next_token();
 8013ad2:	6878      	ldr	r0, [r7, #4]
 8013ad4:	f000 fac5 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
			f->arguments.push_back(parse_expression());
 8013ad8:	683b      	ldr	r3, [r7, #0]
 8013ada:	f103 0420 	add.w	r4, r3, #32
 8013ade:	6878      	ldr	r0, [r7, #4]
 8013ae0:	f007 fac4 	bl	801b06c <_ZN6Parser16parse_expressionEv>
 8013ae4:	4603      	mov	r3, r0
 8013ae6:	60fb      	str	r3, [r7, #12]
 8013ae8:	f107 030c 	add.w	r3, r7, #12
 8013aec:	4619      	mov	r1, r3
 8013aee:	4620      	mov	r0, r4
 8013af0:	f000 fc70 	bl	80143d4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 8013af4:	e7e9      	b.n	8013aca <_ZN6Parser24parse_function_argumentsEP13Function_call+0x2e>
		}
	}
}
 8013af6:	bf00      	nop
 8013af8:	3714      	adds	r7, #20
 8013afa:	46bd      	mov	sp, r7
 8013afc:	bd90      	pop	{r4, r7, pc}

08013afe <_ZN13Function_callC1Ev>:
	variable_type type;
	std::string id;
	Expression* index;
};

class Function_call
 8013afe:	b580      	push	{r7, lr}
 8013b00:	b082      	sub	sp, #8
 8013b02:	af00      	add	r7, sp, #0
 8013b04:	6078      	str	r0, [r7, #4]
 8013b06:	687b      	ldr	r3, [r7, #4]
 8013b08:	3308      	adds	r3, #8
 8013b0a:	4618      	mov	r0, r3
 8013b0c:	f00f fe48 	bl	80237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8013b10:	687b      	ldr	r3, [r7, #4]
 8013b12:	3320      	adds	r3, #32
 8013b14:	4618      	mov	r0, r3
 8013b16:	f7ff fdc4 	bl	80136a2 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 8013b1a:	687b      	ldr	r3, [r7, #4]
 8013b1c:	4618      	mov	r0, r3
 8013b1e:	3708      	adds	r7, #8
 8013b20:	46bd      	mov	sp, r7
 8013b22:	bd80      	pop	{r7, pc}

08013b24 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Function_call* Parser::parse_function_call(std::string &id)
{
 8013b24:	b590      	push	{r4, r7, lr}
 8013b26:	b091      	sub	sp, #68	; 0x44
 8013b28:	af00      	add	r7, sp, #0
 8013b2a:	6078      	str	r0, [r7, #4]
 8013b2c:	6039      	str	r1, [r7, #0]
	auto f = new Function_call();
 8013b2e:	202c      	movs	r0, #44	; 0x2c
 8013b30:	f00f fbb5 	bl	802329e <_Znwj>
 8013b34:	4603      	mov	r3, r0
 8013b36:	461c      	mov	r4, r3
 8013b38:	4620      	mov	r0, r4
 8013b3a:	232c      	movs	r3, #44	; 0x2c
 8013b3c:	461a      	mov	r2, r3
 8013b3e:	2100      	movs	r1, #0
 8013b40:	f011 f89c 	bl	8024c7c <memset>
 8013b44:	4620      	mov	r0, r4
 8013b46:	f7ff ffda 	bl	8013afe <_ZN13Function_callC1Ev>
 8013b4a:	63fc      	str	r4, [r7, #60]	; 0x3c
	f->id = std::string(id);
 8013b4c:	f107 0308 	add.w	r3, r7, #8
 8013b50:	6839      	ldr	r1, [r7, #0]
 8013b52:	4618      	mov	r0, r3
 8013b54:	f010 f814 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8013b58:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013b5a:	3308      	adds	r3, #8
 8013b5c:	f107 0208 	add.w	r2, r7, #8
 8013b60:	4611      	mov	r1, r2
 8013b62:	4618      	mov	r0, r3
 8013b64:	f00f fe49 	bl	80237fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8013b68:	f107 0308 	add.w	r3, r7, #8
 8013b6c:	4618      	mov	r0, r3
 8013b6e:	f00f fe38 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	f->line = Position_counter::get_instance().line;
 8013b72:	f002 fe65 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 8013b76:	4603      	mov	r3, r0
 8013b78:	681a      	ldr	r2, [r3, #0]
 8013b7a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013b7c:	601a      	str	r2, [r3, #0]
	f->position = Position_counter::get_instance().position;
 8013b7e:	f002 fe5f 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 8013b82:	4603      	mov	r3, r0
 8013b84:	685a      	ldr	r2, [r3, #4]
 8013b86:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8013b88:	605a      	str	r2, [r3, #4]
	get_next_token();
 8013b8a:	6878      	ldr	r0, [r7, #4]
 8013b8c:	f000 fa69 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	parse_function_arguments(f);
 8013b90:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8013b92:	6878      	ldr	r0, [r7, #4]
 8013b94:	f7ff ff82 	bl	8013a9c <_ZN6Parser24parse_function_argumentsEP13Function_call>
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 8013b98:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8013b9c:	4618      	mov	r0, r3
 8013b9e:	f00f fb8f 	bl	80232c0 <_ZNSaIcEC1Ev>
 8013ba2:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8013ba6:	f107 0320 	add.w	r3, r7, #32
 8013baa:	490e      	ldr	r1, [pc, #56]	; (8013be4 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc0>)
 8013bac:	4618      	mov	r0, r3
 8013bae:	f7ee f920 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013bb2:	f107 0320 	add.w	r3, r7, #32
 8013bb6:	461a      	mov	r2, r3
 8013bb8:	2127      	movs	r1, #39	; 0x27
 8013bba:	6878      	ldr	r0, [r7, #4]
 8013bbc:	f7ff ff2e 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013bc0:	f107 0320 	add.w	r3, r7, #32
 8013bc4:	4618      	mov	r0, r3
 8013bc6:	f00f fe0c 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013bca:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8013bce:	4618      	mov	r0, r3
 8013bd0:	f00f fb77 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 8013bd4:	6878      	ldr	r0, [r7, #4]
 8013bd6:	f000 fa44 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	return f;
 8013bda:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 8013bdc:	4618      	mov	r0, r3
 8013bde:	3744      	adds	r7, #68	; 0x44
 8013be0:	46bd      	mov	sp, r7
 8013be2:	bd90      	pop	{r4, r7, pc}
 8013be4:	0802977c 	.word	0x0802977c

08013be8 <_ZN6Parser17parse_method_callEP8Variable>:

Method_call* Parser::parse_method_call(Variable* var)
{
 8013be8:	b590      	push	{r4, r7, lr}
 8013bea:	b099      	sub	sp, #100	; 0x64
 8013bec:	af00      	add	r7, sp, #0
 8013bee:	6078      	str	r0, [r7, #4]
 8013bf0:	6039      	str	r1, [r7, #0]
	auto m = new Method_call();
 8013bf2:	2008      	movs	r0, #8
 8013bf4:	f00f fb53 	bl	802329e <_Znwj>
 8013bf8:	4603      	mov	r3, r0
 8013bfa:	2200      	movs	r2, #0
 8013bfc:	601a      	str	r2, [r3, #0]
 8013bfe:	2200      	movs	r2, #0
 8013c00:	605a      	str	r2, [r3, #4]
 8013c02:	65fb      	str	r3, [r7, #92]	; 0x5c
	m->vector = var;
 8013c04:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8013c06:	683a      	ldr	r2, [r7, #0]
 8013c08:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_IDENTIFIER, "method identifier");
 8013c0a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013c0e:	4618      	mov	r0, r3
 8013c10:	f00f fb56 	bl	80232c0 <_ZNSaIcEC1Ev>
 8013c14:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8013c18:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c1c:	492a      	ldr	r1, [pc, #168]	; (8013cc8 <_ZN6Parser17parse_method_callEP8Variable+0xe0>)
 8013c1e:	4618      	mov	r0, r3
 8013c20:	f7ee f8e7 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013c24:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c28:	461a      	mov	r2, r3
 8013c2a:	2102      	movs	r1, #2
 8013c2c:	6878      	ldr	r0, [r7, #4]
 8013c2e:	f7ff fef5 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013c32:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8013c36:	4618      	mov	r0, r3
 8013c38:	f00f fdd3 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013c3c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8013c40:	4618      	mov	r0, r3
 8013c42:	f00f fb3e 	bl	80232c2 <_ZNSaIcED1Ev>
	std::string id = std::get<std::string>(token_buffer.value);
 8013c46:	687b      	ldr	r3, [r7, #4]
 8013c48:	3304      	adds	r3, #4
 8013c4a:	4618      	mov	r0, r3
 8013c4c:	f000 fc04 	bl	8014458 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013c50:	4602      	mov	r2, r0
 8013c52:	f107 030c 	add.w	r3, r7, #12
 8013c56:	4611      	mov	r1, r2
 8013c58:	4618      	mov	r0, r3
 8013c5a:	f00f ff91 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 8013c5e:	6878      	ldr	r0, [r7, #4]
 8013c60:	f000 f9ff 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_LEFT_BRACKET, "opening bracket");
 8013c64:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8013c68:	4618      	mov	r0, r3
 8013c6a:	f00f fb29 	bl	80232c0 <_ZNSaIcEC1Ev>
 8013c6e:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8013c72:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013c76:	4915      	ldr	r1, [pc, #84]	; (8013ccc <_ZN6Parser17parse_method_callEP8Variable+0xe4>)
 8013c78:	4618      	mov	r0, r3
 8013c7a:	f7ee f8ba 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013c7e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013c82:	461a      	mov	r2, r3
 8013c84:	2126      	movs	r1, #38	; 0x26
 8013c86:	6878      	ldr	r0, [r7, #4]
 8013c88:	f7ff fec8 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013c8c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8013c90:	4618      	mov	r0, r3
 8013c92:	f00f fda6 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013c96:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8013c9a:	4618      	mov	r0, r3
 8013c9c:	f00f fb11 	bl	80232c2 <_ZNSaIcED1Ev>
	m->call = parse_function_call(id);
 8013ca0:	f107 030c 	add.w	r3, r7, #12
 8013ca4:	4619      	mov	r1, r3
 8013ca6:	6878      	ldr	r0, [r7, #4]
 8013ca8:	f7ff ff3c 	bl	8013b24 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013cac:	4602      	mov	r2, r0
 8013cae:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8013cb0:	605a      	str	r2, [r3, #4]
	return m;
 8013cb2:	6dfc      	ldr	r4, [r7, #92]	; 0x5c
	std::string id = std::get<std::string>(token_buffer.value);
 8013cb4:	f107 030c 	add.w	r3, r7, #12
 8013cb8:	4618      	mov	r0, r3
 8013cba:	f00f fd92 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	return m;
 8013cbe:	4623      	mov	r3, r4
}
 8013cc0:	4618      	mov	r0, r3
 8013cc2:	3764      	adds	r7, #100	; 0x64
 8013cc4:	46bd      	mov	sp, r7
 8013cc6:	bd90      	pop	{r4, r7, pc}
 8013cc8:	0802978c 	.word	0x0802978c
 8013ccc:	080297a0 	.word	0x080297a0

08013cd0 <_ZN6Parser26parse_identifier_statementEP9Statement>:

void Parser::parse_identifier_statement(Statement *s)
{
 8013cd0:	b580      	push	{r7, lr}
 8013cd2:	b094      	sub	sp, #80	; 0x50
 8013cd4:	af00      	add	r7, sp, #0
 8013cd6:	6078      	str	r0, [r7, #4]
 8013cd8:	6039      	str	r1, [r7, #0]
	std::string id = std::get<std::string>(token_buffer.value);
 8013cda:	687b      	ldr	r3, [r7, #4]
 8013cdc:	3304      	adds	r3, #4
 8013cde:	4618      	mov	r0, r3
 8013ce0:	f000 fbba 	bl	8014458 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8013ce4:	4602      	mov	r2, r0
 8013ce6:	f107 030c 	add.w	r3, r7, #12
 8013cea:	4611      	mov	r1, r2
 8013cec:	4618      	mov	r0, r3
 8013cee:	f00f ff47 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 8013cf2:	6878      	ldr	r0, [r7, #4]
 8013cf4:	f000 f9b5 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 8013cf8:	687b      	ldr	r3, [r7, #4]
 8013cfa:	781b      	ldrb	r3, [r3, #0]
 8013cfc:	2b26      	cmp	r3, #38	; 0x26
 8013cfe:	d113      	bne.n	8013d28 <_ZN6Parser26parse_identifier_statementEP9Statement+0x58>
	{
		s->type = STATEMENT_FUNCTION_CALL;
 8013d00:	683b      	ldr	r3, [r7, #0]
 8013d02:	2201      	movs	r2, #1
 8013d04:	701a      	strb	r2, [r3, #0]
		s->content = parse_function_call(id);
 8013d06:	f107 030c 	add.w	r3, r7, #12
 8013d0a:	4619      	mov	r1, r3
 8013d0c:	6878      	ldr	r0, [r7, #4]
 8013d0e:	f7ff ff09 	bl	8013b24 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d12:	4603      	mov	r3, r0
 8013d14:	627b      	str	r3, [r7, #36]	; 0x24
 8013d16:	683b      	ldr	r3, [r7, #0]
 8013d18:	3304      	adds	r3, #4
 8013d1a:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8013d1e:	4611      	mov	r1, r2
 8013d20:	4618      	mov	r0, r3
 8013d22:	f000 fbb8 	bl	8014496 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8013d26:	e051      	b.n	8013dcc <_ZN6Parser26parse_identifier_statementEP9Statement+0xfc>
	}
	else
	{
		auto var = parse_variable(id);
 8013d28:	f107 030c 	add.w	r3, r7, #12
 8013d2c:	4619      	mov	r1, r3
 8013d2e:	6878      	ldr	r0, [r7, #4]
 8013d30:	f7ff fe36 	bl	80139a0 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d34:	64f8      	str	r0, [r7, #76]	; 0x4c
		if(token_buffer.type == TOKEN_ASSIGN)
 8013d36:	687b      	ldr	r3, [r7, #4]
 8013d38:	781b      	ldrb	r3, [r3, #0]
 8013d3a:	2b18      	cmp	r3, #24
 8013d3c:	d114      	bne.n	8013d68 <_ZN6Parser26parse_identifier_statementEP9Statement+0x98>
		{
			s->type = STATEMENT_ASSIGNMENT;
 8013d3e:	683b      	ldr	r3, [r7, #0]
 8013d40:	2200      	movs	r2, #0
 8013d42:	701a      	strb	r2, [r3, #0]
			get_next_token();
 8013d44:	6878      	ldr	r0, [r7, #4]
 8013d46:	f000 f98c 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
			s->content = parse_assignment(var);
 8013d4a:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 8013d4c:	6878      	ldr	r0, [r7, #4]
 8013d4e:	f7ff fe49 	bl	80139e4 <_ZN6Parser16parse_assignmentEP8Variable>
 8013d52:	4603      	mov	r3, r0
 8013d54:	62bb      	str	r3, [r7, #40]	; 0x28
 8013d56:	683b      	ldr	r3, [r7, #0]
 8013d58:	3304      	adds	r3, #4
 8013d5a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013d5e:	4611      	mov	r1, r2
 8013d60:	4618      	mov	r0, r3
 8013d62:	f000 fbc2 	bl	80144ea <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8013d66:	e031      	b.n	8013dcc <_ZN6Parser26parse_identifier_statementEP9Statement+0xfc>
		}
		else
		{
			assert_token(TOKEN_DOT, "method call or assignment");
 8013d68:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8013d6c:	4618      	mov	r0, r3
 8013d6e:	f00f faa7 	bl	80232c0 <_ZNSaIcEC1Ev>
 8013d72:	f107 0244 	add.w	r2, r7, #68	; 0x44
 8013d76:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013d7a:	4919      	ldr	r1, [pc, #100]	; (8013de0 <_ZN6Parser26parse_identifier_statementEP9Statement+0x110>)
 8013d7c:	4618      	mov	r0, r3
 8013d7e:	f7ee f838 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013d82:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013d86:	461a      	mov	r2, r3
 8013d88:	210b      	movs	r1, #11
 8013d8a:	6878      	ldr	r0, [r7, #4]
 8013d8c:	f7ff fe46 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013d90:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8013d94:	4618      	mov	r0, r3
 8013d96:	f00f fd24 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013d9a:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8013d9e:	4618      	mov	r0, r3
 8013da0:	f00f fa8f 	bl	80232c2 <_ZNSaIcED1Ev>
			s->type = STATEMENT_METHOD_CALL;
 8013da4:	683b      	ldr	r3, [r7, #0]
 8013da6:	2202      	movs	r2, #2
 8013da8:	701a      	strb	r2, [r3, #0]
			get_next_token();
 8013daa:	6878      	ldr	r0, [r7, #4]
 8013dac:	f000 f959 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
			s->content = parse_method_call(var);
 8013db0:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
 8013db2:	6878      	ldr	r0, [r7, #4]
 8013db4:	f7ff ff18 	bl	8013be8 <_ZN6Parser17parse_method_callEP8Variable>
 8013db8:	4603      	mov	r3, r0
 8013dba:	64bb      	str	r3, [r7, #72]	; 0x48
 8013dbc:	683b      	ldr	r3, [r7, #0]
 8013dbe:	3304      	adds	r3, #4
 8013dc0:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8013dc4:	4611      	mov	r1, r2
 8013dc6:	4618      	mov	r0, r3
 8013dc8:	f000 fbb9 	bl	801453e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id = std::get<std::string>(token_buffer.value);
 8013dcc:	f107 030c 	add.w	r3, r7, #12
 8013dd0:	4618      	mov	r0, r3
 8013dd2:	f00f fd06 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		}
	}
}
 8013dd6:	bf00      	nop
 8013dd8:	3750      	adds	r7, #80	; 0x50
 8013dda:	46bd      	mov	sp, r7
 8013ddc:	bd80      	pop	{r7, pc}
 8013dde:	bf00      	nop
 8013de0:	080297b0 	.word	0x080297b0

08013de4 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      variant() = default;
 8013de4:	b580      	push	{r7, lr}
 8013de6:	b082      	sub	sp, #8
 8013de8:	af00      	add	r7, sp, #0
 8013dea:	6078      	str	r0, [r7, #4]
 8013dec:	687b      	ldr	r3, [r7, #4]
 8013dee:	4618      	mov	r0, r3
 8013df0:	f000 fc1a 	bl	8014628 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 8013df4:	687b      	ldr	r3, [r7, #4]
 8013df6:	4618      	mov	r0, r3
 8013df8:	3708      	adds	r7, #8
 8013dfa:	46bd      	mov	sp, r7
 8013dfc:	bd80      	pop	{r7, pc}

08013dfe <_ZN9StatementC1Ev>:
	STATEMENT_IF
}statement_type;

typedef std::variant<Assignment*, Function_call*, Method_call*, While_statement*, If_statement*> statement_content;

class Statement
 8013dfe:	b580      	push	{r7, lr}
 8013e00:	b082      	sub	sp, #8
 8013e02:	af00      	add	r7, sp, #0
 8013e04:	6078      	str	r0, [r7, #4]
 8013e06:	687b      	ldr	r3, [r7, #4]
 8013e08:	3304      	adds	r3, #4
 8013e0a:	4618      	mov	r0, r3
 8013e0c:	f7ff ffea 	bl	8013de4 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 8013e10:	687b      	ldr	r3, [r7, #4]
 8013e12:	4618      	mov	r0, r3
 8013e14:	3708      	adds	r7, #8
 8013e16:	46bd      	mov	sp, r7
 8013e18:	bd80      	pop	{r7, pc}
	...

08013e1c <_ZN6Parser15parse_statementEv>:

Statement* Parser::parse_statement() //todo refactor
{
 8013e1c:	b590      	push	{r4, r7, lr}
 8013e1e:	b08d      	sub	sp, #52	; 0x34
 8013e20:	af00      	add	r7, sp, #0
 8013e22:	6078      	str	r0, [r7, #4]
	auto s = new Statement();
 8013e24:	200c      	movs	r0, #12
 8013e26:	f00f fa3a 	bl	802329e <_Znwj>
 8013e2a:	4603      	mov	r3, r0
 8013e2c:	461c      	mov	r4, r3
 8013e2e:	2300      	movs	r3, #0
 8013e30:	7023      	strb	r3, [r4, #0]
 8013e32:	2300      	movs	r3, #0
 8013e34:	6063      	str	r3, [r4, #4]
 8013e36:	2300      	movs	r3, #0
 8013e38:	7223      	strb	r3, [r4, #8]
 8013e3a:	4620      	mov	r0, r4
 8013e3c:	f7ff ffdf 	bl	8013dfe <_ZN9StatementC1Ev>
 8013e40:	62fc      	str	r4, [r7, #44]	; 0x2c
	switch (token_buffer.type)
 8013e42:	687b      	ldr	r3, [r7, #4]
 8013e44:	781b      	ldrb	r3, [r3, #0]
 8013e46:	2b13      	cmp	r3, #19
 8013e48:	d00b      	beq.n	8013e62 <_ZN6Parser15parse_statementEv+0x46>
 8013e4a:	2b13      	cmp	r3, #19
 8013e4c:	dc31      	bgt.n	8013eb2 <_ZN6Parser15parse_statementEv+0x96>
 8013e4e:	2b02      	cmp	r3, #2
 8013e50:	d002      	beq.n	8013e58 <_ZN6Parser15parse_statementEv+0x3c>
 8013e52:	2b10      	cmp	r3, #16
 8013e54:	d019      	beq.n	8013e8a <_ZN6Parser15parse_statementEv+0x6e>
 8013e56:	e02c      	b.n	8013eb2 <_ZN6Parser15parse_statementEv+0x96>
	{
	case TOKEN_IDENTIFIER:
		parse_identifier_statement(s);
 8013e58:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8013e5a:	6878      	ldr	r0, [r7, #4]
 8013e5c:	f7ff ff38 	bl	8013cd0 <_ZN6Parser26parse_identifier_statementEP9Statement>
		break;
 8013e60:	e044      	b.n	8013eec <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_WHILE:
		s->type = STATEMENT_WHILE;
 8013e62:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013e64:	2203      	movs	r2, #3
 8013e66:	701a      	strb	r2, [r3, #0]
		get_next_token();
 8013e68:	6878      	ldr	r0, [r7, #4]
 8013e6a:	f000 f8fa 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		s->content = parse_while();
 8013e6e:	6878      	ldr	r0, [r7, #4]
 8013e70:	f7ff fad8 	bl	8013424 <_ZN6Parser11parse_whileEv>
 8013e74:	4603      	mov	r3, r0
 8013e76:	60bb      	str	r3, [r7, #8]
 8013e78:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013e7a:	3304      	adds	r3, #4
 8013e7c:	f107 0208 	add.w	r2, r7, #8
 8013e80:	4611      	mov	r1, r2
 8013e82:	4618      	mov	r0, r3
 8013e84:	f000 fbdd 	bl	8014642 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8013e88:	e030      	b.n	8013eec <_ZN6Parser15parse_statementEv+0xd0>
	case TOKEN_IF:
		s->type = STATEMENT_IF;
 8013e8a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013e8c:	2204      	movs	r2, #4
 8013e8e:	701a      	strb	r2, [r3, #0]
		get_next_token();
 8013e90:	6878      	ldr	r0, [r7, #4]
 8013e92:	f000 f8e6 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		s->content = parse_if();
 8013e96:	6878      	ldr	r0, [r7, #4]
 8013e98:	f7ff fc3c 	bl	8013714 <_ZN6Parser8parse_ifEv>
 8013e9c:	4603      	mov	r3, r0
 8013e9e:	60fb      	str	r3, [r7, #12]
 8013ea0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8013ea2:	3304      	adds	r3, #4
 8013ea4:	f107 020c 	add.w	r2, r7, #12
 8013ea8:	4611      	mov	r1, r2
 8013eaa:	4618      	mov	r0, r3
 8013eac:	f000 fbf3 	bl	8014696 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 8013eb0:	e01c      	b.n	8013eec <_ZN6Parser15parse_statementEv+0xd0>
	default:
		Transmitter::report_error("expected statement:\nidentifier, if, while\n");
 8013eb2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013eb6:	4618      	mov	r0, r3
 8013eb8:	f00f fa02 	bl	80232c0 <_ZNSaIcEC1Ev>
 8013ebc:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8013ec0:	f107 0310 	add.w	r3, r7, #16
 8013ec4:	490c      	ldr	r1, [pc, #48]	; (8013ef8 <_ZN6Parser15parse_statementEv+0xdc>)
 8013ec6:	4618      	mov	r0, r3
 8013ec8:	f7ed ff93 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8013ecc:	f107 0310 	add.w	r3, r7, #16
 8013ed0:	4618      	mov	r0, r3
 8013ed2:	f004 fc57 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8013ed6:	f107 0310 	add.w	r3, r7, #16
 8013eda:	4618      	mov	r0, r3
 8013edc:	f00f fc81 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8013ee0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8013ee4:	4618      	mov	r0, r3
 8013ee6:	f00f f9ec 	bl	80232c2 <_ZNSaIcED1Ev>
		break;
 8013eea:	bf00      	nop
	}
	return s;
 8013eec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 8013eee:	4618      	mov	r0, r3
 8013ef0:	3734      	adds	r7, #52	; 0x34
 8013ef2:	46bd      	mov	sp, r7
 8013ef4:	bd90      	pop	{r4, r7, pc}
 8013ef6:	bf00      	nop
 8013ef8:	080297cc 	.word	0x080297cc

08013efc <_ZN6Parser24is_token_statement_firstEv>:

bool Parser::is_token_statement_first()
{
 8013efc:	b480      	push	{r7}
 8013efe:	b083      	sub	sp, #12
 8013f00:	af00      	add	r7, sp, #0
 8013f02:	6078      	str	r0, [r7, #4]
	return token_buffer.type == TOKEN_IDENTIFIER
 8013f04:	687b      	ldr	r3, [r7, #4]
 8013f06:	781b      	ldrb	r3, [r3, #0]
			|| token_buffer.type == TOKEN_WHILE
			|| token_buffer.type == TOKEN_IF;
 8013f08:	2b02      	cmp	r3, #2
 8013f0a:	d007      	beq.n	8013f1c <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_WHILE
 8013f0c:	687b      	ldr	r3, [r7, #4]
 8013f0e:	781b      	ldrb	r3, [r3, #0]
 8013f10:	2b13      	cmp	r3, #19
 8013f12:	d003      	beq.n	8013f1c <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_IF;
 8013f14:	687b      	ldr	r3, [r7, #4]
 8013f16:	781b      	ldrb	r3, [r3, #0]
 8013f18:	2b10      	cmp	r3, #16
 8013f1a:	d101      	bne.n	8013f20 <_ZN6Parser24is_token_statement_firstEv+0x24>
 8013f1c:	2301      	movs	r3, #1
 8013f1e:	e000      	b.n	8013f22 <_ZN6Parser24is_token_statement_firstEv+0x26>
 8013f20:	2300      	movs	r3, #0
}
 8013f22:	4618      	mov	r0, r3
 8013f24:	370c      	adds	r7, #12
 8013f26:	46bd      	mov	sp, r7
 8013f28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f2c:	4770      	bx	lr

08013f2e <_ZN6Parser13skip_newlinesEv>:

void Parser::skip_newlines()
{
 8013f2e:	b580      	push	{r7, lr}
 8013f30:	b082      	sub	sp, #8
 8013f32:	af00      	add	r7, sp, #0
 8013f34:	6078      	str	r0, [r7, #4]
	while (token_buffer.type == TOKEN_NEWLINE)
 8013f36:	687b      	ldr	r3, [r7, #4]
 8013f38:	781b      	ldrb	r3, [r3, #0]
 8013f3a:	2b0a      	cmp	r3, #10
 8013f3c:	d103      	bne.n	8013f46 <_ZN6Parser13skip_newlinesEv+0x18>
	{
		get_next_token();
 8013f3e:	6878      	ldr	r0, [r7, #4]
 8013f40:	f000 f88f 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	while (token_buffer.type == TOKEN_NEWLINE)
 8013f44:	e7f7      	b.n	8013f36 <_ZN6Parser13skip_newlinesEv+0x8>
	}
}
 8013f46:	bf00      	nop
 8013f48:	3708      	adds	r7, #8
 8013f4a:	46bd      	mov	sp, r7
 8013f4c:	bd80      	pop	{r7, pc}

08013f4e <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013f4e:	b580      	push	{r7, lr}
 8013f50:	b082      	sub	sp, #8
 8013f52:	af00      	add	r7, sp, #0
 8013f54:	6078      	str	r0, [r7, #4]
 8013f56:	687b      	ldr	r3, [r7, #4]
 8013f58:	4618      	mov	r0, r3
 8013f5a:	f000 fbc6 	bl	80146ea <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>
 8013f5e:	687b      	ldr	r3, [r7, #4]
 8013f60:	4618      	mov	r0, r3
 8013f62:	3708      	adds	r7, #8
 8013f64:	46bd      	mov	sp, r7
 8013f66:	bd80      	pop	{r7, pc}

08013f68 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>:
      vector() = default;
 8013f68:	b580      	push	{r7, lr}
 8013f6a:	b082      	sub	sp, #8
 8013f6c:	af00      	add	r7, sp, #0
 8013f6e:	6078      	str	r0, [r7, #4]
 8013f70:	687b      	ldr	r3, [r7, #4]
 8013f72:	4618      	mov	r0, r3
 8013f74:	f7ff ffeb 	bl	8013f4e <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>
 8013f78:	687b      	ldr	r3, [r7, #4]
 8013f7a:	4618      	mov	r0, r3
 8013f7c:	3708      	adds	r7, #8
 8013f7e:	46bd      	mov	sp, r7
 8013f80:	bd80      	pop	{r7, pc}

08013f82 <_ZN4BodyC1Ev>:
class Body
 8013f82:	b580      	push	{r7, lr}
 8013f84:	b082      	sub	sp, #8
 8013f86:	af00      	add	r7, sp, #0
 8013f88:	6078      	str	r0, [r7, #4]
 8013f8a:	687b      	ldr	r3, [r7, #4]
 8013f8c:	4618      	mov	r0, r3
 8013f8e:	f7ff ffeb 	bl	8013f68 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>
 8013f92:	687b      	ldr	r3, [r7, #4]
 8013f94:	4618      	mov	r0, r3
 8013f96:	3708      	adds	r7, #8
 8013f98:	46bd      	mov	sp, r7
 8013f9a:	bd80      	pop	{r7, pc}

08013f9c <_ZN6Parser10parse_bodyEv>:

Body* Parser::parse_body()
{
 8013f9c:	b590      	push	{r4, r7, lr}
 8013f9e:	b085      	sub	sp, #20
 8013fa0:	af00      	add	r7, sp, #0
 8013fa2:	6078      	str	r0, [r7, #4]
	auto bod = new Body();
 8013fa4:	200c      	movs	r0, #12
 8013fa6:	f00f f97a 	bl	802329e <_Znwj>
 8013faa:	4603      	mov	r3, r0
 8013fac:	461c      	mov	r4, r3
 8013fae:	4622      	mov	r2, r4
 8013fb0:	2300      	movs	r3, #0
 8013fb2:	6013      	str	r3, [r2, #0]
 8013fb4:	6053      	str	r3, [r2, #4]
 8013fb6:	6093      	str	r3, [r2, #8]
 8013fb8:	4620      	mov	r0, r4
 8013fba:	f7ff ffe2 	bl	8013f82 <_ZN4BodyC1Ev>
 8013fbe:	60fc      	str	r4, [r7, #12]
	while (is_token_statement_first())
 8013fc0:	6878      	ldr	r0, [r7, #4]
 8013fc2:	f7ff ff9b 	bl	8013efc <_ZN6Parser24is_token_statement_firstEv>
 8013fc6:	4603      	mov	r3, r0
 8013fc8:	2b00      	cmp	r3, #0
 8013fca:	d00f      	beq.n	8013fec <_ZN6Parser10parse_bodyEv+0x50>
	{
		bod->statements.push_back(parse_statement());
 8013fcc:	68fc      	ldr	r4, [r7, #12]
 8013fce:	6878      	ldr	r0, [r7, #4]
 8013fd0:	f7ff ff24 	bl	8013e1c <_ZN6Parser15parse_statementEv>
 8013fd4:	4603      	mov	r3, r0
 8013fd6:	60bb      	str	r3, [r7, #8]
 8013fd8:	f107 0308 	add.w	r3, r7, #8
 8013fdc:	4619      	mov	r1, r3
 8013fde:	4620      	mov	r0, r4
 8013fe0:	f000 fb93 	bl	801470a <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>
		skip_newlines();
 8013fe4:	6878      	ldr	r0, [r7, #4]
 8013fe6:	f7ff ffa2 	bl	8013f2e <_ZN6Parser13skip_newlinesEv>
	while (is_token_statement_first())
 8013fea:	e7e9      	b.n	8013fc0 <_ZN6Parser10parse_bodyEv+0x24>
	}
	return bod;
 8013fec:	68fb      	ldr	r3, [r7, #12]
}
 8013fee:	4618      	mov	r0, r3
 8013ff0:	3714      	adds	r7, #20
 8013ff2:	46bd      	mov	sp, r7
 8013ff4:	bd90      	pop	{r4, r7, pc}

08013ff6 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8013ff6:	b580      	push	{r7, lr}
 8013ff8:	b082      	sub	sp, #8
 8013ffa:	af00      	add	r7, sp, #0
 8013ffc:	6078      	str	r0, [r7, #4]
 8013ffe:	6039      	str	r1, [r7, #0]
 8014000:	687b      	ldr	r3, [r7, #4]
 8014002:	683a      	ldr	r2, [r7, #0]
 8014004:	4611      	mov	r1, r2
 8014006:	4618      	mov	r0, r3
 8014008:	f000 fd32 	bl	8014a70 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 801400c:	687b      	ldr	r3, [r7, #4]
 801400e:	4618      	mov	r0, r3
 8014010:	3708      	adds	r7, #8
 8014012:	46bd      	mov	sp, r7
 8014014:	bd80      	pop	{r7, pc}

08014016 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>:
    class variant
 8014016:	b580      	push	{r7, lr}
 8014018:	b082      	sub	sp, #8
 801401a:	af00      	add	r7, sp, #0
 801401c:	6078      	str	r0, [r7, #4]
 801401e:	6039      	str	r1, [r7, #0]
 8014020:	687b      	ldr	r3, [r7, #4]
 8014022:	683a      	ldr	r2, [r7, #0]
 8014024:	4611      	mov	r1, r2
 8014026:	4618      	mov	r0, r3
 8014028:	f7ff ffe5 	bl	8013ff6 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 801402c:	687b      	ldr	r3, [r7, #4]
 801402e:	4618      	mov	r0, r3
 8014030:	3708      	adds	r7, #8
 8014032:	46bd      	mov	sp, r7
 8014034:	bd80      	pop	{r7, pc}

08014036 <_ZN5TokenaSEOS_>:
 8014036:	b580      	push	{r7, lr}
 8014038:	b082      	sub	sp, #8
 801403a:	af00      	add	r7, sp, #0
 801403c:	6078      	str	r0, [r7, #4]
 801403e:	6039      	str	r1, [r7, #0]
 8014040:	683b      	ldr	r3, [r7, #0]
 8014042:	781a      	ldrb	r2, [r3, #0]
 8014044:	687b      	ldr	r3, [r7, #4]
 8014046:	701a      	strb	r2, [r3, #0]
 8014048:	683b      	ldr	r3, [r7, #0]
 801404a:	1d1a      	adds	r2, r3, #4
 801404c:	687b      	ldr	r3, [r7, #4]
 801404e:	3304      	adds	r3, #4
 8014050:	4611      	mov	r1, r2
 8014052:	4618      	mov	r0, r3
 8014054:	f7ff ffdf 	bl	8014016 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>
 8014058:	687b      	ldr	r3, [r7, #4]
 801405a:	4618      	mov	r0, r3
 801405c:	3708      	adds	r7, #8
 801405e:	46bd      	mov	sp, r7
 8014060:	bd80      	pop	{r7, pc}

08014062 <_ZN6Parser14get_next_tokenEv>:

void Parser::get_next_token()
{
 8014062:	b580      	push	{r7, lr}
 8014064:	b090      	sub	sp, #64	; 0x40
 8014066:	af00      	add	r7, sp, #0
 8014068:	6078      	str	r0, [r7, #4]
	token_buffer = Lexer::build_token();
 801406a:	f107 0308 	add.w	r3, r7, #8
 801406e:	4618      	mov	r0, r3
 8014070:	f7fb fc70 	bl	800f954 <_ZN5Lexer11build_tokenEv>
 8014074:	687b      	ldr	r3, [r7, #4]
 8014076:	f107 0208 	add.w	r2, r7, #8
 801407a:	4611      	mov	r1, r2
 801407c:	4618      	mov	r0, r3
 801407e:	f7ff ffda 	bl	8014036 <_ZN5TokenaSEOS_>
 8014082:	f107 0308 	add.w	r3, r7, #8
 8014086:	4618      	mov	r0, r3
 8014088:	f7fb f8bf 	bl	800f20a <_ZN5TokenD1Ev>
	if (token_buffer.type == TOKEN_ERROR)
 801408c:	687b      	ldr	r3, [r7, #4]
 801408e:	781b      	ldrb	r3, [r3, #0]
 8014090:	2b00      	cmp	r3, #0
 8014092:	d115      	bne.n	80140c0 <_ZN6Parser14get_next_tokenEv+0x5e>
	{
		Transmitter::report_error(std::get<std::string>(token_buffer.value));
 8014094:	687b      	ldr	r3, [r7, #4]
 8014096:	3304      	adds	r3, #4
 8014098:	4618      	mov	r0, r3
 801409a:	f000 f9dd 	bl	8014458 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 801409e:	4602      	mov	r2, r0
 80140a0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80140a4:	4611      	mov	r1, r2
 80140a6:	4618      	mov	r0, r3
 80140a8:	f00f fd6a 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80140ac:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80140b0:	4618      	mov	r0, r3
 80140b2:	f004 fb67 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80140b6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80140ba:	4618      	mov	r0, r3
 80140bc:	f00f fb91 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 80140c0:	bf00      	nop
 80140c2:	3740      	adds	r7, #64	; 0x40
 80140c4:	46bd      	mov	sp, r7
 80140c6:	bd80      	pop	{r7, pc}

080140c8 <_ZN6Parser11parse_setupEP7Program>:

void Parser::parse_setup(Program *Prog)
{
 80140c8:	b580      	push	{r7, lr}
 80140ca:	b090      	sub	sp, #64	; 0x40
 80140cc:	af00      	add	r7, sp, #0
 80140ce:	6078      	str	r0, [r7, #4]
 80140d0:	6039      	str	r1, [r7, #0]
	get_next_token();
 80140d2:	6878      	ldr	r0, [r7, #4]
 80140d4:	f7ff ffc5 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_SETUP, "\"setup\" keyword");
 80140d8:	f107 0320 	add.w	r3, r7, #32
 80140dc:	4618      	mov	r0, r3
 80140de:	f00f f8ef 	bl	80232c0 <_ZNSaIcEC1Ev>
 80140e2:	f107 0220 	add.w	r2, r7, #32
 80140e6:	f107 0308 	add.w	r3, r7, #8
 80140ea:	4923      	ldr	r1, [pc, #140]	; (8014178 <_ZN6Parser11parse_setupEP7Program+0xb0>)
 80140ec:	4618      	mov	r0, r3
 80140ee:	f7ed fe80 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80140f2:	f107 0308 	add.w	r3, r7, #8
 80140f6:	461a      	mov	r2, r3
 80140f8:	2107      	movs	r1, #7
 80140fa:	6878      	ldr	r0, [r7, #4]
 80140fc:	f7ff fc8e 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8014100:	f107 0308 	add.w	r3, r7, #8
 8014104:	4618      	mov	r0, r3
 8014106:	f00f fb6c 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801410a:	f107 0320 	add.w	r3, r7, #32
 801410e:	4618      	mov	r0, r3
 8014110:	f00f f8d7 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 8014114:	6878      	ldr	r0, [r7, #4]
 8014116:	f7ff ffa4 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after setup");
 801411a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801411e:	4618      	mov	r0, r3
 8014120:	f00f f8ce 	bl	80232c0 <_ZNSaIcEC1Ev>
 8014124:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8014128:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801412c:	4913      	ldr	r1, [pc, #76]	; (801417c <_ZN6Parser11parse_setupEP7Program+0xb4>)
 801412e:	4618      	mov	r0, r3
 8014130:	f7ed fe5f 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8014134:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8014138:	461a      	mov	r2, r3
 801413a:	210a      	movs	r1, #10
 801413c:	6878      	ldr	r0, [r7, #4]
 801413e:	f7ff fc6d 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8014142:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8014146:	4618      	mov	r0, r3
 8014148:	f00f fb4b 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801414c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8014150:	4618      	mov	r0, r3
 8014152:	f00f f8b6 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 8014156:	6878      	ldr	r0, [r7, #4]
 8014158:	f7ff ff83 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 801415c:	6878      	ldr	r0, [r7, #4]
 801415e:	f7ff fee6 	bl	8013f2e <_ZN6Parser13skip_newlinesEv>
	Prog->setup = parse_body();
 8014162:	6878      	ldr	r0, [r7, #4]
 8014164:	f7ff ff1a 	bl	8013f9c <_ZN6Parser10parse_bodyEv>
 8014168:	4602      	mov	r2, r0
 801416a:	683b      	ldr	r3, [r7, #0]
 801416c:	601a      	str	r2, [r3, #0]
}
 801416e:	bf00      	nop
 8014170:	3740      	adds	r7, #64	; 0x40
 8014172:	46bd      	mov	sp, r7
 8014174:	bd80      	pop	{r7, pc}
 8014176:	bf00      	nop
 8014178:	080297f8 	.word	0x080297f8
 801417c:	08029808 	.word	0x08029808

08014180 <_ZN6Parser10parse_loopEP7Program>:

void Parser::parse_loop(Program *Prog)
{
 8014180:	b580      	push	{r7, lr}
 8014182:	b090      	sub	sp, #64	; 0x40
 8014184:	af00      	add	r7, sp, #0
 8014186:	6078      	str	r0, [r7, #4]
 8014188:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_LOOP, "\"loop\" keyword");
 801418a:	f107 0320 	add.w	r3, r7, #32
 801418e:	4618      	mov	r0, r3
 8014190:	f00f f896 	bl	80232c0 <_ZNSaIcEC1Ev>
 8014194:	f107 0220 	add.w	r2, r7, #32
 8014198:	f107 0308 	add.w	r3, r7, #8
 801419c:	4922      	ldr	r1, [pc, #136]	; (8014228 <_ZN6Parser10parse_loopEP7Program+0xa8>)
 801419e:	4618      	mov	r0, r3
 80141a0:	f7ed fe27 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80141a4:	f107 0308 	add.w	r3, r7, #8
 80141a8:	461a      	mov	r2, r3
 80141aa:	2108      	movs	r1, #8
 80141ac:	6878      	ldr	r0, [r7, #4]
 80141ae:	f7ff fc35 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80141b2:	f107 0308 	add.w	r3, r7, #8
 80141b6:	4618      	mov	r0, r3
 80141b8:	f00f fb13 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80141bc:	f107 0320 	add.w	r3, r7, #32
 80141c0:	4618      	mov	r0, r3
 80141c2:	f00f f87e 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 80141c6:	6878      	ldr	r0, [r7, #4]
 80141c8:	f7ff ff4b 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after loop");
 80141cc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80141d0:	4618      	mov	r0, r3
 80141d2:	f00f f875 	bl	80232c0 <_ZNSaIcEC1Ev>
 80141d6:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 80141da:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80141de:	4913      	ldr	r1, [pc, #76]	; (801422c <_ZN6Parser10parse_loopEP7Program+0xac>)
 80141e0:	4618      	mov	r0, r3
 80141e2:	f7ed fe06 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80141e6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80141ea:	461a      	mov	r2, r3
 80141ec:	210a      	movs	r1, #10
 80141ee:	6878      	ldr	r0, [r7, #4]
 80141f0:	f7ff fc14 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80141f4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80141f8:	4618      	mov	r0, r3
 80141fa:	f00f faf2 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80141fe:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8014202:	4618      	mov	r0, r3
 8014204:	f00f f85d 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 8014208:	6878      	ldr	r0, [r7, #4]
 801420a:	f7ff ff2a 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 801420e:	6878      	ldr	r0, [r7, #4]
 8014210:	f7ff fe8d 	bl	8013f2e <_ZN6Parser13skip_newlinesEv>
	Prog->loop = parse_body();
 8014214:	6878      	ldr	r0, [r7, #4]
 8014216:	f7ff fec1 	bl	8013f9c <_ZN6Parser10parse_bodyEv>
 801421a:	4602      	mov	r2, r0
 801421c:	683b      	ldr	r3, [r7, #0]
 801421e:	605a      	str	r2, [r3, #4]
}
 8014220:	bf00      	nop
 8014222:	3740      	adds	r7, #64	; 0x40
 8014224:	46bd      	mov	sp, r7
 8014226:	bd80      	pop	{r7, pc}
 8014228:	08029820 	.word	0x08029820
 801422c:	08029830 	.word	0x08029830

08014230 <_ZN6Parser12parse_finishEP7Program>:

void Parser::parse_finish(Program *Prog)
{
 8014230:	b580      	push	{r7, lr}
 8014232:	b090      	sub	sp, #64	; 0x40
 8014234:	af00      	add	r7, sp, #0
 8014236:	6078      	str	r0, [r7, #4]
 8014238:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_FINISH, "\"finish\" keyword");
 801423a:	f107 0320 	add.w	r3, r7, #32
 801423e:	4618      	mov	r0, r3
 8014240:	f00f f83e 	bl	80232c0 <_ZNSaIcEC1Ev>
 8014244:	f107 0220 	add.w	r2, r7, #32
 8014248:	f107 0308 	add.w	r3, r7, #8
 801424c:	4922      	ldr	r1, [pc, #136]	; (80142d8 <_ZN6Parser12parse_finishEP7Program+0xa8>)
 801424e:	4618      	mov	r0, r3
 8014250:	f7ed fdcf 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8014254:	f107 0308 	add.w	r3, r7, #8
 8014258:	461a      	mov	r2, r3
 801425a:	2109      	movs	r1, #9
 801425c:	6878      	ldr	r0, [r7, #4]
 801425e:	f7ff fbdd 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8014262:	f107 0308 	add.w	r3, r7, #8
 8014266:	4618      	mov	r0, r3
 8014268:	f00f fabb 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801426c:	f107 0320 	add.w	r3, r7, #32
 8014270:	4618      	mov	r0, r3
 8014272:	f00f f826 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 8014276:	6878      	ldr	r0, [r7, #4]
 8014278:	f7ff fef3 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after finish");
 801427c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8014280:	4618      	mov	r0, r3
 8014282:	f00f f81d 	bl	80232c0 <_ZNSaIcEC1Ev>
 8014286:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801428a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801428e:	4913      	ldr	r1, [pc, #76]	; (80142dc <_ZN6Parser12parse_finishEP7Program+0xac>)
 8014290:	4618      	mov	r0, r3
 8014292:	f7ed fdae 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8014296:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801429a:	461a      	mov	r2, r3
 801429c:	210a      	movs	r1, #10
 801429e:	6878      	ldr	r0, [r7, #4]
 80142a0:	f7ff fbbc 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80142a4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80142a8:	4618      	mov	r0, r3
 80142aa:	f00f fa9a 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80142ae:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80142b2:	4618      	mov	r0, r3
 80142b4:	f00f f805 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 80142b8:	6878      	ldr	r0, [r7, #4]
 80142ba:	f7ff fed2 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 80142be:	6878      	ldr	r0, [r7, #4]
 80142c0:	f7ff fe35 	bl	8013f2e <_ZN6Parser13skip_newlinesEv>
	Prog->finish = parse_body();
 80142c4:	6878      	ldr	r0, [r7, #4]
 80142c6:	f7ff fe69 	bl	8013f9c <_ZN6Parser10parse_bodyEv>
 80142ca:	4602      	mov	r2, r0
 80142cc:	683b      	ldr	r3, [r7, #0]
 80142ce:	609a      	str	r2, [r3, #8]
}
 80142d0:	bf00      	nop
 80142d2:	3740      	adds	r7, #64	; 0x40
 80142d4:	46bd      	mov	sp, r7
 80142d6:	bd80      	pop	{r7, pc}
 80142d8:	08029848 	.word	0x08029848
 80142dc:	0802985c 	.word	0x0802985c

080142e0 <_ZN6ParserD1Ev>:
	Body *setup;
	Body *loop;
	Body *finish;
};

class Parser
 80142e0:	b580      	push	{r7, lr}
 80142e2:	b082      	sub	sp, #8
 80142e4:	af00      	add	r7, sp, #0
 80142e6:	6078      	str	r0, [r7, #4]
 80142e8:	687b      	ldr	r3, [r7, #4]
 80142ea:	4618      	mov	r0, r3
 80142ec:	f7fa ff8d 	bl	800f20a <_ZN5TokenD1Ev>
 80142f0:	687b      	ldr	r3, [r7, #4]
 80142f2:	4618      	mov	r0, r3
 80142f4:	3708      	adds	r7, #8
 80142f6:	46bd      	mov	sp, r7
 80142f8:	bd80      	pop	{r7, pc}
	...

080142fc <__tcf_0>:

Program* Parser::parse_program()
{
	static Parser Par;
 80142fc:	b580      	push	{r7, lr}
 80142fe:	af00      	add	r7, sp, #0
 8014300:	4801      	ldr	r0, [pc, #4]	; (8014308 <__tcf_0+0xc>)
 8014302:	f7ff ffed 	bl	80142e0 <_ZN6ParserD1Ev>
 8014306:	bd80      	pop	{r7, pc}
 8014308:	2000046c 	.word	0x2000046c

0801430c <_ZN6Parser13parse_programEv>:
{
 801430c:	b580      	push	{r7, lr}
 801430e:	b088      	sub	sp, #32
 8014310:	af00      	add	r7, sp, #0
	static Parser Par;
 8014312:	4b2c      	ldr	r3, [pc, #176]	; (80143c4 <_ZN6Parser13parse_programEv+0xb8>)
 8014314:	781b      	ldrb	r3, [r3, #0]
 8014316:	f3bf 8f5b 	dmb	ish
 801431a:	b2db      	uxtb	r3, r3
 801431c:	f003 0301 	and.w	r3, r3, #1
 8014320:	2b00      	cmp	r3, #0
 8014322:	bf0c      	ite	eq
 8014324:	2301      	moveq	r3, #1
 8014326:	2300      	movne	r3, #0
 8014328:	b2db      	uxtb	r3, r3
 801432a:	2b00      	cmp	r3, #0
 801432c:	d013      	beq.n	8014356 <_ZN6Parser13parse_programEv+0x4a>
 801432e:	4825      	ldr	r0, [pc, #148]	; (80143c4 <_ZN6Parser13parse_programEv+0xb8>)
 8014330:	f00e ffa6 	bl	8023280 <__cxa_guard_acquire>
 8014334:	4603      	mov	r3, r0
 8014336:	2b00      	cmp	r3, #0
 8014338:	bf14      	ite	ne
 801433a:	2301      	movne	r3, #1
 801433c:	2300      	moveq	r3, #0
 801433e:	b2db      	uxtb	r3, r3
 8014340:	2b00      	cmp	r3, #0
 8014342:	d008      	beq.n	8014356 <_ZN6Parser13parse_programEv+0x4a>
 8014344:	4820      	ldr	r0, [pc, #128]	; (80143c8 <_ZN6Parser13parse_programEv+0xbc>)
 8014346:	f7ff f85f 	bl	8013408 <_ZN6ParserC1Ev>
 801434a:	481e      	ldr	r0, [pc, #120]	; (80143c4 <_ZN6Parser13parse_programEv+0xb8>)
 801434c:	f00e ffa4 	bl	8023298 <__cxa_guard_release>
 8014350:	481e      	ldr	r0, [pc, #120]	; (80143cc <_ZN6Parser13parse_programEv+0xc0>)
 8014352:	f010 fbea 	bl	8024b2a <atexit>
	auto Prog = new Program();
 8014356:	200c      	movs	r0, #12
 8014358:	f00e ffa1 	bl	802329e <_Znwj>
 801435c:	4603      	mov	r3, r0
 801435e:	2200      	movs	r2, #0
 8014360:	601a      	str	r2, [r3, #0]
 8014362:	2200      	movs	r2, #0
 8014364:	605a      	str	r2, [r3, #4]
 8014366:	2200      	movs	r2, #0
 8014368:	609a      	str	r2, [r3, #8]
 801436a:	61fb      	str	r3, [r7, #28]
	Par.parse_setup(Prog);
 801436c:	69f9      	ldr	r1, [r7, #28]
 801436e:	4816      	ldr	r0, [pc, #88]	; (80143c8 <_ZN6Parser13parse_programEv+0xbc>)
 8014370:	f7ff feaa 	bl	80140c8 <_ZN6Parser11parse_setupEP7Program>
	Par.parse_loop(Prog);
 8014374:	69f9      	ldr	r1, [r7, #28]
 8014376:	4814      	ldr	r0, [pc, #80]	; (80143c8 <_ZN6Parser13parse_programEv+0xbc>)
 8014378:	f7ff ff02 	bl	8014180 <_ZN6Parser10parse_loopEP7Program>
	Par.parse_finish(Prog);
 801437c:	69f9      	ldr	r1, [r7, #28]
 801437e:	4812      	ldr	r0, [pc, #72]	; (80143c8 <_ZN6Parser13parse_programEv+0xbc>)
 8014380:	f7ff ff56 	bl	8014230 <_ZN6Parser12parse_finishEP7Program>
	Par.assert_token(TOKEN_END_OF_FILE, "end of file");
 8014384:	f107 0318 	add.w	r3, r7, #24
 8014388:	4618      	mov	r0, r3
 801438a:	f00e ff99 	bl	80232c0 <_ZNSaIcEC1Ev>
 801438e:	f107 0218 	add.w	r2, r7, #24
 8014392:	463b      	mov	r3, r7
 8014394:	490e      	ldr	r1, [pc, #56]	; (80143d0 <_ZN6Parser13parse_programEv+0xc4>)
 8014396:	4618      	mov	r0, r3
 8014398:	f7ed fd2b 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801439c:	463b      	mov	r3, r7
 801439e:	461a      	mov	r2, r3
 80143a0:	2125      	movs	r1, #37	; 0x25
 80143a2:	4809      	ldr	r0, [pc, #36]	; (80143c8 <_ZN6Parser13parse_programEv+0xbc>)
 80143a4:	f7ff fb3a 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80143a8:	463b      	mov	r3, r7
 80143aa:	4618      	mov	r0, r3
 80143ac:	f00f fa19 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80143b0:	f107 0318 	add.w	r3, r7, #24
 80143b4:	4618      	mov	r0, r3
 80143b6:	f00e ff84 	bl	80232c2 <_ZNSaIcED1Ev>
	return Prog;
 80143ba:	69fb      	ldr	r3, [r7, #28]
}
 80143bc:	4618      	mov	r0, r3
 80143be:	3720      	adds	r7, #32
 80143c0:	46bd      	mov	sp, r7
 80143c2:	bd80      	pop	{r7, pc}
 80143c4:	2000048c 	.word	0x2000048c
 80143c8:	2000046c 	.word	0x2000046c
 80143cc:	080142fd 	.word	0x080142fd
 80143d0:	08029874 	.word	0x08029874

080143d4 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 80143d4:	b580      	push	{r7, lr}
 80143d6:	b082      	sub	sp, #8
 80143d8:	af00      	add	r7, sp, #0
 80143da:	6078      	str	r0, [r7, #4]
 80143dc:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 80143de:	6838      	ldr	r0, [r7, #0]
 80143e0:	f000 fb5c 	bl	8014a9c <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>
 80143e4:	4603      	mov	r3, r0
 80143e6:	4619      	mov	r1, r3
 80143e8:	6878      	ldr	r0, [r7, #4]
 80143ea:	f000 fb62 	bl	8014ab2 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 80143ee:	bf00      	nop
 80143f0:	3708      	adds	r7, #8
 80143f2:	46bd      	mov	sp, r7
 80143f4:	bd80      	pop	{r7, pc}

080143f6 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 80143f6:	b580      	push	{r7, lr}
 80143f8:	b082      	sub	sp, #8
 80143fa:	af00      	add	r7, sp, #0
 80143fc:	6078      	str	r0, [r7, #4]
 80143fe:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8014400:	6838      	ldr	r0, [r7, #0]
 8014402:	f000 fb88 	bl	8014b16 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>
 8014406:	4603      	mov	r3, r0
 8014408:	4619      	mov	r1, r3
 801440a:	6878      	ldr	r0, [r7, #4]
 801440c:	f000 fb8e 	bl	8014b2c <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8014410:	bf00      	nop
 8014412:	3708      	adds	r7, #8
 8014414:	46bd      	mov	sp, r7
 8014416:	bd80      	pop	{r7, pc}

08014418 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8014418:	b580      	push	{r7, lr}
 801441a:	b082      	sub	sp, #8
 801441c:	af00      	add	r7, sp, #0
 801441e:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8014420:	6878      	ldr	r0, [r7, #4]
 8014422:	f000 fbb5 	bl	8014b90 <_ZNSaIP10ExpressionEC1Ev>
 8014426:	687b      	ldr	r3, [r7, #4]
 8014428:	4618      	mov	r0, r3
 801442a:	f7fa fa9e 	bl	800e96a <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801442e:	687b      	ldr	r3, [r7, #4]
 8014430:	4618      	mov	r0, r3
 8014432:	3708      	adds	r7, #8
 8014434:	46bd      	mov	sp, r7
 8014436:	bd80      	pop	{r7, pc}

08014438 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8014438:	b580      	push	{r7, lr}
 801443a:	b082      	sub	sp, #8
 801443c:	af00      	add	r7, sp, #0
 801443e:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8014440:	6878      	ldr	r0, [r7, #4]
 8014442:	f000 fbb1 	bl	8014ba8 <_ZNSaIP4BodyEC1Ev>
 8014446:	687b      	ldr	r3, [r7, #4]
 8014448:	4618      	mov	r0, r3
 801444a:	f000 fbb9 	bl	8014bc0 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801444e:	687b      	ldr	r3, [r7, #4]
 8014450:	4618      	mov	r0, r3
 8014452:	3708      	adds	r7, #8
 8014454:	46bd      	mov	sp, r7
 8014456:	bd80      	pop	{r7, pc}

08014458 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8014458:	b580      	push	{r7, lr}
 801445a:	b082      	sub	sp, #8
 801445c:	af00      	add	r7, sp, #0
 801445e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8014460:	6878      	ldr	r0, [r7, #4]
 8014462:	f7fb ff39 	bl	80102d8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8014466:	4603      	mov	r3, r0
    }
 8014468:	4618      	mov	r0, r3
 801446a:	3708      	adds	r7, #8
 801446c:	46bd      	mov	sp, r7
 801446e:	bd80      	pop	{r7, pc}

08014470 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>:
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 8014470:	b580      	push	{r7, lr}
 8014472:	b082      	sub	sp, #8
 8014474:	af00      	add	r7, sp, #0
 8014476:	6078      	str	r0, [r7, #4]
 8014478:	6039      	str	r1, [r7, #0]
    { return __lhs.compare(__rhs) == 0; }
 801447a:	6839      	ldr	r1, [r7, #0]
 801447c:	6878      	ldr	r0, [r7, #4]
 801447e:	f00f fb69 	bl	8023b54 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 8014482:	4603      	mov	r3, r0
 8014484:	2b00      	cmp	r3, #0
 8014486:	bf0c      	ite	eq
 8014488:	2301      	moveq	r3, #1
 801448a:	2300      	movne	r3, #0
 801448c:	b2db      	uxtb	r3, r3
 801448e:	4618      	mov	r0, r3
 8014490:	3708      	adds	r7, #8
 8014492:	46bd      	mov	sp, r7
 8014494:	bd80      	pop	{r7, pc}

08014496 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014496:	b590      	push	{r4, r7, lr}
 8014498:	b085      	sub	sp, #20
 801449a:	af00      	add	r7, sp, #0
 801449c:	6078      	str	r0, [r7, #4]
 801449e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80144a0:	2301      	movs	r3, #1
 80144a2:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80144a4:	6878      	ldr	r0, [r7, #4]
 80144a6:	f7ef faee 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80144aa:	4603      	mov	r3, r0
 80144ac:	2b01      	cmp	r3, #1
 80144ae:	bf0c      	ite	eq
 80144b0:	2301      	moveq	r3, #1
 80144b2:	2300      	movne	r3, #0
 80144b4:	b2db      	uxtb	r3, r3
 80144b6:	2b00      	cmp	r3, #0
 80144b8:	d00a      	beq.n	80144d0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80144ba:	6838      	ldr	r0, [r7, #0]
 80144bc:	f000 fbb2 	bl	8014c24 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80144c0:	4603      	mov	r3, r0
 80144c2:	681c      	ldr	r4, [r3, #0]
 80144c4:	6878      	ldr	r0, [r7, #4]
 80144c6:	f7ef fb63 	bl	8003b90 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80144ca:	4603      	mov	r3, r0
 80144cc:	601c      	str	r4, [r3, #0]
 80144ce:	e007      	b.n	80144e0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80144d0:	6838      	ldr	r0, [r7, #0]
 80144d2:	f000 fba7 	bl	8014c24 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80144d6:	4603      	mov	r3, r0
 80144d8:	4619      	mov	r1, r3
 80144da:	6878      	ldr	r0, [r7, #4]
 80144dc:	f000 fbad 	bl	8014c3a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80144e0:	687b      	ldr	r3, [r7, #4]
	}
 80144e2:	4618      	mov	r0, r3
 80144e4:	3714      	adds	r7, #20
 80144e6:	46bd      	mov	sp, r7
 80144e8:	bd90      	pop	{r4, r7, pc}

080144ea <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 80144ea:	b590      	push	{r4, r7, lr}
 80144ec:	b085      	sub	sp, #20
 80144ee:	af00      	add	r7, sp, #0
 80144f0:	6078      	str	r0, [r7, #4]
 80144f2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80144f4:	2300      	movs	r3, #0
 80144f6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80144f8:	6878      	ldr	r0, [r7, #4]
 80144fa:	f7ef fac4 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80144fe:	4603      	mov	r3, r0
 8014500:	2b00      	cmp	r3, #0
 8014502:	bf0c      	ite	eq
 8014504:	2301      	moveq	r3, #1
 8014506:	2300      	movne	r3, #0
 8014508:	b2db      	uxtb	r3, r3
 801450a:	2b00      	cmp	r3, #0
 801450c:	d00a      	beq.n	8014524 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801450e:	6838      	ldr	r0, [r7, #0]
 8014510:	f000 fbac 	bl	8014c6c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014514:	4603      	mov	r3, r0
 8014516:	681c      	ldr	r4, [r3, #0]
 8014518:	6878      	ldr	r0, [r7, #4]
 801451a:	f7ef fae9 	bl	8003af0 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801451e:	4603      	mov	r3, r0
 8014520:	601c      	str	r4, [r3, #0]
 8014522:	e007      	b.n	8014534 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8014524:	6838      	ldr	r0, [r7, #0]
 8014526:	f000 fba1 	bl	8014c6c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 801452a:	4603      	mov	r3, r0
 801452c:	4619      	mov	r1, r3
 801452e:	6878      	ldr	r0, [r7, #4]
 8014530:	f000 fba7 	bl	8014c82 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8014534:	687b      	ldr	r3, [r7, #4]
	}
 8014536:	4618      	mov	r0, r3
 8014538:	3714      	adds	r7, #20
 801453a:	46bd      	mov	sp, r7
 801453c:	bd90      	pop	{r4, r7, pc}

0801453e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801453e:	b590      	push	{r4, r7, lr}
 8014540:	b085      	sub	sp, #20
 8014542:	af00      	add	r7, sp, #0
 8014544:	6078      	str	r0, [r7, #4]
 8014546:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8014548:	2302      	movs	r3, #2
 801454a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801454c:	6878      	ldr	r0, [r7, #4]
 801454e:	f7ef fa9a 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014552:	4603      	mov	r3, r0
 8014554:	2b02      	cmp	r3, #2
 8014556:	bf0c      	ite	eq
 8014558:	2301      	moveq	r3, #1
 801455a:	2300      	movne	r3, #0
 801455c:	b2db      	uxtb	r3, r3
 801455e:	2b00      	cmp	r3, #0
 8014560:	d00a      	beq.n	8014578 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8014562:	6838      	ldr	r0, [r7, #0]
 8014564:	f000 fba6 	bl	8014cb4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014568:	4603      	mov	r3, r0
 801456a:	681c      	ldr	r4, [r3, #0]
 801456c:	6878      	ldr	r0, [r7, #4]
 801456e:	f7ef fb71 	bl	8003c54 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014572:	4603      	mov	r3, r0
 8014574:	601c      	str	r4, [r3, #0]
 8014576:	e007      	b.n	8014588 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8014578:	6838      	ldr	r0, [r7, #0]
 801457a:	f000 fb9b 	bl	8014cb4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801457e:	4603      	mov	r3, r0
 8014580:	4619      	mov	r1, r3
 8014582:	6878      	ldr	r0, [r7, #4]
 8014584:	f000 fba1 	bl	8014cca <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8014588:	687b      	ldr	r3, [r7, #4]
	}
 801458a:	4618      	mov	r0, r3
 801458c:	3714      	adds	r7, #20
 801458e:	46bd      	mov	sp, r7
 8014590:	bd90      	pop	{r4, r7, pc}

08014592 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8014592:	b580      	push	{r7, lr}
 8014594:	b082      	sub	sp, #8
 8014596:	af00      	add	r7, sp, #0
 8014598:	6078      	str	r0, [r7, #4]
 801459a:	7039      	strb	r1, [r7, #0]
 801459c:	687b      	ldr	r3, [r7, #4]
 801459e:	4611      	mov	r1, r2
 80145a0:	4618      	mov	r0, r3
 80145a2:	f000 fbc9 	bl	8014d38 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80145a6:	687b      	ldr	r3, [r7, #4]
 80145a8:	4618      	mov	r0, r3
 80145aa:	3708      	adds	r7, #8
 80145ac:	46bd      	mov	sp, r7
 80145ae:	bd80      	pop	{r7, pc}

080145b0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80145b0:	b580      	push	{r7, lr}
 80145b2:	b082      	sub	sp, #8
 80145b4:	af00      	add	r7, sp, #0
 80145b6:	6078      	str	r0, [r7, #4]
 80145b8:	7039      	strb	r1, [r7, #0]
 80145ba:	687b      	ldr	r3, [r7, #4]
 80145bc:	4611      	mov	r1, r2
 80145be:	4618      	mov	r0, r3
 80145c0:	f7ff ffe7 	bl	8014592 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80145c4:	687b      	ldr	r3, [r7, #4]
 80145c6:	4618      	mov	r0, r3
 80145c8:	3708      	adds	r7, #8
 80145ca:	46bd      	mov	sp, r7
 80145cc:	bd80      	pop	{r7, pc}

080145ce <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80145ce:	b580      	push	{r7, lr}
 80145d0:	b082      	sub	sp, #8
 80145d2:	af00      	add	r7, sp, #0
 80145d4:	6078      	str	r0, [r7, #4]
 80145d6:	7039      	strb	r1, [r7, #0]
 80145d8:	687b      	ldr	r3, [r7, #4]
 80145da:	4611      	mov	r1, r2
 80145dc:	4618      	mov	r0, r3
 80145de:	f7ff ffe7 	bl	80145b0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80145e2:	687b      	ldr	r3, [r7, #4]
 80145e4:	4618      	mov	r0, r3
 80145e6:	3708      	adds	r7, #8
 80145e8:	46bd      	mov	sp, r7
 80145ea:	bd80      	pop	{r7, pc}

080145ec <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80145ec:	b580      	push	{r7, lr}
 80145ee:	b082      	sub	sp, #8
 80145f0:	af00      	add	r7, sp, #0
 80145f2:	6078      	str	r0, [r7, #4]
 80145f4:	7039      	strb	r1, [r7, #0]
 80145f6:	687b      	ldr	r3, [r7, #4]
 80145f8:	4611      	mov	r1, r2
 80145fa:	4618      	mov	r0, r3
 80145fc:	f7ff ffe7 	bl	80145ce <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014600:	687b      	ldr	r3, [r7, #4]
 8014602:	4618      	mov	r0, r3
 8014604:	3708      	adds	r7, #8
 8014606:	46bd      	mov	sp, r7
 8014608:	bd80      	pop	{r7, pc}

0801460a <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801460a:	b580      	push	{r7, lr}
 801460c:	b082      	sub	sp, #8
 801460e:	af00      	add	r7, sp, #0
 8014610:	6078      	str	r0, [r7, #4]
 8014612:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 8014614:	687b      	ldr	r3, [r7, #4]
 8014616:	4611      	mov	r1, r2
 8014618:	4618      	mov	r0, r3
 801461a:	f7ff ffe7 	bl	80145ec <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801461e:	687b      	ldr	r3, [r7, #4]
 8014620:	4618      	mov	r0, r3
 8014622:	3708      	adds	r7, #8
 8014624:	46bd      	mov	sp, r7
 8014626:	bd80      	pop	{r7, pc}

08014628 <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      _Variant_base()
 8014628:	b580      	push	{r7, lr}
 801462a:	b082      	sub	sp, #8
 801462c:	af00      	add	r7, sp, #0
 801462e:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 8014630:	4619      	mov	r1, r3
 8014632:	6878      	ldr	r0, [r7, #4]
 8014634:	f7ff ffe9 	bl	801460a <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8014638:	687b      	ldr	r3, [r7, #4]
 801463a:	4618      	mov	r0, r3
 801463c:	3708      	adds	r7, #8
 801463e:	46bd      	mov	sp, r7
 8014640:	bd80      	pop	{r7, pc}

08014642 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014642:	b590      	push	{r4, r7, lr}
 8014644:	b085      	sub	sp, #20
 8014646:	af00      	add	r7, sp, #0
 8014648:	6078      	str	r0, [r7, #4]
 801464a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801464c:	2303      	movs	r3, #3
 801464e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8014650:	6878      	ldr	r0, [r7, #4]
 8014652:	f7ef fa18 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 8014656:	4603      	mov	r3, r0
 8014658:	2b03      	cmp	r3, #3
 801465a:	bf0c      	ite	eq
 801465c:	2301      	moveq	r3, #1
 801465e:	2300      	movne	r3, #0
 8014660:	b2db      	uxtb	r3, r3
 8014662:	2b00      	cmp	r3, #0
 8014664:	d00a      	beq.n	801467c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8014666:	6838      	ldr	r0, [r7, #0]
 8014668:	f000 fb78 	bl	8014d5c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 801466c:	4603      	mov	r3, r0
 801466e:	681c      	ldr	r4, [r3, #0]
 8014670:	6878      	ldr	r0, [r7, #4]
 8014672:	f7ef fb63 	bl	8003d3c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014676:	4603      	mov	r3, r0
 8014678:	601c      	str	r4, [r3, #0]
 801467a:	e007      	b.n	801468c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801467c:	6838      	ldr	r0, [r7, #0]
 801467e:	f000 fb6d 	bl	8014d5c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014682:	4603      	mov	r3, r0
 8014684:	4619      	mov	r1, r3
 8014686:	6878      	ldr	r0, [r7, #4]
 8014688:	f000 fb73 	bl	8014d72 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801468c:	687b      	ldr	r3, [r7, #4]
	}
 801468e:	4618      	mov	r0, r3
 8014690:	3714      	adds	r7, #20
 8014692:	46bd      	mov	sp, r7
 8014694:	bd90      	pop	{r4, r7, pc}

08014696 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8014696:	b590      	push	{r4, r7, lr}
 8014698:	b085      	sub	sp, #20
 801469a:	af00      	add	r7, sp, #0
 801469c:	6078      	str	r0, [r7, #4]
 801469e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80146a0:	2304      	movs	r3, #4
 80146a2:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80146a4:	6878      	ldr	r0, [r7, #4]
 80146a6:	f7ef f9ee 	bl	8003a86 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 80146aa:	4603      	mov	r3, r0
 80146ac:	2b04      	cmp	r3, #4
 80146ae:	bf0c      	ite	eq
 80146b0:	2301      	moveq	r3, #1
 80146b2:	2300      	movne	r3, #0
 80146b4:	b2db      	uxtb	r3, r3
 80146b6:	2b00      	cmp	r3, #0
 80146b8:	d00a      	beq.n	80146d0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80146ba:	6838      	ldr	r0, [r7, #0]
 80146bc:	f000 fb72 	bl	8014da4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80146c0:	4603      	mov	r3, r0
 80146c2:	681c      	ldr	r4, [r3, #0]
 80146c4:	6878      	ldr	r0, [r7, #4]
 80146c6:	f7ef fbbf 	bl	8003e48 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80146ca:	4603      	mov	r3, r0
 80146cc:	601c      	str	r4, [r3, #0]
 80146ce:	e007      	b.n	80146e0 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80146d0:	6838      	ldr	r0, [r7, #0]
 80146d2:	f000 fb67 	bl	8014da4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 80146d6:	4603      	mov	r3, r0
 80146d8:	4619      	mov	r1, r3
 80146da:	6878      	ldr	r0, [r7, #4]
 80146dc:	f000 fb6d 	bl	8014dba <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80146e0:	687b      	ldr	r3, [r7, #4]
	}
 80146e2:	4618      	mov	r0, r3
 80146e4:	3714      	adds	r7, #20
 80146e6:	46bd      	mov	sp, r7
 80146e8:	bd90      	pop	{r4, r7, pc}

080146ea <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 80146ea:	b580      	push	{r7, lr}
 80146ec:	b082      	sub	sp, #8
 80146ee:	af00      	add	r7, sp, #0
 80146f0:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 80146f2:	6878      	ldr	r0, [r7, #4]
 80146f4:	f000 fb7a 	bl	8014dec <_ZNSaIP9StatementEC1Ev>
 80146f8:	687b      	ldr	r3, [r7, #4]
 80146fa:	4618      	mov	r0, r3
 80146fc:	f000 fb82 	bl	8014e04 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 8014700:	687b      	ldr	r3, [r7, #4]
 8014702:	4618      	mov	r0, r3
 8014704:	3708      	adds	r7, #8
 8014706:	46bd      	mov	sp, r7
 8014708:	bd80      	pop	{r7, pc}

0801470a <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801470a:	b580      	push	{r7, lr}
 801470c:	b082      	sub	sp, #8
 801470e:	af00      	add	r7, sp, #0
 8014710:	6078      	str	r0, [r7, #4]
 8014712:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8014714:	6838      	ldr	r0, [r7, #0]
 8014716:	f000 fba7 	bl	8014e68 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>
 801471a:	4603      	mov	r3, r0
 801471c:	4619      	mov	r1, r3
 801471e:	6878      	ldr	r0, [r7, #4]
 8014720:	f000 fbad 	bl	8014e7e <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8014724:	bf00      	nop
 8014726:	3708      	adds	r7, #8
 8014728:	46bd      	mov	sp, r7
 801472a:	bd80      	pop	{r7, pc}

0801472c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 801472c:	b480      	push	{r7}
 801472e:	b083      	sub	sp, #12
 8014730:	af00      	add	r7, sp, #0
 8014732:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8014734:	687b      	ldr	r3, [r7, #4]
    }
 8014736:	4618      	mov	r0, r3
 8014738:	370c      	adds	r7, #12
 801473a:	46bd      	mov	sp, r7
 801473c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014740:	4770      	bx	lr

08014742 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014742:	b580      	push	{r7, lr}
 8014744:	b082      	sub	sp, #8
 8014746:	af00      	add	r7, sp, #0
 8014748:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801474a:	6878      	ldr	r0, [r7, #4]
 801474c:	f7fc fcf0 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014750:	4603      	mov	r3, r0
 8014752:	4618      	mov	r0, r3
 8014754:	f7fb fdaf 	bl	80102b6 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014758:	4603      	mov	r3, r0
	}
 801475a:	4618      	mov	r0, r3
 801475c:	3708      	adds	r7, #8
 801475e:	46bd      	mov	sp, r7
 8014760:	bd80      	pop	{r7, pc}

08014762 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014762:	b5b0      	push	{r4, r5, r7, lr}
 8014764:	b084      	sub	sp, #16
 8014766:	af00      	add	r7, sp, #0
 8014768:	6078      	str	r0, [r7, #4]
 801476a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801476c:	6878      	ldr	r0, [r7, #4]
 801476e:	f000 fbb8 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014772:	4604      	mov	r4, r0
 8014774:	6838      	ldr	r0, [r7, #0]
 8014776:	f7fc fcdb 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801477a:	4603      	mov	r3, r0
 801477c:	4618      	mov	r0, r3
 801477e:	f7ff ffe0 	bl	8014742 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>
 8014782:	4601      	mov	r1, r0
 8014784:	f107 030c 	add.w	r3, r7, #12
 8014788:	461a      	mov	r2, r3
 801478a:	4620      	mov	r0, r4
 801478c:	f000 fbb4 	bl	8014ef8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 8014790:	462b      	mov	r3, r5
      }
 8014792:	4618      	mov	r0, r3
 8014794:	3710      	adds	r7, #16
 8014796:	46bd      	mov	sp, r7
 8014798:	bdb0      	pop	{r4, r5, r7, pc}

0801479a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801479a:	b5b0      	push	{r4, r5, r7, lr}
 801479c:	b082      	sub	sp, #8
 801479e:	af00      	add	r7, sp, #0
 80147a0:	6078      	str	r0, [r7, #4]
 80147a2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80147a4:	6878      	ldr	r0, [r7, #4]
 80147a6:	f000 fb9c 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80147aa:	4604      	mov	r4, r0
 80147ac:	6838      	ldr	r0, [r7, #0]
 80147ae:	f7fc fcbf 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80147b2:	4603      	mov	r3, r0
 80147b4:	4619      	mov	r1, r3
 80147b6:	4620      	mov	r0, r4
 80147b8:	f7ff ffd3 	bl	8014762 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80147bc:	462b      	mov	r3, r5
      }
 80147be:	4618      	mov	r0, r3
 80147c0:	3708      	adds	r7, #8
 80147c2:	46bd      	mov	sp, r7
 80147c4:	bdb0      	pop	{r4, r5, r7, pc}

080147c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80147c6:	b5b0      	push	{r4, r5, r7, lr}
 80147c8:	b082      	sub	sp, #8
 80147ca:	af00      	add	r7, sp, #0
 80147cc:	6078      	str	r0, [r7, #4]
 80147ce:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80147d0:	6878      	ldr	r0, [r7, #4]
 80147d2:	f000 fb86 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80147d6:	4604      	mov	r4, r0
 80147d8:	6838      	ldr	r0, [r7, #0]
 80147da:	f7fc fca9 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80147de:	4603      	mov	r3, r0
 80147e0:	4619      	mov	r1, r3
 80147e2:	4620      	mov	r0, r4
 80147e4:	f7ff ffd9 	bl	801479a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80147e8:	462b      	mov	r3, r5
      }
 80147ea:	4618      	mov	r0, r3
 80147ec:	3708      	adds	r7, #8
 80147ee:	46bd      	mov	sp, r7
 80147f0:	bdb0      	pop	{r4, r5, r7, pc}

080147f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80147f2:	b580      	push	{r7, lr}
 80147f4:	b082      	sub	sp, #8
 80147f6:	af00      	add	r7, sp, #0
 80147f8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80147fa:	6878      	ldr	r0, [r7, #4]
 80147fc:	f7fc fc98 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014800:	4603      	mov	r3, r0
 8014802:	4618      	mov	r0, r3
 8014804:	f7fb fdc0 	bl	8010388 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014808:	4603      	mov	r3, r0
	}
 801480a:	4618      	mov	r0, r3
 801480c:	3708      	adds	r7, #8
 801480e:	46bd      	mov	sp, r7
 8014810:	bd80      	pop	{r7, pc}

08014812 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014812:	b5b0      	push	{r4, r5, r7, lr}
 8014814:	b084      	sub	sp, #16
 8014816:	af00      	add	r7, sp, #0
 8014818:	6078      	str	r0, [r7, #4]
 801481a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801481c:	6878      	ldr	r0, [r7, #4]
 801481e:	f000 fb60 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014822:	4604      	mov	r4, r0
 8014824:	6838      	ldr	r0, [r7, #0]
 8014826:	f7fc fc83 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801482a:	4603      	mov	r3, r0
 801482c:	4618      	mov	r0, r3
 801482e:	f7ff ffe0 	bl	80147f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>
 8014832:	4601      	mov	r1, r0
 8014834:	f107 030c 	add.w	r3, r7, #12
 8014838:	461a      	mov	r2, r3
 801483a:	4620      	mov	r0, r4
 801483c:	f000 fb7a 	bl	8014f34 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 8014840:	462b      	mov	r3, r5
      }
 8014842:	4618      	mov	r0, r3
 8014844:	3710      	adds	r7, #16
 8014846:	46bd      	mov	sp, r7
 8014848:	bdb0      	pop	{r4, r5, r7, pc}

0801484a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801484a:	b5b0      	push	{r4, r5, r7, lr}
 801484c:	b082      	sub	sp, #8
 801484e:	af00      	add	r7, sp, #0
 8014850:	6078      	str	r0, [r7, #4]
 8014852:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014854:	6878      	ldr	r0, [r7, #4]
 8014856:	f000 fb44 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801485a:	4604      	mov	r4, r0
 801485c:	6838      	ldr	r0, [r7, #0]
 801485e:	f7fc fc67 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014862:	4603      	mov	r3, r0
 8014864:	4619      	mov	r1, r3
 8014866:	4620      	mov	r0, r4
 8014868:	f7ff ffd3 	bl	8014812 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 801486c:	462b      	mov	r3, r5
      }
 801486e:	4618      	mov	r0, r3
 8014870:	3708      	adds	r7, #8
 8014872:	46bd      	mov	sp, r7
 8014874:	bdb0      	pop	{r4, r5, r7, pc}

08014876 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014876:	b5b0      	push	{r4, r5, r7, lr}
 8014878:	b082      	sub	sp, #8
 801487a:	af00      	add	r7, sp, #0
 801487c:	6078      	str	r0, [r7, #4]
 801487e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8014880:	6878      	ldr	r0, [r7, #4]
 8014882:	f000 fb2e 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014886:	4604      	mov	r4, r0
 8014888:	6838      	ldr	r0, [r7, #0]
 801488a:	f7fc fc51 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801488e:	4603      	mov	r3, r0
 8014890:	4619      	mov	r1, r3
 8014892:	4620      	mov	r0, r4
 8014894:	f7ff ffd9 	bl	801484a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014898:	462b      	mov	r3, r5
      }
 801489a:	4618      	mov	r0, r3
 801489c:	3708      	adds	r7, #8
 801489e:	46bd      	mov	sp, r7
 80148a0:	bdb0      	pop	{r4, r5, r7, pc}

080148a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80148a2:	b580      	push	{r7, lr}
 80148a4:	b082      	sub	sp, #8
 80148a6:	af00      	add	r7, sp, #0
 80148a8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80148aa:	6878      	ldr	r0, [r7, #4]
 80148ac:	f7fc fc40 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80148b0:	4603      	mov	r3, r0
 80148b2:	4618      	mov	r0, r3
 80148b4:	f7fb fde4 	bl	8010480 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80148b8:	4603      	mov	r3, r0
	}
 80148ba:	4618      	mov	r0, r3
 80148bc:	3708      	adds	r7, #8
 80148be:	46bd      	mov	sp, r7
 80148c0:	bd80      	pop	{r7, pc}

080148c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80148c2:	b5b0      	push	{r4, r5, r7, lr}
 80148c4:	b084      	sub	sp, #16
 80148c6:	af00      	add	r7, sp, #0
 80148c8:	6078      	str	r0, [r7, #4]
 80148ca:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80148cc:	6878      	ldr	r0, [r7, #4]
 80148ce:	f000 fb08 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80148d2:	4604      	mov	r4, r0
 80148d4:	6838      	ldr	r0, [r7, #0]
 80148d6:	f7fc fc2b 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80148da:	4603      	mov	r3, r0
 80148dc:	4618      	mov	r0, r3
 80148de:	f7ff ffe0 	bl	80148a2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>
 80148e2:	4601      	mov	r1, r0
 80148e4:	f107 030c 	add.w	r3, r7, #12
 80148e8:	461a      	mov	r2, r3
 80148ea:	4620      	mov	r0, r4
 80148ec:	f000 fb40 	bl	8014f70 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 80148f0:	462b      	mov	r3, r5
      }
 80148f2:	4618      	mov	r0, r3
 80148f4:	3710      	adds	r7, #16
 80148f6:	46bd      	mov	sp, r7
 80148f8:	bdb0      	pop	{r4, r5, r7, pc}

080148fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80148fa:	b5b0      	push	{r4, r5, r7, lr}
 80148fc:	b082      	sub	sp, #8
 80148fe:	af00      	add	r7, sp, #0
 8014900:	6078      	str	r0, [r7, #4]
 8014902:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8014904:	6878      	ldr	r0, [r7, #4]
 8014906:	f000 faec 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 801490a:	4604      	mov	r4, r0
 801490c:	6838      	ldr	r0, [r7, #0]
 801490e:	f7fc fc0f 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014912:	4603      	mov	r3, r0
 8014914:	4619      	mov	r1, r3
 8014916:	4620      	mov	r0, r4
 8014918:	f7ff ffd3 	bl	80148c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 801491c:	462b      	mov	r3, r5
      }
 801491e:	4618      	mov	r0, r3
 8014920:	3708      	adds	r7, #8
 8014922:	46bd      	mov	sp, r7
 8014924:	bdb0      	pop	{r4, r5, r7, pc}

08014926 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8014926:	b5b0      	push	{r4, r5, r7, lr}
 8014928:	b082      	sub	sp, #8
 801492a:	af00      	add	r7, sp, #0
 801492c:	6078      	str	r0, [r7, #4]
 801492e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8014930:	6878      	ldr	r0, [r7, #4]
 8014932:	f000 fad6 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014936:	4604      	mov	r4, r0
 8014938:	6838      	ldr	r0, [r7, #0]
 801493a:	f7fc fbf9 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801493e:	4603      	mov	r3, r0
 8014940:	4619      	mov	r1, r3
 8014942:	4620      	mov	r0, r4
 8014944:	f7ff ffd9 	bl	80148fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 8014948:	462b      	mov	r3, r5
      }
 801494a:	4618      	mov	r0, r3
 801494c:	3708      	adds	r7, #8
 801494e:	46bd      	mov	sp, r7
 8014950:	bdb0      	pop	{r4, r5, r7, pc}

08014952 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8014952:	b580      	push	{r7, lr}
 8014954:	b082      	sub	sp, #8
 8014956:	af00      	add	r7, sp, #0
 8014958:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801495a:	6878      	ldr	r0, [r7, #4]
 801495c:	f7fc fbe8 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014960:	4603      	mov	r3, r0
 8014962:	4618      	mov	r0, r3
 8014964:	f7fc f9ef 	bl	8010d46 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8014968:	4603      	mov	r3, r0
	}
 801496a:	4618      	mov	r0, r3
 801496c:	3708      	adds	r7, #8
 801496e:	46bd      	mov	sp, r7
 8014970:	bd80      	pop	{r7, pc}

08014972 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8014972:	b5b0      	push	{r4, r5, r7, lr}
 8014974:	b084      	sub	sp, #16
 8014976:	af00      	add	r7, sp, #0
 8014978:	6078      	str	r0, [r7, #4]
 801497a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801497c:	6878      	ldr	r0, [r7, #4]
 801497e:	f000 fab0 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014982:	4604      	mov	r4, r0
 8014984:	6838      	ldr	r0, [r7, #0]
 8014986:	f7fc fbd3 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801498a:	4603      	mov	r3, r0
 801498c:	4618      	mov	r0, r3
 801498e:	f7ff ffe0 	bl	8014952 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>
 8014992:	4601      	mov	r1, r0
 8014994:	f107 030c 	add.w	r3, r7, #12
 8014998:	461a      	mov	r2, r3
 801499a:	4620      	mov	r0, r4
 801499c:	f000 fb06 	bl	8014fac <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 80149a0:	462b      	mov	r3, r5
      }
 80149a2:	4618      	mov	r0, r3
 80149a4:	3710      	adds	r7, #16
 80149a6:	46bd      	mov	sp, r7
 80149a8:	bdb0      	pop	{r4, r5, r7, pc}

080149aa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80149aa:	b5b0      	push	{r4, r5, r7, lr}
 80149ac:	b082      	sub	sp, #8
 80149ae:	af00      	add	r7, sp, #0
 80149b0:	6078      	str	r0, [r7, #4]
 80149b2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80149b4:	6878      	ldr	r0, [r7, #4]
 80149b6:	f000 fa94 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80149ba:	4604      	mov	r4, r0
 80149bc:	6838      	ldr	r0, [r7, #0]
 80149be:	f7fc fbb7 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80149c2:	4603      	mov	r3, r0
 80149c4:	4619      	mov	r1, r3
 80149c6:	4620      	mov	r0, r4
 80149c8:	f7ff ffd3 	bl	8014972 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80149cc:	462b      	mov	r3, r5
      }
 80149ce:	4618      	mov	r0, r3
 80149d0:	3708      	adds	r7, #8
 80149d2:	46bd      	mov	sp, r7
 80149d4:	bdb0      	pop	{r4, r5, r7, pc}

080149d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80149d6:	b5b0      	push	{r4, r5, r7, lr}
 80149d8:	b082      	sub	sp, #8
 80149da:	af00      	add	r7, sp, #0
 80149dc:	6078      	str	r0, [r7, #4]
 80149de:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80149e0:	6878      	ldr	r0, [r7, #4]
 80149e2:	f000 fa7e 	bl	8014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80149e6:	4604      	mov	r4, r0
 80149e8:	6838      	ldr	r0, [r7, #0]
 80149ea:	f7fc fba1 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80149ee:	4603      	mov	r3, r0
 80149f0:	4619      	mov	r1, r3
 80149f2:	4620      	mov	r0, r4
 80149f4:	f7ff ffd9 	bl	80149aa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 80149f8:	462b      	mov	r3, r5
      }
 80149fa:	4618      	mov	r0, r3
 80149fc:	3708      	adds	r7, #8
 80149fe:	46bd      	mov	sp, r7
 8014a00:	bdb0      	pop	{r4, r5, r7, pc}

08014a02 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8014a02:	b580      	push	{r7, lr}
 8014a04:	b082      	sub	sp, #8
 8014a06:	af00      	add	r7, sp, #0
 8014a08:	6078      	str	r0, [r7, #4]
 8014a0a:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 8014a0c:	683b      	ldr	r3, [r7, #0]
 8014a0e:	009b      	lsls	r3, r3, #2
 8014a10:	687a      	ldr	r2, [r7, #4]
 8014a12:	4413      	add	r3, r2
 8014a14:	4618      	mov	r0, r3
 8014a16:	f000 fae7 	bl	8014fe8 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 8014a1a:	4603      	mov	r3, r0
	}
 8014a1c:	4618      	mov	r0, r3
 8014a1e:	3708      	adds	r7, #8
 8014a20:	46bd      	mov	sp, r7
 8014a22:	bd80      	pop	{r7, pc}

08014a24 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8014a24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014a26:	b085      	sub	sp, #20
 8014a28:	af00      	add	r7, sp, #0
 8014a2a:	6078      	str	r0, [r7, #4]
 8014a2c:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8014a2e:	4b0f      	ldr	r3, [pc, #60]	; (8014a6c <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 8014a30:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8014a32:	6838      	ldr	r0, [r7, #0]
 8014a34:	f7fb fa5c 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8014a38:	4603      	mov	r3, r0
 8014a3a:	4619      	mov	r1, r3
 8014a3c:	68f8      	ldr	r0, [r7, #12]
 8014a3e:	f7ff ffe0 	bl	8014a02 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>
 8014a42:	4603      	mov	r3, r0
 8014a44:	681b      	ldr	r3, [r3, #0]
 8014a46:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8014a48:	68bc      	ldr	r4, [r7, #8]
 8014a4a:	6878      	ldr	r0, [r7, #4]
 8014a4c:	f000 fad7 	bl	8014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014a50:	4605      	mov	r5, r0
 8014a52:	6838      	ldr	r0, [r7, #0]
 8014a54:	f7fc fb6c 	bl	8011130 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8014a58:	4603      	mov	r3, r0
 8014a5a:	4619      	mov	r1, r3
 8014a5c:	4628      	mov	r0, r5
 8014a5e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8014a60:	4633      	mov	r3, r6
    }
 8014a62:	4618      	mov	r0, r3
 8014a64:	3714      	adds	r7, #20
 8014a66:	46bd      	mov	sp, r7
 8014a68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014a6a:	bf00      	nop
 8014a6c:	0802a04c 	.word	0x0802a04c

08014a70 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
      operator=(_Move_assign_base&& __rhs)
 8014a70:	b580      	push	{r7, lr}
 8014a72:	b084      	sub	sp, #16
 8014a74:	af00      	add	r7, sp, #0
 8014a76:	6078      	str	r0, [r7, #4]
 8014a78:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8014a7a:	687b      	ldr	r3, [r7, #4]
 8014a7c:	60fb      	str	r3, [r7, #12]
 8014a7e:	6838      	ldr	r0, [r7, #0]
 8014a80:	f7ff fe54 	bl	801472c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8014a84:	4602      	mov	r2, r0
 8014a86:	f107 030c 	add.w	r3, r7, #12
 8014a8a:	4611      	mov	r1, r2
 8014a8c:	4618      	mov	r0, r3
 8014a8e:	f7ff ffc9 	bl	8014a24 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
	return *this;
 8014a92:	687b      	ldr	r3, [r7, #4]
      }
 8014a94:	4618      	mov	r0, r3
 8014a96:	3710      	adds	r7, #16
 8014a98:	46bd      	mov	sp, r7
 8014a9a:	bd80      	pop	{r7, pc}

08014a9c <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014a9c:	b480      	push	{r7}
 8014a9e:	b083      	sub	sp, #12
 8014aa0:	af00      	add	r7, sp, #0
 8014aa2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014aa4:	687b      	ldr	r3, [r7, #4]
 8014aa6:	4618      	mov	r0, r3
 8014aa8:	370c      	adds	r7, #12
 8014aaa:	46bd      	mov	sp, r7
 8014aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ab0:	4770      	bx	lr

08014ab2 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014ab2:	b5b0      	push	{r4, r5, r7, lr}
 8014ab4:	b082      	sub	sp, #8
 8014ab6:	af00      	add	r7, sp, #0
 8014ab8:	6078      	str	r0, [r7, #4]
 8014aba:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014abc:	687b      	ldr	r3, [r7, #4]
 8014abe:	685a      	ldr	r2, [r3, #4]
 8014ac0:	687b      	ldr	r3, [r7, #4]
 8014ac2:	689b      	ldr	r3, [r3, #8]
 8014ac4:	429a      	cmp	r2, r3
 8014ac6:	d011      	beq.n	8014aec <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014ac8:	687c      	ldr	r4, [r7, #4]
 8014aca:	687b      	ldr	r3, [r7, #4]
 8014acc:	685d      	ldr	r5, [r3, #4]
 8014ace:	6838      	ldr	r0, [r7, #0]
 8014ad0:	f000 faa0 	bl	8015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ad4:	4603      	mov	r3, r0
 8014ad6:	461a      	mov	r2, r3
 8014ad8:	4629      	mov	r1, r5
 8014ada:	4620      	mov	r0, r4
 8014adc:	f000 faa5 	bl	801502a <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014ae0:	687b      	ldr	r3, [r7, #4]
 8014ae2:	685b      	ldr	r3, [r3, #4]
 8014ae4:	1d1a      	adds	r2, r3, #4
 8014ae6:	687b      	ldr	r3, [r7, #4]
 8014ae8:	605a      	str	r2, [r3, #4]
 8014aea:	e00c      	b.n	8014b06 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014aec:	6878      	ldr	r0, [r7, #4]
 8014aee:	f000 faaf 	bl	8015050 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8014af2:	4604      	mov	r4, r0
 8014af4:	6838      	ldr	r0, [r7, #0]
 8014af6:	f000 fa8d 	bl	8015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014afa:	4603      	mov	r3, r0
 8014afc:	461a      	mov	r2, r3
 8014afe:	4621      	mov	r1, r4
 8014b00:	6878      	ldr	r0, [r7, #4]
 8014b02:	f000 fab7 	bl	8015074 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014b06:	6878      	ldr	r0, [r7, #4]
 8014b08:	f000 fb30 	bl	801516c <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>
 8014b0c:	4603      	mov	r3, r0
      }
 8014b0e:	4618      	mov	r0, r3
 8014b10:	3708      	adds	r7, #8
 8014b12:	46bd      	mov	sp, r7
 8014b14:	bdb0      	pop	{r4, r5, r7, pc}

08014b16 <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014b16:	b480      	push	{r7}
 8014b18:	b083      	sub	sp, #12
 8014b1a:	af00      	add	r7, sp, #0
 8014b1c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014b1e:	687b      	ldr	r3, [r7, #4]
 8014b20:	4618      	mov	r0, r3
 8014b22:	370c      	adds	r7, #12
 8014b24:	46bd      	mov	sp, r7
 8014b26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014b2a:	4770      	bx	lr

08014b2c <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014b2c:	b5b0      	push	{r4, r5, r7, lr}
 8014b2e:	b082      	sub	sp, #8
 8014b30:	af00      	add	r7, sp, #0
 8014b32:	6078      	str	r0, [r7, #4]
 8014b34:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014b36:	687b      	ldr	r3, [r7, #4]
 8014b38:	685a      	ldr	r2, [r3, #4]
 8014b3a:	687b      	ldr	r3, [r7, #4]
 8014b3c:	689b      	ldr	r3, [r3, #8]
 8014b3e:	429a      	cmp	r2, r3
 8014b40:	d011      	beq.n	8014b66 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014b42:	687c      	ldr	r4, [r7, #4]
 8014b44:	687b      	ldr	r3, [r7, #4]
 8014b46:	685d      	ldr	r5, [r3, #4]
 8014b48:	6838      	ldr	r0, [r7, #0]
 8014b4a:	f000 fb2a 	bl	80151a2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b4e:	4603      	mov	r3, r0
 8014b50:	461a      	mov	r2, r3
 8014b52:	4629      	mov	r1, r5
 8014b54:	4620      	mov	r0, r4
 8014b56:	f000 fb2f 	bl	80151b8 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014b5a:	687b      	ldr	r3, [r7, #4]
 8014b5c:	685b      	ldr	r3, [r3, #4]
 8014b5e:	1d1a      	adds	r2, r3, #4
 8014b60:	687b      	ldr	r3, [r7, #4]
 8014b62:	605a      	str	r2, [r3, #4]
 8014b64:	e00c      	b.n	8014b80 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014b66:	6878      	ldr	r0, [r7, #4]
 8014b68:	f7ef f98a 	bl	8003e80 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 8014b6c:	4604      	mov	r4, r0
 8014b6e:	6838      	ldr	r0, [r7, #0]
 8014b70:	f000 fb17 	bl	80151a2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b74:	4603      	mov	r3, r0
 8014b76:	461a      	mov	r2, r3
 8014b78:	4621      	mov	r1, r4
 8014b7a:	6878      	ldr	r0, [r7, #4]
 8014b7c:	f000 fb30 	bl	80151e0 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014b80:	6878      	ldr	r0, [r7, #4]
 8014b82:	f7ed fe54 	bl	800282e <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 8014b86:	4603      	mov	r3, r0
      }
 8014b88:	4618      	mov	r0, r3
 8014b8a:	3708      	adds	r7, #8
 8014b8c:	46bd      	mov	sp, r7
 8014b8e:	bdb0      	pop	{r4, r5, r7, pc}

08014b90 <_ZNSaIP10ExpressionEC1Ev>:
 8014b90:	b580      	push	{r7, lr}
 8014b92:	b082      	sub	sp, #8
 8014b94:	af00      	add	r7, sp, #0
 8014b96:	6078      	str	r0, [r7, #4]
 8014b98:	6878      	ldr	r0, [r7, #4]
 8014b9a:	f000 fb9d 	bl	80152d8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>
 8014b9e:	687b      	ldr	r3, [r7, #4]
 8014ba0:	4618      	mov	r0, r3
 8014ba2:	3708      	adds	r7, #8
 8014ba4:	46bd      	mov	sp, r7
 8014ba6:	bd80      	pop	{r7, pc}

08014ba8 <_ZNSaIP4BodyEC1Ev>:
 8014ba8:	b580      	push	{r7, lr}
 8014baa:	b082      	sub	sp, #8
 8014bac:	af00      	add	r7, sp, #0
 8014bae:	6078      	str	r0, [r7, #4]
 8014bb0:	6878      	ldr	r0, [r7, #4]
 8014bb2:	f000 fb9c 	bl	80152ee <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>
 8014bb6:	687b      	ldr	r3, [r7, #4]
 8014bb8:	4618      	mov	r0, r3
 8014bba:	3708      	adds	r7, #8
 8014bbc:	46bd      	mov	sp, r7
 8014bbe:	bd80      	pop	{r7, pc}

08014bc0 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8014bc0:	b480      	push	{r7}
 8014bc2:	b083      	sub	sp, #12
 8014bc4:	af00      	add	r7, sp, #0
 8014bc6:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8014bc8:	687b      	ldr	r3, [r7, #4]
 8014bca:	2200      	movs	r2, #0
 8014bcc:	601a      	str	r2, [r3, #0]
 8014bce:	687b      	ldr	r3, [r7, #4]
 8014bd0:	2200      	movs	r2, #0
 8014bd2:	605a      	str	r2, [r3, #4]
 8014bd4:	687b      	ldr	r3, [r7, #4]
 8014bd6:	2200      	movs	r2, #0
 8014bd8:	609a      	str	r2, [r3, #8]
	{ }
 8014bda:	687b      	ldr	r3, [r7, #4]
 8014bdc:	4618      	mov	r0, r3
 8014bde:	370c      	adds	r7, #12
 8014be0:	46bd      	mov	sp, r7
 8014be2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014be6:	4770      	bx	lr

08014be8 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8014be8:	b580      	push	{r7, lr}
 8014bea:	b084      	sub	sp, #16
 8014bec:	af00      	add	r7, sp, #0
 8014bee:	60f8      	str	r0, [r7, #12]
 8014bf0:	60b9      	str	r1, [r7, #8]
 8014bf2:	607a      	str	r2, [r7, #4]
	if (__p)
 8014bf4:	68bb      	ldr	r3, [r7, #8]
 8014bf6:	2b00      	cmp	r3, #0
 8014bf8:	d005      	beq.n	8014c06 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8014bfa:	68fb      	ldr	r3, [r7, #12]
 8014bfc:	687a      	ldr	r2, [r7, #4]
 8014bfe:	68b9      	ldr	r1, [r7, #8]
 8014c00:	4618      	mov	r0, r3
 8014c02:	f000 fb7f 	bl	8015304 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>
      }
 8014c06:	bf00      	nop
 8014c08:	3710      	adds	r7, #16
 8014c0a:	46bd      	mov	sp, r7
 8014c0c:	bd80      	pop	{r7, pc}

08014c0e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8014c0e:	b480      	push	{r7}
 8014c10:	b083      	sub	sp, #12
 8014c12:	af00      	add	r7, sp, #0
 8014c14:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8014c16:	687b      	ldr	r3, [r7, #4]
 8014c18:	4618      	mov	r0, r3
 8014c1a:	370c      	adds	r7, #12
 8014c1c:	46bd      	mov	sp, r7
 8014c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c22:	4770      	bx	lr

08014c24 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014c24:	b480      	push	{r7}
 8014c26:	b083      	sub	sp, #12
 8014c28:	af00      	add	r7, sp, #0
 8014c2a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014c2c:	687b      	ldr	r3, [r7, #4]
 8014c2e:	4618      	mov	r0, r3
 8014c30:	370c      	adds	r7, #12
 8014c32:	46bd      	mov	sp, r7
 8014c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c38:	4770      	bx	lr

08014c3a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014c3a:	b580      	push	{r7, lr}
 8014c3c:	b082      	sub	sp, #8
 8014c3e:	af00      	add	r7, sp, #0
 8014c40:	6078      	str	r0, [r7, #4]
 8014c42:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014c44:	687b      	ldr	r3, [r7, #4]
 8014c46:	4618      	mov	r0, r3
 8014c48:	f000 fb6b 	bl	8015322 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014c4c:	6838      	ldr	r0, [r7, #0]
 8014c4e:	f7ff ffe9 	bl	8014c24 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014c52:	4603      	mov	r3, r0
 8014c54:	4619      	mov	r1, r3
 8014c56:	6878      	ldr	r0, [r7, #4]
 8014c58:	f000 fb70 	bl	801533c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014c5c:	6878      	ldr	r0, [r7, #4]
 8014c5e:	f7ee ff97 	bl	8003b90 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014c62:	4603      	mov	r3, r0
	}
 8014c64:	4618      	mov	r0, r3
 8014c66:	3708      	adds	r7, #8
 8014c68:	46bd      	mov	sp, r7
 8014c6a:	bd80      	pop	{r7, pc}

08014c6c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014c6c:	b480      	push	{r7}
 8014c6e:	b083      	sub	sp, #12
 8014c70:	af00      	add	r7, sp, #0
 8014c72:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014c74:	687b      	ldr	r3, [r7, #4]
 8014c76:	4618      	mov	r0, r3
 8014c78:	370c      	adds	r7, #12
 8014c7a:	46bd      	mov	sp, r7
 8014c7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c80:	4770      	bx	lr

08014c82 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014c82:	b580      	push	{r7, lr}
 8014c84:	b082      	sub	sp, #8
 8014c86:	af00      	add	r7, sp, #0
 8014c88:	6078      	str	r0, [r7, #4]
 8014c8a:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014c8c:	687b      	ldr	r3, [r7, #4]
 8014c8e:	4618      	mov	r0, r3
 8014c90:	f000 fb47 	bl	8015322 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014c94:	6838      	ldr	r0, [r7, #0]
 8014c96:	f7ff ffe9 	bl	8014c6c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8014c9a:	4603      	mov	r3, r0
 8014c9c:	4619      	mov	r1, r3
 8014c9e:	6878      	ldr	r0, [r7, #4]
 8014ca0:	f000 fb6b 	bl	801537a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014ca4:	6878      	ldr	r0, [r7, #4]
 8014ca6:	f7ee ff23 	bl	8003af0 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014caa:	4603      	mov	r3, r0
	}
 8014cac:	4618      	mov	r0, r3
 8014cae:	3708      	adds	r7, #8
 8014cb0:	46bd      	mov	sp, r7
 8014cb2:	bd80      	pop	{r7, pc}

08014cb4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014cb4:	b480      	push	{r7}
 8014cb6:	b083      	sub	sp, #12
 8014cb8:	af00      	add	r7, sp, #0
 8014cba:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014cbc:	687b      	ldr	r3, [r7, #4]
 8014cbe:	4618      	mov	r0, r3
 8014cc0:	370c      	adds	r7, #12
 8014cc2:	46bd      	mov	sp, r7
 8014cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014cc8:	4770      	bx	lr

08014cca <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014cca:	b580      	push	{r7, lr}
 8014ccc:	b082      	sub	sp, #8
 8014cce:	af00      	add	r7, sp, #0
 8014cd0:	6078      	str	r0, [r7, #4]
 8014cd2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014cd4:	687b      	ldr	r3, [r7, #4]
 8014cd6:	4618      	mov	r0, r3
 8014cd8:	f000 fb23 	bl	8015322 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014cdc:	6838      	ldr	r0, [r7, #0]
 8014cde:	f7ff ffe9 	bl	8014cb4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ce2:	4603      	mov	r3, r0
 8014ce4:	4619      	mov	r1, r3
 8014ce6:	6878      	ldr	r0, [r7, #4]
 8014ce8:	f000 fb66 	bl	80153b8 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014cec:	6878      	ldr	r0, [r7, #4]
 8014cee:	f7ee ffb1 	bl	8003c54 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014cf2:	4603      	mov	r3, r0
	}
 8014cf4:	4618      	mov	r0, r3
 8014cf6:	3708      	adds	r7, #8
 8014cf8:	46bd      	mov	sp, r7
 8014cfa:	bd80      	pop	{r7, pc}

08014cfc <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8014cfc:	b480      	push	{r7}
 8014cfe:	b083      	sub	sp, #12
 8014d00:	af00      	add	r7, sp, #0
 8014d02:	6078      	str	r0, [r7, #4]
 8014d04:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 8014d06:	687b      	ldr	r3, [r7, #4]
 8014d08:	2200      	movs	r2, #0
 8014d0a:	601a      	str	r2, [r3, #0]
	{ }
 8014d0c:	687b      	ldr	r3, [r7, #4]
 8014d0e:	4618      	mov	r0, r3
 8014d10:	370c      	adds	r7, #12
 8014d12:	46bd      	mov	sp, r7
 8014d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d18:	4770      	bx	lr

08014d1a <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8014d1a:	b580      	push	{r7, lr}
 8014d1c:	b082      	sub	sp, #8
 8014d1e:	af00      	add	r7, sp, #0
 8014d20:	6078      	str	r0, [r7, #4]
 8014d22:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8014d24:	687b      	ldr	r3, [r7, #4]
 8014d26:	4611      	mov	r1, r2
 8014d28:	4618      	mov	r0, r3
 8014d2a:	f7ff ffe7 	bl	8014cfc <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8014d2e:	687b      	ldr	r3, [r7, #4]
 8014d30:	4618      	mov	r0, r3
 8014d32:	3708      	adds	r7, #8
 8014d34:	46bd      	mov	sp, r7
 8014d36:	bd80      	pop	{r7, pc}

08014d38 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8014d38:	b580      	push	{r7, lr}
 8014d3a:	b082      	sub	sp, #8
 8014d3c:	af00      	add	r7, sp, #0
 8014d3e:	6078      	str	r0, [r7, #4]
 8014d40:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8014d42:	687b      	ldr	r3, [r7, #4]
 8014d44:	4611      	mov	r1, r2
 8014d46:	4618      	mov	r0, r3
 8014d48:	f7ff ffe7 	bl	8014d1a <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 8014d4c:	687b      	ldr	r3, [r7, #4]
 8014d4e:	2200      	movs	r2, #0
 8014d50:	711a      	strb	r2, [r3, #4]
	{ }
 8014d52:	687b      	ldr	r3, [r7, #4]
 8014d54:	4618      	mov	r0, r3
 8014d56:	3708      	adds	r7, #8
 8014d58:	46bd      	mov	sp, r7
 8014d5a:	bd80      	pop	{r7, pc}

08014d5c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014d5c:	b480      	push	{r7}
 8014d5e:	b083      	sub	sp, #12
 8014d60:	af00      	add	r7, sp, #0
 8014d62:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014d64:	687b      	ldr	r3, [r7, #4]
 8014d66:	4618      	mov	r0, r3
 8014d68:	370c      	adds	r7, #12
 8014d6a:	46bd      	mov	sp, r7
 8014d6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d70:	4770      	bx	lr

08014d72 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014d72:	b580      	push	{r7, lr}
 8014d74:	b082      	sub	sp, #8
 8014d76:	af00      	add	r7, sp, #0
 8014d78:	6078      	str	r0, [r7, #4]
 8014d7a:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014d7c:	687b      	ldr	r3, [r7, #4]
 8014d7e:	4618      	mov	r0, r3
 8014d80:	f000 facf 	bl	8015322 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014d84:	6838      	ldr	r0, [r7, #0]
 8014d86:	f7ff ffe9 	bl	8014d5c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014d8a:	4603      	mov	r3, r0
 8014d8c:	4619      	mov	r1, r3
 8014d8e:	6878      	ldr	r0, [r7, #4]
 8014d90:	f000 fb31 	bl	80153f6 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014d94:	6878      	ldr	r0, [r7, #4]
 8014d96:	f7ee ffd1 	bl	8003d3c <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014d9a:	4603      	mov	r3, r0
	}
 8014d9c:	4618      	mov	r0, r3
 8014d9e:	3708      	adds	r7, #8
 8014da0:	46bd      	mov	sp, r7
 8014da2:	bd80      	pop	{r7, pc}

08014da4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014da4:	b480      	push	{r7}
 8014da6:	b083      	sub	sp, #12
 8014da8:	af00      	add	r7, sp, #0
 8014daa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014dac:	687b      	ldr	r3, [r7, #4]
 8014dae:	4618      	mov	r0, r3
 8014db0:	370c      	adds	r7, #12
 8014db2:	46bd      	mov	sp, r7
 8014db4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014db8:	4770      	bx	lr

08014dba <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8014dba:	b580      	push	{r7, lr}
 8014dbc:	b082      	sub	sp, #8
 8014dbe:	af00      	add	r7, sp, #0
 8014dc0:	6078      	str	r0, [r7, #4]
 8014dc2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8014dc4:	687b      	ldr	r3, [r7, #4]
 8014dc6:	4618      	mov	r0, r3
 8014dc8:	f000 faab 	bl	8015322 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8014dcc:	6838      	ldr	r0, [r7, #0]
 8014dce:	f7ff ffe9 	bl	8014da4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014dd2:	4603      	mov	r3, r0
 8014dd4:	4619      	mov	r1, r3
 8014dd6:	6878      	ldr	r0, [r7, #4]
 8014dd8:	f000 fb2c 	bl	8015434 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8014ddc:	6878      	ldr	r0, [r7, #4]
 8014dde:	f7ef f833 	bl	8003e48 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8014de2:	4603      	mov	r3, r0
	}
 8014de4:	4618      	mov	r0, r3
 8014de6:	3708      	adds	r7, #8
 8014de8:	46bd      	mov	sp, r7
 8014dea:	bd80      	pop	{r7, pc}

08014dec <_ZNSaIP9StatementEC1Ev>:
 8014dec:	b580      	push	{r7, lr}
 8014dee:	b082      	sub	sp, #8
 8014df0:	af00      	add	r7, sp, #0
 8014df2:	6078      	str	r0, [r7, #4]
 8014df4:	6878      	ldr	r0, [r7, #4]
 8014df6:	f000 fb3c 	bl	8015472 <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>
 8014dfa:	687b      	ldr	r3, [r7, #4]
 8014dfc:	4618      	mov	r0, r3
 8014dfe:	3708      	adds	r7, #8
 8014e00:	46bd      	mov	sp, r7
 8014e02:	bd80      	pop	{r7, pc}

08014e04 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8014e04:	b480      	push	{r7}
 8014e06:	b083      	sub	sp, #12
 8014e08:	af00      	add	r7, sp, #0
 8014e0a:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8014e0c:	687b      	ldr	r3, [r7, #4]
 8014e0e:	2200      	movs	r2, #0
 8014e10:	601a      	str	r2, [r3, #0]
 8014e12:	687b      	ldr	r3, [r7, #4]
 8014e14:	2200      	movs	r2, #0
 8014e16:	605a      	str	r2, [r3, #4]
 8014e18:	687b      	ldr	r3, [r7, #4]
 8014e1a:	2200      	movs	r2, #0
 8014e1c:	609a      	str	r2, [r3, #8]
	{ }
 8014e1e:	687b      	ldr	r3, [r7, #4]
 8014e20:	4618      	mov	r0, r3
 8014e22:	370c      	adds	r7, #12
 8014e24:	46bd      	mov	sp, r7
 8014e26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e2a:	4770      	bx	lr

08014e2c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8014e2c:	b580      	push	{r7, lr}
 8014e2e:	b084      	sub	sp, #16
 8014e30:	af00      	add	r7, sp, #0
 8014e32:	60f8      	str	r0, [r7, #12]
 8014e34:	60b9      	str	r1, [r7, #8]
 8014e36:	607a      	str	r2, [r7, #4]
	if (__p)
 8014e38:	68bb      	ldr	r3, [r7, #8]
 8014e3a:	2b00      	cmp	r3, #0
 8014e3c:	d005      	beq.n	8014e4a <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8014e3e:	68fb      	ldr	r3, [r7, #12]
 8014e40:	687a      	ldr	r2, [r7, #4]
 8014e42:	68b9      	ldr	r1, [r7, #8]
 8014e44:	4618      	mov	r0, r3
 8014e46:	f000 fb1f 	bl	8015488 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>
      }
 8014e4a:	bf00      	nop
 8014e4c:	3710      	adds	r7, #16
 8014e4e:	46bd      	mov	sp, r7
 8014e50:	bd80      	pop	{r7, pc}

08014e52 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8014e52:	b480      	push	{r7}
 8014e54:	b083      	sub	sp, #12
 8014e56:	af00      	add	r7, sp, #0
 8014e58:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8014e5a:	687b      	ldr	r3, [r7, #4]
 8014e5c:	4618      	mov	r0, r3
 8014e5e:	370c      	adds	r7, #12
 8014e60:	46bd      	mov	sp, r7
 8014e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e66:	4770      	bx	lr

08014e68 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014e68:	b480      	push	{r7}
 8014e6a:	b083      	sub	sp, #12
 8014e6c:	af00      	add	r7, sp, #0
 8014e6e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8014e70:	687b      	ldr	r3, [r7, #4]
 8014e72:	4618      	mov	r0, r3
 8014e74:	370c      	adds	r7, #12
 8014e76:	46bd      	mov	sp, r7
 8014e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e7c:	4770      	bx	lr

08014e7e <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014e7e:	b5b0      	push	{r4, r5, r7, lr}
 8014e80:	b082      	sub	sp, #8
 8014e82:	af00      	add	r7, sp, #0
 8014e84:	6078      	str	r0, [r7, #4]
 8014e86:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8014e88:	687b      	ldr	r3, [r7, #4]
 8014e8a:	685a      	ldr	r2, [r3, #4]
 8014e8c:	687b      	ldr	r3, [r7, #4]
 8014e8e:	689b      	ldr	r3, [r3, #8]
 8014e90:	429a      	cmp	r2, r3
 8014e92:	d011      	beq.n	8014eb8 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8014e94:	687c      	ldr	r4, [r7, #4]
 8014e96:	687b      	ldr	r3, [r7, #4]
 8014e98:	685d      	ldr	r5, [r3, #4]
 8014e9a:	6838      	ldr	r0, [r7, #0]
 8014e9c:	f000 fb03 	bl	80154a6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ea0:	4603      	mov	r3, r0
 8014ea2:	461a      	mov	r2, r3
 8014ea4:	4629      	mov	r1, r5
 8014ea6:	4620      	mov	r0, r4
 8014ea8:	f000 fb08 	bl	80154bc <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8014eac:	687b      	ldr	r3, [r7, #4]
 8014eae:	685b      	ldr	r3, [r3, #4]
 8014eb0:	1d1a      	adds	r2, r3, #4
 8014eb2:	687b      	ldr	r3, [r7, #4]
 8014eb4:	605a      	str	r2, [r3, #4]
 8014eb6:	e00c      	b.n	8014ed2 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014eb8:	6878      	ldr	r0, [r7, #4]
 8014eba:	f7ed fbf7 	bl	80026ac <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 8014ebe:	4604      	mov	r4, r0
 8014ec0:	6838      	ldr	r0, [r7, #0]
 8014ec2:	f000 faf0 	bl	80154a6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8014ec6:	4603      	mov	r3, r0
 8014ec8:	461a      	mov	r2, r3
 8014eca:	4621      	mov	r1, r4
 8014ecc:	6878      	ldr	r0, [r7, #4]
 8014ece:	f000 fb09 	bl	80154e4 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014ed2:	6878      	ldr	r0, [r7, #4]
 8014ed4:	f000 fb82 	bl	80155dc <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>
 8014ed8:	4603      	mov	r3, r0
      }
 8014eda:	4618      	mov	r0, r3
 8014edc:	3708      	adds	r7, #8
 8014ede:	46bd      	mov	sp, r7
 8014ee0:	bdb0      	pop	{r4, r5, r7, pc}

08014ee2 <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014ee2:	b480      	push	{r7}
 8014ee4:	b083      	sub	sp, #12
 8014ee6:	af00      	add	r7, sp, #0
 8014ee8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014eea:	687b      	ldr	r3, [r7, #4]
 8014eec:	4618      	mov	r0, r3
 8014eee:	370c      	adds	r7, #12
 8014ef0:	46bd      	mov	sp, r7
 8014ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ef6:	4770      	bx	lr

08014ef8 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014ef8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014efc:	b084      	sub	sp, #16
 8014efe:	af00      	add	r7, sp, #0
 8014f00:	60f8      	str	r0, [r7, #12]
 8014f02:	60b9      	str	r1, [r7, #8]
 8014f04:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014f06:	68f8      	ldr	r0, [r7, #12]
 8014f08:	f000 f879 	bl	8014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014f0c:	4604      	mov	r4, r0
 8014f0e:	68b8      	ldr	r0, [r7, #8]
 8014f10:	f7ef ff1c 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8014f14:	4605      	mov	r5, r0
 8014f16:	6878      	ldr	r0, [r7, #4]
 8014f18:	f7ef fe7b 	bl	8004c12 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f1c:	4603      	mov	r3, r0
 8014f1e:	462a      	mov	r2, r5
 8014f20:	4621      	mov	r1, r4
 8014f22:	4630      	mov	r0, r6
 8014f24:	f000 fb75 	bl	8015612 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014f28:	4643      	mov	r3, r8
    }
 8014f2a:	4618      	mov	r0, r3
 8014f2c:	3710      	adds	r7, #16
 8014f2e:	46bd      	mov	sp, r7
 8014f30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014f34 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014f34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014f38:	b084      	sub	sp, #16
 8014f3a:	af00      	add	r7, sp, #0
 8014f3c:	60f8      	str	r0, [r7, #12]
 8014f3e:	60b9      	str	r1, [r7, #8]
 8014f40:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014f42:	68f8      	ldr	r0, [r7, #12]
 8014f44:	f000 f85b 	bl	8014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014f48:	4604      	mov	r4, r0
 8014f4a:	68b8      	ldr	r0, [r7, #8]
 8014f4c:	f7ef fe56 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8014f50:	4605      	mov	r5, r0
 8014f52:	6878      	ldr	r0, [r7, #4]
 8014f54:	f7ef fe91 	bl	8004c7a <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f58:	4603      	mov	r3, r0
 8014f5a:	462a      	mov	r2, r5
 8014f5c:	4621      	mov	r1, r4
 8014f5e:	4630      	mov	r0, r6
 8014f60:	f000 fb75 	bl	801564e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014f64:	4643      	mov	r3, r8
    }
 8014f66:	4618      	mov	r0, r3
 8014f68:	3710      	adds	r7, #16
 8014f6a:	46bd      	mov	sp, r7
 8014f6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014f70 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014f70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014f74:	b084      	sub	sp, #16
 8014f76:	af00      	add	r7, sp, #0
 8014f78:	60f8      	str	r0, [r7, #12]
 8014f7a:	60b9      	str	r1, [r7, #8]
 8014f7c:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014f7e:	68f8      	ldr	r0, [r7, #12]
 8014f80:	f000 f83d 	bl	8014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014f84:	4604      	mov	r4, r0
 8014f86:	68b8      	ldr	r0, [r7, #8]
 8014f88:	f7ef fe6c 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8014f8c:	4605      	mov	r5, r0
 8014f8e:	6878      	ldr	r0, [r7, #4]
 8014f90:	f7ef fea7 	bl	8004ce2 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014f94:	4603      	mov	r3, r0
 8014f96:	462a      	mov	r2, r5
 8014f98:	4621      	mov	r1, r4
 8014f9a:	4630      	mov	r0, r6
 8014f9c:	f000 fb75 	bl	801568a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014fa0:	4643      	mov	r3, r8
    }
 8014fa2:	4618      	mov	r0, r3
 8014fa4:	3710      	adds	r7, #16
 8014fa6:	46bd      	mov	sp, r7
 8014fa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014fac <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8014fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014fb0:	b084      	sub	sp, #16
 8014fb2:	af00      	add	r7, sp, #0
 8014fb4:	60f8      	str	r0, [r7, #12]
 8014fb6:	60b9      	str	r1, [r7, #8]
 8014fb8:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8014fba:	68f8      	ldr	r0, [r7, #12]
 8014fbc:	f000 f81f 	bl	8014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8014fc0:	4604      	mov	r4, r0
 8014fc2:	68b8      	ldr	r0, [r7, #8]
 8014fc4:	f7ef fe82 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8014fc8:	4605      	mov	r5, r0
 8014fca:	6878      	ldr	r0, [r7, #4]
 8014fcc:	f7ef fec9 	bl	8004d62 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8014fd0:	4603      	mov	r3, r0
 8014fd2:	462a      	mov	r2, r5
 8014fd4:	4621      	mov	r1, r4
 8014fd6:	4630      	mov	r0, r6
 8014fd8:	f000 fb75 	bl	80156c6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 8014fdc:	4643      	mov	r3, r8
    }
 8014fde:	4618      	mov	r0, r3
 8014fe0:	3710      	adds	r7, #16
 8014fe2:	46bd      	mov	sp, r7
 8014fe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014fe8 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 8014fe8:	b480      	push	{r7}
 8014fea:	b083      	sub	sp, #12
 8014fec:	af00      	add	r7, sp, #0
 8014fee:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8014ff0:	687b      	ldr	r3, [r7, #4]
 8014ff2:	4618      	mov	r0, r3
 8014ff4:	370c      	adds	r7, #12
 8014ff6:	46bd      	mov	sp, r7
 8014ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ffc:	4770      	bx	lr

08014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014ffe:	b480      	push	{r7}
 8015000:	b083      	sub	sp, #12
 8015002:	af00      	add	r7, sp, #0
 8015004:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8015006:	687b      	ldr	r3, [r7, #4]
 8015008:	4618      	mov	r0, r3
 801500a:	370c      	adds	r7, #12
 801500c:	46bd      	mov	sp, r7
 801500e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015012:	4770      	bx	lr

08015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015014:	b480      	push	{r7}
 8015016:	b083      	sub	sp, #12
 8015018:	af00      	add	r7, sp, #0
 801501a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801501c:	687b      	ldr	r3, [r7, #4]
 801501e:	4618      	mov	r0, r3
 8015020:	370c      	adds	r7, #12
 8015022:	46bd      	mov	sp, r7
 8015024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015028:	4770      	bx	lr

0801502a <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801502a:	b580      	push	{r7, lr}
 801502c:	b084      	sub	sp, #16
 801502e:	af00      	add	r7, sp, #0
 8015030:	60f8      	str	r0, [r7, #12]
 8015032:	60b9      	str	r1, [r7, #8]
 8015034:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8015036:	6878      	ldr	r0, [r7, #4]
 8015038:	f7ff ffec 	bl	8015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801503c:	4603      	mov	r3, r0
 801503e:	461a      	mov	r2, r3
 8015040:	68b9      	ldr	r1, [r7, #8]
 8015042:	68f8      	ldr	r0, [r7, #12]
 8015044:	f000 fb5d 	bl	8015702 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 8015048:	bf00      	nop
 801504a:	3710      	adds	r7, #16
 801504c:	46bd      	mov	sp, r7
 801504e:	bd80      	pop	{r7, pc}

08015050 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8015050:	b580      	push	{r7, lr}
 8015052:	b084      	sub	sp, #16
 8015054:	af00      	add	r7, sp, #0
 8015056:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8015058:	687b      	ldr	r3, [r7, #4]
 801505a:	1d1a      	adds	r2, r3, #4
 801505c:	f107 030c 	add.w	r3, r7, #12
 8015060:	4611      	mov	r1, r2
 8015062:	4618      	mov	r0, r3
 8015064:	f000 fb63 	bl	801572e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015068:	68fb      	ldr	r3, [r7, #12]
 801506a:	4618      	mov	r0, r3
 801506c:	3710      	adds	r7, #16
 801506e:	46bd      	mov	sp, r7
 8015070:	bd80      	pop	{r7, pc}
	...

08015074 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
 8015074:	b5b0      	push	{r4, r5, r7, lr}
 8015076:	b08c      	sub	sp, #48	; 0x30
 8015078:	af00      	add	r7, sp, #0
 801507a:	60f8      	str	r0, [r7, #12]
 801507c:	60b9      	str	r1, [r7, #8]
 801507e:	607a      	str	r2, [r7, #4]
    void
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
 8015080:	4a39      	ldr	r2, [pc, #228]	; (8015168 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 8015082:	2101      	movs	r1, #1
 8015084:	68f8      	ldr	r0, [r7, #12]
 8015086:	f000 fb62 	bl	801574e <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>
 801508a:	62f8      	str	r0, [r7, #44]	; 0x2c
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
      pointer __old_start = this->_M_impl._M_start;
 801508c:	68fb      	ldr	r3, [r7, #12]
 801508e:	681b      	ldr	r3, [r3, #0]
 8015090:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8015092:	68fb      	ldr	r3, [r7, #12]
 8015094:	685b      	ldr	r3, [r3, #4]
 8015096:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8015098:	68f8      	ldr	r0, [r7, #12]
 801509a:	f000 fb9f 	bl	80157dc <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 801509e:	4603      	mov	r3, r0
 80150a0:	617b      	str	r3, [r7, #20]
 80150a2:	f107 0214 	add.w	r2, r7, #20
 80150a6:	f107 0308 	add.w	r3, r7, #8
 80150aa:	4611      	mov	r1, r2
 80150ac:	4618      	mov	r0, r3
 80150ae:	f000 fba5 	bl	80157fc <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 80150b2:	4603      	mov	r3, r0
 80150b4:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 80150b6:	68fb      	ldr	r3, [r7, #12]
 80150b8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80150ba:	4618      	mov	r0, r3
 80150bc:	f7f9 fc69 	bl	800e992 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 80150c0:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 80150c2:	69fb      	ldr	r3, [r7, #28]
 80150c4:	61bb      	str	r3, [r7, #24]
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
 80150c6:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 80150c8:	6a3b      	ldr	r3, [r7, #32]
 80150ca:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 80150cc:	69fa      	ldr	r2, [r7, #28]
 80150ce:	18d5      	adds	r5, r2, r3
 80150d0:	6878      	ldr	r0, [r7, #4]
 80150d2:	f7ff ff9f 	bl	8015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80150d6:	4603      	mov	r3, r0
 80150d8:	461a      	mov	r2, r3
 80150da:	4629      	mov	r1, r5
 80150dc:	4620      	mov	r0, r4
 80150de:	f7ff ffa4 	bl	801502a <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
 80150e2:	2300      	movs	r3, #0
 80150e4:	61bb      	str	r3, [r7, #24]

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80150e6:	f107 0308 	add.w	r3, r7, #8
 80150ea:	4618      	mov	r0, r3
 80150ec:	f000 fbaf 	bl	801584e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 80150f0:	4603      	mov	r3, r0
 80150f2:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 80150f4:	68fb      	ldr	r3, [r7, #12]
 80150f6:	4618      	mov	r0, r3
 80150f8:	f7f9 fa57 	bl	800e5aa <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 80150fc:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80150fe:	69fa      	ldr	r2, [r7, #28]
 8015100:	4621      	mov	r1, r4
 8015102:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8015104:	f000 fb8f 	bl	8015826 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015108:	61b8      	str	r0, [r7, #24]

	      ++__new_finish;
 801510a:	69bb      	ldr	r3, [r7, #24]
 801510c:	3304      	adds	r3, #4
 801510e:	61bb      	str	r3, [r7, #24]

	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015110:	f107 0308 	add.w	r3, r7, #8
 8015114:	4618      	mov	r0, r3
 8015116:	f000 fb9a 	bl	801584e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801511a:	4603      	mov	r3, r0
 801511c:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801511e:	68fb      	ldr	r3, [r7, #12]
 8015120:	4618      	mov	r0, r3
 8015122:	f7f9 fa42 	bl	800e5aa <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8015126:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015128:	69ba      	ldr	r2, [r7, #24]
 801512a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801512c:	4620      	mov	r0, r4
 801512e:	f000 fb7a 	bl	8015826 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015132:	61b8      	str	r0, [r7, #24]
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
 8015134:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8015136:	68fb      	ldr	r3, [r7, #12]
 8015138:	689a      	ldr	r2, [r3, #8]
 801513a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801513c:	1ad3      	subs	r3, r2, r3
 801513e:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8015140:	461a      	mov	r2, r3
 8015142:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8015144:	f7f9 fb7c 	bl	800e840 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8015148:	68fb      	ldr	r3, [r7, #12]
 801514a:	69fa      	ldr	r2, [r7, #28]
 801514c:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801514e:	68fb      	ldr	r3, [r7, #12]
 8015150:	69ba      	ldr	r2, [r7, #24]
 8015152:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8015154:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8015156:	009b      	lsls	r3, r3, #2
 8015158:	69fa      	ldr	r2, [r7, #28]
 801515a:	441a      	add	r2, r3
 801515c:	68fb      	ldr	r3, [r7, #12]
 801515e:	609a      	str	r2, [r3, #8]
    }
 8015160:	bf00      	nop
 8015162:	3730      	adds	r7, #48	; 0x30
 8015164:	46bd      	mov	sp, r7
 8015166:	bdb0      	pop	{r4, r5, r7, pc}
 8015168:	08029894 	.word	0x08029894

0801516c <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801516c:	b580      	push	{r7, lr}
 801516e:	b084      	sub	sp, #16
 8015170:	af00      	add	r7, sp, #0
 8015172:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8015174:	6878      	ldr	r0, [r7, #4]
 8015176:	f7ff ff6b 	bl	8015050 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 801517a:	4603      	mov	r3, r0
 801517c:	60fb      	str	r3, [r7, #12]
 801517e:	f107 030c 	add.w	r3, r7, #12
 8015182:	2101      	movs	r1, #1
 8015184:	4618      	mov	r0, r3
 8015186:	f000 fb6d 	bl	8015864 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>
 801518a:	4603      	mov	r3, r0
 801518c:	60bb      	str	r3, [r7, #8]
 801518e:	f107 0308 	add.w	r3, r7, #8
 8015192:	4618      	mov	r0, r3
 8015194:	f000 fb7f 	bl	8015896 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 8015198:	4603      	mov	r3, r0
      }
 801519a:	4618      	mov	r0, r3
 801519c:	3710      	adds	r7, #16
 801519e:	46bd      	mov	sp, r7
 80151a0:	bd80      	pop	{r7, pc}

080151a2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80151a2:	b480      	push	{r7}
 80151a4:	b083      	sub	sp, #12
 80151a6:	af00      	add	r7, sp, #0
 80151a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80151aa:	687b      	ldr	r3, [r7, #4]
 80151ac:	4618      	mov	r0, r3
 80151ae:	370c      	adds	r7, #12
 80151b0:	46bd      	mov	sp, r7
 80151b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80151b6:	4770      	bx	lr

080151b8 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80151b8:	b580      	push	{r7, lr}
 80151ba:	b084      	sub	sp, #16
 80151bc:	af00      	add	r7, sp, #0
 80151be:	60f8      	str	r0, [r7, #12]
 80151c0:	60b9      	str	r1, [r7, #8]
 80151c2:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80151c4:	6878      	ldr	r0, [r7, #4]
 80151c6:	f7ff ffec 	bl	80151a2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 80151ca:	4603      	mov	r3, r0
 80151cc:	461a      	mov	r2, r3
 80151ce:	68b9      	ldr	r1, [r7, #8]
 80151d0:	68f8      	ldr	r0, [r7, #12]
 80151d2:	f000 fb6c 	bl	80158ae <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>
 80151d6:	bf00      	nop
 80151d8:	3710      	adds	r7, #16
 80151da:	46bd      	mov	sp, r7
 80151dc:	bd80      	pop	{r7, pc}
	...

080151e0 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 80151e0:	b5b0      	push	{r4, r5, r7, lr}
 80151e2:	b08c      	sub	sp, #48	; 0x30
 80151e4:	af00      	add	r7, sp, #0
 80151e6:	60f8      	str	r0, [r7, #12]
 80151e8:	60b9      	str	r1, [r7, #8]
 80151ea:	607a      	str	r2, [r7, #4]
      const size_type __len =
 80151ec:	4a39      	ldr	r2, [pc, #228]	; (80152d4 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 80151ee:	2101      	movs	r1, #1
 80151f0:	68f8      	ldr	r0, [r7, #12]
 80151f2:	f000 fb72 	bl	80158da <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>
 80151f6:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 80151f8:	68fb      	ldr	r3, [r7, #12]
 80151fa:	681b      	ldr	r3, [r3, #0]
 80151fc:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 80151fe:	68fb      	ldr	r3, [r7, #12]
 8015200:	685b      	ldr	r3, [r3, #4]
 8015202:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8015204:	68f8      	ldr	r0, [r7, #12]
 8015206:	f000 fbaf 	bl	8015968 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>
 801520a:	4603      	mov	r3, r0
 801520c:	617b      	str	r3, [r7, #20]
 801520e:	f107 0214 	add.w	r2, r7, #20
 8015212:	f107 0308 	add.w	r3, r7, #8
 8015216:	4611      	mov	r1, r2
 8015218:	4618      	mov	r0, r3
 801521a:	f000 fbb5 	bl	8015988 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801521e:	4603      	mov	r3, r0
 8015220:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8015222:	68fb      	ldr	r3, [r7, #12]
 8015224:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8015226:	4618      	mov	r0, r3
 8015228:	f000 fbc3 	bl	80159b2 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>
 801522c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801522e:	69fb      	ldr	r3, [r7, #28]
 8015230:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8015232:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8015234:	6a3b      	ldr	r3, [r7, #32]
 8015236:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8015238:	69fa      	ldr	r2, [r7, #28]
 801523a:	18d5      	adds	r5, r2, r3
 801523c:	6878      	ldr	r0, [r7, #4]
 801523e:	f7ff ffb0 	bl	80151a2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 8015242:	4603      	mov	r3, r0
 8015244:	461a      	mov	r2, r3
 8015246:	4629      	mov	r1, r5
 8015248:	4620      	mov	r0, r4
 801524a:	f7ff ffb5 	bl	80151b8 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801524e:	2300      	movs	r3, #0
 8015250:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8015252:	f107 0308 	add.w	r3, r7, #8
 8015256:	4618      	mov	r0, r3
 8015258:	f000 fbd3 	bl	8015a02 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 801525c:	4603      	mov	r3, r0
 801525e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8015260:	68fb      	ldr	r3, [r7, #12]
 8015262:	4618      	mov	r0, r3
 8015264:	f7ff fcd3 	bl	8014c0e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8015268:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801526a:	69fa      	ldr	r2, [r7, #28]
 801526c:	4621      	mov	r1, r4
 801526e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8015270:	f000 fbb3 	bl	80159da <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015274:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 8015276:	69bb      	ldr	r3, [r7, #24]
 8015278:	3304      	adds	r3, #4
 801527a:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801527c:	f107 0308 	add.w	r3, r7, #8
 8015280:	4618      	mov	r0, r3
 8015282:	f000 fbbe 	bl	8015a02 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8015286:	4603      	mov	r3, r0
 8015288:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801528a:	68fb      	ldr	r3, [r7, #12]
 801528c:	4618      	mov	r0, r3
 801528e:	f7ff fcbe 	bl	8014c0e <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8015292:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015294:	69ba      	ldr	r2, [r7, #24]
 8015296:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8015298:	4620      	mov	r0, r4
 801529a:	f000 fb9e 	bl	80159da <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801529e:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 80152a0:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 80152a2:	68fb      	ldr	r3, [r7, #12]
 80152a4:	689a      	ldr	r2, [r3, #8]
 80152a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80152a8:	1ad3      	subs	r3, r2, r3
 80152aa:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 80152ac:	461a      	mov	r2, r3
 80152ae:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80152b0:	f7ff fc9a 	bl	8014be8 <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 80152b4:	68fb      	ldr	r3, [r7, #12]
 80152b6:	69fa      	ldr	r2, [r7, #28]
 80152b8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 80152ba:	68fb      	ldr	r3, [r7, #12]
 80152bc:	69ba      	ldr	r2, [r7, #24]
 80152be:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 80152c0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80152c2:	009b      	lsls	r3, r3, #2
 80152c4:	69fa      	ldr	r2, [r7, #28]
 80152c6:	441a      	add	r2, r3
 80152c8:	68fb      	ldr	r3, [r7, #12]
 80152ca:	609a      	str	r2, [r3, #8]
    }
 80152cc:	bf00      	nop
 80152ce:	3730      	adds	r7, #48	; 0x30
 80152d0:	46bd      	mov	sp, r7
 80152d2:	bdb0      	pop	{r4, r5, r7, pc}
 80152d4:	08029894 	.word	0x08029894

080152d8 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80152d8:	b480      	push	{r7}
 80152da:	b083      	sub	sp, #12
 80152dc:	af00      	add	r7, sp, #0
 80152de:	6078      	str	r0, [r7, #4]
 80152e0:	687b      	ldr	r3, [r7, #4]
 80152e2:	4618      	mov	r0, r3
 80152e4:	370c      	adds	r7, #12
 80152e6:	46bd      	mov	sp, r7
 80152e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80152ec:	4770      	bx	lr

080152ee <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>:
 80152ee:	b480      	push	{r7}
 80152f0:	b083      	sub	sp, #12
 80152f2:	af00      	add	r7, sp, #0
 80152f4:	6078      	str	r0, [r7, #4]
 80152f6:	687b      	ldr	r3, [r7, #4]
 80152f8:	4618      	mov	r0, r3
 80152fa:	370c      	adds	r7, #12
 80152fc:	46bd      	mov	sp, r7
 80152fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015302:	4770      	bx	lr

08015304 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8015304:	b580      	push	{r7, lr}
 8015306:	b084      	sub	sp, #16
 8015308:	af00      	add	r7, sp, #0
 801530a:	60f8      	str	r0, [r7, #12]
 801530c:	60b9      	str	r1, [r7, #8]
 801530e:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8015310:	687a      	ldr	r2, [r7, #4]
 8015312:	68b9      	ldr	r1, [r7, #8]
 8015314:	68f8      	ldr	r0, [r7, #12]
 8015316:	f000 fb7f 	bl	8015a18 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>
 801531a:	bf00      	nop
 801531c:	3710      	adds	r7, #16
 801531e:	46bd      	mov	sp, r7
 8015320:	bd80      	pop	{r7, pc}

08015322 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>:
      void _M_reset()
 8015322:	b480      	push	{r7}
 8015324:	b083      	sub	sp, #12
 8015326:	af00      	add	r7, sp, #0
 8015328:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 801532a:	687b      	ldr	r3, [r7, #4]
 801532c:	22ff      	movs	r2, #255	; 0xff
 801532e:	711a      	strb	r2, [r3, #4]
 8015330:	bf00      	nop
 8015332:	370c      	adds	r7, #12
 8015334:	46bd      	mov	sp, r7
 8015336:	f85d 7b04 	ldr.w	r7, [sp], #4
 801533a:	4770      	bx	lr

0801533c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801533c:	b590      	push	{r4, r7, lr}
 801533e:	b085      	sub	sp, #20
 8015340:	af00      	add	r7, sp, #0
 8015342:	6078      	str	r0, [r7, #4]
 8015344:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8015346:	687b      	ldr	r3, [r7, #4]
 8015348:	2201      	movs	r2, #1
 801534a:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801534c:	6878      	ldr	r0, [r7, #4]
 801534e:	f7ee fc0e 	bl	8003b6e <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8015352:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8015354:	6838      	ldr	r0, [r7, #0]
 8015356:	f7ff fc65 	bl	8014c24 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801535a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801535c:	681c      	ldr	r4, [r3, #0]
 801535e:	68f8      	ldr	r0, [r7, #12]
 8015360:	f000 fb66 	bl	8015a30 <_ZSt9addressofIP13Function_callEPT_RS2_>
 8015364:	4603      	mov	r3, r0
 8015366:	4619      	mov	r1, r3
 8015368:	2004      	movs	r0, #4
 801536a:	f7eb fe76 	bl	800105a <_ZnwjPv>
 801536e:	4603      	mov	r3, r0
 8015370:	601c      	str	r4, [r3, #0]
    }
 8015372:	bf00      	nop
 8015374:	3714      	adds	r7, #20
 8015376:	46bd      	mov	sp, r7
 8015378:	bd90      	pop	{r4, r7, pc}

0801537a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801537a:	b590      	push	{r4, r7, lr}
 801537c:	b085      	sub	sp, #20
 801537e:	af00      	add	r7, sp, #0
 8015380:	6078      	str	r0, [r7, #4]
 8015382:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8015384:	687b      	ldr	r3, [r7, #4]
 8015386:	2200      	movs	r2, #0
 8015388:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801538a:	6878      	ldr	r0, [r7, #4]
 801538c:	f7ee fb9f 	bl	8003ace <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 8015390:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8015392:	6838      	ldr	r0, [r7, #0]
 8015394:	f7ff fc6a 	bl	8014c6c <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 8015398:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801539a:	681c      	ldr	r4, [r3, #0]
 801539c:	68f8      	ldr	r0, [r7, #12]
 801539e:	f000 fb53 	bl	8015a48 <_ZSt9addressofIP10AssignmentEPT_RS2_>
 80153a2:	4603      	mov	r3, r0
 80153a4:	4619      	mov	r1, r3
 80153a6:	2004      	movs	r0, #4
 80153a8:	f7eb fe57 	bl	800105a <_ZnwjPv>
 80153ac:	4603      	mov	r3, r0
 80153ae:	601c      	str	r4, [r3, #0]
    }
 80153b0:	bf00      	nop
 80153b2:	3714      	adds	r7, #20
 80153b4:	46bd      	mov	sp, r7
 80153b6:	bd90      	pop	{r4, r7, pc}

080153b8 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80153b8:	b590      	push	{r4, r7, lr}
 80153ba:	b085      	sub	sp, #20
 80153bc:	af00      	add	r7, sp, #0
 80153be:	6078      	str	r0, [r7, #4]
 80153c0:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80153c2:	687b      	ldr	r3, [r7, #4]
 80153c4:	2202      	movs	r2, #2
 80153c6:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80153c8:	6878      	ldr	r0, [r7, #4]
 80153ca:	f7ee fc32 	bl	8003c32 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 80153ce:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80153d0:	6838      	ldr	r0, [r7, #0]
 80153d2:	f7ff fc6f 	bl	8014cb4 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80153d6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80153d8:	681c      	ldr	r4, [r3, #0]
 80153da:	68f8      	ldr	r0, [r7, #12]
 80153dc:	f000 fb40 	bl	8015a60 <_ZSt9addressofIP11Method_callEPT_RS2_>
 80153e0:	4603      	mov	r3, r0
 80153e2:	4619      	mov	r1, r3
 80153e4:	2004      	movs	r0, #4
 80153e6:	f7eb fe38 	bl	800105a <_ZnwjPv>
 80153ea:	4603      	mov	r3, r0
 80153ec:	601c      	str	r4, [r3, #0]
    }
 80153ee:	bf00      	nop
 80153f0:	3714      	adds	r7, #20
 80153f2:	46bd      	mov	sp, r7
 80153f4:	bd90      	pop	{r4, r7, pc}

080153f6 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80153f6:	b590      	push	{r4, r7, lr}
 80153f8:	b085      	sub	sp, #20
 80153fa:	af00      	add	r7, sp, #0
 80153fc:	6078      	str	r0, [r7, #4]
 80153fe:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8015400:	687b      	ldr	r3, [r7, #4]
 8015402:	2203      	movs	r2, #3
 8015404:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015406:	6878      	ldr	r0, [r7, #4]
 8015408:	f7ee fc87 	bl	8003d1a <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 801540c:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801540e:	6838      	ldr	r0, [r7, #0]
 8015410:	f7ff fca4 	bl	8014d5c <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015414:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015416:	681c      	ldr	r4, [r3, #0]
 8015418:	68f8      	ldr	r0, [r7, #12]
 801541a:	f000 fb2d 	bl	8015a78 <_ZSt9addressofIP15While_statementEPT_RS2_>
 801541e:	4603      	mov	r3, r0
 8015420:	4619      	mov	r1, r3
 8015422:	2004      	movs	r0, #4
 8015424:	f7eb fe19 	bl	800105a <_ZnwjPv>
 8015428:	4603      	mov	r3, r0
 801542a:	601c      	str	r4, [r3, #0]
    }
 801542c:	bf00      	nop
 801542e:	3714      	adds	r7, #20
 8015430:	46bd      	mov	sp, r7
 8015432:	bd90      	pop	{r4, r7, pc}

08015434 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8015434:	b590      	push	{r4, r7, lr}
 8015436:	b085      	sub	sp, #20
 8015438:	af00      	add	r7, sp, #0
 801543a:	6078      	str	r0, [r7, #4]
 801543c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801543e:	687b      	ldr	r3, [r7, #4]
 8015440:	2204      	movs	r2, #4
 8015442:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8015444:	6878      	ldr	r0, [r7, #4]
 8015446:	f7ee fcee 	bl	8003e26 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 801544a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801544c:	6838      	ldr	r0, [r7, #0]
 801544e:	f7ff fca9 	bl	8014da4 <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015452:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8015454:	681c      	ldr	r4, [r3, #0]
 8015456:	68f8      	ldr	r0, [r7, #12]
 8015458:	f000 fb1a 	bl	8015a90 <_ZSt9addressofIP12If_statementEPT_RS2_>
 801545c:	4603      	mov	r3, r0
 801545e:	4619      	mov	r1, r3
 8015460:	2004      	movs	r0, #4
 8015462:	f7eb fdfa 	bl	800105a <_ZnwjPv>
 8015466:	4603      	mov	r3, r0
 8015468:	601c      	str	r4, [r3, #0]
    }
 801546a:	bf00      	nop
 801546c:	3714      	adds	r7, #20
 801546e:	46bd      	mov	sp, r7
 8015470:	bd90      	pop	{r4, r7, pc}

08015472 <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>:
 8015472:	b480      	push	{r7}
 8015474:	b083      	sub	sp, #12
 8015476:	af00      	add	r7, sp, #0
 8015478:	6078      	str	r0, [r7, #4]
 801547a:	687b      	ldr	r3, [r7, #4]
 801547c:	4618      	mov	r0, r3
 801547e:	370c      	adds	r7, #12
 8015480:	46bd      	mov	sp, r7
 8015482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015486:	4770      	bx	lr

08015488 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8015488:	b580      	push	{r7, lr}
 801548a:	b084      	sub	sp, #16
 801548c:	af00      	add	r7, sp, #0
 801548e:	60f8      	str	r0, [r7, #12]
 8015490:	60b9      	str	r1, [r7, #8]
 8015492:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8015494:	687a      	ldr	r2, [r7, #4]
 8015496:	68b9      	ldr	r1, [r7, #8]
 8015498:	68f8      	ldr	r0, [r7, #12]
 801549a:	f000 fb05 	bl	8015aa8 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>
 801549e:	bf00      	nop
 80154a0:	3710      	adds	r7, #16
 80154a2:	46bd      	mov	sp, r7
 80154a4:	bd80      	pop	{r7, pc}

080154a6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80154a6:	b480      	push	{r7}
 80154a8:	b083      	sub	sp, #12
 80154aa:	af00      	add	r7, sp, #0
 80154ac:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80154ae:	687b      	ldr	r3, [r7, #4]
 80154b0:	4618      	mov	r0, r3
 80154b2:	370c      	adds	r7, #12
 80154b4:	46bd      	mov	sp, r7
 80154b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80154ba:	4770      	bx	lr

080154bc <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80154bc:	b580      	push	{r7, lr}
 80154be:	b084      	sub	sp, #16
 80154c0:	af00      	add	r7, sp, #0
 80154c2:	60f8      	str	r0, [r7, #12]
 80154c4:	60b9      	str	r1, [r7, #8]
 80154c6:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80154c8:	6878      	ldr	r0, [r7, #4]
 80154ca:	f7ff ffec 	bl	80154a6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 80154ce:	4603      	mov	r3, r0
 80154d0:	461a      	mov	r2, r3
 80154d2:	68b9      	ldr	r1, [r7, #8]
 80154d4:	68f8      	ldr	r0, [r7, #12]
 80154d6:	f000 faf3 	bl	8015ac0 <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>
 80154da:	bf00      	nop
 80154dc:	3710      	adds	r7, #16
 80154de:	46bd      	mov	sp, r7
 80154e0:	bd80      	pop	{r7, pc}
	...

080154e4 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 80154e4:	b5b0      	push	{r4, r5, r7, lr}
 80154e6:	b08c      	sub	sp, #48	; 0x30
 80154e8:	af00      	add	r7, sp, #0
 80154ea:	60f8      	str	r0, [r7, #12]
 80154ec:	60b9      	str	r1, [r7, #8]
 80154ee:	607a      	str	r2, [r7, #4]
      const size_type __len =
 80154f0:	4a39      	ldr	r2, [pc, #228]	; (80155d8 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 80154f2:	2101      	movs	r1, #1
 80154f4:	68f8      	ldr	r0, [r7, #12]
 80154f6:	f000 faf9 	bl	8015aec <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>
 80154fa:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 80154fc:	68fb      	ldr	r3, [r7, #12]
 80154fe:	681b      	ldr	r3, [r3, #0]
 8015500:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8015502:	68fb      	ldr	r3, [r7, #12]
 8015504:	685b      	ldr	r3, [r3, #4]
 8015506:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8015508:	68f8      	ldr	r0, [r7, #12]
 801550a:	f7ed f8bf 	bl	800268c <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 801550e:	4603      	mov	r3, r0
 8015510:	617b      	str	r3, [r7, #20]
 8015512:	f107 0214 	add.w	r2, r7, #20
 8015516:	f107 0308 	add.w	r3, r7, #8
 801551a:	4611      	mov	r1, r2
 801551c:	4618      	mov	r0, r3
 801551e:	f000 fb2c 	bl	8015b7a <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8015522:	4603      	mov	r3, r0
 8015524:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8015526:	68fb      	ldr	r3, [r7, #12]
 8015528:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801552a:	4618      	mov	r0, r3
 801552c:	f000 fb3a 	bl	8015ba4 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>
 8015530:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8015532:	69fb      	ldr	r3, [r7, #28]
 8015534:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8015536:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8015538:	6a3b      	ldr	r3, [r7, #32]
 801553a:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801553c:	69fa      	ldr	r2, [r7, #28]
 801553e:	18d5      	adds	r5, r2, r3
 8015540:	6878      	ldr	r0, [r7, #4]
 8015542:	f7ff ffb0 	bl	80154a6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015546:	4603      	mov	r3, r0
 8015548:	461a      	mov	r2, r3
 801554a:	4629      	mov	r1, r5
 801554c:	4620      	mov	r0, r4
 801554e:	f7ff ffb5 	bl	80154bc <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 8015552:	2300      	movs	r3, #0
 8015554:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8015556:	f107 0308 	add.w	r3, r7, #8
 801555a:	4618      	mov	r0, r3
 801555c:	f7ee fa88 	bl	8003a70 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015560:	4603      	mov	r3, r0
 8015562:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8015564:	68fb      	ldr	r3, [r7, #12]
 8015566:	4618      	mov	r0, r3
 8015568:	f7ff fc73 	bl	8014e52 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 801556c:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801556e:	69fa      	ldr	r2, [r7, #28]
 8015570:	4621      	mov	r1, r4
 8015572:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8015574:	f000 fb2a 	bl	8015bcc <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8015578:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801557a:	69bb      	ldr	r3, [r7, #24]
 801557c:	3304      	adds	r3, #4
 801557e:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015580:	f107 0308 	add.w	r3, r7, #8
 8015584:	4618      	mov	r0, r3
 8015586:	f7ee fa73 	bl	8003a70 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 801558a:	4603      	mov	r3, r0
 801558c:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801558e:	68fb      	ldr	r3, [r7, #12]
 8015590:	4618      	mov	r0, r3
 8015592:	f7ff fc5e 	bl	8014e52 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 8015596:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8015598:	69ba      	ldr	r2, [r7, #24]
 801559a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801559c:	4620      	mov	r0, r4
 801559e:	f000 fb15 	bl	8015bcc <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80155a2:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 80155a4:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 80155a6:	68fb      	ldr	r3, [r7, #12]
 80155a8:	689a      	ldr	r2, [r3, #8]
 80155aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80155ac:	1ad3      	subs	r3, r2, r3
 80155ae:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 80155b0:	461a      	mov	r2, r3
 80155b2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80155b4:	f7ff fc3a 	bl	8014e2c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 80155b8:	68fb      	ldr	r3, [r7, #12]
 80155ba:	69fa      	ldr	r2, [r7, #28]
 80155bc:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 80155be:	68fb      	ldr	r3, [r7, #12]
 80155c0:	69ba      	ldr	r2, [r7, #24]
 80155c2:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 80155c4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80155c6:	009b      	lsls	r3, r3, #2
 80155c8:	69fa      	ldr	r2, [r7, #28]
 80155ca:	441a      	add	r2, r3
 80155cc:	68fb      	ldr	r3, [r7, #12]
 80155ce:	609a      	str	r2, [r3, #8]
    }
 80155d0:	bf00      	nop
 80155d2:	3730      	adds	r7, #48	; 0x30
 80155d4:	46bd      	mov	sp, r7
 80155d6:	bdb0      	pop	{r4, r5, r7, pc}
 80155d8:	08029894 	.word	0x08029894

080155dc <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 80155dc:	b580      	push	{r7, lr}
 80155de:	b084      	sub	sp, #16
 80155e0:	af00      	add	r7, sp, #0
 80155e2:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 80155e4:	6878      	ldr	r0, [r7, #4]
 80155e6:	f7ed f861 	bl	80026ac <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 80155ea:	4603      	mov	r3, r0
 80155ec:	60fb      	str	r3, [r7, #12]
 80155ee:	f107 030c 	add.w	r3, r7, #12
 80155f2:	2101      	movs	r1, #1
 80155f4:	4618      	mov	r0, r3
 80155f6:	f000 fafd 	bl	8015bf4 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>
 80155fa:	4603      	mov	r3, r0
 80155fc:	60bb      	str	r3, [r7, #8]
 80155fe:	f107 0308 	add.w	r3, r7, #8
 8015602:	4618      	mov	r0, r3
 8015604:	f7ed f88b 	bl	800271e <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 8015608:	4603      	mov	r3, r0
      }
 801560a:	4618      	mov	r0, r3
 801560c:	3710      	adds	r7, #16
 801560e:	46bd      	mov	sp, r7
 8015610:	bd80      	pop	{r7, pc}

08015612 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8015612:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015616:	b084      	sub	sp, #16
 8015618:	af00      	add	r7, sp, #0
 801561a:	7338      	strb	r0, [r7, #12]
 801561c:	60b9      	str	r1, [r7, #8]
 801561e:	607a      	str	r2, [r7, #4]
 8015620:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8015622:	68b8      	ldr	r0, [r7, #8]
 8015624:	f7ff fceb 	bl	8014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015628:	4604      	mov	r4, r0
 801562a:	6878      	ldr	r0, [r7, #4]
 801562c:	f7ef fb8e 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8015630:	4605      	mov	r5, r0
 8015632:	6838      	ldr	r0, [r7, #0]
 8015634:	f7ef faed 	bl	8004c12 <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8015638:	4632      	mov	r2, r6
 801563a:	4629      	mov	r1, r5
 801563c:	4620      	mov	r0, r4
 801563e:	f000 faf2 	bl	8015c26 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>
 8015642:	4643      	mov	r3, r8
 8015644:	4618      	mov	r0, r3
 8015646:	3710      	adds	r7, #16
 8015648:	46bd      	mov	sp, r7
 801564a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801564e <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801564e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015652:	b084      	sub	sp, #16
 8015654:	af00      	add	r7, sp, #0
 8015656:	7338      	strb	r0, [r7, #12]
 8015658:	60b9      	str	r1, [r7, #8]
 801565a:	607a      	str	r2, [r7, #4]
 801565c:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801565e:	68b8      	ldr	r0, [r7, #8]
 8015660:	f7ff fccd 	bl	8014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 8015664:	4604      	mov	r4, r0
 8015666:	6878      	ldr	r0, [r7, #4]
 8015668:	f7ef fac8 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801566c:	4605      	mov	r5, r0
 801566e:	6838      	ldr	r0, [r7, #0]
 8015670:	f7ef fb03 	bl	8004c7a <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8015674:	4632      	mov	r2, r6
 8015676:	4629      	mov	r1, r5
 8015678:	4620      	mov	r0, r4
 801567a:	f000 fb1d 	bl	8015cb8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>
 801567e:	4643      	mov	r3, r8
 8015680:	4618      	mov	r0, r3
 8015682:	3710      	adds	r7, #16
 8015684:	46bd      	mov	sp, r7
 8015686:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801568a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801568a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801568e:	b084      	sub	sp, #16
 8015690:	af00      	add	r7, sp, #0
 8015692:	7338      	strb	r0, [r7, #12]
 8015694:	60b9      	str	r1, [r7, #8]
 8015696:	607a      	str	r2, [r7, #4]
 8015698:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801569a:	68b8      	ldr	r0, [r7, #8]
 801569c:	f7ff fcaf 	bl	8014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80156a0:	4604      	mov	r4, r0
 80156a2:	6878      	ldr	r0, [r7, #4]
 80156a4:	f7ef fade 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 80156a8:	4605      	mov	r5, r0
 80156aa:	6838      	ldr	r0, [r7, #0]
 80156ac:	f7ef fb19 	bl	8004ce2 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80156b0:	4632      	mov	r2, r6
 80156b2:	4629      	mov	r1, r5
 80156b4:	4620      	mov	r0, r4
 80156b6:	f000 fb46 	bl	8015d46 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>
 80156ba:	4643      	mov	r3, r8
 80156bc:	4618      	mov	r0, r3
 80156be:	3710      	adds	r7, #16
 80156c0:	46bd      	mov	sp, r7
 80156c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080156c6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80156c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80156ca:	b084      	sub	sp, #16
 80156cc:	af00      	add	r7, sp, #0
 80156ce:	7338      	strb	r0, [r7, #12]
 80156d0:	60b9      	str	r1, [r7, #8]
 80156d2:	607a      	str	r2, [r7, #4]
 80156d4:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80156d6:	68b8      	ldr	r0, [r7, #8]
 80156d8:	f7ff fc91 	bl	8014ffe <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 80156dc:	4604      	mov	r4, r0
 80156de:	6878      	ldr	r0, [r7, #4]
 80156e0:	f7ef faf4 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80156e4:	4605      	mov	r5, r0
 80156e6:	6838      	ldr	r0, [r7, #0]
 80156e8:	f7ef fb3b 	bl	8004d62 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 80156ec:	4632      	mov	r2, r6
 80156ee:	4629      	mov	r1, r5
 80156f0:	4620      	mov	r0, r4
 80156f2:	f000 fb6f 	bl	8015dd4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>
 80156f6:	4643      	mov	r3, r8
 80156f8:	4618      	mov	r0, r3
 80156fa:	3710      	adds	r7, #16
 80156fc:	46bd      	mov	sp, r7
 80156fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015702 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8015702:	b590      	push	{r4, r7, lr}
 8015704:	b085      	sub	sp, #20
 8015706:	af00      	add	r7, sp, #0
 8015708:	60f8      	str	r0, [r7, #12]
 801570a:	60b9      	str	r1, [r7, #8]
 801570c:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801570e:	6878      	ldr	r0, [r7, #4]
 8015710:	f7ff fc80 	bl	8015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8015714:	4603      	mov	r3, r0
 8015716:	681c      	ldr	r4, [r3, #0]
 8015718:	68bb      	ldr	r3, [r7, #8]
 801571a:	4619      	mov	r1, r3
 801571c:	2004      	movs	r0, #4
 801571e:	f7eb fc9c 	bl	800105a <_ZnwjPv>
 8015722:	4603      	mov	r3, r0
 8015724:	601c      	str	r4, [r3, #0]
 8015726:	bf00      	nop
 8015728:	3714      	adds	r7, #20
 801572a:	46bd      	mov	sp, r7
 801572c:	bd90      	pop	{r4, r7, pc}

0801572e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801572e:	b480      	push	{r7}
 8015730:	b083      	sub	sp, #12
 8015732:	af00      	add	r7, sp, #0
 8015734:	6078      	str	r0, [r7, #4]
 8015736:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8015738:	683b      	ldr	r3, [r7, #0]
 801573a:	681a      	ldr	r2, [r3, #0]
 801573c:	687b      	ldr	r3, [r7, #4]
 801573e:	601a      	str	r2, [r3, #0]
 8015740:	687b      	ldr	r3, [r7, #4]
 8015742:	4618      	mov	r0, r3
 8015744:	370c      	adds	r7, #12
 8015746:	46bd      	mov	sp, r7
 8015748:	f85d 7b04 	ldr.w	r7, [sp], #4
 801574c:	4770      	bx	lr

0801574e <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801574e:	b590      	push	{r4, r7, lr}
 8015750:	b087      	sub	sp, #28
 8015752:	af00      	add	r7, sp, #0
 8015754:	60f8      	str	r0, [r7, #12]
 8015756:	60b9      	str	r1, [r7, #8]
 8015758:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801575a:	68f8      	ldr	r0, [r7, #12]
 801575c:	f000 fb82 	bl	8015e64 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 8015760:	4604      	mov	r4, r0
 8015762:	68f8      	ldr	r0, [r7, #12]
 8015764:	f7ed f823 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015768:	4603      	mov	r3, r0
 801576a:	1ae2      	subs	r2, r4, r3
 801576c:	68bb      	ldr	r3, [r7, #8]
 801576e:	429a      	cmp	r2, r3
 8015770:	bf34      	ite	cc
 8015772:	2301      	movcc	r3, #1
 8015774:	2300      	movcs	r3, #0
 8015776:	b2db      	uxtb	r3, r3
 8015778:	2b00      	cmp	r3, #0
 801577a:	d002      	beq.n	8015782 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801577c:	6878      	ldr	r0, [r7, #4]
 801577e:	f00d fe5c 	bl	802343a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8015782:	68f8      	ldr	r0, [r7, #12]
 8015784:	f7ed f813 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015788:	4604      	mov	r4, r0
 801578a:	68f8      	ldr	r0, [r7, #12]
 801578c:	f7ed f80f 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8015790:	4603      	mov	r3, r0
 8015792:	613b      	str	r3, [r7, #16]
 8015794:	f107 0208 	add.w	r2, r7, #8
 8015798:	f107 0310 	add.w	r3, r7, #16
 801579c:	4611      	mov	r1, r2
 801579e:	4618      	mov	r0, r3
 80157a0:	f000 fb71 	bl	8015e86 <_ZSt3maxIjERKT_S2_S2_>
 80157a4:	4603      	mov	r3, r0
 80157a6:	681b      	ldr	r3, [r3, #0]
 80157a8:	4423      	add	r3, r4
 80157aa:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 80157ac:	68f8      	ldr	r0, [r7, #12]
 80157ae:	f7ec fffe 	bl	80027ae <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 80157b2:	4602      	mov	r2, r0
 80157b4:	697b      	ldr	r3, [r7, #20]
 80157b6:	4293      	cmp	r3, r2
 80157b8:	d306      	bcc.n	80157c8 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 80157ba:	68f8      	ldr	r0, [r7, #12]
 80157bc:	f000 fb52 	bl	8015e64 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 80157c0:	4602      	mov	r2, r0
 80157c2:	697b      	ldr	r3, [r7, #20]
 80157c4:	4293      	cmp	r3, r2
 80157c6:	d904      	bls.n	80157d2 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 80157c8:	68f8      	ldr	r0, [r7, #12]
 80157ca:	f000 fb4b 	bl	8015e64 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 80157ce:	4603      	mov	r3, r0
 80157d0:	e000      	b.n	80157d4 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 80157d2:	697b      	ldr	r3, [r7, #20]
      }
 80157d4:	4618      	mov	r0, r3
 80157d6:	371c      	adds	r7, #28
 80157d8:	46bd      	mov	sp, r7
 80157da:	bd90      	pop	{r4, r7, pc}

080157dc <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80157dc:	b580      	push	{r7, lr}
 80157de:	b084      	sub	sp, #16
 80157e0:	af00      	add	r7, sp, #0
 80157e2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80157e4:	687a      	ldr	r2, [r7, #4]
 80157e6:	f107 030c 	add.w	r3, r7, #12
 80157ea:	4611      	mov	r1, r2
 80157ec:	4618      	mov	r0, r3
 80157ee:	f7ff ff9e 	bl	801572e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80157f2:	68fb      	ldr	r3, [r7, #12]
 80157f4:	4618      	mov	r0, r3
 80157f6:	3710      	adds	r7, #16
 80157f8:	46bd      	mov	sp, r7
 80157fa:	bd80      	pop	{r7, pc}

080157fc <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 80157fc:	b590      	push	{r4, r7, lr}
 80157fe:	b083      	sub	sp, #12
 8015800:	af00      	add	r7, sp, #0
 8015802:	6078      	str	r0, [r7, #4]
 8015804:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015806:	6878      	ldr	r0, [r7, #4]
 8015808:	f000 f821 	bl	801584e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801580c:	4603      	mov	r3, r0
 801580e:	681c      	ldr	r4, [r3, #0]
 8015810:	6838      	ldr	r0, [r7, #0]
 8015812:	f000 f81c 	bl	801584e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8015816:	4603      	mov	r3, r0
 8015818:	681b      	ldr	r3, [r3, #0]
 801581a:	1ae3      	subs	r3, r4, r3
 801581c:	109b      	asrs	r3, r3, #2
 801581e:	4618      	mov	r0, r3
 8015820:	370c      	adds	r7, #12
 8015822:	46bd      	mov	sp, r7
 8015824:	bd90      	pop	{r4, r7, pc}

08015826 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015826:	b590      	push	{r4, r7, lr}
 8015828:	b089      	sub	sp, #36	; 0x24
 801582a:	af02      	add	r7, sp, #8
 801582c:	60f8      	str	r0, [r7, #12]
 801582e:	60b9      	str	r1, [r7, #8]
 8015830:	607a      	str	r2, [r7, #4]
 8015832:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015834:	f88d 4000 	strb.w	r4, [sp]
 8015838:	683b      	ldr	r3, [r7, #0]
 801583a:	687a      	ldr	r2, [r7, #4]
 801583c:	68b9      	ldr	r1, [r7, #8]
 801583e:	68f8      	ldr	r0, [r7, #12]
 8015840:	f000 fb35 	bl	8015eae <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015844:	4603      	mov	r3, r0
      }
 8015846:	4618      	mov	r0, r3
 8015848:	371c      	adds	r7, #28
 801584a:	46bd      	mov	sp, r7
 801584c:	bd90      	pop	{r4, r7, pc}

0801584e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801584e:	b480      	push	{r7}
 8015850:	b083      	sub	sp, #12
 8015852:	af00      	add	r7, sp, #0
 8015854:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8015856:	687b      	ldr	r3, [r7, #4]
 8015858:	4618      	mov	r0, r3
 801585a:	370c      	adds	r7, #12
 801585c:	46bd      	mov	sp, r7
 801585e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015862:	4770      	bx	lr

08015864 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8015864:	b580      	push	{r7, lr}
 8015866:	b084      	sub	sp, #16
 8015868:	af00      	add	r7, sp, #0
 801586a:	6078      	str	r0, [r7, #4]
 801586c:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801586e:	687b      	ldr	r3, [r7, #4]
 8015870:	681a      	ldr	r2, [r3, #0]
 8015872:	683b      	ldr	r3, [r7, #0]
 8015874:	009b      	lsls	r3, r3, #2
 8015876:	425b      	negs	r3, r3
 8015878:	4413      	add	r3, r2
 801587a:	60fb      	str	r3, [r7, #12]
 801587c:	f107 020c 	add.w	r2, r7, #12
 8015880:	f107 0308 	add.w	r3, r7, #8
 8015884:	4611      	mov	r1, r2
 8015886:	4618      	mov	r0, r3
 8015888:	f7ff ff51 	bl	801572e <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801588c:	68bb      	ldr	r3, [r7, #8]
 801588e:	4618      	mov	r0, r3
 8015890:	3710      	adds	r7, #16
 8015892:	46bd      	mov	sp, r7
 8015894:	bd80      	pop	{r7, pc}

08015896 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8015896:	b480      	push	{r7}
 8015898:	b083      	sub	sp, #12
 801589a:	af00      	add	r7, sp, #0
 801589c:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801589e:	687b      	ldr	r3, [r7, #4]
 80158a0:	681b      	ldr	r3, [r3, #0]
 80158a2:	4618      	mov	r0, r3
 80158a4:	370c      	adds	r7, #12
 80158a6:	46bd      	mov	sp, r7
 80158a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80158ac:	4770      	bx	lr

080158ae <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80158ae:	b590      	push	{r4, r7, lr}
 80158b0:	b085      	sub	sp, #20
 80158b2:	af00      	add	r7, sp, #0
 80158b4:	60f8      	str	r0, [r7, #12]
 80158b6:	60b9      	str	r1, [r7, #8]
 80158b8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80158ba:	6878      	ldr	r0, [r7, #4]
 80158bc:	f7ff fc71 	bl	80151a2 <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 80158c0:	4603      	mov	r3, r0
 80158c2:	681c      	ldr	r4, [r3, #0]
 80158c4:	68bb      	ldr	r3, [r7, #8]
 80158c6:	4619      	mov	r1, r3
 80158c8:	2004      	movs	r0, #4
 80158ca:	f7eb fbc6 	bl	800105a <_ZnwjPv>
 80158ce:	4603      	mov	r3, r0
 80158d0:	601c      	str	r4, [r3, #0]
 80158d2:	bf00      	nop
 80158d4:	3714      	adds	r7, #20
 80158d6:	46bd      	mov	sp, r7
 80158d8:	bd90      	pop	{r4, r7, pc}

080158da <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 80158da:	b590      	push	{r4, r7, lr}
 80158dc:	b087      	sub	sp, #28
 80158de:	af00      	add	r7, sp, #0
 80158e0:	60f8      	str	r0, [r7, #12]
 80158e2:	60b9      	str	r1, [r7, #8]
 80158e4:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 80158e6:	68f8      	ldr	r0, [r7, #12]
 80158e8:	f000 faf3 	bl	8015ed2 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 80158ec:	4604      	mov	r4, r0
 80158ee:	68f8      	ldr	r0, [r7, #12]
 80158f0:	f7ec ff8d 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 80158f4:	4603      	mov	r3, r0
 80158f6:	1ae2      	subs	r2, r4, r3
 80158f8:	68bb      	ldr	r3, [r7, #8]
 80158fa:	429a      	cmp	r2, r3
 80158fc:	bf34      	ite	cc
 80158fe:	2301      	movcc	r3, #1
 8015900:	2300      	movcs	r3, #0
 8015902:	b2db      	uxtb	r3, r3
 8015904:	2b00      	cmp	r3, #0
 8015906:	d002      	beq.n	801590e <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8015908:	6878      	ldr	r0, [r7, #4]
 801590a:	f00d fd96 	bl	802343a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801590e:	68f8      	ldr	r0, [r7, #12]
 8015910:	f7ec ff7d 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 8015914:	4604      	mov	r4, r0
 8015916:	68f8      	ldr	r0, [r7, #12]
 8015918:	f7ec ff79 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 801591c:	4603      	mov	r3, r0
 801591e:	613b      	str	r3, [r7, #16]
 8015920:	f107 0208 	add.w	r2, r7, #8
 8015924:	f107 0310 	add.w	r3, r7, #16
 8015928:	4611      	mov	r1, r2
 801592a:	4618      	mov	r0, r3
 801592c:	f000 faab 	bl	8015e86 <_ZSt3maxIjERKT_S2_S2_>
 8015930:	4603      	mov	r3, r0
 8015932:	681b      	ldr	r3, [r3, #0]
 8015934:	4423      	add	r3, r4
 8015936:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8015938:	68f8      	ldr	r0, [r7, #12]
 801593a:	f7ec ff68 	bl	800280e <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 801593e:	4602      	mov	r2, r0
 8015940:	697b      	ldr	r3, [r7, #20]
 8015942:	4293      	cmp	r3, r2
 8015944:	d306      	bcc.n	8015954 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015946:	68f8      	ldr	r0, [r7, #12]
 8015948:	f000 fac3 	bl	8015ed2 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 801594c:	4602      	mov	r2, r0
 801594e:	697b      	ldr	r3, [r7, #20]
 8015950:	4293      	cmp	r3, r2
 8015952:	d904      	bls.n	801595e <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x84>
 8015954:	68f8      	ldr	r0, [r7, #12]
 8015956:	f000 fabc 	bl	8015ed2 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 801595a:	4603      	mov	r3, r0
 801595c:	e000      	b.n	8015960 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x86>
 801595e:	697b      	ldr	r3, [r7, #20]
      }
 8015960:	4618      	mov	r0, r3
 8015962:	371c      	adds	r7, #28
 8015964:	46bd      	mov	sp, r7
 8015966:	bd90      	pop	{r4, r7, pc}

08015968 <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8015968:	b580      	push	{r7, lr}
 801596a:	b084      	sub	sp, #16
 801596c:	af00      	add	r7, sp, #0
 801596e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8015970:	687a      	ldr	r2, [r7, #4]
 8015972:	f107 030c 	add.w	r3, r7, #12
 8015976:	4611      	mov	r1, r2
 8015978:	4618      	mov	r0, r3
 801597a:	f7ef fad4 	bl	8004f26 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801597e:	68fb      	ldr	r3, [r7, #12]
 8015980:	4618      	mov	r0, r3
 8015982:	3710      	adds	r7, #16
 8015984:	46bd      	mov	sp, r7
 8015986:	bd80      	pop	{r7, pc}

08015988 <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015988:	b590      	push	{r4, r7, lr}
 801598a:	b083      	sub	sp, #12
 801598c:	af00      	add	r7, sp, #0
 801598e:	6078      	str	r0, [r7, #4]
 8015990:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015992:	6878      	ldr	r0, [r7, #4]
 8015994:	f000 f835 	bl	8015a02 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 8015998:	4603      	mov	r3, r0
 801599a:	681c      	ldr	r4, [r3, #0]
 801599c:	6838      	ldr	r0, [r7, #0]
 801599e:	f000 f830 	bl	8015a02 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 80159a2:	4603      	mov	r3, r0
 80159a4:	681b      	ldr	r3, [r3, #0]
 80159a6:	1ae3      	subs	r3, r4, r3
 80159a8:	109b      	asrs	r3, r3, #2
 80159aa:	4618      	mov	r0, r3
 80159ac:	370c      	adds	r7, #12
 80159ae:	46bd      	mov	sp, r7
 80159b0:	bd90      	pop	{r4, r7, pc}

080159b2 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 80159b2:	b580      	push	{r7, lr}
 80159b4:	b082      	sub	sp, #8
 80159b6:	af00      	add	r7, sp, #0
 80159b8:	6078      	str	r0, [r7, #4]
 80159ba:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 80159bc:	683b      	ldr	r3, [r7, #0]
 80159be:	2b00      	cmp	r3, #0
 80159c0:	d006      	beq.n	80159d0 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x1e>
 80159c2:	687b      	ldr	r3, [r7, #4]
 80159c4:	6839      	ldr	r1, [r7, #0]
 80159c6:	4618      	mov	r0, r3
 80159c8:	f000 fa94 	bl	8015ef4 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>
 80159cc:	4603      	mov	r3, r0
 80159ce:	e000      	b.n	80159d2 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x20>
 80159d0:	2300      	movs	r3, #0
      }
 80159d2:	4618      	mov	r0, r3
 80159d4:	3708      	adds	r7, #8
 80159d6:	46bd      	mov	sp, r7
 80159d8:	bd80      	pop	{r7, pc}

080159da <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 80159da:	b590      	push	{r4, r7, lr}
 80159dc:	b089      	sub	sp, #36	; 0x24
 80159de:	af02      	add	r7, sp, #8
 80159e0:	60f8      	str	r0, [r7, #12]
 80159e2:	60b9      	str	r1, [r7, #8]
 80159e4:	607a      	str	r2, [r7, #4]
 80159e6:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 80159e8:	f88d 4000 	strb.w	r4, [sp]
 80159ec:	683b      	ldr	r3, [r7, #0]
 80159ee:	687a      	ldr	r2, [r7, #4]
 80159f0:	68b9      	ldr	r1, [r7, #8]
 80159f2:	68f8      	ldr	r0, [r7, #12]
 80159f4:	f000 fa8d 	bl	8015f12 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 80159f8:	4603      	mov	r3, r0
      }
 80159fa:	4618      	mov	r0, r3
 80159fc:	371c      	adds	r7, #28
 80159fe:	46bd      	mov	sp, r7
 8015a00:	bd90      	pop	{r4, r7, pc}

08015a02 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8015a02:	b480      	push	{r7}
 8015a04:	b083      	sub	sp, #12
 8015a06:	af00      	add	r7, sp, #0
 8015a08:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8015a0a:	687b      	ldr	r3, [r7, #4]
 8015a0c:	4618      	mov	r0, r3
 8015a0e:	370c      	adds	r7, #12
 8015a10:	46bd      	mov	sp, r7
 8015a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a16:	4770      	bx	lr

08015a18 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015a18:	b580      	push	{r7, lr}
 8015a1a:	b084      	sub	sp, #16
 8015a1c:	af00      	add	r7, sp, #0
 8015a1e:	60f8      	str	r0, [r7, #12]
 8015a20:	60b9      	str	r1, [r7, #8]
 8015a22:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8015a24:	68b8      	ldr	r0, [r7, #8]
 8015a26:	f00d fc27 	bl	8023278 <_ZdlPv>
      }
 8015a2a:	3710      	adds	r7, #16
 8015a2c:	46bd      	mov	sp, r7
 8015a2e:	bd80      	pop	{r7, pc}

08015a30 <_ZSt9addressofIP13Function_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a30:	b580      	push	{r7, lr}
 8015a32:	b082      	sub	sp, #8
 8015a34:	af00      	add	r7, sp, #0
 8015a36:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a38:	6878      	ldr	r0, [r7, #4]
 8015a3a:	f7f6 f92a 	bl	800bc92 <_ZSt11__addressofIP13Function_callEPT_RS2_>
 8015a3e:	4603      	mov	r3, r0
 8015a40:	4618      	mov	r0, r3
 8015a42:	3708      	adds	r7, #8
 8015a44:	46bd      	mov	sp, r7
 8015a46:	bd80      	pop	{r7, pc}

08015a48 <_ZSt9addressofIP10AssignmentEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a48:	b580      	push	{r7, lr}
 8015a4a:	b082      	sub	sp, #8
 8015a4c:	af00      	add	r7, sp, #0
 8015a4e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a50:	6878      	ldr	r0, [r7, #4]
 8015a52:	f000 fa70 	bl	8015f36 <_ZSt11__addressofIP10AssignmentEPT_RS2_>
 8015a56:	4603      	mov	r3, r0
 8015a58:	4618      	mov	r0, r3
 8015a5a:	3708      	adds	r7, #8
 8015a5c:	46bd      	mov	sp, r7
 8015a5e:	bd80      	pop	{r7, pc}

08015a60 <_ZSt9addressofIP11Method_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a60:	b580      	push	{r7, lr}
 8015a62:	b082      	sub	sp, #8
 8015a64:	af00      	add	r7, sp, #0
 8015a66:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a68:	6878      	ldr	r0, [r7, #4]
 8015a6a:	f000 fa6f 	bl	8015f4c <_ZSt11__addressofIP11Method_callEPT_RS2_>
 8015a6e:	4603      	mov	r3, r0
 8015a70:	4618      	mov	r0, r3
 8015a72:	3708      	adds	r7, #8
 8015a74:	46bd      	mov	sp, r7
 8015a76:	bd80      	pop	{r7, pc}

08015a78 <_ZSt9addressofIP15While_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a78:	b580      	push	{r7, lr}
 8015a7a:	b082      	sub	sp, #8
 8015a7c:	af00      	add	r7, sp, #0
 8015a7e:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a80:	6878      	ldr	r0, [r7, #4]
 8015a82:	f000 fa6e 	bl	8015f62 <_ZSt11__addressofIP15While_statementEPT_RS2_>
 8015a86:	4603      	mov	r3, r0
 8015a88:	4618      	mov	r0, r3
 8015a8a:	3708      	adds	r7, #8
 8015a8c:	46bd      	mov	sp, r7
 8015a8e:	bd80      	pop	{r7, pc}

08015a90 <_ZSt9addressofIP12If_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8015a90:	b580      	push	{r7, lr}
 8015a92:	b082      	sub	sp, #8
 8015a94:	af00      	add	r7, sp, #0
 8015a96:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8015a98:	6878      	ldr	r0, [r7, #4]
 8015a9a:	f000 fa6d 	bl	8015f78 <_ZSt11__addressofIP12If_statementEPT_RS2_>
 8015a9e:	4603      	mov	r3, r0
 8015aa0:	4618      	mov	r0, r3
 8015aa2:	3708      	adds	r7, #8
 8015aa4:	46bd      	mov	sp, r7
 8015aa6:	bd80      	pop	{r7, pc}

08015aa8 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8015aa8:	b580      	push	{r7, lr}
 8015aaa:	b084      	sub	sp, #16
 8015aac:	af00      	add	r7, sp, #0
 8015aae:	60f8      	str	r0, [r7, #12]
 8015ab0:	60b9      	str	r1, [r7, #8]
 8015ab2:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8015ab4:	68b8      	ldr	r0, [r7, #8]
 8015ab6:	f00d fbdf 	bl	8023278 <_ZdlPv>
      }
 8015aba:	3710      	adds	r7, #16
 8015abc:	46bd      	mov	sp, r7
 8015abe:	bd80      	pop	{r7, pc}

08015ac0 <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8015ac0:	b590      	push	{r4, r7, lr}
 8015ac2:	b085      	sub	sp, #20
 8015ac4:	af00      	add	r7, sp, #0
 8015ac6:	60f8      	str	r0, [r7, #12]
 8015ac8:	60b9      	str	r1, [r7, #8]
 8015aca:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8015acc:	6878      	ldr	r0, [r7, #4]
 8015ace:	f7ff fcea 	bl	80154a6 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 8015ad2:	4603      	mov	r3, r0
 8015ad4:	681c      	ldr	r4, [r3, #0]
 8015ad6:	68bb      	ldr	r3, [r7, #8]
 8015ad8:	4619      	mov	r1, r3
 8015ada:	2004      	movs	r0, #4
 8015adc:	f7eb fabd 	bl	800105a <_ZnwjPv>
 8015ae0:	4603      	mov	r3, r0
 8015ae2:	601c      	str	r4, [r3, #0]
 8015ae4:	bf00      	nop
 8015ae6:	3714      	adds	r7, #20
 8015ae8:	46bd      	mov	sp, r7
 8015aea:	bd90      	pop	{r4, r7, pc}

08015aec <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8015aec:	b590      	push	{r4, r7, lr}
 8015aee:	b087      	sub	sp, #28
 8015af0:	af00      	add	r7, sp, #0
 8015af2:	60f8      	str	r0, [r7, #12]
 8015af4:	60b9      	str	r1, [r7, #8]
 8015af6:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 8015af8:	68f8      	ldr	r0, [r7, #12]
 8015afa:	f000 fa48 	bl	8015f8e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 8015afe:	4604      	mov	r4, r0
 8015b00:	68f8      	ldr	r0, [r7, #12]
 8015b02:	f000 fa55 	bl	8015fb0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b06:	4603      	mov	r3, r0
 8015b08:	1ae2      	subs	r2, r4, r3
 8015b0a:	68bb      	ldr	r3, [r7, #8]
 8015b0c:	429a      	cmp	r2, r3
 8015b0e:	bf34      	ite	cc
 8015b10:	2301      	movcc	r3, #1
 8015b12:	2300      	movcs	r3, #0
 8015b14:	b2db      	uxtb	r3, r3
 8015b16:	2b00      	cmp	r3, #0
 8015b18:	d002      	beq.n	8015b20 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8015b1a:	6878      	ldr	r0, [r7, #4]
 8015b1c:	f00d fc8d 	bl	802343a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8015b20:	68f8      	ldr	r0, [r7, #12]
 8015b22:	f000 fa45 	bl	8015fb0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b26:	4604      	mov	r4, r0
 8015b28:	68f8      	ldr	r0, [r7, #12]
 8015b2a:	f000 fa41 	bl	8015fb0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b2e:	4603      	mov	r3, r0
 8015b30:	613b      	str	r3, [r7, #16]
 8015b32:	f107 0208 	add.w	r2, r7, #8
 8015b36:	f107 0310 	add.w	r3, r7, #16
 8015b3a:	4611      	mov	r1, r2
 8015b3c:	4618      	mov	r0, r3
 8015b3e:	f000 f9a2 	bl	8015e86 <_ZSt3maxIjERKT_S2_S2_>
 8015b42:	4603      	mov	r3, r0
 8015b44:	681b      	ldr	r3, [r3, #0]
 8015b46:	4423      	add	r3, r4
 8015b48:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8015b4a:	68f8      	ldr	r0, [r7, #12]
 8015b4c:	f000 fa30 	bl	8015fb0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 8015b50:	4602      	mov	r2, r0
 8015b52:	697b      	ldr	r3, [r7, #20]
 8015b54:	4293      	cmp	r3, r2
 8015b56:	d306      	bcc.n	8015b66 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015b58:	68f8      	ldr	r0, [r7, #12]
 8015b5a:	f000 fa18 	bl	8015f8e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 8015b5e:	4602      	mov	r2, r0
 8015b60:	697b      	ldr	r3, [r7, #20]
 8015b62:	4293      	cmp	r3, r2
 8015b64:	d904      	bls.n	8015b70 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x84>
 8015b66:	68f8      	ldr	r0, [r7, #12]
 8015b68:	f000 fa11 	bl	8015f8e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 8015b6c:	4603      	mov	r3, r0
 8015b6e:	e000      	b.n	8015b72 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x86>
 8015b70:	697b      	ldr	r3, [r7, #20]
      }
 8015b72:	4618      	mov	r0, r3
 8015b74:	371c      	adds	r7, #28
 8015b76:	46bd      	mov	sp, r7
 8015b78:	bd90      	pop	{r4, r7, pc}

08015b7a <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015b7a:	b590      	push	{r4, r7, lr}
 8015b7c:	b083      	sub	sp, #12
 8015b7e:	af00      	add	r7, sp, #0
 8015b80:	6078      	str	r0, [r7, #4]
 8015b82:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015b84:	6878      	ldr	r0, [r7, #4]
 8015b86:	f7ed ff73 	bl	8003a70 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015b8a:	4603      	mov	r3, r0
 8015b8c:	681c      	ldr	r4, [r3, #0]
 8015b8e:	6838      	ldr	r0, [r7, #0]
 8015b90:	f7ed ff6e 	bl	8003a70 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 8015b94:	4603      	mov	r3, r0
 8015b96:	681b      	ldr	r3, [r3, #0]
 8015b98:	1ae3      	subs	r3, r4, r3
 8015b9a:	109b      	asrs	r3, r3, #2
 8015b9c:	4618      	mov	r0, r3
 8015b9e:	370c      	adds	r7, #12
 8015ba0:	46bd      	mov	sp, r7
 8015ba2:	bd90      	pop	{r4, r7, pc}

08015ba4 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8015ba4:	b580      	push	{r7, lr}
 8015ba6:	b082      	sub	sp, #8
 8015ba8:	af00      	add	r7, sp, #0
 8015baa:	6078      	str	r0, [r7, #4]
 8015bac:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8015bae:	683b      	ldr	r3, [r7, #0]
 8015bb0:	2b00      	cmp	r3, #0
 8015bb2:	d006      	beq.n	8015bc2 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x1e>
 8015bb4:	687b      	ldr	r3, [r7, #4]
 8015bb6:	6839      	ldr	r1, [r7, #0]
 8015bb8:	4618      	mov	r0, r3
 8015bba:	f000 fa09 	bl	8015fd0 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>
 8015bbe:	4603      	mov	r3, r0
 8015bc0:	e000      	b.n	8015bc4 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x20>
 8015bc2:	2300      	movs	r3, #0
      }
 8015bc4:	4618      	mov	r0, r3
 8015bc6:	3708      	adds	r7, #8
 8015bc8:	46bd      	mov	sp, r7
 8015bca:	bd80      	pop	{r7, pc}

08015bcc <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015bcc:	b590      	push	{r4, r7, lr}
 8015bce:	b089      	sub	sp, #36	; 0x24
 8015bd0:	af02      	add	r7, sp, #8
 8015bd2:	60f8      	str	r0, [r7, #12]
 8015bd4:	60b9      	str	r1, [r7, #8]
 8015bd6:	607a      	str	r2, [r7, #4]
 8015bd8:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015bda:	f88d 4000 	strb.w	r4, [sp]
 8015bde:	683b      	ldr	r3, [r7, #0]
 8015be0:	687a      	ldr	r2, [r7, #4]
 8015be2:	68b9      	ldr	r1, [r7, #8]
 8015be4:	68f8      	ldr	r0, [r7, #12]
 8015be6:	f000 fa02 	bl	8015fee <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015bea:	4603      	mov	r3, r0
      }
 8015bec:	4618      	mov	r0, r3
 8015bee:	371c      	adds	r7, #28
 8015bf0:	46bd      	mov	sp, r7
 8015bf2:	bd90      	pop	{r4, r7, pc}

08015bf4 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8015bf4:	b580      	push	{r7, lr}
 8015bf6:	b084      	sub	sp, #16
 8015bf8:	af00      	add	r7, sp, #0
 8015bfa:	6078      	str	r0, [r7, #4]
 8015bfc:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8015bfe:	687b      	ldr	r3, [r7, #4]
 8015c00:	681a      	ldr	r2, [r3, #0]
 8015c02:	683b      	ldr	r3, [r7, #0]
 8015c04:	009b      	lsls	r3, r3, #2
 8015c06:	425b      	negs	r3, r3
 8015c08:	4413      	add	r3, r2
 8015c0a:	60fb      	str	r3, [r7, #12]
 8015c0c:	f107 020c 	add.w	r2, r7, #12
 8015c10:	f107 0308 	add.w	r3, r7, #8
 8015c14:	4611      	mov	r1, r2
 8015c16:	4618      	mov	r0, r3
 8015c18:	f7ed ff1a 	bl	8003a50 <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015c1c:	68bb      	ldr	r3, [r7, #8]
 8015c1e:	4618      	mov	r0, r3
 8015c20:	3710      	adds	r7, #16
 8015c22:	46bd      	mov	sp, r7
 8015c24:	bd80      	pop	{r7, pc}

08015c26 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015c26:	b5b0      	push	{r4, r5, r7, lr}
 8015c28:	b084      	sub	sp, #16
 8015c2a:	af00      	add	r7, sp, #0
 8015c2c:	60f8      	str	r0, [r7, #12]
 8015c2e:	60b9      	str	r1, [r7, #8]
 8015c30:	713a      	strb	r2, [r7, #4]
 8015c32:	68fb      	ldr	r3, [r7, #12]
 8015c34:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015c36:	7e1b      	ldrb	r3, [r3, #24]
 8015c38:	461c      	mov	r4, r3
 8015c3a:	1d3b      	adds	r3, r7, #4
 8015c3c:	4618      	mov	r0, r3
 8015c3e:	f7f0 f9e3 	bl	8006008 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 8015c42:	4603      	mov	r3, r0
 8015c44:	429c      	cmp	r4, r3
 8015c46:	bf0c      	ite	eq
 8015c48:	2301      	moveq	r3, #1
 8015c4a:	2300      	movne	r3, #0
 8015c4c:	b2db      	uxtb	r3, r3
 8015c4e:	2b00      	cmp	r3, #0
 8015c50:	d00e      	beq.n	8015c70 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015c52:	68b8      	ldr	r0, [r7, #8]
 8015c54:	f7f1 fa93 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8015c58:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015c5a:	68fb      	ldr	r3, [r7, #12]
 8015c5c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015c5e:	4618      	mov	r0, r3
 8015c60:	f000 f819 	bl	8015c96 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015c64:	4603      	mov	r3, r0
 8015c66:	4621      	mov	r1, r4
 8015c68:	4618      	mov	r0, r3
 8015c6a:	f00d fdc6 	bl	80237fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 8015c6e:	e00d      	b.n	8015c8c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015c70:	68fb      	ldr	r3, [r7, #12]
 8015c72:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015c74:	4618      	mov	r0, r3
 8015c76:	f7fe fd59 	bl	801472c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015c7a:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015c7c:	68b8      	ldr	r0, [r7, #8]
 8015c7e:	f7f1 fa7e 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8015c82:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015c84:	4619      	mov	r1, r3
 8015c86:	4620      	mov	r0, r4
 8015c88:	f7fa fb42 	bl	8010310 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015c8c:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015c8e:	4618      	mov	r0, r3
 8015c90:	3710      	adds	r7, #16
 8015c92:	46bd      	mov	sp, r7
 8015c94:	bdb0      	pop	{r4, r5, r7, pc}

08015c96 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015c96:	b590      	push	{r4, r7, lr}
 8015c98:	b083      	sub	sp, #12
 8015c9a:	af00      	add	r7, sp, #0
 8015c9c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015c9e:	6878      	ldr	r0, [r7, #4]
 8015ca0:	f000 f9b7 	bl	8016012 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015ca4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015ca6:	4619      	mov	r1, r3
 8015ca8:	4620      	mov	r0, r4
 8015caa:	f7fa faf3 	bl	8010294 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8015cae:	4603      	mov	r3, r0
    }
 8015cb0:	4618      	mov	r0, r3
 8015cb2:	370c      	adds	r7, #12
 8015cb4:	46bd      	mov	sp, r7
 8015cb6:	bd90      	pop	{r4, r7, pc}

08015cb8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015cb8:	b5b0      	push	{r4, r5, r7, lr}
 8015cba:	b084      	sub	sp, #16
 8015cbc:	af00      	add	r7, sp, #0
 8015cbe:	60f8      	str	r0, [r7, #12]
 8015cc0:	60b9      	str	r1, [r7, #8]
 8015cc2:	713a      	strb	r2, [r7, #4]
 8015cc4:	68fb      	ldr	r3, [r7, #12]
 8015cc6:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015cc8:	7e1b      	ldrb	r3, [r3, #24]
 8015cca:	461c      	mov	r4, r3
 8015ccc:	1d3b      	adds	r3, r7, #4
 8015cce:	4618      	mov	r0, r3
 8015cd0:	f7f0 f9ec 	bl	80060ac <_ZNKSt17integral_constantIjLj1EEcvjEv>
 8015cd4:	4603      	mov	r3, r0
 8015cd6:	429c      	cmp	r4, r3
 8015cd8:	bf0c      	ite	eq
 8015cda:	2301      	moveq	r3, #1
 8015cdc:	2300      	movne	r3, #0
 8015cde:	b2db      	uxtb	r3, r3
 8015ce0:	2b00      	cmp	r3, #0
 8015ce2:	d00c      	beq.n	8015cfe <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015ce4:	68b8      	ldr	r0, [r7, #8]
 8015ce6:	f7f1 f9de 	bl	80070a6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8015cea:	4603      	mov	r3, r0
 8015cec:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015cee:	68fb      	ldr	r3, [r7, #12]
 8015cf0:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015cf2:	4618      	mov	r0, r3
 8015cf4:	f000 f816 	bl	8015d24 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015cf8:	4603      	mov	r3, r0
 8015cfa:	601c      	str	r4, [r3, #0]
	    return {};
 8015cfc:	e00d      	b.n	8015d1a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015cfe:	68fb      	ldr	r3, [r7, #12]
 8015d00:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015d02:	4618      	mov	r0, r3
 8015d04:	f7fe fd12 	bl	801472c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015d08:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015d0a:	68b8      	ldr	r0, [r7, #8]
 8015d0c:	f7f1 f9cb 	bl	80070a6 <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 8015d10:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015d12:	4619      	mov	r1, r3
 8015d14:	4620      	mov	r0, r4
 8015d16:	f7fa fb65 	bl	80103e4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015d1a:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d1c:	4618      	mov	r0, r3
 8015d1e:	3710      	adds	r7, #16
 8015d20:	46bd      	mov	sp, r7
 8015d22:	bdb0      	pop	{r4, r5, r7, pc}

08015d24 <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015d24:	b590      	push	{r4, r7, lr}
 8015d26:	b083      	sub	sp, #12
 8015d28:	af00      	add	r7, sp, #0
 8015d2a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015d2c:	6878      	ldr	r0, [r7, #4]
 8015d2e:	f000 f970 	bl	8016012 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015d32:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015d34:	4619      	mov	r1, r3
 8015d36:	4620      	mov	r0, r4
 8015d38:	f7fa fb14 	bl	8010364 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015d3c:	4603      	mov	r3, r0
    }
 8015d3e:	4618      	mov	r0, r3
 8015d40:	370c      	adds	r7, #12
 8015d42:	46bd      	mov	sp, r7
 8015d44:	bd90      	pop	{r4, r7, pc}

08015d46 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d46:	b5b0      	push	{r4, r5, r7, lr}
 8015d48:	b084      	sub	sp, #16
 8015d4a:	af00      	add	r7, sp, #0
 8015d4c:	60f8      	str	r0, [r7, #12]
 8015d4e:	60b9      	str	r1, [r7, #8]
 8015d50:	713a      	strb	r2, [r7, #4]
 8015d52:	68fb      	ldr	r3, [r7, #12]
 8015d54:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015d56:	7e1b      	ldrb	r3, [r3, #24]
 8015d58:	461c      	mov	r4, r3
 8015d5a:	1d3b      	adds	r3, r7, #4
 8015d5c:	4618      	mov	r0, r3
 8015d5e:	f7f0 f9f8 	bl	8006152 <_ZNKSt17integral_constantIjLj2EEcvjEv>
 8015d62:	4603      	mov	r3, r0
 8015d64:	429c      	cmp	r4, r3
 8015d66:	bf0c      	ite	eq
 8015d68:	2301      	moveq	r3, #1
 8015d6a:	2300      	movne	r3, #0
 8015d6c:	b2db      	uxtb	r3, r3
 8015d6e:	2b00      	cmp	r3, #0
 8015d70:	d00c      	beq.n	8015d8c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015d72:	68b8      	ldr	r0, [r7, #8]
 8015d74:	f7f1 f9bb 	bl	80070ee <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8015d78:	4603      	mov	r3, r0
 8015d7a:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d7c:	68fb      	ldr	r3, [r7, #12]
 8015d7e:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015d80:	4618      	mov	r0, r3
 8015d82:	f000 f816 	bl	8015db2 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015d86:	4603      	mov	r3, r0
 8015d88:	601c      	str	r4, [r3, #0]
	    return {};
 8015d8a:	e00d      	b.n	8015da8 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015d8c:	68fb      	ldr	r3, [r7, #12]
 8015d8e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015d90:	4618      	mov	r0, r3
 8015d92:	f7fe fccb 	bl	801472c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015d96:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015d98:	68b8      	ldr	r0, [r7, #8]
 8015d9a:	f7f1 f9a8 	bl	80070ee <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 8015d9e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015da0:	4619      	mov	r1, r3
 8015da2:	4620      	mov	r0, r4
 8015da4:	f7fa fb9a 	bl	80104dc <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015da8:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015daa:	4618      	mov	r0, r3
 8015dac:	3710      	adds	r7, #16
 8015dae:	46bd      	mov	sp, r7
 8015db0:	bdb0      	pop	{r4, r5, r7, pc}

08015db2 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015db2:	b590      	push	{r4, r7, lr}
 8015db4:	b083      	sub	sp, #12
 8015db6:	af00      	add	r7, sp, #0
 8015db8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015dba:	6878      	ldr	r0, [r7, #4]
 8015dbc:	f000 f929 	bl	8016012 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015dc0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015dc2:	4619      	mov	r1, r3
 8015dc4:	4620      	mov	r0, r4
 8015dc6:	f7fa fb49 	bl	801045c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015dca:	4603      	mov	r3, r0
    }
 8015dcc:	4618      	mov	r0, r3
 8015dce:	370c      	adds	r7, #12
 8015dd0:	46bd      	mov	sp, r7
 8015dd2:	bd90      	pop	{r4, r7, pc}

08015dd4 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015dd4:	b5b0      	push	{r4, r5, r7, lr}
 8015dd6:	b084      	sub	sp, #16
 8015dd8:	af00      	add	r7, sp, #0
 8015dda:	60f8      	str	r0, [r7, #12]
 8015ddc:	60b9      	str	r1, [r7, #8]
 8015dde:	713a      	strb	r2, [r7, #4]
 8015de0:	68fb      	ldr	r3, [r7, #12]
 8015de2:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 8015de4:	7e1b      	ldrb	r3, [r3, #24]
 8015de6:	461c      	mov	r4, r3
 8015de8:	1d3b      	adds	r3, r7, #4
 8015dea:	4618      	mov	r0, r3
 8015dec:	f7f0 fa10 	bl	8006210 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 8015df0:	4603      	mov	r3, r0
 8015df2:	429c      	cmp	r4, r3
 8015df4:	bf0c      	ite	eq
 8015df6:	2301      	moveq	r3, #1
 8015df8:	2300      	movne	r3, #0
 8015dfa:	b2db      	uxtb	r3, r3
 8015dfc:	2b00      	cmp	r3, #0
 8015dfe:	d00d      	beq.n	8015e1c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015e00:	68b8      	ldr	r0, [r7, #8]
 8015e02:	f7f1 f998 	bl	8007136 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8015e06:	4603      	mov	r3, r0
 8015e08:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e0a:	68fb      	ldr	r3, [r7, #12]
 8015e0c:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 8015e0e:	4618      	mov	r0, r3
 8015e10:	f000 f817 	bl	8015e42 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 8015e14:	4603      	mov	r3, r0
 8015e16:	4622      	mov	r2, r4
 8015e18:	701a      	strb	r2, [r3, #0]
	    return {};
 8015e1a:	e00d      	b.n	8015e38 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e1c:	68fb      	ldr	r3, [r7, #12]
 8015e1e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 8015e20:	4618      	mov	r0, r3
 8015e22:	f7fe fc83 	bl	801472c <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 8015e26:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 8015e28:	68b8      	ldr	r0, [r7, #8]
 8015e2a:	f7f1 f984 	bl	8007136 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 8015e2e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 8015e30:	4619      	mov	r1, r3
 8015e32:	4620      	mov	r0, r4
 8015e34:	f000 f8f8 	bl	8016028 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 8015e38:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 8015e3a:	4618      	mov	r0, r3
 8015e3c:	3710      	adds	r7, #16
 8015e3e:	46bd      	mov	sp, r7
 8015e40:	bdb0      	pop	{r4, r5, r7, pc}

08015e42 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8015e42:	b590      	push	{r4, r7, lr}
 8015e44:	b083      	sub	sp, #12
 8015e46:	af00      	add	r7, sp, #0
 8015e48:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8015e4a:	6878      	ldr	r0, [r7, #4]
 8015e4c:	f000 f8e1 	bl	8016012 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8015e50:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8015e52:	4619      	mov	r1, r3
 8015e54:	4620      	mov	r0, r4
 8015e56:	f7fa ff64 	bl	8010d22 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8015e5a:	4603      	mov	r3, r0
    }
 8015e5c:	4618      	mov	r0, r3
 8015e5e:	370c      	adds	r7, #12
 8015e60:	46bd      	mov	sp, r7
 8015e62:	bd90      	pop	{r4, r7, pc}

08015e64 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015e64:	b580      	push	{r7, lr}
 8015e66:	b082      	sub	sp, #8
 8015e68:	af00      	add	r7, sp, #0
 8015e6a:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015e6c:	687b      	ldr	r3, [r7, #4]
 8015e6e:	4618      	mov	r0, r3
 8015e70:	f7f8 fb23 	bl	800e4ba <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8015e74:	4603      	mov	r3, r0
 8015e76:	4618      	mov	r0, r3
 8015e78:	f000 f8ef 	bl	801605a <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>
 8015e7c:	4603      	mov	r3, r0
 8015e7e:	4618      	mov	r0, r3
 8015e80:	3708      	adds	r7, #8
 8015e82:	46bd      	mov	sp, r7
 8015e84:	bd80      	pop	{r7, pc}

08015e86 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
 8015e86:	b480      	push	{r7}
 8015e88:	b083      	sub	sp, #12
 8015e8a:	af00      	add	r7, sp, #0
 8015e8c:	6078      	str	r0, [r7, #4]
 8015e8e:	6039      	str	r1, [r7, #0]
      if (__a < __b)
 8015e90:	687b      	ldr	r3, [r7, #4]
 8015e92:	681a      	ldr	r2, [r3, #0]
 8015e94:	683b      	ldr	r3, [r7, #0]
 8015e96:	681b      	ldr	r3, [r3, #0]
 8015e98:	429a      	cmp	r2, r3
 8015e9a:	d201      	bcs.n	8015ea0 <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 8015e9c:	683b      	ldr	r3, [r7, #0]
 8015e9e:	e000      	b.n	8015ea2 <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 8015ea0:	687b      	ldr	r3, [r7, #4]
    }
 8015ea2:	4618      	mov	r0, r3
 8015ea4:	370c      	adds	r7, #12
 8015ea6:	46bd      	mov	sp, r7
 8015ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015eac:	4770      	bx	lr

08015eae <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015eae:	b580      	push	{r7, lr}
 8015eb0:	b084      	sub	sp, #16
 8015eb2:	af00      	add	r7, sp, #0
 8015eb4:	60f8      	str	r0, [r7, #12]
 8015eb6:	60b9      	str	r1, [r7, #8]
 8015eb8:	607a      	str	r2, [r7, #4]
 8015eba:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015ebc:	683b      	ldr	r3, [r7, #0]
 8015ebe:	687a      	ldr	r2, [r7, #4]
 8015ec0:	68b9      	ldr	r1, [r7, #8]
 8015ec2:	68f8      	ldr	r0, [r7, #12]
 8015ec4:	f000 f8e3 	bl	801608e <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015ec8:	4603      	mov	r3, r0
      }
 8015eca:	4618      	mov	r0, r3
 8015ecc:	3710      	adds	r7, #16
 8015ece:	46bd      	mov	sp, r7
 8015ed0:	bd80      	pop	{r7, pc}

08015ed2 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015ed2:	b580      	push	{r7, lr}
 8015ed4:	b082      	sub	sp, #8
 8015ed6:	af00      	add	r7, sp, #0
 8015ed8:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015eda:	687b      	ldr	r3, [r7, #4]
 8015edc:	4618      	mov	r0, r3
 8015ede:	f000 f90d 	bl	80160fc <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 8015ee2:	4603      	mov	r3, r0
 8015ee4:	4618      	mov	r0, r3
 8015ee6:	f000 f8ef 	bl	80160c8 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>
 8015eea:	4603      	mov	r3, r0
 8015eec:	4618      	mov	r0, r3
 8015eee:	3708      	adds	r7, #8
 8015ef0:	46bd      	mov	sp, r7
 8015ef2:	bd80      	pop	{r7, pc}

08015ef4 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8015ef4:	b580      	push	{r7, lr}
 8015ef6:	b082      	sub	sp, #8
 8015ef8:	af00      	add	r7, sp, #0
 8015efa:	6078      	str	r0, [r7, #4]
 8015efc:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015efe:	2200      	movs	r2, #0
 8015f00:	6839      	ldr	r1, [r7, #0]
 8015f02:	6878      	ldr	r0, [r7, #4]
 8015f04:	f000 f905 	bl	8016112 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>
 8015f08:	4603      	mov	r3, r0
 8015f0a:	4618      	mov	r0, r3
 8015f0c:	3708      	adds	r7, #8
 8015f0e:	46bd      	mov	sp, r7
 8015f10:	bd80      	pop	{r7, pc}

08015f12 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015f12:	b580      	push	{r7, lr}
 8015f14:	b084      	sub	sp, #16
 8015f16:	af00      	add	r7, sp, #0
 8015f18:	60f8      	str	r0, [r7, #12]
 8015f1a:	60b9      	str	r1, [r7, #8]
 8015f1c:	607a      	str	r2, [r7, #4]
 8015f1e:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015f20:	683b      	ldr	r3, [r7, #0]
 8015f22:	687a      	ldr	r2, [r7, #4]
 8015f24:	68b9      	ldr	r1, [r7, #8]
 8015f26:	68f8      	ldr	r0, [r7, #12]
 8015f28:	f000 f912 	bl	8016150 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015f2c:	4603      	mov	r3, r0
      }
 8015f2e:	4618      	mov	r0, r3
 8015f30:	3710      	adds	r7, #16
 8015f32:	46bd      	mov	sp, r7
 8015f34:	bd80      	pop	{r7, pc}

08015f36 <_ZSt11__addressofIP10AssignmentEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015f36:	b480      	push	{r7}
 8015f38:	b083      	sub	sp, #12
 8015f3a:	af00      	add	r7, sp, #0
 8015f3c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015f3e:	687b      	ldr	r3, [r7, #4]
 8015f40:	4618      	mov	r0, r3
 8015f42:	370c      	adds	r7, #12
 8015f44:	46bd      	mov	sp, r7
 8015f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f4a:	4770      	bx	lr

08015f4c <_ZSt11__addressofIP11Method_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015f4c:	b480      	push	{r7}
 8015f4e:	b083      	sub	sp, #12
 8015f50:	af00      	add	r7, sp, #0
 8015f52:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015f54:	687b      	ldr	r3, [r7, #4]
 8015f56:	4618      	mov	r0, r3
 8015f58:	370c      	adds	r7, #12
 8015f5a:	46bd      	mov	sp, r7
 8015f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f60:	4770      	bx	lr

08015f62 <_ZSt11__addressofIP15While_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015f62:	b480      	push	{r7}
 8015f64:	b083      	sub	sp, #12
 8015f66:	af00      	add	r7, sp, #0
 8015f68:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015f6a:	687b      	ldr	r3, [r7, #4]
 8015f6c:	4618      	mov	r0, r3
 8015f6e:	370c      	adds	r7, #12
 8015f70:	46bd      	mov	sp, r7
 8015f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f76:	4770      	bx	lr

08015f78 <_ZSt11__addressofIP12If_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8015f78:	b480      	push	{r7}
 8015f7a:	b083      	sub	sp, #12
 8015f7c:	af00      	add	r7, sp, #0
 8015f7e:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015f80:	687b      	ldr	r3, [r7, #4]
 8015f82:	4618      	mov	r0, r3
 8015f84:	370c      	adds	r7, #12
 8015f86:	46bd      	mov	sp, r7
 8015f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f8c:	4770      	bx	lr

08015f8e <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015f8e:	b580      	push	{r7, lr}
 8015f90:	b082      	sub	sp, #8
 8015f92:	af00      	add	r7, sp, #0
 8015f94:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015f96:	687b      	ldr	r3, [r7, #4]
 8015f98:	4618      	mov	r0, r3
 8015f9a:	f000 f910 	bl	80161be <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 8015f9e:	4603      	mov	r3, r0
 8015fa0:	4618      	mov	r0, r3
 8015fa2:	f000 f8f2 	bl	801618a <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>
 8015fa6:	4603      	mov	r3, r0
 8015fa8:	4618      	mov	r0, r3
 8015faa:	3708      	adds	r7, #8
 8015fac:	46bd      	mov	sp, r7
 8015fae:	bd80      	pop	{r7, pc}

08015fb0 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8015fb0:	b480      	push	{r7}
 8015fb2:	b083      	sub	sp, #12
 8015fb4:	af00      	add	r7, sp, #0
 8015fb6:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8015fb8:	687b      	ldr	r3, [r7, #4]
 8015fba:	685a      	ldr	r2, [r3, #4]
 8015fbc:	687b      	ldr	r3, [r7, #4]
 8015fbe:	681b      	ldr	r3, [r3, #0]
 8015fc0:	1ad3      	subs	r3, r2, r3
 8015fc2:	109b      	asrs	r3, r3, #2
 8015fc4:	4618      	mov	r0, r3
 8015fc6:	370c      	adds	r7, #12
 8015fc8:	46bd      	mov	sp, r7
 8015fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fce:	4770      	bx	lr

08015fd0 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8015fd0:	b580      	push	{r7, lr}
 8015fd2:	b082      	sub	sp, #8
 8015fd4:	af00      	add	r7, sp, #0
 8015fd6:	6078      	str	r0, [r7, #4]
 8015fd8:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015fda:	2200      	movs	r2, #0
 8015fdc:	6839      	ldr	r1, [r7, #0]
 8015fde:	6878      	ldr	r0, [r7, #4]
 8015fe0:	f000 f8f8 	bl	80161d4 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>
 8015fe4:	4603      	mov	r3, r0
 8015fe6:	4618      	mov	r0, r3
 8015fe8:	3708      	adds	r7, #8
 8015fea:	46bd      	mov	sp, r7
 8015fec:	bd80      	pop	{r7, pc}

08015fee <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015fee:	b580      	push	{r7, lr}
 8015ff0:	b084      	sub	sp, #16
 8015ff2:	af00      	add	r7, sp, #0
 8015ff4:	60f8      	str	r0, [r7, #12]
 8015ff6:	60b9      	str	r1, [r7, #8]
 8015ff8:	607a      	str	r2, [r7, #4]
 8015ffa:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015ffc:	683b      	ldr	r3, [r7, #0]
 8015ffe:	687a      	ldr	r2, [r7, #4]
 8016000:	68b9      	ldr	r1, [r7, #8]
 8016002:	68f8      	ldr	r0, [r7, #12]
 8016004:	f000 f905 	bl	8016212 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>
 8016008:	4603      	mov	r3, r0
      }
 801600a:	4618      	mov	r0, r3
 801600c:	3710      	adds	r7, #16
 801600e:	46bd      	mov	sp, r7
 8016010:	bd80      	pop	{r7, pc}

08016012 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8016012:	b480      	push	{r7}
 8016014:	b083      	sub	sp, #12
 8016016:	af00      	add	r7, sp, #0
 8016018:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801601a:	687b      	ldr	r3, [r7, #4]
 801601c:	4618      	mov	r0, r3
 801601e:	370c      	adds	r7, #12
 8016020:	46bd      	mov	sp, r7
 8016022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016026:	4770      	bx	lr

08016028 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8016028:	b580      	push	{r7, lr}
 801602a:	b082      	sub	sp, #8
 801602c:	af00      	add	r7, sp, #0
 801602e:	6078      	str	r0, [r7, #4]
 8016030:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8016032:	687b      	ldr	r3, [r7, #4]
 8016034:	4618      	mov	r0, r3
 8016036:	f7fa f838 	bl	80100aa <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801603a:	6838      	ldr	r0, [r7, #0]
 801603c:	f7f1 fe0c 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8016040:	4603      	mov	r3, r0
 8016042:	4619      	mov	r1, r3
 8016044:	6878      	ldr	r0, [r7, #4]
 8016046:	f000 f901 	bl	801624c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801604a:	6878      	ldr	r0, [r7, #4]
 801604c:	f000 f91e 	bl	801628c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8016050:	4603      	mov	r3, r0
	}
 8016052:	4618      	mov	r0, r3
 8016054:	3708      	adds	r7, #8
 8016056:	46bd      	mov	sp, r7
 8016058:	bd80      	pop	{r7, pc}

0801605a <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801605a:	b580      	push	{r7, lr}
 801605c:	b084      	sub	sp, #16
 801605e:	af00      	add	r7, sp, #0
 8016060:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8016062:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8016066:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8016068:	6878      	ldr	r0, [r7, #4]
 801606a:	f000 f93f 	bl	80162ec <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>
 801606e:	4603      	mov	r3, r0
 8016070:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8016072:	f107 0208 	add.w	r2, r7, #8
 8016076:	f107 030c 	add.w	r3, r7, #12
 801607a:	4611      	mov	r1, r2
 801607c:	4618      	mov	r0, r3
 801607e:	f000 f921 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 8016082:	4603      	mov	r3, r0
 8016084:	681b      	ldr	r3, [r3, #0]
      }
 8016086:	4618      	mov	r0, r3
 8016088:	3710      	adds	r7, #16
 801608a:	46bd      	mov	sp, r7
 801608c:	bd80      	pop	{r7, pc}

0801608e <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    }

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801608e:	b5b0      	push	{r4, r5, r7, lr}
 8016090:	b084      	sub	sp, #16
 8016092:	af00      	add	r7, sp, #0
 8016094:	60f8      	str	r0, [r7, #12]
 8016096:	60b9      	str	r1, [r7, #8]
 8016098:	607a      	str	r2, [r7, #4]
 801609a:	603b      	str	r3, [r7, #0]
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return __relocate_a_1(std::__niter_base(__first),
 801609c:	68f8      	ldr	r0, [r7, #12]
 801609e:	f7f8 fdd9 	bl	800ec54 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 80160a2:	4604      	mov	r4, r0
 80160a4:	68b8      	ldr	r0, [r7, #8]
 80160a6:	f7f8 fdd5 	bl	800ec54 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 80160aa:	4605      	mov	r5, r0
 80160ac:	6878      	ldr	r0, [r7, #4]
 80160ae:	f7f8 fdd1 	bl	800ec54 <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 80160b2:	4602      	mov	r2, r0
 80160b4:	683b      	ldr	r3, [r7, #0]
 80160b6:	4629      	mov	r1, r5
 80160b8:	4620      	mov	r0, r4
 80160ba:	f000 f923 	bl	8016304 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 80160be:	4603      	mov	r3, r0
			    std::__niter_base(__last),
			    std::__niter_base(__result), __alloc);
    }
 80160c0:	4618      	mov	r0, r3
 80160c2:	3710      	adds	r7, #16
 80160c4:	46bd      	mov	sp, r7
 80160c6:	bdb0      	pop	{r4, r5, r7, pc}

080160c8 <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 80160c8:	b580      	push	{r7, lr}
 80160ca:	b084      	sub	sp, #16
 80160cc:	af00      	add	r7, sp, #0
 80160ce:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 80160d0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 80160d4:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 80160d6:	6878      	ldr	r0, [r7, #4]
 80160d8:	f000 f932 	bl	8016340 <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>
 80160dc:	4603      	mov	r3, r0
 80160de:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 80160e0:	f107 0208 	add.w	r2, r7, #8
 80160e4:	f107 030c 	add.w	r3, r7, #12
 80160e8:	4611      	mov	r1, r2
 80160ea:	4618      	mov	r0, r3
 80160ec:	f000 f8ea 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 80160f0:	4603      	mov	r3, r0
 80160f2:	681b      	ldr	r3, [r3, #0]
      }
 80160f4:	4618      	mov	r0, r3
 80160f6:	3710      	adds	r7, #16
 80160f8:	46bd      	mov	sp, r7
 80160fa:	bd80      	pop	{r7, pc}

080160fc <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 80160fc:	b480      	push	{r7}
 80160fe:	b083      	sub	sp, #12
 8016100:	af00      	add	r7, sp, #0
 8016102:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8016104:	687b      	ldr	r3, [r7, #4]
 8016106:	4618      	mov	r0, r3
 8016108:	370c      	adds	r7, #12
 801610a:	46bd      	mov	sp, r7
 801610c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016110:	4770      	bx	lr

08016112 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8016112:	b580      	push	{r7, lr}
 8016114:	b084      	sub	sp, #16
 8016116:	af00      	add	r7, sp, #0
 8016118:	60f8      	str	r0, [r7, #12]
 801611a:	60b9      	str	r1, [r7, #8]
 801611c:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801611e:	68f8      	ldr	r0, [r7, #12]
 8016120:	f000 f91a 	bl	8016358 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 8016124:	4602      	mov	r2, r0
 8016126:	68bb      	ldr	r3, [r7, #8]
 8016128:	4293      	cmp	r3, r2
 801612a:	bf8c      	ite	hi
 801612c:	2301      	movhi	r3, #1
 801612e:	2300      	movls	r3, #0
 8016130:	b2db      	uxtb	r3, r3
 8016132:	2b00      	cmp	r3, #0
 8016134:	d001      	beq.n	801613a <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8016136:	f00d f977 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801613a:	68bb      	ldr	r3, [r7, #8]
 801613c:	009b      	lsls	r3, r3, #2
 801613e:	4618      	mov	r0, r3
 8016140:	f00d f8ad 	bl	802329e <_Znwj>
 8016144:	4603      	mov	r3, r0
 8016146:	bf00      	nop
      }
 8016148:	4618      	mov	r0, r3
 801614a:	3710      	adds	r7, #16
 801614c:	46bd      	mov	sp, r7
 801614e:	bd80      	pop	{r7, pc}

08016150 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8016150:	b5b0      	push	{r4, r5, r7, lr}
 8016152:	b084      	sub	sp, #16
 8016154:	af00      	add	r7, sp, #0
 8016156:	60f8      	str	r0, [r7, #12]
 8016158:	60b9      	str	r1, [r7, #8]
 801615a:	607a      	str	r2, [r7, #4]
 801615c:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801615e:	68f8      	ldr	r0, [r7, #12]
 8016160:	f000 f906 	bl	8016370 <_ZSt12__niter_baseIPP4BodyET_S3_>
 8016164:	4604      	mov	r4, r0
 8016166:	68b8      	ldr	r0, [r7, #8]
 8016168:	f000 f902 	bl	8016370 <_ZSt12__niter_baseIPP4BodyET_S3_>
 801616c:	4605      	mov	r5, r0
 801616e:	6878      	ldr	r0, [r7, #4]
 8016170:	f000 f8fe 	bl	8016370 <_ZSt12__niter_baseIPP4BodyET_S3_>
 8016174:	4602      	mov	r2, r0
 8016176:	683b      	ldr	r3, [r7, #0]
 8016178:	4629      	mov	r1, r5
 801617a:	4620      	mov	r0, r4
 801617c:	f000 f903 	bl	8016386 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8016180:	4603      	mov	r3, r0
    }
 8016182:	4618      	mov	r0, r3
 8016184:	3710      	adds	r7, #16
 8016186:	46bd      	mov	sp, r7
 8016188:	bdb0      	pop	{r4, r5, r7, pc}

0801618a <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801618a:	b580      	push	{r7, lr}
 801618c:	b084      	sub	sp, #16
 801618e:	af00      	add	r7, sp, #0
 8016190:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8016192:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8016196:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8016198:	6878      	ldr	r0, [r7, #4]
 801619a:	f000 f912 	bl	80163c2 <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>
 801619e:	4603      	mov	r3, r0
 80161a0:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 80161a2:	f107 0208 	add.w	r2, r7, #8
 80161a6:	f107 030c 	add.w	r3, r7, #12
 80161aa:	4611      	mov	r1, r2
 80161ac:	4618      	mov	r0, r3
 80161ae:	f000 f889 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 80161b2:	4603      	mov	r3, r0
 80161b4:	681b      	ldr	r3, [r3, #0]
      }
 80161b6:	4618      	mov	r0, r3
 80161b8:	3710      	adds	r7, #16
 80161ba:	46bd      	mov	sp, r7
 80161bc:	bd80      	pop	{r7, pc}

080161be <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 80161be:	b480      	push	{r7}
 80161c0:	b083      	sub	sp, #12
 80161c2:	af00      	add	r7, sp, #0
 80161c4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80161c6:	687b      	ldr	r3, [r7, #4]
 80161c8:	4618      	mov	r0, r3
 80161ca:	370c      	adds	r7, #12
 80161cc:	46bd      	mov	sp, r7
 80161ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80161d2:	4770      	bx	lr

080161d4 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80161d4:	b580      	push	{r7, lr}
 80161d6:	b084      	sub	sp, #16
 80161d8:	af00      	add	r7, sp, #0
 80161da:	60f8      	str	r0, [r7, #12]
 80161dc:	60b9      	str	r1, [r7, #8]
 80161de:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80161e0:	68f8      	ldr	r0, [r7, #12]
 80161e2:	f000 f8fa 	bl	80163da <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 80161e6:	4602      	mov	r2, r0
 80161e8:	68bb      	ldr	r3, [r7, #8]
 80161ea:	4293      	cmp	r3, r2
 80161ec:	bf8c      	ite	hi
 80161ee:	2301      	movhi	r3, #1
 80161f0:	2300      	movls	r3, #0
 80161f2:	b2db      	uxtb	r3, r3
 80161f4:	2b00      	cmp	r3, #0
 80161f6:	d001      	beq.n	80161fc <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80161f8:	f00d f916 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80161fc:	68bb      	ldr	r3, [r7, #8]
 80161fe:	009b      	lsls	r3, r3, #2
 8016200:	4618      	mov	r0, r3
 8016202:	f00d f84c 	bl	802329e <_Znwj>
 8016206:	4603      	mov	r3, r0
 8016208:	bf00      	nop
      }
 801620a:	4618      	mov	r0, r3
 801620c:	3710      	adds	r7, #16
 801620e:	46bd      	mov	sp, r7
 8016210:	bd80      	pop	{r7, pc}

08016212 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8016212:	b5b0      	push	{r4, r5, r7, lr}
 8016214:	b084      	sub	sp, #16
 8016216:	af00      	add	r7, sp, #0
 8016218:	60f8      	str	r0, [r7, #12]
 801621a:	60b9      	str	r1, [r7, #8]
 801621c:	607a      	str	r2, [r7, #4]
 801621e:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8016220:	68f8      	ldr	r0, [r7, #12]
 8016222:	f000 f8e6 	bl	80163f2 <_ZSt12__niter_baseIPP9StatementET_S3_>
 8016226:	4604      	mov	r4, r0
 8016228:	68b8      	ldr	r0, [r7, #8]
 801622a:	f000 f8e2 	bl	80163f2 <_ZSt12__niter_baseIPP9StatementET_S3_>
 801622e:	4605      	mov	r5, r0
 8016230:	6878      	ldr	r0, [r7, #4]
 8016232:	f000 f8de 	bl	80163f2 <_ZSt12__niter_baseIPP9StatementET_S3_>
 8016236:	4602      	mov	r2, r0
 8016238:	683b      	ldr	r3, [r7, #0]
 801623a:	4629      	mov	r1, r5
 801623c:	4620      	mov	r0, r4
 801623e:	f000 f8e3 	bl	8016408 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8016242:	4603      	mov	r3, r0
    }
 8016244:	4618      	mov	r0, r3
 8016246:	3710      	adds	r7, #16
 8016248:	46bd      	mov	sp, r7
 801624a:	bdb0      	pop	{r4, r5, r7, pc}

0801624c <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801624c:	b590      	push	{r4, r7, lr}
 801624e:	b085      	sub	sp, #20
 8016250:	af00      	add	r7, sp, #0
 8016252:	6078      	str	r0, [r7, #4]
 8016254:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8016256:	687b      	ldr	r3, [r7, #4]
 8016258:	2203      	movs	r2, #3
 801625a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801625c:	6878      	ldr	r0, [r7, #4]
 801625e:	f7fa fd72 	bl	8010d46 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8016262:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8016264:	6838      	ldr	r0, [r7, #0]
 8016266:	f7f1 fcf7 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801626a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801626c:	781c      	ldrb	r4, [r3, #0]
 801626e:	68f8      	ldr	r0, [r7, #12]
 8016270:	f7f2 fa7c 	bl	800876c <_ZSt9addressofIbEPT_RS0_>
 8016274:	4603      	mov	r3, r0
 8016276:	4619      	mov	r1, r3
 8016278:	2001      	movs	r0, #1
 801627a:	f7ea feee 	bl	800105a <_ZnwjPv>
 801627e:	4603      	mov	r3, r0
 8016280:	4622      	mov	r2, r4
 8016282:	701a      	strb	r2, [r3, #0]
    }
 8016284:	bf00      	nop
 8016286:	3714      	adds	r7, #20
 8016288:	46bd      	mov	sp, r7
 801628a:	bd90      	pop	{r4, r7, pc}

0801628c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 801628c:	b580      	push	{r7, lr}
 801628e:	b082      	sub	sp, #8
 8016290:	af00      	add	r7, sp, #0
 8016292:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8016294:	6878      	ldr	r0, [r7, #4]
 8016296:	f7f9 fe2b 	bl	800fef0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 801629a:	4603      	mov	r3, r0
 801629c:	2b03      	cmp	r3, #3
 801629e:	bf14      	ite	ne
 80162a0:	2301      	movne	r3, #1
 80162a2:	2300      	moveq	r3, #0
 80162a4:	b2db      	uxtb	r3, r3
 80162a6:	2b00      	cmp	r3, #0
 80162a8:	d002      	beq.n	80162b0 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80162aa:	4805      	ldr	r0, [pc, #20]	; (80162c0 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 80162ac:	f7ea fee1 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80162b0:	6878      	ldr	r0, [r7, #4]
 80162b2:	f7fa fd48 	bl	8010d46 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80162b6:	4603      	mov	r3, r0
    }
 80162b8:	4618      	mov	r0, r3
 80162ba:	3708      	adds	r7, #8
 80162bc:	46bd      	mov	sp, r7
 80162be:	bd80      	pop	{r7, pc}
 80162c0:	08029880 	.word	0x08029880

080162c4 <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 80162c4:	b480      	push	{r7}
 80162c6:	b083      	sub	sp, #12
 80162c8:	af00      	add	r7, sp, #0
 80162ca:	6078      	str	r0, [r7, #4]
 80162cc:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 80162ce:	683b      	ldr	r3, [r7, #0]
 80162d0:	681a      	ldr	r2, [r3, #0]
 80162d2:	687b      	ldr	r3, [r7, #4]
 80162d4:	681b      	ldr	r3, [r3, #0]
 80162d6:	429a      	cmp	r2, r3
 80162d8:	d201      	bcs.n	80162de <_ZSt3minIjERKT_S2_S2_+0x1a>
	return __b;
 80162da:	683b      	ldr	r3, [r7, #0]
 80162dc:	e000      	b.n	80162e0 <_ZSt3minIjERKT_S2_S2_+0x1c>
      return __a;
 80162de:	687b      	ldr	r3, [r7, #4]
    }
 80162e0:	4618      	mov	r0, r3
 80162e2:	370c      	adds	r7, #12
 80162e4:	46bd      	mov	sp, r7
 80162e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80162ea:	4770      	bx	lr

080162ec <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 80162ec:	b580      	push	{r7, lr}
 80162ee:	b082      	sub	sp, #8
 80162f0:	af00      	add	r7, sp, #0
 80162f2:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 80162f4:	6878      	ldr	r0, [r7, #4]
 80162f6:	f7f8 fc93 	bl	800ec20 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 80162fa:	4603      	mov	r3, r0
 80162fc:	4618      	mov	r0, r3
 80162fe:	3708      	adds	r7, #8
 8016300:	46bd      	mov	sp, r7
 8016302:	bd80      	pop	{r7, pc}

08016304 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8016304:	b580      	push	{r7, lr}
 8016306:	b086      	sub	sp, #24
 8016308:	af00      	add	r7, sp, #0
 801630a:	60f8      	str	r0, [r7, #12]
 801630c:	60b9      	str	r1, [r7, #8]
 801630e:	607a      	str	r2, [r7, #4]
 8016310:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8016312:	68ba      	ldr	r2, [r7, #8]
 8016314:	68fb      	ldr	r3, [r7, #12]
 8016316:	1ad3      	subs	r3, r2, r3
 8016318:	109b      	asrs	r3, r3, #2
 801631a:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801631c:	697b      	ldr	r3, [r7, #20]
 801631e:	2b00      	cmp	r3, #0
 8016320:	dd06      	ble.n	8016330 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8016322:	697b      	ldr	r3, [r7, #20]
 8016324:	009b      	lsls	r3, r3, #2
 8016326:	461a      	mov	r2, r3
 8016328:	68f9      	ldr	r1, [r7, #12]
 801632a:	6878      	ldr	r0, [r7, #4]
 801632c:	f00e fc8c 	bl	8024c48 <memmove>
      return __result + __count;
 8016330:	697b      	ldr	r3, [r7, #20]
 8016332:	009b      	lsls	r3, r3, #2
 8016334:	687a      	ldr	r2, [r7, #4]
 8016336:	4413      	add	r3, r2
    }
 8016338:	4618      	mov	r0, r3
 801633a:	3718      	adds	r7, #24
 801633c:	46bd      	mov	sp, r7
 801633e:	bd80      	pop	{r7, pc}

08016340 <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8016340:	b580      	push	{r7, lr}
 8016342:	b082      	sub	sp, #8
 8016344:	af00      	add	r7, sp, #0
 8016346:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8016348:	6878      	ldr	r0, [r7, #4]
 801634a:	f000 f805 	bl	8016358 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 801634e:	4603      	mov	r3, r0
 8016350:	4618      	mov	r0, r3
 8016352:	3708      	adds	r7, #8
 8016354:	46bd      	mov	sp, r7
 8016356:	bd80      	pop	{r7, pc}

08016358 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8016358:	b480      	push	{r7}
 801635a:	b083      	sub	sp, #12
 801635c:	af00      	add	r7, sp, #0
 801635e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8016360:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8016364:	4618      	mov	r0, r3
 8016366:	370c      	adds	r7, #12
 8016368:	46bd      	mov	sp, r7
 801636a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801636e:	4770      	bx	lr

08016370 <_ZSt12__niter_baseIPP4BodyET_S3_>:
    __niter_base(_Iterator __it)
 8016370:	b480      	push	{r7}
 8016372:	b083      	sub	sp, #12
 8016374:	af00      	add	r7, sp, #0
 8016376:	6078      	str	r0, [r7, #4]
    { return __it; }
 8016378:	687b      	ldr	r3, [r7, #4]
 801637a:	4618      	mov	r0, r3
 801637c:	370c      	adds	r7, #12
 801637e:	46bd      	mov	sp, r7
 8016380:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016384:	4770      	bx	lr

08016386 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8016386:	b580      	push	{r7, lr}
 8016388:	b086      	sub	sp, #24
 801638a:	af00      	add	r7, sp, #0
 801638c:	60f8      	str	r0, [r7, #12]
 801638e:	60b9      	str	r1, [r7, #8]
 8016390:	607a      	str	r2, [r7, #4]
 8016392:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8016394:	68ba      	ldr	r2, [r7, #8]
 8016396:	68fb      	ldr	r3, [r7, #12]
 8016398:	1ad3      	subs	r3, r2, r3
 801639a:	109b      	asrs	r3, r3, #2
 801639c:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801639e:	697b      	ldr	r3, [r7, #20]
 80163a0:	2b00      	cmp	r3, #0
 80163a2:	dd06      	ble.n	80163b2 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 80163a4:	697b      	ldr	r3, [r7, #20]
 80163a6:	009b      	lsls	r3, r3, #2
 80163a8:	461a      	mov	r2, r3
 80163aa:	68f9      	ldr	r1, [r7, #12]
 80163ac:	6878      	ldr	r0, [r7, #4]
 80163ae:	f00e fc4b 	bl	8024c48 <memmove>
      return __result + __count;
 80163b2:	697b      	ldr	r3, [r7, #20]
 80163b4:	009b      	lsls	r3, r3, #2
 80163b6:	687a      	ldr	r2, [r7, #4]
 80163b8:	4413      	add	r3, r2
    }
 80163ba:	4618      	mov	r0, r3
 80163bc:	3718      	adds	r7, #24
 80163be:	46bd      	mov	sp, r7
 80163c0:	bd80      	pop	{r7, pc}

080163c2 <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 80163c2:	b580      	push	{r7, lr}
 80163c4:	b082      	sub	sp, #8
 80163c6:	af00      	add	r7, sp, #0
 80163c8:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 80163ca:	6878      	ldr	r0, [r7, #4]
 80163cc:	f000 f805 	bl	80163da <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 80163d0:	4603      	mov	r3, r0
 80163d2:	4618      	mov	r0, r3
 80163d4:	3708      	adds	r7, #8
 80163d6:	46bd      	mov	sp, r7
 80163d8:	bd80      	pop	{r7, pc}

080163da <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 80163da:	b480      	push	{r7}
 80163dc:	b083      	sub	sp, #12
 80163de:	af00      	add	r7, sp, #0
 80163e0:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80163e2:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 80163e6:	4618      	mov	r0, r3
 80163e8:	370c      	adds	r7, #12
 80163ea:	46bd      	mov	sp, r7
 80163ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80163f0:	4770      	bx	lr

080163f2 <_ZSt12__niter_baseIPP9StatementET_S3_>:
    __niter_base(_Iterator __it)
 80163f2:	b480      	push	{r7}
 80163f4:	b083      	sub	sp, #12
 80163f6:	af00      	add	r7, sp, #0
 80163f8:	6078      	str	r0, [r7, #4]
    { return __it; }
 80163fa:	687b      	ldr	r3, [r7, #4]
 80163fc:	4618      	mov	r0, r3
 80163fe:	370c      	adds	r7, #12
 8016400:	46bd      	mov	sp, r7
 8016402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016406:	4770      	bx	lr

08016408 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8016408:	b580      	push	{r7, lr}
 801640a:	b086      	sub	sp, #24
 801640c:	af00      	add	r7, sp, #0
 801640e:	60f8      	str	r0, [r7, #12]
 8016410:	60b9      	str	r1, [r7, #8]
 8016412:	607a      	str	r2, [r7, #4]
 8016414:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8016416:	68ba      	ldr	r2, [r7, #8]
 8016418:	68fb      	ldr	r3, [r7, #12]
 801641a:	1ad3      	subs	r3, r2, r3
 801641c:	109b      	asrs	r3, r3, #2
 801641e:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8016420:	697b      	ldr	r3, [r7, #20]
 8016422:	2b00      	cmp	r3, #0
 8016424:	dd06      	ble.n	8016434 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8016426:	697b      	ldr	r3, [r7, #20]
 8016428:	009b      	lsls	r3, r3, #2
 801642a:	461a      	mov	r2, r3
 801642c:	68f9      	ldr	r1, [r7, #12]
 801642e:	6878      	ldr	r0, [r7, #4]
 8016430:	f00e fc0a 	bl	8024c48 <memmove>
      return __result + __count;
 8016434:	697b      	ldr	r3, [r7, #20]
 8016436:	009b      	lsls	r3, r3, #2
 8016438:	687a      	ldr	r2, [r7, #4]
 801643a:	4413      	add	r3, r2
    }
 801643c:	4618      	mov	r0, r3
 801643e:	3718      	adds	r7, #24
 8016440:	46bd      	mov	sp, r7
 8016442:	bd80      	pop	{r7, pc}

08016444 <_Z41__static_initialization_and_destruction_0ii>:
 8016444:	b590      	push	{r4, r7, lr}
 8016446:	b0e7      	sub	sp, #412	; 0x19c
 8016448:	af02      	add	r7, sp, #8
 801644a:	1d3b      	adds	r3, r7, #4
 801644c:	6018      	str	r0, [r3, #0]
 801644e:	463b      	mov	r3, r7
 8016450:	6019      	str	r1, [r3, #0]
 8016452:	1d3b      	adds	r3, r7, #4
 8016454:	681b      	ldr	r3, [r3, #0]
 8016456:	2b01      	cmp	r3, #1
 8016458:	f040 819d 	bne.w	8016796 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801645c:	463b      	mov	r3, r7
 801645e:	681b      	ldr	r3, [r3, #0]
 8016460:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016464:	4293      	cmp	r3, r2
 8016466:	f040 8196 	bne.w	8016796 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801646a:	f107 0314 	add.w	r3, r7, #20
 801646e:	4618      	mov	r0, r3
 8016470:	2322      	movs	r3, #34	; 0x22
 8016472:	461a      	mov	r2, r3
 8016474:	2100      	movs	r1, #0
 8016476:	f00e fc01 	bl	8024c7c <memset>
 801647a:	f107 0314 	add.w	r3, r7, #20
 801647e:	223a      	movs	r2, #58	; 0x3a
 8016480:	701a      	strb	r2, [r3, #0]
 8016482:	f107 0314 	add.w	r3, r7, #20
 8016486:	2201      	movs	r2, #1
 8016488:	705a      	strb	r2, [r3, #1]
 801648a:	f107 0314 	add.w	r3, r7, #20
 801648e:	220a      	movs	r2, #10
 8016490:	709a      	strb	r2, [r3, #2]
 8016492:	f107 0314 	add.w	r3, r7, #20
 8016496:	220a      	movs	r2, #10
 8016498:	70da      	strb	r2, [r3, #3]
 801649a:	f107 0314 	add.w	r3, r7, #20
 801649e:	222c      	movs	r2, #44	; 0x2c
 80164a0:	711a      	strb	r2, [r3, #4]
 80164a2:	f107 0314 	add.w	r3, r7, #20
 80164a6:	220c      	movs	r2, #12
 80164a8:	715a      	strb	r2, [r3, #5]
 80164aa:	f107 0314 	add.w	r3, r7, #20
 80164ae:	222e      	movs	r2, #46	; 0x2e
 80164b0:	719a      	strb	r2, [r3, #6]
 80164b2:	f107 0314 	add.w	r3, r7, #20
 80164b6:	220b      	movs	r2, #11
 80164b8:	71da      	strb	r2, [r3, #7]
 80164ba:	f107 0314 	add.w	r3, r7, #20
 80164be:	225b      	movs	r2, #91	; 0x5b
 80164c0:	721a      	strb	r2, [r3, #8]
 80164c2:	f107 0314 	add.w	r3, r7, #20
 80164c6:	220d      	movs	r2, #13
 80164c8:	725a      	strb	r2, [r3, #9]
 80164ca:	f107 0314 	add.w	r3, r7, #20
 80164ce:	225d      	movs	r2, #93	; 0x5d
 80164d0:	729a      	strb	r2, [r3, #10]
 80164d2:	f107 0314 	add.w	r3, r7, #20
 80164d6:	220e      	movs	r2, #14
 80164d8:	72da      	strb	r2, [r3, #11]
 80164da:	f107 0314 	add.w	r3, r7, #20
 80164de:	227c      	movs	r2, #124	; 0x7c
 80164e0:	731a      	strb	r2, [r3, #12]
 80164e2:	f107 0314 	add.w	r3, r7, #20
 80164e6:	2215      	movs	r2, #21
 80164e8:	735a      	strb	r2, [r3, #13]
 80164ea:	f107 0314 	add.w	r3, r7, #20
 80164ee:	2226      	movs	r2, #38	; 0x26
 80164f0:	739a      	strb	r2, [r3, #14]
 80164f2:	f107 0314 	add.w	r3, r7, #20
 80164f6:	2216      	movs	r2, #22
 80164f8:	73da      	strb	r2, [r3, #15]
 80164fa:	f107 0314 	add.w	r3, r7, #20
 80164fe:	222b      	movs	r2, #43	; 0x2b
 8016500:	741a      	strb	r2, [r3, #16]
 8016502:	f107 0314 	add.w	r3, r7, #20
 8016506:	221f      	movs	r2, #31
 8016508:	745a      	strb	r2, [r3, #17]
 801650a:	f107 0314 	add.w	r3, r7, #20
 801650e:	222d      	movs	r2, #45	; 0x2d
 8016510:	749a      	strb	r2, [r3, #18]
 8016512:	f107 0314 	add.w	r3, r7, #20
 8016516:	2220      	movs	r2, #32
 8016518:	74da      	strb	r2, [r3, #19]
 801651a:	f107 0314 	add.w	r3, r7, #20
 801651e:	222a      	movs	r2, #42	; 0x2a
 8016520:	751a      	strb	r2, [r3, #20]
 8016522:	f107 0314 	add.w	r3, r7, #20
 8016526:	2221      	movs	r2, #33	; 0x21
 8016528:	755a      	strb	r2, [r3, #21]
 801652a:	f107 0314 	add.w	r3, r7, #20
 801652e:	222f      	movs	r2, #47	; 0x2f
 8016530:	759a      	strb	r2, [r3, #22]
 8016532:	f107 0314 	add.w	r3, r7, #20
 8016536:	2222      	movs	r2, #34	; 0x22
 8016538:	75da      	strb	r2, [r3, #23]
 801653a:	f107 0314 	add.w	r3, r7, #20
 801653e:	225e      	movs	r2, #94	; 0x5e
 8016540:	761a      	strb	r2, [r3, #24]
 8016542:	f107 0314 	add.w	r3, r7, #20
 8016546:	2223      	movs	r2, #35	; 0x23
 8016548:	765a      	strb	r2, [r3, #25]
 801654a:	f107 0314 	add.w	r3, r7, #20
 801654e:	2225      	movs	r2, #37	; 0x25
 8016550:	769a      	strb	r2, [r3, #26]
 8016552:	f107 0314 	add.w	r3, r7, #20
 8016556:	2224      	movs	r2, #36	; 0x24
 8016558:	76da      	strb	r2, [r3, #27]
 801655a:	f107 0314 	add.w	r3, r7, #20
 801655e:	2228      	movs	r2, #40	; 0x28
 8016560:	771a      	strb	r2, [r3, #28]
 8016562:	f107 0314 	add.w	r3, r7, #20
 8016566:	2226      	movs	r2, #38	; 0x26
 8016568:	775a      	strb	r2, [r3, #29]
 801656a:	f107 0314 	add.w	r3, r7, #20
 801656e:	2229      	movs	r2, #41	; 0x29
 8016570:	779a      	strb	r2, [r3, #30]
 8016572:	f107 0314 	add.w	r3, r7, #20
 8016576:	2227      	movs	r2, #39	; 0x27
 8016578:	77da      	strb	r2, [r3, #31]
 801657a:	f107 0314 	add.w	r3, r7, #20
 801657e:	2225      	movs	r2, #37	; 0x25
 8016580:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8016584:	f107 030c 	add.w	r3, r7, #12
 8016588:	f107 0214 	add.w	r2, r7, #20
 801658c:	601a      	str	r2, [r3, #0]
 801658e:	f107 030c 	add.w	r3, r7, #12
 8016592:	2211      	movs	r2, #17
 8016594:	605a      	str	r2, [r3, #4]
 8016596:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801659a:	4618      	mov	r0, r3
 801659c:	f7eb fbd6 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80165a0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80165a4:	f107 020c 	add.w	r2, r7, #12
 80165a8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80165ac:	9300      	str	r3, [sp, #0]
 80165ae:	460b      	mov	r3, r1
 80165b0:	ca06      	ldmia	r2, {r1, r2}
 80165b2:	4885      	ldr	r0, [pc, #532]	; (80167c8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80165b4:	f7eb fbe2 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80165b8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80165bc:	4618      	mov	r0, r3
 80165be:	f7eb fbd1 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80165c2:	2305      	movs	r3, #5
 80165c4:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80165c8:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80165cc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80165d0:	497e      	ldr	r1, [pc, #504]	; (80167cc <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80165d2:	4618      	mov	r0, r3
 80165d4:	f7ea fd90 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80165d8:	2306      	movs	r3, #6
 80165da:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80165de:	f207 1263 	addw	r2, r7, #355	; 0x163
 80165e2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80165e6:	331c      	adds	r3, #28
 80165e8:	4979      	ldr	r1, [pc, #484]	; (80167d0 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80165ea:	4618      	mov	r0, r3
 80165ec:	f7ea fdac 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80165f0:	2307      	movs	r3, #7
 80165f2:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 80165f6:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80165fa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80165fe:	3338      	adds	r3, #56	; 0x38
 8016600:	4974      	ldr	r1, [pc, #464]	; (80167d4 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8016602:	4618      	mov	r0, r3
 8016604:	f7ea fda0 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8016608:	2308      	movs	r3, #8
 801660a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801660e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8016612:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016616:	3354      	adds	r3, #84	; 0x54
 8016618:	496f      	ldr	r1, [pc, #444]	; (80167d8 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801661a:	4618      	mov	r0, r3
 801661c:	f7ea fd6c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8016620:	2309      	movs	r3, #9
 8016622:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8016626:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801662a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801662e:	3370      	adds	r3, #112	; 0x70
 8016630:	496a      	ldr	r1, [pc, #424]	; (80167dc <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8016632:	4618      	mov	r0, r3
 8016634:	f7ea fdb0 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8016638:	2310      	movs	r3, #16
 801663a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801663e:	f207 1267 	addw	r2, r7, #359	; 0x167
 8016642:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016646:	338c      	adds	r3, #140	; 0x8c
 8016648:	4965      	ldr	r1, [pc, #404]	; (80167e0 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801664a:	4618      	mov	r0, r3
 801664c:	f7ea fdcc 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8016650:	2311      	movs	r3, #17
 8016652:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8016656:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801665a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801665e:	33a8      	adds	r3, #168	; 0xa8
 8016660:	4960      	ldr	r1, [pc, #384]	; (80167e4 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8016662:	4618      	mov	r0, r3
 8016664:	f7ea fd98 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8016668:	2312      	movs	r3, #18
 801666a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801666e:	f207 1269 	addw	r2, r7, #361	; 0x169
 8016672:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016676:	33c4      	adds	r3, #196	; 0xc4
 8016678:	495b      	ldr	r1, [pc, #364]	; (80167e8 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801667a:	4618      	mov	r0, r3
 801667c:	f7ea fd3c 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8016680:	2313      	movs	r3, #19
 8016682:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8016686:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801668a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801668e:	33e0      	adds	r3, #224	; 0xe0
 8016690:	4956      	ldr	r1, [pc, #344]	; (80167ec <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8016692:	4618      	mov	r0, r3
 8016694:	f7ea fd58 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8016698:	2314      	movs	r3, #20
 801669a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801669e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80166a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166a6:	33fc      	adds	r3, #252	; 0xfc
 80166a8:	4951      	ldr	r1, [pc, #324]	; (80167f0 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80166aa:	4618      	mov	r0, r3
 80166ac:	f7ea fdc4 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80166b0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80166b4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80166b8:	601a      	str	r2, [r3, #0]
 80166ba:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80166be:	220a      	movs	r2, #10
 80166c0:	605a      	str	r2, [r3, #4]
 80166c2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80166c6:	4618      	mov	r0, r3
 80166c8:	f7eb fbe5 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80166cc:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80166d0:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80166d4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80166d8:	9300      	str	r3, [sp, #0]
 80166da:	460b      	mov	r3, r1
 80166dc:	ca06      	ldmia	r2, {r1, r2}
 80166de:	4845      	ldr	r0, [pc, #276]	; (80167f4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80166e0:	f7eb fbf1 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80166e4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80166e8:	4618      	mov	r0, r3
 80166ea:	f7eb fbe0 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80166ee:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80166f2:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80166f6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80166fa:	429c      	cmp	r4, r3
 80166fc:	d004      	beq.n	8016708 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80166fe:	3c1c      	subs	r4, #28
 8016700:	4620      	mov	r0, r4
 8016702:	f7ea fcec 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8016706:	e7f6      	b.n	80166f6 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8016708:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801670c:	2200      	movs	r2, #0
 801670e:	601a      	str	r2, [r3, #0]
 8016710:	605a      	str	r2, [r3, #4]
 8016712:	609a      	str	r2, [r3, #8]
 8016714:	233c      	movs	r3, #60	; 0x3c
 8016716:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801671a:	231b      	movs	r3, #27
 801671c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8016720:	231c      	movs	r3, #28
 8016722:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8016726:	233e      	movs	r3, #62	; 0x3e
 8016728:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801672c:	2319      	movs	r3, #25
 801672e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8016732:	231a      	movs	r3, #26
 8016734:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8016738:	233d      	movs	r3, #61	; 0x3d
 801673a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801673e:	2318      	movs	r3, #24
 8016740:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8016744:	231d      	movs	r3, #29
 8016746:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801674a:	2321      	movs	r3, #33	; 0x21
 801674c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8016750:	2317      	movs	r3, #23
 8016752:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8016756:	231e      	movs	r3, #30
 8016758:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801675c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016760:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8016764:	2304      	movs	r3, #4
 8016766:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801676a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801676e:	4618      	mov	r0, r3
 8016770:	f7eb fbd9 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8016774:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8016778:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801677c:	9300      	str	r3, [sp, #0]
 801677e:	4613      	mov	r3, r2
 8016780:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8016784:	ca06      	ldmia	r2, {r1, r2}
 8016786:	481c      	ldr	r0, [pc, #112]	; (80167f8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016788:	f7eb fbe5 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801678c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016790:	4618      	mov	r0, r3
 8016792:	f7eb fbd4 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8016796:	1d3b      	adds	r3, r7, #4
 8016798:	681b      	ldr	r3, [r3, #0]
 801679a:	2b00      	cmp	r3, #0
 801679c:	d10e      	bne.n	80167bc <_Z41__static_initialization_and_destruction_0ii+0x378>
 801679e:	463b      	mov	r3, r7
 80167a0:	681b      	ldr	r3, [r3, #0]
 80167a2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80167a6:	4293      	cmp	r3, r2
 80167a8:	d108      	bne.n	80167bc <_Z41__static_initialization_and_destruction_0ii+0x378>
 80167aa:	4813      	ldr	r0, [pc, #76]	; (80167f8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80167ac:	f7f3 f842 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80167b0:	4810      	ldr	r0, [pc, #64]	; (80167f4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80167b2:	f7f3 f84c 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80167b6:	4804      	ldr	r0, [pc, #16]	; (80167c8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80167b8:	f7f3 f856 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80167bc:	bf00      	nop
 80167be:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80167c2:	46bd      	mov	sp, r7
 80167c4:	bd90      	pop	{r4, r7, pc}
 80167c6:	bf00      	nop
 80167c8:	20000424 	.word	0x20000424
 80167cc:	080298dc 	.word	0x080298dc
 80167d0:	080298e4 	.word	0x080298e4
 80167d4:	080298ec 	.word	0x080298ec
 80167d8:	080298f4 	.word	0x080298f4
 80167dc:	080298fc 	.word	0x080298fc
 80167e0:	08029904 	.word	0x08029904
 80167e4:	08029908 	.word	0x08029908
 80167e8:	08029910 	.word	0x08029910
 80167ec:	08029918 	.word	0x08029918
 80167f0:	08029920 	.word	0x08029920
 80167f4:	2000043c 	.word	0x2000043c
 80167f8:	20000454 	.word	0x20000454

080167fc <_GLOBAL__sub_I__ZN7ProgramD2Ev>:
 80167fc:	b580      	push	{r7, lr}
 80167fe:	af00      	add	r7, sp, #0
 8016800:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016804:	2001      	movs	r0, #1
 8016806:	f7ff fe1d 	bl	8016444 <_Z41__static_initialization_and_destruction_0ii>
 801680a:	bd80      	pop	{r7, pc}

0801680c <_GLOBAL__sub_D__ZN7ProgramD2Ev>:
 801680c:	b580      	push	{r7, lr}
 801680e:	af00      	add	r7, sp, #0
 8016810:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016814:	2000      	movs	r0, #0
 8016816:	f7ff fe15 	bl	8016444 <_Z41__static_initialization_and_destruction_0ii>
 801681a:	bd80      	pop	{r7, pc}

0801681c <_ZN16Position_counterC1Ev>:
#include <Position_counter.h>

Position_counter::Position_counter()
 801681c:	b480      	push	{r7}
 801681e:	b083      	sub	sp, #12
 8016820:	af00      	add	r7, sp, #0
 8016822:	6078      	str	r0, [r7, #4]
{
	line = 1;
 8016824:	687b      	ldr	r3, [r7, #4]
 8016826:	2201      	movs	r2, #1
 8016828:	601a      	str	r2, [r3, #0]
	position = 0;
 801682a:	687b      	ldr	r3, [r7, #4]
 801682c:	2200      	movs	r2, #0
 801682e:	605a      	str	r2, [r3, #4]
}
 8016830:	687b      	ldr	r3, [r7, #4]
 8016832:	4618      	mov	r0, r3
 8016834:	370c      	adds	r7, #12
 8016836:	46bd      	mov	sp, r7
 8016838:	f85d 7b04 	ldr.w	r7, [sp], #4
 801683c:	4770      	bx	lr
	...

08016840 <_ZN16Position_counter12get_instanceEv>:

Position_counter& Position_counter::get_instance()
{
 8016840:	b580      	push	{r7, lr}
 8016842:	af00      	add	r7, sp, #0
	static Position_counter instance;
 8016844:	4b10      	ldr	r3, [pc, #64]	; (8016888 <_ZN16Position_counter12get_instanceEv+0x48>)
 8016846:	781b      	ldrb	r3, [r3, #0]
 8016848:	f3bf 8f5b 	dmb	ish
 801684c:	b2db      	uxtb	r3, r3
 801684e:	f003 0301 	and.w	r3, r3, #1
 8016852:	2b00      	cmp	r3, #0
 8016854:	bf0c      	ite	eq
 8016856:	2301      	moveq	r3, #1
 8016858:	2300      	movne	r3, #0
 801685a:	b2db      	uxtb	r3, r3
 801685c:	2b00      	cmp	r3, #0
 801685e:	d010      	beq.n	8016882 <_ZN16Position_counter12get_instanceEv+0x42>
 8016860:	4809      	ldr	r0, [pc, #36]	; (8016888 <_ZN16Position_counter12get_instanceEv+0x48>)
 8016862:	f00c fd0d 	bl	8023280 <__cxa_guard_acquire>
 8016866:	4603      	mov	r3, r0
 8016868:	2b00      	cmp	r3, #0
 801686a:	bf14      	ite	ne
 801686c:	2301      	movne	r3, #1
 801686e:	2300      	moveq	r3, #0
 8016870:	b2db      	uxtb	r3, r3
 8016872:	2b00      	cmp	r3, #0
 8016874:	d005      	beq.n	8016882 <_ZN16Position_counter12get_instanceEv+0x42>
 8016876:	4805      	ldr	r0, [pc, #20]	; (801688c <_ZN16Position_counter12get_instanceEv+0x4c>)
 8016878:	f7ff ffd0 	bl	801681c <_ZN16Position_counterC1Ev>
 801687c:	4802      	ldr	r0, [pc, #8]	; (8016888 <_ZN16Position_counter12get_instanceEv+0x48>)
 801687e:	f00c fd0b 	bl	8023298 <__cxa_guard_release>
	return instance;
 8016882:	4b02      	ldr	r3, [pc, #8]	; (801688c <_ZN16Position_counter12get_instanceEv+0x4c>)
}
 8016884:	4618      	mov	r0, r3
 8016886:	bd80      	pop	{r7, pc}
 8016888:	20000498 	.word	0x20000498
 801688c:	20000490 	.word	0x20000490

08016890 <_ZN16Position_counter15update_positionEh>:

void Position_counter::update_position(uint8_t rx_buffer)
{
 8016890:	b480      	push	{r7}
 8016892:	b083      	sub	sp, #12
 8016894:	af00      	add	r7, sp, #0
 8016896:	6078      	str	r0, [r7, #4]
 8016898:	460b      	mov	r3, r1
 801689a:	70fb      	strb	r3, [r7, #3]
	if (rx_buffer == '\n')
 801689c:	78fb      	ldrb	r3, [r7, #3]
 801689e:	2b0a      	cmp	r3, #10
 80168a0:	d108      	bne.n	80168b4 <_ZN16Position_counter15update_positionEh+0x24>
	{
		++line;
 80168a2:	687b      	ldr	r3, [r7, #4]
 80168a4:	681b      	ldr	r3, [r3, #0]
 80168a6:	1c5a      	adds	r2, r3, #1
 80168a8:	687b      	ldr	r3, [r7, #4]
 80168aa:	601a      	str	r2, [r3, #0]
		position = 0;
 80168ac:	687b      	ldr	r3, [r7, #4]
 80168ae:	2200      	movs	r2, #0
 80168b0:	605a      	str	r2, [r3, #4]
	}
	else
	{
		++position;
	}
}
 80168b2:	e004      	b.n	80168be <_ZN16Position_counter15update_positionEh+0x2e>
		++position;
 80168b4:	687b      	ldr	r3, [r7, #4]
 80168b6:	685b      	ldr	r3, [r3, #4]
 80168b8:	1c5a      	adds	r2, r3, #1
 80168ba:	687b      	ldr	r3, [r7, #4]
 80168bc:	605a      	str	r2, [r3, #4]
}
 80168be:	bf00      	nop
 80168c0:	370c      	adds	r7, #12
 80168c2:	46bd      	mov	sp, r7
 80168c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80168c8:	4770      	bx	lr

080168ca <_ZN13Function_callD1Ev>:
	{
		delete b;
	}
}

Function_call::~Function_call()
 80168ca:	b590      	push	{r4, r7, lr}
 80168cc:	b087      	sub	sp, #28
 80168ce:	af00      	add	r7, sp, #0
 80168d0:	6078      	str	r0, [r7, #4]
{
	for (Expression *e : arguments)
 80168d2:	687b      	ldr	r3, [r7, #4]
 80168d4:	3320      	adds	r3, #32
 80168d6:	617b      	str	r3, [r7, #20]
 80168d8:	6978      	ldr	r0, [r7, #20]
 80168da:	f7fe ff7f 	bl	80157dc <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 80168de:	4603      	mov	r3, r0
 80168e0:	60fb      	str	r3, [r7, #12]
 80168e2:	6978      	ldr	r0, [r7, #20]
 80168e4:	f7fe fbb4 	bl	8015050 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 80168e8:	4603      	mov	r3, r0
 80168ea:	60bb      	str	r3, [r7, #8]
 80168ec:	f107 0208 	add.w	r2, r7, #8
 80168f0:	f107 030c 	add.w	r3, r7, #12
 80168f4:	4611      	mov	r1, r2
 80168f6:	4618      	mov	r0, r3
 80168f8:	f000 f843 	bl	8016982 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 80168fc:	4603      	mov	r3, r0
 80168fe:	2b00      	cmp	r3, #0
 8016900:	d017      	beq.n	8016932 <_ZN13Function_callD1Ev+0x68>
 8016902:	f107 030c 	add.w	r3, r7, #12
 8016906:	4618      	mov	r0, r3
 8016908:	f7fe ffc5 	bl	8015896 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 801690c:	4603      	mov	r3, r0
 801690e:	681b      	ldr	r3, [r3, #0]
 8016910:	613b      	str	r3, [r7, #16]
	{
		delete e;
 8016912:	693c      	ldr	r4, [r7, #16]
 8016914:	2c00      	cmp	r4, #0
 8016916:	d006      	beq.n	8016926 <_ZN13Function_callD1Ev+0x5c>
 8016918:	4620      	mov	r0, r4
 801691a:	f7f3 fb8a 	bl	800a032 <_ZN10ExpressionD1Ev>
 801691e:	2114      	movs	r1, #20
 8016920:	4620      	mov	r0, r4
 8016922:	f00c fcab 	bl	802327c <_ZdlPvj>
	for (Expression *e : arguments)
 8016926:	f107 030c 	add.w	r3, r7, #12
 801692a:	4618      	mov	r0, r3
 801692c:	f000 f841 	bl	80169b2 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>
 8016930:	e7dc      	b.n	80168ec <_ZN13Function_callD1Ev+0x22>
Function_call::~Function_call()
 8016932:	687b      	ldr	r3, [r7, #4]
 8016934:	3320      	adds	r3, #32
 8016936:	4618      	mov	r0, r3
 8016938:	f7f7 fc70 	bl	800e21c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 801693c:	687b      	ldr	r3, [r7, #4]
 801693e:	3308      	adds	r3, #8
 8016940:	4618      	mov	r0, r3
 8016942:	f00c ff4e 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8016946:	687b      	ldr	r3, [r7, #4]
 8016948:	4618      	mov	r0, r3
 801694a:	371c      	adds	r7, #28
 801694c:	46bd      	mov	sp, r7
 801694e:	bd90      	pop	{r4, r7, pc}

08016950 <_ZN8VariableD1Ev>:
{
	delete value;
	delete var;
}

Variable::~Variable()
 8016950:	b590      	push	{r4, r7, lr}
 8016952:	b083      	sub	sp, #12
 8016954:	af00      	add	r7, sp, #0
 8016956:	6078      	str	r0, [r7, #4]
{
	delete index;
 8016958:	687b      	ldr	r3, [r7, #4]
 801695a:	69dc      	ldr	r4, [r3, #28]
 801695c:	2c00      	cmp	r4, #0
 801695e:	d006      	beq.n	801696e <_ZN8VariableD1Ev+0x1e>
 8016960:	4620      	mov	r0, r4
 8016962:	f7f3 fb66 	bl	800a032 <_ZN10ExpressionD1Ev>
 8016966:	2114      	movs	r1, #20
 8016968:	4620      	mov	r0, r4
 801696a:	f00c fc87 	bl	802327c <_ZdlPvj>
Variable::~Variable()
 801696e:	687b      	ldr	r3, [r7, #4]
 8016970:	3304      	adds	r3, #4
 8016972:	4618      	mov	r0, r3
 8016974:	f00c ff35 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8016978:	687b      	ldr	r3, [r7, #4]
 801697a:	4618      	mov	r0, r3
 801697c:	370c      	adds	r7, #12
 801697e:	46bd      	mov	sp, r7
 8016980:	bd90      	pop	{r4, r7, pc}

08016982 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8016982:	b590      	push	{r4, r7, lr}
 8016984:	b083      	sub	sp, #12
 8016986:	af00      	add	r7, sp, #0
 8016988:	6078      	str	r0, [r7, #4]
 801698a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 801698c:	6878      	ldr	r0, [r7, #4]
 801698e:	f7fe ff5e 	bl	801584e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8016992:	4603      	mov	r3, r0
 8016994:	681c      	ldr	r4, [r3, #0]
 8016996:	6838      	ldr	r0, [r7, #0]
 8016998:	f7fe ff59 	bl	801584e <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801699c:	4603      	mov	r3, r0
 801699e:	681b      	ldr	r3, [r3, #0]
 80169a0:	429c      	cmp	r4, r3
 80169a2:	bf14      	ite	ne
 80169a4:	2301      	movne	r3, #1
 80169a6:	2300      	moveq	r3, #0
 80169a8:	b2db      	uxtb	r3, r3
 80169aa:	4618      	mov	r0, r3
 80169ac:	370c      	adds	r7, #12
 80169ae:	46bd      	mov	sp, r7
 80169b0:	bd90      	pop	{r4, r7, pc}

080169b2 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80169b2:	b480      	push	{r7}
 80169b4:	b083      	sub	sp, #12
 80169b6:	af00      	add	r7, sp, #0
 80169b8:	6078      	str	r0, [r7, #4]
	++_M_current;
 80169ba:	687b      	ldr	r3, [r7, #4]
 80169bc:	681b      	ldr	r3, [r3, #0]
 80169be:	1d1a      	adds	r2, r3, #4
 80169c0:	687b      	ldr	r3, [r7, #4]
 80169c2:	601a      	str	r2, [r3, #0]
	return *this;
 80169c4:	687b      	ldr	r3, [r7, #4]
      }
 80169c6:	4618      	mov	r0, r3
 80169c8:	370c      	adds	r7, #12
 80169ca:	46bd      	mov	sp, r7
 80169cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80169d0:	4770      	bx	lr
	...

080169d4 <_Z41__static_initialization_and_destruction_0ii>:
 80169d4:	b590      	push	{r4, r7, lr}
 80169d6:	b0e7      	sub	sp, #412	; 0x19c
 80169d8:	af02      	add	r7, sp, #8
 80169da:	1d3b      	adds	r3, r7, #4
 80169dc:	6018      	str	r0, [r3, #0]
 80169de:	463b      	mov	r3, r7
 80169e0:	6019      	str	r1, [r3, #0]
 80169e2:	1d3b      	adds	r3, r7, #4
 80169e4:	681b      	ldr	r3, [r3, #0]
 80169e6:	2b01      	cmp	r3, #1
 80169e8:	f040 819d 	bne.w	8016d26 <_Z41__static_initialization_and_destruction_0ii+0x352>
 80169ec:	463b      	mov	r3, r7
 80169ee:	681b      	ldr	r3, [r3, #0]
 80169f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80169f4:	4293      	cmp	r3, r2
 80169f6:	f040 8196 	bne.w	8016d26 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80169fa:	f107 0314 	add.w	r3, r7, #20
 80169fe:	4618      	mov	r0, r3
 8016a00:	2322      	movs	r3, #34	; 0x22
 8016a02:	461a      	mov	r2, r3
 8016a04:	2100      	movs	r1, #0
 8016a06:	f00e f939 	bl	8024c7c <memset>
 8016a0a:	f107 0314 	add.w	r3, r7, #20
 8016a0e:	223a      	movs	r2, #58	; 0x3a
 8016a10:	701a      	strb	r2, [r3, #0]
 8016a12:	f107 0314 	add.w	r3, r7, #20
 8016a16:	2201      	movs	r2, #1
 8016a18:	705a      	strb	r2, [r3, #1]
 8016a1a:	f107 0314 	add.w	r3, r7, #20
 8016a1e:	220a      	movs	r2, #10
 8016a20:	709a      	strb	r2, [r3, #2]
 8016a22:	f107 0314 	add.w	r3, r7, #20
 8016a26:	220a      	movs	r2, #10
 8016a28:	70da      	strb	r2, [r3, #3]
 8016a2a:	f107 0314 	add.w	r3, r7, #20
 8016a2e:	222c      	movs	r2, #44	; 0x2c
 8016a30:	711a      	strb	r2, [r3, #4]
 8016a32:	f107 0314 	add.w	r3, r7, #20
 8016a36:	220c      	movs	r2, #12
 8016a38:	715a      	strb	r2, [r3, #5]
 8016a3a:	f107 0314 	add.w	r3, r7, #20
 8016a3e:	222e      	movs	r2, #46	; 0x2e
 8016a40:	719a      	strb	r2, [r3, #6]
 8016a42:	f107 0314 	add.w	r3, r7, #20
 8016a46:	220b      	movs	r2, #11
 8016a48:	71da      	strb	r2, [r3, #7]
 8016a4a:	f107 0314 	add.w	r3, r7, #20
 8016a4e:	225b      	movs	r2, #91	; 0x5b
 8016a50:	721a      	strb	r2, [r3, #8]
 8016a52:	f107 0314 	add.w	r3, r7, #20
 8016a56:	220d      	movs	r2, #13
 8016a58:	725a      	strb	r2, [r3, #9]
 8016a5a:	f107 0314 	add.w	r3, r7, #20
 8016a5e:	225d      	movs	r2, #93	; 0x5d
 8016a60:	729a      	strb	r2, [r3, #10]
 8016a62:	f107 0314 	add.w	r3, r7, #20
 8016a66:	220e      	movs	r2, #14
 8016a68:	72da      	strb	r2, [r3, #11]
 8016a6a:	f107 0314 	add.w	r3, r7, #20
 8016a6e:	227c      	movs	r2, #124	; 0x7c
 8016a70:	731a      	strb	r2, [r3, #12]
 8016a72:	f107 0314 	add.w	r3, r7, #20
 8016a76:	2215      	movs	r2, #21
 8016a78:	735a      	strb	r2, [r3, #13]
 8016a7a:	f107 0314 	add.w	r3, r7, #20
 8016a7e:	2226      	movs	r2, #38	; 0x26
 8016a80:	739a      	strb	r2, [r3, #14]
 8016a82:	f107 0314 	add.w	r3, r7, #20
 8016a86:	2216      	movs	r2, #22
 8016a88:	73da      	strb	r2, [r3, #15]
 8016a8a:	f107 0314 	add.w	r3, r7, #20
 8016a8e:	222b      	movs	r2, #43	; 0x2b
 8016a90:	741a      	strb	r2, [r3, #16]
 8016a92:	f107 0314 	add.w	r3, r7, #20
 8016a96:	221f      	movs	r2, #31
 8016a98:	745a      	strb	r2, [r3, #17]
 8016a9a:	f107 0314 	add.w	r3, r7, #20
 8016a9e:	222d      	movs	r2, #45	; 0x2d
 8016aa0:	749a      	strb	r2, [r3, #18]
 8016aa2:	f107 0314 	add.w	r3, r7, #20
 8016aa6:	2220      	movs	r2, #32
 8016aa8:	74da      	strb	r2, [r3, #19]
 8016aaa:	f107 0314 	add.w	r3, r7, #20
 8016aae:	222a      	movs	r2, #42	; 0x2a
 8016ab0:	751a      	strb	r2, [r3, #20]
 8016ab2:	f107 0314 	add.w	r3, r7, #20
 8016ab6:	2221      	movs	r2, #33	; 0x21
 8016ab8:	755a      	strb	r2, [r3, #21]
 8016aba:	f107 0314 	add.w	r3, r7, #20
 8016abe:	222f      	movs	r2, #47	; 0x2f
 8016ac0:	759a      	strb	r2, [r3, #22]
 8016ac2:	f107 0314 	add.w	r3, r7, #20
 8016ac6:	2222      	movs	r2, #34	; 0x22
 8016ac8:	75da      	strb	r2, [r3, #23]
 8016aca:	f107 0314 	add.w	r3, r7, #20
 8016ace:	225e      	movs	r2, #94	; 0x5e
 8016ad0:	761a      	strb	r2, [r3, #24]
 8016ad2:	f107 0314 	add.w	r3, r7, #20
 8016ad6:	2223      	movs	r2, #35	; 0x23
 8016ad8:	765a      	strb	r2, [r3, #25]
 8016ada:	f107 0314 	add.w	r3, r7, #20
 8016ade:	2225      	movs	r2, #37	; 0x25
 8016ae0:	769a      	strb	r2, [r3, #26]
 8016ae2:	f107 0314 	add.w	r3, r7, #20
 8016ae6:	2224      	movs	r2, #36	; 0x24
 8016ae8:	76da      	strb	r2, [r3, #27]
 8016aea:	f107 0314 	add.w	r3, r7, #20
 8016aee:	2228      	movs	r2, #40	; 0x28
 8016af0:	771a      	strb	r2, [r3, #28]
 8016af2:	f107 0314 	add.w	r3, r7, #20
 8016af6:	2226      	movs	r2, #38	; 0x26
 8016af8:	775a      	strb	r2, [r3, #29]
 8016afa:	f107 0314 	add.w	r3, r7, #20
 8016afe:	2229      	movs	r2, #41	; 0x29
 8016b00:	779a      	strb	r2, [r3, #30]
 8016b02:	f107 0314 	add.w	r3, r7, #20
 8016b06:	2227      	movs	r2, #39	; 0x27
 8016b08:	77da      	strb	r2, [r3, #31]
 8016b0a:	f107 0314 	add.w	r3, r7, #20
 8016b0e:	2225      	movs	r2, #37	; 0x25
 8016b10:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8016b14:	f107 030c 	add.w	r3, r7, #12
 8016b18:	f107 0214 	add.w	r2, r7, #20
 8016b1c:	601a      	str	r2, [r3, #0]
 8016b1e:	f107 030c 	add.w	r3, r7, #12
 8016b22:	2211      	movs	r2, #17
 8016b24:	605a      	str	r2, [r3, #4]
 8016b26:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016b2a:	4618      	mov	r0, r3
 8016b2c:	f7eb f90e 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8016b30:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8016b34:	f107 020c 	add.w	r2, r7, #12
 8016b38:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016b3c:	9300      	str	r3, [sp, #0]
 8016b3e:	460b      	mov	r3, r1
 8016b40:	ca06      	ldmia	r2, {r1, r2}
 8016b42:	4885      	ldr	r0, [pc, #532]	; (8016d58 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016b44:	f7eb f91a 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016b48:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016b4c:	4618      	mov	r0, r3
 8016b4e:	f7eb f909 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8016b52:	2305      	movs	r3, #5
 8016b54:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8016b58:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8016b5c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016b60:	497e      	ldr	r1, [pc, #504]	; (8016d5c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8016b62:	4618      	mov	r0, r3
 8016b64:	f7ea fac8 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8016b68:	2306      	movs	r3, #6
 8016b6a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8016b6e:	f207 1263 	addw	r2, r7, #355	; 0x163
 8016b72:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016b76:	331c      	adds	r3, #28
 8016b78:	4979      	ldr	r1, [pc, #484]	; (8016d60 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8016b7a:	4618      	mov	r0, r3
 8016b7c:	f7ea fae4 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8016b80:	2307      	movs	r3, #7
 8016b82:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8016b86:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8016b8a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016b8e:	3338      	adds	r3, #56	; 0x38
 8016b90:	4974      	ldr	r1, [pc, #464]	; (8016d64 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8016b92:	4618      	mov	r0, r3
 8016b94:	f7ea fad8 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8016b98:	2308      	movs	r3, #8
 8016b9a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8016b9e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8016ba2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016ba6:	3354      	adds	r3, #84	; 0x54
 8016ba8:	496f      	ldr	r1, [pc, #444]	; (8016d68 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8016baa:	4618      	mov	r0, r3
 8016bac:	f7ea faa4 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8016bb0:	2309      	movs	r3, #9
 8016bb2:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8016bb6:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8016bba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016bbe:	3370      	adds	r3, #112	; 0x70
 8016bc0:	496a      	ldr	r1, [pc, #424]	; (8016d6c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8016bc2:	4618      	mov	r0, r3
 8016bc4:	f7ea fae8 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8016bc8:	2310      	movs	r3, #16
 8016bca:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8016bce:	f207 1267 	addw	r2, r7, #359	; 0x167
 8016bd2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016bd6:	338c      	adds	r3, #140	; 0x8c
 8016bd8:	4965      	ldr	r1, [pc, #404]	; (8016d70 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8016bda:	4618      	mov	r0, r3
 8016bdc:	f7ea fb04 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8016be0:	2311      	movs	r3, #17
 8016be2:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8016be6:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8016bea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016bee:	33a8      	adds	r3, #168	; 0xa8
 8016bf0:	4960      	ldr	r1, [pc, #384]	; (8016d74 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8016bf2:	4618      	mov	r0, r3
 8016bf4:	f7ea fad0 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8016bf8:	2312      	movs	r3, #18
 8016bfa:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8016bfe:	f207 1269 	addw	r2, r7, #361	; 0x169
 8016c02:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016c06:	33c4      	adds	r3, #196	; 0xc4
 8016c08:	495b      	ldr	r1, [pc, #364]	; (8016d78 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8016c0a:	4618      	mov	r0, r3
 8016c0c:	f7ea fa74 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8016c10:	2313      	movs	r3, #19
 8016c12:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8016c16:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8016c1a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016c1e:	33e0      	adds	r3, #224	; 0xe0
 8016c20:	4956      	ldr	r1, [pc, #344]	; (8016d7c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8016c22:	4618      	mov	r0, r3
 8016c24:	f7ea fa90 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8016c28:	2314      	movs	r3, #20
 8016c2a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8016c2e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8016c32:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016c36:	33fc      	adds	r3, #252	; 0xfc
 8016c38:	4951      	ldr	r1, [pc, #324]	; (8016d80 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8016c3a:	4618      	mov	r0, r3
 8016c3c:	f7ea fafc 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8016c40:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016c44:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8016c48:	601a      	str	r2, [r3, #0]
 8016c4a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016c4e:	220a      	movs	r2, #10
 8016c50:	605a      	str	r2, [r3, #4]
 8016c52:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016c56:	4618      	mov	r0, r3
 8016c58:	f7eb f91d 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8016c5c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8016c60:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8016c64:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016c68:	9300      	str	r3, [sp, #0]
 8016c6a:	460b      	mov	r3, r1
 8016c6c:	ca06      	ldmia	r2, {r1, r2}
 8016c6e:	4845      	ldr	r0, [pc, #276]	; (8016d84 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8016c70:	f7eb f929 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8016c74:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8016c78:	4618      	mov	r0, r3
 8016c7a:	f7eb f918 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8016c7e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8016c82:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8016c86:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016c8a:	429c      	cmp	r4, r3
 8016c8c:	d004      	beq.n	8016c98 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8016c8e:	3c1c      	subs	r4, #28
 8016c90:	4620      	mov	r0, r4
 8016c92:	f7ea fa24 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8016c96:	e7f6      	b.n	8016c86 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8016c98:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016c9c:	2200      	movs	r2, #0
 8016c9e:	601a      	str	r2, [r3, #0]
 8016ca0:	605a      	str	r2, [r3, #4]
 8016ca2:	609a      	str	r2, [r3, #8]
 8016ca4:	233c      	movs	r3, #60	; 0x3c
 8016ca6:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8016caa:	231b      	movs	r3, #27
 8016cac:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8016cb0:	231c      	movs	r3, #28
 8016cb2:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8016cb6:	233e      	movs	r3, #62	; 0x3e
 8016cb8:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8016cbc:	2319      	movs	r3, #25
 8016cbe:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8016cc2:	231a      	movs	r3, #26
 8016cc4:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8016cc8:	233d      	movs	r3, #61	; 0x3d
 8016cca:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8016cce:	2318      	movs	r3, #24
 8016cd0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8016cd4:	231d      	movs	r3, #29
 8016cd6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8016cda:	2321      	movs	r3, #33	; 0x21
 8016cdc:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8016ce0:	2317      	movs	r3, #23
 8016ce2:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8016ce6:	231e      	movs	r3, #30
 8016ce8:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8016cec:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016cf0:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8016cf4:	2304      	movs	r3, #4
 8016cf6:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8016cfa:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016cfe:	4618      	mov	r0, r3
 8016d00:	f7eb f911 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8016d04:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8016d08:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016d0c:	9300      	str	r3, [sp, #0]
 8016d0e:	4613      	mov	r3, r2
 8016d10:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8016d14:	ca06      	ldmia	r2, {r1, r2}
 8016d16:	481c      	ldr	r0, [pc, #112]	; (8016d88 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016d18:	f7eb f91d 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016d1c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016d20:	4618      	mov	r0, r3
 8016d22:	f7eb f90c 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8016d26:	1d3b      	adds	r3, r7, #4
 8016d28:	681b      	ldr	r3, [r3, #0]
 8016d2a:	2b00      	cmp	r3, #0
 8016d2c:	d10e      	bne.n	8016d4c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8016d2e:	463b      	mov	r3, r7
 8016d30:	681b      	ldr	r3, [r3, #0]
 8016d32:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016d36:	4293      	cmp	r3, r2
 8016d38:	d108      	bne.n	8016d4c <_Z41__static_initialization_and_destruction_0ii+0x378>
 8016d3a:	4813      	ldr	r0, [pc, #76]	; (8016d88 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016d3c:	f7f2 fd7a 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8016d40:	4810      	ldr	r0, [pc, #64]	; (8016d84 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8016d42:	f7f2 fd84 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8016d46:	4804      	ldr	r0, [pc, #16]	; (8016d58 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8016d48:	f7f2 fd8e 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8016d4c:	bf00      	nop
 8016d4e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8016d52:	46bd      	mov	sp, r7
 8016d54:	bd90      	pop	{r4, r7, pc}
 8016d56:	bf00      	nop
 8016d58:	2000049c 	.word	0x2000049c
 8016d5c:	08029964 	.word	0x08029964
 8016d60:	0802996c 	.word	0x0802996c
 8016d64:	08029974 	.word	0x08029974
 8016d68:	0802997c 	.word	0x0802997c
 8016d6c:	08029984 	.word	0x08029984
 8016d70:	0802998c 	.word	0x0802998c
 8016d74:	08029990 	.word	0x08029990
 8016d78:	08029998 	.word	0x08029998
 8016d7c:	080299a0 	.word	0x080299a0
 8016d80:	080299a8 	.word	0x080299a8
 8016d84:	200004b4 	.word	0x200004b4
 8016d88:	200004cc 	.word	0x200004cc

08016d8c <_GLOBAL__sub_I__ZN4BodyD2Ev>:
 8016d8c:	b580      	push	{r7, lr}
 8016d8e:	af00      	add	r7, sp, #0
 8016d90:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016d94:	2001      	movs	r0, #1
 8016d96:	f7ff fe1d 	bl	80169d4 <_Z41__static_initialization_and_destruction_0ii>
 8016d9a:	bd80      	pop	{r7, pc}

08016d9c <_GLOBAL__sub_D__ZN4BodyD2Ev>:
 8016d9c:	b580      	push	{r7, lr}
 8016d9e:	af00      	add	r7, sp, #0
 8016da0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016da4:	2000      	movs	r0, #0
 8016da6:	f7ff fe15 	bl	80169d4 <_Z41__static_initialization_and_destruction_0ii>
 8016daa:	bd80      	pop	{r7, pc}

08016dac <_ZN6SymbolC1Ei>:
#include "Symbol.h"
#include "Transmitter.h"

Symbol::Symbol(int value)
 8016dac:	b580      	push	{r7, lr}
 8016dae:	b082      	sub	sp, #8
 8016db0:	af00      	add	r7, sp, #0
 8016db2:	6078      	str	r0, [r7, #4]
 8016db4:	6039      	str	r1, [r7, #0]
 8016db6:	687b      	ldr	r3, [r7, #4]
 8016db8:	3304      	adds	r3, #4
 8016dba:	4618      	mov	r0, r3
 8016dbc:	f7f7 f8d4 	bl	800df68 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_INT;
 8016dc0:	687b      	ldr	r3, [r7, #4]
 8016dc2:	2200      	movs	r2, #0
 8016dc4:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016dc6:	687b      	ldr	r3, [r7, #4]
 8016dc8:	3304      	adds	r3, #4
 8016dca:	463a      	mov	r2, r7
 8016dcc:	4611      	mov	r1, r2
 8016dce:	4618      	mov	r0, r3
 8016dd0:	f001 f85e 	bl	8017e90 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016dd4:	687b      	ldr	r3, [r7, #4]
 8016dd6:	4618      	mov	r0, r3
 8016dd8:	3708      	adds	r7, #8
 8016dda:	46bd      	mov	sp, r7
 8016ddc:	bd80      	pop	{r7, pc}

08016dde <_ZN6SymbolC1Ef>:

Symbol::Symbol(float value)
 8016dde:	b580      	push	{r7, lr}
 8016de0:	b082      	sub	sp, #8
 8016de2:	af00      	add	r7, sp, #0
 8016de4:	6078      	str	r0, [r7, #4]
 8016de6:	ed87 0a00 	vstr	s0, [r7]
 8016dea:	687b      	ldr	r3, [r7, #4]
 8016dec:	3304      	adds	r3, #4
 8016dee:	4618      	mov	r0, r3
 8016df0:	f7f7 f8ba 	bl	800df68 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_FLOAT;
 8016df4:	687b      	ldr	r3, [r7, #4]
 8016df6:	2201      	movs	r2, #1
 8016df8:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016dfa:	687b      	ldr	r3, [r7, #4]
 8016dfc:	3304      	adds	r3, #4
 8016dfe:	463a      	mov	r2, r7
 8016e00:	4611      	mov	r1, r2
 8016e02:	4618      	mov	r0, r3
 8016e04:	f001 f86e 	bl	8017ee4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016e08:	687b      	ldr	r3, [r7, #4]
 8016e0a:	4618      	mov	r0, r3
 8016e0c:	3708      	adds	r7, #8
 8016e0e:	46bd      	mov	sp, r7
 8016e10:	bd80      	pop	{r7, pc}

08016e12 <_ZN6SymbolC1Ed>:

Symbol::Symbol(double value)
 8016e12:	b580      	push	{r7, lr}
 8016e14:	b086      	sub	sp, #24
 8016e16:	af00      	add	r7, sp, #0
 8016e18:	60f8      	str	r0, [r7, #12]
 8016e1a:	ed87 0b00 	vstr	d0, [r7]
 8016e1e:	68fb      	ldr	r3, [r7, #12]
 8016e20:	3304      	adds	r3, #4
 8016e22:	4618      	mov	r0, r3
 8016e24:	f7f7 f8a0 	bl	800df68 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_FLOAT;
 8016e28:	68fb      	ldr	r3, [r7, #12]
 8016e2a:	2201      	movs	r2, #1
 8016e2c:	701a      	strb	r2, [r3, #0]
	this->value = (float)value;
 8016e2e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8016e32:	f7e9 fef9 	bl	8000c28 <__aeabi_d2f>
 8016e36:	4603      	mov	r3, r0
 8016e38:	617b      	str	r3, [r7, #20]
 8016e3a:	68fb      	ldr	r3, [r7, #12]
 8016e3c:	3304      	adds	r3, #4
 8016e3e:	f107 0214 	add.w	r2, r7, #20
 8016e42:	4611      	mov	r1, r2
 8016e44:	4618      	mov	r0, r3
 8016e46:	f001 f877 	bl	8017f38 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
}
 8016e4a:	68fb      	ldr	r3, [r7, #12]
 8016e4c:	4618      	mov	r0, r3
 8016e4e:	3718      	adds	r7, #24
 8016e50:	46bd      	mov	sp, r7
 8016e52:	bd80      	pop	{r7, pc}

08016e54 <_ZN6SymbolC1Eb>:

Symbol::Symbol(bool value)
 8016e54:	b580      	push	{r7, lr}
 8016e56:	b082      	sub	sp, #8
 8016e58:	af00      	add	r7, sp, #0
 8016e5a:	6078      	str	r0, [r7, #4]
 8016e5c:	460b      	mov	r3, r1
 8016e5e:	70fb      	strb	r3, [r7, #3]
 8016e60:	687b      	ldr	r3, [r7, #4]
 8016e62:	3304      	adds	r3, #4
 8016e64:	4618      	mov	r0, r3
 8016e66:	f7f7 f87f 	bl	800df68 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_BOOL;
 8016e6a:	687b      	ldr	r3, [r7, #4]
 8016e6c:	2202      	movs	r2, #2
 8016e6e:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016e70:	687b      	ldr	r3, [r7, #4]
 8016e72:	3304      	adds	r3, #4
 8016e74:	1cfa      	adds	r2, r7, #3
 8016e76:	4611      	mov	r1, r2
 8016e78:	4618      	mov	r0, r3
 8016e7a:	f001 f887 	bl	8017f8c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016e7e:	687b      	ldr	r3, [r7, #4]
 8016e80:	4618      	mov	r0, r3
 8016e82:	3708      	adds	r7, #8
 8016e84:	46bd      	mov	sp, r7
 8016e86:	bd80      	pop	{r7, pc}

08016e88 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol::Symbol(std::string value)
 8016e88:	b580      	push	{r7, lr}
 8016e8a:	b082      	sub	sp, #8
 8016e8c:	af00      	add	r7, sp, #0
 8016e8e:	6078      	str	r0, [r7, #4]
 8016e90:	6039      	str	r1, [r7, #0]
 8016e92:	687b      	ldr	r3, [r7, #4]
 8016e94:	3304      	adds	r3, #4
 8016e96:	4618      	mov	r0, r3
 8016e98:	f7f7 f866 	bl	800df68 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1Ev>
{
	type = SYMBOL_STRING;
 8016e9c:	687b      	ldr	r3, [r7, #4]
 8016e9e:	2203      	movs	r2, #3
 8016ea0:	701a      	strb	r2, [r3, #0]
	this->value = value;
 8016ea2:	687b      	ldr	r3, [r7, #4]
 8016ea4:	3304      	adds	r3, #4
 8016ea6:	6839      	ldr	r1, [r7, #0]
 8016ea8:	4618      	mov	r0, r3
 8016eaa:	f001 f89a 	bl	8017fe2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
}
 8016eae:	687b      	ldr	r3, [r7, #4]
 8016eb0:	4618      	mov	r0, r3
 8016eb2:	3708      	adds	r7, #8
 8016eb4:	46bd      	mov	sp, r7
 8016eb6:	bd80      	pop	{r7, pc}

08016eb8 <_ZN6SymbolixES_>:
	type = SYMBOL_CONTAINER;
	this->value = std::vector<Symbol>(value);
}

Symbol& Symbol::operator[](Symbol idx)
{
 8016eb8:	b580      	push	{r7, lr}
 8016eba:	b098      	sub	sp, #96	; 0x60
 8016ebc:	af00      	add	r7, sp, #0
 8016ebe:	6078      	str	r0, [r7, #4]
 8016ec0:	6039      	str	r1, [r7, #0]
	if (idx.type != SYMBOL_INT)
 8016ec2:	683b      	ldr	r3, [r7, #0]
 8016ec4:	781b      	ldrb	r3, [r3, #0]
 8016ec6:	2b00      	cmp	r3, #0
 8016ec8:	d01b      	beq.n	8016f02 <_ZN6SymbolixES_+0x4a>
	{
		Transmitter::report_error("index must be an integer");
 8016eca:	f107 0320 	add.w	r3, r7, #32
 8016ece:	4618      	mov	r0, r3
 8016ed0:	f00c f9f6 	bl	80232c0 <_ZNSaIcEC1Ev>
 8016ed4:	f107 0220 	add.w	r2, r7, #32
 8016ed8:	f107 0308 	add.w	r3, r7, #8
 8016edc:	493a      	ldr	r1, [pc, #232]	; (8016fc8 <_ZN6SymbolixES_+0x110>)
 8016ede:	4618      	mov	r0, r3
 8016ee0:	f7ea ff87 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016ee4:	f107 0308 	add.w	r3, r7, #8
 8016ee8:	4618      	mov	r0, r3
 8016eea:	f001 fc4b 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016eee:	f107 0308 	add.w	r3, r7, #8
 8016ef2:	4618      	mov	r0, r3
 8016ef4:	f00c fc75 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016ef8:	f107 0320 	add.w	r3, r7, #32
 8016efc:	4618      	mov	r0, r3
 8016efe:	f00c f9e0 	bl	80232c2 <_ZNSaIcED1Ev>
	}
	int i = std::get<int>(idx.value);
 8016f02:	683b      	ldr	r3, [r7, #0]
 8016f04:	3304      	adds	r3, #4
 8016f06:	4618      	mov	r0, r3
 8016f08:	f7ea fdfa 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8016f0c:	4603      	mov	r3, r0
 8016f0e:	681b      	ldr	r3, [r3, #0]
 8016f10:	65fb      	str	r3, [r7, #92]	; 0x5c

	if (i < 0)
 8016f12:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016f14:	2b00      	cmp	r3, #0
 8016f16:	da1b      	bge.n	8016f50 <_ZN6SymbolixES_+0x98>
	{
		Transmitter::report_error("index must be positive");
 8016f18:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016f1c:	4618      	mov	r0, r3
 8016f1e:	f00c f9cf 	bl	80232c0 <_ZNSaIcEC1Ev>
 8016f22:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8016f26:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016f2a:	4928      	ldr	r1, [pc, #160]	; (8016fcc <_ZN6SymbolixES_+0x114>)
 8016f2c:	4618      	mov	r0, r3
 8016f2e:	f7ea ff60 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016f32:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016f36:	4618      	mov	r0, r3
 8016f38:	f001 fc24 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8016f3c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8016f40:	4618      	mov	r0, r3
 8016f42:	f00c fc4e 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016f46:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016f4a:	4618      	mov	r0, r3
 8016f4c:	f00c f9b9 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	if (type == SYMBOL_CONTAINER)
 8016f50:	687b      	ldr	r3, [r7, #4]
 8016f52:	781b      	ldrb	r3, [r3, #0]
 8016f54:	2b04      	cmp	r3, #4
 8016f56:	d10c      	bne.n	8016f72 <_ZN6SymbolixES_+0xba>
	{
		return std::get<std::vector<Symbol>>(value)[i];
 8016f58:	687b      	ldr	r3, [r7, #4]
 8016f5a:	3304      	adds	r3, #4
 8016f5c:	4618      	mov	r0, r3
 8016f5e:	f001 f879 	bl	8018054 <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 8016f62:	4602      	mov	r2, r0
 8016f64:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8016f66:	4619      	mov	r1, r3
 8016f68:	4610      	mov	r0, r2
 8016f6a:	f001 f87f 	bl	801806c <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 8016f6e:	4603      	mov	r3, r0
 8016f70:	e026      	b.n	8016fc0 <_ZN6SymbolixES_+0x108>
	}
	else
	{
		Transmitter::report_error(
 8016f72:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8016f76:	4618      	mov	r0, r3
 8016f78:	f00c f9a2 	bl	80232c0 <_ZNSaIcEC1Ev>
 8016f7c:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8016f80:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016f84:	4912      	ldr	r1, [pc, #72]	; (8016fd0 <_ZN6SymbolixES_+0x118>)
 8016f86:	4618      	mov	r0, r3
 8016f88:	f7ea ff33 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016f8c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016f90:	4618      	mov	r0, r3
 8016f92:	f001 fbf7 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
				"cannot perform [] operation on non container");
 8016f96:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8016f9a:	4618      	mov	r0, r3
 8016f9c:	f00c fc21 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016fa0:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8016fa4:	4618      	mov	r0, r3
 8016fa6:	f00c f98c 	bl	80232c2 <_ZNSaIcED1Ev>
		return std::get<std::vector<Symbol>>(value)[0];
 8016faa:	687b      	ldr	r3, [r7, #4]
 8016fac:	3304      	adds	r3, #4
 8016fae:	4618      	mov	r0, r3
 8016fb0:	f001 f850 	bl	8018054 <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 8016fb4:	4603      	mov	r3, r0
 8016fb6:	2100      	movs	r1, #0
 8016fb8:	4618      	mov	r0, r3
 8016fba:	f001 f857 	bl	801806c <_ZNSt6vectorI6SymbolSaIS0_EEixEj>
 8016fbe:	4603      	mov	r3, r0
	}
}
 8016fc0:	4618      	mov	r0, r3
 8016fc2:	3760      	adds	r7, #96	; 0x60
 8016fc4:	46bd      	mov	sp, r7
 8016fc6:	bd80      	pop	{r7, pc}
 8016fc8:	080299c0 	.word	0x080299c0
 8016fcc:	080299dc 	.word	0x080299dc
 8016fd0:	080299f4 	.word	0x080299f4

08016fd4 <_ZN6SymbolplES_>:

Symbol Symbol::operator+(Symbol other)
{
 8016fd4:	b590      	push	{r4, r7, lr}
 8016fd6:	ed2d 8b02 	vpush	{d8}
 8016fda:	b093      	sub	sp, #76	; 0x4c
 8016fdc:	af00      	add	r7, sp, #0
 8016fde:	60f8      	str	r0, [r7, #12]
 8016fe0:	60b9      	str	r1, [r7, #8]
 8016fe2:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8016fe4:	6879      	ldr	r1, [r7, #4]
 8016fe6:	68b8      	ldr	r0, [r7, #8]
 8016fe8:	f000 fe32 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8016fec:	68bb      	ldr	r3, [r7, #8]
 8016fee:	781b      	ldrb	r3, [r3, #0]
 8016ff0:	2b03      	cmp	r3, #3
 8016ff2:	d86a      	bhi.n	80170ca <_ZN6SymbolplES_+0xf6>
 8016ff4:	a201      	add	r2, pc, #4	; (adr r2, 8016ffc <_ZN6SymbolplES_+0x28>)
 8016ff6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016ffa:	bf00      	nop
 8016ffc:	0801700d 	.word	0x0801700d
 8017000:	08017035 	.word	0x08017035
 8017004:	08017065 	.word	0x08017065
 8017008:	0801708f 	.word	0x0801708f
	{
	case SYMBOL_INT:
		return std::get<int>(this->value) + std::get<int>(other.value);
 801700c:	68bb      	ldr	r3, [r7, #8]
 801700e:	3304      	adds	r3, #4
 8017010:	4618      	mov	r0, r3
 8017012:	f7ea fd75 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017016:	4603      	mov	r3, r0
 8017018:	681c      	ldr	r4, [r3, #0]
 801701a:	687b      	ldr	r3, [r7, #4]
 801701c:	3304      	adds	r3, #4
 801701e:	4618      	mov	r0, r3
 8017020:	f7ea fd6e 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017024:	4603      	mov	r3, r0
 8017026:	681b      	ldr	r3, [r3, #0]
 8017028:	4423      	add	r3, r4
 801702a:	4619      	mov	r1, r3
 801702c:	68f8      	ldr	r0, [r7, #12]
 801702e:	f7ff febd 	bl	8016dac <_ZN6SymbolC1Ei>
 8017032:	e06a      	b.n	801710a <_ZN6SymbolplES_+0x136>
	case SYMBOL_FLOAT:
		return std::get<float>(this->value) + std::get<float>(other.value);
 8017034:	68bb      	ldr	r3, [r7, #8]
 8017036:	3304      	adds	r3, #4
 8017038:	4618      	mov	r0, r3
 801703a:	f000 fd5d 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801703e:	4603      	mov	r3, r0
 8017040:	ed93 8a00 	vldr	s16, [r3]
 8017044:	687b      	ldr	r3, [r7, #4]
 8017046:	3304      	adds	r3, #4
 8017048:	4618      	mov	r0, r3
 801704a:	f000 fd55 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801704e:	4603      	mov	r3, r0
 8017050:	edd3 7a00 	vldr	s15, [r3]
 8017054:	ee78 7a27 	vadd.f32	s15, s16, s15
 8017058:	eeb0 0a67 	vmov.f32	s0, s15
 801705c:	68f8      	ldr	r0, [r7, #12]
 801705e:	f7ff febe 	bl	8016dde <_ZN6SymbolC1Ef>
 8017062:	e052      	b.n	801710a <_ZN6SymbolplES_+0x136>
	case SYMBOL_BOOL:
		return std::get<bool>(this->value) + std::get<bool>(other.value);
 8017064:	68bb      	ldr	r3, [r7, #8]
 8017066:	3304      	adds	r3, #4
 8017068:	4618      	mov	r0, r3
 801706a:	f001 f80f 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801706e:	4603      	mov	r3, r0
 8017070:	781b      	ldrb	r3, [r3, #0]
 8017072:	461c      	mov	r4, r3
 8017074:	687b      	ldr	r3, [r7, #4]
 8017076:	3304      	adds	r3, #4
 8017078:	4618      	mov	r0, r3
 801707a:	f001 f807 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801707e:	4603      	mov	r3, r0
 8017080:	781b      	ldrb	r3, [r3, #0]
 8017082:	4423      	add	r3, r4
 8017084:	4619      	mov	r1, r3
 8017086:	68f8      	ldr	r0, [r7, #12]
 8017088:	f7ff fe90 	bl	8016dac <_ZN6SymbolC1Ei>
 801708c:	e03d      	b.n	801710a <_ZN6SymbolplES_+0x136>
	case SYMBOL_STRING:
		return std::get<std::string>(this->value) + std::get<std::string>(
 801708e:	68bb      	ldr	r3, [r7, #8]
 8017090:	3304      	adds	r3, #4
 8017092:	4618      	mov	r0, r3
 8017094:	f001 f806 	bl	80180a4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017098:	4604      	mov	r4, r0
				other.value);
 801709a:	687b      	ldr	r3, [r7, #4]
 801709c:	3304      	adds	r3, #4
 801709e:	4618      	mov	r0, r3
 80170a0:	f001 f800 	bl	80180a4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80170a4:	4602      	mov	r2, r0
		return std::get<std::string>(this->value) + std::get<std::string>(
 80170a6:	f107 0314 	add.w	r3, r7, #20
 80170aa:	4621      	mov	r1, r4
 80170ac:	4618      	mov	r0, r3
 80170ae:	f001 f805 	bl	80180bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_>
				other.value);
 80170b2:	f107 0314 	add.w	r3, r7, #20
 80170b6:	4619      	mov	r1, r3
 80170b8:	68f8      	ldr	r0, [r7, #12]
 80170ba:	f7ff fee5 	bl	8016e88 <_ZN6SymbolC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80170be:	f107 0314 	add.w	r3, r7, #20
 80170c2:	4618      	mov	r0, r3
 80170c4:	f00c fb8d 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80170c8:	e01f      	b.n	801710a <_ZN6SymbolplES_+0x136>
	default:
		Transmitter::report_error("invalid type for addidion");
 80170ca:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80170ce:	4618      	mov	r0, r3
 80170d0:	f00c f8f6 	bl	80232c0 <_ZNSaIcEC1Ev>
 80170d4:	f107 0244 	add.w	r2, r7, #68	; 0x44
 80170d8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80170dc:	490e      	ldr	r1, [pc, #56]	; (8017118 <_ZN6SymbolplES_+0x144>)
 80170de:	4618      	mov	r0, r3
 80170e0:	f7ea fe87 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80170e4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80170e8:	4618      	mov	r0, r3
 80170ea:	f001 fb4b 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80170ee:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80170f2:	4618      	mov	r0, r3
 80170f4:	f00c fb75 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80170f8:	f107 0344 	add.w	r3, r7, #68	; 0x44
 80170fc:	4618      	mov	r0, r3
 80170fe:	f00c f8e0 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 8017102:	2100      	movs	r1, #0
 8017104:	68f8      	ldr	r0, [r7, #12]
 8017106:	f7ff fe51 	bl	8016dac <_ZN6SymbolC1Ei>
}
 801710a:	68f8      	ldr	r0, [r7, #12]
 801710c:	374c      	adds	r7, #76	; 0x4c
 801710e:	46bd      	mov	sp, r7
 8017110:	ecbd 8b02 	vpop	{d8}
 8017114:	bd90      	pop	{r4, r7, pc}
 8017116:	bf00      	nop
 8017118:	08029a24 	.word	0x08029a24

0801711c <_ZN6SymbolmiES_>:

Symbol Symbol::operator-(Symbol other)
{
 801711c:	b590      	push	{r4, r7, lr}
 801711e:	ed2d 8b02 	vpush	{d8}
 8017122:	b08d      	sub	sp, #52	; 0x34
 8017124:	af00      	add	r7, sp, #0
 8017126:	60f8      	str	r0, [r7, #12]
 8017128:	60b9      	str	r1, [r7, #8]
 801712a:	607a      	str	r2, [r7, #4]
	assert_types(other);
 801712c:	6879      	ldr	r1, [r7, #4]
 801712e:	68b8      	ldr	r0, [r7, #8]
 8017130:	f000 fd8e 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017134:	68bb      	ldr	r3, [r7, #8]
 8017136:	781b      	ldrb	r3, [r3, #0]
 8017138:	2b00      	cmp	r3, #0
 801713a:	d002      	beq.n	8017142 <_ZN6SymbolmiES_+0x26>
 801713c:	2b01      	cmp	r3, #1
 801713e:	d014      	beq.n	801716a <_ZN6SymbolmiES_+0x4e>
 8017140:	e02b      	b.n	801719a <_ZN6SymbolmiES_+0x7e>
	{
	case SYMBOL_INT:
		return std::get<int>(this->value) - std::get<int>(other.value);
 8017142:	68bb      	ldr	r3, [r7, #8]
 8017144:	3304      	adds	r3, #4
 8017146:	4618      	mov	r0, r3
 8017148:	f7ea fcda 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801714c:	4603      	mov	r3, r0
 801714e:	681c      	ldr	r4, [r3, #0]
 8017150:	687b      	ldr	r3, [r7, #4]
 8017152:	3304      	adds	r3, #4
 8017154:	4618      	mov	r0, r3
 8017156:	f7ea fcd3 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801715a:	4603      	mov	r3, r0
 801715c:	681b      	ldr	r3, [r3, #0]
 801715e:	1ae3      	subs	r3, r4, r3
 8017160:	4619      	mov	r1, r3
 8017162:	68f8      	ldr	r0, [r7, #12]
 8017164:	f7ff fe22 	bl	8016dac <_ZN6SymbolC1Ei>
 8017168:	e037      	b.n	80171da <_ZN6SymbolmiES_+0xbe>
	case SYMBOL_FLOAT:
		return std::get<float>(this->value) - std::get<float>(other.value);
 801716a:	68bb      	ldr	r3, [r7, #8]
 801716c:	3304      	adds	r3, #4
 801716e:	4618      	mov	r0, r3
 8017170:	f000 fcc2 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017174:	4603      	mov	r3, r0
 8017176:	ed93 8a00 	vldr	s16, [r3]
 801717a:	687b      	ldr	r3, [r7, #4]
 801717c:	3304      	adds	r3, #4
 801717e:	4618      	mov	r0, r3
 8017180:	f000 fcba 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017184:	4603      	mov	r3, r0
 8017186:	edd3 7a00 	vldr	s15, [r3]
 801718a:	ee78 7a67 	vsub.f32	s15, s16, s15
 801718e:	eeb0 0a67 	vmov.f32	s0, s15
 8017192:	68f8      	ldr	r0, [r7, #12]
 8017194:	f7ff fe23 	bl	8016dde <_ZN6SymbolC1Ef>
 8017198:	e01f      	b.n	80171da <_ZN6SymbolmiES_+0xbe>
	default:
		Transmitter::report_error("invalid type for substraction");
 801719a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801719e:	4618      	mov	r0, r3
 80171a0:	f00c f88e 	bl	80232c0 <_ZNSaIcEC1Ev>
 80171a4:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80171a8:	f107 0314 	add.w	r3, r7, #20
 80171ac:	490e      	ldr	r1, [pc, #56]	; (80171e8 <_ZN6SymbolmiES_+0xcc>)
 80171ae:	4618      	mov	r0, r3
 80171b0:	f7ea fe1f 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80171b4:	f107 0314 	add.w	r3, r7, #20
 80171b8:	4618      	mov	r0, r3
 80171ba:	f001 fae3 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80171be:	f107 0314 	add.w	r3, r7, #20
 80171c2:	4618      	mov	r0, r3
 80171c4:	f00c fb0d 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80171c8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80171cc:	4618      	mov	r0, r3
 80171ce:	f00c f878 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 80171d2:	2100      	movs	r1, #0
 80171d4:	68f8      	ldr	r0, [r7, #12]
 80171d6:	f7ff fde9 	bl	8016dac <_ZN6SymbolC1Ei>
}
 80171da:	68f8      	ldr	r0, [r7, #12]
 80171dc:	3734      	adds	r7, #52	; 0x34
 80171de:	46bd      	mov	sp, r7
 80171e0:	ecbd 8b02 	vpop	{d8}
 80171e4:	bd90      	pop	{r4, r7, pc}
 80171e6:	bf00      	nop
 80171e8:	08029a40 	.word	0x08029a40

080171ec <_ZN6SymbolaaES_>:

Symbol Symbol::operator&&(Symbol other)
{
 80171ec:	b580      	push	{r7, lr}
 80171ee:	b08c      	sub	sp, #48	; 0x30
 80171f0:	af00      	add	r7, sp, #0
 80171f2:	60f8      	str	r0, [r7, #12]
 80171f4:	60b9      	str	r1, [r7, #8]
 80171f6:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 80171f8:	68bb      	ldr	r3, [r7, #8]
 80171fa:	781b      	ldrb	r3, [r3, #0]
 80171fc:	2b02      	cmp	r3, #2
 80171fe:	d103      	bne.n	8017208 <_ZN6SymbolaaES_+0x1c>
 8017200:	687b      	ldr	r3, [r7, #4]
 8017202:	781b      	ldrb	r3, [r3, #0]
 8017204:	2b02      	cmp	r3, #2
 8017206:	d01b      	beq.n	8017240 <_ZN6SymbolaaES_+0x54>
	{
		Transmitter::report_error("operator and needs boolean expressions");
 8017208:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801720c:	4618      	mov	r0, r3
 801720e:	f00c f857 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017212:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017216:	f107 0314 	add.w	r3, r7, #20
 801721a:	4918      	ldr	r1, [pc, #96]	; (801727c <_ZN6SymbolaaES_+0x90>)
 801721c:	4618      	mov	r0, r3
 801721e:	f7ea fde8 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017222:	f107 0314 	add.w	r3, r7, #20
 8017226:	4618      	mov	r0, r3
 8017228:	f001 faac 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801722c:	f107 0314 	add.w	r3, r7, #20
 8017230:	4618      	mov	r0, r3
 8017232:	f00c fad6 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017236:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801723a:	4618      	mov	r0, r3
 801723c:	f00c f841 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return std::get<bool>(this->value) && std::get<bool>(other.value);
 8017240:	68bb      	ldr	r3, [r7, #8]
 8017242:	3304      	adds	r3, #4
 8017244:	4618      	mov	r0, r3
 8017246:	f000 ff21 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801724a:	4603      	mov	r3, r0
 801724c:	781b      	ldrb	r3, [r3, #0]
 801724e:	2b00      	cmp	r3, #0
 8017250:	d00a      	beq.n	8017268 <_ZN6SymbolaaES_+0x7c>
 8017252:	687b      	ldr	r3, [r7, #4]
 8017254:	3304      	adds	r3, #4
 8017256:	4618      	mov	r0, r3
 8017258:	f000 ff18 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801725c:	4603      	mov	r3, r0
 801725e:	781b      	ldrb	r3, [r3, #0]
 8017260:	2b00      	cmp	r3, #0
 8017262:	d001      	beq.n	8017268 <_ZN6SymbolaaES_+0x7c>
 8017264:	2301      	movs	r3, #1
 8017266:	e000      	b.n	801726a <_ZN6SymbolaaES_+0x7e>
 8017268:	2300      	movs	r3, #0
 801726a:	4619      	mov	r1, r3
 801726c:	68f8      	ldr	r0, [r7, #12]
 801726e:	f7ff fdf1 	bl	8016e54 <_ZN6SymbolC1Eb>
}
 8017272:	68f8      	ldr	r0, [r7, #12]
 8017274:	3730      	adds	r7, #48	; 0x30
 8017276:	46bd      	mov	sp, r7
 8017278:	bd80      	pop	{r7, pc}
 801727a:	bf00      	nop
 801727c:	08029a60 	.word	0x08029a60

08017280 <_ZN6SymbolooES_>:

Symbol Symbol::operator||(Symbol other)
{
 8017280:	b580      	push	{r7, lr}
 8017282:	b08c      	sub	sp, #48	; 0x30
 8017284:	af00      	add	r7, sp, #0
 8017286:	60f8      	str	r0, [r7, #12]
 8017288:	60b9      	str	r1, [r7, #8]
 801728a:	607a      	str	r2, [r7, #4]
	if (type != SYMBOL_BOOL || other.type != SYMBOL_BOOL)
 801728c:	68bb      	ldr	r3, [r7, #8]
 801728e:	781b      	ldrb	r3, [r3, #0]
 8017290:	2b02      	cmp	r3, #2
 8017292:	d103      	bne.n	801729c <_ZN6SymbolooES_+0x1c>
 8017294:	687b      	ldr	r3, [r7, #4]
 8017296:	781b      	ldrb	r3, [r3, #0]
 8017298:	2b02      	cmp	r3, #2
 801729a:	d01b      	beq.n	80172d4 <_ZN6SymbolooES_+0x54>
	{
		Transmitter::report_error("operator or needs boolean expressions");
 801729c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80172a0:	4618      	mov	r0, r3
 80172a2:	f00c f80d 	bl	80232c0 <_ZNSaIcEC1Ev>
 80172a6:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80172aa:	f107 0314 	add.w	r3, r7, #20
 80172ae:	4918      	ldr	r1, [pc, #96]	; (8017310 <_ZN6SymbolooES_+0x90>)
 80172b0:	4618      	mov	r0, r3
 80172b2:	f7ea fd9e 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80172b6:	f107 0314 	add.w	r3, r7, #20
 80172ba:	4618      	mov	r0, r3
 80172bc:	f001 fa62 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80172c0:	f107 0314 	add.w	r3, r7, #20
 80172c4:	4618      	mov	r0, r3
 80172c6:	f00c fa8c 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80172ca:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80172ce:	4618      	mov	r0, r3
 80172d0:	f00b fff7 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return std::get<bool>(this->value) || std::get<bool>(other.value);
 80172d4:	68bb      	ldr	r3, [r7, #8]
 80172d6:	3304      	adds	r3, #4
 80172d8:	4618      	mov	r0, r3
 80172da:	f000 fed7 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80172de:	4603      	mov	r3, r0
 80172e0:	781b      	ldrb	r3, [r3, #0]
 80172e2:	2b00      	cmp	r3, #0
 80172e4:	d108      	bne.n	80172f8 <_ZN6SymbolooES_+0x78>
 80172e6:	687b      	ldr	r3, [r7, #4]
 80172e8:	3304      	adds	r3, #4
 80172ea:	4618      	mov	r0, r3
 80172ec:	f000 fece 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80172f0:	4603      	mov	r3, r0
 80172f2:	781b      	ldrb	r3, [r3, #0]
 80172f4:	2b00      	cmp	r3, #0
 80172f6:	d001      	beq.n	80172fc <_ZN6SymbolooES_+0x7c>
 80172f8:	2301      	movs	r3, #1
 80172fa:	e000      	b.n	80172fe <_ZN6SymbolooES_+0x7e>
 80172fc:	2300      	movs	r3, #0
 80172fe:	4619      	mov	r1, r3
 8017300:	68f8      	ldr	r0, [r7, #12]
 8017302:	f7ff fda7 	bl	8016e54 <_ZN6SymbolC1Eb>
}
 8017306:	68f8      	ldr	r0, [r7, #12]
 8017308:	3730      	adds	r7, #48	; 0x30
 801730a:	46bd      	mov	sp, r7
 801730c:	bd80      	pop	{r7, pc}
 801730e:	bf00      	nop
 8017310:	08029a88 	.word	0x08029a88

08017314 <_ZN6SymbolntEv>:

Symbol Symbol::operator!()
{
 8017314:	b580      	push	{r7, lr}
 8017316:	b08a      	sub	sp, #40	; 0x28
 8017318:	af00      	add	r7, sp, #0
 801731a:	6078      	str	r0, [r7, #4]
 801731c:	6039      	str	r1, [r7, #0]
	if (type != SYMBOL_BOOL)
 801731e:	683b      	ldr	r3, [r7, #0]
 8017320:	781b      	ldrb	r3, [r3, #0]
 8017322:	2b02      	cmp	r3, #2
 8017324:	d01b      	beq.n	801735e <_ZN6SymbolntEv+0x4a>
	{
		Transmitter::report_error("operator ! needs boolean expressions");
 8017326:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801732a:	4618      	mov	r0, r3
 801732c:	f00b ffc8 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017330:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017334:	f107 030c 	add.w	r3, r7, #12
 8017338:	4912      	ldr	r1, [pc, #72]	; (8017384 <_ZN6SymbolntEv+0x70>)
 801733a:	4618      	mov	r0, r3
 801733c:	f7ea fd59 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017340:	f107 030c 	add.w	r3, r7, #12
 8017344:	4618      	mov	r0, r3
 8017346:	f001 fa1d 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801734a:	f107 030c 	add.w	r3, r7, #12
 801734e:	4618      	mov	r0, r3
 8017350:	f00c fa47 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017354:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017358:	4618      	mov	r0, r3
 801735a:	f00b ffb2 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return !(std::get<bool>(this->value));
 801735e:	683b      	ldr	r3, [r7, #0]
 8017360:	3304      	adds	r3, #4
 8017362:	4618      	mov	r0, r3
 8017364:	f000 fe92 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017368:	4603      	mov	r3, r0
 801736a:	781b      	ldrb	r3, [r3, #0]
 801736c:	f083 0301 	eor.w	r3, r3, #1
 8017370:	b2db      	uxtb	r3, r3
 8017372:	4619      	mov	r1, r3
 8017374:	6878      	ldr	r0, [r7, #4]
 8017376:	f7ff fd6d 	bl	8016e54 <_ZN6SymbolC1Eb>
}
 801737a:	6878      	ldr	r0, [r7, #4]
 801737c:	3728      	adds	r7, #40	; 0x28
 801737e:	46bd      	mov	sp, r7
 8017380:	bd80      	pop	{r7, pc}
 8017382:	bf00      	nop
 8017384:	08029ab0 	.word	0x08029ab0

08017388 <_ZN6SymbolgtES_>:

Symbol Symbol::operator>(Symbol other)
{
 8017388:	b590      	push	{r4, r7, lr}
 801738a:	ed2d 8b02 	vpush	{d8}
 801738e:	b08d      	sub	sp, #52	; 0x34
 8017390:	af00      	add	r7, sp, #0
 8017392:	60f8      	str	r0, [r7, #12]
 8017394:	60b9      	str	r1, [r7, #8]
 8017396:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017398:	6879      	ldr	r1, [r7, #4]
 801739a:	68b8      	ldr	r0, [r7, #8]
 801739c:	f000 fc58 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 80173a0:	68bb      	ldr	r3, [r7, #8]
 80173a2:	781b      	ldrb	r3, [r3, #0]
 80173a4:	2b00      	cmp	r3, #0
 80173a6:	d002      	beq.n	80173ae <_ZN6SymbolgtES_+0x26>
 80173a8:	2b01      	cmp	r3, #1
 80173aa:	d018      	beq.n	80173de <_ZN6SymbolgtES_+0x56>
 80173ac:	e034      	b.n	8017418 <_ZN6SymbolgtES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) > std::get<int>(other.value));
 80173ae:	68bb      	ldr	r3, [r7, #8]
 80173b0:	3304      	adds	r3, #4
 80173b2:	4618      	mov	r0, r3
 80173b4:	f7ea fba4 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173b8:	4603      	mov	r3, r0
 80173ba:	681c      	ldr	r4, [r3, #0]
 80173bc:	687b      	ldr	r3, [r7, #4]
 80173be:	3304      	adds	r3, #4
 80173c0:	4618      	mov	r0, r3
 80173c2:	f7ea fb9d 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173c6:	4603      	mov	r3, r0
 80173c8:	681b      	ldr	r3, [r3, #0]
 80173ca:	429c      	cmp	r4, r3
 80173cc:	bfcc      	ite	gt
 80173ce:	2301      	movgt	r3, #1
 80173d0:	2300      	movle	r3, #0
 80173d2:	b2db      	uxtb	r3, r3
 80173d4:	4619      	mov	r1, r3
 80173d6:	68f8      	ldr	r0, [r7, #12]
 80173d8:	f7ff fd3c 	bl	8016e54 <_ZN6SymbolC1Eb>
 80173dc:	e03c      	b.n	8017458 <_ZN6SymbolgtES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) > std::get<float>(other.value));
 80173de:	68bb      	ldr	r3, [r7, #8]
 80173e0:	3304      	adds	r3, #4
 80173e2:	4618      	mov	r0, r3
 80173e4:	f000 fb88 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173e8:	4603      	mov	r3, r0
 80173ea:	ed93 8a00 	vldr	s16, [r3]
 80173ee:	687b      	ldr	r3, [r7, #4]
 80173f0:	3304      	adds	r3, #4
 80173f2:	4618      	mov	r0, r3
 80173f4:	f000 fb80 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80173f8:	4603      	mov	r3, r0
 80173fa:	edd3 7a00 	vldr	s15, [r3]
 80173fe:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8017402:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017406:	bfcc      	ite	gt
 8017408:	2301      	movgt	r3, #1
 801740a:	2300      	movle	r3, #0
 801740c:	b2db      	uxtb	r3, r3
 801740e:	4619      	mov	r1, r3
 8017410:	68f8      	ldr	r0, [r7, #12]
 8017412:	f7ff fd1f 	bl	8016e54 <_ZN6SymbolC1Eb>
 8017416:	e01f      	b.n	8017458 <_ZN6SymbolgtES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 8017418:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801741c:	4618      	mov	r0, r3
 801741e:	f00b ff4f 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017422:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017426:	f107 0314 	add.w	r3, r7, #20
 801742a:	490e      	ldr	r1, [pc, #56]	; (8017464 <_ZN6SymbolgtES_+0xdc>)
 801742c:	4618      	mov	r0, r3
 801742e:	f7ea fce0 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017432:	f107 0314 	add.w	r3, r7, #20
 8017436:	4618      	mov	r0, r3
 8017438:	f001 f9a4 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801743c:	f107 0314 	add.w	r3, r7, #20
 8017440:	4618      	mov	r0, r3
 8017442:	f00c f9ce 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017446:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801744a:	4618      	mov	r0, r3
 801744c:	f00b ff39 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 8017450:	2100      	movs	r1, #0
 8017452:	68f8      	ldr	r0, [r7, #12]
 8017454:	f7ff fcaa 	bl	8016dac <_ZN6SymbolC1Ei>
}
 8017458:	68f8      	ldr	r0, [r7, #12]
 801745a:	3734      	adds	r7, #52	; 0x34
 801745c:	46bd      	mov	sp, r7
 801745e:	ecbd 8b02 	vpop	{d8}
 8017462:	bd90      	pop	{r4, r7, pc}
 8017464:	08029ad8 	.word	0x08029ad8

08017468 <_ZN6SymbolgeES_>:

Symbol Symbol::operator>=(Symbol other)
{
 8017468:	b590      	push	{r4, r7, lr}
 801746a:	ed2d 8b02 	vpush	{d8}
 801746e:	b08d      	sub	sp, #52	; 0x34
 8017470:	af00      	add	r7, sp, #0
 8017472:	60f8      	str	r0, [r7, #12]
 8017474:	60b9      	str	r1, [r7, #8]
 8017476:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017478:	6879      	ldr	r1, [r7, #4]
 801747a:	68b8      	ldr	r0, [r7, #8]
 801747c:	f000 fbe8 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017480:	68bb      	ldr	r3, [r7, #8]
 8017482:	781b      	ldrb	r3, [r3, #0]
 8017484:	2b00      	cmp	r3, #0
 8017486:	d002      	beq.n	801748e <_ZN6SymbolgeES_+0x26>
 8017488:	2b01      	cmp	r3, #1
 801748a:	d018      	beq.n	80174be <_ZN6SymbolgeES_+0x56>
 801748c:	e034      	b.n	80174f8 <_ZN6SymbolgeES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) >= std::get<int>(other.value));
 801748e:	68bb      	ldr	r3, [r7, #8]
 8017490:	3304      	adds	r3, #4
 8017492:	4618      	mov	r0, r3
 8017494:	f7ea fb34 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017498:	4603      	mov	r3, r0
 801749a:	681c      	ldr	r4, [r3, #0]
 801749c:	687b      	ldr	r3, [r7, #4]
 801749e:	3304      	adds	r3, #4
 80174a0:	4618      	mov	r0, r3
 80174a2:	f7ea fb2d 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174a6:	4603      	mov	r3, r0
 80174a8:	681b      	ldr	r3, [r3, #0]
 80174aa:	429c      	cmp	r4, r3
 80174ac:	bfac      	ite	ge
 80174ae:	2301      	movge	r3, #1
 80174b0:	2300      	movlt	r3, #0
 80174b2:	b2db      	uxtb	r3, r3
 80174b4:	4619      	mov	r1, r3
 80174b6:	68f8      	ldr	r0, [r7, #12]
 80174b8:	f7ff fccc 	bl	8016e54 <_ZN6SymbolC1Eb>
 80174bc:	e03c      	b.n	8017538 <_ZN6SymbolgeES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) >= std::get<float>(other.value));
 80174be:	68bb      	ldr	r3, [r7, #8]
 80174c0:	3304      	adds	r3, #4
 80174c2:	4618      	mov	r0, r3
 80174c4:	f000 fb18 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174c8:	4603      	mov	r3, r0
 80174ca:	ed93 8a00 	vldr	s16, [r3]
 80174ce:	687b      	ldr	r3, [r7, #4]
 80174d0:	3304      	adds	r3, #4
 80174d2:	4618      	mov	r0, r3
 80174d4:	f000 fb10 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80174d8:	4603      	mov	r3, r0
 80174da:	edd3 7a00 	vldr	s15, [r3]
 80174de:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80174e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80174e6:	bfac      	ite	ge
 80174e8:	2301      	movge	r3, #1
 80174ea:	2300      	movlt	r3, #0
 80174ec:	b2db      	uxtb	r3, r3
 80174ee:	4619      	mov	r1, r3
 80174f0:	68f8      	ldr	r0, [r7, #12]
 80174f2:	f7ff fcaf 	bl	8016e54 <_ZN6SymbolC1Eb>
 80174f6:	e01f      	b.n	8017538 <_ZN6SymbolgeES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 80174f8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80174fc:	4618      	mov	r0, r3
 80174fe:	f00b fedf 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017502:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017506:	f107 0314 	add.w	r3, r7, #20
 801750a:	490e      	ldr	r1, [pc, #56]	; (8017544 <_ZN6SymbolgeES_+0xdc>)
 801750c:	4618      	mov	r0, r3
 801750e:	f7ea fc70 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017512:	f107 0314 	add.w	r3, r7, #20
 8017516:	4618      	mov	r0, r3
 8017518:	f001 f934 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801751c:	f107 0314 	add.w	r3, r7, #20
 8017520:	4618      	mov	r0, r3
 8017522:	f00c f95e 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017526:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801752a:	4618      	mov	r0, r3
 801752c:	f00b fec9 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 8017530:	2100      	movs	r1, #0
 8017532:	68f8      	ldr	r0, [r7, #12]
 8017534:	f7ff fc3a 	bl	8016dac <_ZN6SymbolC1Ei>
}
 8017538:	68f8      	ldr	r0, [r7, #12]
 801753a:	3734      	adds	r7, #52	; 0x34
 801753c:	46bd      	mov	sp, r7
 801753e:	ecbd 8b02 	vpop	{d8}
 8017542:	bd90      	pop	{r4, r7, pc}
 8017544:	08029ad8 	.word	0x08029ad8

08017548 <_ZN6SymbolltES_>:

Symbol Symbol::operator<(Symbol other)
{
 8017548:	b590      	push	{r4, r7, lr}
 801754a:	ed2d 8b02 	vpush	{d8}
 801754e:	b08d      	sub	sp, #52	; 0x34
 8017550:	af00      	add	r7, sp, #0
 8017552:	60f8      	str	r0, [r7, #12]
 8017554:	60b9      	str	r1, [r7, #8]
 8017556:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017558:	6879      	ldr	r1, [r7, #4]
 801755a:	68b8      	ldr	r0, [r7, #8]
 801755c:	f000 fb78 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017560:	68bb      	ldr	r3, [r7, #8]
 8017562:	781b      	ldrb	r3, [r3, #0]
 8017564:	2b00      	cmp	r3, #0
 8017566:	d002      	beq.n	801756e <_ZN6SymbolltES_+0x26>
 8017568:	2b01      	cmp	r3, #1
 801756a:	d018      	beq.n	801759e <_ZN6SymbolltES_+0x56>
 801756c:	e034      	b.n	80175d8 <_ZN6SymbolltES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) < std::get<int>(other.value));
 801756e:	68bb      	ldr	r3, [r7, #8]
 8017570:	3304      	adds	r3, #4
 8017572:	4618      	mov	r0, r3
 8017574:	f7ea fac4 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017578:	4603      	mov	r3, r0
 801757a:	681c      	ldr	r4, [r3, #0]
 801757c:	687b      	ldr	r3, [r7, #4]
 801757e:	3304      	adds	r3, #4
 8017580:	4618      	mov	r0, r3
 8017582:	f7ea fabd 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017586:	4603      	mov	r3, r0
 8017588:	681b      	ldr	r3, [r3, #0]
 801758a:	429c      	cmp	r4, r3
 801758c:	bfb4      	ite	lt
 801758e:	2301      	movlt	r3, #1
 8017590:	2300      	movge	r3, #0
 8017592:	b2db      	uxtb	r3, r3
 8017594:	4619      	mov	r1, r3
 8017596:	68f8      	ldr	r0, [r7, #12]
 8017598:	f7ff fc5c 	bl	8016e54 <_ZN6SymbolC1Eb>
 801759c:	e03c      	b.n	8017618 <_ZN6SymbolltES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) < std::get<float>(other.value));
 801759e:	68bb      	ldr	r3, [r7, #8]
 80175a0:	3304      	adds	r3, #4
 80175a2:	4618      	mov	r0, r3
 80175a4:	f000 faa8 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80175a8:	4603      	mov	r3, r0
 80175aa:	ed93 8a00 	vldr	s16, [r3]
 80175ae:	687b      	ldr	r3, [r7, #4]
 80175b0:	3304      	adds	r3, #4
 80175b2:	4618      	mov	r0, r3
 80175b4:	f000 faa0 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80175b8:	4603      	mov	r3, r0
 80175ba:	edd3 7a00 	vldr	s15, [r3]
 80175be:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80175c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175c6:	bf4c      	ite	mi
 80175c8:	2301      	movmi	r3, #1
 80175ca:	2300      	movpl	r3, #0
 80175cc:	b2db      	uxtb	r3, r3
 80175ce:	4619      	mov	r1, r3
 80175d0:	68f8      	ldr	r0, [r7, #12]
 80175d2:	f7ff fc3f 	bl	8016e54 <_ZN6SymbolC1Eb>
 80175d6:	e01f      	b.n	8017618 <_ZN6SymbolltES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 80175d8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80175dc:	4618      	mov	r0, r3
 80175de:	f00b fe6f 	bl	80232c0 <_ZNSaIcEC1Ev>
 80175e2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80175e6:	f107 0314 	add.w	r3, r7, #20
 80175ea:	490e      	ldr	r1, [pc, #56]	; (8017624 <_ZN6SymbolltES_+0xdc>)
 80175ec:	4618      	mov	r0, r3
 80175ee:	f7ea fc00 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80175f2:	f107 0314 	add.w	r3, r7, #20
 80175f6:	4618      	mov	r0, r3
 80175f8:	f001 f8c4 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80175fc:	f107 0314 	add.w	r3, r7, #20
 8017600:	4618      	mov	r0, r3
 8017602:	f00c f8ee 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017606:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801760a:	4618      	mov	r0, r3
 801760c:	f00b fe59 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 8017610:	2100      	movs	r1, #0
 8017612:	68f8      	ldr	r0, [r7, #12]
 8017614:	f7ff fbca 	bl	8016dac <_ZN6SymbolC1Ei>
}
 8017618:	68f8      	ldr	r0, [r7, #12]
 801761a:	3734      	adds	r7, #52	; 0x34
 801761c:	46bd      	mov	sp, r7
 801761e:	ecbd 8b02 	vpop	{d8}
 8017622:	bd90      	pop	{r4, r7, pc}
 8017624:	08029ad8 	.word	0x08029ad8

08017628 <_ZN6SymbolleES_>:

Symbol Symbol::operator<=(Symbol other)
{
 8017628:	b590      	push	{r4, r7, lr}
 801762a:	ed2d 8b02 	vpush	{d8}
 801762e:	b08d      	sub	sp, #52	; 0x34
 8017630:	af00      	add	r7, sp, #0
 8017632:	60f8      	str	r0, [r7, #12]
 8017634:	60b9      	str	r1, [r7, #8]
 8017636:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017638:	6879      	ldr	r1, [r7, #4]
 801763a:	68b8      	ldr	r0, [r7, #8]
 801763c:	f000 fb08 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017640:	68bb      	ldr	r3, [r7, #8]
 8017642:	781b      	ldrb	r3, [r3, #0]
 8017644:	2b00      	cmp	r3, #0
 8017646:	d002      	beq.n	801764e <_ZN6SymbolleES_+0x26>
 8017648:	2b01      	cmp	r3, #1
 801764a:	d018      	beq.n	801767e <_ZN6SymbolleES_+0x56>
 801764c:	e034      	b.n	80176b8 <_ZN6SymbolleES_+0x90>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) <= std::get<int>(other.value));
 801764e:	68bb      	ldr	r3, [r7, #8]
 8017650:	3304      	adds	r3, #4
 8017652:	4618      	mov	r0, r3
 8017654:	f7ea fa54 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017658:	4603      	mov	r3, r0
 801765a:	681c      	ldr	r4, [r3, #0]
 801765c:	687b      	ldr	r3, [r7, #4]
 801765e:	3304      	adds	r3, #4
 8017660:	4618      	mov	r0, r3
 8017662:	f7ea fa4d 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017666:	4603      	mov	r3, r0
 8017668:	681b      	ldr	r3, [r3, #0]
 801766a:	429c      	cmp	r4, r3
 801766c:	bfd4      	ite	le
 801766e:	2301      	movle	r3, #1
 8017670:	2300      	movgt	r3, #0
 8017672:	b2db      	uxtb	r3, r3
 8017674:	4619      	mov	r1, r3
 8017676:	68f8      	ldr	r0, [r7, #12]
 8017678:	f7ff fbec 	bl	8016e54 <_ZN6SymbolC1Eb>
 801767c:	e03c      	b.n	80176f8 <_ZN6SymbolleES_+0xd0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) <= std::get<float>(other.value));
 801767e:	68bb      	ldr	r3, [r7, #8]
 8017680:	3304      	adds	r3, #4
 8017682:	4618      	mov	r0, r3
 8017684:	f000 fa38 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017688:	4603      	mov	r3, r0
 801768a:	ed93 8a00 	vldr	s16, [r3]
 801768e:	687b      	ldr	r3, [r7, #4]
 8017690:	3304      	adds	r3, #4
 8017692:	4618      	mov	r0, r3
 8017694:	f000 fa30 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017698:	4603      	mov	r3, r0
 801769a:	edd3 7a00 	vldr	s15, [r3]
 801769e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80176a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80176a6:	bf94      	ite	ls
 80176a8:	2301      	movls	r3, #1
 80176aa:	2300      	movhi	r3, #0
 80176ac:	b2db      	uxtb	r3, r3
 80176ae:	4619      	mov	r1, r3
 80176b0:	68f8      	ldr	r0, [r7, #12]
 80176b2:	f7ff fbcf 	bl	8016e54 <_ZN6SymbolC1Eb>
 80176b6:	e01f      	b.n	80176f8 <_ZN6SymbolleES_+0xd0>
	default:
		Transmitter::report_error("invalid type for comparison");
 80176b8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80176bc:	4618      	mov	r0, r3
 80176be:	f00b fdff 	bl	80232c0 <_ZNSaIcEC1Ev>
 80176c2:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80176c6:	f107 0314 	add.w	r3, r7, #20
 80176ca:	490e      	ldr	r1, [pc, #56]	; (8017704 <_ZN6SymbolleES_+0xdc>)
 80176cc:	4618      	mov	r0, r3
 80176ce:	f7ea fb90 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80176d2:	f107 0314 	add.w	r3, r7, #20
 80176d6:	4618      	mov	r0, r3
 80176d8:	f001 f854 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80176dc:	f107 0314 	add.w	r3, r7, #20
 80176e0:	4618      	mov	r0, r3
 80176e2:	f00c f87e 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80176e6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80176ea:	4618      	mov	r0, r3
 80176ec:	f00b fde9 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 80176f0:	2100      	movs	r1, #0
 80176f2:	68f8      	ldr	r0, [r7, #12]
 80176f4:	f7ff fb5a 	bl	8016dac <_ZN6SymbolC1Ei>
}
 80176f8:	68f8      	ldr	r0, [r7, #12]
 80176fa:	3734      	adds	r7, #52	; 0x34
 80176fc:	46bd      	mov	sp, r7
 80176fe:	ecbd 8b02 	vpop	{d8}
 8017702:	bd90      	pop	{r4, r7, pc}
 8017704:	08029ad8 	.word	0x08029ad8

08017708 <_ZN6SymboleqES_>:

Symbol Symbol::operator==(Symbol other)
{
 8017708:	b590      	push	{r4, r7, lr}
 801770a:	ed2d 8b02 	vpush	{d8}
 801770e:	b08d      	sub	sp, #52	; 0x34
 8017710:	af00      	add	r7, sp, #0
 8017712:	60f8      	str	r0, [r7, #12]
 8017714:	60b9      	str	r1, [r7, #8]
 8017716:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017718:	6879      	ldr	r1, [r7, #4]
 801771a:	68b8      	ldr	r0, [r7, #8]
 801771c:	f000 fa98 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017720:	68bb      	ldr	r3, [r7, #8]
 8017722:	781b      	ldrb	r3, [r3, #0]
 8017724:	2b02      	cmp	r3, #2
 8017726:	d03b      	beq.n	80177a0 <_ZN6SymboleqES_+0x98>
 8017728:	2b02      	cmp	r3, #2
 801772a:	dc51      	bgt.n	80177d0 <_ZN6SymboleqES_+0xc8>
 801772c:	2b00      	cmp	r3, #0
 801772e:	d002      	beq.n	8017736 <_ZN6SymboleqES_+0x2e>
 8017730:	2b01      	cmp	r3, #1
 8017732:	d018      	beq.n	8017766 <_ZN6SymboleqES_+0x5e>
 8017734:	e04c      	b.n	80177d0 <_ZN6SymboleqES_+0xc8>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) == std::get<int>(other.value));
 8017736:	68bb      	ldr	r3, [r7, #8]
 8017738:	3304      	adds	r3, #4
 801773a:	4618      	mov	r0, r3
 801773c:	f7ea f9e0 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017740:	4603      	mov	r3, r0
 8017742:	681c      	ldr	r4, [r3, #0]
 8017744:	687b      	ldr	r3, [r7, #4]
 8017746:	3304      	adds	r3, #4
 8017748:	4618      	mov	r0, r3
 801774a:	f7ea f9d9 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801774e:	4603      	mov	r3, r0
 8017750:	681b      	ldr	r3, [r3, #0]
 8017752:	429c      	cmp	r4, r3
 8017754:	bf0c      	ite	eq
 8017756:	2301      	moveq	r3, #1
 8017758:	2300      	movne	r3, #0
 801775a:	b2db      	uxtb	r3, r3
 801775c:	4619      	mov	r1, r3
 801775e:	68f8      	ldr	r0, [r7, #12]
 8017760:	f7ff fb78 	bl	8016e54 <_ZN6SymbolC1Eb>
 8017764:	e054      	b.n	8017810 <_ZN6SymboleqES_+0x108>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) == std::get<float>(other.value));
 8017766:	68bb      	ldr	r3, [r7, #8]
 8017768:	3304      	adds	r3, #4
 801776a:	4618      	mov	r0, r3
 801776c:	f000 f9c4 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017770:	4603      	mov	r3, r0
 8017772:	ed93 8a00 	vldr	s16, [r3]
 8017776:	687b      	ldr	r3, [r7, #4]
 8017778:	3304      	adds	r3, #4
 801777a:	4618      	mov	r0, r3
 801777c:	f000 f9bc 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017780:	4603      	mov	r3, r0
 8017782:	edd3 7a00 	vldr	s15, [r3]
 8017786:	eeb4 8a67 	vcmp.f32	s16, s15
 801778a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801778e:	bf0c      	ite	eq
 8017790:	2301      	moveq	r3, #1
 8017792:	2300      	movne	r3, #0
 8017794:	b2db      	uxtb	r3, r3
 8017796:	4619      	mov	r1, r3
 8017798:	68f8      	ldr	r0, [r7, #12]
 801779a:	f7ff fb5b 	bl	8016e54 <_ZN6SymbolC1Eb>
 801779e:	e037      	b.n	8017810 <_ZN6SymboleqES_+0x108>
	case SYMBOL_BOOL:
		return (std::get<bool>(this->value) == std::get<bool>(other.value));
 80177a0:	68bb      	ldr	r3, [r7, #8]
 80177a2:	3304      	adds	r3, #4
 80177a4:	4618      	mov	r0, r3
 80177a6:	f000 fc71 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80177aa:	4603      	mov	r3, r0
 80177ac:	781c      	ldrb	r4, [r3, #0]
 80177ae:	687b      	ldr	r3, [r7, #4]
 80177b0:	3304      	adds	r3, #4
 80177b2:	4618      	mov	r0, r3
 80177b4:	f000 fc6a 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80177b8:	4603      	mov	r3, r0
 80177ba:	781b      	ldrb	r3, [r3, #0]
 80177bc:	429c      	cmp	r4, r3
 80177be:	bf0c      	ite	eq
 80177c0:	2301      	moveq	r3, #1
 80177c2:	2300      	movne	r3, #0
 80177c4:	b2db      	uxtb	r3, r3
 80177c6:	4619      	mov	r1, r3
 80177c8:	68f8      	ldr	r0, [r7, #12]
 80177ca:	f7ff fb43 	bl	8016e54 <_ZN6SymbolC1Eb>
 80177ce:	e01f      	b.n	8017810 <_ZN6SymboleqES_+0x108>
	default:
		Transmitter::report_error("invalid type for comparison");
 80177d0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80177d4:	4618      	mov	r0, r3
 80177d6:	f00b fd73 	bl	80232c0 <_ZNSaIcEC1Ev>
 80177da:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80177de:	f107 0314 	add.w	r3, r7, #20
 80177e2:	490e      	ldr	r1, [pc, #56]	; (801781c <_ZN6SymboleqES_+0x114>)
 80177e4:	4618      	mov	r0, r3
 80177e6:	f7ea fb04 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80177ea:	f107 0314 	add.w	r3, r7, #20
 80177ee:	4618      	mov	r0, r3
 80177f0:	f000 ffc8 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80177f4:	f107 0314 	add.w	r3, r7, #20
 80177f8:	4618      	mov	r0, r3
 80177fa:	f00b fff2 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80177fe:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017802:	4618      	mov	r0, r3
 8017804:	f00b fd5d 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 8017808:	2100      	movs	r1, #0
 801780a:	68f8      	ldr	r0, [r7, #12]
 801780c:	f7ff face 	bl	8016dac <_ZN6SymbolC1Ei>
}
 8017810:	68f8      	ldr	r0, [r7, #12]
 8017812:	3734      	adds	r7, #52	; 0x34
 8017814:	46bd      	mov	sp, r7
 8017816:	ecbd 8b02 	vpop	{d8}
 801781a:	bd90      	pop	{r4, r7, pc}
 801781c:	08029ad8 	.word	0x08029ad8

08017820 <_ZN6SymbolngEv>:

	return 0;
}

Symbol Symbol::operator-()
{
 8017820:	b580      	push	{r7, lr}
 8017822:	b08a      	sub	sp, #40	; 0x28
 8017824:	af00      	add	r7, sp, #0
 8017826:	6078      	str	r0, [r7, #4]
 8017828:	6039      	str	r1, [r7, #0]
	switch (type)
 801782a:	683b      	ldr	r3, [r7, #0]
 801782c:	781b      	ldrb	r3, [r3, #0]
 801782e:	2b00      	cmp	r3, #0
 8017830:	d002      	beq.n	8017838 <_ZN6SymbolngEv+0x18>
 8017832:	2b01      	cmp	r3, #1
 8017834:	d00d      	beq.n	8017852 <_ZN6SymbolngEv+0x32>
 8017836:	e01c      	b.n	8017872 <_ZN6SymbolngEv+0x52>
	{
	case SYMBOL_INT:
		return (-std::get<int>(this->value));
 8017838:	683b      	ldr	r3, [r7, #0]
 801783a:	3304      	adds	r3, #4
 801783c:	4618      	mov	r0, r3
 801783e:	f7ea f95f 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017842:	4603      	mov	r3, r0
 8017844:	681b      	ldr	r3, [r3, #0]
 8017846:	425b      	negs	r3, r3
 8017848:	4619      	mov	r1, r3
 801784a:	6878      	ldr	r0, [r7, #4]
 801784c:	f7ff faae 	bl	8016dac <_ZN6SymbolC1Ei>
 8017850:	e02f      	b.n	80178b2 <_ZN6SymbolngEv+0x92>
	case SYMBOL_FLOAT:
		return (-std::get<float>(this->value));
 8017852:	683b      	ldr	r3, [r7, #0]
 8017854:	3304      	adds	r3, #4
 8017856:	4618      	mov	r0, r3
 8017858:	f000 f94e 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801785c:	4603      	mov	r3, r0
 801785e:	edd3 7a00 	vldr	s15, [r3]
 8017862:	eef1 7a67 	vneg.f32	s15, s15
 8017866:	eeb0 0a67 	vmov.f32	s0, s15
 801786a:	6878      	ldr	r0, [r7, #4]
 801786c:	f7ff fab7 	bl	8016dde <_ZN6SymbolC1Ef>
 8017870:	e01f      	b.n	80178b2 <_ZN6SymbolngEv+0x92>
	default:
		Transmitter::report_error("invalid type for minus unary operator");
 8017872:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017876:	4618      	mov	r0, r3
 8017878:	f00b fd22 	bl	80232c0 <_ZNSaIcEC1Ev>
 801787c:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017880:	f107 030c 	add.w	r3, r7, #12
 8017884:	490d      	ldr	r1, [pc, #52]	; (80178bc <_ZN6SymbolngEv+0x9c>)
 8017886:	4618      	mov	r0, r3
 8017888:	f7ea fab3 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801788c:	f107 030c 	add.w	r3, r7, #12
 8017890:	4618      	mov	r0, r3
 8017892:	f000 ff77 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017896:	f107 030c 	add.w	r3, r7, #12
 801789a:	4618      	mov	r0, r3
 801789c:	f00b ffa1 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80178a0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80178a4:	4618      	mov	r0, r3
 80178a6:	f00b fd0c 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 80178aa:	2100      	movs	r1, #0
 80178ac:	6878      	ldr	r0, [r7, #4]
 80178ae:	f7ff fa7d 	bl	8016dac <_ZN6SymbolC1Ei>
}
 80178b2:	6878      	ldr	r0, [r7, #4]
 80178b4:	3728      	adds	r7, #40	; 0x28
 80178b6:	46bd      	mov	sp, r7
 80178b8:	bd80      	pop	{r7, pc}
 80178ba:	bf00      	nop
 80178bc:	08029af4 	.word	0x08029af4

080178c0 <_ZN6SymbolmlES_>:

Symbol Symbol::operator*(Symbol other)
{
 80178c0:	b590      	push	{r4, r7, lr}
 80178c2:	ed2d 8b02 	vpush	{d8}
 80178c6:	b08d      	sub	sp, #52	; 0x34
 80178c8:	af00      	add	r7, sp, #0
 80178ca:	60f8      	str	r0, [r7, #12]
 80178cc:	60b9      	str	r1, [r7, #8]
 80178ce:	607a      	str	r2, [r7, #4]
	assert_types(other);
 80178d0:	6879      	ldr	r1, [r7, #4]
 80178d2:	68b8      	ldr	r0, [r7, #8]
 80178d4:	f000 f9bc 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 80178d8:	68bb      	ldr	r3, [r7, #8]
 80178da:	781b      	ldrb	r3, [r3, #0]
 80178dc:	2b00      	cmp	r3, #0
 80178de:	d002      	beq.n	80178e6 <_ZN6SymbolmlES_+0x26>
 80178e0:	2b01      	cmp	r3, #1
 80178e2:	d015      	beq.n	8017910 <_ZN6SymbolmlES_+0x50>
 80178e4:	e02c      	b.n	8017940 <_ZN6SymbolmlES_+0x80>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) * std::get<int>(other.value));
 80178e6:	68bb      	ldr	r3, [r7, #8]
 80178e8:	3304      	adds	r3, #4
 80178ea:	4618      	mov	r0, r3
 80178ec:	f7ea f908 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80178f0:	4603      	mov	r3, r0
 80178f2:	681c      	ldr	r4, [r3, #0]
 80178f4:	687b      	ldr	r3, [r7, #4]
 80178f6:	3304      	adds	r3, #4
 80178f8:	4618      	mov	r0, r3
 80178fa:	f7ea f901 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80178fe:	4603      	mov	r3, r0
 8017900:	681b      	ldr	r3, [r3, #0]
 8017902:	fb03 f304 	mul.w	r3, r3, r4
 8017906:	4619      	mov	r1, r3
 8017908:	68f8      	ldr	r0, [r7, #12]
 801790a:	f7ff fa4f 	bl	8016dac <_ZN6SymbolC1Ei>
 801790e:	e037      	b.n	8017980 <_ZN6SymbolmlES_+0xc0>
	case SYMBOL_FLOAT:
		return (std::get<float>(this->value) * std::get<float>(other.value));
 8017910:	68bb      	ldr	r3, [r7, #8]
 8017912:	3304      	adds	r3, #4
 8017914:	4618      	mov	r0, r3
 8017916:	f000 f8ef 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801791a:	4603      	mov	r3, r0
 801791c:	ed93 8a00 	vldr	s16, [r3]
 8017920:	687b      	ldr	r3, [r7, #4]
 8017922:	3304      	adds	r3, #4
 8017924:	4618      	mov	r0, r3
 8017926:	f000 f8e7 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 801792a:	4603      	mov	r3, r0
 801792c:	edd3 7a00 	vldr	s15, [r3]
 8017930:	ee68 7a27 	vmul.f32	s15, s16, s15
 8017934:	eeb0 0a67 	vmov.f32	s0, s15
 8017938:	68f8      	ldr	r0, [r7, #12]
 801793a:	f7ff fa50 	bl	8016dde <_ZN6SymbolC1Ef>
 801793e:	e01f      	b.n	8017980 <_ZN6SymbolmlES_+0xc0>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8017940:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017944:	4618      	mov	r0, r3
 8017946:	f00b fcbb 	bl	80232c0 <_ZNSaIcEC1Ev>
 801794a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801794e:	f107 0314 	add.w	r3, r7, #20
 8017952:	490e      	ldr	r1, [pc, #56]	; (801798c <_ZN6SymbolmlES_+0xcc>)
 8017954:	4618      	mov	r0, r3
 8017956:	f7ea fa4c 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801795a:	f107 0314 	add.w	r3, r7, #20
 801795e:	4618      	mov	r0, r3
 8017960:	f000 ff10 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017964:	f107 0314 	add.w	r3, r7, #20
 8017968:	4618      	mov	r0, r3
 801796a:	f00b ff3a 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801796e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017972:	4618      	mov	r0, r3
 8017974:	f00b fca5 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 8017978:	2100      	movs	r1, #0
 801797a:	68f8      	ldr	r0, [r7, #12]
 801797c:	f7ff fa16 	bl	8016dac <_ZN6SymbolC1Ei>
}
 8017980:	68f8      	ldr	r0, [r7, #12]
 8017982:	3734      	adds	r7, #52	; 0x34
 8017984:	46bd      	mov	sp, r7
 8017986:	ecbd 8b02 	vpop	{d8}
 801798a:	bd90      	pop	{r4, r7, pc}
 801798c:	08029b1c 	.word	0x08029b1c

08017990 <_ZN6SymboldvES_>:

Symbol Symbol::operator/(Symbol other)
{
 8017990:	b590      	push	{r4, r7, lr}
 8017992:	ed2d 8b02 	vpush	{d8}
 8017996:	b08d      	sub	sp, #52	; 0x34
 8017998:	af00      	add	r7, sp, #0
 801799a:	60f8      	str	r0, [r7, #12]
 801799c:	60b9      	str	r1, [r7, #8]
 801799e:	607a      	str	r2, [r7, #4]
	assert_types(other);
 80179a0:	6879      	ldr	r1, [r7, #4]
 80179a2:	68b8      	ldr	r0, [r7, #8]
 80179a4:	f000 f954 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 80179a8:	68bb      	ldr	r3, [r7, #8]
 80179aa:	781b      	ldrb	r3, [r3, #0]
 80179ac:	2b00      	cmp	r3, #0
 80179ae:	d002      	beq.n	80179b6 <_ZN6SymboldvES_+0x26>
 80179b0:	2b01      	cmp	r3, #1
 80179b2:	d015      	beq.n	80179e0 <_ZN6SymboldvES_+0x50>
 80179b4:	e02c      	b.n	8017a10 <_ZN6SymboldvES_+0x80>
	{
	case SYMBOL_INT:
		return (std::get<int>(this->value) / std::get<int>(other.value));
 80179b6:	68bb      	ldr	r3, [r7, #8]
 80179b8:	3304      	adds	r3, #4
 80179ba:	4618      	mov	r0, r3
 80179bc:	f7ea f8a0 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80179c0:	4603      	mov	r3, r0
 80179c2:	681c      	ldr	r4, [r3, #0]
 80179c4:	687b      	ldr	r3, [r7, #4]
 80179c6:	3304      	adds	r3, #4
 80179c8:	4618      	mov	r0, r3
 80179ca:	f7ea f899 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80179ce:	4603      	mov	r3, r0
 80179d0:	681b      	ldr	r3, [r3, #0]
 80179d2:	fb94 f3f3 	sdiv	r3, r4, r3
 80179d6:	4619      	mov	r1, r3
 80179d8:	68f8      	ldr	r0, [r7, #12]
 80179da:	f7ff f9e7 	bl	8016dac <_ZN6SymbolC1Ei>
 80179de:	e037      	b.n	8017a50 <_ZN6SymboldvES_+0xc0>
	case SYMBOL_FLOAT:
		return(std::get<float>(this->value) / std::get<float>(other.value));
 80179e0:	68bb      	ldr	r3, [r7, #8]
 80179e2:	3304      	adds	r3, #4
 80179e4:	4618      	mov	r0, r3
 80179e6:	f000 f887 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80179ea:	4603      	mov	r3, r0
 80179ec:	ed93 8a00 	vldr	s16, [r3]
 80179f0:	687b      	ldr	r3, [r7, #4]
 80179f2:	3304      	adds	r3, #4
 80179f4:	4618      	mov	r0, r3
 80179f6:	f000 f87f 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 80179fa:	4603      	mov	r3, r0
 80179fc:	edd3 7a00 	vldr	s15, [r3]
 8017a00:	ee88 7a27 	vdiv.f32	s14, s16, s15
 8017a04:	eeb0 0a47 	vmov.f32	s0, s14
 8017a08:	68f8      	ldr	r0, [r7, #12]
 8017a0a:	f7ff f9e8 	bl	8016dde <_ZN6SymbolC1Ef>
 8017a0e:	e01f      	b.n	8017a50 <_ZN6SymboldvES_+0xc0>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8017a10:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017a14:	4618      	mov	r0, r3
 8017a16:	f00b fc53 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017a1a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017a1e:	f107 0314 	add.w	r3, r7, #20
 8017a22:	490e      	ldr	r1, [pc, #56]	; (8017a5c <_ZN6SymboldvES_+0xcc>)
 8017a24:	4618      	mov	r0, r3
 8017a26:	f7ea f9e4 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017a2a:	f107 0314 	add.w	r3, r7, #20
 8017a2e:	4618      	mov	r0, r3
 8017a30:	f000 fea8 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017a34:	f107 0314 	add.w	r3, r7, #20
 8017a38:	4618      	mov	r0, r3
 8017a3a:	f00b fed2 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017a3e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017a42:	4618      	mov	r0, r3
 8017a44:	f00b fc3d 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 8017a48:	2100      	movs	r1, #0
 8017a4a:	68f8      	ldr	r0, [r7, #12]
 8017a4c:	f7ff f9ae 	bl	8016dac <_ZN6SymbolC1Ei>
}
 8017a50:	68f8      	ldr	r0, [r7, #12]
 8017a52:	3734      	adds	r7, #52	; 0x34
 8017a54:	46bd      	mov	sp, r7
 8017a56:	ecbd 8b02 	vpop	{d8}
 8017a5a:	bd90      	pop	{r4, r7, pc}
 8017a5c:	08029b1c 	.word	0x08029b1c

08017a60 <_ZN6SymbolrmES_>:

Symbol Symbol::operator%(Symbol other)
{
 8017a60:	b590      	push	{r4, r7, lr}
 8017a62:	b08d      	sub	sp, #52	; 0x34
 8017a64:	af00      	add	r7, sp, #0
 8017a66:	60f8      	str	r0, [r7, #12]
 8017a68:	60b9      	str	r1, [r7, #8]
 8017a6a:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017a6c:	6879      	ldr	r1, [r7, #4]
 8017a6e:	68b8      	ldr	r0, [r7, #8]
 8017a70:	f000 f8ee 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017a74:	68bb      	ldr	r3, [r7, #8]
 8017a76:	781b      	ldrb	r3, [r3, #0]
 8017a78:	2b00      	cmp	r3, #0
 8017a7a:	d117      	bne.n	8017aac <_ZN6SymbolrmES_+0x4c>
	{
	case SYMBOL_INT:
		return(std::get<int>(this->value) % std::get<int>(other.value));
 8017a7c:	68bb      	ldr	r3, [r7, #8]
 8017a7e:	3304      	adds	r3, #4
 8017a80:	4618      	mov	r0, r3
 8017a82:	f7ea f83d 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017a86:	4603      	mov	r3, r0
 8017a88:	681c      	ldr	r4, [r3, #0]
 8017a8a:	687b      	ldr	r3, [r7, #4]
 8017a8c:	3304      	adds	r3, #4
 8017a8e:	4618      	mov	r0, r3
 8017a90:	f7ea f836 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017a94:	4603      	mov	r3, r0
 8017a96:	681b      	ldr	r3, [r3, #0]
 8017a98:	fb94 f2f3 	sdiv	r2, r4, r3
 8017a9c:	fb03 f302 	mul.w	r3, r3, r2
 8017aa0:	1ae3      	subs	r3, r4, r3
 8017aa2:	4619      	mov	r1, r3
 8017aa4:	68f8      	ldr	r0, [r7, #12]
 8017aa6:	f7ff f981 	bl	8016dac <_ZN6SymbolC1Ei>
 8017aaa:	e01f      	b.n	8017aec <_ZN6SymbolrmES_+0x8c>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8017aac:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017ab0:	4618      	mov	r0, r3
 8017ab2:	f00b fc05 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017ab6:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017aba:	f107 0314 	add.w	r3, r7, #20
 8017abe:	490d      	ldr	r1, [pc, #52]	; (8017af4 <_ZN6SymbolrmES_+0x94>)
 8017ac0:	4618      	mov	r0, r3
 8017ac2:	f7ea f996 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017ac6:	f107 0314 	add.w	r3, r7, #20
 8017aca:	4618      	mov	r0, r3
 8017acc:	f000 fe5a 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017ad0:	f107 0314 	add.w	r3, r7, #20
 8017ad4:	4618      	mov	r0, r3
 8017ad6:	f00b fe84 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017ada:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017ade:	4618      	mov	r0, r3
 8017ae0:	f00b fbef 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 8017ae4:	2100      	movs	r1, #0
 8017ae6:	68f8      	ldr	r0, [r7, #12]
 8017ae8:	f7ff f960 	bl	8016dac <_ZN6SymbolC1Ei>
}
 8017aec:	68f8      	ldr	r0, [r7, #12]
 8017aee:	3734      	adds	r7, #52	; 0x34
 8017af0:	46bd      	mov	sp, r7
 8017af2:	bd90      	pop	{r4, r7, pc}
 8017af4:	08029b1c 	.word	0x08029b1c

08017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8017af8:	b580      	push	{r7, lr}
 8017afa:	b082      	sub	sp, #8
 8017afc:	af00      	add	r7, sp, #0
 8017afe:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8017b00:	6878      	ldr	r0, [r7, #4]
 8017b02:	f7f0 f88d 	bl	8007c20 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017b06:	4603      	mov	r3, r0
    }
 8017b08:	4618      	mov	r0, r3
 8017b0a:	3708      	adds	r7, #8
 8017b0c:	46bd      	mov	sp, r7
 8017b0e:	bd80      	pop	{r7, pc}

08017b10 <_ZN6SymboleoES_>:

Symbol Symbol::operator^(Symbol other)
{
 8017b10:	b5b0      	push	{r4, r5, r7, lr}
 8017b12:	b08c      	sub	sp, #48	; 0x30
 8017b14:	af00      	add	r7, sp, #0
 8017b16:	60f8      	str	r0, [r7, #12]
 8017b18:	60b9      	str	r1, [r7, #8]
 8017b1a:	607a      	str	r2, [r7, #4]
	assert_types(other);
 8017b1c:	6879      	ldr	r1, [r7, #4]
 8017b1e:	68b8      	ldr	r0, [r7, #8]
 8017b20:	f000 f896 	bl	8017c50 <_ZN6Symbol12assert_typesERKS_>

	switch (type)
 8017b24:	68bb      	ldr	r3, [r7, #8]
 8017b26:	781b      	ldrb	r3, [r3, #0]
 8017b28:	2b00      	cmp	r3, #0
 8017b2a:	d002      	beq.n	8017b32 <_ZN6SymboleoES_+0x22>
 8017b2c:	2b01      	cmp	r3, #1
 8017b2e:	d02a      	beq.n	8017b86 <_ZN6SymboleoES_+0x76>
 8017b30:	e054      	b.n	8017bdc <_ZN6SymboleoES_+0xcc>
	{
	case SYMBOL_INT:
		return (int)pow(std::get<int>(this->value), std::get<int>(other.value));
 8017b32:	68bb      	ldr	r3, [r7, #8]
 8017b34:	3304      	adds	r3, #4
 8017b36:	4618      	mov	r0, r3
 8017b38:	f7e9 ffe2 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017b3c:	4603      	mov	r3, r0
 8017b3e:	681b      	ldr	r3, [r3, #0]
 8017b40:	4618      	mov	r0, r3
 8017b42:	f7e8 fd0f 	bl	8000564 <__aeabi_i2d>
 8017b46:	4604      	mov	r4, r0
 8017b48:	460d      	mov	r5, r1
 8017b4a:	687b      	ldr	r3, [r7, #4]
 8017b4c:	3304      	adds	r3, #4
 8017b4e:	4618      	mov	r0, r3
 8017b50:	f7e9 ffd6 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017b54:	4603      	mov	r3, r0
 8017b56:	681b      	ldr	r3, [r3, #0]
 8017b58:	4618      	mov	r0, r3
 8017b5a:	f7e8 fd03 	bl	8000564 <__aeabi_i2d>
 8017b5e:	4602      	mov	r2, r0
 8017b60:	460b      	mov	r3, r1
 8017b62:	ec43 2b11 	vmov	d1, r2, r3
 8017b66:	ec45 4b10 	vmov	d0, r4, r5
 8017b6a:	f00c f821 	bl	8023bb0 <pow>
 8017b6e:	ec53 2b10 	vmov	r2, r3, d0
 8017b72:	4610      	mov	r0, r2
 8017b74:	4619      	mov	r1, r3
 8017b76:	f7e9 f80f 	bl	8000b98 <__aeabi_d2iz>
 8017b7a:	4603      	mov	r3, r0
 8017b7c:	4619      	mov	r1, r3
 8017b7e:	68f8      	ldr	r0, [r7, #12]
 8017b80:	f7ff f914 	bl	8016dac <_ZN6SymbolC1Ei>
 8017b84:	e04a      	b.n	8017c1c <_ZN6SymboleoES_+0x10c>
	case SYMBOL_FLOAT:
		return (float)pow(std::get<float>(this->value), std::get<float>(other.value));
 8017b86:	68bb      	ldr	r3, [r7, #8]
 8017b88:	3304      	adds	r3, #4
 8017b8a:	4618      	mov	r0, r3
 8017b8c:	f7ff ffb4 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017b90:	4603      	mov	r3, r0
 8017b92:	681b      	ldr	r3, [r3, #0]
 8017b94:	4618      	mov	r0, r3
 8017b96:	f7e8 fcf7 	bl	8000588 <__aeabi_f2d>
 8017b9a:	4604      	mov	r4, r0
 8017b9c:	460d      	mov	r5, r1
 8017b9e:	687b      	ldr	r3, [r7, #4]
 8017ba0:	3304      	adds	r3, #4
 8017ba2:	4618      	mov	r0, r3
 8017ba4:	f7ff ffa8 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017ba8:	4603      	mov	r3, r0
 8017baa:	681b      	ldr	r3, [r3, #0]
 8017bac:	4618      	mov	r0, r3
 8017bae:	f7e8 fceb 	bl	8000588 <__aeabi_f2d>
 8017bb2:	4602      	mov	r2, r0
 8017bb4:	460b      	mov	r3, r1
 8017bb6:	ec43 2b11 	vmov	d1, r2, r3
 8017bba:	ec45 4b10 	vmov	d0, r4, r5
 8017bbe:	f00b fff7 	bl	8023bb0 <pow>
 8017bc2:	ec53 2b10 	vmov	r2, r3, d0
 8017bc6:	4610      	mov	r0, r2
 8017bc8:	4619      	mov	r1, r3
 8017bca:	f7e9 f82d 	bl	8000c28 <__aeabi_d2f>
 8017bce:	4603      	mov	r3, r0
 8017bd0:	ee00 3a10 	vmov	s0, r3
 8017bd4:	68f8      	ldr	r0, [r7, #12]
 8017bd6:	f7ff f902 	bl	8016dde <_ZN6SymbolC1Ef>
 8017bda:	e01f      	b.n	8017c1c <_ZN6SymboleoES_+0x10c>
	default:
		Transmitter::report_error("invalid type for multiplication");
 8017bdc:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017be0:	4618      	mov	r0, r3
 8017be2:	f00b fb6d 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017be6:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017bea:	f107 0314 	add.w	r3, r7, #20
 8017bee:	490d      	ldr	r1, [pc, #52]	; (8017c24 <_ZN6SymboleoES_+0x114>)
 8017bf0:	4618      	mov	r0, r3
 8017bf2:	f7ea f8fe 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017bf6:	f107 0314 	add.w	r3, r7, #20
 8017bfa:	4618      	mov	r0, r3
 8017bfc:	f000 fdc2 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017c00:	f107 0314 	add.w	r3, r7, #20
 8017c04:	4618      	mov	r0, r3
 8017c06:	f00b fdec 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017c0a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8017c0e:	4618      	mov	r0, r3
 8017c10:	f00b fb57 	bl	80232c2 <_ZNSaIcED1Ev>
	}

	return 0;
 8017c14:	2100      	movs	r1, #0
 8017c16:	68f8      	ldr	r0, [r7, #12]
 8017c18:	f7ff f8c8 	bl	8016dac <_ZN6SymbolC1Ei>
}
 8017c1c:	68f8      	ldr	r0, [r7, #12]
 8017c1e:	3730      	adds	r7, #48	; 0x30
 8017c20:	46bd      	mov	sp, r7
 8017c22:	bdb0      	pop	{r4, r5, r7, pc}
 8017c24:	08029b1c 	.word	0x08029b1c

08017c28 <_ZN6Symbol8get_boolEv>:


bool Symbol::get_bool()
{
 8017c28:	b580      	push	{r7, lr}
 8017c2a:	b082      	sub	sp, #8
 8017c2c:	af00      	add	r7, sp, #0
 8017c2e:	6078      	str	r0, [r7, #4]
	assert_type(SYMBOL_BOOL);
 8017c30:	2102      	movs	r1, #2
 8017c32:	6878      	ldr	r0, [r7, #4]
 8017c34:	f000 f83a 	bl	8017cac <_ZN6Symbol11assert_typeE11symbol_type>
	return std::get<bool>(value);
 8017c38:	687b      	ldr	r3, [r7, #4]
 8017c3a:	3304      	adds	r3, #4
 8017c3c:	4618      	mov	r0, r3
 8017c3e:	f000 fa25 	bl	801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017c42:	4603      	mov	r3, r0
 8017c44:	781b      	ldrb	r3, [r3, #0]
}
 8017c46:	4618      	mov	r0, r3
 8017c48:	3708      	adds	r7, #8
 8017c4a:	46bd      	mov	sp, r7
 8017c4c:	bd80      	pop	{r7, pc}
	...

08017c50 <_ZN6Symbol12assert_typesERKS_>:

void Symbol::assert_types(const Symbol &other)
{
 8017c50:	b580      	push	{r7, lr}
 8017c52:	b08a      	sub	sp, #40	; 0x28
 8017c54:	af00      	add	r7, sp, #0
 8017c56:	6078      	str	r0, [r7, #4]
 8017c58:	6039      	str	r1, [r7, #0]
	if (type != other.type)
 8017c5a:	687b      	ldr	r3, [r7, #4]
 8017c5c:	781a      	ldrb	r2, [r3, #0]
 8017c5e:	683b      	ldr	r3, [r7, #0]
 8017c60:	781b      	ldrb	r3, [r3, #0]
 8017c62:	429a      	cmp	r2, r3
 8017c64:	d01b      	beq.n	8017c9e <_ZN6Symbol12assert_typesERKS_+0x4e>
	{
		Transmitter::report_error("types mismatch");
 8017c66:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017c6a:	4618      	mov	r0, r3
 8017c6c:	f00b fb28 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017c70:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017c74:	f107 030c 	add.w	r3, r7, #12
 8017c78:	490b      	ldr	r1, [pc, #44]	; (8017ca8 <_ZN6Symbol12assert_typesERKS_+0x58>)
 8017c7a:	4618      	mov	r0, r3
 8017c7c:	f7ea f8b9 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017c80:	f107 030c 	add.w	r3, r7, #12
 8017c84:	4618      	mov	r0, r3
 8017c86:	f000 fd7d 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017c8a:	f107 030c 	add.w	r3, r7, #12
 8017c8e:	4618      	mov	r0, r3
 8017c90:	f00b fda7 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017c94:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017c98:	4618      	mov	r0, r3
 8017c9a:	f00b fb12 	bl	80232c2 <_ZNSaIcED1Ev>
	}
}
 8017c9e:	bf00      	nop
 8017ca0:	3728      	adds	r7, #40	; 0x28
 8017ca2:	46bd      	mov	sp, r7
 8017ca4:	bd80      	pop	{r7, pc}
 8017ca6:	bf00      	nop
 8017ca8:	08029b3c 	.word	0x08029b3c

08017cac <_ZN6Symbol11assert_typeE11symbol_type>:

void Symbol::assert_type(symbol_type type)
{
 8017cac:	b580      	push	{r7, lr}
 8017cae:	b08a      	sub	sp, #40	; 0x28
 8017cb0:	af00      	add	r7, sp, #0
 8017cb2:	6078      	str	r0, [r7, #4]
 8017cb4:	460b      	mov	r3, r1
 8017cb6:	70fb      	strb	r3, [r7, #3]
	if(this->type != type)
 8017cb8:	687b      	ldr	r3, [r7, #4]
 8017cba:	781b      	ldrb	r3, [r3, #0]
 8017cbc:	78fa      	ldrb	r2, [r7, #3]
 8017cbe:	429a      	cmp	r2, r3
 8017cc0:	d01b      	beq.n	8017cfa <_ZN6Symbol11assert_typeE11symbol_type+0x4e>
	{
		Transmitter::report_error(std::string("")); //todo message
 8017cc2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017cc6:	4618      	mov	r0, r3
 8017cc8:	f00b fafa 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017ccc:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8017cd0:	f107 030c 	add.w	r3, r7, #12
 8017cd4:	490b      	ldr	r1, [pc, #44]	; (8017d04 <_ZN6Symbol11assert_typeE11symbol_type+0x58>)
 8017cd6:	4618      	mov	r0, r3
 8017cd8:	f7ea f88b 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017cdc:	f107 030c 	add.w	r3, r7, #12
 8017ce0:	4618      	mov	r0, r3
 8017ce2:	f000 fd4f 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017ce6:	f107 030c 	add.w	r3, r7, #12
 8017cea:	4618      	mov	r0, r3
 8017cec:	f00b fd79 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017cf0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017cf4:	4618      	mov	r0, r3
 8017cf6:	f00b fae4 	bl	80232c2 <_ZNSaIcED1Ev>
	}
}
 8017cfa:	bf00      	nop
 8017cfc:	3728      	adds	r7, #40	; 0x28
 8017cfe:	46bd      	mov	sp, r7
 8017d00:	bd80      	pop	{r7, pc}
 8017d02:	bf00      	nop
 8017d04:	08029b4c 	.word	0x08029b4c

08017d08 <_ZN6Symbol6resizeEi>:

void Symbol::resize(int size)
{
 8017d08:	b580      	push	{r7, lr}
 8017d0a:	b086      	sub	sp, #24
 8017d0c:	af00      	add	r7, sp, #0
 8017d0e:	6078      	str	r0, [r7, #4]
 8017d10:	6039      	str	r1, [r7, #0]
	std::vector<Symbol> vec = std::get<std::vector<Symbol>>(value);
 8017d12:	687b      	ldr	r3, [r7, #4]
 8017d14:	3304      	adds	r3, #4
 8017d16:	4618      	mov	r0, r3
 8017d18:	f000 f99c 	bl	8018054 <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>
 8017d1c:	4602      	mov	r2, r0
 8017d1e:	f107 030c 	add.w	r3, r7, #12
 8017d22:	4611      	mov	r1, r2
 8017d24:	4618      	mov	r0, r3
 8017d26:	f7f0 fccc 	bl	80086c2 <_ZNSt6vectorI6SymbolSaIS0_EEC1ERKS2_>
	if(vec.size() < (unsigned int)size)
 8017d2a:	f107 030c 	add.w	r3, r7, #12
 8017d2e:	4618      	mov	r0, r3
 8017d30:	f7f0 f9d9 	bl	80080e6 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 8017d34:	4602      	mov	r2, r0
 8017d36:	683b      	ldr	r3, [r7, #0]
 8017d38:	429a      	cmp	r2, r3
 8017d3a:	bf34      	ite	cc
 8017d3c:	2301      	movcc	r3, #1
 8017d3e:	2300      	movcs	r3, #0
 8017d40:	b2db      	uxtb	r3, r3
 8017d42:	2b00      	cmp	r3, #0
 8017d44:	d006      	beq.n	8017d54 <_ZN6Symbol6resizeEi+0x4c>
	{
		vec.reserve(size);
 8017d46:	683a      	ldr	r2, [r7, #0]
 8017d48:	f107 030c 	add.w	r3, r7, #12
 8017d4c:	4611      	mov	r1, r2
 8017d4e:	4618      	mov	r0, r3
 8017d50:	f000 f9c8 	bl	80180e4 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj>
	std::vector<Symbol> vec = std::get<std::vector<Symbol>>(value);
 8017d54:	f107 030c 	add.w	r3, r7, #12
 8017d58:	4618      	mov	r0, r3
 8017d5a:	f7f0 fd4b 	bl	80087f4 <_ZNSt6vectorI6SymbolSaIS0_EED1Ev>
	}
}
 8017d5e:	bf00      	nop
 8017d60:	3718      	adds	r7, #24
 8017d62:	46bd      	mov	sp, r7
 8017d64:	bd80      	pop	{r7, pc}
	...

08017d68 <_ZN6Symbol5roundEv>:

void Symbol::round()
{
 8017d68:	b580      	push	{r7, lr}
 8017d6a:	b08c      	sub	sp, #48	; 0x30
 8017d6c:	af00      	add	r7, sp, #0
 8017d6e:	6078      	str	r0, [r7, #4]
	if(type == SYMBOL_INT)
 8017d70:	687b      	ldr	r3, [r7, #4]
 8017d72:	781b      	ldrb	r3, [r3, #0]
 8017d74:	2b00      	cmp	r3, #0
 8017d76:	d03b      	beq.n	8017df0 <_ZN6Symbol5roundEv+0x88>
	{
		return;
	}
	else if(type == SYMBOL_FLOAT)
 8017d78:	687b      	ldr	r3, [r7, #4]
 8017d7a:	781b      	ldrb	r3, [r3, #0]
 8017d7c:	2b01      	cmp	r3, #1
 8017d7e:	d11a      	bne.n	8017db6 <_ZN6Symbol5roundEv+0x4e>
	{
		float result = std::get<float>(value);
 8017d80:	687b      	ldr	r3, [r7, #4]
 8017d82:	3304      	adds	r3, #4
 8017d84:	4618      	mov	r0, r3
 8017d86:	f7ff feb7 	bl	8017af8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017d8a:	4603      	mov	r3, r0
 8017d8c:	681b      	ldr	r3, [r3, #0]
 8017d8e:	62fb      	str	r3, [r7, #44]	; 0x2c
		type = SYMBOL_INT;
 8017d90:	687b      	ldr	r3, [r7, #4]
 8017d92:	2200      	movs	r2, #0
 8017d94:	701a      	strb	r2, [r3, #0]
		value = (int)result;
 8017d96:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8017d9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017d9e:	ee17 3a90 	vmov	r3, s15
 8017da2:	60fb      	str	r3, [r7, #12]
 8017da4:	687b      	ldr	r3, [r7, #4]
 8017da6:	3304      	adds	r3, #4
 8017da8:	f107 020c 	add.w	r2, r7, #12
 8017dac:	4611      	mov	r1, r2
 8017dae:	4618      	mov	r0, r3
 8017db0:	f000 f9f2 	bl	8018198 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8017db4:	e01d      	b.n	8017df2 <_ZN6Symbol5roundEv+0x8a>
	}
	else
	{
		Transmitter::report_error(std::string("can not round a non float"));
 8017db6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8017dba:	4618      	mov	r0, r3
 8017dbc:	f00b fa80 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017dc0:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8017dc4:	f107 0310 	add.w	r3, r7, #16
 8017dc8:	490b      	ldr	r1, [pc, #44]	; (8017df8 <_ZN6Symbol5roundEv+0x90>)
 8017dca:	4618      	mov	r0, r3
 8017dcc:	f7ea f811 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017dd0:	f107 0310 	add.w	r3, r7, #16
 8017dd4:	4618      	mov	r0, r3
 8017dd6:	f000 fcd5 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017dda:	f107 0310 	add.w	r3, r7, #16
 8017dde:	4618      	mov	r0, r3
 8017de0:	f00b fcff 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017de4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8017de8:	4618      	mov	r0, r3
 8017dea:	f00b fa6a 	bl	80232c2 <_ZNSaIcED1Ev>
 8017dee:	e000      	b.n	8017df2 <_ZN6Symbol5roundEv+0x8a>
		return;
 8017df0:	bf00      	nop
	}
}
 8017df2:	3730      	adds	r7, #48	; 0x30
 8017df4:	46bd      	mov	sp, r7
 8017df6:	bd80      	pop	{r7, pc}
 8017df8:	08029b50 	.word	0x08029b50

08017dfc <_ZN6Symbol8floatifyEv>:

void Symbol::floatify()
{
 8017dfc:	b580      	push	{r7, lr}
 8017dfe:	b08c      	sub	sp, #48	; 0x30
 8017e00:	af00      	add	r7, sp, #0
 8017e02:	6078      	str	r0, [r7, #4]
	if(type == SYMBOL_INT)
 8017e04:	687b      	ldr	r3, [r7, #4]
 8017e06:	781b      	ldrb	r3, [r3, #0]
 8017e08:	2b00      	cmp	r3, #0
 8017e0a:	d11a      	bne.n	8017e42 <_ZN6Symbol8floatifyEv+0x46>
	{
		float result = std::get<int>(value);
 8017e0c:	687b      	ldr	r3, [r7, #4]
 8017e0e:	3304      	adds	r3, #4
 8017e10:	4618      	mov	r0, r3
 8017e12:	f7e9 fe75 	bl	8001b00 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>
 8017e16:	4603      	mov	r3, r0
 8017e18:	681b      	ldr	r3, [r3, #0]
 8017e1a:	ee07 3a90 	vmov	s15, r3
 8017e1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017e22:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
		type = SYMBOL_FLOAT;
 8017e26:	687b      	ldr	r3, [r7, #4]
 8017e28:	2201      	movs	r2, #1
 8017e2a:	701a      	strb	r2, [r3, #0]
		value = (float)result;
 8017e2c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8017e2e:	60fb      	str	r3, [r7, #12]
 8017e30:	687b      	ldr	r3, [r7, #4]
 8017e32:	3304      	adds	r3, #4
 8017e34:	f107 020c 	add.w	r2, r7, #12
 8017e38:	4611      	mov	r1, r2
 8017e3a:	4618      	mov	r0, r3
 8017e3c:	f000 f87c 	bl	8017f38 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8017e40:	e021      	b.n	8017e86 <_ZN6Symbol8floatifyEv+0x8a>
	}
	else if(type == SYMBOL_FLOAT)
 8017e42:	687b      	ldr	r3, [r7, #4]
 8017e44:	781b      	ldrb	r3, [r3, #0]
 8017e46:	2b01      	cmp	r3, #1
 8017e48:	d01c      	beq.n	8017e84 <_ZN6Symbol8floatifyEv+0x88>
	{
		return;
	}
	else
	{
		Transmitter::report_error(std::string("can not floatify a non int"));
 8017e4a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8017e4e:	4618      	mov	r0, r3
 8017e50:	f00b fa36 	bl	80232c0 <_ZNSaIcEC1Ev>
 8017e54:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8017e58:	f107 0310 	add.w	r3, r7, #16
 8017e5c:	490b      	ldr	r1, [pc, #44]	; (8017e8c <_ZN6Symbol8floatifyEv+0x90>)
 8017e5e:	4618      	mov	r0, r3
 8017e60:	f7e9 ffc7 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017e64:	f107 0310 	add.w	r3, r7, #16
 8017e68:	4618      	mov	r0, r3
 8017e6a:	f000 fc8b 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017e6e:	f107 0310 	add.w	r3, r7, #16
 8017e72:	4618      	mov	r0, r3
 8017e74:	f00b fcb5 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017e78:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8017e7c:	4618      	mov	r0, r3
 8017e7e:	f00b fa20 	bl	80232c2 <_ZNSaIcED1Ev>
 8017e82:	e000      	b.n	8017e86 <_ZN6Symbol8floatifyEv+0x8a>
		return;
 8017e84:	bf00      	nop
	}
}
 8017e86:	3730      	adds	r7, #48	; 0x30
 8017e88:	46bd      	mov	sp, r7
 8017e8a:	bd80      	pop	{r7, pc}
 8017e8c:	08029b6c 	.word	0x08029b6c

08017e90 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017e90:	b590      	push	{r4, r7, lr}
 8017e92:	b085      	sub	sp, #20
 8017e94:	af00      	add	r7, sp, #0
 8017e96:	6078      	str	r0, [r7, #4]
 8017e98:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017e9a:	2300      	movs	r3, #0
 8017e9c:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017e9e:	6878      	ldr	r0, [r7, #4]
 8017ea0:	f7e9 fe3a 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017ea4:	4603      	mov	r3, r0
 8017ea6:	2b00      	cmp	r3, #0
 8017ea8:	bf0c      	ite	eq
 8017eaa:	2301      	moveq	r3, #1
 8017eac:	2300      	movne	r3, #0
 8017eae:	b2db      	uxtb	r3, r3
 8017eb0:	2b00      	cmp	r3, #0
 8017eb2:	d00a      	beq.n	8017eca <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017eb4:	6838      	ldr	r0, [r7, #0]
 8017eb6:	f7ec fea1 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8017eba:	4603      	mov	r3, r0
 8017ebc:	681c      	ldr	r4, [r3, #0]
 8017ebe:	6878      	ldr	r0, [r7, #4]
 8017ec0:	f7e9 fe60 	bl	8001b84 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017ec4:	4603      	mov	r3, r0
 8017ec6:	601c      	str	r4, [r3, #0]
 8017ec8:	e007      	b.n	8017eda <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017eca:	6838      	ldr	r0, [r7, #0]
 8017ecc:	f7ec fe96 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8017ed0:	4603      	mov	r3, r0
 8017ed2:	4619      	mov	r1, r3
 8017ed4:	6878      	ldr	r0, [r7, #4]
 8017ed6:	f000 f989 	bl	80181ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 8017eda:	687b      	ldr	r3, [r7, #4]
	}
 8017edc:	4618      	mov	r0, r3
 8017ede:	3714      	adds	r7, #20
 8017ee0:	46bd      	mov	sp, r7
 8017ee2:	bd90      	pop	{r4, r7, pc}

08017ee4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017ee4:	b590      	push	{r4, r7, lr}
 8017ee6:	b085      	sub	sp, #20
 8017ee8:	af00      	add	r7, sp, #0
 8017eea:	6078      	str	r0, [r7, #4]
 8017eec:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017eee:	2301      	movs	r3, #1
 8017ef0:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017ef2:	6878      	ldr	r0, [r7, #4]
 8017ef4:	f7e9 fe10 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017ef8:	4603      	mov	r3, r0
 8017efa:	2b01      	cmp	r3, #1
 8017efc:	bf0c      	ite	eq
 8017efe:	2301      	moveq	r3, #1
 8017f00:	2300      	movne	r3, #0
 8017f02:	b2db      	uxtb	r3, r3
 8017f04:	2b00      	cmp	r3, #0
 8017f06:	d00a      	beq.n	8017f1e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017f08:	6838      	ldr	r0, [r7, #0]
 8017f0a:	f7ec feab 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8017f0e:	4603      	mov	r3, r0
 8017f10:	681c      	ldr	r4, [r3, #0]
 8017f12:	6878      	ldr	r0, [r7, #4]
 8017f14:	f7ef fe84 	bl	8007c20 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017f18:	4603      	mov	r3, r0
 8017f1a:	601c      	str	r4, [r3, #0]
 8017f1c:	e007      	b.n	8017f2e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017f1e:	6838      	ldr	r0, [r7, #0]
 8017f20:	f7ec fea0 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8017f24:	4603      	mov	r3, r0
 8017f26:	4619      	mov	r1, r3
 8017f28:	6878      	ldr	r0, [r7, #4]
 8017f2a:	f000 f978 	bl	801821e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 8017f2e:	687b      	ldr	r3, [r7, #4]
	}
 8017f30:	4618      	mov	r0, r3
 8017f32:	3714      	adds	r7, #20
 8017f34:	46bd      	mov	sp, r7
 8017f36:	bd90      	pop	{r4, r7, pc}

08017f38 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8017f38:	b590      	push	{r4, r7, lr}
 8017f3a:	b085      	sub	sp, #20
 8017f3c:	af00      	add	r7, sp, #0
 8017f3e:	6078      	str	r0, [r7, #4]
 8017f40:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017f42:	2301      	movs	r3, #1
 8017f44:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017f46:	6878      	ldr	r0, [r7, #4]
 8017f48:	f7e9 fde6 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017f4c:	4603      	mov	r3, r0
 8017f4e:	2b01      	cmp	r3, #1
 8017f50:	bf0c      	ite	eq
 8017f52:	2301      	moveq	r3, #1
 8017f54:	2300      	movne	r3, #0
 8017f56:	b2db      	uxtb	r3, r3
 8017f58:	2b00      	cmp	r3, #0
 8017f5a:	d00a      	beq.n	8017f72 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017f5c:	6838      	ldr	r0, [r7, #0]
 8017f5e:	f7ef fe35 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8017f62:	4603      	mov	r3, r0
 8017f64:	681c      	ldr	r4, [r3, #0]
 8017f66:	6878      	ldr	r0, [r7, #4]
 8017f68:	f7ef fe5a 	bl	8007c20 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017f6c:	4603      	mov	r3, r0
 8017f6e:	601c      	str	r4, [r3, #0]
 8017f70:	e007      	b.n	8017f82 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017f72:	6838      	ldr	r0, [r7, #0]
 8017f74:	f7ef fe2a 	bl	8007bcc <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8017f78:	4603      	mov	r3, r0
 8017f7a:	4619      	mov	r1, r3
 8017f7c:	6878      	ldr	r0, [r7, #4]
 8017f7e:	f7ef f8c1 	bl	8007104 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8017f82:	687b      	ldr	r3, [r7, #4]
	}
 8017f84:	4618      	mov	r0, r3
 8017f86:	3714      	adds	r7, #20
 8017f88:	46bd      	mov	sp, r7
 8017f8a:	bd90      	pop	{r4, r7, pc}

08017f8c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017f8c:	b590      	push	{r4, r7, lr}
 8017f8e:	b085      	sub	sp, #20
 8017f90:	af00      	add	r7, sp, #0
 8017f92:	6078      	str	r0, [r7, #4]
 8017f94:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017f96:	2302      	movs	r3, #2
 8017f98:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017f9a:	6878      	ldr	r0, [r7, #4]
 8017f9c:	f7e9 fdbc 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017fa0:	4603      	mov	r3, r0
 8017fa2:	2b02      	cmp	r3, #2
 8017fa4:	bf0c      	ite	eq
 8017fa6:	2301      	moveq	r3, #1
 8017fa8:	2300      	movne	r3, #0
 8017faa:	b2db      	uxtb	r3, r3
 8017fac:	2b00      	cmp	r3, #0
 8017fae:	d00b      	beq.n	8017fc8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017fb0:	6838      	ldr	r0, [r7, #0]
 8017fb2:	f7ec fe8b 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8017fb6:	4603      	mov	r3, r0
 8017fb8:	781c      	ldrb	r4, [r3, #0]
 8017fba:	6878      	ldr	r0, [r7, #4]
 8017fbc:	f7ef fe78 	bl	8007cb0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8017fc0:	4603      	mov	r3, r0
 8017fc2:	4622      	mov	r2, r4
 8017fc4:	701a      	strb	r2, [r3, #0]
 8017fc6:	e007      	b.n	8017fd8 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017fc8:	6838      	ldr	r0, [r7, #0]
 8017fca:	f7ec fe7f 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8017fce:	4603      	mov	r3, r0
 8017fd0:	4619      	mov	r1, r3
 8017fd2:	6878      	ldr	r0, [r7, #4]
 8017fd4:	f000 f93c 	bl	8018250 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 8017fd8:	687b      	ldr	r3, [r7, #4]
	}
 8017fda:	4618      	mov	r0, r3
 8017fdc:	3714      	adds	r7, #20
 8017fde:	46bd      	mov	sp, r7
 8017fe0:	bd90      	pop	{r4, r7, pc}

08017fe2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8017fe2:	b590      	push	{r4, r7, lr}
 8017fe4:	b08b      	sub	sp, #44	; 0x2c
 8017fe6:	af00      	add	r7, sp, #0
 8017fe8:	6078      	str	r0, [r7, #4]
 8017fea:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017fec:	2303      	movs	r3, #3
 8017fee:	627b      	str	r3, [r7, #36]	; 0x24
	  if (index() == __index)
 8017ff0:	6878      	ldr	r0, [r7, #4]
 8017ff2:	f7e9 fd91 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8017ff6:	4603      	mov	r3, r0
 8017ff8:	2b03      	cmp	r3, #3
 8017ffa:	bf0c      	ite	eq
 8017ffc:	2301      	moveq	r3, #1
 8017ffe:	2300      	movne	r3, #0
 8018000:	b2db      	uxtb	r3, r3
 8018002:	2b00      	cmp	r3, #0
 8018004:	d00c      	beq.n	8018020 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8018006:	6838      	ldr	r0, [r7, #0]
 8018008:	f7ec fea0 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801800c:	4604      	mov	r4, r0
 801800e:	6878      	ldr	r0, [r7, #4]
 8018010:	f7ef fe96 	bl	8007d40 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8018014:	4603      	mov	r3, r0
 8018016:	4621      	mov	r1, r4
 8018018:	4618      	mov	r0, r3
 801801a:	f00b fbe8 	bl	80237ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
 801801e:	e014      	b.n	801804a <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIRS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x68>
		operator=(variant(std::forward<_Tp>(__rhs)));
 8018020:	6838      	ldr	r0, [r7, #0]
 8018022:	f7ec fe93 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018026:	4602      	mov	r2, r0
 8018028:	f107 0308 	add.w	r3, r7, #8
 801802c:	4611      	mov	r1, r2
 801802e:	4618      	mov	r0, r3
 8018030:	f000 f940 	bl	80182b4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRS5_vvS5_vEEOT_>
 8018034:	f107 0308 	add.w	r3, r7, #8
 8018038:	4619      	mov	r1, r3
 801803a:	6878      	ldr	r0, [r7, #4]
 801803c:	f7e9 fa32 	bl	80014a4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSEOSA_>
 8018040:	f107 0308 	add.w	r3, r7, #8
 8018044:	4618      	mov	r0, r3
 8018046:	f7e9 f99c 	bl	8001382 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEED1Ev>
	  return *this;
 801804a:	687b      	ldr	r3, [r7, #4]
	}
 801804c:	4618      	mov	r0, r3
 801804e:	372c      	adds	r7, #44	; 0x2c
 8018050:	46bd      	mov	sp, r7
 8018052:	bd90      	pop	{r4, r7, pc}

08018054 <_ZSt3getISt6vectorI6SymbolSaIS1_EEJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES3_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8018054:	b580      	push	{r7, lr}
 8018056:	b082      	sub	sp, #8
 8018058:	af00      	add	r7, sp, #0
 801805a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801805c:	6878      	ldr	r0, [r7, #4]
 801805e:	f7ef ff21 	bl	8007ea4 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8018062:	4603      	mov	r3, r0
    }
 8018064:	4618      	mov	r0, r3
 8018066:	3708      	adds	r7, #8
 8018068:	46bd      	mov	sp, r7
 801806a:	bd80      	pop	{r7, pc}

0801806c <_ZNSt6vectorI6SymbolSaIS0_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 801806c:	b480      	push	{r7}
 801806e:	b083      	sub	sp, #12
 8018070:	af00      	add	r7, sp, #0
 8018072:	6078      	str	r0, [r7, #4]
 8018074:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8018076:	687b      	ldr	r3, [r7, #4]
 8018078:	681a      	ldr	r2, [r3, #0]
 801807a:	683b      	ldr	r3, [r7, #0]
 801807c:	015b      	lsls	r3, r3, #5
 801807e:	4413      	add	r3, r2
      }
 8018080:	4618      	mov	r0, r3
 8018082:	370c      	adds	r7, #12
 8018084:	46bd      	mov	sp, r7
 8018086:	f85d 7b04 	ldr.w	r7, [sp], #4
 801808a:	4770      	bx	lr

0801808c <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801808c:	b580      	push	{r7, lr}
 801808e:	b082      	sub	sp, #8
 8018090:	af00      	add	r7, sp, #0
 8018092:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8018094:	6878      	ldr	r0, [r7, #4]
 8018096:	f7ef fe0b 	bl	8007cb0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801809a:	4603      	mov	r3, r0
    }
 801809c:	4618      	mov	r0, r3
 801809e:	3708      	adds	r7, #8
 80180a0:	46bd      	mov	sp, r7
 80180a2:	bd80      	pop	{r7, pc}

080180a4 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 80180a4:	b580      	push	{r7, lr}
 80180a6:	b082      	sub	sp, #8
 80180a8:	af00      	add	r7, sp, #0
 80180aa:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80180ac:	6878      	ldr	r0, [r7, #4]
 80180ae:	f7ef fe47 	bl	8007d40 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80180b2:	4603      	mov	r3, r0
    }
 80180b4:	4618      	mov	r0, r3
 80180b6:	3708      	adds	r7, #8
 80180b8:	46bd      	mov	sp, r7
 80180ba:	bd80      	pop	{r7, pc}

080180bc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_>:
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 80180bc:	b580      	push	{r7, lr}
 80180be:	b084      	sub	sp, #16
 80180c0:	af00      	add	r7, sp, #0
 80180c2:	60f8      	str	r0, [r7, #12]
 80180c4:	60b9      	str	r1, [r7, #8]
 80180c6:	607a      	str	r2, [r7, #4]
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
 80180c8:	68b9      	ldr	r1, [r7, #8]
 80180ca:	68f8      	ldr	r0, [r7, #12]
 80180cc:	f00b fd58 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
      __str.append(__rhs);
 80180d0:	6879      	ldr	r1, [r7, #4]
 80180d2:	68f8      	ldr	r0, [r7, #12]
 80180d4:	f00b fcfa 	bl	8023acc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 80180d8:	bf00      	nop
    }
 80180da:	68f8      	ldr	r0, [r7, #12]
 80180dc:	3710      	adds	r7, #16
 80180de:	46bd      	mov	sp, r7
 80180e0:	bd80      	pop	{r7, pc}
	...

080180e4 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj>:
    vector<_Tp, _Alloc>::
 80180e4:	b5b0      	push	{r4, r5, r7, lr}
 80180e6:	b084      	sub	sp, #16
 80180e8:	af00      	add	r7, sp, #0
 80180ea:	6078      	str	r0, [r7, #4]
 80180ec:	6039      	str	r1, [r7, #0]
      if (__n > this->max_size())
 80180ee:	6878      	ldr	r0, [r7, #4]
 80180f0:	f000 f8f3 	bl	80182da <_ZNKSt6vectorI6SymbolSaIS0_EE8max_sizeEv>
 80180f4:	4602      	mov	r2, r0
 80180f6:	683b      	ldr	r3, [r7, #0]
 80180f8:	4293      	cmp	r3, r2
 80180fa:	bf8c      	ite	hi
 80180fc:	2301      	movhi	r3, #1
 80180fe:	2300      	movls	r3, #0
 8018100:	b2db      	uxtb	r3, r3
 8018102:	2b00      	cmp	r3, #0
 8018104:	d002      	beq.n	801810c <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0x28>
	__throw_length_error(__N("vector::reserve"));
 8018106:	4823      	ldr	r0, [pc, #140]	; (8018194 <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0xb0>)
 8018108:	f00b f997 	bl	802343a <_ZSt20__throw_length_errorPKc>
      if (this->capacity() < __n)
 801810c:	6878      	ldr	r0, [r7, #4]
 801810e:	f7ef fffa 	bl	8008106 <_ZNKSt6vectorI6SymbolSaIS0_EE8capacityEv>
 8018112:	4602      	mov	r2, r0
 8018114:	683b      	ldr	r3, [r7, #0]
 8018116:	4293      	cmp	r3, r2
 8018118:	bf8c      	ite	hi
 801811a:	2301      	movhi	r3, #1
 801811c:	2300      	movls	r3, #0
 801811e:	b2db      	uxtb	r3, r3
 8018120:	2b00      	cmp	r3, #0
 8018122:	d033      	beq.n	801818c <_ZNSt6vectorI6SymbolSaIS0_EE7reserveEj+0xa8>
	  const size_type __old_size = size();
 8018124:	6878      	ldr	r0, [r7, #4]
 8018126:	f7ef ffde 	bl	80080e6 <_ZNKSt6vectorI6SymbolSaIS0_EE4sizeEv>
 801812a:	60f8      	str	r0, [r7, #12]
	      __tmp = this->_M_allocate(__n);
 801812c:	687b      	ldr	r3, [r7, #4]
 801812e:	6839      	ldr	r1, [r7, #0]
 8018130:	4618      	mov	r0, r3
 8018132:	f7f0 fcbb 	bl	8008aac <_ZNSt12_Vector_baseI6SymbolSaIS0_EE11_M_allocateEj>
 8018136:	60b8      	str	r0, [r7, #8]
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 8018138:	687b      	ldr	r3, [r7, #4]
 801813a:	681c      	ldr	r4, [r3, #0]
 801813c:	687b      	ldr	r3, [r7, #4]
 801813e:	685d      	ldr	r5, [r3, #4]
			  __tmp, _M_get_Tp_allocator());
 8018140:	687b      	ldr	r3, [r7, #4]
 8018142:	4618      	mov	r0, r3
 8018144:	f7ef ff7e 	bl	8008044 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 8018148:	4603      	mov	r3, r0
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
 801814a:	68ba      	ldr	r2, [r7, #8]
 801814c:	4629      	mov	r1, r5
 801814e:	4620      	mov	r0, r4
 8018150:	f000 f8d4 	bl	80182fc <_ZNSt6vectorI6SymbolSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	  _M_deallocate(this->_M_impl._M_start,
 8018154:	6878      	ldr	r0, [r7, #4]
 8018156:	687b      	ldr	r3, [r7, #4]
 8018158:	6819      	ldr	r1, [r3, #0]
			this->_M_impl._M_end_of_storage
 801815a:	687b      	ldr	r3, [r7, #4]
 801815c:	689a      	ldr	r2, [r3, #8]
			- this->_M_impl._M_start);
 801815e:	687b      	ldr	r3, [r7, #4]
 8018160:	681b      	ldr	r3, [r3, #0]
 8018162:	1ad3      	subs	r3, r2, r3
 8018164:	115b      	asrs	r3, r3, #5
	  _M_deallocate(this->_M_impl._M_start,
 8018166:	461a      	mov	r2, r3
 8018168:	f7ef ff9c 	bl	80080a4 <_ZNSt12_Vector_baseI6SymbolSaIS0_EE13_M_deallocateEPS0_j>
	  this->_M_impl._M_start = __tmp;
 801816c:	687b      	ldr	r3, [r7, #4]
 801816e:	68ba      	ldr	r2, [r7, #8]
 8018170:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_finish = __tmp + __old_size;
 8018172:	68fb      	ldr	r3, [r7, #12]
 8018174:	015b      	lsls	r3, r3, #5
 8018176:	68ba      	ldr	r2, [r7, #8]
 8018178:	441a      	add	r2, r3
 801817a:	687b      	ldr	r3, [r7, #4]
 801817c:	605a      	str	r2, [r3, #4]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 801817e:	687b      	ldr	r3, [r7, #4]
 8018180:	681a      	ldr	r2, [r3, #0]
 8018182:	683b      	ldr	r3, [r7, #0]
 8018184:	015b      	lsls	r3, r3, #5
 8018186:	441a      	add	r2, r3
 8018188:	687b      	ldr	r3, [r7, #4]
 801818a:	609a      	str	r2, [r3, #8]
    }
 801818c:	bf00      	nop
 801818e:	3710      	adds	r7, #16
 8018190:	46bd      	mov	sp, r7
 8018192:	bdb0      	pop	{r4, r5, r7, pc}
 8018194:	08029b88 	.word	0x08029b88

08018198 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8018198:	b590      	push	{r4, r7, lr}
 801819a:	b085      	sub	sp, #20
 801819c:	af00      	add	r7, sp, #0
 801819e:	6078      	str	r0, [r7, #4]
 80181a0:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80181a2:	2300      	movs	r3, #0
 80181a4:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80181a6:	6878      	ldr	r0, [r7, #4]
 80181a8:	f7e9 fcb6 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80181ac:	4603      	mov	r3, r0
 80181ae:	2b00      	cmp	r3, #0
 80181b0:	bf0c      	ite	eq
 80181b2:	2301      	moveq	r3, #1
 80181b4:	2300      	movne	r3, #0
 80181b6:	b2db      	uxtb	r3, r3
 80181b8:	2b00      	cmp	r3, #0
 80181ba:	d00a      	beq.n	80181d2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80181bc:	6838      	ldr	r0, [r7, #0]
 80181be:	f7ef fcdb 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80181c2:	4603      	mov	r3, r0
 80181c4:	681c      	ldr	r4, [r3, #0]
 80181c6:	6878      	ldr	r0, [r7, #4]
 80181c8:	f7e9 fcdc 	bl	8001b84 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80181cc:	4603      	mov	r3, r0
 80181ce:	601c      	str	r4, [r3, #0]
 80181d0:	e007      	b.n	80181e2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80181d2:	6838      	ldr	r0, [r7, #0]
 80181d4:	f7ef fcd0 	bl	8007b78 <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80181d8:	4603      	mov	r3, r0
 80181da:	4619      	mov	r1, r3
 80181dc:	6878      	ldr	r0, [r7, #4]
 80181de:	f7ee ff6d 	bl	80070bc <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80181e2:	687b      	ldr	r3, [r7, #4]
	}
 80181e4:	4618      	mov	r0, r3
 80181e6:	3714      	adds	r7, #20
 80181e8:	46bd      	mov	sp, r7
 80181ea:	bd90      	pop	{r4, r7, pc}

080181ec <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj0EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 80181ec:	b580      	push	{r7, lr}
 80181ee:	b082      	sub	sp, #8
 80181f0:	af00      	add	r7, sp, #0
 80181f2:	6078      	str	r0, [r7, #4]
 80181f4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80181f6:	687b      	ldr	r3, [r7, #4]
 80181f8:	4618      	mov	r0, r3
 80181fa:	f7eb f8dd 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80181fe:	6838      	ldr	r0, [r7, #0]
 8018200:	f7ec fcfc 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8018204:	4603      	mov	r3, r0
 8018206:	4619      	mov	r1, r3
 8018208:	6878      	ldr	r0, [r7, #4]
 801820a:	f000 f88b 	bl	8018324 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801820e:	6878      	ldr	r0, [r7, #4]
 8018210:	f7e9 fcb8 	bl	8001b84 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8018214:	4603      	mov	r3, r0
	}
 8018216:	4618      	mov	r0, r3
 8018218:	3708      	adds	r7, #8
 801821a:	46bd      	mov	sp, r7
 801821c:	bd80      	pop	{r7, pc}

0801821e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj1EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801821e:	b580      	push	{r7, lr}
 8018220:	b082      	sub	sp, #8
 8018222:	af00      	add	r7, sp, #0
 8018224:	6078      	str	r0, [r7, #4]
 8018226:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8018228:	687b      	ldr	r3, [r7, #4]
 801822a:	4618      	mov	r0, r3
 801822c:	f7eb f8c4 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8018230:	6838      	ldr	r0, [r7, #0]
 8018232:	f7ec fd17 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8018236:	4603      	mov	r3, r0
 8018238:	4619      	mov	r1, r3
 801823a:	6878      	ldr	r0, [r7, #4]
 801823c:	f000 f891 	bl	8018362 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8018240:	6878      	ldr	r0, [r7, #4]
 8018242:	f7ef fced 	bl	8007c20 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8018246:	4603      	mov	r3, r0
	}
 8018248:	4618      	mov	r0, r3
 801824a:	3708      	adds	r7, #8
 801824c:	46bd      	mov	sp, r7
 801824e:	bd80      	pop	{r7, pc}

08018250 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE7emplaceILj2EJRbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 8018250:	b580      	push	{r7, lr}
 8018252:	b082      	sub	sp, #8
 8018254:	af00      	add	r7, sp, #0
 8018256:	6078      	str	r0, [r7, #4]
 8018258:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801825a:	687b      	ldr	r3, [r7, #4]
 801825c:	4618      	mov	r0, r3
 801825e:	f7eb f8ab 	bl	80033b8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8018262:	6838      	ldr	r0, [r7, #0]
 8018264:	f7ec fd32 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8018268:	4603      	mov	r3, r0
 801826a:	4619      	mov	r1, r3
 801826c:	6878      	ldr	r0, [r7, #4]
 801826e:	f000 f897 	bl	80183a0 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8018272:	6878      	ldr	r0, [r7, #4]
 8018274:	f7ef fd1c 	bl	8007cb0 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8018278:	4603      	mov	r3, r0
	}
 801827a:	4618      	mov	r0, r3
 801827c:	3708      	adds	r7, #8
 801827e:	46bd      	mov	sp, r7
 8018280:	bd80      	pop	{r7, pc}

08018282 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 8018282:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018284:	b085      	sub	sp, #20
 8018286:	af00      	add	r7, sp, #0
 8018288:	60f8      	str	r0, [r7, #12]
 801828a:	7239      	strb	r1, [r7, #8]
 801828c:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 801828e:	68fc      	ldr	r4, [r7, #12]
 8018290:	6878      	ldr	r0, [r7, #4]
 8018292:	f7ec fd5b 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018296:	4603      	mov	r3, r0
 8018298:	461a      	mov	r2, r3
 801829a:	4631      	mov	r1, r6
 801829c:	4620      	mov	r0, r4
 801829e:	f000 f8e3 	bl	8018468 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80182a2:	4629      	mov	r1, r5
 80182a4:	68f8      	ldr	r0, [r7, #12]
 80182a6:	f7ef fec1 	bl	800802c <_ZNSt27_Enable_default_constructorILb1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 80182aa:	68fb      	ldr	r3, [r7, #12]
 80182ac:	4618      	mov	r0, r3
 80182ae:	3714      	adds	r7, #20
 80182b0:	46bd      	mov	sp, r7
 80182b2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080182b4 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1IRS5_vvS5_vEEOT_>:
	variant(_Tp&& __t)
 80182b4:	b590      	push	{r4, r7, lr}
 80182b6:	b083      	sub	sp, #12
 80182b8:	af00      	add	r7, sp, #0
 80182ba:	6078      	str	r0, [r7, #4]
 80182bc:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 80182be:	6838      	ldr	r0, [r7, #0]
 80182c0:	f7ec fd44 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80182c4:	4603      	mov	r3, r0
 80182c6:	461a      	mov	r2, r3
 80182c8:	4621      	mov	r1, r4
 80182ca:	6878      	ldr	r0, [r7, #4]
 80182cc:	f7ff ffd9 	bl	8018282 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEEC1ILj3EJRS5_ES5_vEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80182d0:	687b      	ldr	r3, [r7, #4]
 80182d2:	4618      	mov	r0, r3
 80182d4:	370c      	adds	r7, #12
 80182d6:	46bd      	mov	sp, r7
 80182d8:	bd90      	pop	{r4, r7, pc}

080182da <_ZNKSt6vectorI6SymbolSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 80182da:	b580      	push	{r7, lr}
 80182dc:	b082      	sub	sp, #8
 80182de:	af00      	add	r7, sp, #0
 80182e0:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 80182e2:	687b      	ldr	r3, [r7, #4]
 80182e4:	4618      	mov	r0, r3
 80182e6:	f7ef feb8 	bl	800805a <_ZNKSt12_Vector_baseI6SymbolSaIS0_EE19_M_get_Tp_allocatorEv>
 80182ea:	4603      	mov	r3, r0
 80182ec:	4618      	mov	r0, r3
 80182ee:	f000 f8d0 	bl	8018492 <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>
 80182f2:	4603      	mov	r3, r0
 80182f4:	4618      	mov	r0, r3
 80182f6:	3708      	adds	r7, #8
 80182f8:	46bd      	mov	sp, r7
 80182fa:	bd80      	pop	{r7, pc}

080182fc <_ZNSt6vectorI6SymbolSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 80182fc:	b590      	push	{r4, r7, lr}
 80182fe:	b089      	sub	sp, #36	; 0x24
 8018300:	af02      	add	r7, sp, #8
 8018302:	60f8      	str	r0, [r7, #12]
 8018304:	60b9      	str	r1, [r7, #8]
 8018306:	607a      	str	r2, [r7, #4]
 8018308:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801830a:	f88d 4000 	strb.w	r4, [sp]
 801830e:	683b      	ldr	r3, [r7, #0]
 8018310:	687a      	ldr	r2, [r7, #4]
 8018312:	68b9      	ldr	r1, [r7, #8]
 8018314:	68f8      	ldr	r0, [r7, #12]
 8018316:	f000 f8d6 	bl	80184c6 <_ZNSt6vectorI6SymbolSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801831a:	4603      	mov	r3, r0
      }
 801831c:	4618      	mov	r0, r3
 801831e:	371c      	adds	r7, #28
 8018320:	46bd      	mov	sp, r7
 8018322:	bd90      	pop	{r4, r7, pc}

08018324 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8018324:	b590      	push	{r4, r7, lr}
 8018326:	b085      	sub	sp, #20
 8018328:	af00      	add	r7, sp, #0
 801832a:	6078      	str	r0, [r7, #4]
 801832c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801832e:	687b      	ldr	r3, [r7, #4]
 8018330:	2200      	movs	r2, #0
 8018332:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8018334:	6878      	ldr	r0, [r7, #4]
 8018336:	f7e9 fc13 	bl	8001b60 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 801833a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801833c:	6838      	ldr	r0, [r7, #0]
 801833e:	f7ec fc5d 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8018342:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8018344:	681c      	ldr	r4, [r3, #0]
 8018346:	68f8      	ldr	r0, [r7, #12]
 8018348:	f7f0 f9f8 	bl	800873c <_ZSt9addressofIiEPT_RS0_>
 801834c:	4603      	mov	r3, r0
 801834e:	4619      	mov	r1, r3
 8018350:	2004      	movs	r0, #4
 8018352:	f7e8 fe82 	bl	800105a <_ZnwjPv>
 8018356:	4603      	mov	r3, r0
 8018358:	601c      	str	r4, [r3, #0]
    }
 801835a:	bf00      	nop
 801835c:	3714      	adds	r7, #20
 801835e:	46bd      	mov	sp, r7
 8018360:	bd90      	pop	{r4, r7, pc}

08018362 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8018362:	b590      	push	{r4, r7, lr}
 8018364:	b085      	sub	sp, #20
 8018366:	af00      	add	r7, sp, #0
 8018368:	6078      	str	r0, [r7, #4]
 801836a:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801836c:	687b      	ldr	r3, [r7, #4]
 801836e:	2201      	movs	r2, #1
 8018370:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8018372:	6878      	ldr	r0, [r7, #4]
 8018374:	f7e9 fec3 	bl	80020fe <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8018378:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801837a:	6838      	ldr	r0, [r7, #0]
 801837c:	f7ec fc72 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8018380:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8018382:	681c      	ldr	r4, [r3, #0]
 8018384:	68f8      	ldr	r0, [r7, #12]
 8018386:	f7f0 f9e5 	bl	8008754 <_ZSt9addressofIfEPT_RS0_>
 801838a:	4603      	mov	r3, r0
 801838c:	4619      	mov	r1, r3
 801838e:	2004      	movs	r0, #4
 8018390:	f7e8 fe63 	bl	800105a <_ZnwjPv>
 8018394:	4603      	mov	r3, r0
 8018396:	601c      	str	r4, [r3, #0]
    }
 8018398:	bf00      	nop
 801839a:	3714      	adds	r7, #20
 801839c:	46bd      	mov	sp, r7
 801839e:	bd90      	pop	{r4, r7, pc}

080183a0 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS8_EEEEJRbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80183a0:	b590      	push	{r4, r7, lr}
 80183a2:	b085      	sub	sp, #20
 80183a4:	af00      	add	r7, sp, #0
 80183a6:	6078      	str	r0, [r7, #4]
 80183a8:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80183aa:	687b      	ldr	r3, [r7, #4]
 80183ac:	2202      	movs	r2, #2
 80183ae:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80183b0:	6878      	ldr	r0, [r7, #4]
 80183b2:	f7e9 ff42 	bl	800223a <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80183b6:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80183b8:	6838      	ldr	r0, [r7, #0]
 80183ba:	f7ec fc87 	bl	8004ccc <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80183be:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80183c0:	781c      	ldrb	r4, [r3, #0]
 80183c2:	68f8      	ldr	r0, [r7, #12]
 80183c4:	f7f0 f9d2 	bl	800876c <_ZSt9addressofIbEPT_RS0_>
 80183c8:	4603      	mov	r3, r0
 80183ca:	4619      	mov	r1, r3
 80183cc:	2001      	movs	r0, #1
 80183ce:	f7e8 fe44 	bl	800105a <_ZnwjPv>
 80183d2:	4603      	mov	r3, r0
 80183d4:	4622      	mov	r2, r4
 80183d6:	701a      	strb	r2, [r3, #0]
    }
 80183d8:	bf00      	nop
 80183da:	3714      	adds	r7, #20
 80183dc:	46bd      	mov	sp, r7
 80183de:	bd90      	pop	{r4, r7, pc}

080183e0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80183e0:	b590      	push	{r4, r7, lr}
 80183e2:	b085      	sub	sp, #20
 80183e4:	af00      	add	r7, sp, #0
 80183e6:	60f8      	str	r0, [r7, #12]
 80183e8:	7239      	strb	r1, [r7, #8]
 80183ea:	607a      	str	r2, [r7, #4]
 80183ec:	68fb      	ldr	r3, [r7, #12]
 80183ee:	687a      	ldr	r2, [r7, #4]
 80183f0:	4621      	mov	r1, r4
 80183f2:	4618      	mov	r0, r3
 80183f4:	f000 f8ea 	bl	80185cc <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80183f8:	68fb      	ldr	r3, [r7, #12]
 80183fa:	4618      	mov	r0, r3
 80183fc:	3714      	adds	r7, #20
 80183fe:	46bd      	mov	sp, r7
 8018400:	bd90      	pop	{r4, r7, pc}

08018402 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8018402:	b590      	push	{r4, r7, lr}
 8018404:	b085      	sub	sp, #20
 8018406:	af00      	add	r7, sp, #0
 8018408:	60f8      	str	r0, [r7, #12]
 801840a:	7239      	strb	r1, [r7, #8]
 801840c:	607a      	str	r2, [r7, #4]
 801840e:	68fb      	ldr	r3, [r7, #12]
 8018410:	687a      	ldr	r2, [r7, #4]
 8018412:	4621      	mov	r1, r4
 8018414:	4618      	mov	r0, r3
 8018416:	f7ff ffe3 	bl	80183e0 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 801841a:	68fb      	ldr	r3, [r7, #12]
 801841c:	4618      	mov	r0, r3
 801841e:	3714      	adds	r7, #20
 8018420:	46bd      	mov	sp, r7
 8018422:	bd90      	pop	{r4, r7, pc}

08018424 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8018424:	b590      	push	{r4, r7, lr}
 8018426:	b085      	sub	sp, #20
 8018428:	af00      	add	r7, sp, #0
 801842a:	60f8      	str	r0, [r7, #12]
 801842c:	7239      	strb	r1, [r7, #8]
 801842e:	607a      	str	r2, [r7, #4]
 8018430:	68fb      	ldr	r3, [r7, #12]
 8018432:	687a      	ldr	r2, [r7, #4]
 8018434:	4621      	mov	r1, r4
 8018436:	4618      	mov	r0, r3
 8018438:	f7ff ffe3 	bl	8018402 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 801843c:	68fb      	ldr	r3, [r7, #12]
 801843e:	4618      	mov	r0, r3
 8018440:	3714      	adds	r7, #20
 8018442:	46bd      	mov	sp, r7
 8018444:	bd90      	pop	{r4, r7, pc}

08018446 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8018446:	b590      	push	{r4, r7, lr}
 8018448:	b085      	sub	sp, #20
 801844a:	af00      	add	r7, sp, #0
 801844c:	60f8      	str	r0, [r7, #12]
 801844e:	7239      	strb	r1, [r7, #8]
 8018450:	607a      	str	r2, [r7, #4]
 8018452:	68fb      	ldr	r3, [r7, #12]
 8018454:	687a      	ldr	r2, [r7, #4]
 8018456:	4621      	mov	r1, r4
 8018458:	4618      	mov	r0, r3
 801845a:	f7ff ffe3 	bl	8018424 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 801845e:	68fb      	ldr	r3, [r7, #12]
 8018460:	4618      	mov	r0, r3
 8018462:	3714      	adds	r7, #20
 8018464:	46bd      	mov	sp, r7
 8018466:	bd90      	pop	{r4, r7, pc}

08018468 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8018468:	b5b0      	push	{r4, r5, r7, lr}
 801846a:	b084      	sub	sp, #16
 801846c:	af00      	add	r7, sp, #0
 801846e:	60f8      	str	r0, [r7, #12]
 8018470:	7239      	strb	r1, [r7, #8]
 8018472:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 8018474:	68fc      	ldr	r4, [r7, #12]
 8018476:	6878      	ldr	r0, [r7, #4]
 8018478:	f7ec fc68 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801847c:	4603      	mov	r3, r0
 801847e:	461a      	mov	r2, r3
 8018480:	4629      	mov	r1, r5
 8018482:	4620      	mov	r0, r4
 8018484:	f7ff ffdf 	bl	8018446 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEECI1NS0_16_Variant_storageILb0EJifbS7_SB_EEEILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018488:	68fb      	ldr	r3, [r7, #12]
 801848a:	4618      	mov	r0, r3
 801848c:	3710      	adds	r7, #16
 801848e:	46bd      	mov	sp, r7
 8018490:	bdb0      	pop	{r4, r5, r7, pc}

08018492 <_ZNSt6vectorI6SymbolSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8018492:	b580      	push	{r7, lr}
 8018494:	b084      	sub	sp, #16
 8018496:	af00      	add	r7, sp, #0
 8018498:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801849a:	f06f 437c 	mvn.w	r3, #4227858432	; 0xfc000000
 801849e:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 80184a0:	6878      	ldr	r0, [r7, #4]
 80184a2:	f000 f8ab 	bl	80185fc <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>
 80184a6:	4603      	mov	r3, r0
 80184a8:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 80184aa:	f107 0208 	add.w	r2, r7, #8
 80184ae:	f107 030c 	add.w	r3, r7, #12
 80184b2:	4611      	mov	r1, r2
 80184b4:	4618      	mov	r0, r3
 80184b6:	f7fd ff05 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 80184ba:	4603      	mov	r3, r0
 80184bc:	681b      	ldr	r3, [r3, #0]
      }
 80184be:	4618      	mov	r0, r3
 80184c0:	3710      	adds	r7, #16
 80184c2:	46bd      	mov	sp, r7
 80184c4:	bd80      	pop	{r7, pc}

080184c6 <_ZNSt6vectorI6SymbolSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 80184c6:	b580      	push	{r7, lr}
 80184c8:	b084      	sub	sp, #16
 80184ca:	af00      	add	r7, sp, #0
 80184cc:	60f8      	str	r0, [r7, #12]
 80184ce:	60b9      	str	r1, [r7, #8]
 80184d0:	607a      	str	r2, [r7, #4]
 80184d2:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 80184d4:	683b      	ldr	r3, [r7, #0]
 80184d6:	687a      	ldr	r2, [r7, #4]
 80184d8:	68b9      	ldr	r1, [r7, #8]
 80184da:	68f8      	ldr	r0, [r7, #12]
 80184dc:	f000 f89a 	bl	8018614 <_ZSt12__relocate_aIP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>
 80184e0:	4603      	mov	r3, r0
      }
 80184e2:	4618      	mov	r0, r3
 80184e4:	3710      	adds	r7, #16
 80184e6:	46bd      	mov	sp, r7
 80184e8:	bd80      	pop	{r7, pc}

080184ea <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 80184ea:	b590      	push	{r4, r7, lr}
 80184ec:	b085      	sub	sp, #20
 80184ee:	af00      	add	r7, sp, #0
 80184f0:	60f8      	str	r0, [r7, #12]
 80184f2:	7239      	strb	r1, [r7, #8]
 80184f4:	607a      	str	r2, [r7, #4]
	    _Type(std::forward<_Args>(__args)...);
 80184f6:	6878      	ldr	r0, [r7, #4]
 80184f8:	f7ec fc28 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80184fc:	4604      	mov	r4, r0
	  ::new ((void*)std::addressof(_M_storage))
 80184fe:	68fb      	ldr	r3, [r7, #12]
 8018500:	4618      	mov	r0, r3
 8018502:	f7f0 fd87 	bl	8009014 <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 8018506:	4603      	mov	r3, r0
 8018508:	4619      	mov	r1, r3
 801850a:	2018      	movs	r0, #24
 801850c:	f7e8 fda5 	bl	800105a <_ZnwjPv>
 8018510:	4603      	mov	r3, r0
 8018512:	4621      	mov	r1, r4
 8018514:	4618      	mov	r0, r3
 8018516:	f00b fb33 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	}
 801851a:	68fb      	ldr	r3, [r7, #12]
 801851c:	4618      	mov	r0, r3
 801851e:	3714      	adds	r7, #20
 8018520:	46bd      	mov	sp, r7
 8018522:	bd90      	pop	{r4, r7, pc}

08018524 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8018524:	b5b0      	push	{r4, r5, r7, lr}
 8018526:	b084      	sub	sp, #16
 8018528:	af00      	add	r7, sp, #0
 801852a:	60f8      	str	r0, [r7, #12]
 801852c:	7239      	strb	r1, [r7, #8]
 801852e:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8018530:	68fc      	ldr	r4, [r7, #12]
 8018532:	6878      	ldr	r0, [r7, #4]
 8018534:	f7ec fc0a 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018538:	4603      	mov	r3, r0
 801853a:	461a      	mov	r2, r3
 801853c:	4629      	mov	r1, r5
 801853e:	4620      	mov	r0, r4
 8018540:	f7ff ffd3 	bl	80184ea <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8018544:	68fb      	ldr	r3, [r7, #12]
 8018546:	4618      	mov	r0, r3
 8018548:	3710      	adds	r7, #16
 801854a:	46bd      	mov	sp, r7
 801854c:	bdb0      	pop	{r4, r5, r7, pc}

0801854e <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 801854e:	b5b0      	push	{r4, r5, r7, lr}
 8018550:	b084      	sub	sp, #16
 8018552:	af00      	add	r7, sp, #0
 8018554:	60f8      	str	r0, [r7, #12]
 8018556:	7239      	strb	r1, [r7, #8]
 8018558:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 801855a:	68fc      	ldr	r4, [r7, #12]
 801855c:	6878      	ldr	r0, [r7, #4]
 801855e:	f7ec fbf5 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8018562:	4603      	mov	r3, r0
 8018564:	461a      	mov	r2, r3
 8018566:	4629      	mov	r1, r5
 8018568:	4620      	mov	r0, r4
 801856a:	f7ff ffdb 	bl	8018524 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1IJRS7_EEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801856e:	68fb      	ldr	r3, [r7, #12]
 8018570:	4618      	mov	r0, r3
 8018572:	3710      	adds	r7, #16
 8018574:	46bd      	mov	sp, r7
 8018576:	bdb0      	pop	{r4, r5, r7, pc}

08018578 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 8018578:	b5b0      	push	{r4, r5, r7, lr}
 801857a:	b084      	sub	sp, #16
 801857c:	af00      	add	r7, sp, #0
 801857e:	60f8      	str	r0, [r7, #12]
 8018580:	7239      	strb	r1, [r7, #8]
 8018582:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 8018584:	68fc      	ldr	r4, [r7, #12]
 8018586:	6878      	ldr	r0, [r7, #4]
 8018588:	f7ec fbe0 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801858c:	4603      	mov	r3, r0
 801858e:	461a      	mov	r2, r3
 8018590:	4629      	mov	r1, r5
 8018592:	4620      	mov	r0, r4
 8018594:	f7ff ffdb 	bl	801854e <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj1EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8018598:	68fb      	ldr	r3, [r7, #12]
 801859a:	4618      	mov	r0, r3
 801859c:	3710      	adds	r7, #16
 801859e:	46bd      	mov	sp, r7
 80185a0:	bdb0      	pop	{r4, r5, r7, pc}

080185a2 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80185a2:	b5b0      	push	{r4, r5, r7, lr}
 80185a4:	b084      	sub	sp, #16
 80185a6:	af00      	add	r7, sp, #0
 80185a8:	60f8      	str	r0, [r7, #12]
 80185aa:	7239      	strb	r1, [r7, #8]
 80185ac:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80185ae:	68fc      	ldr	r4, [r7, #12]
 80185b0:	6878      	ldr	r0, [r7, #4]
 80185b2:	f7ec fbcb 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80185b6:	4603      	mov	r3, r0
 80185b8:	461a      	mov	r2, r3
 80185ba:	4629      	mov	r1, r5
 80185bc:	4620      	mov	r0, r4
 80185be:	f7ff ffdb 	bl	8018578 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj2EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80185c2:	68fb      	ldr	r3, [r7, #12]
 80185c4:	4618      	mov	r0, r3
 80185c6:	3710      	adds	r7, #16
 80185c8:	46bd      	mov	sp, r7
 80185ca:	bdb0      	pop	{r4, r5, r7, pc}

080185cc <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 80185cc:	b5b0      	push	{r4, r5, r7, lr}
 80185ce:	b084      	sub	sp, #16
 80185d0:	af00      	add	r7, sp, #0
 80185d2:	60f8      	str	r0, [r7, #12]
 80185d4:	7239      	strb	r1, [r7, #8]
 80185d6:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 80185d8:	68fc      	ldr	r4, [r7, #12]
 80185da:	6878      	ldr	r0, [r7, #4]
 80185dc:	f7ec fbb6 	bl	8004d4c <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80185e0:	4603      	mov	r3, r0
 80185e2:	461a      	mov	r2, r3
 80185e4:	4629      	mov	r1, r5
 80185e6:	4620      	mov	r0, r4
 80185e8:	f7ff ffdb 	bl	80185a2 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS9_EEEEC1ILj3EJRS7_EEESt16in_place_index_tIXT_EEDpOT0_>
 80185ec:	68fb      	ldr	r3, [r7, #12]
 80185ee:	2203      	movs	r2, #3
 80185f0:	761a      	strb	r2, [r3, #24]
	{ }
 80185f2:	68fb      	ldr	r3, [r7, #12]
 80185f4:	4618      	mov	r0, r3
 80185f6:	3710      	adds	r7, #16
 80185f8:	46bd      	mov	sp, r7
 80185fa:	bdb0      	pop	{r4, r5, r7, pc}

080185fc <_ZNSt16allocator_traitsISaI6SymbolEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 80185fc:	b580      	push	{r7, lr}
 80185fe:	b082      	sub	sp, #8
 8018600:	af00      	add	r7, sp, #0
 8018602:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8018604:	6878      	ldr	r0, [r7, #4]
 8018606:	f7f1 f8a7 	bl	8009758 <_ZNK9__gnu_cxx13new_allocatorI6SymbolE8max_sizeEv>
 801860a:	4603      	mov	r3, r0
 801860c:	4618      	mov	r0, r3
 801860e:	3708      	adds	r7, #8
 8018610:	46bd      	mov	sp, r7
 8018612:	bd80      	pop	{r7, pc}

08018614 <_ZSt12__relocate_aIP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8018614:	b5b0      	push	{r4, r5, r7, lr}
 8018616:	b084      	sub	sp, #16
 8018618:	af00      	add	r7, sp, #0
 801861a:	60f8      	str	r0, [r7, #12]
 801861c:	60b9      	str	r1, [r7, #8]
 801861e:	607a      	str	r2, [r7, #4]
 8018620:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8018622:	68f8      	ldr	r0, [r7, #12]
 8018624:	f7f0 fdaf 	bl	8009186 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8018628:	4604      	mov	r4, r0
 801862a:	68b8      	ldr	r0, [r7, #8]
 801862c:	f7f0 fdab 	bl	8009186 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8018630:	4605      	mov	r5, r0
 8018632:	6878      	ldr	r0, [r7, #4]
 8018634:	f7f0 fda7 	bl	8009186 <_ZSt12__niter_baseIP6SymbolET_S2_>
 8018638:	4602      	mov	r2, r0
 801863a:	683b      	ldr	r3, [r7, #0]
 801863c:	4629      	mov	r1, r5
 801863e:	4620      	mov	r0, r4
 8018640:	f000 f805 	bl	801864e <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>
 8018644:	4603      	mov	r3, r0
    }
 8018646:	4618      	mov	r0, r3
 8018648:	3710      	adds	r7, #16
 801864a:	46bd      	mov	sp, r7
 801864c:	bdb0      	pop	{r4, r5, r7, pc}

0801864e <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
 801864e:	b590      	push	{r4, r7, lr}
 8018650:	b087      	sub	sp, #28
 8018652:	af00      	add	r7, sp, #0
 8018654:	60f8      	str	r0, [r7, #12]
 8018656:	60b9      	str	r1, [r7, #8]
 8018658:	607a      	str	r2, [r7, #4]
 801865a:	603b      	str	r3, [r7, #0]
      _ForwardIterator __cur = __result;
 801865c:	687b      	ldr	r3, [r7, #4]
 801865e:	617b      	str	r3, [r7, #20]
      for (; __first != __last; ++__first, (void)++__cur)
 8018660:	68fa      	ldr	r2, [r7, #12]
 8018662:	68bb      	ldr	r3, [r7, #8]
 8018664:	429a      	cmp	r2, r3
 8018666:	d013      	beq.n	8018690 <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_+0x42>
	std::__relocate_object_a(std::__addressof(*__cur),
 8018668:	6978      	ldr	r0, [r7, #20]
 801866a:	f7f0 ff6e 	bl	800954a <_ZSt11__addressofI6SymbolEPT_RS1_>
 801866e:	4604      	mov	r4, r0
 8018670:	68f8      	ldr	r0, [r7, #12]
 8018672:	f7f0 ff6a 	bl	800954a <_ZSt11__addressofI6SymbolEPT_RS1_>
 8018676:	4603      	mov	r3, r0
 8018678:	683a      	ldr	r2, [r7, #0]
 801867a:	4619      	mov	r1, r3
 801867c:	4620      	mov	r0, r4
 801867e:	f000 f80c 	bl	801869a <_ZSt19__relocate_object_aI6SymbolS0_SaIS0_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
 8018682:	68fb      	ldr	r3, [r7, #12]
 8018684:	3320      	adds	r3, #32
 8018686:	60fb      	str	r3, [r7, #12]
 8018688:	697b      	ldr	r3, [r7, #20]
 801868a:	3320      	adds	r3, #32
 801868c:	617b      	str	r3, [r7, #20]
 801868e:	e7e7      	b.n	8018660 <_ZSt14__relocate_a_1IP6SymbolS1_SaIS0_EET0_T_S4_S3_RT1_+0x12>
      return __cur;
 8018690:	697b      	ldr	r3, [r7, #20]
    }
 8018692:	4618      	mov	r0, r3
 8018694:	371c      	adds	r7, #28
 8018696:	46bd      	mov	sp, r7
 8018698:	bd90      	pop	{r4, r7, pc}

0801869a <_ZSt19__relocate_object_aI6SymbolS0_SaIS0_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __dest, _Up* __orig, _Allocator& __alloc)
 801869a:	b580      	push	{r7, lr}
 801869c:	b084      	sub	sp, #16
 801869e:	af00      	add	r7, sp, #0
 80186a0:	60f8      	str	r0, [r7, #12]
 80186a2:	60b9      	str	r1, [r7, #8]
 80186a4:	607a      	str	r2, [r7, #4]
      __traits::construct(__alloc, __dest, std::move(*__orig));
 80186a6:	68b8      	ldr	r0, [r7, #8]
 80186a8:	f000 f812 	bl	80186d0 <_ZSt4moveIR6SymbolEONSt16remove_referenceIT_E4typeEOS3_>
 80186ac:	4603      	mov	r3, r0
 80186ae:	461a      	mov	r2, r3
 80186b0:	68f9      	ldr	r1, [r7, #12]
 80186b2:	6878      	ldr	r0, [r7, #4]
 80186b4:	f000 f817 	bl	80186e6 <_ZNSt16allocator_traitsISaI6SymbolEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
 80186b8:	68b8      	ldr	r0, [r7, #8]
 80186ba:	f7f0 ff46 	bl	800954a <_ZSt11__addressofI6SymbolEPT_RS1_>
 80186be:	4603      	mov	r3, r0
 80186c0:	4619      	mov	r1, r3
 80186c2:	6878      	ldr	r0, [r7, #4]
 80186c4:	f000 f822 	bl	801870c <_ZNSt16allocator_traitsISaI6SymbolEE7destroyIS0_EEvRS1_PT_>
    }
 80186c8:	bf00      	nop
 80186ca:	3710      	adds	r7, #16
 80186cc:	46bd      	mov	sp, r7
 80186ce:	bd80      	pop	{r7, pc}

080186d0 <_ZSt4moveIR6SymbolEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 80186d0:	b480      	push	{r7}
 80186d2:	b083      	sub	sp, #12
 80186d4:	af00      	add	r7, sp, #0
 80186d6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80186d8:	687b      	ldr	r3, [r7, #4]
 80186da:	4618      	mov	r0, r3
 80186dc:	370c      	adds	r7, #12
 80186de:	46bd      	mov	sp, r7
 80186e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80186e4:	4770      	bx	lr

080186e6 <_ZNSt16allocator_traitsISaI6SymbolEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80186e6:	b580      	push	{r7, lr}
 80186e8:	b084      	sub	sp, #16
 80186ea:	af00      	add	r7, sp, #0
 80186ec:	60f8      	str	r0, [r7, #12]
 80186ee:	60b9      	str	r1, [r7, #8]
 80186f0:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80186f2:	6878      	ldr	r0, [r7, #4]
 80186f4:	f000 f817 	bl	8018726 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>
 80186f8:	4603      	mov	r3, r0
 80186fa:	461a      	mov	r2, r3
 80186fc:	68b9      	ldr	r1, [r7, #8]
 80186fe:	68f8      	ldr	r0, [r7, #12]
 8018700:	f000 f81c 	bl	801873c <_ZN9__gnu_cxx13new_allocatorI6SymbolE9constructIS1_JS1_EEEvPT_DpOT0_>
 8018704:	bf00      	nop
 8018706:	3710      	adds	r7, #16
 8018708:	46bd      	mov	sp, r7
 801870a:	bd80      	pop	{r7, pc}

0801870c <_ZNSt16allocator_traitsISaI6SymbolEE7destroyIS0_EEvRS1_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 801870c:	b580      	push	{r7, lr}
 801870e:	b082      	sub	sp, #8
 8018710:	af00      	add	r7, sp, #0
 8018712:	6078      	str	r0, [r7, #4]
 8018714:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8018716:	6839      	ldr	r1, [r7, #0]
 8018718:	6878      	ldr	r0, [r7, #4]
 801871a:	f000 f827 	bl	801876c <_ZN9__gnu_cxx13new_allocatorI6SymbolE7destroyIS1_EEvPT_>
 801871e:	bf00      	nop
 8018720:	3708      	adds	r7, #8
 8018722:	46bd      	mov	sp, r7
 8018724:	bd80      	pop	{r7, pc}

08018726 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8018726:	b480      	push	{r7}
 8018728:	b083      	sub	sp, #12
 801872a:	af00      	add	r7, sp, #0
 801872c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801872e:	687b      	ldr	r3, [r7, #4]
 8018730:	4618      	mov	r0, r3
 8018732:	370c      	adds	r7, #12
 8018734:	46bd      	mov	sp, r7
 8018736:	f85d 7b04 	ldr.w	r7, [sp], #4
 801873a:	4770      	bx	lr

0801873c <_ZN9__gnu_cxx13new_allocatorI6SymbolE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801873c:	b590      	push	{r4, r7, lr}
 801873e:	b085      	sub	sp, #20
 8018740:	af00      	add	r7, sp, #0
 8018742:	60f8      	str	r0, [r7, #12]
 8018744:	60b9      	str	r1, [r7, #8]
 8018746:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8018748:	6878      	ldr	r0, [r7, #4]
 801874a:	f7ff ffec 	bl	8018726 <_ZSt7forwardI6SymbolEOT_RNSt16remove_referenceIS1_E4typeE>
 801874e:	4604      	mov	r4, r0
 8018750:	68bb      	ldr	r3, [r7, #8]
 8018752:	4619      	mov	r1, r3
 8018754:	2020      	movs	r0, #32
 8018756:	f7e8 fc80 	bl	800105a <_ZnwjPv>
 801875a:	4603      	mov	r3, r0
 801875c:	4621      	mov	r1, r4
 801875e:	4618      	mov	r0, r3
 8018760:	f7f3 fd0c 	bl	800c17c <_ZN6SymbolC1EOS_>
 8018764:	bf00      	nop
 8018766:	3714      	adds	r7, #20
 8018768:	46bd      	mov	sp, r7
 801876a:	bd90      	pop	{r4, r7, pc}

0801876c <_ZN9__gnu_cxx13new_allocatorI6SymbolE7destroyIS1_EEvPT_>:
	destroy(_Up* __p)
 801876c:	b580      	push	{r7, lr}
 801876e:	b082      	sub	sp, #8
 8018770:	af00      	add	r7, sp, #0
 8018772:	6078      	str	r0, [r7, #4]
 8018774:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8018776:	6838      	ldr	r0, [r7, #0]
 8018778:	f7e8 fe10 	bl	800139c <_ZN6SymbolD1Ev>
 801877c:	bf00      	nop
 801877e:	3708      	adds	r7, #8
 8018780:	46bd      	mov	sp, r7
 8018782:	bd80      	pop	{r7, pc}

08018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
#include "Executor.h"

extern UART_HandleTypeDef huart1;

void Transmitter::report_error(std::string message)
{
 8018784:	b590      	push	{r4, r7, lr}
 8018786:	b0b5      	sub	sp, #212	; 0xd4
 8018788:	af00      	add	r7, sp, #0
 801878a:	6078      	str	r0, [r7, #4]
	std::string line = itoa(Position_counter::get_instance().line, nullptr, 10);
 801878c:	f7fe f858 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 8018790:	4603      	mov	r3, r0
 8018792:	681b      	ldr	r3, [r3, #0]
 8018794:	220a      	movs	r2, #10
 8018796:	2100      	movs	r1, #0
 8018798:	4618      	mov	r0, r3
 801879a:	f00c fa27 	bl	8024bec <itoa>
 801879e:	4604      	mov	r4, r0
 80187a0:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80187a4:	4618      	mov	r0, r3
 80187a6:	f00a fd8b 	bl	80232c0 <_ZNSaIcEC1Ev>
 80187aa:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80187ae:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80187b2:	4621      	mov	r1, r4
 80187b4:	4618      	mov	r0, r3
 80187b6:	f7e9 fb1c 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80187ba:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80187be:	4618      	mov	r0, r3
 80187c0:	f00a fd7f 	bl	80232c2 <_ZNSaIcED1Ev>
	std::string position = itoa(Position_counter::get_instance().position, nullptr, 10);
 80187c4:	f7fe f83c 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 80187c8:	4603      	mov	r3, r0
 80187ca:	685b      	ldr	r3, [r3, #4]
 80187cc:	220a      	movs	r2, #10
 80187ce:	2100      	movs	r1, #0
 80187d0:	4618      	mov	r0, r3
 80187d2:	f00c fa0b 	bl	8024bec <itoa>
 80187d6:	4604      	mov	r4, r0
 80187d8:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80187dc:	4618      	mov	r0, r3
 80187de:	f00a fd6f 	bl	80232c0 <_ZNSaIcEC1Ev>
 80187e2:	f107 0254 	add.w	r2, r7, #84	; 0x54
 80187e6:	f107 0320 	add.w	r3, r7, #32
 80187ea:	4621      	mov	r1, r4
 80187ec:	4618      	mov	r0, r3
 80187ee:	f7e9 fb00 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80187f2:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80187f6:	4618      	mov	r0, r3
 80187f8:	f00a fd63 	bl	80232c2 <_ZNSaIcED1Ev>

	std::string full_message = "$" + message + "\nin line: " + line
 80187fc:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 8018800:	687a      	ldr	r2, [r7, #4]
 8018802:	492f      	ldr	r1, [pc, #188]	; (80188c0 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x13c>)
 8018804:	4618      	mov	r0, r3
 8018806:	f7f5 fd24 	bl	800e252 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 801880a:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801880e:	f107 01b8 	add.w	r1, r7, #184	; 0xb8
 8018812:	4a2c      	ldr	r2, [pc, #176]	; (80188c4 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x140>)
 8018814:	4618      	mov	r0, r3
 8018816:	f7f5 fd41 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 801881a:	f107 0388 	add.w	r3, r7, #136	; 0x88
 801881e:	f107 0238 	add.w	r2, r7, #56	; 0x38
 8018822:	f107 01a0 	add.w	r1, r7, #160	; 0xa0
 8018826:	4618      	mov	r0, r3
 8018828:	f000 f8e6 	bl	80189f8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
			+ " in position: " + position + "\n";
 801882c:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8018830:	f107 0188 	add.w	r1, r7, #136	; 0x88
 8018834:	4a24      	ldr	r2, [pc, #144]	; (80188c8 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x144>)
 8018836:	4618      	mov	r0, r3
 8018838:	f7f5 fd30 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 801883c:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8018840:	f107 0220 	add.w	r2, r7, #32
 8018844:	f107 0170 	add.w	r1, r7, #112	; 0x70
 8018848:	4618      	mov	r0, r3
 801884a:	f000 f8d5 	bl	80189f8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>
 801884e:	f107 0308 	add.w	r3, r7, #8
 8018852:	f107 0158 	add.w	r1, r7, #88	; 0x58
 8018856:	4a1d      	ldr	r2, [pc, #116]	; (80188cc <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x148>)
 8018858:	4618      	mov	r0, r3
 801885a:	f7f5 fd1f 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 801885e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8018862:	4618      	mov	r0, r3
 8018864:	f00a ffbd 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018868:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801886c:	4618      	mov	r0, r3
 801886e:	f00a ffb8 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	std::string full_message = "$" + message + "\nin line: " + line
 8018872:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8018876:	4618      	mov	r0, r3
 8018878:	f00a ffb3 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801887c:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8018880:	4618      	mov	r0, r3
 8018882:	f00a ffae 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018886:	f107 03b8 	add.w	r3, r7, #184	; 0xb8
 801888a:	4618      	mov	r0, r3
 801888c:	f00a ffa9 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

	while (1)
	{
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 8018890:	f107 0308 	add.w	r3, r7, #8
 8018894:	4618      	mov	r0, r3
 8018896:	f00b f94d 	bl	8023b34 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 801889a:	4604      	mov	r4, r0
				full_message.length(), 100);
 801889c:	f107 0308 	add.w	r3, r7, #8
 80188a0:	4618      	mov	r0, r3
 80188a2:	f00a ffd4 	bl	802384e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 80188a6:	4603      	mov	r3, r0
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 80188a8:	b29a      	uxth	r2, r3
 80188aa:	2364      	movs	r3, #100	; 0x64
 80188ac:	4621      	mov	r1, r4
 80188ae:	4808      	ldr	r0, [pc, #32]	; (80188d0 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x14c>)
 80188b0:	f009 fbc8 	bl	8022044 <HAL_UART_Transmit>
		HAL_Delay(500);
 80188b4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80188b8:	f007 ff48 	bl	802074c <HAL_Delay>
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 80188bc:	e7e8      	b.n	8018890 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10c>
 80188be:	bf00      	nop
 80188c0:	08029bf8 	.word	0x08029bf8
 80188c4:	08029bfc 	.word	0x08029bfc
 80188c8:	08029c08 	.word	0x08029c08
 80188cc:	08029c18 	.word	0x08029c18
 80188d0:	20000670 	.word	0x20000670

080188d4 <__tcf_0>:
	}
}

void Transmitter::send_string(std::string message)
{
	static std::string res;
 80188d4:	b580      	push	{r7, lr}
 80188d6:	af00      	add	r7, sp, #0
 80188d8:	4801      	ldr	r0, [pc, #4]	; (80188e0 <__tcf_0+0xc>)
 80188da:	f00a ff82 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80188de:	bd80      	pop	{r7, pc}
 80188e0:	2000052c 	.word	0x2000052c

080188e4 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
 80188e4:	b590      	push	{r4, r7, lr}
 80188e6:	b083      	sub	sp, #12
 80188e8:	af00      	add	r7, sp, #0
 80188ea:	6078      	str	r0, [r7, #4]
	static std::string res;
 80188ec:	4b1b      	ldr	r3, [pc, #108]	; (801895c <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 80188ee:	781b      	ldrb	r3, [r3, #0]
 80188f0:	f3bf 8f5b 	dmb	ish
 80188f4:	b2db      	uxtb	r3, r3
 80188f6:	f003 0301 	and.w	r3, r3, #1
 80188fa:	2b00      	cmp	r3, #0
 80188fc:	bf0c      	ite	eq
 80188fe:	2301      	moveq	r3, #1
 8018900:	2300      	movne	r3, #0
 8018902:	b2db      	uxtb	r3, r3
 8018904:	2b00      	cmp	r3, #0
 8018906:	d013      	beq.n	8018930 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4c>
 8018908:	4814      	ldr	r0, [pc, #80]	; (801895c <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 801890a:	f00a fcb9 	bl	8023280 <__cxa_guard_acquire>
 801890e:	4603      	mov	r3, r0
 8018910:	2b00      	cmp	r3, #0
 8018912:	bf14      	ite	ne
 8018914:	2301      	movne	r3, #1
 8018916:	2300      	moveq	r3, #0
 8018918:	b2db      	uxtb	r3, r3
 801891a:	2b00      	cmp	r3, #0
 801891c:	d008      	beq.n	8018930 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4c>
 801891e:	4810      	ldr	r0, [pc, #64]	; (8018960 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 8018920:	f00a ff3e 	bl	80237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 8018924:	480d      	ldr	r0, [pc, #52]	; (801895c <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 8018926:	f00a fcb7 	bl	8023298 <__cxa_guard_release>
 801892a:	480e      	ldr	r0, [pc, #56]	; (8018964 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 801892c:	f00c f8fd 	bl	8024b2a <atexit>
    res = message;
 8018930:	6879      	ldr	r1, [r7, #4]
 8018932:	480b      	ldr	r0, [pc, #44]	; (8018960 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 8018934:	f00a ff5b 	bl	80237ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	HAL_UART_Transmit(&huart1, (uint8_t*)res.c_str(), res.length(), 100);
 8018938:	4809      	ldr	r0, [pc, #36]	; (8018960 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 801893a:	f00b f8fb 	bl	8023b34 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 801893e:	4604      	mov	r4, r0
 8018940:	4807      	ldr	r0, [pc, #28]	; (8018960 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 8018942:	f00a ff84 	bl	802384e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 8018946:	4603      	mov	r3, r0
 8018948:	b29a      	uxth	r2, r3
 801894a:	2364      	movs	r3, #100	; 0x64
 801894c:	4621      	mov	r1, r4
 801894e:	4806      	ldr	r0, [pc, #24]	; (8018968 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x84>)
 8018950:	f009 fb78 	bl	8022044 <HAL_UART_Transmit>
}
 8018954:	bf00      	nop
 8018956:	370c      	adds	r7, #12
 8018958:	46bd      	mov	sp, r7
 801895a:	bd90      	pop	{r4, r7, pc}
 801895c:	20000544 	.word	0x20000544
 8018960:	2000052c 	.word	0x2000052c
 8018964:	080188d5 	.word	0x080188d5
 8018968:	20000670 	.word	0x20000670

0801896c <_ZN11Transmitter15start_listeningEv>:

static uint8_t rx_buffer;

void Transmitter::start_listening()
{
 801896c:	b580      	push	{r7, lr}
 801896e:	af00      	add	r7, sp, #0
	HAL_UART_Receive_IT(&huart1, &rx_buffer, 1);
 8018970:	2201      	movs	r2, #1
 8018972:	4903      	ldr	r1, [pc, #12]	; (8018980 <_ZN11Transmitter15start_listeningEv+0x14>)
 8018974:	4803      	ldr	r0, [pc, #12]	; (8018984 <_ZN11Transmitter15start_listeningEv+0x18>)
 8018976:	f009 fcc8 	bl	802230a <HAL_UART_Receive_IT>
}
 801897a:	bf00      	nop
 801897c:	bd80      	pop	{r7, pc}
 801897e:	bf00      	nop
 8018980:	20000548 	.word	0x20000548
 8018984:	20000670 	.word	0x20000670

08018988 <_ZN11Transmitter17receive_code_charEv>:

char Transmitter::receive_code_char()
{
 8018988:	b580      	push	{r7, lr}
 801898a:	af00      	add	r7, sp, #0
    static uint8_t tx_buffer = 'c';
	HAL_UART_Transmit(&huart1, &tx_buffer, 1, 100);
 801898c:	2364      	movs	r3, #100	; 0x64
 801898e:	2201      	movs	r2, #1
 8018990:	490b      	ldr	r1, [pc, #44]	; (80189c0 <_ZN11Transmitter17receive_code_charEv+0x38>)
 8018992:	480c      	ldr	r0, [pc, #48]	; (80189c4 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 8018994:	f009 fb56 	bl	8022044 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, &rx_buffer, 1, -1);
 8018998:	f04f 33ff 	mov.w	r3, #4294967295
 801899c:	2201      	movs	r2, #1
 801899e:	490a      	ldr	r1, [pc, #40]	; (80189c8 <_ZN11Transmitter17receive_code_charEv+0x40>)
 80189a0:	4808      	ldr	r0, [pc, #32]	; (80189c4 <_ZN11Transmitter17receive_code_charEv+0x3c>)
 80189a2:	f009 fbe2 	bl	802216a <HAL_UART_Receive>

	Position_counter::get_instance().update_position(rx_buffer);
 80189a6:	f7fd ff4b 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 80189aa:	4602      	mov	r2, r0
 80189ac:	4b06      	ldr	r3, [pc, #24]	; (80189c8 <_ZN11Transmitter17receive_code_charEv+0x40>)
 80189ae:	781b      	ldrb	r3, [r3, #0]
 80189b0:	4619      	mov	r1, r3
 80189b2:	4610      	mov	r0, r2
 80189b4:	f7fd ff6c 	bl	8016890 <_ZN16Position_counter15update_positionEh>

	return rx_buffer;
 80189b8:	4b03      	ldr	r3, [pc, #12]	; (80189c8 <_ZN11Transmitter17receive_code_charEv+0x40>)
 80189ba:	781b      	ldrb	r3, [r3, #0]
}
 80189bc:	4618      	mov	r0, r3
 80189be:	bd80      	pop	{r7, pc}
 80189c0:	20000000 	.word	0x20000000
 80189c4:	20000670 	.word	0x20000670
 80189c8:	20000548 	.word	0x20000548

080189cc <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 80189cc:	b580      	push	{r7, lr}
 80189ce:	b082      	sub	sp, #8
 80189d0:	af00      	add	r7, sp, #0
 80189d2:	6078      	str	r0, [r7, #4]
	switch (rx_buffer)
 80189d4:	4b07      	ldr	r3, [pc, #28]	; (80189f4 <HAL_UART_RxCpltCallback+0x28>)
 80189d6:	781b      	ldrb	r3, [r3, #0]
 80189d8:	2b65      	cmp	r3, #101	; 0x65
 80189da:	d106      	bne.n	80189ea <HAL_UART_RxCpltCallback+0x1e>
	{
	case 'e':
		Executor::get_instance().abort();
 80189dc:	f7e8 fc68 	bl	80012b0 <_ZN8Executor12get_instanceEv>
 80189e0:	4603      	mov	r3, r0
 80189e2:	4618      	mov	r0, r3
 80189e4:	f7e9 f92e 	bl	8001c44 <_ZN8Executor5abortEv>
		break;
 80189e8:	e000      	b.n	80189ec <HAL_UART_RxCpltCallback+0x20>
	default:
		break;
 80189ea:	bf00      	nop
	}
}
 80189ec:	bf00      	nop
 80189ee:	3708      	adds	r7, #8
 80189f0:	46bd      	mov	sp, r7
 80189f2:	bd80      	pop	{r7, pc}
 80189f4:	20000548 	.word	0x20000548

080189f8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 80189f8:	b580      	push	{r7, lr}
 80189fa:	b084      	sub	sp, #16
 80189fc:	af00      	add	r7, sp, #0
 80189fe:	60f8      	str	r0, [r7, #12]
 8018a00:	60b9      	str	r1, [r7, #8]
 8018a02:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 8018a04:	6879      	ldr	r1, [r7, #4]
 8018a06:	68b8      	ldr	r0, [r7, #8]
 8018a08:	f00b f860 	bl	8023acc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8018a0c:	4603      	mov	r3, r0
 8018a0e:	4618      	mov	r0, r3
 8018a10:	f7ee fbb5 	bl	800717e <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8018a14:	4603      	mov	r3, r0
 8018a16:	4619      	mov	r1, r3
 8018a18:	68f8      	ldr	r0, [r7, #12]
 8018a1a:	f00a fec8 	bl	80237ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 8018a1e:	68f8      	ldr	r0, [r7, #12]
 8018a20:	3710      	adds	r7, #16
 8018a22:	46bd      	mov	sp, r7
 8018a24:	bd80      	pop	{r7, pc}
	...

08018a28 <_Z41__static_initialization_and_destruction_0ii>:
 8018a28:	b590      	push	{r4, r7, lr}
 8018a2a:	b0e7      	sub	sp, #412	; 0x19c
 8018a2c:	af02      	add	r7, sp, #8
 8018a2e:	1d3b      	adds	r3, r7, #4
 8018a30:	6018      	str	r0, [r3, #0]
 8018a32:	463b      	mov	r3, r7
 8018a34:	6019      	str	r1, [r3, #0]
 8018a36:	1d3b      	adds	r3, r7, #4
 8018a38:	681b      	ldr	r3, [r3, #0]
 8018a3a:	2b01      	cmp	r3, #1
 8018a3c:	f040 819d 	bne.w	8018d7a <_Z41__static_initialization_and_destruction_0ii+0x352>
 8018a40:	463b      	mov	r3, r7
 8018a42:	681b      	ldr	r3, [r3, #0]
 8018a44:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8018a48:	4293      	cmp	r3, r2
 8018a4a:	f040 8196 	bne.w	8018d7a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8018a4e:	f107 0314 	add.w	r3, r7, #20
 8018a52:	4618      	mov	r0, r3
 8018a54:	2322      	movs	r3, #34	; 0x22
 8018a56:	461a      	mov	r2, r3
 8018a58:	2100      	movs	r1, #0
 8018a5a:	f00c f90f 	bl	8024c7c <memset>
 8018a5e:	f107 0314 	add.w	r3, r7, #20
 8018a62:	223a      	movs	r2, #58	; 0x3a
 8018a64:	701a      	strb	r2, [r3, #0]
 8018a66:	f107 0314 	add.w	r3, r7, #20
 8018a6a:	2201      	movs	r2, #1
 8018a6c:	705a      	strb	r2, [r3, #1]
 8018a6e:	f107 0314 	add.w	r3, r7, #20
 8018a72:	220a      	movs	r2, #10
 8018a74:	709a      	strb	r2, [r3, #2]
 8018a76:	f107 0314 	add.w	r3, r7, #20
 8018a7a:	220a      	movs	r2, #10
 8018a7c:	70da      	strb	r2, [r3, #3]
 8018a7e:	f107 0314 	add.w	r3, r7, #20
 8018a82:	222c      	movs	r2, #44	; 0x2c
 8018a84:	711a      	strb	r2, [r3, #4]
 8018a86:	f107 0314 	add.w	r3, r7, #20
 8018a8a:	220c      	movs	r2, #12
 8018a8c:	715a      	strb	r2, [r3, #5]
 8018a8e:	f107 0314 	add.w	r3, r7, #20
 8018a92:	222e      	movs	r2, #46	; 0x2e
 8018a94:	719a      	strb	r2, [r3, #6]
 8018a96:	f107 0314 	add.w	r3, r7, #20
 8018a9a:	220b      	movs	r2, #11
 8018a9c:	71da      	strb	r2, [r3, #7]
 8018a9e:	f107 0314 	add.w	r3, r7, #20
 8018aa2:	225b      	movs	r2, #91	; 0x5b
 8018aa4:	721a      	strb	r2, [r3, #8]
 8018aa6:	f107 0314 	add.w	r3, r7, #20
 8018aaa:	220d      	movs	r2, #13
 8018aac:	725a      	strb	r2, [r3, #9]
 8018aae:	f107 0314 	add.w	r3, r7, #20
 8018ab2:	225d      	movs	r2, #93	; 0x5d
 8018ab4:	729a      	strb	r2, [r3, #10]
 8018ab6:	f107 0314 	add.w	r3, r7, #20
 8018aba:	220e      	movs	r2, #14
 8018abc:	72da      	strb	r2, [r3, #11]
 8018abe:	f107 0314 	add.w	r3, r7, #20
 8018ac2:	227c      	movs	r2, #124	; 0x7c
 8018ac4:	731a      	strb	r2, [r3, #12]
 8018ac6:	f107 0314 	add.w	r3, r7, #20
 8018aca:	2215      	movs	r2, #21
 8018acc:	735a      	strb	r2, [r3, #13]
 8018ace:	f107 0314 	add.w	r3, r7, #20
 8018ad2:	2226      	movs	r2, #38	; 0x26
 8018ad4:	739a      	strb	r2, [r3, #14]
 8018ad6:	f107 0314 	add.w	r3, r7, #20
 8018ada:	2216      	movs	r2, #22
 8018adc:	73da      	strb	r2, [r3, #15]
 8018ade:	f107 0314 	add.w	r3, r7, #20
 8018ae2:	222b      	movs	r2, #43	; 0x2b
 8018ae4:	741a      	strb	r2, [r3, #16]
 8018ae6:	f107 0314 	add.w	r3, r7, #20
 8018aea:	221f      	movs	r2, #31
 8018aec:	745a      	strb	r2, [r3, #17]
 8018aee:	f107 0314 	add.w	r3, r7, #20
 8018af2:	222d      	movs	r2, #45	; 0x2d
 8018af4:	749a      	strb	r2, [r3, #18]
 8018af6:	f107 0314 	add.w	r3, r7, #20
 8018afa:	2220      	movs	r2, #32
 8018afc:	74da      	strb	r2, [r3, #19]
 8018afe:	f107 0314 	add.w	r3, r7, #20
 8018b02:	222a      	movs	r2, #42	; 0x2a
 8018b04:	751a      	strb	r2, [r3, #20]
 8018b06:	f107 0314 	add.w	r3, r7, #20
 8018b0a:	2221      	movs	r2, #33	; 0x21
 8018b0c:	755a      	strb	r2, [r3, #21]
 8018b0e:	f107 0314 	add.w	r3, r7, #20
 8018b12:	222f      	movs	r2, #47	; 0x2f
 8018b14:	759a      	strb	r2, [r3, #22]
 8018b16:	f107 0314 	add.w	r3, r7, #20
 8018b1a:	2222      	movs	r2, #34	; 0x22
 8018b1c:	75da      	strb	r2, [r3, #23]
 8018b1e:	f107 0314 	add.w	r3, r7, #20
 8018b22:	225e      	movs	r2, #94	; 0x5e
 8018b24:	761a      	strb	r2, [r3, #24]
 8018b26:	f107 0314 	add.w	r3, r7, #20
 8018b2a:	2223      	movs	r2, #35	; 0x23
 8018b2c:	765a      	strb	r2, [r3, #25]
 8018b2e:	f107 0314 	add.w	r3, r7, #20
 8018b32:	2225      	movs	r2, #37	; 0x25
 8018b34:	769a      	strb	r2, [r3, #26]
 8018b36:	f107 0314 	add.w	r3, r7, #20
 8018b3a:	2224      	movs	r2, #36	; 0x24
 8018b3c:	76da      	strb	r2, [r3, #27]
 8018b3e:	f107 0314 	add.w	r3, r7, #20
 8018b42:	2228      	movs	r2, #40	; 0x28
 8018b44:	771a      	strb	r2, [r3, #28]
 8018b46:	f107 0314 	add.w	r3, r7, #20
 8018b4a:	2226      	movs	r2, #38	; 0x26
 8018b4c:	775a      	strb	r2, [r3, #29]
 8018b4e:	f107 0314 	add.w	r3, r7, #20
 8018b52:	2229      	movs	r2, #41	; 0x29
 8018b54:	779a      	strb	r2, [r3, #30]
 8018b56:	f107 0314 	add.w	r3, r7, #20
 8018b5a:	2227      	movs	r2, #39	; 0x27
 8018b5c:	77da      	strb	r2, [r3, #31]
 8018b5e:	f107 0314 	add.w	r3, r7, #20
 8018b62:	2225      	movs	r2, #37	; 0x25
 8018b64:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8018b68:	f107 030c 	add.w	r3, r7, #12
 8018b6c:	f107 0214 	add.w	r2, r7, #20
 8018b70:	601a      	str	r2, [r3, #0]
 8018b72:	f107 030c 	add.w	r3, r7, #12
 8018b76:	2211      	movs	r2, #17
 8018b78:	605a      	str	r2, [r3, #4]
 8018b7a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8018b7e:	4618      	mov	r0, r3
 8018b80:	f7e9 f8e4 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8018b84:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8018b88:	f107 020c 	add.w	r2, r7, #12
 8018b8c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8018b90:	9300      	str	r3, [sp, #0]
 8018b92:	460b      	mov	r3, r1
 8018b94:	ca06      	ldmia	r2, {r1, r2}
 8018b96:	4885      	ldr	r0, [pc, #532]	; (8018dac <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8018b98:	f7e9 f8f0 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8018b9c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8018ba0:	4618      	mov	r0, r3
 8018ba2:	f7e9 f8df 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8018ba6:	2305      	movs	r3, #5
 8018ba8:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8018bac:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8018bb0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018bb4:	497e      	ldr	r1, [pc, #504]	; (8018db0 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8018bb6:	4618      	mov	r0, r3
 8018bb8:	f7e8 fa9e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8018bbc:	2306      	movs	r3, #6
 8018bbe:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8018bc2:	f207 1263 	addw	r2, r7, #355	; 0x163
 8018bc6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018bca:	331c      	adds	r3, #28
 8018bcc:	4979      	ldr	r1, [pc, #484]	; (8018db4 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8018bce:	4618      	mov	r0, r3
 8018bd0:	f7e8 faba 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8018bd4:	2307      	movs	r3, #7
 8018bd6:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8018bda:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8018bde:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018be2:	3338      	adds	r3, #56	; 0x38
 8018be4:	4974      	ldr	r1, [pc, #464]	; (8018db8 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8018be6:	4618      	mov	r0, r3
 8018be8:	f7e8 faae 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8018bec:	2308      	movs	r3, #8
 8018bee:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8018bf2:	f207 1265 	addw	r2, r7, #357	; 0x165
 8018bf6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018bfa:	3354      	adds	r3, #84	; 0x54
 8018bfc:	496f      	ldr	r1, [pc, #444]	; (8018dbc <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8018bfe:	4618      	mov	r0, r3
 8018c00:	f7e8 fa7a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8018c04:	2309      	movs	r3, #9
 8018c06:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8018c0a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8018c0e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018c12:	3370      	adds	r3, #112	; 0x70
 8018c14:	496a      	ldr	r1, [pc, #424]	; (8018dc0 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8018c16:	4618      	mov	r0, r3
 8018c18:	f7e8 fabe 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8018c1c:	2310      	movs	r3, #16
 8018c1e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8018c22:	f207 1267 	addw	r2, r7, #359	; 0x167
 8018c26:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018c2a:	338c      	adds	r3, #140	; 0x8c
 8018c2c:	4965      	ldr	r1, [pc, #404]	; (8018dc4 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8018c2e:	4618      	mov	r0, r3
 8018c30:	f7e8 fada 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8018c34:	2311      	movs	r3, #17
 8018c36:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8018c3a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8018c3e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018c42:	33a8      	adds	r3, #168	; 0xa8
 8018c44:	4960      	ldr	r1, [pc, #384]	; (8018dc8 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8018c46:	4618      	mov	r0, r3
 8018c48:	f7e8 faa6 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8018c4c:	2312      	movs	r3, #18
 8018c4e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8018c52:	f207 1269 	addw	r2, r7, #361	; 0x169
 8018c56:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018c5a:	33c4      	adds	r3, #196	; 0xc4
 8018c5c:	495b      	ldr	r1, [pc, #364]	; (8018dcc <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8018c5e:	4618      	mov	r0, r3
 8018c60:	f7e8 fa4a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8018c64:	2313      	movs	r3, #19
 8018c66:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8018c6a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8018c6e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018c72:	33e0      	adds	r3, #224	; 0xe0
 8018c74:	4956      	ldr	r1, [pc, #344]	; (8018dd0 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8018c76:	4618      	mov	r0, r3
 8018c78:	f7e8 fa66 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8018c7c:	2314      	movs	r3, #20
 8018c7e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8018c82:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8018c86:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018c8a:	33fc      	adds	r3, #252	; 0xfc
 8018c8c:	4951      	ldr	r1, [pc, #324]	; (8018dd4 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8018c8e:	4618      	mov	r0, r3
 8018c90:	f7e8 fad2 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8018c94:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8018c98:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8018c9c:	601a      	str	r2, [r3, #0]
 8018c9e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8018ca2:	220a      	movs	r2, #10
 8018ca4:	605a      	str	r2, [r3, #4]
 8018ca6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8018caa:	4618      	mov	r0, r3
 8018cac:	f7e9 f8f3 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8018cb0:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8018cb4:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8018cb8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8018cbc:	9300      	str	r3, [sp, #0]
 8018cbe:	460b      	mov	r3, r1
 8018cc0:	ca06      	ldmia	r2, {r1, r2}
 8018cc2:	4845      	ldr	r0, [pc, #276]	; (8018dd8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8018cc4:	f7e9 f8ff 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8018cc8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8018ccc:	4618      	mov	r0, r3
 8018cce:	f7e9 f8ee 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8018cd2:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8018cd6:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8018cda:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8018cde:	429c      	cmp	r4, r3
 8018ce0:	d004      	beq.n	8018cec <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8018ce2:	3c1c      	subs	r4, #28
 8018ce4:	4620      	mov	r0, r4
 8018ce6:	f7e8 f9fa 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8018cea:	e7f6      	b.n	8018cda <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8018cec:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8018cf0:	2200      	movs	r2, #0
 8018cf2:	601a      	str	r2, [r3, #0]
 8018cf4:	605a      	str	r2, [r3, #4]
 8018cf6:	609a      	str	r2, [r3, #8]
 8018cf8:	233c      	movs	r3, #60	; 0x3c
 8018cfa:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8018cfe:	231b      	movs	r3, #27
 8018d00:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8018d04:	231c      	movs	r3, #28
 8018d06:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8018d0a:	233e      	movs	r3, #62	; 0x3e
 8018d0c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8018d10:	2319      	movs	r3, #25
 8018d12:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8018d16:	231a      	movs	r3, #26
 8018d18:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8018d1c:	233d      	movs	r3, #61	; 0x3d
 8018d1e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8018d22:	2318      	movs	r3, #24
 8018d24:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8018d28:	231d      	movs	r3, #29
 8018d2a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8018d2e:	2321      	movs	r3, #33	; 0x21
 8018d30:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8018d34:	2317      	movs	r3, #23
 8018d36:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8018d3a:	231e      	movs	r3, #30
 8018d3c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8018d40:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8018d44:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8018d48:	2304      	movs	r3, #4
 8018d4a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8018d4e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8018d52:	4618      	mov	r0, r3
 8018d54:	f7e9 f8e7 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8018d58:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8018d5c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8018d60:	9300      	str	r3, [sp, #0]
 8018d62:	4613      	mov	r3, r2
 8018d64:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8018d68:	ca06      	ldmia	r2, {r1, r2}
 8018d6a:	481c      	ldr	r0, [pc, #112]	; (8018ddc <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8018d6c:	f7e9 f8f3 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8018d70:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8018d74:	4618      	mov	r0, r3
 8018d76:	f7e9 f8e2 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8018d7a:	1d3b      	adds	r3, r7, #4
 8018d7c:	681b      	ldr	r3, [r3, #0]
 8018d7e:	2b00      	cmp	r3, #0
 8018d80:	d10e      	bne.n	8018da0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8018d82:	463b      	mov	r3, r7
 8018d84:	681b      	ldr	r3, [r3, #0]
 8018d86:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8018d8a:	4293      	cmp	r3, r2
 8018d8c:	d108      	bne.n	8018da0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8018d8e:	4813      	ldr	r0, [pc, #76]	; (8018ddc <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8018d90:	f7f0 fd50 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8018d94:	4810      	ldr	r0, [pc, #64]	; (8018dd8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8018d96:	f7f0 fd5a 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8018d9a:	4804      	ldr	r0, [pc, #16]	; (8018dac <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8018d9c:	f7f0 fd64 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8018da0:	bf00      	nop
 8018da2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8018da6:	46bd      	mov	sp, r7
 8018da8:	bd90      	pop	{r4, r7, pc}
 8018daa:	bf00      	nop
 8018dac:	200004e4 	.word	0x200004e4
 8018db0:	08029c48 	.word	0x08029c48
 8018db4:	08029c50 	.word	0x08029c50
 8018db8:	08029c58 	.word	0x08029c58
 8018dbc:	08029c60 	.word	0x08029c60
 8018dc0:	08029c68 	.word	0x08029c68
 8018dc4:	08029c70 	.word	0x08029c70
 8018dc8:	08029c74 	.word	0x08029c74
 8018dcc:	08029c7c 	.word	0x08029c7c
 8018dd0:	08029c84 	.word	0x08029c84
 8018dd4:	08029c8c 	.word	0x08029c8c
 8018dd8:	200004fc 	.word	0x200004fc
 8018ddc:	20000514 	.word	0x20000514

08018de0 <_GLOBAL__sub_I__ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 8018de0:	b580      	push	{r7, lr}
 8018de2:	af00      	add	r7, sp, #0
 8018de4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8018de8:	2001      	movs	r0, #1
 8018dea:	f7ff fe1d 	bl	8018a28 <_Z41__static_initialization_and_destruction_0ii>
 8018dee:	bd80      	pop	{r7, pc}

08018df0 <_GLOBAL__sub_D__ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 8018df0:	b580      	push	{r7, lr}
 8018df2:	af00      	add	r7, sp, #0
 8018df4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8018df8:	2000      	movs	r0, #0
 8018dfa:	f7ff fe15 	bl	8018a28 <_Z41__static_initialization_and_destruction_0ii>
 8018dfe:	bd80      	pop	{r7, pc}

08018e00 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
      ~map() = default;
 8018e00:	b580      	push	{r7, lr}
 8018e02:	b082      	sub	sp, #8
 8018e04:	af00      	add	r7, sp, #0
 8018e06:	6078      	str	r0, [r7, #4]
 8018e08:	687b      	ldr	r3, [r7, #4]
 8018e0a:	4618      	mov	r0, r3
 8018e0c:	f000 fa6a 	bl	80192e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 8018e10:	687b      	ldr	r3, [r7, #4]
 8018e12:	4618      	mov	r0, r3
 8018e14:	3708      	adds	r7, #8
 8018e16:	46bd      	mov	sp, r7
 8018e18:	bd80      	pop	{r7, pc}

08018e1a <_ZN16Variable_handlerD1Ev>:
#define ADD_ARG(x) Arg.insert({#x, {}});
#define ARG(x) Variable_handler::get_instance().get_arg(#x)
#define ADD_PAR(x) Par.insert({#x, {}});
#define PAR(x) Variable_handler::get_instance().get_par(#x)

class Variable_handler
 8018e1a:	b580      	push	{r7, lr}
 8018e1c:	b082      	sub	sp, #8
 8018e1e:	af00      	add	r7, sp, #0
 8018e20:	6078      	str	r0, [r7, #4]
 8018e22:	687b      	ldr	r3, [r7, #4]
 8018e24:	3330      	adds	r3, #48	; 0x30
 8018e26:	4618      	mov	r0, r3
 8018e28:	f7ff ffea 	bl	8018e00 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8018e2c:	687b      	ldr	r3, [r7, #4]
 8018e2e:	3318      	adds	r3, #24
 8018e30:	4618      	mov	r0, r3
 8018e32:	f7ff ffe5 	bl	8018e00 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8018e36:	687b      	ldr	r3, [r7, #4]
 8018e38:	4618      	mov	r0, r3
 8018e3a:	f7ff ffe1 	bl	8018e00 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 8018e3e:	687b      	ldr	r3, [r7, #4]
 8018e40:	4618      	mov	r0, r3
 8018e42:	3708      	adds	r7, #8
 8018e44:	46bd      	mov	sp, r7
 8018e46:	bd80      	pop	{r7, pc}

08018e48 <__tcf_0>:
#include <Variable_handler.h>

Variable_handler& Variable_handler::get_instance()
{
	static Variable_handler instance;
 8018e48:	b580      	push	{r7, lr}
 8018e4a:	af00      	add	r7, sp, #0
 8018e4c:	4801      	ldr	r0, [pc, #4]	; (8018e54 <__tcf_0+0xc>)
 8018e4e:	f7ff ffe4 	bl	8018e1a <_ZN16Variable_handlerD1Ev>
 8018e52:	bd80      	pop	{r7, pc}
 8018e54:	20000594 	.word	0x20000594

08018e58 <_ZN16Variable_handler12get_instanceEv>:
{
 8018e58:	b580      	push	{r7, lr}
 8018e5a:	af00      	add	r7, sp, #0
	static Variable_handler instance;
 8018e5c:	4b12      	ldr	r3, [pc, #72]	; (8018ea8 <_ZN16Variable_handler12get_instanceEv+0x50>)
 8018e5e:	781b      	ldrb	r3, [r3, #0]
 8018e60:	f3bf 8f5b 	dmb	ish
 8018e64:	b2db      	uxtb	r3, r3
 8018e66:	f003 0301 	and.w	r3, r3, #1
 8018e6a:	2b00      	cmp	r3, #0
 8018e6c:	bf0c      	ite	eq
 8018e6e:	2301      	moveq	r3, #1
 8018e70:	2300      	movne	r3, #0
 8018e72:	b2db      	uxtb	r3, r3
 8018e74:	2b00      	cmp	r3, #0
 8018e76:	d013      	beq.n	8018ea0 <_ZN16Variable_handler12get_instanceEv+0x48>
 8018e78:	480b      	ldr	r0, [pc, #44]	; (8018ea8 <_ZN16Variable_handler12get_instanceEv+0x50>)
 8018e7a:	f00a fa01 	bl	8023280 <__cxa_guard_acquire>
 8018e7e:	4603      	mov	r3, r0
 8018e80:	2b00      	cmp	r3, #0
 8018e82:	bf14      	ite	ne
 8018e84:	2301      	movne	r3, #1
 8018e86:	2300      	moveq	r3, #0
 8018e88:	b2db      	uxtb	r3, r3
 8018e8a:	2b00      	cmp	r3, #0
 8018e8c:	d008      	beq.n	8018ea0 <_ZN16Variable_handler12get_instanceEv+0x48>
 8018e8e:	4807      	ldr	r0, [pc, #28]	; (8018eac <_ZN16Variable_handler12get_instanceEv+0x54>)
 8018e90:	f006 fb9c 	bl	801f5cc <_ZN16Variable_handlerC1Ev>
 8018e94:	4804      	ldr	r0, [pc, #16]	; (8018ea8 <_ZN16Variable_handler12get_instanceEv+0x50>)
 8018e96:	f00a f9ff 	bl	8023298 <__cxa_guard_release>
 8018e9a:	4805      	ldr	r0, [pc, #20]	; (8018eb0 <_ZN16Variable_handler12get_instanceEv+0x58>)
 8018e9c:	f00b fe45 	bl	8024b2a <atexit>
	return instance;
 8018ea0:	4b02      	ldr	r3, [pc, #8]	; (8018eac <_ZN16Variable_handler12get_instanceEv+0x54>)
}
 8018ea2:	4618      	mov	r0, r3
 8018ea4:	bd80      	pop	{r7, pc}
 8018ea6:	bf00      	nop
 8018ea8:	200005dc 	.word	0x200005dc
 8018eac:	20000594 	.word	0x20000594
 8018eb0:	08018e49 	.word	0x08018e49

08018eb4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_arg(std::string name)
{
 8018eb4:	b580      	push	{r7, lr}
 8018eb6:	b090      	sub	sp, #64	; 0x40
 8018eb8:	af00      	add	r7, sp, #0
 8018eba:	6078      	str	r0, [r7, #4]
 8018ebc:	6039      	str	r1, [r7, #0]
	auto search = Arg.find(name);
 8018ebe:	687b      	ldr	r3, [r7, #4]
 8018ec0:	3330      	adds	r3, #48	; 0x30
 8018ec2:	6839      	ldr	r1, [r7, #0]
 8018ec4:	4618      	mov	r0, r3
 8018ec6:	f000 fa22 	bl	801930e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 8018eca:	4603      	mov	r3, r0
 8018ecc:	60bb      	str	r3, [r7, #8]
	if (search == Arg.end())
 8018ece:	687b      	ldr	r3, [r7, #4]
 8018ed0:	3330      	adds	r3, #48	; 0x30
 8018ed2:	4618      	mov	r0, r3
 8018ed4:	f000 fa2a 	bl	801932c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 8018ed8:	4603      	mov	r3, r0
 8018eda:	60fb      	str	r3, [r7, #12]
 8018edc:	f107 020c 	add.w	r2, r7, #12
 8018ee0:	f107 0308 	add.w	r3, r7, #8
 8018ee4:	4611      	mov	r1, r2
 8018ee6:	4618      	mov	r0, r3
 8018ee8:	f000 fa2d 	bl	8019346 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8018eec:	4603      	mov	r3, r0
 8018eee:	2b00      	cmp	r3, #0
 8018ef0:	d01d      	beq.n	8018f2e <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7a>
	{
		Transmitter::report_error(std::string("Arg " + name + " not found"));
 8018ef2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018ef6:	683a      	ldr	r2, [r7, #0]
 8018ef8:	4912      	ldr	r1, [pc, #72]	; (8018f44 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>)
 8018efa:	4618      	mov	r0, r3
 8018efc:	f7f5 f9a9 	bl	800e252 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8018f00:	f107 0310 	add.w	r3, r7, #16
 8018f04:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8018f08:	4a0f      	ldr	r2, [pc, #60]	; (8018f48 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>)
 8018f0a:	4618      	mov	r0, r3
 8018f0c:	f7f5 f9c6 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8018f10:	f107 0310 	add.w	r3, r7, #16
 8018f14:	4618      	mov	r0, r3
 8018f16:	f7ff fc35 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018f1a:	f107 0310 	add.w	r3, r7, #16
 8018f1e:	4618      	mov	r0, r3
 8018f20:	f00a fc5f 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018f24:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018f28:	4618      	mov	r0, r3
 8018f2a:	f00a fc5a 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	return search->second;
 8018f2e:	f107 0308 	add.w	r3, r7, #8
 8018f32:	4618      	mov	r0, r3
 8018f34:	f000 fa1b 	bl	801936e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>
 8018f38:	4603      	mov	r3, r0
 8018f3a:	3318      	adds	r3, #24
}
 8018f3c:	4618      	mov	r0, r3
 8018f3e:	3740      	adds	r7, #64	; 0x40
 8018f40:	46bd      	mov	sp, r7
 8018f42:	bd80      	pop	{r7, pc}
 8018f44:	08029c90 	.word	0x08029c90
 8018f48:	08029c98 	.word	0x08029c98

08018f4c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_par(std::string name)
{
 8018f4c:	b580      	push	{r7, lr}
 8018f4e:	b090      	sub	sp, #64	; 0x40
 8018f50:	af00      	add	r7, sp, #0
 8018f52:	6078      	str	r0, [r7, #4]
 8018f54:	6039      	str	r1, [r7, #0]
	auto search = Par.find(name);
 8018f56:	687b      	ldr	r3, [r7, #4]
 8018f58:	3318      	adds	r3, #24
 8018f5a:	6839      	ldr	r1, [r7, #0]
 8018f5c:	4618      	mov	r0, r3
 8018f5e:	f000 f9d6 	bl	801930e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 8018f62:	4603      	mov	r3, r0
 8018f64:	60bb      	str	r3, [r7, #8]
	if (search == Par.end())
 8018f66:	687b      	ldr	r3, [r7, #4]
 8018f68:	3318      	adds	r3, #24
 8018f6a:	4618      	mov	r0, r3
 8018f6c:	f000 f9de 	bl	801932c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 8018f70:	4603      	mov	r3, r0
 8018f72:	60fb      	str	r3, [r7, #12]
 8018f74:	f107 020c 	add.w	r2, r7, #12
 8018f78:	f107 0308 	add.w	r3, r7, #8
 8018f7c:	4611      	mov	r1, r2
 8018f7e:	4618      	mov	r0, r3
 8018f80:	f000 f9e1 	bl	8019346 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8018f84:	4603      	mov	r3, r0
 8018f86:	2b00      	cmp	r3, #0
 8018f88:	d01d      	beq.n	8018fc6 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7a>
	{
		Transmitter::report_error(std::string("Par " + name + " not found"));
 8018f8a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018f8e:	683a      	ldr	r2, [r7, #0]
 8018f90:	4912      	ldr	r1, [pc, #72]	; (8018fdc <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x90>)
 8018f92:	4618      	mov	r0, r3
 8018f94:	f7f5 f95d 	bl	800e252 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8018f98:	f107 0310 	add.w	r3, r7, #16
 8018f9c:	f107 0128 	add.w	r1, r7, #40	; 0x28
 8018fa0:	4a0f      	ldr	r2, [pc, #60]	; (8018fe0 <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94>)
 8018fa2:	4618      	mov	r0, r3
 8018fa4:	f7f5 f97a 	bl	800e29c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8018fa8:	f107 0310 	add.w	r3, r7, #16
 8018fac:	4618      	mov	r0, r3
 8018fae:	f7ff fbe9 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8018fb2:	f107 0310 	add.w	r3, r7, #16
 8018fb6:	4618      	mov	r0, r3
 8018fb8:	f00a fc13 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8018fbc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018fc0:	4618      	mov	r0, r3
 8018fc2:	f00a fc0e 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	return search->second;
 8018fc6:	f107 0308 	add.w	r3, r7, #8
 8018fca:	4618      	mov	r0, r3
 8018fcc:	f000 f9cf 	bl	801936e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>
 8018fd0:	4603      	mov	r3, r0
 8018fd2:	3318      	adds	r3, #24
}
 8018fd4:	4618      	mov	r0, r3
 8018fd6:	3740      	adds	r7, #64	; 0x40
 8018fd8:	46bd      	mov	sp, r7
 8018fda:	bd80      	pop	{r7, pc}
 8018fdc:	08029ca4 	.word	0x08029ca4
 8018fe0:	08029c98 	.word	0x08029c98

08018fe4 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Symbol& Variable_handler::get_local(std::string name)
{
 8018fe4:	b580      	push	{r7, lr}
 8018fe6:	b082      	sub	sp, #8
 8018fe8:	af00      	add	r7, sp, #0
 8018fea:	6078      	str	r0, [r7, #4]
 8018fec:	6039      	str	r1, [r7, #0]
	return local[name];
 8018fee:	687b      	ldr	r3, [r7, #4]
 8018ff0:	6839      	ldr	r1, [r7, #0]
 8018ff2:	4618      	mov	r0, r3
 8018ff4:	f000 f9ca 	bl	801938c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>
 8018ff8:	4603      	mov	r3, r0
}
 8018ffa:	4618      	mov	r0, r3
 8018ffc:	3708      	adds	r7, #8
 8018ffe:	46bd      	mov	sp, r7
 8019000:	bd80      	pop	{r7, pc}

08019002 <_ZN16Variable_handler10get_symbolE8Variable>:

Symbol& Variable_handler::get_symbol(Variable var)
{
 8019002:	b590      	push	{r4, r7, lr}
 8019004:	b095      	sub	sp, #84	; 0x54
 8019006:	af00      	add	r7, sp, #0
 8019008:	6078      	str	r0, [r7, #4]
 801900a:	6039      	str	r1, [r7, #0]
	switch (var.type)
 801900c:	683b      	ldr	r3, [r7, #0]
 801900e:	781b      	ldrb	r3, [r3, #0]
 8019010:	2b02      	cmp	r3, #2
 8019012:	d01a      	beq.n	801904a <_ZN16Variable_handler10get_symbolE8Variable+0x48>
 8019014:	2b02      	cmp	r3, #2
 8019016:	dc2e      	bgt.n	8019076 <_ZN16Variable_handler10get_symbolE8Variable+0x74>
 8019018:	2b00      	cmp	r3, #0
 801901a:	d02b      	beq.n	8019074 <_ZN16Variable_handler10get_symbolE8Variable+0x72>
 801901c:	2b01      	cmp	r3, #1
 801901e:	d12a      	bne.n	8019076 <_ZN16Variable_handler10get_symbolE8Variable+0x74>
	{
	case VARIABLE_ARG:
		return get_arg(var.id);
 8019020:	683b      	ldr	r3, [r7, #0]
 8019022:	1d1a      	adds	r2, r3, #4
 8019024:	f107 0308 	add.w	r3, r7, #8
 8019028:	4611      	mov	r1, r2
 801902a:	4618      	mov	r0, r3
 801902c:	f00a fda8 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8019030:	f107 0308 	add.w	r3, r7, #8
 8019034:	4619      	mov	r1, r3
 8019036:	6878      	ldr	r0, [r7, #4]
 8019038:	f7ff ff3c 	bl	8018eb4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801903c:	4604      	mov	r4, r0
 801903e:	f107 0308 	add.w	r3, r7, #8
 8019042:	4618      	mov	r0, r3
 8019044:	f00a fbcd 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8019048:	e029      	b.n	801909e <_ZN16Variable_handler10get_symbolE8Variable+0x9c>
	case VARIABLE_PAR:
		return get_par(var.id);
 801904a:	683b      	ldr	r3, [r7, #0]
 801904c:	1d1a      	adds	r2, r3, #4
 801904e:	f107 0320 	add.w	r3, r7, #32
 8019052:	4611      	mov	r1, r2
 8019054:	4618      	mov	r0, r3
 8019056:	f00a fd93 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801905a:	f107 0320 	add.w	r3, r7, #32
 801905e:	4619      	mov	r1, r3
 8019060:	6878      	ldr	r0, [r7, #4]
 8019062:	f7ff ff73 	bl	8018f4c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019066:	4604      	mov	r4, r0
 8019068:	f107 0320 	add.w	r3, r7, #32
 801906c:	4618      	mov	r0, r3
 801906e:	f00a fbb8 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8019072:	e014      	b.n	801909e <_ZN16Variable_handler10get_symbolE8Variable+0x9c>
	case VARIABLE_LOCAL:
		break;
 8019074:	bf00      	nop
	}
	return get_local(var.id);
 8019076:	683b      	ldr	r3, [r7, #0]
 8019078:	1d1a      	adds	r2, r3, #4
 801907a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801907e:	4611      	mov	r1, r2
 8019080:	4618      	mov	r0, r3
 8019082:	f00a fd7d 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8019086:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801908a:	4619      	mov	r1, r3
 801908c:	6878      	ldr	r0, [r7, #4]
 801908e:	f7ff ffa9 	bl	8018fe4 <_ZN16Variable_handler9get_localENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019092:	4604      	mov	r4, r0
 8019094:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8019098:	4618      	mov	r0, r3
 801909a:	f00a fba2 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801909e:	4623      	mov	r3, r4
}
 80190a0:	4618      	mov	r0, r3
 80190a2:	3754      	adds	r7, #84	; 0x54
 80190a4:	46bd      	mov	sp, r7
 80190a6:	bd90      	pop	{r4, r7, pc}

080190a8 <_ZSt3getILj0EKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSC_>:
    get(std::pair<_Tp1, _Tp2>&& __in) noexcept
    { return __pair_get<_Int>::__move_get(std::move(__in)); }

  template<std::size_t _Int, class _Tp1, class _Tp2>
    constexpr const typename tuple_element<_Int, std::pair<_Tp1, _Tp2>>::type&
    get(const std::pair<_Tp1, _Tp2>& __in) noexcept
 80190a8:	b580      	push	{r7, lr}
 80190aa:	b082      	sub	sp, #8
 80190ac:	af00      	add	r7, sp, #0
 80190ae:	6078      	str	r0, [r7, #4]
    { return __pair_get<_Int>::__const_get(__in); }
 80190b0:	6878      	ldr	r0, [r7, #4]
 80190b2:	f000 fa07 	bl	80194c4 <_ZNSt10__pair_getILj0EE11__const_getIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERKT_RKSt4pairISA_T0_E>
 80190b6:	4603      	mov	r3, r0
 80190b8:	4618      	mov	r0, r3
 80190ba:	3708      	adds	r7, #8
 80190bc:	46bd      	mov	sp, r7
 80190be:	bd80      	pop	{r7, pc}

080190c0 <_ZSt3getILj1EKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSC_>:
    get(const std::pair<_Tp1, _Tp2>& __in) noexcept
 80190c0:	b580      	push	{r7, lr}
 80190c2:	b082      	sub	sp, #8
 80190c4:	af00      	add	r7, sp, #0
 80190c6:	6078      	str	r0, [r7, #4]
    { return __pair_get<_Int>::__const_get(__in); }
 80190c8:	6878      	ldr	r0, [r7, #4]
 80190ca:	f000 fa06 	bl	80194da <_ZNSt10__pair_getILj1EE11__const_getIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERKT0_RKSt4pairIT_SA_E>
 80190ce:	4603      	mov	r3, r0
 80190d0:	4618      	mov	r0, r3
 80190d2:	3708      	adds	r7, #8
 80190d4:	46bd      	mov	sp, r7
 80190d6:	bd80      	pop	{r7, pc}

080190d8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>:
    constexpr const _Tp& get(const variant<_Types...>& __v)
 80190d8:	b580      	push	{r7, lr}
 80190da:	b082      	sub	sp, #8
 80190dc:	af00      	add	r7, sp, #0
 80190de:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80190e0:	6878      	ldr	r0, [r7, #4]
 80190e2:	f000 fa13 	bl	801950c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>
 80190e6:	4603      	mov	r3, r0
    }
 80190e8:	4618      	mov	r0, r3
 80190ea:	3708      	adds	r7, #8
 80190ec:	46bd      	mov	sp, r7
 80190ee:	bd80      	pop	{r7, pc}

080190f0 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>:
    constexpr const _Tp& get(const variant<_Types...>& __v)
 80190f0:	b580      	push	{r7, lr}
 80190f2:	b082      	sub	sp, #8
 80190f4:	af00      	add	r7, sp, #0
 80190f6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80190f8:	6878      	ldr	r0, [r7, #4]
 80190fa:	f000 fa23 	bl	8019544 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>
 80190fe:	4603      	mov	r3, r0
    }
 8019100:	4618      	mov	r0, r3
 8019102:	3708      	adds	r7, #8
 8019104:	46bd      	mov	sp, r7
 8019106:	bd80      	pop	{r7, pc}

08019108 <_ZN16Variable_handler18transmit_variablesEv>:

void Variable_handler::transmit_variables()
{
 8019108:	b580      	push	{r7, lr}
 801910a:	b098      	sub	sp, #96	; 0x60
 801910c:	af00      	add	r7, sp, #0
 801910e:	6078      	str	r0, [r7, #4]
    std::string res = "";
 8019110:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8019114:	4618      	mov	r0, r3
 8019116:	f00a f8d3 	bl	80232c0 <_ZNSaIcEC1Ev>
 801911a:	f107 0234 	add.w	r2, r7, #52	; 0x34
 801911e:	f107 031c 	add.w	r3, r7, #28
 8019122:	4964      	ldr	r1, [pc, #400]	; (80192b4 <_ZN16Variable_handler18transmit_variablesEv+0x1ac>)
 8019124:	4618      	mov	r0, r3
 8019126:	f7e8 fe64 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801912a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801912e:	4618      	mov	r0, r3
 8019130:	f00a f8c7 	bl	80232c2 <_ZNSaIcED1Ev>
	for(auto const& [name, symbol] : Arg)
 8019134:	687b      	ldr	r3, [r7, #4]
 8019136:	3330      	adds	r3, #48	; 0x30
 8019138:	65fb      	str	r3, [r7, #92]	; 0x5c
 801913a:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 801913c:	f000 f982 	bl	8019444 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE5beginEv>
 8019140:	4603      	mov	r3, r0
 8019142:	61bb      	str	r3, [r7, #24]
 8019144:	6df8      	ldr	r0, [r7, #92]	; 0x5c
 8019146:	f000 f8f1 	bl	801932c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 801914a:	4603      	mov	r3, r0
 801914c:	617b      	str	r3, [r7, #20]
 801914e:	f107 0214 	add.w	r2, r7, #20
 8019152:	f107 0318 	add.w	r3, r7, #24
 8019156:	4611      	mov	r1, r2
 8019158:	4618      	mov	r0, r3
 801915a:	f000 f980 	bl	801945e <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 801915e:	4603      	mov	r3, r0
 8019160:	2b00      	cmp	r3, #0
 8019162:	f000 8085 	beq.w	8019270 <_ZN16Variable_handler18transmit_variablesEv+0x168>
 8019166:	f107 0318 	add.w	r3, r7, #24
 801916a:	4618      	mov	r0, r3
 801916c:	f000 f99c 	bl	80194a8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 8019170:	65b8      	str	r0, [r7, #88]	; 0x58
 8019172:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8019174:	f7ff ff98 	bl	80190a8 <_ZSt3getILj0EKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSC_>
 8019178:	6578      	str	r0, [r7, #84]	; 0x54
 801917a:	6db8      	ldr	r0, [r7, #88]	; 0x58
 801917c:	f7ff ffa0 	bl	80190c0 <_ZSt3getILj1EKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolERKNSt13tuple_elementIXT_ESt4pairIT0_T1_EE4typeERKSC_>
 8019180:	6538      	str	r0, [r7, #80]	; 0x50
	{
	    res += name;
 8019182:	f107 031c 	add.w	r3, r7, #28
 8019186:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8019188:	4618      	mov	r0, r3
 801918a:	f00a fca5 	bl	8023ad8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
	    res += "=";
 801918e:	f107 031c 	add.w	r3, r7, #28
 8019192:	4949      	ldr	r1, [pc, #292]	; (80192b8 <_ZN16Variable_handler18transmit_variablesEv+0x1b0>)
 8019194:	4618      	mov	r0, r3
 8019196:	f00a fcc9 	bl	8023b2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
	    switch(symbol.type)
 801919a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801919c:	781b      	ldrb	r3, [r3, #0]
 801919e:	2b04      	cmp	r3, #4
 80191a0:	d85a      	bhi.n	8019258 <_ZN16Variable_handler18transmit_variablesEv+0x150>
 80191a2:	a201      	add	r2, pc, #4	; (adr r2, 80191a8 <_ZN16Variable_handler18transmit_variablesEv+0xa0>)
 80191a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80191a8:	080191bd 	.word	0x080191bd
 80191ac:	080191e5 	.word	0x080191e5
 80191b0:	08019219 	.word	0x08019219
 80191b4:	0801923f 	.word	0x0801923f
 80191b8:	08019259 	.word	0x08019259
	    {
		case SYMBOL_INT:
			res += itoa(std::get<int>(symbol.value), nullptr, 10);
 80191bc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80191be:	3304      	adds	r3, #4
 80191c0:	4618      	mov	r0, r3
 80191c2:	f000 f996 	bl	80194f2 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>
 80191c6:	4603      	mov	r3, r0
 80191c8:	681b      	ldr	r3, [r3, #0]
 80191ca:	220a      	movs	r2, #10
 80191cc:	2100      	movs	r1, #0
 80191ce:	4618      	mov	r0, r3
 80191d0:	f00b fd0c 	bl	8024bec <itoa>
 80191d4:	4602      	mov	r2, r0
 80191d6:	f107 031c 	add.w	r3, r7, #28
 80191da:	4611      	mov	r1, r2
 80191dc:	4618      	mov	r0, r3
 80191de:	f00a fca5 	bl	8023b2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
			break;
 80191e2:	e039      	b.n	8019258 <_ZN16Variable_handler18transmit_variablesEv+0x150>
		case SYMBOL_FLOAT:
		{
			char temp[10];
			sprintf(temp, "%f", std::get<float>(symbol.value));
 80191e4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80191e6:	3304      	adds	r3, #4
 80191e8:	4618      	mov	r0, r3
 80191ea:	f7ff ff75 	bl	80190d8 <_ZSt3getIfJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>
 80191ee:	4603      	mov	r3, r0
 80191f0:	681b      	ldr	r3, [r3, #0]
 80191f2:	4618      	mov	r0, r3
 80191f4:	f7e7 f9c8 	bl	8000588 <__aeabi_f2d>
 80191f8:	4602      	mov	r2, r0
 80191fa:	460b      	mov	r3, r1
 80191fc:	f107 0008 	add.w	r0, r7, #8
 8019200:	492e      	ldr	r1, [pc, #184]	; (80192bc <_ZN16Variable_handler18transmit_variablesEv+0x1b4>)
 8019202:	f00c faab 	bl	802575c <siprintf>
			res += temp;
 8019206:	f107 0208 	add.w	r2, r7, #8
 801920a:	f107 031c 	add.w	r3, r7, #28
 801920e:	4611      	mov	r1, r2
 8019210:	4618      	mov	r0, r3
 8019212:	f00a fc8b 	bl	8023b2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
			break;
 8019216:	e01f      	b.n	8019258 <_ZN16Variable_handler18transmit_variablesEv+0x150>
		}
		case SYMBOL_BOOL:
			res += std::get<bool>(symbol.value) ? "true" : "false";
 8019218:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 801921a:	3304      	adds	r3, #4
 801921c:	4618      	mov	r0, r3
 801921e:	f7ff ff67 	bl	80190f0 <_ZSt3getIbJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>
 8019222:	4603      	mov	r3, r0
 8019224:	781b      	ldrb	r3, [r3, #0]
 8019226:	2b00      	cmp	r3, #0
 8019228:	d001      	beq.n	801922e <_ZN16Variable_handler18transmit_variablesEv+0x126>
 801922a:	4a25      	ldr	r2, [pc, #148]	; (80192c0 <_ZN16Variable_handler18transmit_variablesEv+0x1b8>)
 801922c:	e000      	b.n	8019230 <_ZN16Variable_handler18transmit_variablesEv+0x128>
 801922e:	4a25      	ldr	r2, [pc, #148]	; (80192c4 <_ZN16Variable_handler18transmit_variablesEv+0x1bc>)
 8019230:	f107 031c 	add.w	r3, r7, #28
 8019234:	4611      	mov	r1, r2
 8019236:	4618      	mov	r0, r3
 8019238:	f00a fc78 	bl	8023b2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
			break;
 801923c:	e00c      	b.n	8019258 <_ZN16Variable_handler18transmit_variablesEv+0x150>
		case SYMBOL_STRING:
			res += std::get<std::string>(symbol.value);
 801923e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8019240:	3304      	adds	r3, #4
 8019242:	4618      	mov	r0, r3
 8019244:	f000 f99a 	bl	801957c <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>
 8019248:	4602      	mov	r2, r0
 801924a:	f107 031c 	add.w	r3, r7, #28
 801924e:	4611      	mov	r1, r2
 8019250:	4618      	mov	r0, r3
 8019252:	f00a fc41 	bl	8023ad8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>
			break;
 8019256:	bf00      	nop
		case SYMBOL_CONTAINER:
			break;
	    }
	    res += ";";
 8019258:	f107 031c 	add.w	r3, r7, #28
 801925c:	491a      	ldr	r1, [pc, #104]	; (80192c8 <_ZN16Variable_handler18transmit_variablesEv+0x1c0>)
 801925e:	4618      	mov	r0, r3
 8019260:	f00a fc64 	bl	8023b2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>
	for(auto const& [name, symbol] : Arg)
 8019264:	f107 0318 	add.w	r3, r7, #24
 8019268:	4618      	mov	r0, r3
 801926a:	f000 f90c 	bl	8019486 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>
 801926e:	e76e      	b.n	801914e <_ZN16Variable_handler18transmit_variablesEv+0x46>
	}
	res += '\n';
 8019270:	f107 031c 	add.w	r3, r7, #28
 8019274:	210a      	movs	r1, #10
 8019276:	4618      	mov	r0, r3
 8019278:	f00a fb49 	bl	802390e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>
	Transmitter::send_string(res);
 801927c:	f107 021c 	add.w	r2, r7, #28
 8019280:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8019284:	4611      	mov	r1, r2
 8019286:	4618      	mov	r0, r3
 8019288:	f00a fc7a 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801928c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8019290:	4618      	mov	r0, r3
 8019292:	f7ff fb27 	bl	80188e4 <_ZN11Transmitter11send_stringENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8019296:	f107 0338 	add.w	r3, r7, #56	; 0x38
 801929a:	4618      	mov	r0, r3
 801929c:	f00a faa1 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    std::string res = "";
 80192a0:	f107 031c 	add.w	r3, r7, #28
 80192a4:	4618      	mov	r0, r3
 80192a6:	f00a fa9c 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 80192aa:	bf00      	nop
 80192ac:	3760      	adds	r7, #96	; 0x60
 80192ae:	46bd      	mov	sp, r7
 80192b0:	bd80      	pop	{r7, pc}
 80192b2:	bf00      	nop
 80192b4:	08029cac 	.word	0x08029cac
 80192b8:	08029cb0 	.word	0x08029cb0
 80192bc:	08029cb4 	.word	0x08029cb4
 80192c0:	08029cb8 	.word	0x08029cb8
 80192c4:	08029cc0 	.word	0x08029cc0
 80192c8:	08029cc8 	.word	0x08029cc8

080192cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 80192cc:	b580      	push	{r7, lr}
 80192ce:	b082      	sub	sp, #8
 80192d0:	af00      	add	r7, sp, #0
 80192d2:	6078      	str	r0, [r7, #4]
 80192d4:	6878      	ldr	r0, [r7, #4]
 80192d6:	f000 f95d 	bl	8019594 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 80192da:	687b      	ldr	r3, [r7, #4]
 80192dc:	4618      	mov	r0, r3
 80192de:	3708      	adds	r7, #8
 80192e0:	46bd      	mov	sp, r7
 80192e2:	bd80      	pop	{r7, pc}

080192e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80192e4:	b580      	push	{r7, lr}
 80192e6:	b082      	sub	sp, #8
 80192e8:	af00      	add	r7, sp, #0
 80192ea:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80192ec:	6878      	ldr	r0, [r7, #4]
 80192ee:	f000 f97c 	bl	80195ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 80192f2:	4603      	mov	r3, r0
 80192f4:	4619      	mov	r1, r3
 80192f6:	6878      	ldr	r0, [r7, #4]
 80192f8:	f000 f958 	bl	80195ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 80192fc:	687b      	ldr	r3, [r7, #4]
 80192fe:	4618      	mov	r0, r3
 8019300:	f7ff ffe4 	bl	80192cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 8019304:	687b      	ldr	r3, [r7, #4]
 8019306:	4618      	mov	r0, r3
 8019308:	3708      	adds	r7, #8
 801930a:	46bd      	mov	sp, r7
 801930c:	bd80      	pop	{r7, pc}

0801930e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x)
 801930e:	b580      	push	{r7, lr}
 8019310:	b082      	sub	sp, #8
 8019312:	af00      	add	r7, sp, #0
 8019314:	6078      	str	r0, [r7, #4]
 8019316:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8019318:	687b      	ldr	r3, [r7, #4]
 801931a:	6839      	ldr	r1, [r7, #0]
 801931c:	4618      	mov	r0, r3
 801931e:	f000 f970 	bl	8019602 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 8019322:	4603      	mov	r3, r0
 8019324:	4618      	mov	r0, r3
 8019326:	3708      	adds	r7, #8
 8019328:	46bd      	mov	sp, r7
 801932a:	bd80      	pop	{r7, pc}

0801932c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801932c:	b580      	push	{r7, lr}
 801932e:	b082      	sub	sp, #8
 8019330:	af00      	add	r7, sp, #0
 8019332:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8019334:	687b      	ldr	r3, [r7, #4]
 8019336:	4618      	mov	r0, r3
 8019338:	f000 f99f 	bl	801967a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 801933c:	4603      	mov	r3, r0
 801933e:	4618      	mov	r0, r3
 8019340:	3708      	adds	r7, #8
 8019342:	46bd      	mov	sp, r7
 8019344:	bd80      	pop	{r7, pc}

08019346 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8019346:	b480      	push	{r7}
 8019348:	b083      	sub	sp, #12
 801934a:	af00      	add	r7, sp, #0
 801934c:	6078      	str	r0, [r7, #4]
 801934e:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8019350:	687b      	ldr	r3, [r7, #4]
 8019352:	681a      	ldr	r2, [r3, #0]
 8019354:	683b      	ldr	r3, [r7, #0]
 8019356:	681b      	ldr	r3, [r3, #0]
 8019358:	429a      	cmp	r2, r3
 801935a:	bf0c      	ite	eq
 801935c:	2301      	moveq	r3, #1
 801935e:	2300      	movne	r3, #0
 8019360:	b2db      	uxtb	r3, r3
 8019362:	4618      	mov	r0, r3
 8019364:	370c      	adds	r7, #12
 8019366:	46bd      	mov	sp, r7
 8019368:	f85d 7b04 	ldr.w	r7, [sp], #4
 801936c:	4770      	bx	lr

0801936e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 801936e:	b580      	push	{r7, lr}
 8019370:	b082      	sub	sp, #8
 8019372:	af00      	add	r7, sp, #0
 8019374:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 8019376:	687b      	ldr	r3, [r7, #4]
 8019378:	681b      	ldr	r3, [r3, #0]
 801937a:	4618      	mov	r0, r3
 801937c:	f000 f98e 	bl	801969c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019380:	4603      	mov	r3, r0
 8019382:	4618      	mov	r0, r3
 8019384:	3708      	adds	r7, #8
 8019386:	46bd      	mov	sp, r7
 8019388:	bd80      	pop	{r7, pc}
	...

0801938c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>:
      operator[](const key_type& __k)
 801938c:	b590      	push	{r4, r7, lr}
 801938e:	b08b      	sub	sp, #44	; 0x2c
 8019390:	af02      	add	r7, sp, #8
 8019392:	6078      	str	r0, [r7, #4]
 8019394:	6039      	str	r1, [r7, #0]
	iterator __i = lower_bound(__k);
 8019396:	6839      	ldr	r1, [r7, #0]
 8019398:	6878      	ldr	r0, [r7, #4]
 801939a:	f000 f98d 	bl	80196b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>
 801939e:	4603      	mov	r3, r0
 80193a0:	60bb      	str	r3, [r7, #8]
	if (__i == end() || key_comp()(__k, (*__i).first))
 80193a2:	6878      	ldr	r0, [r7, #4]
 80193a4:	f7ff ffc2 	bl	801932c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 80193a8:	4603      	mov	r3, r0
 80193aa:	60fb      	str	r3, [r7, #12]
 80193ac:	f107 020c 	add.w	r2, r7, #12
 80193b0:	f107 0308 	add.w	r3, r7, #8
 80193b4:	4611      	mov	r1, r2
 80193b6:	4618      	mov	r0, r3
 80193b8:	f7ff ffc5 	bl	8019346 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 80193bc:	4603      	mov	r3, r0
 80193be:	2b00      	cmp	r3, #0
 80193c0:	d112      	bne.n	80193e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x5c>
 80193c2:	6878      	ldr	r0, [r7, #4]
 80193c4:	f000 f987 	bl	80196d6 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>
 80193c8:	f107 0308 	add.w	r3, r7, #8
 80193cc:	4618      	mov	r0, r3
 80193ce:	f000 f86b 	bl	80194a8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 80193d2:	4603      	mov	r3, r0
 80193d4:	461a      	mov	r2, r3
 80193d6:	f107 0310 	add.w	r3, r7, #16
 80193da:	6839      	ldr	r1, [r7, #0]
 80193dc:	4618      	mov	r0, r3
 80193de:	f7ed fb4e 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80193e2:	4603      	mov	r3, r0
 80193e4:	2b00      	cmp	r3, #0
 80193e6:	d001      	beq.n	80193ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x60>
 80193e8:	2301      	movs	r3, #1
 80193ea:	e000      	b.n	80193ee <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x62>
 80193ec:	2300      	movs	r3, #0
 80193ee:	2b00      	cmp	r3, #0
 80193f0:	d01b      	beq.n	801942a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x9e>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 80193f2:	687c      	ldr	r4, [r7, #4]
 80193f4:	f107 0208 	add.w	r2, r7, #8
 80193f8:	f107 0314 	add.w	r3, r7, #20
 80193fc:	4611      	mov	r1, r2
 80193fe:	4618      	mov	r0, r3
 8019400:	f000 f985 	bl	801970e <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 8019404:	f107 0318 	add.w	r3, r7, #24
 8019408:	6839      	ldr	r1, [r7, #0]
 801940a:	4618      	mov	r0, r3
 801940c:	f000 f970 	bl	80196f0 <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>
 8019410:	f107 0218 	add.w	r2, r7, #24
 8019414:	f107 031c 	add.w	r3, r7, #28
 8019418:	9300      	str	r3, [sp, #0]
 801941a:	4613      	mov	r3, r2
 801941c:	4a08      	ldr	r2, [pc, #32]	; (8019440 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0xb4>)
 801941e:	6979      	ldr	r1, [r7, #20]
 8019420:	4620      	mov	r0, r4
 8019422:	f000 f984 	bl	801972e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>
 8019426:	4603      	mov	r3, r0
 8019428:	60bb      	str	r3, [r7, #8]
	return (*__i).second;
 801942a:	f107 0308 	add.w	r3, r7, #8
 801942e:	4618      	mov	r0, r3
 8019430:	f000 f83a 	bl	80194a8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 8019434:	4603      	mov	r3, r0
 8019436:	3318      	adds	r3, #24
      }
 8019438:	4618      	mov	r0, r3
 801943a:	3724      	adds	r7, #36	; 0x24
 801943c:	46bd      	mov	sp, r7
 801943e:	bd90      	pop	{r4, r7, pc}
 8019440:	0802a05c 	.word	0x0802a05c

08019444 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8019444:	b580      	push	{r7, lr}
 8019446:	b082      	sub	sp, #8
 8019448:	af00      	add	r7, sp, #0
 801944a:	6078      	str	r0, [r7, #4]
      { return _M_t.begin(); }
 801944c:	687b      	ldr	r3, [r7, #4]
 801944e:	4618      	mov	r0, r3
 8019450:	f000 f9ab 	bl	80197aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 8019454:	4603      	mov	r3, r0
 8019456:	4618      	mov	r0, r3
 8019458:	3708      	adds	r7, #8
 801945a:	46bd      	mov	sp, r7
 801945c:	bd80      	pop	{r7, pc}

0801945e <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 801945e:	b480      	push	{r7}
 8019460:	b083      	sub	sp, #12
 8019462:	af00      	add	r7, sp, #0
 8019464:	6078      	str	r0, [r7, #4]
 8019466:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 8019468:	687b      	ldr	r3, [r7, #4]
 801946a:	681a      	ldr	r2, [r3, #0]
 801946c:	683b      	ldr	r3, [r7, #0]
 801946e:	681b      	ldr	r3, [r3, #0]
 8019470:	429a      	cmp	r2, r3
 8019472:	bf14      	ite	ne
 8019474:	2301      	movne	r3, #1
 8019476:	2300      	moveq	r3, #0
 8019478:	b2db      	uxtb	r3, r3
 801947a:	4618      	mov	r0, r3
 801947c:	370c      	adds	r7, #12
 801947e:	46bd      	mov	sp, r7
 8019480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019484:	4770      	bx	lr

08019486 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8019486:	b580      	push	{r7, lr}
 8019488:	b082      	sub	sp, #8
 801948a:	af00      	add	r7, sp, #0
 801948c:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 801948e:	687b      	ldr	r3, [r7, #4]
 8019490:	681b      	ldr	r3, [r3, #0]
 8019492:	4618      	mov	r0, r3
 8019494:	f009 ff57 	bl	8023346 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8019498:	4602      	mov	r2, r0
 801949a:	687b      	ldr	r3, [r7, #4]
 801949c:	601a      	str	r2, [r3, #0]
	return *this;
 801949e:	687b      	ldr	r3, [r7, #4]
      }
 80194a0:	4618      	mov	r0, r3
 80194a2:	3708      	adds	r7, #8
 80194a4:	46bd      	mov	sp, r7
 80194a6:	bd80      	pop	{r7, pc}

080194a8 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 80194a8:	b580      	push	{r7, lr}
 80194aa:	b082      	sub	sp, #8
 80194ac:	af00      	add	r7, sp, #0
 80194ae:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 80194b0:	687b      	ldr	r3, [r7, #4]
 80194b2:	681b      	ldr	r3, [r3, #0]
 80194b4:	4618      	mov	r0, r3
 80194b6:	f000 f8f1 	bl	801969c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 80194ba:	4603      	mov	r3, r0
 80194bc:	4618      	mov	r0, r3
 80194be:	3708      	adds	r7, #8
 80194c0:	46bd      	mov	sp, r7
 80194c2:	bd80      	pop	{r7, pc}

080194c4 <_ZNSt10__pair_getILj0EE11__const_getIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERKT_RKSt4pairISA_T0_E>:
        __const_get(const std::pair<_Tp1, _Tp2>& __pair) noexcept
 80194c4:	b480      	push	{r7}
 80194c6:	b083      	sub	sp, #12
 80194c8:	af00      	add	r7, sp, #0
 80194ca:	6078      	str	r0, [r7, #4]
        { return __pair.first; }
 80194cc:	687b      	ldr	r3, [r7, #4]
 80194ce:	4618      	mov	r0, r3
 80194d0:	370c      	adds	r7, #12
 80194d2:	46bd      	mov	sp, r7
 80194d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80194d8:	4770      	bx	lr

080194da <_ZNSt10__pair_getILj1EE11__const_getIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERKT0_RKSt4pairIT_SA_E>:
        __const_get(const std::pair<_Tp1, _Tp2>& __pair) noexcept
 80194da:	b480      	push	{r7}
 80194dc:	b083      	sub	sp, #12
 80194de:	af00      	add	r7, sp, #0
 80194e0:	6078      	str	r0, [r7, #4]
        { return __pair.second; }
 80194e2:	687b      	ldr	r3, [r7, #4]
 80194e4:	3318      	adds	r3, #24
 80194e6:	4618      	mov	r0, r3
 80194e8:	370c      	adds	r7, #12
 80194ea:	46bd      	mov	sp, r7
 80194ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80194f0:	4770      	bx	lr

080194f2 <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>:
    constexpr const _Tp& get(const variant<_Types...>& __v)
 80194f2:	b580      	push	{r7, lr}
 80194f4:	b082      	sub	sp, #8
 80194f6:	af00      	add	r7, sp, #0
 80194f8:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80194fa:	6878      	ldr	r0, [r7, #4]
 80194fc:	f000 f966 	bl	80197cc <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>
 8019500:	4603      	mov	r3, r0
    }
 8019502:	4618      	mov	r0, r3
 8019504:	3708      	adds	r7, #8
 8019506:	46bd      	mov	sp, r7
 8019508:	bd80      	pop	{r7, pc}
	...

0801950c <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>:
    get(const variant<_Types...>& __v)
 801950c:	b580      	push	{r7, lr}
 801950e:	b082      	sub	sp, #8
 8019510:	af00      	add	r7, sp, #0
 8019512:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8019514:	6878      	ldr	r0, [r7, #4]
 8019516:	f7e8 faff 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 801951a:	4603      	mov	r3, r0
 801951c:	2b01      	cmp	r3, #1
 801951e:	bf14      	ite	ne
 8019520:	2301      	movne	r3, #1
 8019522:	2300      	moveq	r3, #0
 8019524:	b2db      	uxtb	r3, r3
 8019526:	2b00      	cmp	r3, #0
 8019528:	d002      	beq.n	8019530 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801952a:	4805      	ldr	r0, [pc, #20]	; (8019540 <_ZSt3getILj1EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x34>)
 801952c:	f7e7 fda1 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8019530:	6878      	ldr	r0, [r7, #4]
 8019532:	f7e9 fa3f 	bl	80029b4 <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 8019536:	4603      	mov	r3, r0
    }
 8019538:	4618      	mov	r0, r3
 801953a:	3708      	adds	r7, #8
 801953c:	46bd      	mov	sp, r7
 801953e:	bd80      	pop	{r7, pc}
 8019540:	08029ccc 	.word	0x08029ccc

08019544 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>:
    get(const variant<_Types...>& __v)
 8019544:	b580      	push	{r7, lr}
 8019546:	b082      	sub	sp, #8
 8019548:	af00      	add	r7, sp, #0
 801954a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 801954c:	6878      	ldr	r0, [r7, #4]
 801954e:	f7e8 fae3 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8019552:	4603      	mov	r3, r0
 8019554:	2b02      	cmp	r3, #2
 8019556:	bf14      	ite	ne
 8019558:	2301      	movne	r3, #1
 801955a:	2300      	moveq	r3, #0
 801955c:	b2db      	uxtb	r3, r3
 801955e:	2b00      	cmp	r3, #0
 8019560:	d002      	beq.n	8019568 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8019562:	4805      	ldr	r0, [pc, #20]	; (8019578 <_ZSt3getILj2EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x34>)
 8019564:	f7e7 fd85 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8019568:	6878      	ldr	r0, [r7, #4]
 801956a:	f7e9 fac1 	bl	8002af0 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 801956e:	4603      	mov	r3, r0
    }
 8019570:	4618      	mov	r0, r3
 8019572:	3708      	adds	r7, #8
 8019574:	46bd      	mov	sp, r7
 8019576:	bd80      	pop	{r7, pc}
 8019578:	08029ccc 	.word	0x08029ccc

0801957c <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJifbS5_St6vectorI6SymbolSaIS7_EEEERKT_RKSt7variantIJDpT0_EE>:
    constexpr const _Tp& get(const variant<_Types...>& __v)
 801957c:	b580      	push	{r7, lr}
 801957e:	b082      	sub	sp, #8
 8019580:	af00      	add	r7, sp, #0
 8019582:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8019584:	6878      	ldr	r0, [r7, #4]
 8019586:	f000 f93d 	bl	8019804 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>
 801958a:	4603      	mov	r3, r0
    }
 801958c:	4618      	mov	r0, r3
 801958e:	3708      	adds	r7, #8
 8019590:	46bd      	mov	sp, r7
 8019592:	bd80      	pop	{r7, pc}

08019594 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8019594:	b580      	push	{r7, lr}
 8019596:	b082      	sub	sp, #8
 8019598:	af00      	add	r7, sp, #0
 801959a:	6078      	str	r0, [r7, #4]
 801959c:	6878      	ldr	r0, [r7, #4]
 801959e:	f000 f94d 	bl	801983c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 80195a2:	687b      	ldr	r3, [r7, #4]
 80195a4:	4618      	mov	r0, r3
 80195a6:	3708      	adds	r7, #8
 80195a8:	46bd      	mov	sp, r7
 80195aa:	bd80      	pop	{r7, pc}

080195ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80195ac:	b580      	push	{r7, lr}
 80195ae:	b084      	sub	sp, #16
 80195b0:	af00      	add	r7, sp, #0
 80195b2:	6078      	str	r0, [r7, #4]
 80195b4:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 80195b6:	683b      	ldr	r3, [r7, #0]
 80195b8:	2b00      	cmp	r3, #0
 80195ba:	d012      	beq.n	80195e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 80195bc:	6838      	ldr	r0, [r7, #0]
 80195be:	f000 f948 	bl	8019852 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80195c2:	4603      	mov	r3, r0
 80195c4:	4619      	mov	r1, r3
 80195c6:	6878      	ldr	r0, [r7, #4]
 80195c8:	f7ff fff0 	bl	80195ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 80195cc:	6838      	ldr	r0, [r7, #0]
 80195ce:	f000 f94c 	bl	801986a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 80195d2:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 80195d4:	6839      	ldr	r1, [r7, #0]
 80195d6:	6878      	ldr	r0, [r7, #4]
 80195d8:	f000 f953 	bl	8019882 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 80195dc:	68fb      	ldr	r3, [r7, #12]
 80195de:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80195e0:	e7e9      	b.n	80195b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 80195e2:	bf00      	nop
 80195e4:	3710      	adds	r7, #16
 80195e6:	46bd      	mov	sp, r7
 80195e8:	bd80      	pop	{r7, pc}

080195ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 80195ea:	b480      	push	{r7}
 80195ec:	b083      	sub	sp, #12
 80195ee:	af00      	add	r7, sp, #0
 80195f0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 80195f2:	687b      	ldr	r3, [r7, #4]
 80195f4:	689b      	ldr	r3, [r3, #8]
 80195f6:	4618      	mov	r0, r3
 80195f8:	370c      	adds	r7, #12
 80195fa:	46bd      	mov	sp, r7
 80195fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019600:	4770      	bx	lr

08019602 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019602:	b590      	push	{r4, r7, lr}
 8019604:	b085      	sub	sp, #20
 8019606:	af00      	add	r7, sp, #0
 8019608:	6078      	str	r0, [r7, #4]
 801960a:	6039      	str	r1, [r7, #0]
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 801960c:	6878      	ldr	r0, [r7, #4]
 801960e:	f7ff ffec 	bl	80195ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8019612:	4604      	mov	r4, r0
 8019614:	6878      	ldr	r0, [r7, #4]
 8019616:	f000 f945 	bl	80198a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801961a:	4602      	mov	r2, r0
 801961c:	683b      	ldr	r3, [r7, #0]
 801961e:	4621      	mov	r1, r4
 8019620:	6878      	ldr	r0, [r7, #4]
 8019622:	f000 f94b 	bl	80198bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 8019626:	4603      	mov	r3, r0
 8019628:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 801962a:	6878      	ldr	r0, [r7, #4]
 801962c:	f000 f825 	bl	801967a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8019630:	4603      	mov	r3, r0
 8019632:	60fb      	str	r3, [r7, #12]
 8019634:	f107 020c 	add.w	r2, r7, #12
 8019638:	f107 0308 	add.w	r3, r7, #8
 801963c:	4611      	mov	r1, r2
 801963e:	4618      	mov	r0, r3
 8019640:	f7ff fe81 	bl	8019346 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8019644:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 8019646:	2b00      	cmp	r3, #0
 8019648:	d10d      	bne.n	8019666 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 801964a:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 801964c:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 801964e:	4618      	mov	r0, r3
 8019650:	f000 f965 	bl	801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019654:	4603      	mov	r3, r0
 8019656:	461a      	mov	r2, r3
 8019658:	6839      	ldr	r1, [r7, #0]
 801965a:	4620      	mov	r0, r4
 801965c:	f7ed fa0f 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019660:	4603      	mov	r3, r0
 8019662:	2b00      	cmp	r3, #0
 8019664:	d004      	beq.n	8019670 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8019666:	6878      	ldr	r0, [r7, #4]
 8019668:	f000 f807 	bl	801967a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 801966c:	4603      	mov	r3, r0
 801966e:	e000      	b.n	8019672 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 8019670:	68bb      	ldr	r3, [r7, #8]
    }
 8019672:	4618      	mov	r0, r3
 8019674:	3714      	adds	r7, #20
 8019676:	46bd      	mov	sp, r7
 8019678:	bd90      	pop	{r4, r7, pc}

0801967a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801967a:	b580      	push	{r7, lr}
 801967c:	b084      	sub	sp, #16
 801967e:	af00      	add	r7, sp, #0
 8019680:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8019682:	687b      	ldr	r3, [r7, #4]
 8019684:	1d1a      	adds	r2, r3, #4
 8019686:	f107 030c 	add.w	r3, r7, #12
 801968a:	4611      	mov	r1, r2
 801968c:	4618      	mov	r0, r3
 801968e:	f000 f952 	bl	8019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019692:	68fb      	ldr	r3, [r7, #12]
 8019694:	4618      	mov	r0, r3
 8019696:	3710      	adds	r7, #16
 8019698:	46bd      	mov	sp, r7
 801969a:	bd80      	pop	{r7, pc}

0801969c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr()
 801969c:	b580      	push	{r7, lr}
 801969e:	b082      	sub	sp, #8
 80196a0:	af00      	add	r7, sp, #0
 80196a2:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80196a4:	687b      	ldr	r3, [r7, #4]
 80196a6:	3310      	adds	r3, #16
 80196a8:	4618      	mov	r0, r3
 80196aa:	f000 f953 	bl	8019954 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 80196ae:	4603      	mov	r3, r0
 80196b0:	4618      	mov	r0, r3
 80196b2:	3708      	adds	r7, #8
 80196b4:	46bd      	mov	sp, r7
 80196b6:	bd80      	pop	{r7, pc}

080196b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
 80196b8:	b580      	push	{r7, lr}
 80196ba:	b082      	sub	sp, #8
 80196bc:	af00      	add	r7, sp, #0
 80196be:	6078      	str	r0, [r7, #4]
 80196c0:	6039      	str	r1, [r7, #0]
      { return _M_t.lower_bound(__x); }
 80196c2:	687b      	ldr	r3, [r7, #4]
 80196c4:	6839      	ldr	r1, [r7, #0]
 80196c6:	4618      	mov	r0, r3
 80196c8:	f000 f950 	bl	801996c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>
 80196cc:	4603      	mov	r3, r0
 80196ce:	4618      	mov	r0, r3
 80196d0:	3708      	adds	r7, #8
 80196d2:	46bd      	mov	sp, r7
 80196d4:	bd80      	pop	{r7, pc}

080196d6 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>:
      key_comp() const
 80196d6:	b590      	push	{r4, r7, lr}
 80196d8:	b083      	sub	sp, #12
 80196da:	af00      	add	r7, sp, #0
 80196dc:	6078      	str	r0, [r7, #4]
      { return _M_t.key_comp(); }
 80196de:	687b      	ldr	r3, [r7, #4]
 80196e0:	4618      	mov	r0, r3
 80196e2:	f000 f95a 	bl	801999a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>
 80196e6:	4623      	mov	r3, r4
 80196e8:	4618      	mov	r0, r3
 80196ea:	370c      	adds	r7, #12
 80196ec:	46bd      	mov	sp, r7
 80196ee:	bd90      	pop	{r4, r7, pc}

080196f0 <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>:
                   _ConstructibleTuple<_Elements...>()
                 && _TCC<_Dummy>::template
                   _ImplicitlyConvertibleTuple<_Elements...>()
                 && (sizeof...(_Elements) >= 1),
               bool>::type=true>
        constexpr tuple(const _Elements&... __elements)
 80196f0:	b580      	push	{r7, lr}
 80196f2:	b082      	sub	sp, #8
 80196f4:	af00      	add	r7, sp, #0
 80196f6:	6078      	str	r0, [r7, #4]
 80196f8:	6039      	str	r1, [r7, #0]
      : _Inherited(__elements...) { }
 80196fa:	687b      	ldr	r3, [r7, #4]
 80196fc:	6839      	ldr	r1, [r7, #0]
 80196fe:	4618      	mov	r0, r3
 8019700:	f000 f955 	bl	80199ae <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>
 8019704:	687b      	ldr	r3, [r7, #4]
 8019706:	4618      	mov	r0, r3
 8019708:	3708      	adds	r7, #8
 801970a:	46bd      	mov	sp, r7
 801970c:	bd80      	pop	{r7, pc}

0801970e <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 801970e:	b480      	push	{r7}
 8019710:	b083      	sub	sp, #12
 8019712:	af00      	add	r7, sp, #0
 8019714:	6078      	str	r0, [r7, #4]
 8019716:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8019718:	683b      	ldr	r3, [r7, #0]
 801971a:	681a      	ldr	r2, [r3, #0]
 801971c:	687b      	ldr	r3, [r7, #4]
 801971e:	601a      	str	r2, [r3, #0]
 8019720:	687b      	ldr	r3, [r7, #4]
 8019722:	4618      	mov	r0, r3
 8019724:	370c      	adds	r7, #12
 8019726:	46bd      	mov	sp, r7
 8019728:	f85d 7b04 	ldr.w	r7, [sp], #4
 801972c:	4770      	bx	lr

0801972e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801972e:	b5b0      	push	{r4, r5, r7, lr}
 8019730:	b088      	sub	sp, #32
 8019732:	af00      	add	r7, sp, #0
 8019734:	60f8      	str	r0, [r7, #12]
 8019736:	60b9      	str	r1, [r7, #8]
 8019738:	607a      	str	r2, [r7, #4]
 801973a:	603b      	str	r3, [r7, #0]
	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
 801973c:	6878      	ldr	r0, [r7, #4]
 801973e:	f000 f945 	bl	80199cc <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019742:	4604      	mov	r4, r0
 8019744:	6838      	ldr	r0, [r7, #0]
 8019746:	f000 f94c 	bl	80199e2 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801974a:	4605      	mov	r5, r0
 801974c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801974e:	f000 f953 	bl	80199f8 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019752:	4603      	mov	r3, r0
 8019754:	462a      	mov	r2, r5
 8019756:	4621      	mov	r1, r4
 8019758:	68f8      	ldr	r0, [r7, #12]
 801975a:	f000 f958 	bl	8019a0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 801975e:	61f8      	str	r0, [r7, #28]
	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
 8019760:	69f8      	ldr	r0, [r7, #28]
 8019762:	f000 fa9a 	bl	8019c9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019766:	4603      	mov	r3, r0
 8019768:	f107 0010 	add.w	r0, r7, #16
 801976c:	68ba      	ldr	r2, [r7, #8]
 801976e:	68f9      	ldr	r1, [r7, #12]
 8019770:	f000 f970 	bl	8019a54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
	    if (__res.second)
 8019774:	697b      	ldr	r3, [r7, #20]
 8019776:	2b00      	cmp	r3, #0
 8019778:	d007      	beq.n	801978a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x5c>
	      return _M_insert_node(__res.first, __res.second, __z);
 801977a:	6939      	ldr	r1, [r7, #16]
 801977c:	697a      	ldr	r2, [r7, #20]
 801977e:	69fb      	ldr	r3, [r7, #28]
 8019780:	68f8      	ldr	r0, [r7, #12]
 8019782:	f000 fa9d 	bl	8019cc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>
 8019786:	4603      	mov	r3, r0
 8019788:	e00b      	b.n	80197a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x74>
	    _M_drop_node(__z);
 801978a:	69f9      	ldr	r1, [r7, #28]
 801978c:	68f8      	ldr	r0, [r7, #12]
 801978e:	f000 f878 	bl	8019882 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	    return iterator(__res.first);
 8019792:	693a      	ldr	r2, [r7, #16]
 8019794:	f107 0318 	add.w	r3, r7, #24
 8019798:	4611      	mov	r1, r2
 801979a:	4618      	mov	r0, r3
 801979c:	f000 f8cb 	bl	8019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 80197a0:	69bb      	ldr	r3, [r7, #24]
      }
 80197a2:	4618      	mov	r0, r3
 80197a4:	3720      	adds	r7, #32
 80197a6:	46bd      	mov	sp, r7
 80197a8:	bdb0      	pop	{r4, r5, r7, pc}

080197aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80197aa:	b580      	push	{r7, lr}
 80197ac:	b084      	sub	sp, #16
 80197ae:	af00      	add	r7, sp, #0
 80197b0:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80197b2:	687b      	ldr	r3, [r7, #4]
 80197b4:	68da      	ldr	r2, [r3, #12]
 80197b6:	f107 030c 	add.w	r3, r7, #12
 80197ba:	4611      	mov	r1, r2
 80197bc:	4618      	mov	r0, r3
 80197be:	f000 f8ba 	bl	8019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 80197c2:	68fb      	ldr	r3, [r7, #12]
 80197c4:	4618      	mov	r0, r3
 80197c6:	3710      	adds	r7, #16
 80197c8:	46bd      	mov	sp, r7
 80197ca:	bd80      	pop	{r7, pc}

080197cc <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>:
    get(const variant<_Types...>& __v)
 80197cc:	b580      	push	{r7, lr}
 80197ce:	b082      	sub	sp, #8
 80197d0:	af00      	add	r7, sp, #0
 80197d2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80197d4:	6878      	ldr	r0, [r7, #4]
 80197d6:	f7e8 f99f 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 80197da:	4603      	mov	r3, r0
 80197dc:	2b00      	cmp	r3, #0
 80197de:	bf14      	ite	ne
 80197e0:	2301      	movne	r3, #1
 80197e2:	2300      	moveq	r3, #0
 80197e4:	b2db      	uxtb	r3, r3
 80197e6:	2b00      	cmp	r3, #0
 80197e8:	d002      	beq.n	80197f0 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80197ea:	4805      	ldr	r0, [pc, #20]	; (8019800 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x34>)
 80197ec:	f7e7 fc41 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80197f0:	6878      	ldr	r0, [r7, #4]
 80197f2:	f7e9 f853 	bl	800289c <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 80197f6:	4603      	mov	r3, r0
    }
 80197f8:	4618      	mov	r0, r3
 80197fa:	3708      	adds	r7, #8
 80197fc:	46bd      	mov	sp, r7
 80197fe:	bd80      	pop	{r7, pc}
 8019800:	08029ccc 	.word	0x08029ccc

08019804 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_>:
    get(const variant<_Types...>& __v)
 8019804:	b580      	push	{r7, lr}
 8019806:	b082      	sub	sp, #8
 8019808:	af00      	add	r7, sp, #0
 801980a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 801980c:	6878      	ldr	r0, [r7, #4]
 801980e:	f7e8 f983 	bl	8001b18 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEE5indexEv>
 8019812:	4603      	mov	r3, r0
 8019814:	2b03      	cmp	r3, #3
 8019816:	bf14      	ite	ne
 8019818:	2301      	movne	r3, #1
 801981a:	2300      	moveq	r3, #0
 801981c:	b2db      	uxtb	r3, r3
 801981e:	2b00      	cmp	r3, #0
 8019820:	d002      	beq.n	8019828 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8019822:	4805      	ldr	r0, [pc, #20]	; (8019838 <_ZSt3getILj3EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaIS7_EEEERKNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERKSE_+0x34>)
 8019824:	f7e7 fc25 	bl	8001072 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8019828:	6878      	ldr	r0, [r7, #4]
 801982a:	f7e9 fa11 	bl	8002c50 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorI6SymbolSaISA_EEEEEEDcOT0_>
 801982e:	4603      	mov	r3, r0
    }
 8019830:	4618      	mov	r0, r3
 8019832:	3708      	adds	r7, #8
 8019834:	46bd      	mov	sp, r7
 8019836:	bd80      	pop	{r7, pc}
 8019838:	08029ccc 	.word	0x08029ccc

0801983c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801983c:	b480      	push	{r7}
 801983e:	b083      	sub	sp, #12
 8019840:	af00      	add	r7, sp, #0
 8019842:	6078      	str	r0, [r7, #4]
 8019844:	687b      	ldr	r3, [r7, #4]
 8019846:	4618      	mov	r0, r3
 8019848:	370c      	adds	r7, #12
 801984a:	46bd      	mov	sp, r7
 801984c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019850:	4770      	bx	lr

08019852 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8019852:	b480      	push	{r7}
 8019854:	b083      	sub	sp, #12
 8019856:	af00      	add	r7, sp, #0
 8019858:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 801985a:	687b      	ldr	r3, [r7, #4]
 801985c:	68db      	ldr	r3, [r3, #12]
 801985e:	4618      	mov	r0, r3
 8019860:	370c      	adds	r7, #12
 8019862:	46bd      	mov	sp, r7
 8019864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019868:	4770      	bx	lr

0801986a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 801986a:	b480      	push	{r7}
 801986c:	b083      	sub	sp, #12
 801986e:	af00      	add	r7, sp, #0
 8019870:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8019872:	687b      	ldr	r3, [r7, #4]
 8019874:	689b      	ldr	r3, [r3, #8]
 8019876:	4618      	mov	r0, r3
 8019878:	370c      	adds	r7, #12
 801987a:	46bd      	mov	sp, r7
 801987c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019880:	4770      	bx	lr

08019882 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019882:	b580      	push	{r7, lr}
 8019884:	b082      	sub	sp, #8
 8019886:	af00      	add	r7, sp, #0
 8019888:	6078      	str	r0, [r7, #4]
 801988a:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 801988c:	6839      	ldr	r1, [r7, #0]
 801988e:	6878      	ldr	r0, [r7, #4]
 8019890:	f000 fa53 	bl	8019d3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 8019894:	6839      	ldr	r1, [r7, #0]
 8019896:	6878      	ldr	r0, [r7, #4]
 8019898:	f000 fa64 	bl	8019d64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 801989c:	bf00      	nop
 801989e:	3708      	adds	r7, #8
 80198a0:	46bd      	mov	sp, r7
 80198a2:	bd80      	pop	{r7, pc}

080198a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 80198a4:	b480      	push	{r7}
 80198a6:	b083      	sub	sp, #12
 80198a8:	af00      	add	r7, sp, #0
 80198aa:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 80198ac:	687b      	ldr	r3, [r7, #4]
 80198ae:	3304      	adds	r3, #4
 80198b0:	4618      	mov	r0, r3
 80198b2:	370c      	adds	r7, #12
 80198b4:	46bd      	mov	sp, r7
 80198b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80198ba:	4770      	bx	lr

080198bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80198bc:	b590      	push	{r4, r7, lr}
 80198be:	b087      	sub	sp, #28
 80198c0:	af00      	add	r7, sp, #0
 80198c2:	60f8      	str	r0, [r7, #12]
 80198c4:	60b9      	str	r1, [r7, #8]
 80198c6:	607a      	str	r2, [r7, #4]
 80198c8:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80198ca:	68bb      	ldr	r3, [r7, #8]
 80198cc:	2b00      	cmp	r3, #0
 80198ce:	d01b      	beq.n	8019908 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 80198d0:	68fc      	ldr	r4, [r7, #12]
 80198d2:	68b8      	ldr	r0, [r7, #8]
 80198d4:	f000 f9e1 	bl	8019c9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 80198d8:	4603      	mov	r3, r0
 80198da:	683a      	ldr	r2, [r7, #0]
 80198dc:	4619      	mov	r1, r3
 80198de:	4620      	mov	r0, r4
 80198e0:	f7ed f8cd 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80198e4:	4603      	mov	r3, r0
 80198e6:	f083 0301 	eor.w	r3, r3, #1
 80198ea:	b2db      	uxtb	r3, r3
 80198ec:	2b00      	cmp	r3, #0
 80198ee:	d006      	beq.n	80198fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 80198f0:	68bb      	ldr	r3, [r7, #8]
 80198f2:	607b      	str	r3, [r7, #4]
 80198f4:	68b8      	ldr	r0, [r7, #8]
 80198f6:	f7ff ffb8 	bl	801986a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 80198fa:	60b8      	str	r0, [r7, #8]
 80198fc:	e7e5      	b.n	80198ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 80198fe:	68b8      	ldr	r0, [r7, #8]
 8019900:	f7ff ffa7 	bl	8019852 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019904:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8019906:	e7e0      	b.n	80198ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 8019908:	f107 0314 	add.w	r3, r7, #20
 801990c:	6879      	ldr	r1, [r7, #4]
 801990e:	4618      	mov	r0, r3
 8019910:	f000 f811 	bl	8019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019914:	697b      	ldr	r3, [r7, #20]
    }
 8019916:	4618      	mov	r0, r3
 8019918:	371c      	adds	r7, #28
 801991a:	46bd      	mov	sp, r7
 801991c:	bd90      	pop	{r4, r7, pc}

0801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 801991e:	b580      	push	{r7, lr}
 8019920:	b082      	sub	sp, #8
 8019922:	af00      	add	r7, sp, #0
 8019924:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8019926:	6878      	ldr	r0, [r7, #4]
 8019928:	f000 f9b7 	bl	8019c9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 801992c:	4603      	mov	r3, r0
 801992e:	4618      	mov	r0, r3
 8019930:	3708      	adds	r7, #8
 8019932:	46bd      	mov	sp, r7
 8019934:	bd80      	pop	{r7, pc}

08019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8019936:	b480      	push	{r7}
 8019938:	b083      	sub	sp, #12
 801993a:	af00      	add	r7, sp, #0
 801993c:	6078      	str	r0, [r7, #4]
 801993e:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8019940:	687b      	ldr	r3, [r7, #4]
 8019942:	683a      	ldr	r2, [r7, #0]
 8019944:	601a      	str	r2, [r3, #0]
 8019946:	687b      	ldr	r3, [r7, #4]
 8019948:	4618      	mov	r0, r3
 801994a:	370c      	adds	r7, #12
 801994c:	46bd      	mov	sp, r7
 801994e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019952:	4770      	bx	lr

08019954 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() noexcept
 8019954:	b580      	push	{r7, lr}
 8019956:	b082      	sub	sp, #8
 8019958:	af00      	add	r7, sp, #0
 801995a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 801995c:	6878      	ldr	r0, [r7, #4]
 801995e:	f000 fa13 	bl	8019d88 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 8019962:	4603      	mov	r3, r0
 8019964:	4618      	mov	r0, r3
 8019966:	3708      	adds	r7, #8
 8019968:	46bd      	mov	sp, r7
 801996a:	bd80      	pop	{r7, pc}

0801996c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
 801996c:	b590      	push	{r4, r7, lr}
 801996e:	b083      	sub	sp, #12
 8019970:	af00      	add	r7, sp, #0
 8019972:	6078      	str	r0, [r7, #4]
 8019974:	6039      	str	r1, [r7, #0]
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 8019976:	6878      	ldr	r0, [r7, #4]
 8019978:	f7ff fe37 	bl	80195ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 801997c:	4604      	mov	r4, r0
 801997e:	6878      	ldr	r0, [r7, #4]
 8019980:	f7ff ff90 	bl	80198a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019984:	4602      	mov	r2, r0
 8019986:	683b      	ldr	r3, [r7, #0]
 8019988:	4621      	mov	r1, r4
 801998a:	6878      	ldr	r0, [r7, #4]
 801998c:	f7ff ff96 	bl	80198bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 8019990:	4603      	mov	r3, r0
 8019992:	4618      	mov	r0, r3
 8019994:	370c      	adds	r7, #12
 8019996:	46bd      	mov	sp, r7
 8019998:	bd90      	pop	{r4, r7, pc}

0801999a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>:
      key_comp() const
 801999a:	b480      	push	{r7}
 801999c:	b083      	sub	sp, #12
 801999e:	af00      	add	r7, sp, #0
 80199a0:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_key_compare; }
 80199a2:	4618      	mov	r0, r3
 80199a4:	370c      	adds	r7, #12
 80199a6:	46bd      	mov	sp, r7
 80199a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80199ac:	4770      	bx	lr

080199ae <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>:
      constexpr _Tuple_impl(const _Head& __head)
 80199ae:	b580      	push	{r7, lr}
 80199b0:	b082      	sub	sp, #8
 80199b2:	af00      	add	r7, sp, #0
 80199b4:	6078      	str	r0, [r7, #4]
 80199b6:	6039      	str	r1, [r7, #0]
      : _Base(__head) { }
 80199b8:	687b      	ldr	r3, [r7, #4]
 80199ba:	6839      	ldr	r1, [r7, #0]
 80199bc:	4618      	mov	r0, r3
 80199be:	f000 f9ee 	bl	8019d9e <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 80199c2:	687b      	ldr	r3, [r7, #4]
 80199c4:	4618      	mov	r0, r3
 80199c6:	3708      	adds	r7, #8
 80199c8:	46bd      	mov	sp, r7
 80199ca:	bd80      	pop	{r7, pc}

080199cc <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80199cc:	b480      	push	{r7}
 80199ce:	b083      	sub	sp, #12
 80199d0:	af00      	add	r7, sp, #0
 80199d2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80199d4:	687b      	ldr	r3, [r7, #4]
 80199d6:	4618      	mov	r0, r3
 80199d8:	370c      	adds	r7, #12
 80199da:	46bd      	mov	sp, r7
 80199dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80199e0:	4770      	bx	lr

080199e2 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80199e2:	b480      	push	{r7}
 80199e4:	b083      	sub	sp, #12
 80199e6:	af00      	add	r7, sp, #0
 80199e8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80199ea:	687b      	ldr	r3, [r7, #4]
 80199ec:	4618      	mov	r0, r3
 80199ee:	370c      	adds	r7, #12
 80199f0:	46bd      	mov	sp, r7
 80199f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80199f6:	4770      	bx	lr

080199f8 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80199f8:	b480      	push	{r7}
 80199fa:	b083      	sub	sp, #12
 80199fc:	af00      	add	r7, sp, #0
 80199fe:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019a00:	687b      	ldr	r3, [r7, #4]
 8019a02:	4618      	mov	r0, r3
 8019a04:	370c      	adds	r7, #12
 8019a06:	46bd      	mov	sp, r7
 8019a08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019a0c:	4770      	bx	lr

08019a0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8019a0e:	b5b0      	push	{r4, r5, r7, lr}
 8019a10:	b088      	sub	sp, #32
 8019a12:	af02      	add	r7, sp, #8
 8019a14:	60f8      	str	r0, [r7, #12]
 8019a16:	60b9      	str	r1, [r7, #8]
 8019a18:	607a      	str	r2, [r7, #4]
 8019a1a:	603b      	str	r3, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8019a1c:	68f8      	ldr	r0, [r7, #12]
 8019a1e:	f000 f9cd 	bl	8019dbc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 8019a22:	6178      	str	r0, [r7, #20]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8019a24:	68b8      	ldr	r0, [r7, #8]
 8019a26:	f7ff ffd1 	bl	80199cc <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019a2a:	4604      	mov	r4, r0
 8019a2c:	6878      	ldr	r0, [r7, #4]
 8019a2e:	f7ff ffd8 	bl	80199e2 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019a32:	4605      	mov	r5, r0
 8019a34:	6838      	ldr	r0, [r7, #0]
 8019a36:	f7ff ffdf 	bl	80199f8 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019a3a:	4603      	mov	r3, r0
 8019a3c:	9300      	str	r3, [sp, #0]
 8019a3e:	462b      	mov	r3, r5
 8019a40:	4622      	mov	r2, r4
 8019a42:	6979      	ldr	r1, [r7, #20]
 8019a44:	68f8      	ldr	r0, [r7, #12]
 8019a46:	f000 f9ca 	bl	8019dde <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 8019a4a:	697b      	ldr	r3, [r7, #20]
	}
 8019a4c:	4618      	mov	r0, r3
 8019a4e:	3718      	adds	r7, #24
 8019a50:	46bd      	mov	sp, r7
 8019a52:	bdb0      	pop	{r4, r5, r7, pc}

08019a54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019a54:	b590      	push	{r4, r7, lr}
 8019a56:	b08d      	sub	sp, #52	; 0x34
 8019a58:	af00      	add	r7, sp, #0
 8019a5a:	60f8      	str	r0, [r7, #12]
 8019a5c:	60b9      	str	r1, [r7, #8]
 8019a5e:	607a      	str	r2, [r7, #4]
 8019a60:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 8019a62:	1d3b      	adds	r3, r7, #4
 8019a64:	4618      	mov	r0, r3
 8019a66:	f000 f9e7 	bl	8019e38 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>
 8019a6a:	4603      	mov	r3, r0
 8019a6c:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8019a6e:	69bc      	ldr	r4, [r7, #24]
 8019a70:	68b8      	ldr	r0, [r7, #8]
 8019a72:	f7ff ff17 	bl	80198a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019a76:	4603      	mov	r3, r0
 8019a78:	429c      	cmp	r4, r3
 8019a7a:	bf0c      	ite	eq
 8019a7c:	2301      	moveq	r3, #1
 8019a7e:	2300      	movne	r3, #0
 8019a80:	b2db      	uxtb	r3, r3
 8019a82:	2b00      	cmp	r3, #0
 8019a84:	d030      	beq.n	8019ae8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 8019a86:	68b8      	ldr	r0, [r7, #8]
 8019a88:	f000 f9e7 	bl	8019e5a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 8019a8c:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8019a8e:	2b00      	cmp	r3, #0
 8019a90:	d013      	beq.n	8019aba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8019a92:	68bc      	ldr	r4, [r7, #8]
 8019a94:	68b8      	ldr	r0, [r7, #8]
 8019a96:	f000 f9ec 	bl	8019e72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019a9a:	4603      	mov	r3, r0
 8019a9c:	681b      	ldr	r3, [r3, #0]
 8019a9e:	4618      	mov	r0, r3
 8019aa0:	f7ff ff3d 	bl	801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019aa4:	4603      	mov	r3, r0
 8019aa6:	683a      	ldr	r2, [r7, #0]
 8019aa8:	4619      	mov	r1, r3
 8019aaa:	4620      	mov	r0, r4
 8019aac:	f7ec ffe7 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019ab0:	4603      	mov	r3, r0
 8019ab2:	2b00      	cmp	r3, #0
 8019ab4:	d001      	beq.n	8019aba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8019ab6:	2301      	movs	r3, #1
 8019ab8:	e000      	b.n	8019abc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 8019aba:	2300      	movs	r3, #0
	  if (size() > 0
 8019abc:	2b00      	cmp	r3, #0
 8019abe:	d00c      	beq.n	8019ada <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 8019ac0:	2300      	movs	r3, #0
 8019ac2:	61fb      	str	r3, [r7, #28]
 8019ac4:	68b8      	ldr	r0, [r7, #8]
 8019ac6:	f000 f9d4 	bl	8019e72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019aca:	4602      	mov	r2, r0
 8019acc:	f107 031c 	add.w	r3, r7, #28
 8019ad0:	4619      	mov	r1, r3
 8019ad2:	68f8      	ldr	r0, [r7, #12]
 8019ad4:	f7ec fe53 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019ad8:	e0db      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8019ada:	68fb      	ldr	r3, [r7, #12]
 8019adc:	683a      	ldr	r2, [r7, #0]
 8019ade:	68b9      	ldr	r1, [r7, #8]
 8019ae0:	4618      	mov	r0, r3
 8019ae2:	f000 f9d2 	bl	8019e8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019ae6:	e0d4      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8019ae8:	68bc      	ldr	r4, [r7, #8]
 8019aea:	69bb      	ldr	r3, [r7, #24]
 8019aec:	4618      	mov	r0, r3
 8019aee:	f7ff ff16 	bl	801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019af2:	4603      	mov	r3, r0
 8019af4:	461a      	mov	r2, r3
 8019af6:	6839      	ldr	r1, [r7, #0]
 8019af8:	4620      	mov	r0, r4
 8019afa:	f7ec ffc0 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019afe:	4603      	mov	r3, r0
 8019b00:	2b00      	cmp	r3, #0
 8019b02:	d057      	beq.n	8019bb4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 8019b04:	69bb      	ldr	r3, [r7, #24]
 8019b06:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8019b08:	69bc      	ldr	r4, [r7, #24]
 8019b0a:	68b8      	ldr	r0, [r7, #8]
 8019b0c:	f000 fa42 	bl	8019f94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019b10:	4603      	mov	r3, r0
 8019b12:	681b      	ldr	r3, [r3, #0]
 8019b14:	429c      	cmp	r4, r3
 8019b16:	bf0c      	ite	eq
 8019b18:	2301      	moveq	r3, #1
 8019b1a:	2300      	movne	r3, #0
 8019b1c:	b2db      	uxtb	r3, r3
 8019b1e:	2b00      	cmp	r3, #0
 8019b20:	d00d      	beq.n	8019b3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8019b22:	68b8      	ldr	r0, [r7, #8]
 8019b24:	f000 fa36 	bl	8019f94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019b28:	4604      	mov	r4, r0
 8019b2a:	68b8      	ldr	r0, [r7, #8]
 8019b2c:	f000 fa32 	bl	8019f94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8019b30:	4603      	mov	r3, r0
 8019b32:	461a      	mov	r2, r3
 8019b34:	4621      	mov	r1, r4
 8019b36:	68f8      	ldr	r0, [r7, #12]
 8019b38:	f7ec fec8 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019b3c:	e0a9      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8019b3e:	68bc      	ldr	r4, [r7, #8]
 8019b40:	f107 0314 	add.w	r3, r7, #20
 8019b44:	4618      	mov	r0, r3
 8019b46:	f000 fa31 	bl	8019fac <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
 8019b4a:	4603      	mov	r3, r0
 8019b4c:	681b      	ldr	r3, [r3, #0]
 8019b4e:	4618      	mov	r0, r3
 8019b50:	f7ff fee5 	bl	801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019b54:	4603      	mov	r3, r0
 8019b56:	683a      	ldr	r2, [r7, #0]
 8019b58:	4619      	mov	r1, r3
 8019b5a:	4620      	mov	r0, r4
 8019b5c:	f7ec ff8f 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019b60:	4603      	mov	r3, r0
 8019b62:	2b00      	cmp	r3, #0
 8019b64:	d01f      	beq.n	8019ba6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8019b66:	697b      	ldr	r3, [r7, #20]
 8019b68:	4618      	mov	r0, r3
 8019b6a:	f7ff fe72 	bl	8019852 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019b6e:	4603      	mov	r3, r0
 8019b70:	2b00      	cmp	r3, #0
 8019b72:	bf0c      	ite	eq
 8019b74:	2301      	moveq	r3, #1
 8019b76:	2300      	movne	r3, #0
 8019b78:	b2db      	uxtb	r3, r3
 8019b7a:	2b00      	cmp	r3, #0
 8019b7c:	d00a      	beq.n	8019b94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 8019b7e:	2300      	movs	r3, #0
 8019b80:	623b      	str	r3, [r7, #32]
 8019b82:	f107 0214 	add.w	r2, r7, #20
 8019b86:	f107 0320 	add.w	r3, r7, #32
 8019b8a:	4619      	mov	r1, r3
 8019b8c:	68f8      	ldr	r0, [r7, #12]
 8019b8e:	f7ec fdf6 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019b92:	e07e      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 8019b94:	f107 0218 	add.w	r2, r7, #24
 8019b98:	f107 0318 	add.w	r3, r7, #24
 8019b9c:	4619      	mov	r1, r3
 8019b9e:	68f8      	ldr	r0, [r7, #12]
 8019ba0:	f7ec fe94 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019ba4:	e075      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8019ba6:	68fb      	ldr	r3, [r7, #12]
 8019ba8:	683a      	ldr	r2, [r7, #0]
 8019baa:	68b9      	ldr	r1, [r7, #8]
 8019bac:	4618      	mov	r0, r3
 8019bae:	f000 f96c 	bl	8019e8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019bb2:	e06e      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 8019bb4:	68bc      	ldr	r4, [r7, #8]
 8019bb6:	69bb      	ldr	r3, [r7, #24]
 8019bb8:	4618      	mov	r0, r3
 8019bba:	f7ff feb0 	bl	801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019bbe:	4603      	mov	r3, r0
 8019bc0:	683a      	ldr	r2, [r7, #0]
 8019bc2:	4619      	mov	r1, r3
 8019bc4:	4620      	mov	r0, r4
 8019bc6:	f7ec ff5a 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019bca:	4603      	mov	r3, r0
 8019bcc:	2b00      	cmp	r3, #0
 8019bce:	d056      	beq.n	8019c7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 8019bd0:	69bb      	ldr	r3, [r7, #24]
 8019bd2:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 8019bd4:	69bc      	ldr	r4, [r7, #24]
 8019bd6:	68b8      	ldr	r0, [r7, #8]
 8019bd8:	f000 f94b 	bl	8019e72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019bdc:	4603      	mov	r3, r0
 8019bde:	681b      	ldr	r3, [r3, #0]
 8019be0:	429c      	cmp	r4, r3
 8019be2:	bf0c      	ite	eq
 8019be4:	2301      	moveq	r3, #1
 8019be6:	2300      	movne	r3, #0
 8019be8:	b2db      	uxtb	r3, r3
 8019bea:	2b00      	cmp	r3, #0
 8019bec:	d00c      	beq.n	8019c08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 8019bee:	2300      	movs	r3, #0
 8019bf0:	627b      	str	r3, [r7, #36]	; 0x24
 8019bf2:	68b8      	ldr	r0, [r7, #8]
 8019bf4:	f000 f93d 	bl	8019e72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8019bf8:	4602      	mov	r2, r0
 8019bfa:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8019bfe:	4619      	mov	r1, r3
 8019c00:	68f8      	ldr	r0, [r7, #12]
 8019c02:	f7ec fdbc 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019c06:	e044      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8019c08:	68bc      	ldr	r4, [r7, #8]
 8019c0a:	f107 0310 	add.w	r3, r7, #16
 8019c0e:	4618      	mov	r0, r3
 8019c10:	f7ff fc39 	bl	8019486 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>
 8019c14:	4603      	mov	r3, r0
 8019c16:	681b      	ldr	r3, [r3, #0]
 8019c18:	4618      	mov	r0, r3
 8019c1a:	f7ff fe80 	bl	801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019c1e:	4603      	mov	r3, r0
 8019c20:	461a      	mov	r2, r3
 8019c22:	6839      	ldr	r1, [r7, #0]
 8019c24:	4620      	mov	r0, r4
 8019c26:	f7ec ff2a 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019c2a:	4603      	mov	r3, r0
 8019c2c:	2b00      	cmp	r3, #0
 8019c2e:	d01f      	beq.n	8019c70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8019c30:	69bb      	ldr	r3, [r7, #24]
 8019c32:	4618      	mov	r0, r3
 8019c34:	f7ff fe0d 	bl	8019852 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019c38:	4603      	mov	r3, r0
 8019c3a:	2b00      	cmp	r3, #0
 8019c3c:	bf0c      	ite	eq
 8019c3e:	2301      	moveq	r3, #1
 8019c40:	2300      	movne	r3, #0
 8019c42:	b2db      	uxtb	r3, r3
 8019c44:	2b00      	cmp	r3, #0
 8019c46:	d00a      	beq.n	8019c5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 8019c48:	2300      	movs	r3, #0
 8019c4a:	62bb      	str	r3, [r7, #40]	; 0x28
 8019c4c:	f107 0218 	add.w	r2, r7, #24
 8019c50:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8019c54:	4619      	mov	r1, r3
 8019c56:	68f8      	ldr	r0, [r7, #12]
 8019c58:	f7ec fd91 	bl	800677e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8019c5c:	e019      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8019c5e:	f107 0210 	add.w	r2, r7, #16
 8019c62:	f107 0310 	add.w	r3, r7, #16
 8019c66:	4619      	mov	r1, r3
 8019c68:	68f8      	ldr	r0, [r7, #12]
 8019c6a:	f7ec fe2f 	bl	80068cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8019c6e:	e010      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8019c70:	68fb      	ldr	r3, [r7, #12]
 8019c72:	683a      	ldr	r2, [r7, #0]
 8019c74:	68b9      	ldr	r1, [r7, #8]
 8019c76:	4618      	mov	r0, r3
 8019c78:	f000 f907 	bl	8019e8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8019c7c:	e009      	b.n	8019c92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 8019c7e:	2300      	movs	r3, #0
 8019c80:	62fb      	str	r3, [r7, #44]	; 0x2c
 8019c82:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8019c86:	f107 0318 	add.w	r3, r7, #24
 8019c8a:	4619      	mov	r1, r3
 8019c8c:	68f8      	ldr	r0, [r7, #12]
 8019c8e:	f7ec fe58 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8019c92:	68f8      	ldr	r0, [r7, #12]
 8019c94:	3734      	adds	r7, #52	; 0x34
 8019c96:	46bd      	mov	sp, r7
 8019c98:	bd90      	pop	{r4, r7, pc}

08019c9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 8019c9a:	b580      	push	{r7, lr}
 8019c9c:	b084      	sub	sp, #16
 8019c9e:	af00      	add	r7, sp, #0
 8019ca0:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8019ca2:	6878      	ldr	r0, [r7, #4]
 8019ca4:	f000 f993 	bl	8019fce <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019ca8:	4602      	mov	r2, r0
 8019caa:	f107 030c 	add.w	r3, r7, #12
 8019cae:	4611      	mov	r1, r2
 8019cb0:	4618      	mov	r0, r3
 8019cb2:	f000 f99a 	bl	8019fea <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>
 8019cb6:	4603      	mov	r3, r0
      }
 8019cb8:	4618      	mov	r0, r3
 8019cba:	3710      	adds	r7, #16
 8019cbc:	46bd      	mov	sp, r7
 8019cbe:	bd80      	pop	{r7, pc}

08019cc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019cc0:	b5b0      	push	{r4, r5, r7, lr}
 8019cc2:	b086      	sub	sp, #24
 8019cc4:	af00      	add	r7, sp, #0
 8019cc6:	60f8      	str	r0, [r7, #12]
 8019cc8:	60b9      	str	r1, [r7, #8]
 8019cca:	607a      	str	r2, [r7, #4]
 8019ccc:	603b      	str	r3, [r7, #0]
			    || _M_impl._M_key_compare(_S_key(__z),
 8019cce:	68bb      	ldr	r3, [r7, #8]
 8019cd0:	2b00      	cmp	r3, #0
 8019cd2:	d117      	bne.n	8019d04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
      bool __insert_left = (__x != 0 || __p == _M_end()
 8019cd4:	68f8      	ldr	r0, [r7, #12]
 8019cd6:	f7ff fde5 	bl	80198a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019cda:	4602      	mov	r2, r0
 8019cdc:	687b      	ldr	r3, [r7, #4]
 8019cde:	4293      	cmp	r3, r2
 8019ce0:	d010      	beq.n	8019d04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
			    || _M_impl._M_key_compare(_S_key(__z),
 8019ce2:	68fc      	ldr	r4, [r7, #12]
 8019ce4:	6838      	ldr	r0, [r7, #0]
 8019ce6:	f7ff ffd8 	bl	8019c9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019cea:	4605      	mov	r5, r0
 8019cec:	6878      	ldr	r0, [r7, #4]
 8019cee:	f7ff fe16 	bl	801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019cf2:	4603      	mov	r3, r0
 8019cf4:	461a      	mov	r2, r3
 8019cf6:	4629      	mov	r1, r5
 8019cf8:	4620      	mov	r0, r4
 8019cfa:	f7ec fec0 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019cfe:	4603      	mov	r3, r0
 8019d00:	2b00      	cmp	r3, #0
 8019d02:	d001      	beq.n	8019d08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x48>
 8019d04:	2301      	movs	r3, #1
 8019d06:	e000      	b.n	8019d0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x4a>
 8019d08:	2300      	movs	r3, #0
      bool __insert_left = (__x != 0 || __p == _M_end()
 8019d0a:	75fb      	strb	r3, [r7, #23]
				    this->_M_impl._M_header);
 8019d0c:	68fb      	ldr	r3, [r7, #12]
 8019d0e:	3304      	adds	r3, #4
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8019d10:	7df8      	ldrb	r0, [r7, #23]
 8019d12:	687a      	ldr	r2, [r7, #4]
 8019d14:	6839      	ldr	r1, [r7, #0]
 8019d16:	f009 fb2b 	bl	8023370 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
      ++_M_impl._M_node_count;
 8019d1a:	68fb      	ldr	r3, [r7, #12]
 8019d1c:	695b      	ldr	r3, [r3, #20]
 8019d1e:	1c5a      	adds	r2, r3, #1
 8019d20:	68fb      	ldr	r3, [r7, #12]
 8019d22:	615a      	str	r2, [r3, #20]
      return iterator(__z);
 8019d24:	f107 0310 	add.w	r3, r7, #16
 8019d28:	6839      	ldr	r1, [r7, #0]
 8019d2a:	4618      	mov	r0, r3
 8019d2c:	f7ff fe03 	bl	8019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019d30:	693b      	ldr	r3, [r7, #16]
    }
 8019d32:	4618      	mov	r0, r3
 8019d34:	3718      	adds	r7, #24
 8019d36:	46bd      	mov	sp, r7
 8019d38:	bdb0      	pop	{r4, r5, r7, pc}

08019d3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019d3a:	b590      	push	{r4, r7, lr}
 8019d3c:	b083      	sub	sp, #12
 8019d3e:	af00      	add	r7, sp, #0
 8019d40:	6078      	str	r0, [r7, #4]
 8019d42:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8019d44:	6878      	ldr	r0, [r7, #4]
 8019d46:	f000 f95c 	bl	801a002 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019d4a:	4604      	mov	r4, r0
 8019d4c:	6838      	ldr	r0, [r7, #0]
 8019d4e:	f7ff fca5 	bl	801969c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019d52:	4603      	mov	r3, r0
 8019d54:	4619      	mov	r1, r3
 8019d56:	4620      	mov	r0, r4
 8019d58:	f000 f95e 	bl	801a018 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>
      }
 8019d5c:	bf00      	nop
 8019d5e:	370c      	adds	r7, #12
 8019d60:	46bd      	mov	sp, r7
 8019d62:	bd90      	pop	{r4, r7, pc}

08019d64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8019d64:	b580      	push	{r7, lr}
 8019d66:	b082      	sub	sp, #8
 8019d68:	af00      	add	r7, sp, #0
 8019d6a:	6078      	str	r0, [r7, #4]
 8019d6c:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8019d6e:	6878      	ldr	r0, [r7, #4]
 8019d70:	f000 f947 	bl	801a002 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019d74:	4603      	mov	r3, r0
 8019d76:	2201      	movs	r2, #1
 8019d78:	6839      	ldr	r1, [r7, #0]
 8019d7a:	4618      	mov	r0, r3
 8019d7c:	f000 f959 	bl	801a032 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>
 8019d80:	bf00      	nop
 8019d82:	3708      	adds	r7, #8
 8019d84:	46bd      	mov	sp, r7
 8019d86:	bd80      	pop	{r7, pc}

08019d88 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() noexcept
 8019d88:	b480      	push	{r7}
 8019d8a:	b083      	sub	sp, #12
 8019d8c:	af00      	add	r7, sp, #0
 8019d8e:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8019d90:	687b      	ldr	r3, [r7, #4]
 8019d92:	4618      	mov	r0, r3
 8019d94:	370c      	adds	r7, #12
 8019d96:	46bd      	mov	sp, r7
 8019d98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d9c:	4770      	bx	lr

08019d9e <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>:
      constexpr _Head_base(const _Head& __h)
 8019d9e:	b480      	push	{r7}
 8019da0:	b083      	sub	sp, #12
 8019da2:	af00      	add	r7, sp, #0
 8019da4:	6078      	str	r0, [r7, #4]
 8019da6:	6039      	str	r1, [r7, #0]
      : _M_head_impl(__h) { }
 8019da8:	687b      	ldr	r3, [r7, #4]
 8019daa:	683a      	ldr	r2, [r7, #0]
 8019dac:	601a      	str	r2, [r3, #0]
 8019dae:	687b      	ldr	r3, [r7, #4]
 8019db0:	4618      	mov	r0, r3
 8019db2:	370c      	adds	r7, #12
 8019db4:	46bd      	mov	sp, r7
 8019db6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019dba:	4770      	bx	lr

08019dbc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 8019dbc:	b580      	push	{r7, lr}
 8019dbe:	b082      	sub	sp, #8
 8019dc0:	af00      	add	r7, sp, #0
 8019dc2:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 8019dc4:	6878      	ldr	r0, [r7, #4]
 8019dc6:	f000 f91c 	bl	801a002 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019dca:	4603      	mov	r3, r0
 8019dcc:	2101      	movs	r1, #1
 8019dce:	4618      	mov	r0, r3
 8019dd0:	f000 f93e 	bl	801a050 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>
 8019dd4:	4603      	mov	r3, r0
 8019dd6:	4618      	mov	r0, r3
 8019dd8:	3708      	adds	r7, #8
 8019dda:	46bd      	mov	sp, r7
 8019ddc:	bd80      	pop	{r7, pc}

08019dde <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8019dde:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019de2:	b086      	sub	sp, #24
 8019de4:	af02      	add	r7, sp, #8
 8019de6:	60f8      	str	r0, [r7, #12]
 8019de8:	60b9      	str	r1, [r7, #8]
 8019dea:	607a      	str	r2, [r7, #4]
 8019dec:	603b      	str	r3, [r7, #0]
	      ::new(__node) _Rb_tree_node<_Val>;
 8019dee:	68bb      	ldr	r3, [r7, #8]
 8019df0:	4619      	mov	r1, r3
 8019df2:	2048      	movs	r0, #72	; 0x48
 8019df4:	f7e7 f931 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8019df8:	68f8      	ldr	r0, [r7, #12]
 8019dfa:	f000 f902 	bl	801a002 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8019dfe:	4604      	mov	r4, r0
 8019e00:	68b8      	ldr	r0, [r7, #8]
 8019e02:	f7ff fc4b 	bl	801969c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8019e06:	4605      	mov	r5, r0
 8019e08:	6878      	ldr	r0, [r7, #4]
 8019e0a:	f7ff fddf 	bl	80199cc <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8019e0e:	4606      	mov	r6, r0
 8019e10:	6838      	ldr	r0, [r7, #0]
 8019e12:	f7ff fde6 	bl	80199e2 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8019e16:	4680      	mov	r8, r0
 8019e18:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8019e1a:	f7ff fded 	bl	80199f8 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8019e1e:	4603      	mov	r3, r0
 8019e20:	9300      	str	r3, [sp, #0]
 8019e22:	4643      	mov	r3, r8
 8019e24:	4632      	mov	r2, r6
 8019e26:	4629      	mov	r1, r5
 8019e28:	4620      	mov	r0, r4
 8019e2a:	f000 f920 	bl	801a06e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>
	}
 8019e2e:	bf00      	nop
 8019e30:	3710      	adds	r7, #16
 8019e32:	46bd      	mov	sp, r7
 8019e34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019e38 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8019e38:	b580      	push	{r7, lr}
 8019e3a:	b084      	sub	sp, #16
 8019e3c:	af00      	add	r7, sp, #0
 8019e3e:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8019e40:	687b      	ldr	r3, [r7, #4]
 8019e42:	681a      	ldr	r2, [r3, #0]
 8019e44:	f107 030c 	add.w	r3, r7, #12
 8019e48:	4611      	mov	r1, r2
 8019e4a:	4618      	mov	r0, r3
 8019e4c:	f7ff fd73 	bl	8019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019e50:	68fb      	ldr	r3, [r7, #12]
 8019e52:	4618      	mov	r0, r3
 8019e54:	3710      	adds	r7, #16
 8019e56:	46bd      	mov	sp, r7
 8019e58:	bd80      	pop	{r7, pc}

08019e5a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8019e5a:	b480      	push	{r7}
 8019e5c:	b083      	sub	sp, #12
 8019e5e:	af00      	add	r7, sp, #0
 8019e60:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8019e62:	687b      	ldr	r3, [r7, #4]
 8019e64:	695b      	ldr	r3, [r3, #20]
 8019e66:	4618      	mov	r0, r3
 8019e68:	370c      	adds	r7, #12
 8019e6a:	46bd      	mov	sp, r7
 8019e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e70:	4770      	bx	lr

08019e72 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8019e72:	b480      	push	{r7}
 8019e74:	b083      	sub	sp, #12
 8019e76:	af00      	add	r7, sp, #0
 8019e78:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8019e7a:	687b      	ldr	r3, [r7, #4]
 8019e7c:	3310      	adds	r3, #16
 8019e7e:	4618      	mov	r0, r3
 8019e80:	370c      	adds	r7, #12
 8019e82:	46bd      	mov	sp, r7
 8019e84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e88:	4770      	bx	lr

08019e8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8019e8a:	b590      	push	{r4, r7, lr}
 8019e8c:	b08b      	sub	sp, #44	; 0x2c
 8019e8e:	af00      	add	r7, sp, #0
 8019e90:	60f8      	str	r0, [r7, #12]
 8019e92:	60b9      	str	r1, [r7, #8]
 8019e94:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8019e96:	68b8      	ldr	r0, [r7, #8]
 8019e98:	f7ff fba7 	bl	80195ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8019e9c:	4603      	mov	r3, r0
 8019e9e:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8019ea0:	68b8      	ldr	r0, [r7, #8]
 8019ea2:	f7ff fcff 	bl	80198a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8019ea6:	4603      	mov	r3, r0
 8019ea8:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8019eaa:	2301      	movs	r3, #1
 8019eac:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8019eb0:	69bb      	ldr	r3, [r7, #24]
 8019eb2:	2b00      	cmp	r3, #0
 8019eb4:	d020      	beq.n	8019ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 8019eb6:	69bb      	ldr	r3, [r7, #24]
 8019eb8:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8019eba:	68bc      	ldr	r4, [r7, #8]
 8019ebc:	69bb      	ldr	r3, [r7, #24]
 8019ebe:	4618      	mov	r0, r3
 8019ec0:	f7ff feeb 	bl	8019c9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8019ec4:	4603      	mov	r3, r0
 8019ec6:	461a      	mov	r2, r3
 8019ec8:	6879      	ldr	r1, [r7, #4]
 8019eca:	4620      	mov	r0, r4
 8019ecc:	f7ec fdd7 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019ed0:	4603      	mov	r3, r0
 8019ed2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8019ed6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8019eda:	2b00      	cmp	r3, #0
 8019edc:	d005      	beq.n	8019eea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 8019ede:	69bb      	ldr	r3, [r7, #24]
 8019ee0:	4618      	mov	r0, r3
 8019ee2:	f7ff fcc2 	bl	801986a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8019ee6:	4603      	mov	r3, r0
 8019ee8:	e004      	b.n	8019ef4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 8019eea:	69bb      	ldr	r3, [r7, #24]
 8019eec:	4618      	mov	r0, r3
 8019eee:	f7ff fcb0 	bl	8019852 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8019ef2:	4603      	mov	r3, r0
 8019ef4:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8019ef6:	e7db      	b.n	8019eb0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8019ef8:	697a      	ldr	r2, [r7, #20]
 8019efa:	f107 0310 	add.w	r3, r7, #16
 8019efe:	4611      	mov	r1, r2
 8019f00:	4618      	mov	r0, r3
 8019f02:	f7ff fd18 	bl	8019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8019f06:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8019f0a:	2b00      	cmp	r3, #0
 8019f0c:	d01d      	beq.n	8019f4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 8019f0e:	68b8      	ldr	r0, [r7, #8]
 8019f10:	f7ff fc4b 	bl	80197aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 8019f14:	4603      	mov	r3, r0
 8019f16:	61fb      	str	r3, [r7, #28]
 8019f18:	f107 021c 	add.w	r2, r7, #28
 8019f1c:	f107 0310 	add.w	r3, r7, #16
 8019f20:	4611      	mov	r1, r2
 8019f22:	4618      	mov	r0, r3
 8019f24:	f7ff fa0f 	bl	8019346 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 8019f28:	4603      	mov	r3, r0
 8019f2a:	2b00      	cmp	r3, #0
 8019f2c:	d008      	beq.n	8019f40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8019f2e:	f107 0214 	add.w	r2, r7, #20
 8019f32:	f107 0318 	add.w	r3, r7, #24
 8019f36:	4619      	mov	r1, r3
 8019f38:	68f8      	ldr	r0, [r7, #12]
 8019f3a:	f000 f8b6 	bl	801a0aa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 8019f3e:	e025      	b.n	8019f8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 8019f40:	f107 0310 	add.w	r3, r7, #16
 8019f44:	4618      	mov	r0, r3
 8019f46:	f000 f831 	bl	8019fac <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8019f4a:	68bc      	ldr	r4, [r7, #8]
 8019f4c:	693b      	ldr	r3, [r7, #16]
 8019f4e:	4618      	mov	r0, r3
 8019f50:	f7ff fce5 	bl	801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019f54:	4603      	mov	r3, r0
 8019f56:	687a      	ldr	r2, [r7, #4]
 8019f58:	4619      	mov	r1, r3
 8019f5a:	4620      	mov	r0, r4
 8019f5c:	f7ec fd8f 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8019f60:	4603      	mov	r3, r0
 8019f62:	2b00      	cmp	r3, #0
 8019f64:	d008      	beq.n	8019f78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8019f66:	f107 0214 	add.w	r2, r7, #20
 8019f6a:	f107 0318 	add.w	r3, r7, #24
 8019f6e:	4619      	mov	r1, r3
 8019f70:	68f8      	ldr	r0, [r7, #12]
 8019f72:	f000 f89a 	bl	801a0aa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 8019f76:	e009      	b.n	8019f8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 8019f78:	2300      	movs	r3, #0
 8019f7a:	623b      	str	r3, [r7, #32]
 8019f7c:	f107 0220 	add.w	r2, r7, #32
 8019f80:	f107 0310 	add.w	r3, r7, #16
 8019f84:	4619      	mov	r1, r3
 8019f86:	68f8      	ldr	r0, [r7, #12]
 8019f88:	f7ec fcdb 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8019f8c:	68f8      	ldr	r0, [r7, #12]
 8019f8e:	372c      	adds	r7, #44	; 0x2c
 8019f90:	46bd      	mov	sp, r7
 8019f92:	bd90      	pop	{r4, r7, pc}

08019f94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8019f94:	b480      	push	{r7}
 8019f96:	b083      	sub	sp, #12
 8019f98:	af00      	add	r7, sp, #0
 8019f9a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8019f9c:	687b      	ldr	r3, [r7, #4]
 8019f9e:	330c      	adds	r3, #12
 8019fa0:	4618      	mov	r0, r3
 8019fa2:	370c      	adds	r7, #12
 8019fa4:	46bd      	mov	sp, r7
 8019fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019faa:	4770      	bx	lr

08019fac <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8019fac:	b580      	push	{r7, lr}
 8019fae:	b082      	sub	sp, #8
 8019fb0:	af00      	add	r7, sp, #0
 8019fb2:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8019fb4:	687b      	ldr	r3, [r7, #4]
 8019fb6:	681b      	ldr	r3, [r3, #0]
 8019fb8:	4618      	mov	r0, r3
 8019fba:	f009 f9d7 	bl	802336c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8019fbe:	4602      	mov	r2, r0
 8019fc0:	687b      	ldr	r3, [r7, #4]
 8019fc2:	601a      	str	r2, [r3, #0]
	return *this;
 8019fc4:	687b      	ldr	r3, [r7, #4]
      }
 8019fc6:	4618      	mov	r0, r3
 8019fc8:	3708      	adds	r7, #8
 8019fca:	46bd      	mov	sp, r7
 8019fcc:	bd80      	pop	{r7, pc}

08019fce <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr() const
 8019fce:	b580      	push	{r7, lr}
 8019fd0:	b082      	sub	sp, #8
 8019fd2:	af00      	add	r7, sp, #0
 8019fd4:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8019fd6:	687b      	ldr	r3, [r7, #4]
 8019fd8:	3310      	adds	r3, #16
 8019fda:	4618      	mov	r0, r3
 8019fdc:	f000 f87e 	bl	801a0dc <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 8019fe0:	4603      	mov	r3, r0
 8019fe2:	4618      	mov	r0, r3
 8019fe4:	3708      	adds	r7, #8
 8019fe6:	46bd      	mov	sp, r7
 8019fe8:	bd80      	pop	{r7, pc}

08019fea <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>:
      operator()(const _Pair& __x) const
 8019fea:	b480      	push	{r7}
 8019fec:	b083      	sub	sp, #12
 8019fee:	af00      	add	r7, sp, #0
 8019ff0:	6078      	str	r0, [r7, #4]
 8019ff2:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8019ff4:	683b      	ldr	r3, [r7, #0]
 8019ff6:	4618      	mov	r0, r3
 8019ff8:	370c      	adds	r7, #12
 8019ffa:	46bd      	mov	sp, r7
 8019ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a000:	4770      	bx	lr

0801a002 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 801a002:	b480      	push	{r7}
 801a004:	b083      	sub	sp, #12
 801a006:	af00      	add	r7, sp, #0
 801a008:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801a00a:	687b      	ldr	r3, [r7, #4]
 801a00c:	4618      	mov	r0, r3
 801a00e:	370c      	adds	r7, #12
 801a010:	46bd      	mov	sp, r7
 801a012:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a016:	4770      	bx	lr

0801a018 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 801a018:	b580      	push	{r7, lr}
 801a01a:	b082      	sub	sp, #8
 801a01c:	af00      	add	r7, sp, #0
 801a01e:	6078      	str	r0, [r7, #4]
 801a020:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 801a022:	6839      	ldr	r1, [r7, #0]
 801a024:	6878      	ldr	r0, [r7, #4]
 801a026:	f000 f877 	bl	801a118 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>
 801a02a:	bf00      	nop
 801a02c:	3708      	adds	r7, #8
 801a02e:	46bd      	mov	sp, r7
 801a030:	bd80      	pop	{r7, pc}

0801a032 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 801a032:	b580      	push	{r7, lr}
 801a034:	b084      	sub	sp, #16
 801a036:	af00      	add	r7, sp, #0
 801a038:	60f8      	str	r0, [r7, #12]
 801a03a:	60b9      	str	r1, [r7, #8]
 801a03c:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 801a03e:	687a      	ldr	r2, [r7, #4]
 801a040:	68b9      	ldr	r1, [r7, #8]
 801a042:	68f8      	ldr	r0, [r7, #12]
 801a044:	f000 f874 	bl	801a130 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>
 801a048:	bf00      	nop
 801a04a:	3710      	adds	r7, #16
 801a04c:	46bd      	mov	sp, r7
 801a04e:	bd80      	pop	{r7, pc}

0801a050 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 801a050:	b580      	push	{r7, lr}
 801a052:	b082      	sub	sp, #8
 801a054:	af00      	add	r7, sp, #0
 801a056:	6078      	str	r0, [r7, #4]
 801a058:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801a05a:	2200      	movs	r2, #0
 801a05c:	6839      	ldr	r1, [r7, #0]
 801a05e:	6878      	ldr	r0, [r7, #4]
 801a060:	f000 f872 	bl	801a148 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>
 801a064:	4603      	mov	r3, r0
 801a066:	4618      	mov	r0, r3
 801a068:	3708      	adds	r7, #8
 801a06a:	46bd      	mov	sp, r7
 801a06c:	bd80      	pop	{r7, pc}

0801a06e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801a06e:	b5b0      	push	{r4, r5, r7, lr}
 801a070:	b086      	sub	sp, #24
 801a072:	af02      	add	r7, sp, #8
 801a074:	60f8      	str	r0, [r7, #12]
 801a076:	60b9      	str	r1, [r7, #8]
 801a078:	607a      	str	r2, [r7, #4]
 801a07a:	603b      	str	r3, [r7, #0]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801a07c:	6878      	ldr	r0, [r7, #4]
 801a07e:	f7ff fca5 	bl	80199cc <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 801a082:	4604      	mov	r4, r0
 801a084:	6838      	ldr	r0, [r7, #0]
 801a086:	f7ff fcac 	bl	80199e2 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801a08a:	4605      	mov	r5, r0
 801a08c:	6a38      	ldr	r0, [r7, #32]
 801a08e:	f7ff fcb3 	bl	80199f8 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 801a092:	4603      	mov	r3, r0
 801a094:	9300      	str	r3, [sp, #0]
 801a096:	462b      	mov	r3, r5
 801a098:	4622      	mov	r2, r4
 801a09a:	68b9      	ldr	r1, [r7, #8]
 801a09c:	68f8      	ldr	r0, [r7, #12]
 801a09e:	f000 f885 	bl	801a1ac <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>
 801a0a2:	bf00      	nop
 801a0a4:	3710      	adds	r7, #16
 801a0a6:	46bd      	mov	sp, r7
 801a0a8:	bdb0      	pop	{r4, r5, r7, pc}

0801a0aa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801a0aa:	b580      	push	{r7, lr}
 801a0ac:	b084      	sub	sp, #16
 801a0ae:	af00      	add	r7, sp, #0
 801a0b0:	60f8      	str	r0, [r7, #12]
 801a0b2:	60b9      	str	r1, [r7, #8]
 801a0b4:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801a0b6:	68b8      	ldr	r0, [r7, #8]
 801a0b8:	f000 f89f 	bl	801a1fa <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>
 801a0bc:	4603      	mov	r3, r0
 801a0be:	681a      	ldr	r2, [r3, #0]
 801a0c0:	68fb      	ldr	r3, [r7, #12]
 801a0c2:	601a      	str	r2, [r3, #0]
 801a0c4:	6878      	ldr	r0, [r7, #4]
 801a0c6:	f7ed faa4 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 801a0ca:	4603      	mov	r3, r0
 801a0cc:	681a      	ldr	r2, [r3, #0]
 801a0ce:	68fb      	ldr	r3, [r7, #12]
 801a0d0:	605a      	str	r2, [r3, #4]
 801a0d2:	68fb      	ldr	r3, [r7, #12]
 801a0d4:	4618      	mov	r0, r3
 801a0d6:	3710      	adds	r7, #16
 801a0d8:	46bd      	mov	sp, r7
 801a0da:	bd80      	pop	{r7, pc}

0801a0dc <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() const noexcept
 801a0dc:	b580      	push	{r7, lr}
 801a0de:	b082      	sub	sp, #8
 801a0e0:	af00      	add	r7, sp, #0
 801a0e2:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 801a0e4:	6878      	ldr	r0, [r7, #4]
 801a0e6:	f000 f893 	bl	801a210 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 801a0ea:	4603      	mov	r3, r0
 801a0ec:	4618      	mov	r0, r3
 801a0ee:	3708      	adds	r7, #8
 801a0f0:	46bd      	mov	sp, r7
 801a0f2:	bd80      	pop	{r7, pc}

0801a0f4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>:
    struct pair
 801a0f4:	b580      	push	{r7, lr}
 801a0f6:	b082      	sub	sp, #8
 801a0f8:	af00      	add	r7, sp, #0
 801a0fa:	6078      	str	r0, [r7, #4]
 801a0fc:	687b      	ldr	r3, [r7, #4]
 801a0fe:	3318      	adds	r3, #24
 801a100:	4618      	mov	r0, r3
 801a102:	f7e7 f94b 	bl	800139c <_ZN6SymbolD1Ev>
 801a106:	687b      	ldr	r3, [r7, #4]
 801a108:	4618      	mov	r0, r3
 801a10a:	f009 fb6a 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801a10e:	687b      	ldr	r3, [r7, #4]
 801a110:	4618      	mov	r0, r3
 801a112:	3708      	adds	r7, #8
 801a114:	46bd      	mov	sp, r7
 801a116:	bd80      	pop	{r7, pc}

0801a118 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 801a118:	b580      	push	{r7, lr}
 801a11a:	b082      	sub	sp, #8
 801a11c:	af00      	add	r7, sp, #0
 801a11e:	6078      	str	r0, [r7, #4]
 801a120:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 801a122:	6838      	ldr	r0, [r7, #0]
 801a124:	f7ff ffe6 	bl	801a0f4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801a128:	bf00      	nop
 801a12a:	3708      	adds	r7, #8
 801a12c:	46bd      	mov	sp, r7
 801a12e:	bd80      	pop	{r7, pc}

0801a130 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 801a130:	b580      	push	{r7, lr}
 801a132:	b084      	sub	sp, #16
 801a134:	af00      	add	r7, sp, #0
 801a136:	60f8      	str	r0, [r7, #12]
 801a138:	60b9      	str	r1, [r7, #8]
 801a13a:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 801a13c:	68b8      	ldr	r0, [r7, #8]
 801a13e:	f009 f89b 	bl	8023278 <_ZdlPv>
      }
 801a142:	3710      	adds	r7, #16
 801a144:	46bd      	mov	sp, r7
 801a146:	bd80      	pop	{r7, pc}

0801a148 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801a148:	b580      	push	{r7, lr}
 801a14a:	b084      	sub	sp, #16
 801a14c:	af00      	add	r7, sp, #0
 801a14e:	60f8      	str	r0, [r7, #12]
 801a150:	60b9      	str	r1, [r7, #8]
 801a152:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801a154:	68f8      	ldr	r0, [r7, #12]
 801a156:	f000 f867 	bl	801a228 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>
 801a15a:	4602      	mov	r2, r0
 801a15c:	68bb      	ldr	r3, [r7, #8]
 801a15e:	4293      	cmp	r3, r2
 801a160:	bf8c      	ite	hi
 801a162:	2301      	movhi	r3, #1
 801a164:	2300      	movls	r3, #0
 801a166:	b2db      	uxtb	r3, r3
 801a168:	2b00      	cmp	r3, #0
 801a16a:	d001      	beq.n	801a170 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801a16c:	f009 f95c 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801a170:	68ba      	ldr	r2, [r7, #8]
 801a172:	4613      	mov	r3, r2
 801a174:	00db      	lsls	r3, r3, #3
 801a176:	4413      	add	r3, r2
 801a178:	00db      	lsls	r3, r3, #3
 801a17a:	4618      	mov	r0, r3
 801a17c:	f009 f88f 	bl	802329e <_Znwj>
 801a180:	4603      	mov	r3, r0
 801a182:	bf00      	nop
      }
 801a184:	4618      	mov	r0, r3
 801a186:	3710      	adds	r7, #16
 801a188:	46bd      	mov	sp, r7
 801a18a:	bd80      	pop	{r7, pc}

0801a18c <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
        explicit constexpr tuple(_UElements&&... __elements)
	: _Inherited(std::forward<_UElements>(__elements)...) {	}

      constexpr tuple(const tuple&) = default;

      constexpr tuple(tuple&&) = default;
 801a18c:	b580      	push	{r7, lr}
 801a18e:	b082      	sub	sp, #8
 801a190:	af00      	add	r7, sp, #0
 801a192:	6078      	str	r0, [r7, #4]
 801a194:	6039      	str	r1, [r7, #0]
 801a196:	687b      	ldr	r3, [r7, #4]
 801a198:	683a      	ldr	r2, [r7, #0]
 801a19a:	4611      	mov	r1, r2
 801a19c:	4618      	mov	r0, r3
 801a19e:	f000 f851 	bl	801a244 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 801a1a2:	687b      	ldr	r3, [r7, #4]
 801a1a4:	4618      	mov	r0, r3
 801a1a6:	3708      	adds	r7, #8
 801a1a8:	46bd      	mov	sp, r7
 801a1aa:	bd80      	pop	{r7, pc}

0801a1ac <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801a1ac:	b590      	push	{r4, r7, lr}
 801a1ae:	b089      	sub	sp, #36	; 0x24
 801a1b0:	af00      	add	r7, sp, #0
 801a1b2:	60f8      	str	r0, [r7, #12]
 801a1b4:	60b9      	str	r1, [r7, #8]
 801a1b6:	607a      	str	r2, [r7, #4]
 801a1b8:	603b      	str	r3, [r7, #0]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801a1ba:	6878      	ldr	r0, [r7, #4]
 801a1bc:	f7ff fc06 	bl	80199cc <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 801a1c0:	6838      	ldr	r0, [r7, #0]
 801a1c2:	f7ff fc0e 	bl	80199e2 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801a1c6:	4602      	mov	r2, r0
 801a1c8:	f107 0318 	add.w	r3, r7, #24
 801a1cc:	4611      	mov	r1, r2
 801a1ce:	4618      	mov	r0, r3
 801a1d0:	f7ff ffdc 	bl	801a18c <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 801a1d4:	f107 0418 	add.w	r4, r7, #24
 801a1d8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801a1da:	f7ff fc0d 	bl	80199f8 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 801a1de:	68bb      	ldr	r3, [r7, #8]
 801a1e0:	4619      	mov	r1, r3
 801a1e2:	2038      	movs	r0, #56	; 0x38
 801a1e4:	f7e6 ff39 	bl	800105a <_ZnwjPv>
 801a1e8:	7f3b      	ldrb	r3, [r7, #28]
 801a1ea:	4622      	mov	r2, r4
 801a1ec:	7d39      	ldrb	r1, [r7, #20]
 801a1ee:	f000 f840 	bl	801a272 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>
 801a1f2:	bf00      	nop
 801a1f4:	3724      	adds	r7, #36	; 0x24
 801a1f6:	46bd      	mov	sp, r7
 801a1f8:	bd90      	pop	{r4, r7, pc}

0801a1fa <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801a1fa:	b480      	push	{r7}
 801a1fc:	b083      	sub	sp, #12
 801a1fe:	af00      	add	r7, sp, #0
 801a200:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801a202:	687b      	ldr	r3, [r7, #4]
 801a204:	4618      	mov	r0, r3
 801a206:	370c      	adds	r7, #12
 801a208:	46bd      	mov	sp, r7
 801a20a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a20e:	4770      	bx	lr

0801a210 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() const noexcept
 801a210:	b480      	push	{r7}
 801a212:	b083      	sub	sp, #12
 801a214:	af00      	add	r7, sp, #0
 801a216:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 801a218:	687b      	ldr	r3, [r7, #4]
 801a21a:	4618      	mov	r0, r3
 801a21c:	370c      	adds	r7, #12
 801a21e:	46bd      	mov	sp, r7
 801a220:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a224:	4770      	bx	lr
	...

0801a228 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801a228:	b480      	push	{r7}
 801a22a:	b083      	sub	sp, #12
 801a22c:	af00      	add	r7, sp, #0
 801a22e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801a230:	4b03      	ldr	r3, [pc, #12]	; (801a240 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv+0x18>)
      }
 801a232:	4618      	mov	r0, r3
 801a234:	370c      	adds	r7, #12
 801a236:	46bd      	mov	sp, r7
 801a238:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a23c:	4770      	bx	lr
 801a23e:	bf00      	nop
 801a240:	01c71c71 	.word	0x01c71c71

0801a244 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
      _Tuple_impl(_Tuple_impl&& __in)
 801a244:	b590      	push	{r4, r7, lr}
 801a246:	b083      	sub	sp, #12
 801a248:	af00      	add	r7, sp, #0
 801a24a:	6078      	str	r0, [r7, #4]
 801a24c:	6039      	str	r1, [r7, #0]
      : _Base(std::forward<_Head>(_M_head(__in))) { }
 801a24e:	687c      	ldr	r4, [r7, #4]
 801a250:	6838      	ldr	r0, [r7, #0]
 801a252:	f000 f822 	bl	801a29a <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 801a256:	4603      	mov	r3, r0
 801a258:	4618      	mov	r0, r3
 801a25a:	f7ea fefb 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801a25e:	4603      	mov	r3, r0
 801a260:	4619      	mov	r1, r3
 801a262:	4620      	mov	r0, r4
 801a264:	f7ff fd9b 	bl	8019d9e <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 801a268:	687b      	ldr	r3, [r7, #4]
 801a26a:	4618      	mov	r0, r3
 801a26c:	370c      	adds	r7, #12
 801a26e:	46bd      	mov	sp, r7
 801a270:	bd90      	pop	{r4, r7, pc}

0801a272 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>:

  // See stl_pair.h...
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      inline
      pair<_T1, _T2>::
 801a272:	b5b0      	push	{r4, r5, r7, lr}
 801a274:	b086      	sub	sp, #24
 801a276:	af02      	add	r7, sp, #8
 801a278:	60f8      	str	r0, [r7, #12]
 801a27a:	7239      	strb	r1, [r7, #8]
 801a27c:	607a      	str	r2, [r7, #4]
 801a27e:	703b      	strb	r3, [r7, #0]
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
 801a280:	463a      	mov	r2, r7
 801a282:	f88d 4000 	strb.w	r4, [sp]
 801a286:	462b      	mov	r3, r5
 801a288:	6879      	ldr	r1, [r7, #4]
 801a28a:	68f8      	ldr	r0, [r7, #12]
 801a28c:	f000 f812 	bl	801a2b4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>
      { }
 801a290:	68fb      	ldr	r3, [r7, #12]
 801a292:	4618      	mov	r0, r3
 801a294:	3710      	adds	r7, #16
 801a296:	46bd      	mov	sp, r7
 801a298:	bdb0      	pop	{r4, r5, r7, pc}

0801a29a <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 801a29a:	b580      	push	{r7, lr}
 801a29c:	b082      	sub	sp, #8
 801a29e:	af00      	add	r7, sp, #0
 801a2a0:	6078      	str	r0, [r7, #4]
 801a2a2:	687b      	ldr	r3, [r7, #4]
 801a2a4:	4618      	mov	r0, r3
 801a2a6:	f000 f82a 	bl	801a2fe <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>
 801a2aa:	4603      	mov	r3, r0
 801a2ac:	4618      	mov	r0, r3
 801a2ae:	3708      	adds	r7, #8
 801a2b0:	46bd      	mov	sp, r7
 801a2b2:	bd80      	pop	{r7, pc}

0801a2b4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, std::size_t... _Indexes1,
             typename... _Args2, std::size_t... _Indexes2>
      inline
      pair<_T1, _T2>::
 801a2b4:	b590      	push	{r4, r7, lr}
 801a2b6:	b085      	sub	sp, #20
 801a2b8:	af00      	add	r7, sp, #0
 801a2ba:	60f8      	str	r0, [r7, #12]
 801a2bc:	60b9      	str	r1, [r7, #8]
 801a2be:	607a      	str	r2, [r7, #4]
 801a2c0:	703b      	strb	r3, [r7, #0]
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 801a2c2:	68fc      	ldr	r4, [r7, #12]
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
 801a2c4:	68b8      	ldr	r0, [r7, #8]
 801a2c6:	f000 f826 	bl	801a316 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>
 801a2ca:	4603      	mov	r3, r0
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 801a2cc:	4618      	mov	r0, r3
 801a2ce:	f7ea fec1 	bl	8005054 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801a2d2:	4603      	mov	r3, r0
 801a2d4:	4619      	mov	r1, r3
 801a2d6:	4620      	mov	r0, r4
 801a2d8:	f009 fc52 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801a2dc:	68fb      	ldr	r3, [r7, #12]
 801a2de:	3318      	adds	r3, #24
 801a2e0:	2220      	movs	r2, #32
 801a2e2:	2100      	movs	r1, #0
 801a2e4:	4618      	mov	r0, r3
 801a2e6:	f00a fcc9 	bl	8024c7c <memset>
 801a2ea:	68fb      	ldr	r3, [r7, #12]
 801a2ec:	3318      	adds	r3, #24
 801a2ee:	4618      	mov	r0, r3
 801a2f0:	f7f3 fe47 	bl	800df82 <_ZN6SymbolC1Ev>
      { }
 801a2f4:	68fb      	ldr	r3, [r7, #12]
 801a2f6:	4618      	mov	r0, r3
 801a2f8:	3714      	adds	r7, #20
 801a2fa:	46bd      	mov	sp, r7
 801a2fc:	bd90      	pop	{r4, r7, pc}

0801a2fe <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 801a2fe:	b480      	push	{r7}
 801a300:	b083      	sub	sp, #12
 801a302:	af00      	add	r7, sp, #0
 801a304:	6078      	str	r0, [r7, #4]
 801a306:	687b      	ldr	r3, [r7, #4]
 801a308:	681b      	ldr	r3, [r3, #0]
 801a30a:	4618      	mov	r0, r3
 801a30c:	370c      	adds	r7, #12
 801a30e:	46bd      	mov	sp, r7
 801a310:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a314:	4770      	bx	lr

0801a316 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>:
    get(tuple<_Elements...>& __t) noexcept
 801a316:	b580      	push	{r7, lr}
 801a318:	b082      	sub	sp, #8
 801a31a:	af00      	add	r7, sp, #0
 801a31c:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 801a31e:	687b      	ldr	r3, [r7, #4]
 801a320:	4618      	mov	r0, r3
 801a322:	f000 f805 	bl	801a330 <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>
 801a326:	4603      	mov	r3, r0
 801a328:	4618      	mov	r0, r3
 801a32a:	3708      	adds	r7, #8
 801a32c:	46bd      	mov	sp, r7
 801a32e:	bd80      	pop	{r7, pc}

0801a330 <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 801a330:	b580      	push	{r7, lr}
 801a332:	b082      	sub	sp, #8
 801a334:	af00      	add	r7, sp, #0
 801a336:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 801a338:	6878      	ldr	r0, [r7, #4]
 801a33a:	f7ff ffae 	bl	801a29a <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 801a33e:	4603      	mov	r3, r0
 801a340:	4618      	mov	r0, r3
 801a342:	3708      	adds	r7, #8
 801a344:	46bd      	mov	sp, r7
 801a346:	bd80      	pop	{r7, pc}

0801a348 <_Z41__static_initialization_and_destruction_0ii>:
 801a348:	b590      	push	{r4, r7, lr}
 801a34a:	b0e7      	sub	sp, #412	; 0x19c
 801a34c:	af02      	add	r7, sp, #8
 801a34e:	1d3b      	adds	r3, r7, #4
 801a350:	6018      	str	r0, [r3, #0]
 801a352:	463b      	mov	r3, r7
 801a354:	6019      	str	r1, [r3, #0]
 801a356:	1d3b      	adds	r3, r7, #4
 801a358:	681b      	ldr	r3, [r3, #0]
 801a35a:	2b01      	cmp	r3, #1
 801a35c:	f040 819d 	bne.w	801a69a <_Z41__static_initialization_and_destruction_0ii+0x352>
 801a360:	463b      	mov	r3, r7
 801a362:	681b      	ldr	r3, [r3, #0]
 801a364:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801a368:	4293      	cmp	r3, r2
 801a36a:	f040 8196 	bne.w	801a69a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801a36e:	f107 0314 	add.w	r3, r7, #20
 801a372:	4618      	mov	r0, r3
 801a374:	2322      	movs	r3, #34	; 0x22
 801a376:	461a      	mov	r2, r3
 801a378:	2100      	movs	r1, #0
 801a37a:	f00a fc7f 	bl	8024c7c <memset>
 801a37e:	f107 0314 	add.w	r3, r7, #20
 801a382:	223a      	movs	r2, #58	; 0x3a
 801a384:	701a      	strb	r2, [r3, #0]
 801a386:	f107 0314 	add.w	r3, r7, #20
 801a38a:	2201      	movs	r2, #1
 801a38c:	705a      	strb	r2, [r3, #1]
 801a38e:	f107 0314 	add.w	r3, r7, #20
 801a392:	220a      	movs	r2, #10
 801a394:	709a      	strb	r2, [r3, #2]
 801a396:	f107 0314 	add.w	r3, r7, #20
 801a39a:	220a      	movs	r2, #10
 801a39c:	70da      	strb	r2, [r3, #3]
 801a39e:	f107 0314 	add.w	r3, r7, #20
 801a3a2:	222c      	movs	r2, #44	; 0x2c
 801a3a4:	711a      	strb	r2, [r3, #4]
 801a3a6:	f107 0314 	add.w	r3, r7, #20
 801a3aa:	220c      	movs	r2, #12
 801a3ac:	715a      	strb	r2, [r3, #5]
 801a3ae:	f107 0314 	add.w	r3, r7, #20
 801a3b2:	222e      	movs	r2, #46	; 0x2e
 801a3b4:	719a      	strb	r2, [r3, #6]
 801a3b6:	f107 0314 	add.w	r3, r7, #20
 801a3ba:	220b      	movs	r2, #11
 801a3bc:	71da      	strb	r2, [r3, #7]
 801a3be:	f107 0314 	add.w	r3, r7, #20
 801a3c2:	225b      	movs	r2, #91	; 0x5b
 801a3c4:	721a      	strb	r2, [r3, #8]
 801a3c6:	f107 0314 	add.w	r3, r7, #20
 801a3ca:	220d      	movs	r2, #13
 801a3cc:	725a      	strb	r2, [r3, #9]
 801a3ce:	f107 0314 	add.w	r3, r7, #20
 801a3d2:	225d      	movs	r2, #93	; 0x5d
 801a3d4:	729a      	strb	r2, [r3, #10]
 801a3d6:	f107 0314 	add.w	r3, r7, #20
 801a3da:	220e      	movs	r2, #14
 801a3dc:	72da      	strb	r2, [r3, #11]
 801a3de:	f107 0314 	add.w	r3, r7, #20
 801a3e2:	227c      	movs	r2, #124	; 0x7c
 801a3e4:	731a      	strb	r2, [r3, #12]
 801a3e6:	f107 0314 	add.w	r3, r7, #20
 801a3ea:	2215      	movs	r2, #21
 801a3ec:	735a      	strb	r2, [r3, #13]
 801a3ee:	f107 0314 	add.w	r3, r7, #20
 801a3f2:	2226      	movs	r2, #38	; 0x26
 801a3f4:	739a      	strb	r2, [r3, #14]
 801a3f6:	f107 0314 	add.w	r3, r7, #20
 801a3fa:	2216      	movs	r2, #22
 801a3fc:	73da      	strb	r2, [r3, #15]
 801a3fe:	f107 0314 	add.w	r3, r7, #20
 801a402:	222b      	movs	r2, #43	; 0x2b
 801a404:	741a      	strb	r2, [r3, #16]
 801a406:	f107 0314 	add.w	r3, r7, #20
 801a40a:	221f      	movs	r2, #31
 801a40c:	745a      	strb	r2, [r3, #17]
 801a40e:	f107 0314 	add.w	r3, r7, #20
 801a412:	222d      	movs	r2, #45	; 0x2d
 801a414:	749a      	strb	r2, [r3, #18]
 801a416:	f107 0314 	add.w	r3, r7, #20
 801a41a:	2220      	movs	r2, #32
 801a41c:	74da      	strb	r2, [r3, #19]
 801a41e:	f107 0314 	add.w	r3, r7, #20
 801a422:	222a      	movs	r2, #42	; 0x2a
 801a424:	751a      	strb	r2, [r3, #20]
 801a426:	f107 0314 	add.w	r3, r7, #20
 801a42a:	2221      	movs	r2, #33	; 0x21
 801a42c:	755a      	strb	r2, [r3, #21]
 801a42e:	f107 0314 	add.w	r3, r7, #20
 801a432:	222f      	movs	r2, #47	; 0x2f
 801a434:	759a      	strb	r2, [r3, #22]
 801a436:	f107 0314 	add.w	r3, r7, #20
 801a43a:	2222      	movs	r2, #34	; 0x22
 801a43c:	75da      	strb	r2, [r3, #23]
 801a43e:	f107 0314 	add.w	r3, r7, #20
 801a442:	225e      	movs	r2, #94	; 0x5e
 801a444:	761a      	strb	r2, [r3, #24]
 801a446:	f107 0314 	add.w	r3, r7, #20
 801a44a:	2223      	movs	r2, #35	; 0x23
 801a44c:	765a      	strb	r2, [r3, #25]
 801a44e:	f107 0314 	add.w	r3, r7, #20
 801a452:	2225      	movs	r2, #37	; 0x25
 801a454:	769a      	strb	r2, [r3, #26]
 801a456:	f107 0314 	add.w	r3, r7, #20
 801a45a:	2224      	movs	r2, #36	; 0x24
 801a45c:	76da      	strb	r2, [r3, #27]
 801a45e:	f107 0314 	add.w	r3, r7, #20
 801a462:	2228      	movs	r2, #40	; 0x28
 801a464:	771a      	strb	r2, [r3, #28]
 801a466:	f107 0314 	add.w	r3, r7, #20
 801a46a:	2226      	movs	r2, #38	; 0x26
 801a46c:	775a      	strb	r2, [r3, #29]
 801a46e:	f107 0314 	add.w	r3, r7, #20
 801a472:	2229      	movs	r2, #41	; 0x29
 801a474:	779a      	strb	r2, [r3, #30]
 801a476:	f107 0314 	add.w	r3, r7, #20
 801a47a:	2227      	movs	r2, #39	; 0x27
 801a47c:	77da      	strb	r2, [r3, #31]
 801a47e:	f107 0314 	add.w	r3, r7, #20
 801a482:	2225      	movs	r2, #37	; 0x25
 801a484:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801a488:	f107 030c 	add.w	r3, r7, #12
 801a48c:	f107 0214 	add.w	r2, r7, #20
 801a490:	601a      	str	r2, [r3, #0]
 801a492:	f107 030c 	add.w	r3, r7, #12
 801a496:	2211      	movs	r2, #17
 801a498:	605a      	str	r2, [r3, #4]
 801a49a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a49e:	4618      	mov	r0, r3
 801a4a0:	f7e7 fc54 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801a4a4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801a4a8:	f107 020c 	add.w	r2, r7, #12
 801a4ac:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a4b0:	9300      	str	r3, [sp, #0]
 801a4b2:	460b      	mov	r3, r1
 801a4b4:	ca06      	ldmia	r2, {r1, r2}
 801a4b6:	4885      	ldr	r0, [pc, #532]	; (801a6cc <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801a4b8:	f7e7 fc60 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801a4bc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801a4c0:	4618      	mov	r0, r3
 801a4c2:	f7e7 fc4f 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801a4c6:	2305      	movs	r3, #5
 801a4c8:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801a4cc:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801a4d0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a4d4:	497e      	ldr	r1, [pc, #504]	; (801a6d0 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801a4d6:	4618      	mov	r0, r3
 801a4d8:	f7e6 fe0e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801a4dc:	2306      	movs	r3, #6
 801a4de:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801a4e2:	f207 1263 	addw	r2, r7, #355	; 0x163
 801a4e6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a4ea:	331c      	adds	r3, #28
 801a4ec:	4979      	ldr	r1, [pc, #484]	; (801a6d4 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801a4ee:	4618      	mov	r0, r3
 801a4f0:	f7e6 fe2a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801a4f4:	2307      	movs	r3, #7
 801a4f6:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801a4fa:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801a4fe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a502:	3338      	adds	r3, #56	; 0x38
 801a504:	4974      	ldr	r1, [pc, #464]	; (801a6d8 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801a506:	4618      	mov	r0, r3
 801a508:	f7e6 fe1e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801a50c:	2308      	movs	r3, #8
 801a50e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801a512:	f207 1265 	addw	r2, r7, #357	; 0x165
 801a516:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a51a:	3354      	adds	r3, #84	; 0x54
 801a51c:	496f      	ldr	r1, [pc, #444]	; (801a6dc <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801a51e:	4618      	mov	r0, r3
 801a520:	f7e6 fdea 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801a524:	2309      	movs	r3, #9
 801a526:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801a52a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801a52e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a532:	3370      	adds	r3, #112	; 0x70
 801a534:	496a      	ldr	r1, [pc, #424]	; (801a6e0 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801a536:	4618      	mov	r0, r3
 801a538:	f7e6 fe2e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801a53c:	2310      	movs	r3, #16
 801a53e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801a542:	f207 1267 	addw	r2, r7, #359	; 0x167
 801a546:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a54a:	338c      	adds	r3, #140	; 0x8c
 801a54c:	4965      	ldr	r1, [pc, #404]	; (801a6e4 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801a54e:	4618      	mov	r0, r3
 801a550:	f7e6 fe4a 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801a554:	2311      	movs	r3, #17
 801a556:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801a55a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801a55e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a562:	33a8      	adds	r3, #168	; 0xa8
 801a564:	4960      	ldr	r1, [pc, #384]	; (801a6e8 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801a566:	4618      	mov	r0, r3
 801a568:	f7e6 fe16 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801a56c:	2312      	movs	r3, #18
 801a56e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801a572:	f207 1269 	addw	r2, r7, #361	; 0x169
 801a576:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a57a:	33c4      	adds	r3, #196	; 0xc4
 801a57c:	495b      	ldr	r1, [pc, #364]	; (801a6ec <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801a57e:	4618      	mov	r0, r3
 801a580:	f7e6 fdba 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801a584:	2313      	movs	r3, #19
 801a586:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801a58a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801a58e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a592:	33e0      	adds	r3, #224	; 0xe0
 801a594:	4956      	ldr	r1, [pc, #344]	; (801a6f0 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801a596:	4618      	mov	r0, r3
 801a598:	f7e6 fdd6 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801a59c:	2314      	movs	r3, #20
 801a59e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801a5a2:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801a5a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a5aa:	33fc      	adds	r3, #252	; 0xfc
 801a5ac:	4951      	ldr	r1, [pc, #324]	; (801a6f4 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801a5ae:	4618      	mov	r0, r3
 801a5b0:	f7e6 fe42 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801a5b4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a5b8:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801a5bc:	601a      	str	r2, [r3, #0]
 801a5be:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a5c2:	220a      	movs	r2, #10
 801a5c4:	605a      	str	r2, [r3, #4]
 801a5c6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801a5ca:	4618      	mov	r0, r3
 801a5cc:	f7e7 fc63 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801a5d0:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801a5d4:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801a5d8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801a5dc:	9300      	str	r3, [sp, #0]
 801a5de:	460b      	mov	r3, r1
 801a5e0:	ca06      	ldmia	r2, {r1, r2}
 801a5e2:	4845      	ldr	r0, [pc, #276]	; (801a6f8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801a5e4:	f7e7 fc6f 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801a5e8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801a5ec:	4618      	mov	r0, r3
 801a5ee:	f7e7 fc5e 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801a5f2:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801a5f6:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801a5fa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801a5fe:	429c      	cmp	r4, r3
 801a600:	d004      	beq.n	801a60c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801a602:	3c1c      	subs	r4, #28
 801a604:	4620      	mov	r0, r4
 801a606:	f7e6 fd6a 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801a60a:	e7f6      	b.n	801a5fa <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801a60c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801a610:	2200      	movs	r2, #0
 801a612:	601a      	str	r2, [r3, #0]
 801a614:	605a      	str	r2, [r3, #4]
 801a616:	609a      	str	r2, [r3, #8]
 801a618:	233c      	movs	r3, #60	; 0x3c
 801a61a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801a61e:	231b      	movs	r3, #27
 801a620:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801a624:	231c      	movs	r3, #28
 801a626:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801a62a:	233e      	movs	r3, #62	; 0x3e
 801a62c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801a630:	2319      	movs	r3, #25
 801a632:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801a636:	231a      	movs	r3, #26
 801a638:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801a63c:	233d      	movs	r3, #61	; 0x3d
 801a63e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801a642:	2318      	movs	r3, #24
 801a644:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801a648:	231d      	movs	r3, #29
 801a64a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801a64e:	2321      	movs	r3, #33	; 0x21
 801a650:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801a654:	2317      	movs	r3, #23
 801a656:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801a65a:	231e      	movs	r3, #30
 801a65c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801a660:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801a664:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801a668:	2304      	movs	r3, #4
 801a66a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801a66e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801a672:	4618      	mov	r0, r3
 801a674:	f7e7 fc57 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801a678:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801a67c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801a680:	9300      	str	r3, [sp, #0]
 801a682:	4613      	mov	r3, r2
 801a684:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801a688:	ca06      	ldmia	r2, {r1, r2}
 801a68a:	481c      	ldr	r0, [pc, #112]	; (801a6fc <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801a68c:	f7e7 fc63 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801a690:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801a694:	4618      	mov	r0, r3
 801a696:	f7e7 fc52 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801a69a:	1d3b      	adds	r3, r7, #4
 801a69c:	681b      	ldr	r3, [r3, #0]
 801a69e:	2b00      	cmp	r3, #0
 801a6a0:	d10e      	bne.n	801a6c0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801a6a2:	463b      	mov	r3, r7
 801a6a4:	681b      	ldr	r3, [r3, #0]
 801a6a6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801a6aa:	4293      	cmp	r3, r2
 801a6ac:	d108      	bne.n	801a6c0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801a6ae:	4813      	ldr	r0, [pc, #76]	; (801a6fc <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801a6b0:	f7ef f8c0 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801a6b4:	4810      	ldr	r0, [pc, #64]	; (801a6f8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801a6b6:	f7ef f8ca 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801a6ba:	4804      	ldr	r0, [pc, #16]	; (801a6cc <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801a6bc:	f7ef f8d4 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801a6c0:	bf00      	nop
 801a6c2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801a6c6:	46bd      	mov	sp, r7
 801a6c8:	bd90      	pop	{r4, r7, pc}
 801a6ca:	bf00      	nop
 801a6cc:	2000054c 	.word	0x2000054c
 801a6d0:	08029cb8 	.word	0x08029cb8
 801a6d4:	08029cc0 	.word	0x08029cc0
 801a6d8:	08029d0c 	.word	0x08029d0c
 801a6dc:	08029d14 	.word	0x08029d14
 801a6e0:	08029d1c 	.word	0x08029d1c
 801a6e4:	08029d24 	.word	0x08029d24
 801a6e8:	08029d28 	.word	0x08029d28
 801a6ec:	08029d30 	.word	0x08029d30
 801a6f0:	08029d38 	.word	0x08029d38
 801a6f4:	08029d40 	.word	0x08029d40
 801a6f8:	20000564 	.word	0x20000564
 801a6fc:	2000057c 	.word	0x2000057c

0801a700 <_GLOBAL__sub_I__ZN16Variable_handler12get_instanceEv>:
 801a700:	b580      	push	{r7, lr}
 801a702:	af00      	add	r7, sp, #0
 801a704:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801a708:	2001      	movs	r0, #1
 801a70a:	f7ff fe1d 	bl	801a348 <_Z41__static_initialization_and_destruction_0ii>
 801a70e:	bd80      	pop	{r7, pc}

0801a710 <_GLOBAL__sub_D__ZN16Variable_handler12get_instanceEv>:
 801a710:	b580      	push	{r7, lr}
 801a712:	af00      	add	r7, sp, #0
 801a714:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801a718:	2000      	movs	r0, #0
 801a71a:	f7ff fe15 	bl	801a348 <_Z41__static_initialization_and_destruction_0ii>
 801a71e:	bd80      	pop	{r7, pc}

0801a720 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
#include "Parser.h"

void Parser::parse_variable_or_function_call(Primal_expression *exp)
{
 801a720:	b580      	push	{r7, lr}
 801a722:	b08a      	sub	sp, #40	; 0x28
 801a724:	af00      	add	r7, sp, #0
 801a726:	6078      	str	r0, [r7, #4]
 801a728:	6039      	str	r1, [r7, #0]
	std::string id(std::get<std::string>(token_buffer.value));
 801a72a:	687b      	ldr	r3, [r7, #4]
 801a72c:	3304      	adds	r3, #4
 801a72e:	4618      	mov	r0, r3
 801a730:	f7f9 fe92 	bl	8014458 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 801a734:	4602      	mov	r2, r0
 801a736:	f107 0308 	add.w	r3, r7, #8
 801a73a:	4611      	mov	r1, r2
 801a73c:	4618      	mov	r0, r3
 801a73e:	f009 fa1f 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 801a742:	6878      	ldr	r0, [r7, #4]
 801a744:	f7f9 fc8d 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 801a748:	687b      	ldr	r3, [r7, #4]
 801a74a:	781b      	ldrb	r3, [r3, #0]
 801a74c:	2b26      	cmp	r3, #38	; 0x26
 801a74e:	d113      	bne.n	801a778 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x58>
	{
		exp->type = PRIMAL_FUNCTION_CALL;
 801a750:	683b      	ldr	r3, [r7, #0]
 801a752:	2205      	movs	r2, #5
 801a754:	701a      	strb	r2, [r3, #0]
		exp->content = parse_function_call(id);
 801a756:	f107 0308 	add.w	r3, r7, #8
 801a75a:	4619      	mov	r1, r3
 801a75c:	6878      	ldr	r0, [r7, #4]
 801a75e:	f7f9 f9e1 	bl	8013b24 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a762:	4603      	mov	r3, r0
 801a764:	623b      	str	r3, [r7, #32]
 801a766:	683b      	ldr	r3, [r7, #0]
 801a768:	3304      	adds	r3, #4
 801a76a:	f107 0220 	add.w	r2, r7, #32
 801a76e:	4611      	mov	r1, r2
 801a770:	4618      	mov	r0, r3
 801a772:	f000 fcc4 	bl	801b0fe <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 801a776:	e012      	b.n	801a79e <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x7e>
	}
	else
	{
		exp->type = PRIMAL_VARIABLE;
 801a778:	683b      	ldr	r3, [r7, #0]
 801a77a:	2204      	movs	r2, #4
 801a77c:	701a      	strb	r2, [r3, #0]
		exp->content = parse_variable(id);
 801a77e:	f107 0308 	add.w	r3, r7, #8
 801a782:	4619      	mov	r1, r3
 801a784:	6878      	ldr	r0, [r7, #4]
 801a786:	f7f9 f90b 	bl	80139a0 <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a78a:	4603      	mov	r3, r0
 801a78c:	627b      	str	r3, [r7, #36]	; 0x24
 801a78e:	683b      	ldr	r3, [r7, #0]
 801a790:	3304      	adds	r3, #4
 801a792:	f107 0224 	add.w	r2, r7, #36	; 0x24
 801a796:	4611      	mov	r1, r2
 801a798:	4618      	mov	r0, r3
 801a79a:	f000 fcda 	bl	801b152 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id(std::get<std::string>(token_buffer.value));
 801a79e:	f107 0308 	add.w	r3, r7, #8
 801a7a2:	4618      	mov	r0, r3
 801a7a4:	f009 f81d 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 801a7a8:	bf00      	nop
 801a7aa:	3728      	adds	r7, #40	; 0x28
 801a7ac:	46bd      	mov	sp, r7
 801a7ae:	bd80      	pop	{r7, pc}

0801a7b0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      variant() = default;
 801a7b0:	b580      	push	{r7, lr}
 801a7b2:	b082      	sub	sp, #8
 801a7b4:	af00      	add	r7, sp, #0
 801a7b6:	6078      	str	r0, [r7, #4]
 801a7b8:	687b      	ldr	r3, [r7, #4]
 801a7ba:	4618      	mov	r0, r3
 801a7bc:	f000 fd3e 	bl	801b23c <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 801a7c0:	687b      	ldr	r3, [r7, #4]
 801a7c2:	4618      	mov	r0, r3
 801a7c4:	3708      	adds	r7, #8
 801a7c6:	46bd      	mov	sp, r7
 801a7c8:	bd80      	pop	{r7, pc}

0801a7ca <_ZN17Primal_expressionC1Ev>:
	PRIMAL_STRING,
	PRIMAL_VARIABLE,
	PRIMAL_FUNCTION_CALL
}primal_type;

class Primal_expression
 801a7ca:	b580      	push	{r7, lr}
 801a7cc:	b082      	sub	sp, #8
 801a7ce:	af00      	add	r7, sp, #0
 801a7d0:	6078      	str	r0, [r7, #4]
 801a7d2:	687b      	ldr	r3, [r7, #4]
 801a7d4:	3304      	adds	r3, #4
 801a7d6:	4618      	mov	r0, r3
 801a7d8:	f7ff ffea 	bl	801a7b0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 801a7dc:	687b      	ldr	r3, [r7, #4]
 801a7de:	4618      	mov	r0, r3
 801a7e0:	3708      	adds	r7, #8
 801a7e2:	46bd      	mov	sp, r7
 801a7e4:	bd80      	pop	{r7, pc}
	...

0801a7e8 <_ZN6Parser23parse_primal_expressionEv>:

Primal_expression* Parser::parse_primal_expression()
{
 801a7e8:	b590      	push	{r4, r7, lr}
 801a7ea:	b093      	sub	sp, #76	; 0x4c
 801a7ec:	af00      	add	r7, sp, #0
 801a7ee:	6078      	str	r0, [r7, #4]
	auto exp = new Primal_expression();
 801a7f0:	2020      	movs	r0, #32
 801a7f2:	f008 fd54 	bl	802329e <_Znwj>
 801a7f6:	4603      	mov	r3, r0
 801a7f8:	461c      	mov	r4, r3
 801a7fa:	4620      	mov	r0, r4
 801a7fc:	2320      	movs	r3, #32
 801a7fe:	461a      	mov	r2, r3
 801a800:	2100      	movs	r1, #0
 801a802:	f00a fa3b 	bl	8024c7c <memset>
 801a806:	4620      	mov	r0, r4
 801a808:	f7ff ffdf 	bl	801a7ca <_ZN17Primal_expressionC1Ev>
 801a80c:	647c      	str	r4, [r7, #68]	; 0x44
	switch(token_buffer.type)
 801a80e:	687b      	ldr	r3, [r7, #4]
 801a810:	781b      	ldrb	r3, [r3, #0]
 801a812:	3b02      	subs	r3, #2
 801a814:	2b0d      	cmp	r3, #13
 801a816:	f200 808b 	bhi.w	801a930 <_ZN6Parser23parse_primal_expressionEv+0x148>
 801a81a:	a201      	add	r2, pc, #4	; (adr r2, 801a820 <_ZN6Parser23parse_primal_expressionEv+0x38>)
 801a81c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a820:	0801a927 	.word	0x0801a927
 801a824:	0801a89b 	.word	0x0801a89b
 801a828:	0801a8c1 	.word	0x0801a8c1
 801a82c:	0801a859 	.word	0x0801a859
 801a830:	0801a87b 	.word	0x0801a87b
 801a834:	0801a931 	.word	0x0801a931
 801a838:	0801a931 	.word	0x0801a931
 801a83c:	0801a931 	.word	0x0801a931
 801a840:	0801a931 	.word	0x0801a931
 801a844:	0801a931 	.word	0x0801a931
 801a848:	0801a931 	.word	0x0801a931
 801a84c:	0801a931 	.word	0x0801a931
 801a850:	0801a931 	.word	0x0801a931
 801a854:	0801a8e7 	.word	0x0801a8e7
	{
	case TOKEN_TRUE:
		exp->type = PRIMAL_BOOL;
 801a858:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a85a:	2200      	movs	r2, #0
 801a85c:	701a      	strb	r2, [r3, #0]
		exp->content = true;
 801a85e:	2301      	movs	r3, #1
 801a860:	73bb      	strb	r3, [r7, #14]
 801a862:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a864:	3304      	adds	r3, #4
 801a866:	f107 020e 	add.w	r2, r7, #14
 801a86a:	4611      	mov	r1, r2
 801a86c:	4618      	mov	r0, r3
 801a86e:	f000 fcf2 	bl	801b256 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 801a872:	6878      	ldr	r0, [r7, #4]
 801a874:	f7f9 fbf5 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		break;
 801a878:	e077      	b.n	801a96a <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FALSE:
		exp->type = PRIMAL_BOOL;
 801a87a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a87c:	2200      	movs	r2, #0
 801a87e:	701a      	strb	r2, [r3, #0]
		exp->content = false;
 801a880:	2300      	movs	r3, #0
 801a882:	73fb      	strb	r3, [r7, #15]
 801a884:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a886:	3304      	adds	r3, #4
 801a888:	f107 020f 	add.w	r2, r7, #15
 801a88c:	4611      	mov	r1, r2
 801a88e:	4618      	mov	r0, r3
 801a890:	f000 fce1 	bl	801b256 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 801a894:	6878      	ldr	r0, [r7, #4]
 801a896:	f7f9 fbe4 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	case TOKEN_INT:
		exp->type = PRIMAL_INT;
 801a89a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a89c:	2201      	movs	r2, #1
 801a89e:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<int>(token_buffer.value);
 801a8a0:	687b      	ldr	r3, [r7, #4]
 801a8a2:	3304      	adds	r3, #4
 801a8a4:	4618      	mov	r0, r3
 801a8a6:	f000 fd01 	bl	801b2ac <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 801a8aa:	4602      	mov	r2, r0
 801a8ac:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a8ae:	3304      	adds	r3, #4
 801a8b0:	4611      	mov	r1, r2
 801a8b2:	4618      	mov	r0, r3
 801a8b4:	f000 fd06 	bl	801b2c4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 801a8b8:	6878      	ldr	r0, [r7, #4]
 801a8ba:	f7f9 fbd2 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		break;
 801a8be:	e054      	b.n	801a96a <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_FLOAT:
		exp->type = PRIMAL_FLOAT;
 801a8c0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a8c2:	2202      	movs	r2, #2
 801a8c4:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<float>(token_buffer.value);
 801a8c6:	687b      	ldr	r3, [r7, #4]
 801a8c8:	3304      	adds	r3, #4
 801a8ca:	4618      	mov	r0, r3
 801a8cc:	f000 fd24 	bl	801b318 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 801a8d0:	4602      	mov	r2, r0
 801a8d2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a8d4:	3304      	adds	r3, #4
 801a8d6:	4611      	mov	r1, r2
 801a8d8:	4618      	mov	r0, r3
 801a8da:	f000 fd29 	bl	801b330 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 801a8de:	6878      	ldr	r0, [r7, #4]
 801a8e0:	f7f9 fbbf 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		break;
 801a8e4:	e041      	b.n	801a96a <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_STRING:
		exp->type = PRIMAL_STRING;
 801a8e6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a8e8:	2203      	movs	r2, #3
 801a8ea:	701a      	strb	r2, [r3, #0]
		exp->content = std::string(std::get<std::string>(token_buffer.value));
 801a8ec:	687b      	ldr	r3, [r7, #4]
 801a8ee:	3304      	adds	r3, #4
 801a8f0:	4618      	mov	r0, r3
 801a8f2:	f7f9 fdb1 	bl	8014458 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 801a8f6:	4602      	mov	r2, r0
 801a8f8:	f107 0310 	add.w	r3, r7, #16
 801a8fc:	4611      	mov	r1, r2
 801a8fe:	4618      	mov	r0, r3
 801a900:	f009 f93e 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801a904:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 801a906:	3304      	adds	r3, #4
 801a908:	f107 0210 	add.w	r2, r7, #16
 801a90c:	4611      	mov	r1, r2
 801a90e:	4618      	mov	r0, r3
 801a910:	f000 fd38 	bl	801b384 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 801a914:	f107 0310 	add.w	r3, r7, #16
 801a918:	4618      	mov	r0, r3
 801a91a:	f008 ff62 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		get_next_token();
 801a91e:	6878      	ldr	r0, [r7, #4]
 801a920:	f7f9 fb9f 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		break;
 801a924:	e021      	b.n	801a96a <_ZN6Parser23parse_primal_expressionEv+0x182>
	case TOKEN_IDENTIFIER:
		parse_variable_or_function_call(exp);
 801a926:	6c79      	ldr	r1, [r7, #68]	; 0x44
 801a928:	6878      	ldr	r0, [r7, #4]
 801a92a:	f7ff fef9 	bl	801a720 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>
		break;
 801a92e:	e01c      	b.n	801a96a <_ZN6Parser23parse_primal_expressionEv+0x182>
	default:
		Transmitter::report_error("expression");
 801a930:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a934:	4618      	mov	r0, r3
 801a936:	f008 fcc3 	bl	80232c0 <_ZNSaIcEC1Ev>
 801a93a:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801a93e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801a942:	490c      	ldr	r1, [pc, #48]	; (801a974 <_ZN6Parser23parse_primal_expressionEv+0x18c>)
 801a944:	4618      	mov	r0, r3
 801a946:	f7e7 fa54 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801a94a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801a94e:	4618      	mov	r0, r3
 801a950:	f7fd ff18 	bl	8018784 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a954:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801a958:	4618      	mov	r0, r3
 801a95a:	f008 ff42 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801a95e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801a962:	4618      	mov	r0, r3
 801a964:	f008 fcad 	bl	80232c2 <_ZNSaIcED1Ev>
		break;
 801a968:	bf00      	nop
	}
	return exp;
 801a96a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 801a96c:	4618      	mov	r0, r3
 801a96e:	374c      	adds	r7, #76	; 0x4c
 801a970:	46bd      	mov	sp, r7
 801a972:	bd90      	pop	{r4, r7, pc}
 801a974:	08029d44 	.word	0x08029d44

0801a978 <_ZN6Parser23parse_nested_expressionEv>:

Expression* Parser::parse_nested_expression()
{
 801a978:	b580      	push	{r7, lr}
 801a97a:	b08a      	sub	sp, #40	; 0x28
 801a97c:	af00      	add	r7, sp, #0
 801a97e:	6078      	str	r0, [r7, #4]
	auto exp = parse_expression();
 801a980:	6878      	ldr	r0, [r7, #4]
 801a982:	f000 fb73 	bl	801b06c <_ZN6Parser16parse_expressionEv>
 801a986:	6278      	str	r0, [r7, #36]	; 0x24
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 801a988:	f107 0320 	add.w	r3, r7, #32
 801a98c:	4618      	mov	r0, r3
 801a98e:	f008 fc97 	bl	80232c0 <_ZNSaIcEC1Ev>
 801a992:	f107 0220 	add.w	r2, r7, #32
 801a996:	f107 0308 	add.w	r3, r7, #8
 801a99a:	490e      	ldr	r1, [pc, #56]	; (801a9d4 <_ZN6Parser23parse_nested_expressionEv+0x5c>)
 801a99c:	4618      	mov	r0, r3
 801a99e:	f7e7 fa28 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801a9a2:	f107 0308 	add.w	r3, r7, #8
 801a9a6:	461a      	mov	r2, r3
 801a9a8:	2127      	movs	r1, #39	; 0x27
 801a9aa:	6878      	ldr	r0, [r7, #4]
 801a9ac:	f7f9 f836 	bl	8013a1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801a9b0:	f107 0308 	add.w	r3, r7, #8
 801a9b4:	4618      	mov	r0, r3
 801a9b6:	f008 ff14 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801a9ba:	f107 0320 	add.w	r3, r7, #32
 801a9be:	4618      	mov	r0, r3
 801a9c0:	f008 fc7f 	bl	80232c2 <_ZNSaIcED1Ev>
	get_next_token();
 801a9c4:	6878      	ldr	r0, [r7, #4]
 801a9c6:	f7f9 fb4c 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	return exp;
 801a9ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 801a9cc:	4618      	mov	r0, r3
 801a9ce:	3728      	adds	r7, #40	; 0x28
 801a9d0:	46bd      	mov	sp, r7
 801a9d2:	bd80      	pop	{r7, pc}
 801a9d4:	08029d50 	.word	0x08029d50

0801a9d8 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>:
 801a9d8:	b580      	push	{r7, lr}
 801a9da:	b082      	sub	sp, #8
 801a9dc:	af00      	add	r7, sp, #0
 801a9de:	6078      	str	r0, [r7, #4]
 801a9e0:	687b      	ldr	r3, [r7, #4]
 801a9e2:	4618      	mov	r0, r3
 801a9e4:	f000 fd45 	bl	801b472 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>
 801a9e8:	687b      	ldr	r3, [r7, #4]
 801a9ea:	4618      	mov	r0, r3
 801a9ec:	3708      	adds	r7, #8
 801a9ee:	46bd      	mov	sp, r7
 801a9f0:	bd80      	pop	{r7, pc}

0801a9f2 <_ZN19Priority_expressionC1Ev>:
	std::variant<bool, int, float, std::string, Variable*, Function_call*> content;
};

class Expression;

class Priority_expression
 801a9f2:	b580      	push	{r7, lr}
 801a9f4:	b082      	sub	sp, #8
 801a9f6:	af00      	add	r7, sp, #0
 801a9f8:	6078      	str	r0, [r7, #4]
 801a9fa:	687b      	ldr	r3, [r7, #4]
 801a9fc:	4618      	mov	r0, r3
 801a9fe:	f7ff ffeb 	bl	801a9d8 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>
 801aa02:	687b      	ldr	r3, [r7, #4]
 801aa04:	4618      	mov	r0, r3
 801aa06:	3708      	adds	r7, #8
 801aa08:	46bd      	mov	sp, r7
 801aa0a:	bd80      	pop	{r7, pc}

0801aa0c <_ZN6Parser25parse_priority_expressionEv>:

Priority_expression* Parser::parse_priority_expression()
{
 801aa0c:	b590      	push	{r4, r7, lr}
 801aa0e:	b087      	sub	sp, #28
 801aa10:	af00      	add	r7, sp, #0
 801aa12:	6078      	str	r0, [r7, #4]
	auto exp = new Priority_expression();
 801aa14:	2008      	movs	r0, #8
 801aa16:	f008 fc42 	bl	802329e <_Znwj>
 801aa1a:	4603      	mov	r3, r0
 801aa1c:	461c      	mov	r4, r3
 801aa1e:	2300      	movs	r3, #0
 801aa20:	6023      	str	r3, [r4, #0]
 801aa22:	2300      	movs	r3, #0
 801aa24:	7123      	strb	r3, [r4, #4]
 801aa26:	4620      	mov	r0, r4
 801aa28:	f7ff ffe3 	bl	801a9f2 <_ZN19Priority_expressionC1Ev>
 801aa2c:	617c      	str	r4, [r7, #20]
	if(token_buffer.type == TOKEN_LEFT_BRACKET)
 801aa2e:	687b      	ldr	r3, [r7, #4]
 801aa30:	781b      	ldrb	r3, [r3, #0]
 801aa32:	2b26      	cmp	r3, #38	; 0x26
 801aa34:	d10f      	bne.n	801aa56 <_ZN6Parser25parse_priority_expressionEv+0x4a>
	{
		get_next_token();
 801aa36:	6878      	ldr	r0, [r7, #4]
 801aa38:	f7f9 fb13 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		exp->exp = parse_nested_expression();
 801aa3c:	6878      	ldr	r0, [r7, #4]
 801aa3e:	f7ff ff9b 	bl	801a978 <_ZN6Parser23parse_nested_expressionEv>
 801aa42:	4603      	mov	r3, r0
 801aa44:	60fb      	str	r3, [r7, #12]
 801aa46:	697b      	ldr	r3, [r7, #20]
 801aa48:	f107 020c 	add.w	r2, r7, #12
 801aa4c:	4611      	mov	r1, r2
 801aa4e:	4618      	mov	r0, r3
 801aa50:	f000 fd1c 	bl	801b48c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
 801aa54:	e00b      	b.n	801aa6e <_ZN6Parser25parse_priority_expressionEv+0x62>
	}
	else
	{
		exp->exp = parse_primal_expression();
 801aa56:	6878      	ldr	r0, [r7, #4]
 801aa58:	f7ff fec6 	bl	801a7e8 <_ZN6Parser23parse_primal_expressionEv>
 801aa5c:	4603      	mov	r3, r0
 801aa5e:	613b      	str	r3, [r7, #16]
 801aa60:	697b      	ldr	r3, [r7, #20]
 801aa62:	f107 0210 	add.w	r2, r7, #16
 801aa66:	4611      	mov	r1, r2
 801aa68:	4618      	mov	r0, r3
 801aa6a:	f000 fd39 	bl	801b4e0 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
	}
	return exp;
 801aa6e:	697b      	ldr	r3, [r7, #20]
}
 801aa70:	4618      	mov	r0, r3
 801aa72:	371c      	adds	r7, #28
 801aa74:	46bd      	mov	sp, r7
 801aa76:	bd90      	pop	{r4, r7, pc}

0801aa78 <_ZN6Parser20match_unary_operatorEP16Unary_expression>:

bool Parser::match_unary_operator(Unary_expression* exp)
{
 801aa78:	b480      	push	{r7}
 801aa7a:	b083      	sub	sp, #12
 801aa7c:	af00      	add	r7, sp, #0
 801aa7e:	6078      	str	r0, [r7, #4]
 801aa80:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801aa82:	687b      	ldr	r3, [r7, #4]
 801aa84:	781b      	ldrb	r3, [r3, #0]
 801aa86:	2b17      	cmp	r3, #23
 801aa88:	d005      	beq.n	801aa96 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x1e>
 801aa8a:	2b20      	cmp	r3, #32
 801aa8c:	d107      	bne.n	801aa9e <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x26>
	{
	case TOKEN_MINUS:
		exp->op = UN_OP_MINUS;
 801aa8e:	683b      	ldr	r3, [r7, #0]
 801aa90:	2201      	movs	r2, #1
 801aa92:	711a      	strb	r2, [r3, #4]
		break;
 801aa94:	e005      	b.n	801aaa2 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	case TOKEN_EXCLAMATION:
		exp->op = UN_OP_EXCLAMATION;
 801aa96:	683b      	ldr	r3, [r7, #0]
 801aa98:	2202      	movs	r2, #2
 801aa9a:	711a      	strb	r2, [r3, #4]
		break;
 801aa9c:	e001      	b.n	801aaa2 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	default:
		return false;
 801aa9e:	2300      	movs	r3, #0
 801aaa0:	e000      	b.n	801aaa4 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2c>
	}
	return true;
 801aaa2:	2301      	movs	r3, #1
}
 801aaa4:	4618      	mov	r0, r3
 801aaa6:	370c      	adds	r7, #12
 801aaa8:	46bd      	mov	sp, r7
 801aaaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801aaae:	4770      	bx	lr

0801aab0 <_ZN6Parser22parse_unary_expressionEv>:

Unary_expression* Parser::parse_unary_expression()
{
 801aab0:	b580      	push	{r7, lr}
 801aab2:	b084      	sub	sp, #16
 801aab4:	af00      	add	r7, sp, #0
 801aab6:	6078      	str	r0, [r7, #4]
	auto exp = new Unary_expression();
 801aab8:	2008      	movs	r0, #8
 801aaba:	f008 fbf0 	bl	802329e <_Znwj>
 801aabe:	4603      	mov	r3, r0
 801aac0:	2200      	movs	r2, #0
 801aac2:	601a      	str	r2, [r3, #0]
 801aac4:	2200      	movs	r2, #0
 801aac6:	711a      	strb	r2, [r3, #4]
 801aac8:	60fb      	str	r3, [r7, #12]
	if(match_unary_operator(exp))
 801aaca:	68f9      	ldr	r1, [r7, #12]
 801aacc:	6878      	ldr	r0, [r7, #4]
 801aace:	f7ff ffd3 	bl	801aa78 <_ZN6Parser20match_unary_operatorEP16Unary_expression>
 801aad2:	4603      	mov	r3, r0
 801aad4:	2b00      	cmp	r3, #0
 801aad6:	d002      	beq.n	801aade <_ZN6Parser22parse_unary_expressionEv+0x2e>
	{
		get_next_token();
 801aad8:	6878      	ldr	r0, [r7, #4]
 801aada:	f7f9 fac2 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
	}
	exp->prior_exp = parse_priority_expression();
 801aade:	6878      	ldr	r0, [r7, #4]
 801aae0:	f7ff ff94 	bl	801aa0c <_ZN6Parser25parse_priority_expressionEv>
 801aae4:	4602      	mov	r2, r0
 801aae6:	68fb      	ldr	r3, [r7, #12]
 801aae8:	601a      	str	r2, [r3, #0]
	return exp;
 801aaea:	68fb      	ldr	r3, [r7, #12]
}
 801aaec:	4618      	mov	r0, r3
 801aaee:	3710      	adds	r7, #16
 801aaf0:	46bd      	mov	sp, r7
 801aaf2:	bd80      	pop	{r7, pc}

0801aaf4 <_ZN6Parser22parse_power_expressionEv>:

Power_expression* Parser::parse_power_expression()
{
 801aaf4:	b580      	push	{r7, lr}
 801aaf6:	b084      	sub	sp, #16
 801aaf8:	af00      	add	r7, sp, #0
 801aafa:	6078      	str	r0, [r7, #4]
	auto exp = new Power_expression();
 801aafc:	2008      	movs	r0, #8
 801aafe:	f008 fbce 	bl	802329e <_Znwj>
 801ab02:	4603      	mov	r3, r0
 801ab04:	2200      	movs	r2, #0
 801ab06:	601a      	str	r2, [r3, #0]
 801ab08:	2200      	movs	r2, #0
 801ab0a:	605a      	str	r2, [r3, #4]
 801ab0c:	60fb      	str	r3, [r7, #12]
	exp->left_un_exp = parse_unary_expression();
 801ab0e:	6878      	ldr	r0, [r7, #4]
 801ab10:	f7ff ffce 	bl	801aab0 <_ZN6Parser22parse_unary_expressionEv>
 801ab14:	4602      	mov	r2, r0
 801ab16:	68fb      	ldr	r3, [r7, #12]
 801ab18:	601a      	str	r2, [r3, #0]
	if(token_buffer.type == TOKEN_POWER)
 801ab1a:	687b      	ldr	r3, [r7, #4]
 801ab1c:	781b      	ldrb	r3, [r3, #0]
 801ab1e:	2b23      	cmp	r3, #35	; 0x23
 801ab20:	d109      	bne.n	801ab36 <_ZN6Parser22parse_power_expressionEv+0x42>
	{
		get_next_token();
 801ab22:	6878      	ldr	r0, [r7, #4]
 801ab24:	f7f9 fa9d 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		exp->right_un_exp = parse_unary_expression();
 801ab28:	6878      	ldr	r0, [r7, #4]
 801ab2a:	f7ff ffc1 	bl	801aab0 <_ZN6Parser22parse_unary_expressionEv>
 801ab2e:	4602      	mov	r2, r0
 801ab30:	68fb      	ldr	r3, [r7, #12]
 801ab32:	605a      	str	r2, [r3, #4]
 801ab34:	e002      	b.n	801ab3c <_ZN6Parser22parse_power_expressionEv+0x48>
	}
	else
	{
		exp->right_un_exp = nullptr;
 801ab36:	68fb      	ldr	r3, [r7, #12]
 801ab38:	2200      	movs	r2, #0
 801ab3a:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801ab3c:	68fb      	ldr	r3, [r7, #12]
}
 801ab3e:	4618      	mov	r0, r3
 801ab40:	3710      	adds	r7, #16
 801ab42:	46bd      	mov	sp, r7
 801ab44:	bd80      	pop	{r7, pc}

0801ab46 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>:

bool Parser::match_multiply_operator(Multiply_expression* exp)
{
 801ab46:	b580      	push	{r7, lr}
 801ab48:	b084      	sub	sp, #16
 801ab4a:	af00      	add	r7, sp, #0
 801ab4c:	6078      	str	r0, [r7, #4]
 801ab4e:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801ab50:	687b      	ldr	r3, [r7, #4]
 801ab52:	781b      	ldrb	r3, [r3, #0]
 801ab54:	2b24      	cmp	r3, #36	; 0x24
 801ab56:	d01c      	beq.n	801ab92 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x4c>
 801ab58:	2b24      	cmp	r3, #36	; 0x24
 801ab5a:	dc25      	bgt.n	801aba8 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
 801ab5c:	2b21      	cmp	r3, #33	; 0x21
 801ab5e:	d002      	beq.n	801ab66 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x20>
 801ab60:	2b22      	cmp	r3, #34	; 0x22
 801ab62:	d00b      	beq.n	801ab7c <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x36>
 801ab64:	e020      	b.n	801aba8 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
	{
	case TOKEN_MULTIPLY:
		exp->ops.push_back(MULT_OP_MULTIPLY);
 801ab66:	683b      	ldr	r3, [r7, #0]
 801ab68:	330c      	adds	r3, #12
 801ab6a:	2201      	movs	r2, #1
 801ab6c:	737a      	strb	r2, [r7, #13]
 801ab6e:	f107 020d 	add.w	r2, r7, #13
 801ab72:	4611      	mov	r1, r2
 801ab74:	4618      	mov	r0, r3
 801ab76:	f000 fcdd 	bl	801b534 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801ab7a:	e017      	b.n	801abac <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_DIVIDE:
		exp->ops.push_back(MULT_OP_DIVIDE);
 801ab7c:	683b      	ldr	r3, [r7, #0]
 801ab7e:	330c      	adds	r3, #12
 801ab80:	2202      	movs	r2, #2
 801ab82:	73ba      	strb	r2, [r7, #14]
 801ab84:	f107 020e 	add.w	r2, r7, #14
 801ab88:	4611      	mov	r1, r2
 801ab8a:	4618      	mov	r0, r3
 801ab8c:	f000 fcd2 	bl	801b534 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801ab90:	e00c      	b.n	801abac <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_MODULO:
		exp->ops.push_back(MULT_OP_MODULO);
 801ab92:	683b      	ldr	r3, [r7, #0]
 801ab94:	330c      	adds	r3, #12
 801ab96:	2203      	movs	r2, #3
 801ab98:	73fa      	strb	r2, [r7, #15]
 801ab9a:	f107 020f 	add.w	r2, r7, #15
 801ab9e:	4611      	mov	r1, r2
 801aba0:	4618      	mov	r0, r3
 801aba2:	f000 fcc7 	bl	801b534 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 801aba6:	e001      	b.n	801abac <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	default:
		return false;
 801aba8:	2300      	movs	r3, #0
 801abaa:	e000      	b.n	801abae <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x68>
	}
	return true;
 801abac:	2301      	movs	r3, #1
}
 801abae:	4618      	mov	r0, r3
 801abb0:	3710      	adds	r7, #16
 801abb2:	46bd      	mov	sp, r7
 801abb4:	bd80      	pop	{r7, pc}

0801abb6 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801abb6:	b580      	push	{r7, lr}
 801abb8:	b082      	sub	sp, #8
 801abba:	af00      	add	r7, sp, #0
 801abbc:	6078      	str	r0, [r7, #4]
 801abbe:	687b      	ldr	r3, [r7, #4]
 801abc0:	4618      	mov	r0, r3
 801abc2:	f000 fcc8 	bl	801b556 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>
 801abc6:	687b      	ldr	r3, [r7, #4]
 801abc8:	4618      	mov	r0, r3
 801abca:	3708      	adds	r7, #8
 801abcc:	46bd      	mov	sp, r7
 801abce:	bd80      	pop	{r7, pc}

0801abd0 <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801abd0:	b580      	push	{r7, lr}
 801abd2:	b082      	sub	sp, #8
 801abd4:	af00      	add	r7, sp, #0
 801abd6:	6078      	str	r0, [r7, #4]
 801abd8:	687b      	ldr	r3, [r7, #4]
 801abda:	4618      	mov	r0, r3
 801abdc:	f7ff ffeb 	bl	801abb6 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>
 801abe0:	687b      	ldr	r3, [r7, #4]
 801abe2:	4618      	mov	r0, r3
 801abe4:	3708      	adds	r7, #8
 801abe6:	46bd      	mov	sp, r7
 801abe8:	bd80      	pop	{r7, pc}

0801abea <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801abea:	b580      	push	{r7, lr}
 801abec:	b082      	sub	sp, #8
 801abee:	af00      	add	r7, sp, #0
 801abf0:	6078      	str	r0, [r7, #4]
 801abf2:	687b      	ldr	r3, [r7, #4]
 801abf4:	4618      	mov	r0, r3
 801abf6:	f000 fcbe 	bl	801b576 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>
 801abfa:	687b      	ldr	r3, [r7, #4]
 801abfc:	4618      	mov	r0, r3
 801abfe:	3708      	adds	r7, #8
 801ac00:	46bd      	mov	sp, r7
 801ac02:	bd80      	pop	{r7, pc}

0801ac04 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801ac04:	b580      	push	{r7, lr}
 801ac06:	b082      	sub	sp, #8
 801ac08:	af00      	add	r7, sp, #0
 801ac0a:	6078      	str	r0, [r7, #4]
 801ac0c:	687b      	ldr	r3, [r7, #4]
 801ac0e:	4618      	mov	r0, r3
 801ac10:	f7ff ffeb 	bl	801abea <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>
 801ac14:	687b      	ldr	r3, [r7, #4]
 801ac16:	4618      	mov	r0, r3
 801ac18:	3708      	adds	r7, #8
 801ac1a:	46bd      	mov	sp, r7
 801ac1c:	bd80      	pop	{r7, pc}

0801ac1e <_ZN19Multiply_expressionC1Ev>:
	MULT_OP_MULTIPLY,
	MULT_OP_DIVIDE,
	MULT_OP_MODULO
}mult_operator;

class Multiply_expression
 801ac1e:	b580      	push	{r7, lr}
 801ac20:	b082      	sub	sp, #8
 801ac22:	af00      	add	r7, sp, #0
 801ac24:	6078      	str	r0, [r7, #4]
 801ac26:	687b      	ldr	r3, [r7, #4]
 801ac28:	4618      	mov	r0, r3
 801ac2a:	f7ff ffd1 	bl	801abd0 <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>
 801ac2e:	687b      	ldr	r3, [r7, #4]
 801ac30:	330c      	adds	r3, #12
 801ac32:	4618      	mov	r0, r3
 801ac34:	f7ff ffe6 	bl	801ac04 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>
 801ac38:	687b      	ldr	r3, [r7, #4]
 801ac3a:	4618      	mov	r0, r3
 801ac3c:	3708      	adds	r7, #8
 801ac3e:	46bd      	mov	sp, r7
 801ac40:	bd80      	pop	{r7, pc}

0801ac42 <_ZN6Parser25parse_multiply_expressionEv>:

Multiply_expression* Parser::parse_multiply_expression()
{
 801ac42:	b590      	push	{r4, r7, lr}
 801ac44:	b087      	sub	sp, #28
 801ac46:	af00      	add	r7, sp, #0
 801ac48:	6078      	str	r0, [r7, #4]
	auto exp = new Multiply_expression();
 801ac4a:	2018      	movs	r0, #24
 801ac4c:	f008 fb27 	bl	802329e <_Znwj>
 801ac50:	4603      	mov	r3, r0
 801ac52:	461c      	mov	r4, r3
 801ac54:	4622      	mov	r2, r4
 801ac56:	2300      	movs	r3, #0
 801ac58:	6013      	str	r3, [r2, #0]
 801ac5a:	6053      	str	r3, [r2, #4]
 801ac5c:	6093      	str	r3, [r2, #8]
 801ac5e:	60d3      	str	r3, [r2, #12]
 801ac60:	6113      	str	r3, [r2, #16]
 801ac62:	6153      	str	r3, [r2, #20]
 801ac64:	4620      	mov	r0, r4
 801ac66:	f7ff ffda 	bl	801ac1e <_ZN19Multiply_expressionC1Ev>
 801ac6a:	617c      	str	r4, [r7, #20]
	exp->pow_exps.push_back(parse_power_expression());
 801ac6c:	697c      	ldr	r4, [r7, #20]
 801ac6e:	6878      	ldr	r0, [r7, #4]
 801ac70:	f7ff ff40 	bl	801aaf4 <_ZN6Parser22parse_power_expressionEv>
 801ac74:	4603      	mov	r3, r0
 801ac76:	60fb      	str	r3, [r7, #12]
 801ac78:	f107 030c 	add.w	r3, r7, #12
 801ac7c:	4619      	mov	r1, r3
 801ac7e:	4620      	mov	r0, r4
 801ac80:	f000 fc89 	bl	801b596 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801ac84:	6979      	ldr	r1, [r7, #20]
 801ac86:	6878      	ldr	r0, [r7, #4]
 801ac88:	f7ff ff5d 	bl	801ab46 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>
 801ac8c:	4603      	mov	r3, r0
 801ac8e:	2b00      	cmp	r3, #0
 801ac90:	d00f      	beq.n	801acb2 <_ZN6Parser25parse_multiply_expressionEv+0x70>
	{
		get_next_token();
 801ac92:	6878      	ldr	r0, [r7, #4]
 801ac94:	f7f9 f9e5 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		exp->pow_exps.push_back(parse_power_expression());
 801ac98:	697c      	ldr	r4, [r7, #20]
 801ac9a:	6878      	ldr	r0, [r7, #4]
 801ac9c:	f7ff ff2a 	bl	801aaf4 <_ZN6Parser22parse_power_expressionEv>
 801aca0:	4603      	mov	r3, r0
 801aca2:	613b      	str	r3, [r7, #16]
 801aca4:	f107 0310 	add.w	r3, r7, #16
 801aca8:	4619      	mov	r1, r3
 801acaa:	4620      	mov	r0, r4
 801acac:	f000 fc73 	bl	801b596 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 801acb0:	e7e8      	b.n	801ac84 <_ZN6Parser25parse_multiply_expressionEv+0x42>
	}
	return exp;
 801acb2:	697b      	ldr	r3, [r7, #20]
}
 801acb4:	4618      	mov	r0, r3
 801acb6:	371c      	adds	r7, #28
 801acb8:	46bd      	mov	sp, r7
 801acba:	bd90      	pop	{r4, r7, pc}

0801acbc <_ZN6Parser18match_sum_operatorEP14Sum_expression>:

bool Parser::match_sum_operator(Sum_expression* exp)
{
 801acbc:	b580      	push	{r7, lr}
 801acbe:	b084      	sub	sp, #16
 801acc0:	af00      	add	r7, sp, #0
 801acc2:	6078      	str	r0, [r7, #4]
 801acc4:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 801acc6:	687b      	ldr	r3, [r7, #4]
 801acc8:	781b      	ldrb	r3, [r3, #0]
 801acca:	2b1f      	cmp	r3, #31
 801accc:	d002      	beq.n	801acd4 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x18>
 801acce:	2b20      	cmp	r3, #32
 801acd0:	d00b      	beq.n	801acea <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x2e>
 801acd2:	e015      	b.n	801ad00 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x44>
	{
	case TOKEN_PLUS:
		exp->ops.push_back(SUM_OP_PLUS);
 801acd4:	683b      	ldr	r3, [r7, #0]
 801acd6:	330c      	adds	r3, #12
 801acd8:	2200      	movs	r2, #0
 801acda:	73ba      	strb	r2, [r7, #14]
 801acdc:	f107 020e 	add.w	r2, r7, #14
 801ace0:	4611      	mov	r1, r2
 801ace2:	4618      	mov	r0, r3
 801ace4:	f000 fc68 	bl	801b5b8 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801ace8:	e00c      	b.n	801ad04 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	case TOKEN_MINUS:
		exp->ops.push_back(SUM_OP_MINUS);
 801acea:	683b      	ldr	r3, [r7, #0]
 801acec:	330c      	adds	r3, #12
 801acee:	2201      	movs	r2, #1
 801acf0:	73fa      	strb	r2, [r7, #15]
 801acf2:	f107 020f 	add.w	r2, r7, #15
 801acf6:	4611      	mov	r1, r2
 801acf8:	4618      	mov	r0, r3
 801acfa:	f000 fc5d 	bl	801b5b8 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801acfe:	e001      	b.n	801ad04 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	default:
		return false;
 801ad00:	2300      	movs	r3, #0
 801ad02:	e000      	b.n	801ad06 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x4a>
	}
	return true;
 801ad04:	2301      	movs	r3, #1
}
 801ad06:	4618      	mov	r0, r3
 801ad08:	3710      	adds	r7, #16
 801ad0a:	46bd      	mov	sp, r7
 801ad0c:	bd80      	pop	{r7, pc}

0801ad0e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801ad0e:	b580      	push	{r7, lr}
 801ad10:	b082      	sub	sp, #8
 801ad12:	af00      	add	r7, sp, #0
 801ad14:	6078      	str	r0, [r7, #4]
 801ad16:	687b      	ldr	r3, [r7, #4]
 801ad18:	4618      	mov	r0, r3
 801ad1a:	f000 fc5e 	bl	801b5da <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>
 801ad1e:	687b      	ldr	r3, [r7, #4]
 801ad20:	4618      	mov	r0, r3
 801ad22:	3708      	adds	r7, #8
 801ad24:	46bd      	mov	sp, r7
 801ad26:	bd80      	pop	{r7, pc}

0801ad28 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801ad28:	b580      	push	{r7, lr}
 801ad2a:	b082      	sub	sp, #8
 801ad2c:	af00      	add	r7, sp, #0
 801ad2e:	6078      	str	r0, [r7, #4]
 801ad30:	687b      	ldr	r3, [r7, #4]
 801ad32:	4618      	mov	r0, r3
 801ad34:	f7ff ffeb 	bl	801ad0e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>
 801ad38:	687b      	ldr	r3, [r7, #4]
 801ad3a:	4618      	mov	r0, r3
 801ad3c:	3708      	adds	r7, #8
 801ad3e:	46bd      	mov	sp, r7
 801ad40:	bd80      	pop	{r7, pc}

0801ad42 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 801ad42:	b580      	push	{r7, lr}
 801ad44:	b082      	sub	sp, #8
 801ad46:	af00      	add	r7, sp, #0
 801ad48:	6078      	str	r0, [r7, #4]
 801ad4a:	687b      	ldr	r3, [r7, #4]
 801ad4c:	4618      	mov	r0, r3
 801ad4e:	f000 fc54 	bl	801b5fa <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>
 801ad52:	687b      	ldr	r3, [r7, #4]
 801ad54:	4618      	mov	r0, r3
 801ad56:	3708      	adds	r7, #8
 801ad58:	46bd      	mov	sp, r7
 801ad5a:	bd80      	pop	{r7, pc}

0801ad5c <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801ad5c:	b580      	push	{r7, lr}
 801ad5e:	b082      	sub	sp, #8
 801ad60:	af00      	add	r7, sp, #0
 801ad62:	6078      	str	r0, [r7, #4]
 801ad64:	687b      	ldr	r3, [r7, #4]
 801ad66:	4618      	mov	r0, r3
 801ad68:	f7ff ffeb 	bl	801ad42 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>
 801ad6c:	687b      	ldr	r3, [r7, #4]
 801ad6e:	4618      	mov	r0, r3
 801ad70:	3708      	adds	r7, #8
 801ad72:	46bd      	mov	sp, r7
 801ad74:	bd80      	pop	{r7, pc}

0801ad76 <_ZN14Sum_expressionC1Ev>:
{
	SUM_OP_PLUS,
	SUM_OP_MINUS
}sum_operator;

class Sum_expression
 801ad76:	b580      	push	{r7, lr}
 801ad78:	b082      	sub	sp, #8
 801ad7a:	af00      	add	r7, sp, #0
 801ad7c:	6078      	str	r0, [r7, #4]
 801ad7e:	687b      	ldr	r3, [r7, #4]
 801ad80:	4618      	mov	r0, r3
 801ad82:	f7ff ffd1 	bl	801ad28 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>
 801ad86:	687b      	ldr	r3, [r7, #4]
 801ad88:	330c      	adds	r3, #12
 801ad8a:	4618      	mov	r0, r3
 801ad8c:	f7ff ffe6 	bl	801ad5c <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>
 801ad90:	687b      	ldr	r3, [r7, #4]
 801ad92:	4618      	mov	r0, r3
 801ad94:	3708      	adds	r7, #8
 801ad96:	46bd      	mov	sp, r7
 801ad98:	bd80      	pop	{r7, pc}

0801ad9a <_ZN6Parser20parse_sum_expressionEv>:

Sum_expression* Parser::parse_sum_expression()
{
 801ad9a:	b590      	push	{r4, r7, lr}
 801ad9c:	b087      	sub	sp, #28
 801ad9e:	af00      	add	r7, sp, #0
 801ada0:	6078      	str	r0, [r7, #4]
	auto exp = new Sum_expression();
 801ada2:	2018      	movs	r0, #24
 801ada4:	f008 fa7b 	bl	802329e <_Znwj>
 801ada8:	4603      	mov	r3, r0
 801adaa:	461c      	mov	r4, r3
 801adac:	4622      	mov	r2, r4
 801adae:	2300      	movs	r3, #0
 801adb0:	6013      	str	r3, [r2, #0]
 801adb2:	6053      	str	r3, [r2, #4]
 801adb4:	6093      	str	r3, [r2, #8]
 801adb6:	60d3      	str	r3, [r2, #12]
 801adb8:	6113      	str	r3, [r2, #16]
 801adba:	6153      	str	r3, [r2, #20]
 801adbc:	4620      	mov	r0, r4
 801adbe:	f7ff ffda 	bl	801ad76 <_ZN14Sum_expressionC1Ev>
 801adc2:	617c      	str	r4, [r7, #20]
	exp->mult_exps.push_back(parse_multiply_expression());
 801adc4:	697c      	ldr	r4, [r7, #20]
 801adc6:	6878      	ldr	r0, [r7, #4]
 801adc8:	f7ff ff3b 	bl	801ac42 <_ZN6Parser25parse_multiply_expressionEv>
 801adcc:	4603      	mov	r3, r0
 801adce:	60fb      	str	r3, [r7, #12]
 801add0:	f107 030c 	add.w	r3, r7, #12
 801add4:	4619      	mov	r1, r3
 801add6:	4620      	mov	r0, r4
 801add8:	f000 fc1f 	bl	801b61a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801addc:	6979      	ldr	r1, [r7, #20]
 801adde:	6878      	ldr	r0, [r7, #4]
 801ade0:	f7ff ff6c 	bl	801acbc <_ZN6Parser18match_sum_operatorEP14Sum_expression>
 801ade4:	4603      	mov	r3, r0
 801ade6:	2b00      	cmp	r3, #0
 801ade8:	d00f      	beq.n	801ae0a <_ZN6Parser20parse_sum_expressionEv+0x70>
	{
		get_next_token();
 801adea:	6878      	ldr	r0, [r7, #4]
 801adec:	f7f9 f939 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		exp->mult_exps.push_back(parse_multiply_expression());
 801adf0:	697c      	ldr	r4, [r7, #20]
 801adf2:	6878      	ldr	r0, [r7, #4]
 801adf4:	f7ff ff25 	bl	801ac42 <_ZN6Parser25parse_multiply_expressionEv>
 801adf8:	4603      	mov	r3, r0
 801adfa:	613b      	str	r3, [r7, #16]
 801adfc:	f107 0310 	add.w	r3, r7, #16
 801ae00:	4619      	mov	r1, r3
 801ae02:	4620      	mov	r0, r4
 801ae04:	f000 fc09 	bl	801b61a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 801ae08:	e7e8      	b.n	801addc <_ZN6Parser20parse_sum_expressionEv+0x42>
	}
	return exp;
 801ae0a:	697b      	ldr	r3, [r7, #20]
}
 801ae0c:	4618      	mov	r0, r3
 801ae0e:	371c      	adds	r7, #28
 801ae10:	46bd      	mov	sp, r7
 801ae12:	bd90      	pop	{r4, r7, pc}

0801ae14 <_ZN6Parser23match_relation_operatorEP19Relation_expression>:

bool Parser::match_relation_operator(Relation_expression* exp)
{
 801ae14:	b480      	push	{r7}
 801ae16:	b083      	sub	sp, #12
 801ae18:	af00      	add	r7, sp, #0
 801ae1a:	6078      	str	r0, [r7, #4]
 801ae1c:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801ae1e:	687b      	ldr	r3, [r7, #4]
 801ae20:	781b      	ldrb	r3, [r3, #0]
 801ae22:	3b19      	subs	r3, #25
 801ae24:	2b03      	cmp	r3, #3
 801ae26:	d81b      	bhi.n	801ae60 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x4c>
 801ae28:	a201      	add	r2, pc, #4	; (adr r2, 801ae30 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x1c>)
 801ae2a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801ae2e:	bf00      	nop
 801ae30:	0801ae51 	.word	0x0801ae51
 801ae34:	0801ae59 	.word	0x0801ae59
 801ae38:	0801ae41 	.word	0x0801ae41
 801ae3c:	0801ae49 	.word	0x0801ae49
	{
	case TOKEN_SMALLER_THAN:
		exp->op = REL_OP_SMALLER;
 801ae40:	683b      	ldr	r3, [r7, #0]
 801ae42:	2201      	movs	r2, #1
 801ae44:	721a      	strb	r2, [r3, #8]
		break;
 801ae46:	e010      	b.n	801ae6a <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_SMALLER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801ae48:	683b      	ldr	r3, [r7, #0]
 801ae4a:	2202      	movs	r2, #2
 801ae4c:	721a      	strb	r2, [r3, #8]
		break;
 801ae4e:	e00c      	b.n	801ae6a <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_THAN:
		exp->op = REL_OP_GREATER;
 801ae50:	683b      	ldr	r3, [r7, #0]
 801ae52:	2203      	movs	r2, #3
 801ae54:	721a      	strb	r2, [r3, #8]
		break;
 801ae56:	e008      	b.n	801ae6a <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 801ae58:	683b      	ldr	r3, [r7, #0]
 801ae5a:	2202      	movs	r2, #2
 801ae5c:	721a      	strb	r2, [r3, #8]
		break;
 801ae5e:	e004      	b.n	801ae6a <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	default:
		exp->right_sum_exp = nullptr;
 801ae60:	683b      	ldr	r3, [r7, #0]
 801ae62:	2200      	movs	r2, #0
 801ae64:	605a      	str	r2, [r3, #4]
		return false;
 801ae66:	2300      	movs	r3, #0
 801ae68:	e000      	b.n	801ae6c <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x58>
	}
	return true;
 801ae6a:	2301      	movs	r3, #1
}
 801ae6c:	4618      	mov	r0, r3
 801ae6e:	370c      	adds	r7, #12
 801ae70:	46bd      	mov	sp, r7
 801ae72:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ae76:	4770      	bx	lr

0801ae78 <_ZN6Parser25parse_relation_expressionEv>:

Relation_expression* Parser::parse_relation_expression()
{
 801ae78:	b580      	push	{r7, lr}
 801ae7a:	b084      	sub	sp, #16
 801ae7c:	af00      	add	r7, sp, #0
 801ae7e:	6078      	str	r0, [r7, #4]
	auto exp = new Relation_expression();
 801ae80:	200c      	movs	r0, #12
 801ae82:	f008 fa0c 	bl	802329e <_Znwj>
 801ae86:	4603      	mov	r3, r0
 801ae88:	2200      	movs	r2, #0
 801ae8a:	601a      	str	r2, [r3, #0]
 801ae8c:	2200      	movs	r2, #0
 801ae8e:	605a      	str	r2, [r3, #4]
 801ae90:	2200      	movs	r2, #0
 801ae92:	721a      	strb	r2, [r3, #8]
 801ae94:	60fb      	str	r3, [r7, #12]
	exp->left_sum_exp = parse_sum_expression();
 801ae96:	6878      	ldr	r0, [r7, #4]
 801ae98:	f7ff ff7f 	bl	801ad9a <_ZN6Parser20parse_sum_expressionEv>
 801ae9c:	4602      	mov	r2, r0
 801ae9e:	68fb      	ldr	r3, [r7, #12]
 801aea0:	601a      	str	r2, [r3, #0]
	if(match_relation_operator(exp))
 801aea2:	68f9      	ldr	r1, [r7, #12]
 801aea4:	6878      	ldr	r0, [r7, #4]
 801aea6:	f7ff ffb5 	bl	801ae14 <_ZN6Parser23match_relation_operatorEP19Relation_expression>
 801aeaa:	4603      	mov	r3, r0
 801aeac:	2b00      	cmp	r3, #0
 801aeae:	d008      	beq.n	801aec2 <_ZN6Parser25parse_relation_expressionEv+0x4a>
	{
		get_next_token();
 801aeb0:	6878      	ldr	r0, [r7, #4]
 801aeb2:	f7f9 f8d6 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		exp->right_sum_exp = parse_sum_expression();
 801aeb6:	6878      	ldr	r0, [r7, #4]
 801aeb8:	f7ff ff6f 	bl	801ad9a <_ZN6Parser20parse_sum_expressionEv>
 801aebc:	4602      	mov	r2, r0
 801aebe:	68fb      	ldr	r3, [r7, #12]
 801aec0:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801aec2:	68fb      	ldr	r3, [r7, #12]
}
 801aec4:	4618      	mov	r0, r3
 801aec6:	3710      	adds	r7, #16
 801aec8:	46bd      	mov	sp, r7
 801aeca:	bd80      	pop	{r7, pc}

0801aecc <_ZN6Parser22match_compare_operatorEP18Compare_expression>:

bool Parser::match_compare_operator(Compare_expression *exp)
{
 801aecc:	b480      	push	{r7}
 801aece:	b083      	sub	sp, #12
 801aed0:	af00      	add	r7, sp, #0
 801aed2:	6078      	str	r0, [r7, #4]
 801aed4:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801aed6:	687b      	ldr	r3, [r7, #4]
 801aed8:	781b      	ldrb	r3, [r3, #0]
 801aeda:	2b1d      	cmp	r3, #29
 801aedc:	d002      	beq.n	801aee4 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x18>
 801aede:	2b1e      	cmp	r3, #30
 801aee0:	d004      	beq.n	801aeec <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x20>
 801aee2:	e007      	b.n	801aef4 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x28>
	{
	case TOKEN_EQUALS:
		exp->op = COMP_OP_EQUAL;
 801aee4:	683b      	ldr	r3, [r7, #0]
 801aee6:	2201      	movs	r2, #1
 801aee8:	721a      	strb	r2, [r3, #8]
		break;
 801aeea:	e008      	b.n	801aefe <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	case TOKEN_NOT_EQUAL:
		exp->op = COMP_OP_NOT_EQUAL;
 801aeec:	683b      	ldr	r3, [r7, #0]
 801aeee:	2202      	movs	r2, #2
 801aef0:	721a      	strb	r2, [r3, #8]
		break;
 801aef2:	e004      	b.n	801aefe <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	default:
		exp->right_rel_exp = nullptr;
 801aef4:	683b      	ldr	r3, [r7, #0]
 801aef6:	2200      	movs	r2, #0
 801aef8:	605a      	str	r2, [r3, #4]
		return false;
 801aefa:	2300      	movs	r3, #0
 801aefc:	e000      	b.n	801af00 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x34>
	}
	return true;
 801aefe:	2301      	movs	r3, #1
}
 801af00:	4618      	mov	r0, r3
 801af02:	370c      	adds	r7, #12
 801af04:	46bd      	mov	sp, r7
 801af06:	f85d 7b04 	ldr.w	r7, [sp], #4
 801af0a:	4770      	bx	lr

0801af0c <_ZN6Parser24parse_compare_expressionEv>:

Compare_expression* Parser::parse_compare_expression()
{
 801af0c:	b580      	push	{r7, lr}
 801af0e:	b084      	sub	sp, #16
 801af10:	af00      	add	r7, sp, #0
 801af12:	6078      	str	r0, [r7, #4]
	auto exp = new Compare_expression();
 801af14:	200c      	movs	r0, #12
 801af16:	f008 f9c2 	bl	802329e <_Znwj>
 801af1a:	4603      	mov	r3, r0
 801af1c:	2200      	movs	r2, #0
 801af1e:	601a      	str	r2, [r3, #0]
 801af20:	2200      	movs	r2, #0
 801af22:	605a      	str	r2, [r3, #4]
 801af24:	2200      	movs	r2, #0
 801af26:	721a      	strb	r2, [r3, #8]
 801af28:	60fb      	str	r3, [r7, #12]
	exp->left_rel_exp = parse_relation_expression();
 801af2a:	6878      	ldr	r0, [r7, #4]
 801af2c:	f7ff ffa4 	bl	801ae78 <_ZN6Parser25parse_relation_expressionEv>
 801af30:	4602      	mov	r2, r0
 801af32:	68fb      	ldr	r3, [r7, #12]
 801af34:	601a      	str	r2, [r3, #0]
	if(match_compare_operator(exp))
 801af36:	68f9      	ldr	r1, [r7, #12]
 801af38:	6878      	ldr	r0, [r7, #4]
 801af3a:	f7ff ffc7 	bl	801aecc <_ZN6Parser22match_compare_operatorEP18Compare_expression>
 801af3e:	4603      	mov	r3, r0
 801af40:	2b00      	cmp	r3, #0
 801af42:	d008      	beq.n	801af56 <_ZN6Parser24parse_compare_expressionEv+0x4a>
	{
		get_next_token();
 801af44:	6878      	ldr	r0, [r7, #4]
 801af46:	f7f9 f88c 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		exp->right_rel_exp = parse_relation_expression();
 801af4a:	6878      	ldr	r0, [r7, #4]
 801af4c:	f7ff ff94 	bl	801ae78 <_ZN6Parser25parse_relation_expressionEv>
 801af50:	4602      	mov	r2, r0
 801af52:	68fb      	ldr	r3, [r7, #12]
 801af54:	605a      	str	r2, [r3, #4]
	}
	return exp;
 801af56:	68fb      	ldr	r3, [r7, #12]
}
 801af58:	4618      	mov	r0, r3
 801af5a:	3710      	adds	r7, #16
 801af5c:	46bd      	mov	sp, r7
 801af5e:	bd80      	pop	{r7, pc}

0801af60 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801af60:	b580      	push	{r7, lr}
 801af62:	b082      	sub	sp, #8
 801af64:	af00      	add	r7, sp, #0
 801af66:	6078      	str	r0, [r7, #4]
 801af68:	687b      	ldr	r3, [r7, #4]
 801af6a:	4618      	mov	r0, r3
 801af6c:	f000 fb66 	bl	801b63c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>
 801af70:	687b      	ldr	r3, [r7, #4]
 801af72:	4618      	mov	r0, r3
 801af74:	3708      	adds	r7, #8
 801af76:	46bd      	mov	sp, r7
 801af78:	bd80      	pop	{r7, pc}

0801af7a <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801af7a:	b580      	push	{r7, lr}
 801af7c:	b082      	sub	sp, #8
 801af7e:	af00      	add	r7, sp, #0
 801af80:	6078      	str	r0, [r7, #4]
 801af82:	687b      	ldr	r3, [r7, #4]
 801af84:	4618      	mov	r0, r3
 801af86:	f7ff ffeb 	bl	801af60 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>
 801af8a:	687b      	ldr	r3, [r7, #4]
 801af8c:	4618      	mov	r0, r3
 801af8e:	3708      	adds	r7, #8
 801af90:	46bd      	mov	sp, r7
 801af92:	bd80      	pop	{r7, pc}

0801af94 <_ZN14And_expressionC1Ev>:
	Relation_expression* left_rel_exp;
	Relation_expression* right_rel_exp;
	comp_operator op;
};

class And_expression
 801af94:	b580      	push	{r7, lr}
 801af96:	b082      	sub	sp, #8
 801af98:	af00      	add	r7, sp, #0
 801af9a:	6078      	str	r0, [r7, #4]
 801af9c:	687b      	ldr	r3, [r7, #4]
 801af9e:	4618      	mov	r0, r3
 801afa0:	f7ff ffeb 	bl	801af7a <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>
 801afa4:	687b      	ldr	r3, [r7, #4]
 801afa6:	4618      	mov	r0, r3
 801afa8:	3708      	adds	r7, #8
 801afaa:	46bd      	mov	sp, r7
 801afac:	bd80      	pop	{r7, pc}

0801afae <_ZN6Parser20parse_and_expressionEv>:

And_expression* Parser::parse_and_expression()
{
 801afae:	b590      	push	{r4, r7, lr}
 801afb0:	b087      	sub	sp, #28
 801afb2:	af00      	add	r7, sp, #0
 801afb4:	6078      	str	r0, [r7, #4]
	auto exp = new And_expression();
 801afb6:	200c      	movs	r0, #12
 801afb8:	f008 f971 	bl	802329e <_Znwj>
 801afbc:	4603      	mov	r3, r0
 801afbe:	461c      	mov	r4, r3
 801afc0:	4622      	mov	r2, r4
 801afc2:	2300      	movs	r3, #0
 801afc4:	6013      	str	r3, [r2, #0]
 801afc6:	6053      	str	r3, [r2, #4]
 801afc8:	6093      	str	r3, [r2, #8]
 801afca:	4620      	mov	r0, r4
 801afcc:	f7ff ffe2 	bl	801af94 <_ZN14And_expressionC1Ev>
 801afd0:	617c      	str	r4, [r7, #20]
	exp->comp_exps.push_back(parse_compare_expression());
 801afd2:	697c      	ldr	r4, [r7, #20]
 801afd4:	6878      	ldr	r0, [r7, #4]
 801afd6:	f7ff ff99 	bl	801af0c <_ZN6Parser24parse_compare_expressionEv>
 801afda:	4603      	mov	r3, r0
 801afdc:	60fb      	str	r3, [r7, #12]
 801afde:	f107 030c 	add.w	r3, r7, #12
 801afe2:	4619      	mov	r1, r3
 801afe4:	4620      	mov	r0, r4
 801afe6:	f000 fb39 	bl	801b65c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801afea:	687b      	ldr	r3, [r7, #4]
 801afec:	781b      	ldrb	r3, [r3, #0]
 801afee:	2b16      	cmp	r3, #22
 801aff0:	d10f      	bne.n	801b012 <_ZN6Parser20parse_and_expressionEv+0x64>
	{
		get_next_token();
 801aff2:	6878      	ldr	r0, [r7, #4]
 801aff4:	f7f9 f835 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		exp->comp_exps.push_back(parse_compare_expression());
 801aff8:	697c      	ldr	r4, [r7, #20]
 801affa:	6878      	ldr	r0, [r7, #4]
 801affc:	f7ff ff86 	bl	801af0c <_ZN6Parser24parse_compare_expressionEv>
 801b000:	4603      	mov	r3, r0
 801b002:	613b      	str	r3, [r7, #16]
 801b004:	f107 0310 	add.w	r3, r7, #16
 801b008:	4619      	mov	r1, r3
 801b00a:	4620      	mov	r0, r4
 801b00c:	f000 fb26 	bl	801b65c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 801b010:	e7eb      	b.n	801afea <_ZN6Parser20parse_and_expressionEv+0x3c>
	}
	return exp;
 801b012:	697b      	ldr	r3, [r7, #20]
}
 801b014:	4618      	mov	r0, r3
 801b016:	371c      	adds	r7, #28
 801b018:	46bd      	mov	sp, r7
 801b01a:	bd90      	pop	{r4, r7, pc}

0801b01c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801b01c:	b580      	push	{r7, lr}
 801b01e:	b082      	sub	sp, #8
 801b020:	af00      	add	r7, sp, #0
 801b022:	6078      	str	r0, [r7, #4]
 801b024:	687b      	ldr	r3, [r7, #4]
 801b026:	4618      	mov	r0, r3
 801b028:	f000 fb29 	bl	801b67e <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>
 801b02c:	687b      	ldr	r3, [r7, #4]
 801b02e:	4618      	mov	r0, r3
 801b030:	3708      	adds	r7, #8
 801b032:	46bd      	mov	sp, r7
 801b034:	bd80      	pop	{r7, pc}

0801b036 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801b036:	b580      	push	{r7, lr}
 801b038:	b082      	sub	sp, #8
 801b03a:	af00      	add	r7, sp, #0
 801b03c:	6078      	str	r0, [r7, #4]
 801b03e:	687b      	ldr	r3, [r7, #4]
 801b040:	4618      	mov	r0, r3
 801b042:	f7ff ffeb 	bl	801b01c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>
 801b046:	687b      	ldr	r3, [r7, #4]
 801b048:	4618      	mov	r0, r3
 801b04a:	3708      	adds	r7, #8
 801b04c:	46bd      	mov	sp, r7
 801b04e:	bd80      	pop	{r7, pc}

0801b050 <_ZN10ExpressionC1Ev>:
public:
	~And_expression();
	std::vector<Compare_expression*> comp_exps;
};

class Expression
 801b050:	b580      	push	{r7, lr}
 801b052:	b082      	sub	sp, #8
 801b054:	af00      	add	r7, sp, #0
 801b056:	6078      	str	r0, [r7, #4]
 801b058:	687b      	ldr	r3, [r7, #4]
 801b05a:	3308      	adds	r3, #8
 801b05c:	4618      	mov	r0, r3
 801b05e:	f7ff ffea 	bl	801b036 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>
 801b062:	687b      	ldr	r3, [r7, #4]
 801b064:	4618      	mov	r0, r3
 801b066:	3708      	adds	r7, #8
 801b068:	46bd      	mov	sp, r7
 801b06a:	bd80      	pop	{r7, pc}

0801b06c <_ZN6Parser16parse_expressionEv>:

Expression* Parser::parse_expression()
{
 801b06c:	b590      	push	{r4, r7, lr}
 801b06e:	b087      	sub	sp, #28
 801b070:	af00      	add	r7, sp, #0
 801b072:	6078      	str	r0, [r7, #4]
	auto exp = new Expression();
 801b074:	2014      	movs	r0, #20
 801b076:	f008 f912 	bl	802329e <_Znwj>
 801b07a:	4603      	mov	r3, r0
 801b07c:	461c      	mov	r4, r3
 801b07e:	4622      	mov	r2, r4
 801b080:	2300      	movs	r3, #0
 801b082:	6013      	str	r3, [r2, #0]
 801b084:	6053      	str	r3, [r2, #4]
 801b086:	6093      	str	r3, [r2, #8]
 801b088:	60d3      	str	r3, [r2, #12]
 801b08a:	6113      	str	r3, [r2, #16]
 801b08c:	4620      	mov	r0, r4
 801b08e:	f7ff ffdf 	bl	801b050 <_ZN10ExpressionC1Ev>
 801b092:	617c      	str	r4, [r7, #20]
	exp->line = Position_counter::get_instance().line;
 801b094:	f7fb fbd4 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 801b098:	4603      	mov	r3, r0
 801b09a:	681a      	ldr	r2, [r3, #0]
 801b09c:	697b      	ldr	r3, [r7, #20]
 801b09e:	601a      	str	r2, [r3, #0]
	exp->position = Position_counter::get_instance().position;
 801b0a0:	f7fb fbce 	bl	8016840 <_ZN16Position_counter12get_instanceEv>
 801b0a4:	4603      	mov	r3, r0
 801b0a6:	685a      	ldr	r2, [r3, #4]
 801b0a8:	697b      	ldr	r3, [r7, #20]
 801b0aa:	605a      	str	r2, [r3, #4]
	exp->and_exps.push_back(parse_and_expression());
 801b0ac:	697b      	ldr	r3, [r7, #20]
 801b0ae:	f103 0408 	add.w	r4, r3, #8
 801b0b2:	6878      	ldr	r0, [r7, #4]
 801b0b4:	f7ff ff7b 	bl	801afae <_ZN6Parser20parse_and_expressionEv>
 801b0b8:	4603      	mov	r3, r0
 801b0ba:	60fb      	str	r3, [r7, #12]
 801b0bc:	f107 030c 	add.w	r3, r7, #12
 801b0c0:	4619      	mov	r1, r3
 801b0c2:	4620      	mov	r0, r4
 801b0c4:	f000 faeb 	bl	801b69e <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801b0c8:	687b      	ldr	r3, [r7, #4]
 801b0ca:	781b      	ldrb	r3, [r3, #0]
 801b0cc:	2b15      	cmp	r3, #21
 801b0ce:	d111      	bne.n	801b0f4 <_ZN6Parser16parse_expressionEv+0x88>
	{
		get_next_token();
 801b0d0:	6878      	ldr	r0, [r7, #4]
 801b0d2:	f7f8 ffc6 	bl	8014062 <_ZN6Parser14get_next_tokenEv>
		exp->and_exps.push_back(parse_and_expression());
 801b0d6:	697b      	ldr	r3, [r7, #20]
 801b0d8:	f103 0408 	add.w	r4, r3, #8
 801b0dc:	6878      	ldr	r0, [r7, #4]
 801b0de:	f7ff ff66 	bl	801afae <_ZN6Parser20parse_and_expressionEv>
 801b0e2:	4603      	mov	r3, r0
 801b0e4:	613b      	str	r3, [r7, #16]
 801b0e6:	f107 0310 	add.w	r3, r7, #16
 801b0ea:	4619      	mov	r1, r3
 801b0ec:	4620      	mov	r0, r4
 801b0ee:	f000 fad6 	bl	801b69e <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 801b0f2:	e7e9      	b.n	801b0c8 <_ZN6Parser16parse_expressionEv+0x5c>
	}
	return exp;
 801b0f4:	697b      	ldr	r3, [r7, #20]
}
 801b0f6:	4618      	mov	r0, r3
 801b0f8:	371c      	adds	r7, #28
 801b0fa:	46bd      	mov	sp, r7
 801b0fc:	bd90      	pop	{r4, r7, pc}

0801b0fe <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b0fe:	b590      	push	{r4, r7, lr}
 801b100:	b085      	sub	sp, #20
 801b102:	af00      	add	r7, sp, #0
 801b104:	6078      	str	r0, [r7, #4]
 801b106:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b108:	2305      	movs	r3, #5
 801b10a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b10c:	6878      	ldr	r0, [r7, #4]
 801b10e:	f7ee ffda 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b112:	4603      	mov	r3, r0
 801b114:	2b05      	cmp	r3, #5
 801b116:	bf0c      	ite	eq
 801b118:	2301      	moveq	r3, #1
 801b11a:	2300      	movne	r3, #0
 801b11c:	b2db      	uxtb	r3, r3
 801b11e:	2b00      	cmp	r3, #0
 801b120:	d00a      	beq.n	801b138 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b122:	6838      	ldr	r0, [r7, #0]
 801b124:	f7f9 fd7e 	bl	8014c24 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b128:	4603      	mov	r3, r0
 801b12a:	681c      	ldr	r4, [r3, #0]
 801b12c:	6878      	ldr	r0, [r7, #4]
 801b12e:	f7ef fb59 	bl	800a7e4 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b132:	4603      	mov	r3, r0
 801b134:	601c      	str	r4, [r3, #0]
 801b136:	e007      	b.n	801b148 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b138:	6838      	ldr	r0, [r7, #0]
 801b13a:	f7f9 fd73 	bl	8014c24 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b13e:	4603      	mov	r3, r0
 801b140:	4619      	mov	r1, r3
 801b142:	6878      	ldr	r0, [r7, #4]
 801b144:	f000 fabc 	bl	801b6c0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b148:	687b      	ldr	r3, [r7, #4]
	}
 801b14a:	4618      	mov	r0, r3
 801b14c:	3714      	adds	r7, #20
 801b14e:	46bd      	mov	sp, r7
 801b150:	bd90      	pop	{r4, r7, pc}

0801b152 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b152:	b590      	push	{r4, r7, lr}
 801b154:	b085      	sub	sp, #20
 801b156:	af00      	add	r7, sp, #0
 801b158:	6078      	str	r0, [r7, #4]
 801b15a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b15c:	2304      	movs	r3, #4
 801b15e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b160:	6878      	ldr	r0, [r7, #4]
 801b162:	f7ee ffb0 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b166:	4603      	mov	r3, r0
 801b168:	2b04      	cmp	r3, #4
 801b16a:	bf0c      	ite	eq
 801b16c:	2301      	moveq	r3, #1
 801b16e:	2300      	movne	r3, #0
 801b170:	b2db      	uxtb	r3, r3
 801b172:	2b00      	cmp	r3, #0
 801b174:	d00a      	beq.n	801b18c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b176:	6838      	ldr	r0, [r7, #0]
 801b178:	f000 fabb 	bl	801b6f2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b17c:	4603      	mov	r3, r0
 801b17e:	681c      	ldr	r4, [r3, #0]
 801b180:	6878      	ldr	r0, [r7, #4]
 801b182:	f7ef fa97 	bl	800a6b4 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b186:	4603      	mov	r3, r0
 801b188:	601c      	str	r4, [r3, #0]
 801b18a:	e007      	b.n	801b19c <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b18c:	6838      	ldr	r0, [r7, #0]
 801b18e:	f000 fab0 	bl	801b6f2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b192:	4603      	mov	r3, r0
 801b194:	4619      	mov	r1, r3
 801b196:	6878      	ldr	r0, [r7, #4]
 801b198:	f000 fab6 	bl	801b708 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b19c:	687b      	ldr	r3, [r7, #4]
	}
 801b19e:	4618      	mov	r0, r3
 801b1a0:	3714      	adds	r7, #20
 801b1a2:	46bd      	mov	sp, r7
 801b1a4:	bd90      	pop	{r4, r7, pc}

0801b1a6 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b1a6:	b580      	push	{r7, lr}
 801b1a8:	b082      	sub	sp, #8
 801b1aa:	af00      	add	r7, sp, #0
 801b1ac:	6078      	str	r0, [r7, #4]
 801b1ae:	7039      	strb	r1, [r7, #0]
 801b1b0:	687b      	ldr	r3, [r7, #4]
 801b1b2:	4611      	mov	r1, r2
 801b1b4:	4618      	mov	r0, r3
 801b1b6:	f000 fade 	bl	801b776 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b1ba:	687b      	ldr	r3, [r7, #4]
 801b1bc:	4618      	mov	r0, r3
 801b1be:	3708      	adds	r7, #8
 801b1c0:	46bd      	mov	sp, r7
 801b1c2:	bd80      	pop	{r7, pc}

0801b1c4 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b1c4:	b580      	push	{r7, lr}
 801b1c6:	b082      	sub	sp, #8
 801b1c8:	af00      	add	r7, sp, #0
 801b1ca:	6078      	str	r0, [r7, #4]
 801b1cc:	7039      	strb	r1, [r7, #0]
 801b1ce:	687b      	ldr	r3, [r7, #4]
 801b1d0:	4611      	mov	r1, r2
 801b1d2:	4618      	mov	r0, r3
 801b1d4:	f7ff ffe7 	bl	801b1a6 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b1d8:	687b      	ldr	r3, [r7, #4]
 801b1da:	4618      	mov	r0, r3
 801b1dc:	3708      	adds	r7, #8
 801b1de:	46bd      	mov	sp, r7
 801b1e0:	bd80      	pop	{r7, pc}

0801b1e2 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b1e2:	b580      	push	{r7, lr}
 801b1e4:	b082      	sub	sp, #8
 801b1e6:	af00      	add	r7, sp, #0
 801b1e8:	6078      	str	r0, [r7, #4]
 801b1ea:	7039      	strb	r1, [r7, #0]
 801b1ec:	687b      	ldr	r3, [r7, #4]
 801b1ee:	4611      	mov	r1, r2
 801b1f0:	4618      	mov	r0, r3
 801b1f2:	f7ff ffe7 	bl	801b1c4 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b1f6:	687b      	ldr	r3, [r7, #4]
 801b1f8:	4618      	mov	r0, r3
 801b1fa:	3708      	adds	r7, #8
 801b1fc:	46bd      	mov	sp, r7
 801b1fe:	bd80      	pop	{r7, pc}

0801b200 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b200:	b580      	push	{r7, lr}
 801b202:	b082      	sub	sp, #8
 801b204:	af00      	add	r7, sp, #0
 801b206:	6078      	str	r0, [r7, #4]
 801b208:	7039      	strb	r1, [r7, #0]
 801b20a:	687b      	ldr	r3, [r7, #4]
 801b20c:	4611      	mov	r1, r2
 801b20e:	4618      	mov	r0, r3
 801b210:	f7ff ffe7 	bl	801b1e2 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b214:	687b      	ldr	r3, [r7, #4]
 801b216:	4618      	mov	r0, r3
 801b218:	3708      	adds	r7, #8
 801b21a:	46bd      	mov	sp, r7
 801b21c:	bd80      	pop	{r7, pc}

0801b21e <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801b21e:	b580      	push	{r7, lr}
 801b220:	b082      	sub	sp, #8
 801b222:	af00      	add	r7, sp, #0
 801b224:	6078      	str	r0, [r7, #4]
 801b226:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801b228:	687b      	ldr	r3, [r7, #4]
 801b22a:	4611      	mov	r1, r2
 801b22c:	4618      	mov	r0, r3
 801b22e:	f7ff ffe7 	bl	801b200 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801b232:	687b      	ldr	r3, [r7, #4]
 801b234:	4618      	mov	r0, r3
 801b236:	3708      	adds	r7, #8
 801b238:	46bd      	mov	sp, r7
 801b23a:	bd80      	pop	{r7, pc}

0801b23c <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      _Variant_base()
 801b23c:	b580      	push	{r7, lr}
 801b23e:	b082      	sub	sp, #8
 801b240:	af00      	add	r7, sp, #0
 801b242:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801b244:	4619      	mov	r1, r3
 801b246:	6878      	ldr	r0, [r7, #4]
 801b248:	f7ff ffe9 	bl	801b21e <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b24c:	687b      	ldr	r3, [r7, #4]
 801b24e:	4618      	mov	r0, r3
 801b250:	3708      	adds	r7, #8
 801b252:	46bd      	mov	sp, r7
 801b254:	bd80      	pop	{r7, pc}

0801b256 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b256:	b590      	push	{r4, r7, lr}
 801b258:	b085      	sub	sp, #20
 801b25a:	af00      	add	r7, sp, #0
 801b25c:	6078      	str	r0, [r7, #4]
 801b25e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b260:	2300      	movs	r3, #0
 801b262:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b264:	6878      	ldr	r0, [r7, #4]
 801b266:	f7ee ff2e 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b26a:	4603      	mov	r3, r0
 801b26c:	2b00      	cmp	r3, #0
 801b26e:	bf0c      	ite	eq
 801b270:	2301      	moveq	r3, #1
 801b272:	2300      	movne	r3, #0
 801b274:	b2db      	uxtb	r3, r3
 801b276:	2b00      	cmp	r3, #0
 801b278:	d00b      	beq.n	801b292 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b27a:	6838      	ldr	r0, [r7, #0]
 801b27c:	f7ec fcec 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b280:	4603      	mov	r3, r0
 801b282:	781c      	ldrb	r4, [r3, #0]
 801b284:	6878      	ldr	r0, [r7, #4]
 801b286:	f7f2 f95b 	bl	800d540 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b28a:	4603      	mov	r3, r0
 801b28c:	4622      	mov	r2, r4
 801b28e:	701a      	strb	r2, [r3, #0]
 801b290:	e007      	b.n	801b2a2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b292:	6838      	ldr	r0, [r7, #0]
 801b294:	f7ec fce0 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b298:	4603      	mov	r3, r0
 801b29a:	4619      	mov	r1, r3
 801b29c:	6878      	ldr	r0, [r7, #4]
 801b29e:	f000 fa7c 	bl	801b79a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b2a2:	687b      	ldr	r3, [r7, #4]
	}
 801b2a4:	4618      	mov	r0, r3
 801b2a6:	3714      	adds	r7, #20
 801b2a8:	46bd      	mov	sp, r7
 801b2aa:	bd90      	pop	{r4, r7, pc}

0801b2ac <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801b2ac:	b580      	push	{r7, lr}
 801b2ae:	b082      	sub	sp, #8
 801b2b0:	af00      	add	r7, sp, #0
 801b2b2:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801b2b4:	6878      	ldr	r0, [r7, #4]
 801b2b6:	f7f5 f879 	bl	80103ac <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801b2ba:	4603      	mov	r3, r0
    }
 801b2bc:	4618      	mov	r0, r3
 801b2be:	3708      	adds	r7, #8
 801b2c0:	46bd      	mov	sp, r7
 801b2c2:	bd80      	pop	{r7, pc}

0801b2c4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801b2c4:	b590      	push	{r4, r7, lr}
 801b2c6:	b085      	sub	sp, #20
 801b2c8:	af00      	add	r7, sp, #0
 801b2ca:	6078      	str	r0, [r7, #4]
 801b2cc:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b2ce:	2301      	movs	r3, #1
 801b2d0:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b2d2:	6878      	ldr	r0, [r7, #4]
 801b2d4:	f7ee fef7 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b2d8:	4603      	mov	r3, r0
 801b2da:	2b01      	cmp	r3, #1
 801b2dc:	bf0c      	ite	eq
 801b2de:	2301      	moveq	r3, #1
 801b2e0:	2300      	movne	r3, #0
 801b2e2:	b2db      	uxtb	r3, r3
 801b2e4:	2b00      	cmp	r3, #0
 801b2e6:	d00a      	beq.n	801b2fe <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b2e8:	6838      	ldr	r0, [r7, #0]
 801b2ea:	f7e9 fc87 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b2ee:	4603      	mov	r3, r0
 801b2f0:	681c      	ldr	r4, [r3, #0]
 801b2f2:	6878      	ldr	r0, [r7, #4]
 801b2f4:	f7f2 f8d0 	bl	800d498 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b2f8:	4603      	mov	r3, r0
 801b2fa:	601c      	str	r4, [r3, #0]
 801b2fc:	e007      	b.n	801b30e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b2fe:	6838      	ldr	r0, [r7, #0]
 801b300:	f7e9 fc7c 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b304:	4603      	mov	r3, r0
 801b306:	4619      	mov	r1, r3
 801b308:	6878      	ldr	r0, [r7, #4]
 801b30a:	f000 fa5f 	bl	801b7cc <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801b30e:	687b      	ldr	r3, [r7, #4]
	}
 801b310:	4618      	mov	r0, r3
 801b312:	3714      	adds	r7, #20
 801b314:	46bd      	mov	sp, r7
 801b316:	bd90      	pop	{r4, r7, pc}

0801b318 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 801b318:	b580      	push	{r7, lr}
 801b31a:	b082      	sub	sp, #8
 801b31c:	af00      	add	r7, sp, #0
 801b31e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 801b320:	6878      	ldr	r0, [r7, #4]
 801b322:	f7f5 f8bf 	bl	80104a4 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 801b326:	4603      	mov	r3, r0
    }
 801b328:	4618      	mov	r0, r3
 801b32a:	3708      	adds	r7, #8
 801b32c:	46bd      	mov	sp, r7
 801b32e:	bd80      	pop	{r7, pc}

0801b330 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 801b330:	b590      	push	{r4, r7, lr}
 801b332:	b085      	sub	sp, #20
 801b334:	af00      	add	r7, sp, #0
 801b336:	6078      	str	r0, [r7, #4]
 801b338:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b33a:	2302      	movs	r3, #2
 801b33c:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b33e:	6878      	ldr	r0, [r7, #4]
 801b340:	f7ee fec1 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b344:	4603      	mov	r3, r0
 801b346:	2b02      	cmp	r3, #2
 801b348:	bf0c      	ite	eq
 801b34a:	2301      	moveq	r3, #1
 801b34c:	2300      	movne	r3, #0
 801b34e:	b2db      	uxtb	r3, r3
 801b350:	2b00      	cmp	r3, #0
 801b352:	d00a      	beq.n	801b36a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b354:	6838      	ldr	r0, [r7, #0]
 801b356:	f7e9 fc85 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b35a:	4603      	mov	r3, r0
 801b35c:	681c      	ldr	r4, [r3, #0]
 801b35e:	6878      	ldr	r0, [r7, #4]
 801b360:	f7f2 f8b6 	bl	800d4d0 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b364:	4603      	mov	r3, r0
 801b366:	601c      	str	r4, [r3, #0]
 801b368:	e007      	b.n	801b37a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b36a:	6838      	ldr	r0, [r7, #0]
 801b36c:	f7e9 fc7a 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b370:	4603      	mov	r3, r0
 801b372:	4619      	mov	r1, r3
 801b374:	6878      	ldr	r0, [r7, #4]
 801b376:	f000 fa42 	bl	801b7fe <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801b37a:	687b      	ldr	r3, [r7, #4]
	}
 801b37c:	4618      	mov	r0, r3
 801b37e:	3714      	adds	r7, #20
 801b380:	46bd      	mov	sp, r7
 801b382:	bd90      	pop	{r4, r7, pc}

0801b384 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801b384:	b590      	push	{r4, r7, lr}
 801b386:	b085      	sub	sp, #20
 801b388:	af00      	add	r7, sp, #0
 801b38a:	6078      	str	r0, [r7, #4]
 801b38c:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b38e:	2303      	movs	r3, #3
 801b390:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b392:	6878      	ldr	r0, [r7, #4]
 801b394:	f7ee fe97 	bl	800a0c6 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801b398:	4603      	mov	r3, r0
 801b39a:	2b03      	cmp	r3, #3
 801b39c:	bf0c      	ite	eq
 801b39e:	2301      	moveq	r3, #1
 801b3a0:	2300      	movne	r3, #0
 801b3a2:	b2db      	uxtb	r3, r3
 801b3a4:	2b00      	cmp	r3, #0
 801b3a6:	d00c      	beq.n	801b3c2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b3a8:	6838      	ldr	r0, [r7, #0]
 801b3aa:	f7ec fc9d 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b3ae:	4604      	mov	r4, r0
 801b3b0:	6878      	ldr	r0, [r7, #4]
 801b3b2:	f7f2 f8a9 	bl	800d508 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b3b6:	4603      	mov	r3, r0
 801b3b8:	4621      	mov	r1, r4
 801b3ba:	4618      	mov	r0, r3
 801b3bc:	f008 fa1d 	bl	80237fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 801b3c0:	e007      	b.n	801b3d2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b3c2:	6838      	ldr	r0, [r7, #0]
 801b3c4:	f7ec fc90 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b3c8:	4603      	mov	r3, r0
 801b3ca:	4619      	mov	r1, r3
 801b3cc:	6878      	ldr	r0, [r7, #4]
 801b3ce:	f000 fa2f 	bl	801b830 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 801b3d2:	687b      	ldr	r3, [r7, #4]
	}
 801b3d4:	4618      	mov	r0, r3
 801b3d6:	3714      	adds	r7, #20
 801b3d8:	46bd      	mov	sp, r7
 801b3da:	bd90      	pop	{r4, r7, pc}

0801b3dc <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b3dc:	b580      	push	{r7, lr}
 801b3de:	b082      	sub	sp, #8
 801b3e0:	af00      	add	r7, sp, #0
 801b3e2:	6078      	str	r0, [r7, #4]
 801b3e4:	7039      	strb	r1, [r7, #0]
 801b3e6:	687b      	ldr	r3, [r7, #4]
 801b3e8:	4611      	mov	r1, r2
 801b3ea:	4618      	mov	r0, r3
 801b3ec:	f000 fa57 	bl	801b89e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b3f0:	687b      	ldr	r3, [r7, #4]
 801b3f2:	4618      	mov	r0, r3
 801b3f4:	3708      	adds	r7, #8
 801b3f6:	46bd      	mov	sp, r7
 801b3f8:	bd80      	pop	{r7, pc}

0801b3fa <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b3fa:	b580      	push	{r7, lr}
 801b3fc:	b082      	sub	sp, #8
 801b3fe:	af00      	add	r7, sp, #0
 801b400:	6078      	str	r0, [r7, #4]
 801b402:	7039      	strb	r1, [r7, #0]
 801b404:	687b      	ldr	r3, [r7, #4]
 801b406:	4611      	mov	r1, r2
 801b408:	4618      	mov	r0, r3
 801b40a:	f7ff ffe7 	bl	801b3dc <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b40e:	687b      	ldr	r3, [r7, #4]
 801b410:	4618      	mov	r0, r3
 801b412:	3708      	adds	r7, #8
 801b414:	46bd      	mov	sp, r7
 801b416:	bd80      	pop	{r7, pc}

0801b418 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b418:	b580      	push	{r7, lr}
 801b41a:	b082      	sub	sp, #8
 801b41c:	af00      	add	r7, sp, #0
 801b41e:	6078      	str	r0, [r7, #4]
 801b420:	7039      	strb	r1, [r7, #0]
 801b422:	687b      	ldr	r3, [r7, #4]
 801b424:	4611      	mov	r1, r2
 801b426:	4618      	mov	r0, r3
 801b428:	f7ff ffe7 	bl	801b3fa <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b42c:	687b      	ldr	r3, [r7, #4]
 801b42e:	4618      	mov	r0, r3
 801b430:	3708      	adds	r7, #8
 801b432:	46bd      	mov	sp, r7
 801b434:	bd80      	pop	{r7, pc}

0801b436 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801b436:	b580      	push	{r7, lr}
 801b438:	b082      	sub	sp, #8
 801b43a:	af00      	add	r7, sp, #0
 801b43c:	6078      	str	r0, [r7, #4]
 801b43e:	7039      	strb	r1, [r7, #0]
 801b440:	687b      	ldr	r3, [r7, #4]
 801b442:	4611      	mov	r1, r2
 801b444:	4618      	mov	r0, r3
 801b446:	f7ff ffe7 	bl	801b418 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b44a:	687b      	ldr	r3, [r7, #4]
 801b44c:	4618      	mov	r0, r3
 801b44e:	3708      	adds	r7, #8
 801b450:	46bd      	mov	sp, r7
 801b452:	bd80      	pop	{r7, pc}

0801b454 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 801b454:	b580      	push	{r7, lr}
 801b456:	b082      	sub	sp, #8
 801b458:	af00      	add	r7, sp, #0
 801b45a:	6078      	str	r0, [r7, #4]
 801b45c:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801b45e:	687b      	ldr	r3, [r7, #4]
 801b460:	4611      	mov	r1, r2
 801b462:	4618      	mov	r0, r3
 801b464:	f7ff ffe7 	bl	801b436 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801b468:	687b      	ldr	r3, [r7, #4]
 801b46a:	4618      	mov	r0, r3
 801b46c:	3708      	adds	r7, #8
 801b46e:	46bd      	mov	sp, r7
 801b470:	bd80      	pop	{r7, pc}

0801b472 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>:
      _Variant_base()
 801b472:	b580      	push	{r7, lr}
 801b474:	b082      	sub	sp, #8
 801b476:	af00      	add	r7, sp, #0
 801b478:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801b47a:	4619      	mov	r1, r3
 801b47c:	6878      	ldr	r0, [r7, #4]
 801b47e:	f7ff ffe9 	bl	801b454 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801b482:	687b      	ldr	r3, [r7, #4]
 801b484:	4618      	mov	r0, r3
 801b486:	3708      	adds	r7, #8
 801b488:	46bd      	mov	sp, r7
 801b48a:	bd80      	pop	{r7, pc}

0801b48c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801b48c:	b590      	push	{r4, r7, lr}
 801b48e:	b085      	sub	sp, #20
 801b490:	af00      	add	r7, sp, #0
 801b492:	6078      	str	r0, [r7, #4]
 801b494:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b496:	2301      	movs	r3, #1
 801b498:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b49a:	6878      	ldr	r0, [r7, #4]
 801b49c:	f7ee fe60 	bl	800a160 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801b4a0:	4603      	mov	r3, r0
 801b4a2:	2b01      	cmp	r3, #1
 801b4a4:	bf0c      	ite	eq
 801b4a6:	2301      	moveq	r3, #1
 801b4a8:	2300      	movne	r3, #0
 801b4aa:	b2db      	uxtb	r3, r3
 801b4ac:	2b00      	cmp	r3, #0
 801b4ae:	d00a      	beq.n	801b4c6 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b4b0:	6838      	ldr	r0, [r7, #0]
 801b4b2:	f7f9 fdaf 	bl	8015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b4b6:	4603      	mov	r3, r0
 801b4b8:	681c      	ldr	r4, [r3, #0]
 801b4ba:	6878      	ldr	r0, [r7, #4]
 801b4bc:	f7ef f9e2 	bl	800a884 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b4c0:	4603      	mov	r3, r0
 801b4c2:	601c      	str	r4, [r3, #0]
 801b4c4:	e007      	b.n	801b4d6 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b4c6:	6838      	ldr	r0, [r7, #0]
 801b4c8:	f7f9 fda4 	bl	8015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b4cc:	4603      	mov	r3, r0
 801b4ce:	4619      	mov	r1, r3
 801b4d0:	6878      	ldr	r0, [r7, #4]
 801b4d2:	f000 f9f6 	bl	801b8c2 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801b4d6:	687b      	ldr	r3, [r7, #4]
	}
 801b4d8:	4618      	mov	r0, r3
 801b4da:	3714      	adds	r7, #20
 801b4dc:	46bd      	mov	sp, r7
 801b4de:	bd90      	pop	{r4, r7, pc}

0801b4e0 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801b4e0:	b590      	push	{r4, r7, lr}
 801b4e2:	b085      	sub	sp, #20
 801b4e4:	af00      	add	r7, sp, #0
 801b4e6:	6078      	str	r0, [r7, #4]
 801b4e8:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801b4ea:	2300      	movs	r3, #0
 801b4ec:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801b4ee:	6878      	ldr	r0, [r7, #4]
 801b4f0:	f7ee fe36 	bl	800a160 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 801b4f4:	4603      	mov	r3, r0
 801b4f6:	2b00      	cmp	r3, #0
 801b4f8:	bf0c      	ite	eq
 801b4fa:	2301      	moveq	r3, #1
 801b4fc:	2300      	movne	r3, #0
 801b4fe:	b2db      	uxtb	r3, r3
 801b500:	2b00      	cmp	r3, #0
 801b502:	d00a      	beq.n	801b51a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801b504:	6838      	ldr	r0, [r7, #0]
 801b506:	f000 f9f5 	bl	801b8f4 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b50a:	4603      	mov	r3, r0
 801b50c:	681c      	ldr	r4, [r3, #0]
 801b50e:	6878      	ldr	r0, [r7, #4]
 801b510:	f7ef f9f6 	bl	800a900 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b514:	4603      	mov	r3, r0
 801b516:	601c      	str	r4, [r3, #0]
 801b518:	e007      	b.n	801b52a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801b51a:	6838      	ldr	r0, [r7, #0]
 801b51c:	f000 f9ea 	bl	801b8f4 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b520:	4603      	mov	r3, r0
 801b522:	4619      	mov	r1, r3
 801b524:	6878      	ldr	r0, [r7, #4]
 801b526:	f000 f9f0 	bl	801b90a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801b52a:	687b      	ldr	r3, [r7, #4]
	}
 801b52c:	4618      	mov	r0, r3
 801b52e:	3714      	adds	r7, #20
 801b530:	46bd      	mov	sp, r7
 801b532:	bd90      	pop	{r4, r7, pc}

0801b534 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801b534:	b580      	push	{r7, lr}
 801b536:	b082      	sub	sp, #8
 801b538:	af00      	add	r7, sp, #0
 801b53a:	6078      	str	r0, [r7, #4]
 801b53c:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b53e:	6838      	ldr	r0, [r7, #0]
 801b540:	f000 f9fc 	bl	801b93c <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801b544:	4603      	mov	r3, r0
 801b546:	4619      	mov	r1, r3
 801b548:	6878      	ldr	r0, [r7, #4]
 801b54a:	f000 fa02 	bl	801b952 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801b54e:	bf00      	nop
 801b550:	3708      	adds	r7, #8
 801b552:	46bd      	mov	sp, r7
 801b554:	bd80      	pop	{r7, pc}

0801b556 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b556:	b580      	push	{r7, lr}
 801b558:	b082      	sub	sp, #8
 801b55a:	af00      	add	r7, sp, #0
 801b55c:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b55e:	6878      	ldr	r0, [r7, #4]
 801b560:	f000 fa29 	bl	801b9b6 <_ZNSaIP16Power_expressionEC1Ev>
 801b564:	687b      	ldr	r3, [r7, #4]
 801b566:	4618      	mov	r0, r3
 801b568:	f000 fa31 	bl	801b9ce <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b56c:	687b      	ldr	r3, [r7, #4]
 801b56e:	4618      	mov	r0, r3
 801b570:	3708      	adds	r7, #8
 801b572:	46bd      	mov	sp, r7
 801b574:	bd80      	pop	{r7, pc}

0801b576 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b576:	b580      	push	{r7, lr}
 801b578:	b082      	sub	sp, #8
 801b57a:	af00      	add	r7, sp, #0
 801b57c:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b57e:	6878      	ldr	r0, [r7, #4]
 801b580:	f000 fa39 	bl	801b9f6 <_ZNSaI13mult_operatorEC1Ev>
 801b584:	687b      	ldr	r3, [r7, #4]
 801b586:	4618      	mov	r0, r3
 801b588:	f000 fa41 	bl	801ba0e <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801b58c:	687b      	ldr	r3, [r7, #4]
 801b58e:	4618      	mov	r0, r3
 801b590:	3708      	adds	r7, #8
 801b592:	46bd      	mov	sp, r7
 801b594:	bd80      	pop	{r7, pc}

0801b596 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b596:	b580      	push	{r7, lr}
 801b598:	b082      	sub	sp, #8
 801b59a:	af00      	add	r7, sp, #0
 801b59c:	6078      	str	r0, [r7, #4]
 801b59e:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b5a0:	6838      	ldr	r0, [r7, #0]
 801b5a2:	f000 fa48 	bl	801ba36 <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b5a6:	4603      	mov	r3, r0
 801b5a8:	4619      	mov	r1, r3
 801b5aa:	6878      	ldr	r0, [r7, #4]
 801b5ac:	f000 fa4e 	bl	801ba4c <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b5b0:	bf00      	nop
 801b5b2:	3708      	adds	r7, #8
 801b5b4:	46bd      	mov	sp, r7
 801b5b6:	bd80      	pop	{r7, pc}

0801b5b8 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 801b5b8:	b580      	push	{r7, lr}
 801b5ba:	b082      	sub	sp, #8
 801b5bc:	af00      	add	r7, sp, #0
 801b5be:	6078      	str	r0, [r7, #4]
 801b5c0:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b5c2:	6838      	ldr	r0, [r7, #0]
 801b5c4:	f000 fa74 	bl	801bab0 <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 801b5c8:	4603      	mov	r3, r0
 801b5ca:	4619      	mov	r1, r3
 801b5cc:	6878      	ldr	r0, [r7, #4]
 801b5ce:	f000 fa7a 	bl	801bac6 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801b5d2:	bf00      	nop
 801b5d4:	3708      	adds	r7, #8
 801b5d6:	46bd      	mov	sp, r7
 801b5d8:	bd80      	pop	{r7, pc}

0801b5da <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b5da:	b580      	push	{r7, lr}
 801b5dc:	b082      	sub	sp, #8
 801b5de:	af00      	add	r7, sp, #0
 801b5e0:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b5e2:	6878      	ldr	r0, [r7, #4]
 801b5e4:	f000 faa1 	bl	801bb2a <_ZNSaIP19Multiply_expressionEC1Ev>
 801b5e8:	687b      	ldr	r3, [r7, #4]
 801b5ea:	4618      	mov	r0, r3
 801b5ec:	f000 faa9 	bl	801bb42 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b5f0:	687b      	ldr	r3, [r7, #4]
 801b5f2:	4618      	mov	r0, r3
 801b5f4:	3708      	adds	r7, #8
 801b5f6:	46bd      	mov	sp, r7
 801b5f8:	bd80      	pop	{r7, pc}

0801b5fa <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b5fa:	b580      	push	{r7, lr}
 801b5fc:	b082      	sub	sp, #8
 801b5fe:	af00      	add	r7, sp, #0
 801b600:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b602:	6878      	ldr	r0, [r7, #4]
 801b604:	f000 fab1 	bl	801bb6a <_ZNSaI12sum_operatorEC1Ev>
 801b608:	687b      	ldr	r3, [r7, #4]
 801b60a:	4618      	mov	r0, r3
 801b60c:	f000 fab9 	bl	801bb82 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801b610:	687b      	ldr	r3, [r7, #4]
 801b612:	4618      	mov	r0, r3
 801b614:	3708      	adds	r7, #8
 801b616:	46bd      	mov	sp, r7
 801b618:	bd80      	pop	{r7, pc}

0801b61a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b61a:	b580      	push	{r7, lr}
 801b61c:	b082      	sub	sp, #8
 801b61e:	af00      	add	r7, sp, #0
 801b620:	6078      	str	r0, [r7, #4]
 801b622:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b624:	6838      	ldr	r0, [r7, #0]
 801b626:	f000 fac0 	bl	801bbaa <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b62a:	4603      	mov	r3, r0
 801b62c:	4619      	mov	r1, r3
 801b62e:	6878      	ldr	r0, [r7, #4]
 801b630:	f000 fac6 	bl	801bbc0 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b634:	bf00      	nop
 801b636:	3708      	adds	r7, #8
 801b638:	46bd      	mov	sp, r7
 801b63a:	bd80      	pop	{r7, pc}

0801b63c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b63c:	b580      	push	{r7, lr}
 801b63e:	b082      	sub	sp, #8
 801b640:	af00      	add	r7, sp, #0
 801b642:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b644:	6878      	ldr	r0, [r7, #4]
 801b646:	f000 faed 	bl	801bc24 <_ZNSaIP18Compare_expressionEC1Ev>
 801b64a:	687b      	ldr	r3, [r7, #4]
 801b64c:	4618      	mov	r0, r3
 801b64e:	f000 faf5 	bl	801bc3c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b652:	687b      	ldr	r3, [r7, #4]
 801b654:	4618      	mov	r0, r3
 801b656:	3708      	adds	r7, #8
 801b658:	46bd      	mov	sp, r7
 801b65a:	bd80      	pop	{r7, pc}

0801b65c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b65c:	b580      	push	{r7, lr}
 801b65e:	b082      	sub	sp, #8
 801b660:	af00      	add	r7, sp, #0
 801b662:	6078      	str	r0, [r7, #4]
 801b664:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b666:	6838      	ldr	r0, [r7, #0]
 801b668:	f000 fafc 	bl	801bc64 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b66c:	4603      	mov	r3, r0
 801b66e:	4619      	mov	r1, r3
 801b670:	6878      	ldr	r0, [r7, #4]
 801b672:	f000 fb02 	bl	801bc7a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b676:	bf00      	nop
 801b678:	3708      	adds	r7, #8
 801b67a:	46bd      	mov	sp, r7
 801b67c:	bd80      	pop	{r7, pc}

0801b67e <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801b67e:	b580      	push	{r7, lr}
 801b680:	b082      	sub	sp, #8
 801b682:	af00      	add	r7, sp, #0
 801b684:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801b686:	6878      	ldr	r0, [r7, #4]
 801b688:	f000 fb29 	bl	801bcde <_ZNSaIP14And_expressionEC1Ev>
 801b68c:	687b      	ldr	r3, [r7, #4]
 801b68e:	4618      	mov	r0, r3
 801b690:	f000 fb31 	bl	801bcf6 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801b694:	687b      	ldr	r3, [r7, #4]
 801b696:	4618      	mov	r0, r3
 801b698:	3708      	adds	r7, #8
 801b69a:	46bd      	mov	sp, r7
 801b69c:	bd80      	pop	{r7, pc}

0801b69e <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801b69e:	b580      	push	{r7, lr}
 801b6a0:	b082      	sub	sp, #8
 801b6a2:	af00      	add	r7, sp, #0
 801b6a4:	6078      	str	r0, [r7, #4]
 801b6a6:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801b6a8:	6838      	ldr	r0, [r7, #0]
 801b6aa:	f000 fb38 	bl	801bd1e <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801b6ae:	4603      	mov	r3, r0
 801b6b0:	4619      	mov	r1, r3
 801b6b2:	6878      	ldr	r0, [r7, #4]
 801b6b4:	f000 fb3e 	bl	801bd34 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 801b6b8:	bf00      	nop
 801b6ba:	3708      	adds	r7, #8
 801b6bc:	46bd      	mov	sp, r7
 801b6be:	bd80      	pop	{r7, pc}

0801b6c0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b6c0:	b580      	push	{r7, lr}
 801b6c2:	b082      	sub	sp, #8
 801b6c4:	af00      	add	r7, sp, #0
 801b6c6:	6078      	str	r0, [r7, #4]
 801b6c8:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b6ca:	687b      	ldr	r3, [r7, #4]
 801b6cc:	4618      	mov	r0, r3
 801b6ce:	f7ee ff79 	bl	800a5c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b6d2:	6838      	ldr	r0, [r7, #0]
 801b6d4:	f7f9 faa6 	bl	8014c24 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801b6d8:	4603      	mov	r3, r0
 801b6da:	4619      	mov	r1, r3
 801b6dc:	6878      	ldr	r0, [r7, #4]
 801b6de:	f000 fb5b 	bl	801bd98 <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b6e2:	6878      	ldr	r0, [r7, #4]
 801b6e4:	f7ef f87e 	bl	800a7e4 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b6e8:	4603      	mov	r3, r0
	}
 801b6ea:	4618      	mov	r0, r3
 801b6ec:	3708      	adds	r7, #8
 801b6ee:	46bd      	mov	sp, r7
 801b6f0:	bd80      	pop	{r7, pc}

0801b6f2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b6f2:	b480      	push	{r7}
 801b6f4:	b083      	sub	sp, #12
 801b6f6:	af00      	add	r7, sp, #0
 801b6f8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b6fa:	687b      	ldr	r3, [r7, #4]
 801b6fc:	4618      	mov	r0, r3
 801b6fe:	370c      	adds	r7, #12
 801b700:	46bd      	mov	sp, r7
 801b702:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b706:	4770      	bx	lr

0801b708 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b708:	b580      	push	{r7, lr}
 801b70a:	b082      	sub	sp, #8
 801b70c:	af00      	add	r7, sp, #0
 801b70e:	6078      	str	r0, [r7, #4]
 801b710:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b712:	687b      	ldr	r3, [r7, #4]
 801b714:	4618      	mov	r0, r3
 801b716:	f7ee ff55 	bl	800a5c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b71a:	6838      	ldr	r0, [r7, #0]
 801b71c:	f7ff ffe9 	bl	801b6f2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801b720:	4603      	mov	r3, r0
 801b722:	4619      	mov	r1, r3
 801b724:	6878      	ldr	r0, [r7, #4]
 801b726:	f000 fb56 	bl	801bdd6 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b72a:	6878      	ldr	r0, [r7, #4]
 801b72c:	f7ee ffc2 	bl	800a6b4 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b730:	4603      	mov	r3, r0
	}
 801b732:	4618      	mov	r0, r3
 801b734:	3708      	adds	r7, #8
 801b736:	46bd      	mov	sp, r7
 801b738:	bd80      	pop	{r7, pc}

0801b73a <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801b73a:	b480      	push	{r7}
 801b73c:	b083      	sub	sp, #12
 801b73e:	af00      	add	r7, sp, #0
 801b740:	6078      	str	r0, [r7, #4]
 801b742:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801b744:	687b      	ldr	r3, [r7, #4]
 801b746:	2200      	movs	r2, #0
 801b748:	701a      	strb	r2, [r3, #0]
	{ }
 801b74a:	687b      	ldr	r3, [r7, #4]
 801b74c:	4618      	mov	r0, r3
 801b74e:	370c      	adds	r7, #12
 801b750:	46bd      	mov	sp, r7
 801b752:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b756:	4770      	bx	lr

0801b758 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801b758:	b580      	push	{r7, lr}
 801b75a:	b082      	sub	sp, #8
 801b75c:	af00      	add	r7, sp, #0
 801b75e:	6078      	str	r0, [r7, #4]
 801b760:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801b762:	687b      	ldr	r3, [r7, #4]
 801b764:	4611      	mov	r1, r2
 801b766:	4618      	mov	r0, r3
 801b768:	f7ff ffe7 	bl	801b73a <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801b76c:	687b      	ldr	r3, [r7, #4]
 801b76e:	4618      	mov	r0, r3
 801b770:	3708      	adds	r7, #8
 801b772:	46bd      	mov	sp, r7
 801b774:	bd80      	pop	{r7, pc}

0801b776 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801b776:	b580      	push	{r7, lr}
 801b778:	b082      	sub	sp, #8
 801b77a:	af00      	add	r7, sp, #0
 801b77c:	6078      	str	r0, [r7, #4]
 801b77e:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801b780:	687b      	ldr	r3, [r7, #4]
 801b782:	4611      	mov	r1, r2
 801b784:	4618      	mov	r0, r3
 801b786:	f7ff ffe7 	bl	801b758 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801b78a:	687b      	ldr	r3, [r7, #4]
 801b78c:	2200      	movs	r2, #0
 801b78e:	761a      	strb	r2, [r3, #24]
	{ }
 801b790:	687b      	ldr	r3, [r7, #4]
 801b792:	4618      	mov	r0, r3
 801b794:	3708      	adds	r7, #8
 801b796:	46bd      	mov	sp, r7
 801b798:	bd80      	pop	{r7, pc}

0801b79a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b79a:	b580      	push	{r7, lr}
 801b79c:	b082      	sub	sp, #8
 801b79e:	af00      	add	r7, sp, #0
 801b7a0:	6078      	str	r0, [r7, #4]
 801b7a2:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b7a4:	687b      	ldr	r3, [r7, #4]
 801b7a6:	4618      	mov	r0, r3
 801b7a8:	f7ee ff0c 	bl	800a5c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b7ac:	6838      	ldr	r0, [r7, #0]
 801b7ae:	f7ec fa53 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801b7b2:	4603      	mov	r3, r0
 801b7b4:	4619      	mov	r1, r3
 801b7b6:	6878      	ldr	r0, [r7, #4]
 801b7b8:	f000 fb2c 	bl	801be14 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b7bc:	6878      	ldr	r0, [r7, #4]
 801b7be:	f7f1 febf 	bl	800d540 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b7c2:	4603      	mov	r3, r0
	}
 801b7c4:	4618      	mov	r0, r3
 801b7c6:	3708      	adds	r7, #8
 801b7c8:	46bd      	mov	sp, r7
 801b7ca:	bd80      	pop	{r7, pc}

0801b7cc <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801b7cc:	b580      	push	{r7, lr}
 801b7ce:	b082      	sub	sp, #8
 801b7d0:	af00      	add	r7, sp, #0
 801b7d2:	6078      	str	r0, [r7, #4]
 801b7d4:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b7d6:	687b      	ldr	r3, [r7, #4]
 801b7d8:	4618      	mov	r0, r3
 801b7da:	f7ee fef3 	bl	800a5c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b7de:	6838      	ldr	r0, [r7, #0]
 801b7e0:	f7e9 fa0c 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801b7e4:	4603      	mov	r3, r0
 801b7e6:	4619      	mov	r1, r3
 801b7e8:	6878      	ldr	r0, [r7, #4]
 801b7ea:	f000 fb33 	bl	801be54 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b7ee:	6878      	ldr	r0, [r7, #4]
 801b7f0:	f7f1 fe52 	bl	800d498 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b7f4:	4603      	mov	r3, r0
	}
 801b7f6:	4618      	mov	r0, r3
 801b7f8:	3708      	adds	r7, #8
 801b7fa:	46bd      	mov	sp, r7
 801b7fc:	bd80      	pop	{r7, pc}

0801b7fe <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 801b7fe:	b580      	push	{r7, lr}
 801b800:	b082      	sub	sp, #8
 801b802:	af00      	add	r7, sp, #0
 801b804:	6078      	str	r0, [r7, #4]
 801b806:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b808:	687b      	ldr	r3, [r7, #4]
 801b80a:	4618      	mov	r0, r3
 801b80c:	f7ee feda 	bl	800a5c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b810:	6838      	ldr	r0, [r7, #0]
 801b812:	f7e9 fa27 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801b816:	4603      	mov	r3, r0
 801b818:	4619      	mov	r1, r3
 801b81a:	6878      	ldr	r0, [r7, #4]
 801b81c:	f000 fb39 	bl	801be92 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b820:	6878      	ldr	r0, [r7, #4]
 801b822:	f7f1 fe55 	bl	800d4d0 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b826:	4603      	mov	r3, r0
	}
 801b828:	4618      	mov	r0, r3
 801b82a:	3708      	adds	r7, #8
 801b82c:	46bd      	mov	sp, r7
 801b82e:	bd80      	pop	{r7, pc}

0801b830 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 801b830:	b580      	push	{r7, lr}
 801b832:	b082      	sub	sp, #8
 801b834:	af00      	add	r7, sp, #0
 801b836:	6078      	str	r0, [r7, #4]
 801b838:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b83a:	687b      	ldr	r3, [r7, #4]
 801b83c:	4618      	mov	r0, r3
 801b83e:	f7ee fec1 	bl	800a5c4 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b842:	6838      	ldr	r0, [r7, #0]
 801b844:	f7ec fa50 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801b848:	4603      	mov	r3, r0
 801b84a:	4619      	mov	r1, r3
 801b84c:	6878      	ldr	r0, [r7, #4]
 801b84e:	f000 fb3f 	bl	801bed0 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b852:	6878      	ldr	r0, [r7, #4]
 801b854:	f7f1 fe58 	bl	800d508 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801b858:	4603      	mov	r3, r0
	}
 801b85a:	4618      	mov	r0, r3
 801b85c:	3708      	adds	r7, #8
 801b85e:	46bd      	mov	sp, r7
 801b860:	bd80      	pop	{r7, pc}

0801b862 <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 801b862:	b480      	push	{r7}
 801b864:	b083      	sub	sp, #12
 801b866:	af00      	add	r7, sp, #0
 801b868:	6078      	str	r0, [r7, #4]
 801b86a:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 801b86c:	687b      	ldr	r3, [r7, #4]
 801b86e:	2200      	movs	r2, #0
 801b870:	601a      	str	r2, [r3, #0]
	{ }
 801b872:	687b      	ldr	r3, [r7, #4]
 801b874:	4618      	mov	r0, r3
 801b876:	370c      	adds	r7, #12
 801b878:	46bd      	mov	sp, r7
 801b87a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b87e:	4770      	bx	lr

0801b880 <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 801b880:	b580      	push	{r7, lr}
 801b882:	b082      	sub	sp, #8
 801b884:	af00      	add	r7, sp, #0
 801b886:	6078      	str	r0, [r7, #4]
 801b888:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 801b88a:	687b      	ldr	r3, [r7, #4]
 801b88c:	4611      	mov	r1, r2
 801b88e:	4618      	mov	r0, r3
 801b890:	f7ff ffe7 	bl	801b862 <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 801b894:	687b      	ldr	r3, [r7, #4]
 801b896:	4618      	mov	r0, r3
 801b898:	3708      	adds	r7, #8
 801b89a:	46bd      	mov	sp, r7
 801b89c:	bd80      	pop	{r7, pc}

0801b89e <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 801b89e:	b580      	push	{r7, lr}
 801b8a0:	b082      	sub	sp, #8
 801b8a2:	af00      	add	r7, sp, #0
 801b8a4:	6078      	str	r0, [r7, #4]
 801b8a6:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 801b8a8:	687b      	ldr	r3, [r7, #4]
 801b8aa:	4611      	mov	r1, r2
 801b8ac:	4618      	mov	r0, r3
 801b8ae:	f7ff ffe7 	bl	801b880 <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 801b8b2:	687b      	ldr	r3, [r7, #4]
 801b8b4:	2200      	movs	r2, #0
 801b8b6:	711a      	strb	r2, [r3, #4]
	{ }
 801b8b8:	687b      	ldr	r3, [r7, #4]
 801b8ba:	4618      	mov	r0, r3
 801b8bc:	3708      	adds	r7, #8
 801b8be:	46bd      	mov	sp, r7
 801b8c0:	bd80      	pop	{r7, pc}

0801b8c2 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801b8c2:	b580      	push	{r7, lr}
 801b8c4:	b082      	sub	sp, #8
 801b8c6:	af00      	add	r7, sp, #0
 801b8c8:	6078      	str	r0, [r7, #4]
 801b8ca:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b8cc:	687b      	ldr	r3, [r7, #4]
 801b8ce:	4618      	mov	r0, r3
 801b8d0:	f000 fb1f 	bl	801bf12 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b8d4:	6838      	ldr	r0, [r7, #0]
 801b8d6:	f7f9 fb9d 	bl	8015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b8da:	4603      	mov	r3, r0
 801b8dc:	4619      	mov	r1, r3
 801b8de:	6878      	ldr	r0, [r7, #4]
 801b8e0:	f000 fb24 	bl	801bf2c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b8e4:	6878      	ldr	r0, [r7, #4]
 801b8e6:	f7ee ffcd 	bl	800a884 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b8ea:	4603      	mov	r3, r0
	}
 801b8ec:	4618      	mov	r0, r3
 801b8ee:	3708      	adds	r7, #8
 801b8f0:	46bd      	mov	sp, r7
 801b8f2:	bd80      	pop	{r7, pc}

0801b8f4 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801b8f4:	b480      	push	{r7}
 801b8f6:	b083      	sub	sp, #12
 801b8f8:	af00      	add	r7, sp, #0
 801b8fa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801b8fc:	687b      	ldr	r3, [r7, #4]
 801b8fe:	4618      	mov	r0, r3
 801b900:	370c      	adds	r7, #12
 801b902:	46bd      	mov	sp, r7
 801b904:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b908:	4770      	bx	lr

0801b90a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 801b90a:	b580      	push	{r7, lr}
 801b90c:	b082      	sub	sp, #8
 801b90e:	af00      	add	r7, sp, #0
 801b910:	6078      	str	r0, [r7, #4]
 801b912:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 801b914:	687b      	ldr	r3, [r7, #4]
 801b916:	4618      	mov	r0, r3
 801b918:	f000 fafb 	bl	801bf12 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801b91c:	6838      	ldr	r0, [r7, #0]
 801b91e:	f7ff ffe9 	bl	801b8f4 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801b922:	4603      	mov	r3, r0
 801b924:	4619      	mov	r1, r3
 801b926:	6878      	ldr	r0, [r7, #4]
 801b928:	f000 fb1f 	bl	801bf6a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801b92c:	6878      	ldr	r0, [r7, #4]
 801b92e:	f7ee ffe7 	bl	800a900 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 801b932:	4603      	mov	r3, r0
	}
 801b934:	4618      	mov	r0, r3
 801b936:	3708      	adds	r7, #8
 801b938:	46bd      	mov	sp, r7
 801b93a:	bd80      	pop	{r7, pc}

0801b93c <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801b93c:	b480      	push	{r7}
 801b93e:	b083      	sub	sp, #12
 801b940:	af00      	add	r7, sp, #0
 801b942:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b944:	687b      	ldr	r3, [r7, #4]
 801b946:	4618      	mov	r0, r3
 801b948:	370c      	adds	r7, #12
 801b94a:	46bd      	mov	sp, r7
 801b94c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b950:	4770      	bx	lr

0801b952 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801b952:	b5b0      	push	{r4, r5, r7, lr}
 801b954:	b082      	sub	sp, #8
 801b956:	af00      	add	r7, sp, #0
 801b958:	6078      	str	r0, [r7, #4]
 801b95a:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801b95c:	687b      	ldr	r3, [r7, #4]
 801b95e:	685a      	ldr	r2, [r3, #4]
 801b960:	687b      	ldr	r3, [r7, #4]
 801b962:	689b      	ldr	r3, [r3, #8]
 801b964:	429a      	cmp	r2, r3
 801b966:	d011      	beq.n	801b98c <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801b968:	687c      	ldr	r4, [r7, #4]
 801b96a:	687b      	ldr	r3, [r7, #4]
 801b96c:	685d      	ldr	r5, [r3, #4]
 801b96e:	6838      	ldr	r0, [r7, #0]
 801b970:	f000 fb1a 	bl	801bfa8 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b974:	4603      	mov	r3, r0
 801b976:	461a      	mov	r2, r3
 801b978:	4629      	mov	r1, r5
 801b97a:	4620      	mov	r0, r4
 801b97c:	f000 fb1f 	bl	801bfbe <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801b980:	687b      	ldr	r3, [r7, #4]
 801b982:	685b      	ldr	r3, [r3, #4]
 801b984:	1c5a      	adds	r2, r3, #1
 801b986:	687b      	ldr	r3, [r7, #4]
 801b988:	605a      	str	r2, [r3, #4]
 801b98a:	e00c      	b.n	801b9a6 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801b98c:	6878      	ldr	r0, [r7, #4]
 801b98e:	f000 fb29 	bl	801bfe4 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801b992:	4604      	mov	r4, r0
 801b994:	6838      	ldr	r0, [r7, #0]
 801b996:	f000 fb07 	bl	801bfa8 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801b99a:	4603      	mov	r3, r0
 801b99c:	461a      	mov	r2, r3
 801b99e:	4621      	mov	r1, r4
 801b9a0:	6878      	ldr	r0, [r7, #4]
 801b9a2:	f000 fb31 	bl	801c008 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801b9a6:	6878      	ldr	r0, [r7, #4]
 801b9a8:	f000 fba8 	bl	801c0fc <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>
 801b9ac:	4603      	mov	r3, r0
      }
 801b9ae:	4618      	mov	r0, r3
 801b9b0:	3708      	adds	r7, #8
 801b9b2:	46bd      	mov	sp, r7
 801b9b4:	bdb0      	pop	{r4, r5, r7, pc}

0801b9b6 <_ZNSaIP16Power_expressionEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 801b9b6:	b580      	push	{r7, lr}
 801b9b8:	b082      	sub	sp, #8
 801b9ba:	af00      	add	r7, sp, #0
 801b9bc:	6078      	str	r0, [r7, #4]
 801b9be:	6878      	ldr	r0, [r7, #4]
 801b9c0:	f000 fbb7 	bl	801c132 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>
 801b9c4:	687b      	ldr	r3, [r7, #4]
 801b9c6:	4618      	mov	r0, r3
 801b9c8:	3708      	adds	r7, #8
 801b9ca:	46bd      	mov	sp, r7
 801b9cc:	bd80      	pop	{r7, pc}

0801b9ce <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801b9ce:	b480      	push	{r7}
 801b9d0:	b083      	sub	sp, #12
 801b9d2:	af00      	add	r7, sp, #0
 801b9d4:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801b9d6:	687b      	ldr	r3, [r7, #4]
 801b9d8:	2200      	movs	r2, #0
 801b9da:	601a      	str	r2, [r3, #0]
 801b9dc:	687b      	ldr	r3, [r7, #4]
 801b9de:	2200      	movs	r2, #0
 801b9e0:	605a      	str	r2, [r3, #4]
 801b9e2:	687b      	ldr	r3, [r7, #4]
 801b9e4:	2200      	movs	r2, #0
 801b9e6:	609a      	str	r2, [r3, #8]
	{ }
 801b9e8:	687b      	ldr	r3, [r7, #4]
 801b9ea:	4618      	mov	r0, r3
 801b9ec:	370c      	adds	r7, #12
 801b9ee:	46bd      	mov	sp, r7
 801b9f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b9f4:	4770      	bx	lr

0801b9f6 <_ZNSaI13mult_operatorEC1Ev>:
 801b9f6:	b580      	push	{r7, lr}
 801b9f8:	b082      	sub	sp, #8
 801b9fa:	af00      	add	r7, sp, #0
 801b9fc:	6078      	str	r0, [r7, #4]
 801b9fe:	6878      	ldr	r0, [r7, #4]
 801ba00:	f000 fba2 	bl	801c148 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>
 801ba04:	687b      	ldr	r3, [r7, #4]
 801ba06:	4618      	mov	r0, r3
 801ba08:	3708      	adds	r7, #8
 801ba0a:	46bd      	mov	sp, r7
 801ba0c:	bd80      	pop	{r7, pc}

0801ba0e <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801ba0e:	b480      	push	{r7}
 801ba10:	b083      	sub	sp, #12
 801ba12:	af00      	add	r7, sp, #0
 801ba14:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801ba16:	687b      	ldr	r3, [r7, #4]
 801ba18:	2200      	movs	r2, #0
 801ba1a:	601a      	str	r2, [r3, #0]
 801ba1c:	687b      	ldr	r3, [r7, #4]
 801ba1e:	2200      	movs	r2, #0
 801ba20:	605a      	str	r2, [r3, #4]
 801ba22:	687b      	ldr	r3, [r7, #4]
 801ba24:	2200      	movs	r2, #0
 801ba26:	609a      	str	r2, [r3, #8]
	{ }
 801ba28:	687b      	ldr	r3, [r7, #4]
 801ba2a:	4618      	mov	r0, r3
 801ba2c:	370c      	adds	r7, #12
 801ba2e:	46bd      	mov	sp, r7
 801ba30:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ba34:	4770      	bx	lr

0801ba36 <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801ba36:	b480      	push	{r7}
 801ba38:	b083      	sub	sp, #12
 801ba3a:	af00      	add	r7, sp, #0
 801ba3c:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801ba3e:	687b      	ldr	r3, [r7, #4]
 801ba40:	4618      	mov	r0, r3
 801ba42:	370c      	adds	r7, #12
 801ba44:	46bd      	mov	sp, r7
 801ba46:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ba4a:	4770      	bx	lr

0801ba4c <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801ba4c:	b5b0      	push	{r4, r5, r7, lr}
 801ba4e:	b082      	sub	sp, #8
 801ba50:	af00      	add	r7, sp, #0
 801ba52:	6078      	str	r0, [r7, #4]
 801ba54:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801ba56:	687b      	ldr	r3, [r7, #4]
 801ba58:	685a      	ldr	r2, [r3, #4]
 801ba5a:	687b      	ldr	r3, [r7, #4]
 801ba5c:	689b      	ldr	r3, [r3, #8]
 801ba5e:	429a      	cmp	r2, r3
 801ba60:	d011      	beq.n	801ba86 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801ba62:	687c      	ldr	r4, [r7, #4]
 801ba64:	687b      	ldr	r3, [r7, #4]
 801ba66:	685d      	ldr	r5, [r3, #4]
 801ba68:	6838      	ldr	r0, [r7, #0]
 801ba6a:	f000 fb78 	bl	801c15e <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ba6e:	4603      	mov	r3, r0
 801ba70:	461a      	mov	r2, r3
 801ba72:	4629      	mov	r1, r5
 801ba74:	4620      	mov	r0, r4
 801ba76:	f000 fb7d 	bl	801c174 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801ba7a:	687b      	ldr	r3, [r7, #4]
 801ba7c:	685b      	ldr	r3, [r3, #4]
 801ba7e:	1d1a      	adds	r2, r3, #4
 801ba80:	687b      	ldr	r3, [r7, #4]
 801ba82:	605a      	str	r2, [r3, #4]
 801ba84:	e00c      	b.n	801baa0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801ba86:	6878      	ldr	r0, [r7, #4]
 801ba88:	f7ee fbec 	bl	800a264 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801ba8c:	4604      	mov	r4, r0
 801ba8e:	6838      	ldr	r0, [r7, #0]
 801ba90:	f000 fb65 	bl	801c15e <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ba94:	4603      	mov	r3, r0
 801ba96:	461a      	mov	r2, r3
 801ba98:	4621      	mov	r1, r4
 801ba9a:	6878      	ldr	r0, [r7, #4]
 801ba9c:	f000 fb7e 	bl	801c19c <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801baa0:	6878      	ldr	r0, [r7, #4]
 801baa2:	f000 fbf7 	bl	801c294 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>
 801baa6:	4603      	mov	r3, r0
      }
 801baa8:	4618      	mov	r0, r3
 801baaa:	3708      	adds	r7, #8
 801baac:	46bd      	mov	sp, r7
 801baae:	bdb0      	pop	{r4, r5, r7, pc}

0801bab0 <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 801bab0:	b480      	push	{r7}
 801bab2:	b083      	sub	sp, #12
 801bab4:	af00      	add	r7, sp, #0
 801bab6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bab8:	687b      	ldr	r3, [r7, #4]
 801baba:	4618      	mov	r0, r3
 801babc:	370c      	adds	r7, #12
 801babe:	46bd      	mov	sp, r7
 801bac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bac4:	4770      	bx	lr

0801bac6 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 801bac6:	b5b0      	push	{r4, r5, r7, lr}
 801bac8:	b082      	sub	sp, #8
 801baca:	af00      	add	r7, sp, #0
 801bacc:	6078      	str	r0, [r7, #4]
 801bace:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bad0:	687b      	ldr	r3, [r7, #4]
 801bad2:	685a      	ldr	r2, [r3, #4]
 801bad4:	687b      	ldr	r3, [r7, #4]
 801bad6:	689b      	ldr	r3, [r3, #8]
 801bad8:	429a      	cmp	r2, r3
 801bada:	d011      	beq.n	801bb00 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801badc:	687c      	ldr	r4, [r7, #4]
 801bade:	687b      	ldr	r3, [r7, #4]
 801bae0:	685d      	ldr	r5, [r3, #4]
 801bae2:	6838      	ldr	r0, [r7, #0]
 801bae4:	f000 fbf1 	bl	801c2ca <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bae8:	4603      	mov	r3, r0
 801baea:	461a      	mov	r2, r3
 801baec:	4629      	mov	r1, r5
 801baee:	4620      	mov	r0, r4
 801baf0:	f000 fbf6 	bl	801c2e0 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801baf4:	687b      	ldr	r3, [r7, #4]
 801baf6:	685b      	ldr	r3, [r3, #4]
 801baf8:	1c5a      	adds	r2, r3, #1
 801bafa:	687b      	ldr	r3, [r7, #4]
 801bafc:	605a      	str	r2, [r3, #4]
 801bafe:	e00c      	b.n	801bb1a <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bb00:	6878      	ldr	r0, [r7, #4]
 801bb02:	f000 fc00 	bl	801c306 <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801bb06:	4604      	mov	r4, r0
 801bb08:	6838      	ldr	r0, [r7, #0]
 801bb0a:	f000 fbde 	bl	801c2ca <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bb0e:	4603      	mov	r3, r0
 801bb10:	461a      	mov	r2, r3
 801bb12:	4621      	mov	r1, r4
 801bb14:	6878      	ldr	r0, [r7, #4]
 801bb16:	f000 fc07 	bl	801c328 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 801bb1a:	6878      	ldr	r0, [r7, #4]
 801bb1c:	f000 fc7e 	bl	801c41c <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>
 801bb20:	4603      	mov	r3, r0
      }
 801bb22:	4618      	mov	r0, r3
 801bb24:	3708      	adds	r7, #8
 801bb26:	46bd      	mov	sp, r7
 801bb28:	bdb0      	pop	{r4, r5, r7, pc}

0801bb2a <_ZNSaIP19Multiply_expressionEC1Ev>:
 801bb2a:	b580      	push	{r7, lr}
 801bb2c:	b082      	sub	sp, #8
 801bb2e:	af00      	add	r7, sp, #0
 801bb30:	6078      	str	r0, [r7, #4]
 801bb32:	6878      	ldr	r0, [r7, #4]
 801bb34:	f000 fc8d 	bl	801c452 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>
 801bb38:	687b      	ldr	r3, [r7, #4]
 801bb3a:	4618      	mov	r0, r3
 801bb3c:	3708      	adds	r7, #8
 801bb3e:	46bd      	mov	sp, r7
 801bb40:	bd80      	pop	{r7, pc}

0801bb42 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bb42:	b480      	push	{r7}
 801bb44:	b083      	sub	sp, #12
 801bb46:	af00      	add	r7, sp, #0
 801bb48:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bb4a:	687b      	ldr	r3, [r7, #4]
 801bb4c:	2200      	movs	r2, #0
 801bb4e:	601a      	str	r2, [r3, #0]
 801bb50:	687b      	ldr	r3, [r7, #4]
 801bb52:	2200      	movs	r2, #0
 801bb54:	605a      	str	r2, [r3, #4]
 801bb56:	687b      	ldr	r3, [r7, #4]
 801bb58:	2200      	movs	r2, #0
 801bb5a:	609a      	str	r2, [r3, #8]
	{ }
 801bb5c:	687b      	ldr	r3, [r7, #4]
 801bb5e:	4618      	mov	r0, r3
 801bb60:	370c      	adds	r7, #12
 801bb62:	46bd      	mov	sp, r7
 801bb64:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb68:	4770      	bx	lr

0801bb6a <_ZNSaI12sum_operatorEC1Ev>:
 801bb6a:	b580      	push	{r7, lr}
 801bb6c:	b082      	sub	sp, #8
 801bb6e:	af00      	add	r7, sp, #0
 801bb70:	6078      	str	r0, [r7, #4]
 801bb72:	6878      	ldr	r0, [r7, #4]
 801bb74:	f000 fc78 	bl	801c468 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>
 801bb78:	687b      	ldr	r3, [r7, #4]
 801bb7a:	4618      	mov	r0, r3
 801bb7c:	3708      	adds	r7, #8
 801bb7e:	46bd      	mov	sp, r7
 801bb80:	bd80      	pop	{r7, pc}

0801bb82 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bb82:	b480      	push	{r7}
 801bb84:	b083      	sub	sp, #12
 801bb86:	af00      	add	r7, sp, #0
 801bb88:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bb8a:	687b      	ldr	r3, [r7, #4]
 801bb8c:	2200      	movs	r2, #0
 801bb8e:	601a      	str	r2, [r3, #0]
 801bb90:	687b      	ldr	r3, [r7, #4]
 801bb92:	2200      	movs	r2, #0
 801bb94:	605a      	str	r2, [r3, #4]
 801bb96:	687b      	ldr	r3, [r7, #4]
 801bb98:	2200      	movs	r2, #0
 801bb9a:	609a      	str	r2, [r3, #8]
	{ }
 801bb9c:	687b      	ldr	r3, [r7, #4]
 801bb9e:	4618      	mov	r0, r3
 801bba0:	370c      	adds	r7, #12
 801bba2:	46bd      	mov	sp, r7
 801bba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bba8:	4770      	bx	lr

0801bbaa <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801bbaa:	b480      	push	{r7}
 801bbac:	b083      	sub	sp, #12
 801bbae:	af00      	add	r7, sp, #0
 801bbb0:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bbb2:	687b      	ldr	r3, [r7, #4]
 801bbb4:	4618      	mov	r0, r3
 801bbb6:	370c      	adds	r7, #12
 801bbb8:	46bd      	mov	sp, r7
 801bbba:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bbbe:	4770      	bx	lr

0801bbc0 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801bbc0:	b5b0      	push	{r4, r5, r7, lr}
 801bbc2:	b082      	sub	sp, #8
 801bbc4:	af00      	add	r7, sp, #0
 801bbc6:	6078      	str	r0, [r7, #4]
 801bbc8:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bbca:	687b      	ldr	r3, [r7, #4]
 801bbcc:	685a      	ldr	r2, [r3, #4]
 801bbce:	687b      	ldr	r3, [r7, #4]
 801bbd0:	689b      	ldr	r3, [r3, #8]
 801bbd2:	429a      	cmp	r2, r3
 801bbd4:	d011      	beq.n	801bbfa <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bbd6:	687c      	ldr	r4, [r7, #4]
 801bbd8:	687b      	ldr	r3, [r7, #4]
 801bbda:	685d      	ldr	r5, [r3, #4]
 801bbdc:	6838      	ldr	r0, [r7, #0]
 801bbde:	f000 fc4e 	bl	801c47e <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bbe2:	4603      	mov	r3, r0
 801bbe4:	461a      	mov	r2, r3
 801bbe6:	4629      	mov	r1, r5
 801bbe8:	4620      	mov	r0, r4
 801bbea:	f000 fc53 	bl	801c494 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bbee:	687b      	ldr	r3, [r7, #4]
 801bbf0:	685b      	ldr	r3, [r3, #4]
 801bbf2:	1d1a      	adds	r2, r3, #4
 801bbf4:	687b      	ldr	r3, [r7, #4]
 801bbf6:	605a      	str	r2, [r3, #4]
 801bbf8:	e00c      	b.n	801bc14 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bbfa:	6878      	ldr	r0, [r7, #4]
 801bbfc:	f7ee fbbd 	bl	800a37a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801bc00:	4604      	mov	r4, r0
 801bc02:	6838      	ldr	r0, [r7, #0]
 801bc04:	f000 fc3b 	bl	801c47e <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bc08:	4603      	mov	r3, r0
 801bc0a:	461a      	mov	r2, r3
 801bc0c:	4621      	mov	r1, r4
 801bc0e:	6878      	ldr	r0, [r7, #4]
 801bc10:	f000 fc54 	bl	801c4bc <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801bc14:	6878      	ldr	r0, [r7, #4]
 801bc16:	f000 fccd 	bl	801c5b4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>
 801bc1a:	4603      	mov	r3, r0
      }
 801bc1c:	4618      	mov	r0, r3
 801bc1e:	3708      	adds	r7, #8
 801bc20:	46bd      	mov	sp, r7
 801bc22:	bdb0      	pop	{r4, r5, r7, pc}

0801bc24 <_ZNSaIP18Compare_expressionEC1Ev>:
 801bc24:	b580      	push	{r7, lr}
 801bc26:	b082      	sub	sp, #8
 801bc28:	af00      	add	r7, sp, #0
 801bc2a:	6078      	str	r0, [r7, #4]
 801bc2c:	6878      	ldr	r0, [r7, #4]
 801bc2e:	f000 fcdc 	bl	801c5ea <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>
 801bc32:	687b      	ldr	r3, [r7, #4]
 801bc34:	4618      	mov	r0, r3
 801bc36:	3708      	adds	r7, #8
 801bc38:	46bd      	mov	sp, r7
 801bc3a:	bd80      	pop	{r7, pc}

0801bc3c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bc3c:	b480      	push	{r7}
 801bc3e:	b083      	sub	sp, #12
 801bc40:	af00      	add	r7, sp, #0
 801bc42:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bc44:	687b      	ldr	r3, [r7, #4]
 801bc46:	2200      	movs	r2, #0
 801bc48:	601a      	str	r2, [r3, #0]
 801bc4a:	687b      	ldr	r3, [r7, #4]
 801bc4c:	2200      	movs	r2, #0
 801bc4e:	605a      	str	r2, [r3, #4]
 801bc50:	687b      	ldr	r3, [r7, #4]
 801bc52:	2200      	movs	r2, #0
 801bc54:	609a      	str	r2, [r3, #8]
	{ }
 801bc56:	687b      	ldr	r3, [r7, #4]
 801bc58:	4618      	mov	r0, r3
 801bc5a:	370c      	adds	r7, #12
 801bc5c:	46bd      	mov	sp, r7
 801bc5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc62:	4770      	bx	lr

0801bc64 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801bc64:	b480      	push	{r7}
 801bc66:	b083      	sub	sp, #12
 801bc68:	af00      	add	r7, sp, #0
 801bc6a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bc6c:	687b      	ldr	r3, [r7, #4]
 801bc6e:	4618      	mov	r0, r3
 801bc70:	370c      	adds	r7, #12
 801bc72:	46bd      	mov	sp, r7
 801bc74:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc78:	4770      	bx	lr

0801bc7a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801bc7a:	b5b0      	push	{r4, r5, r7, lr}
 801bc7c:	b082      	sub	sp, #8
 801bc7e:	af00      	add	r7, sp, #0
 801bc80:	6078      	str	r0, [r7, #4]
 801bc82:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bc84:	687b      	ldr	r3, [r7, #4]
 801bc86:	685a      	ldr	r2, [r3, #4]
 801bc88:	687b      	ldr	r3, [r7, #4]
 801bc8a:	689b      	ldr	r3, [r3, #8]
 801bc8c:	429a      	cmp	r2, r3
 801bc8e:	d011      	beq.n	801bcb4 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bc90:	687c      	ldr	r4, [r7, #4]
 801bc92:	687b      	ldr	r3, [r7, #4]
 801bc94:	685d      	ldr	r5, [r3, #4]
 801bc96:	6838      	ldr	r0, [r7, #0]
 801bc98:	f000 fcb2 	bl	801c600 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bc9c:	4603      	mov	r3, r0
 801bc9e:	461a      	mov	r2, r3
 801bca0:	4629      	mov	r1, r5
 801bca2:	4620      	mov	r0, r4
 801bca4:	f000 fcb7 	bl	801c616 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bca8:	687b      	ldr	r3, [r7, #4]
 801bcaa:	685b      	ldr	r3, [r3, #4]
 801bcac:	1d1a      	adds	r2, r3, #4
 801bcae:	687b      	ldr	r3, [r7, #4]
 801bcb0:	605a      	str	r2, [r3, #4]
 801bcb2:	e00c      	b.n	801bcce <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bcb4:	6878      	ldr	r0, [r7, #4]
 801bcb6:	f7ee fbd0 	bl	800a45a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801bcba:	4604      	mov	r4, r0
 801bcbc:	6838      	ldr	r0, [r7, #0]
 801bcbe:	f000 fc9f 	bl	801c600 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bcc2:	4603      	mov	r3, r0
 801bcc4:	461a      	mov	r2, r3
 801bcc6:	4621      	mov	r1, r4
 801bcc8:	6878      	ldr	r0, [r7, #4]
 801bcca:	f000 fcb7 	bl	801c63c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801bcce:	6878      	ldr	r0, [r7, #4]
 801bcd0:	f000 fd30 	bl	801c734 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>
 801bcd4:	4603      	mov	r3, r0
      }
 801bcd6:	4618      	mov	r0, r3
 801bcd8:	3708      	adds	r7, #8
 801bcda:	46bd      	mov	sp, r7
 801bcdc:	bdb0      	pop	{r4, r5, r7, pc}

0801bcde <_ZNSaIP14And_expressionEC1Ev>:
 801bcde:	b580      	push	{r7, lr}
 801bce0:	b082      	sub	sp, #8
 801bce2:	af00      	add	r7, sp, #0
 801bce4:	6078      	str	r0, [r7, #4]
 801bce6:	6878      	ldr	r0, [r7, #4]
 801bce8:	f000 fd3f 	bl	801c76a <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>
 801bcec:	687b      	ldr	r3, [r7, #4]
 801bcee:	4618      	mov	r0, r3
 801bcf0:	3708      	adds	r7, #8
 801bcf2:	46bd      	mov	sp, r7
 801bcf4:	bd80      	pop	{r7, pc}

0801bcf6 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801bcf6:	b480      	push	{r7}
 801bcf8:	b083      	sub	sp, #12
 801bcfa:	af00      	add	r7, sp, #0
 801bcfc:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801bcfe:	687b      	ldr	r3, [r7, #4]
 801bd00:	2200      	movs	r2, #0
 801bd02:	601a      	str	r2, [r3, #0]
 801bd04:	687b      	ldr	r3, [r7, #4]
 801bd06:	2200      	movs	r2, #0
 801bd08:	605a      	str	r2, [r3, #4]
 801bd0a:	687b      	ldr	r3, [r7, #4]
 801bd0c:	2200      	movs	r2, #0
 801bd0e:	609a      	str	r2, [r3, #8]
	{ }
 801bd10:	687b      	ldr	r3, [r7, #4]
 801bd12:	4618      	mov	r0, r3
 801bd14:	370c      	adds	r7, #12
 801bd16:	46bd      	mov	sp, r7
 801bd18:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bd1c:	4770      	bx	lr

0801bd1e <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 801bd1e:	b480      	push	{r7}
 801bd20:	b083      	sub	sp, #12
 801bd22:	af00      	add	r7, sp, #0
 801bd24:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801bd26:	687b      	ldr	r3, [r7, #4]
 801bd28:	4618      	mov	r0, r3
 801bd2a:	370c      	adds	r7, #12
 801bd2c:	46bd      	mov	sp, r7
 801bd2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bd32:	4770      	bx	lr

0801bd34 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 801bd34:	b5b0      	push	{r4, r5, r7, lr}
 801bd36:	b082      	sub	sp, #8
 801bd38:	af00      	add	r7, sp, #0
 801bd3a:	6078      	str	r0, [r7, #4]
 801bd3c:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 801bd3e:	687b      	ldr	r3, [r7, #4]
 801bd40:	685a      	ldr	r2, [r3, #4]
 801bd42:	687b      	ldr	r3, [r7, #4]
 801bd44:	689b      	ldr	r3, [r3, #8]
 801bd46:	429a      	cmp	r2, r3
 801bd48:	d011      	beq.n	801bd6e <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 801bd4a:	687c      	ldr	r4, [r7, #4]
 801bd4c:	687b      	ldr	r3, [r7, #4]
 801bd4e:	685d      	ldr	r5, [r3, #4]
 801bd50:	6838      	ldr	r0, [r7, #0]
 801bd52:	f000 fd15 	bl	801c780 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bd56:	4603      	mov	r3, r0
 801bd58:	461a      	mov	r2, r3
 801bd5a:	4629      	mov	r1, r5
 801bd5c:	4620      	mov	r0, r4
 801bd5e:	f000 fd1a 	bl	801c796 <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801bd62:	687b      	ldr	r3, [r7, #4]
 801bd64:	685b      	ldr	r3, [r3, #4]
 801bd66:	1d1a      	adds	r2, r3, #4
 801bd68:	687b      	ldr	r3, [r7, #4]
 801bd6a:	605a      	str	r2, [r3, #4]
 801bd6c:	e00c      	b.n	801bd88 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 801bd6e:	6878      	ldr	r0, [r7, #4]
 801bd70:	f7ee fbe3 	bl	800a53a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801bd74:	4604      	mov	r4, r0
 801bd76:	6838      	ldr	r0, [r7, #0]
 801bd78:	f000 fd02 	bl	801c780 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bd7c:	4603      	mov	r3, r0
 801bd7e:	461a      	mov	r2, r3
 801bd80:	4621      	mov	r1, r4
 801bd82:	6878      	ldr	r0, [r7, #4]
 801bd84:	f000 fd1a 	bl	801c7bc <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 801bd88:	6878      	ldr	r0, [r7, #4]
 801bd8a:	f000 fd93 	bl	801c8b4 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>
 801bd8e:	4603      	mov	r3, r0
      }
 801bd90:	4618      	mov	r0, r3
 801bd92:	3708      	adds	r7, #8
 801bd94:	46bd      	mov	sp, r7
 801bd96:	bdb0      	pop	{r4, r5, r7, pc}

0801bd98 <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bd98:	b590      	push	{r4, r7, lr}
 801bd9a:	b085      	sub	sp, #20
 801bd9c:	af00      	add	r7, sp, #0
 801bd9e:	6078      	str	r0, [r7, #4]
 801bda0:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801bda2:	687b      	ldr	r3, [r7, #4]
 801bda4:	2205      	movs	r2, #5
 801bda6:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bda8:	6878      	ldr	r0, [r7, #4]
 801bdaa:	f7ee fd0a 	bl	800a7c2 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801bdae:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bdb0:	6838      	ldr	r0, [r7, #0]
 801bdb2:	f7f8 ff37 	bl	8014c24 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801bdb6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bdb8:	681c      	ldr	r4, [r3, #0]
 801bdba:	68f8      	ldr	r0, [r7, #12]
 801bdbc:	f7f9 fe38 	bl	8015a30 <_ZSt9addressofIP13Function_callEPT_RS2_>
 801bdc0:	4603      	mov	r3, r0
 801bdc2:	4619      	mov	r1, r3
 801bdc4:	2004      	movs	r0, #4
 801bdc6:	f7e5 f948 	bl	800105a <_ZnwjPv>
 801bdca:	4603      	mov	r3, r0
 801bdcc:	601c      	str	r4, [r3, #0]
    }
 801bdce:	bf00      	nop
 801bdd0:	3714      	adds	r7, #20
 801bdd2:	46bd      	mov	sp, r7
 801bdd4:	bd90      	pop	{r4, r7, pc}

0801bdd6 <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bdd6:	b590      	push	{r4, r7, lr}
 801bdd8:	b085      	sub	sp, #20
 801bdda:	af00      	add	r7, sp, #0
 801bddc:	6078      	str	r0, [r7, #4]
 801bdde:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801bde0:	687b      	ldr	r3, [r7, #4]
 801bde2:	2204      	movs	r2, #4
 801bde4:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bde6:	6878      	ldr	r0, [r7, #4]
 801bde8:	f7ee fc53 	bl	800a692 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801bdec:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bdee:	6838      	ldr	r0, [r7, #0]
 801bdf0:	f7ff fc7f 	bl	801b6f2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801bdf4:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bdf6:	681c      	ldr	r4, [r3, #0]
 801bdf8:	68f8      	ldr	r0, [r7, #12]
 801bdfa:	f000 fd76 	bl	801c8ea <_ZSt9addressofIP8VariableEPT_RS2_>
 801bdfe:	4603      	mov	r3, r0
 801be00:	4619      	mov	r1, r3
 801be02:	2004      	movs	r0, #4
 801be04:	f7e5 f929 	bl	800105a <_ZnwjPv>
 801be08:	4603      	mov	r3, r0
 801be0a:	601c      	str	r4, [r3, #0]
    }
 801be0c:	bf00      	nop
 801be0e:	3714      	adds	r7, #20
 801be10:	46bd      	mov	sp, r7
 801be12:	bd90      	pop	{r4, r7, pc}

0801be14 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801be14:	b590      	push	{r4, r7, lr}
 801be16:	b085      	sub	sp, #20
 801be18:	af00      	add	r7, sp, #0
 801be1a:	6078      	str	r0, [r7, #4]
 801be1c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801be1e:	687b      	ldr	r3, [r7, #4]
 801be20:	2200      	movs	r2, #0
 801be22:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801be24:	6878      	ldr	r0, [r7, #4]
 801be26:	f7ee ff81 	bl	800ad2c <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801be2a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801be2c:	6838      	ldr	r0, [r7, #0]
 801be2e:	f7eb ff13 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801be32:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801be34:	781c      	ldrb	r4, [r3, #0]
 801be36:	68f8      	ldr	r0, [r7, #12]
 801be38:	f7ec fc98 	bl	800876c <_ZSt9addressofIbEPT_RS0_>
 801be3c:	4603      	mov	r3, r0
 801be3e:	4619      	mov	r1, r3
 801be40:	2001      	movs	r0, #1
 801be42:	f7e5 f90a 	bl	800105a <_ZnwjPv>
 801be46:	4603      	mov	r3, r0
 801be48:	4622      	mov	r2, r4
 801be4a:	701a      	strb	r2, [r3, #0]
    }
 801be4c:	bf00      	nop
 801be4e:	3714      	adds	r7, #20
 801be50:	46bd      	mov	sp, r7
 801be52:	bd90      	pop	{r4, r7, pc}

0801be54 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801be54:	b590      	push	{r4, r7, lr}
 801be56:	b085      	sub	sp, #20
 801be58:	af00      	add	r7, sp, #0
 801be5a:	6078      	str	r0, [r7, #4]
 801be5c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801be5e:	687b      	ldr	r3, [r7, #4]
 801be60:	2201      	movs	r2, #1
 801be62:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801be64:	6878      	ldr	r0, [r7, #4]
 801be66:	f7ee ffeb 	bl	800ae40 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801be6a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801be6c:	6838      	ldr	r0, [r7, #0]
 801be6e:	f7e8 fec5 	bl	8004bfc <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 801be72:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801be74:	681c      	ldr	r4, [r3, #0]
 801be76:	68f8      	ldr	r0, [r7, #12]
 801be78:	f7ec fc60 	bl	800873c <_ZSt9addressofIiEPT_RS0_>
 801be7c:	4603      	mov	r3, r0
 801be7e:	4619      	mov	r1, r3
 801be80:	2004      	movs	r0, #4
 801be82:	f7e5 f8ea 	bl	800105a <_ZnwjPv>
 801be86:	4603      	mov	r3, r0
 801be88:	601c      	str	r4, [r3, #0]
    }
 801be8a:	bf00      	nop
 801be8c:	3714      	adds	r7, #20
 801be8e:	46bd      	mov	sp, r7
 801be90:	bd90      	pop	{r4, r7, pc}

0801be92 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801be92:	b590      	push	{r4, r7, lr}
 801be94:	b085      	sub	sp, #20
 801be96:	af00      	add	r7, sp, #0
 801be98:	6078      	str	r0, [r7, #4]
 801be9a:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801be9c:	687b      	ldr	r3, [r7, #4]
 801be9e:	2202      	movs	r2, #2
 801bea0:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bea2:	6878      	ldr	r0, [r7, #4]
 801bea4:	f7ef f868 	bl	800af78 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801bea8:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801beaa:	6838      	ldr	r0, [r7, #0]
 801beac:	f7e8 feda 	bl	8004c64 <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801beb0:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801beb2:	681c      	ldr	r4, [r3, #0]
 801beb4:	68f8      	ldr	r0, [r7, #12]
 801beb6:	f7ec fc4d 	bl	8008754 <_ZSt9addressofIfEPT_RS0_>
 801beba:	4603      	mov	r3, r0
 801bebc:	4619      	mov	r1, r3
 801bebe:	2004      	movs	r0, #4
 801bec0:	f7e5 f8cb 	bl	800105a <_ZnwjPv>
 801bec4:	4603      	mov	r3, r0
 801bec6:	601c      	str	r4, [r3, #0]
    }
 801bec8:	bf00      	nop
 801beca:	3714      	adds	r7, #20
 801becc:	46bd      	mov	sp, r7
 801bece:	bd90      	pop	{r4, r7, pc}

0801bed0 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bed0:	b590      	push	{r4, r7, lr}
 801bed2:	b085      	sub	sp, #20
 801bed4:	af00      	add	r7, sp, #0
 801bed6:	6078      	str	r0, [r7, #4]
 801bed8:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801beda:	687b      	ldr	r3, [r7, #4]
 801bedc:	2203      	movs	r2, #3
 801bede:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bee0:	6878      	ldr	r0, [r7, #4]
 801bee2:	f7ef f8f7 	bl	800b0d4 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801bee6:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bee8:	6838      	ldr	r0, [r7, #0]
 801beea:	f7eb fefd 	bl	8007ce8 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801beee:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 801bef0:	68f8      	ldr	r0, [r7, #12]
 801bef2:	f7ec fc47 	bl	8008784 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 801bef6:	4603      	mov	r3, r0
 801bef8:	4619      	mov	r1, r3
 801befa:	2018      	movs	r0, #24
 801befc:	f7e5 f8ad 	bl	800105a <_ZnwjPv>
 801bf00:	4603      	mov	r3, r0
 801bf02:	4621      	mov	r1, r4
 801bf04:	4618      	mov	r0, r3
 801bf06:	f007 fc52 	bl	80237ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 801bf0a:	bf00      	nop
 801bf0c:	3714      	adds	r7, #20
 801bf0e:	46bd      	mov	sp, r7
 801bf10:	bd90      	pop	{r4, r7, pc}

0801bf12 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>:
      void _M_reset()
 801bf12:	b480      	push	{r7}
 801bf14:	b083      	sub	sp, #12
 801bf16:	af00      	add	r7, sp, #0
 801bf18:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 801bf1a:	687b      	ldr	r3, [r7, #4]
 801bf1c:	22ff      	movs	r2, #255	; 0xff
 801bf1e:	711a      	strb	r2, [r3, #4]
 801bf20:	bf00      	nop
 801bf22:	370c      	adds	r7, #12
 801bf24:	46bd      	mov	sp, r7
 801bf26:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bf2a:	4770      	bx	lr

0801bf2c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bf2c:	b590      	push	{r4, r7, lr}
 801bf2e:	b085      	sub	sp, #20
 801bf30:	af00      	add	r7, sp, #0
 801bf32:	6078      	str	r0, [r7, #4]
 801bf34:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801bf36:	687b      	ldr	r3, [r7, #4]
 801bf38:	2201      	movs	r2, #1
 801bf3a:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bf3c:	6878      	ldr	r0, [r7, #4]
 801bf3e:	f7ee fc90 	bl	800a862 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801bf42:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bf44:	6838      	ldr	r0, [r7, #0]
 801bf46:	f7f9 f865 	bl	8015014 <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bf4a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bf4c:	681c      	ldr	r4, [r3, #0]
 801bf4e:	68f8      	ldr	r0, [r7, #12]
 801bf50:	f000 fcd7 	bl	801c902 <_ZSt9addressofIP10ExpressionEPT_RS2_>
 801bf54:	4603      	mov	r3, r0
 801bf56:	4619      	mov	r1, r3
 801bf58:	2004      	movs	r0, #4
 801bf5a:	f7e5 f87e 	bl	800105a <_ZnwjPv>
 801bf5e:	4603      	mov	r3, r0
 801bf60:	601c      	str	r4, [r3, #0]
    }
 801bf62:	bf00      	nop
 801bf64:	3714      	adds	r7, #20
 801bf66:	46bd      	mov	sp, r7
 801bf68:	bd90      	pop	{r4, r7, pc}

0801bf6a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801bf6a:	b590      	push	{r4, r7, lr}
 801bf6c:	b085      	sub	sp, #20
 801bf6e:	af00      	add	r7, sp, #0
 801bf70:	6078      	str	r0, [r7, #4]
 801bf72:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801bf74:	687b      	ldr	r3, [r7, #4]
 801bf76:	2200      	movs	r2, #0
 801bf78:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801bf7a:	6878      	ldr	r0, [r7, #4]
 801bf7c:	f7ee fcaf 	bl	800a8de <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 801bf80:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801bf82:	6838      	ldr	r0, [r7, #0]
 801bf84:	f7ff fcb6 	bl	801b8f4 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801bf88:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801bf8a:	681c      	ldr	r4, [r3, #0]
 801bf8c:	68f8      	ldr	r0, [r7, #12]
 801bf8e:	f000 fcc4 	bl	801c91a <_ZSt9addressofIP17Primal_expressionEPT_RS2_>
 801bf92:	4603      	mov	r3, r0
 801bf94:	4619      	mov	r1, r3
 801bf96:	2004      	movs	r0, #4
 801bf98:	f7e5 f85f 	bl	800105a <_ZnwjPv>
 801bf9c:	4603      	mov	r3, r0
 801bf9e:	601c      	str	r4, [r3, #0]
    }
 801bfa0:	bf00      	nop
 801bfa2:	3714      	adds	r7, #20
 801bfa4:	46bd      	mov	sp, r7
 801bfa6:	bd90      	pop	{r4, r7, pc}

0801bfa8 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801bfa8:	b480      	push	{r7}
 801bfaa:	b083      	sub	sp, #12
 801bfac:	af00      	add	r7, sp, #0
 801bfae:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801bfb0:	687b      	ldr	r3, [r7, #4]
 801bfb2:	4618      	mov	r0, r3
 801bfb4:	370c      	adds	r7, #12
 801bfb6:	46bd      	mov	sp, r7
 801bfb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bfbc:	4770      	bx	lr

0801bfbe <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801bfbe:	b580      	push	{r7, lr}
 801bfc0:	b084      	sub	sp, #16
 801bfc2:	af00      	add	r7, sp, #0
 801bfc4:	60f8      	str	r0, [r7, #12]
 801bfc6:	60b9      	str	r1, [r7, #8]
 801bfc8:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801bfca:	6878      	ldr	r0, [r7, #4]
 801bfcc:	f7ff ffec 	bl	801bfa8 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801bfd0:	4603      	mov	r3, r0
 801bfd2:	461a      	mov	r2, r3
 801bfd4:	68b9      	ldr	r1, [r7, #8]
 801bfd6:	68f8      	ldr	r0, [r7, #12]
 801bfd8:	f000 fcab 	bl	801c932 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801bfdc:	bf00      	nop
 801bfde:	3710      	adds	r7, #16
 801bfe0:	46bd      	mov	sp, r7
 801bfe2:	bd80      	pop	{r7, pc}

0801bfe4 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801bfe4:	b580      	push	{r7, lr}
 801bfe6:	b084      	sub	sp, #16
 801bfe8:	af00      	add	r7, sp, #0
 801bfea:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801bfec:	687b      	ldr	r3, [r7, #4]
 801bfee:	1d1a      	adds	r2, r3, #4
 801bff0:	f107 030c 	add.w	r3, r7, #12
 801bff4:	4611      	mov	r1, r2
 801bff6:	4618      	mov	r0, r3
 801bff8:	f000 fcb2 	bl	801c960 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801bffc:	68fb      	ldr	r3, [r7, #12]
 801bffe:	4618      	mov	r0, r3
 801c000:	3710      	adds	r7, #16
 801c002:	46bd      	mov	sp, r7
 801c004:	bd80      	pop	{r7, pc}
	...

0801c008 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c008:	b5b0      	push	{r4, r5, r7, lr}
 801c00a:	b08c      	sub	sp, #48	; 0x30
 801c00c:	af00      	add	r7, sp, #0
 801c00e:	60f8      	str	r0, [r7, #12]
 801c010:	60b9      	str	r1, [r7, #8]
 801c012:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c014:	4a38      	ldr	r2, [pc, #224]	; (801c0f8 <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801c016:	2101      	movs	r1, #1
 801c018:	68f8      	ldr	r0, [r7, #12]
 801c01a:	f000 fcb1 	bl	801c980 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>
 801c01e:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c020:	68fb      	ldr	r3, [r7, #12]
 801c022:	681b      	ldr	r3, [r3, #0]
 801c024:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c026:	68fb      	ldr	r3, [r7, #12]
 801c028:	685b      	ldr	r3, [r3, #4]
 801c02a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c02c:	68f8      	ldr	r0, [r7, #12]
 801c02e:	f000 fcee 	bl	801ca0e <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>
 801c032:	4603      	mov	r3, r0
 801c034:	617b      	str	r3, [r7, #20]
 801c036:	f107 0214 	add.w	r2, r7, #20
 801c03a:	f107 0308 	add.w	r3, r7, #8
 801c03e:	4611      	mov	r1, r2
 801c040:	4618      	mov	r0, r3
 801c042:	f000 fcf4 	bl	801ca2e <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801c046:	4603      	mov	r3, r0
 801c048:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c04a:	68fb      	ldr	r3, [r7, #12]
 801c04c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c04e:	4618      	mov	r0, r3
 801c050:	f000 fd01 	bl	801ca56 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>
 801c054:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c056:	69fb      	ldr	r3, [r7, #28]
 801c058:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c05a:	68fc      	ldr	r4, [r7, #12]
 801c05c:	69fa      	ldr	r2, [r7, #28]
 801c05e:	6a3b      	ldr	r3, [r7, #32]
 801c060:	18d5      	adds	r5, r2, r3
 801c062:	6878      	ldr	r0, [r7, #4]
 801c064:	f7ff ffa0 	bl	801bfa8 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c068:	4603      	mov	r3, r0
 801c06a:	461a      	mov	r2, r3
 801c06c:	4629      	mov	r1, r5
 801c06e:	4620      	mov	r0, r4
 801c070:	f7ff ffa5 	bl	801bfbe <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801c074:	2300      	movs	r3, #0
 801c076:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c078:	f107 0308 	add.w	r3, r7, #8
 801c07c:	4618      	mov	r0, r3
 801c07e:	f000 fd12 	bl	801caa6 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c082:	4603      	mov	r3, r0
 801c084:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c086:	68fb      	ldr	r3, [r7, #12]
 801c088:	4618      	mov	r0, r3
 801c08a:	f7ee fcb7 	bl	800a9fc <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c08e:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c090:	69fa      	ldr	r2, [r7, #28]
 801c092:	4621      	mov	r1, r4
 801c094:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c096:	f000 fcf2 	bl	801ca7e <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c09a:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c09c:	69bb      	ldr	r3, [r7, #24]
 801c09e:	3301      	adds	r3, #1
 801c0a0:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c0a2:	f107 0308 	add.w	r3, r7, #8
 801c0a6:	4618      	mov	r0, r3
 801c0a8:	f000 fcfd 	bl	801caa6 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c0ac:	4603      	mov	r3, r0
 801c0ae:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c0b0:	68fb      	ldr	r3, [r7, #12]
 801c0b2:	4618      	mov	r0, r3
 801c0b4:	f7ee fca2 	bl	800a9fc <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c0b8:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c0ba:	69ba      	ldr	r2, [r7, #24]
 801c0bc:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c0be:	4620      	mov	r0, r4
 801c0c0:	f000 fcdd 	bl	801ca7e <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c0c4:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c0c6:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c0c8:	68fb      	ldr	r3, [r7, #12]
 801c0ca:	689a      	ldr	r2, [r3, #8]
 801c0cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c0ce:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801c0d0:	461a      	mov	r2, r3
 801c0d2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c0d4:	f7ef fa21 	bl	800b51a <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801c0d8:	68fb      	ldr	r3, [r7, #12]
 801c0da:	69fa      	ldr	r2, [r7, #28]
 801c0dc:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c0de:	68fb      	ldr	r3, [r7, #12]
 801c0e0:	69ba      	ldr	r2, [r7, #24]
 801c0e2:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c0e4:	69fa      	ldr	r2, [r7, #28]
 801c0e6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c0e8:	441a      	add	r2, r3
 801c0ea:	68fb      	ldr	r3, [r7, #12]
 801c0ec:	609a      	str	r2, [r3, #8]
    }
 801c0ee:	bf00      	nop
 801c0f0:	3730      	adds	r7, #48	; 0x30
 801c0f2:	46bd      	mov	sp, r7
 801c0f4:	bdb0      	pop	{r4, r5, r7, pc}
 801c0f6:	bf00      	nop
 801c0f8:	08029d74 	.word	0x08029d74

0801c0fc <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c0fc:	b580      	push	{r7, lr}
 801c0fe:	b084      	sub	sp, #16
 801c100:	af00      	add	r7, sp, #0
 801c102:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c104:	6878      	ldr	r0, [r7, #4]
 801c106:	f7ff ff6d 	bl	801bfe4 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801c10a:	4603      	mov	r3, r0
 801c10c:	60fb      	str	r3, [r7, #12]
 801c10e:	f107 030c 	add.w	r3, r7, #12
 801c112:	2101      	movs	r1, #1
 801c114:	4618      	mov	r0, r3
 801c116:	f000 fcd1 	bl	801cabc <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801c11a:	4603      	mov	r3, r0
 801c11c:	60bb      	str	r3, [r7, #8]
 801c11e:	f107 0308 	add.w	r3, r7, #8
 801c122:	4618      	mov	r0, r3
 801c124:	f000 fce2 	bl	801caec <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801c128:	4603      	mov	r3, r0
      }
 801c12a:	4618      	mov	r0, r3
 801c12c:	3710      	adds	r7, #16
 801c12e:	46bd      	mov	sp, r7
 801c130:	bd80      	pop	{r7, pc}

0801c132 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801c132:	b480      	push	{r7}
 801c134:	b083      	sub	sp, #12
 801c136:	af00      	add	r7, sp, #0
 801c138:	6078      	str	r0, [r7, #4]
 801c13a:	687b      	ldr	r3, [r7, #4]
 801c13c:	4618      	mov	r0, r3
 801c13e:	370c      	adds	r7, #12
 801c140:	46bd      	mov	sp, r7
 801c142:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c146:	4770      	bx	lr

0801c148 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>:
 801c148:	b480      	push	{r7}
 801c14a:	b083      	sub	sp, #12
 801c14c:	af00      	add	r7, sp, #0
 801c14e:	6078      	str	r0, [r7, #4]
 801c150:	687b      	ldr	r3, [r7, #4]
 801c152:	4618      	mov	r0, r3
 801c154:	370c      	adds	r7, #12
 801c156:	46bd      	mov	sp, r7
 801c158:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c15c:	4770      	bx	lr

0801c15e <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c15e:	b480      	push	{r7}
 801c160:	b083      	sub	sp, #12
 801c162:	af00      	add	r7, sp, #0
 801c164:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c166:	687b      	ldr	r3, [r7, #4]
 801c168:	4618      	mov	r0, r3
 801c16a:	370c      	adds	r7, #12
 801c16c:	46bd      	mov	sp, r7
 801c16e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c172:	4770      	bx	lr

0801c174 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c174:	b580      	push	{r7, lr}
 801c176:	b084      	sub	sp, #16
 801c178:	af00      	add	r7, sp, #0
 801c17a:	60f8      	str	r0, [r7, #12]
 801c17c:	60b9      	str	r1, [r7, #8]
 801c17e:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c180:	6878      	ldr	r0, [r7, #4]
 801c182:	f7ff ffec 	bl	801c15e <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c186:	4603      	mov	r3, r0
 801c188:	461a      	mov	r2, r3
 801c18a:	68b9      	ldr	r1, [r7, #8]
 801c18c:	68f8      	ldr	r0, [r7, #12]
 801c18e:	f000 fcb9 	bl	801cb04 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c192:	bf00      	nop
 801c194:	3710      	adds	r7, #16
 801c196:	46bd      	mov	sp, r7
 801c198:	bd80      	pop	{r7, pc}
	...

0801c19c <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c19c:	b5b0      	push	{r4, r5, r7, lr}
 801c19e:	b08c      	sub	sp, #48	; 0x30
 801c1a0:	af00      	add	r7, sp, #0
 801c1a2:	60f8      	str	r0, [r7, #12]
 801c1a4:	60b9      	str	r1, [r7, #8]
 801c1a6:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c1a8:	4a39      	ldr	r2, [pc, #228]	; (801c290 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c1aa:	2101      	movs	r1, #1
 801c1ac:	68f8      	ldr	r0, [r7, #12]
 801c1ae:	f000 fcbf 	bl	801cb30 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c1b2:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c1b4:	68fb      	ldr	r3, [r7, #12]
 801c1b6:	681b      	ldr	r3, [r3, #0]
 801c1b8:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c1ba:	68fb      	ldr	r3, [r7, #12]
 801c1bc:	685b      	ldr	r3, [r3, #4]
 801c1be:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c1c0:	68f8      	ldr	r0, [r7, #12]
 801c1c2:	f7ee f83f 	bl	800a244 <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 801c1c6:	4603      	mov	r3, r0
 801c1c8:	617b      	str	r3, [r7, #20]
 801c1ca:	f107 0214 	add.w	r2, r7, #20
 801c1ce:	f107 0308 	add.w	r3, r7, #8
 801c1d2:	4611      	mov	r1, r2
 801c1d4:	4618      	mov	r0, r3
 801c1d6:	f000 fcf2 	bl	801cbbe <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c1da:	4603      	mov	r3, r0
 801c1dc:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c1de:	68fb      	ldr	r3, [r7, #12]
 801c1e0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c1e2:	4618      	mov	r0, r3
 801c1e4:	f000 fd00 	bl	801cbe8 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>
 801c1e8:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c1ea:	69fb      	ldr	r3, [r7, #28]
 801c1ec:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c1ee:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c1f0:	6a3b      	ldr	r3, [r7, #32]
 801c1f2:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c1f4:	69fa      	ldr	r2, [r7, #28]
 801c1f6:	18d5      	adds	r5, r2, r3
 801c1f8:	6878      	ldr	r0, [r7, #4]
 801c1fa:	f7ff ffb0 	bl	801c15e <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c1fe:	4603      	mov	r3, r0
 801c200:	461a      	mov	r2, r3
 801c202:	4629      	mov	r1, r5
 801c204:	4620      	mov	r0, r4
 801c206:	f7ff ffb5 	bl	801c174 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c20a:	2300      	movs	r3, #0
 801c20c:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c20e:	f107 0308 	add.w	r3, r7, #8
 801c212:	4618      	mov	r0, r3
 801c214:	f7ee fc1b 	bl	800aa4e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c218:	4603      	mov	r3, r0
 801c21a:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c21c:	68fb      	ldr	r3, [r7, #12]
 801c21e:	4618      	mov	r0, r3
 801c220:	f7ee fbaf 	bl	800a982 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c224:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c226:	69fa      	ldr	r2, [r7, #28]
 801c228:	4621      	mov	r1, r4
 801c22a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c22c:	f000 fcf0 	bl	801cc10 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c230:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c232:	69bb      	ldr	r3, [r7, #24]
 801c234:	3304      	adds	r3, #4
 801c236:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c238:	f107 0308 	add.w	r3, r7, #8
 801c23c:	4618      	mov	r0, r3
 801c23e:	f7ee fc06 	bl	800aa4e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c242:	4603      	mov	r3, r0
 801c244:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c246:	68fb      	ldr	r3, [r7, #12]
 801c248:	4618      	mov	r0, r3
 801c24a:	f7ee fb9a 	bl	800a982 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c24e:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c250:	69ba      	ldr	r2, [r7, #24]
 801c252:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c254:	4620      	mov	r0, r4
 801c256:	f000 fcdb 	bl	801cc10 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c25a:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c25c:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c25e:	68fb      	ldr	r3, [r7, #12]
 801c260:	689a      	ldr	r2, [r3, #8]
 801c262:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c264:	1ad3      	subs	r3, r2, r3
 801c266:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c268:	461a      	mov	r2, r3
 801c26a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c26c:	f7ef f929 	bl	800b4c2 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c270:	68fb      	ldr	r3, [r7, #12]
 801c272:	69fa      	ldr	r2, [r7, #28]
 801c274:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c276:	68fb      	ldr	r3, [r7, #12]
 801c278:	69ba      	ldr	r2, [r7, #24]
 801c27a:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c27c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c27e:	009b      	lsls	r3, r3, #2
 801c280:	69fa      	ldr	r2, [r7, #28]
 801c282:	441a      	add	r2, r3
 801c284:	68fb      	ldr	r3, [r7, #12]
 801c286:	609a      	str	r2, [r3, #8]
    }
 801c288:	bf00      	nop
 801c28a:	3730      	adds	r7, #48	; 0x30
 801c28c:	46bd      	mov	sp, r7
 801c28e:	bdb0      	pop	{r4, r5, r7, pc}
 801c290:	08029d74 	.word	0x08029d74

0801c294 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c294:	b580      	push	{r7, lr}
 801c296:	b084      	sub	sp, #16
 801c298:	af00      	add	r7, sp, #0
 801c29a:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c29c:	6878      	ldr	r0, [r7, #4]
 801c29e:	f7ed ffe1 	bl	800a264 <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 801c2a2:	4603      	mov	r3, r0
 801c2a4:	60fb      	str	r3, [r7, #12]
 801c2a6:	f107 030c 	add.w	r3, r7, #12
 801c2aa:	2101      	movs	r1, #1
 801c2ac:	4618      	mov	r0, r3
 801c2ae:	f000 fcc3 	bl	801cc38 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c2b2:	4603      	mov	r3, r0
 801c2b4:	60bb      	str	r3, [r7, #8]
 801c2b6:	f107 0308 	add.w	r3, r7, #8
 801c2ba:	4618      	mov	r0, r3
 801c2bc:	f7ee f80b 	bl	800a2d6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c2c0:	4603      	mov	r3, r0
      }
 801c2c2:	4618      	mov	r0, r3
 801c2c4:	3710      	adds	r7, #16
 801c2c6:	46bd      	mov	sp, r7
 801c2c8:	bd80      	pop	{r7, pc}

0801c2ca <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c2ca:	b480      	push	{r7}
 801c2cc:	b083      	sub	sp, #12
 801c2ce:	af00      	add	r7, sp, #0
 801c2d0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c2d2:	687b      	ldr	r3, [r7, #4]
 801c2d4:	4618      	mov	r0, r3
 801c2d6:	370c      	adds	r7, #12
 801c2d8:	46bd      	mov	sp, r7
 801c2da:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c2de:	4770      	bx	lr

0801c2e0 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c2e0:	b580      	push	{r7, lr}
 801c2e2:	b084      	sub	sp, #16
 801c2e4:	af00      	add	r7, sp, #0
 801c2e6:	60f8      	str	r0, [r7, #12]
 801c2e8:	60b9      	str	r1, [r7, #8]
 801c2ea:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c2ec:	6878      	ldr	r0, [r7, #4]
 801c2ee:	f7ff ffec 	bl	801c2ca <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c2f2:	4603      	mov	r3, r0
 801c2f4:	461a      	mov	r2, r3
 801c2f6:	68b9      	ldr	r1, [r7, #8]
 801c2f8:	68f8      	ldr	r0, [r7, #12]
 801c2fa:	f000 fcb6 	bl	801cc6a <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 801c2fe:	bf00      	nop
 801c300:	3710      	adds	r7, #16
 801c302:	46bd      	mov	sp, r7
 801c304:	bd80      	pop	{r7, pc}

0801c306 <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801c306:	b580      	push	{r7, lr}
 801c308:	b084      	sub	sp, #16
 801c30a:	af00      	add	r7, sp, #0
 801c30c:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 801c30e:	687b      	ldr	r3, [r7, #4]
 801c310:	1d1a      	adds	r2, r3, #4
 801c312:	f107 030c 	add.w	r3, r7, #12
 801c316:	4611      	mov	r1, r2
 801c318:	4618      	mov	r0, r3
 801c31a:	f000 fcbd 	bl	801cc98 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801c31e:	68fb      	ldr	r3, [r7, #12]
 801c320:	4618      	mov	r0, r3
 801c322:	3710      	adds	r7, #16
 801c324:	46bd      	mov	sp, r7
 801c326:	bd80      	pop	{r7, pc}

0801c328 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c328:	b5b0      	push	{r4, r5, r7, lr}
 801c32a:	b08c      	sub	sp, #48	; 0x30
 801c32c:	af00      	add	r7, sp, #0
 801c32e:	60f8      	str	r0, [r7, #12]
 801c330:	60b9      	str	r1, [r7, #8]
 801c332:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c334:	4a38      	ldr	r2, [pc, #224]	; (801c418 <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801c336:	2101      	movs	r1, #1
 801c338:	68f8      	ldr	r0, [r7, #12]
 801c33a:	f000 fcbd 	bl	801ccb8 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>
 801c33e:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c340:	68fb      	ldr	r3, [r7, #12]
 801c342:	681b      	ldr	r3, [r3, #0]
 801c344:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c346:	68fb      	ldr	r3, [r7, #12]
 801c348:	685b      	ldr	r3, [r3, #4]
 801c34a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c34c:	68f8      	ldr	r0, [r7, #12]
 801c34e:	f000 fcfa 	bl	801cd46 <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>
 801c352:	4603      	mov	r3, r0
 801c354:	617b      	str	r3, [r7, #20]
 801c356:	f107 0214 	add.w	r2, r7, #20
 801c35a:	f107 0308 	add.w	r3, r7, #8
 801c35e:	4611      	mov	r1, r2
 801c360:	4618      	mov	r0, r3
 801c362:	f000 fd00 	bl	801cd66 <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 801c366:	4603      	mov	r3, r0
 801c368:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c36a:	68fb      	ldr	r3, [r7, #12]
 801c36c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c36e:	4618      	mov	r0, r3
 801c370:	f000 fd0d 	bl	801cd8e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>
 801c374:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c376:	69fb      	ldr	r3, [r7, #28]
 801c378:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c37a:	68fc      	ldr	r4, [r7, #12]
 801c37c:	69fa      	ldr	r2, [r7, #28]
 801c37e:	6a3b      	ldr	r3, [r7, #32]
 801c380:	18d5      	adds	r5, r2, r3
 801c382:	6878      	ldr	r0, [r7, #4]
 801c384:	f7ff ffa1 	bl	801c2ca <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c388:	4603      	mov	r3, r0
 801c38a:	461a      	mov	r2, r3
 801c38c:	4629      	mov	r1, r5
 801c38e:	4620      	mov	r0, r4
 801c390:	f7ff ffa6 	bl	801c2e0 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 801c394:	2300      	movs	r3, #0
 801c396:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c398:	f107 0308 	add.w	r3, r7, #8
 801c39c:	4618      	mov	r0, r3
 801c39e:	f000 fd1e 	bl	801cdde <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c3a2:	4603      	mov	r3, r0
 801c3a4:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c3a6:	68fb      	ldr	r3, [r7, #12]
 801c3a8:	4618      	mov	r0, r3
 801c3aa:	f7ee fbbd 	bl	800ab28 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c3ae:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c3b0:	69fa      	ldr	r2, [r7, #28]
 801c3b2:	4621      	mov	r1, r4
 801c3b4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c3b6:	f000 fcfe 	bl	801cdb6 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c3ba:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c3bc:	69bb      	ldr	r3, [r7, #24]
 801c3be:	3301      	adds	r3, #1
 801c3c0:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c3c2:	f107 0308 	add.w	r3, r7, #8
 801c3c6:	4618      	mov	r0, r3
 801c3c8:	f000 fd09 	bl	801cdde <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801c3cc:	4603      	mov	r3, r0
 801c3ce:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c3d0:	68fb      	ldr	r3, [r7, #12]
 801c3d2:	4618      	mov	r0, r3
 801c3d4:	f7ee fba8 	bl	800ab28 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801c3d8:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c3da:	69ba      	ldr	r2, [r7, #24]
 801c3dc:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c3de:	4620      	mov	r0, r4
 801c3e0:	f000 fce9 	bl	801cdb6 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801c3e4:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c3e6:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c3e8:	68fb      	ldr	r3, [r7, #12]
 801c3ea:	689a      	ldr	r2, [r3, #8]
 801c3ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c3ee:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 801c3f0:	461a      	mov	r2, r3
 801c3f2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c3f4:	f7ef f8e9 	bl	800b5ca <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801c3f8:	68fb      	ldr	r3, [r7, #12]
 801c3fa:	69fa      	ldr	r2, [r7, #28]
 801c3fc:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c3fe:	68fb      	ldr	r3, [r7, #12]
 801c400:	69ba      	ldr	r2, [r7, #24]
 801c402:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c404:	69fa      	ldr	r2, [r7, #28]
 801c406:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c408:	441a      	add	r2, r3
 801c40a:	68fb      	ldr	r3, [r7, #12]
 801c40c:	609a      	str	r2, [r3, #8]
    }
 801c40e:	bf00      	nop
 801c410:	3730      	adds	r7, #48	; 0x30
 801c412:	46bd      	mov	sp, r7
 801c414:	bdb0      	pop	{r4, r5, r7, pc}
 801c416:	bf00      	nop
 801c418:	08029d74 	.word	0x08029d74

0801c41c <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c41c:	b580      	push	{r7, lr}
 801c41e:	b084      	sub	sp, #16
 801c420:	af00      	add	r7, sp, #0
 801c422:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c424:	6878      	ldr	r0, [r7, #4]
 801c426:	f7ff ff6e 	bl	801c306 <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801c42a:	4603      	mov	r3, r0
 801c42c:	60fb      	str	r3, [r7, #12]
 801c42e:	f107 030c 	add.w	r3, r7, #12
 801c432:	2101      	movs	r1, #1
 801c434:	4618      	mov	r0, r3
 801c436:	f000 fcdd 	bl	801cdf4 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801c43a:	4603      	mov	r3, r0
 801c43c:	60bb      	str	r3, [r7, #8]
 801c43e:	f107 0308 	add.w	r3, r7, #8
 801c442:	4618      	mov	r0, r3
 801c444:	f000 fcee 	bl	801ce24 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801c448:	4603      	mov	r3, r0
      }
 801c44a:	4618      	mov	r0, r3
 801c44c:	3710      	adds	r7, #16
 801c44e:	46bd      	mov	sp, r7
 801c450:	bd80      	pop	{r7, pc}

0801c452 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>:
 801c452:	b480      	push	{r7}
 801c454:	b083      	sub	sp, #12
 801c456:	af00      	add	r7, sp, #0
 801c458:	6078      	str	r0, [r7, #4]
 801c45a:	687b      	ldr	r3, [r7, #4]
 801c45c:	4618      	mov	r0, r3
 801c45e:	370c      	adds	r7, #12
 801c460:	46bd      	mov	sp, r7
 801c462:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c466:	4770      	bx	lr

0801c468 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>:
 801c468:	b480      	push	{r7}
 801c46a:	b083      	sub	sp, #12
 801c46c:	af00      	add	r7, sp, #0
 801c46e:	6078      	str	r0, [r7, #4]
 801c470:	687b      	ldr	r3, [r7, #4]
 801c472:	4618      	mov	r0, r3
 801c474:	370c      	adds	r7, #12
 801c476:	46bd      	mov	sp, r7
 801c478:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c47c:	4770      	bx	lr

0801c47e <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c47e:	b480      	push	{r7}
 801c480:	b083      	sub	sp, #12
 801c482:	af00      	add	r7, sp, #0
 801c484:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c486:	687b      	ldr	r3, [r7, #4]
 801c488:	4618      	mov	r0, r3
 801c48a:	370c      	adds	r7, #12
 801c48c:	46bd      	mov	sp, r7
 801c48e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c492:	4770      	bx	lr

0801c494 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c494:	b580      	push	{r7, lr}
 801c496:	b084      	sub	sp, #16
 801c498:	af00      	add	r7, sp, #0
 801c49a:	60f8      	str	r0, [r7, #12]
 801c49c:	60b9      	str	r1, [r7, #8]
 801c49e:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c4a0:	6878      	ldr	r0, [r7, #4]
 801c4a2:	f7ff ffec 	bl	801c47e <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c4a6:	4603      	mov	r3, r0
 801c4a8:	461a      	mov	r2, r3
 801c4aa:	68b9      	ldr	r1, [r7, #8]
 801c4ac:	68f8      	ldr	r0, [r7, #12]
 801c4ae:	f000 fcc5 	bl	801ce3c <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c4b2:	bf00      	nop
 801c4b4:	3710      	adds	r7, #16
 801c4b6:	46bd      	mov	sp, r7
 801c4b8:	bd80      	pop	{r7, pc}
	...

0801c4bc <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c4bc:	b5b0      	push	{r4, r5, r7, lr}
 801c4be:	b08c      	sub	sp, #48	; 0x30
 801c4c0:	af00      	add	r7, sp, #0
 801c4c2:	60f8      	str	r0, [r7, #12]
 801c4c4:	60b9      	str	r1, [r7, #8]
 801c4c6:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c4c8:	4a39      	ldr	r2, [pc, #228]	; (801c5b0 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c4ca:	2101      	movs	r1, #1
 801c4cc:	68f8      	ldr	r0, [r7, #12]
 801c4ce:	f000 fccb 	bl	801ce68 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c4d2:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c4d4:	68fb      	ldr	r3, [r7, #12]
 801c4d6:	681b      	ldr	r3, [r3, #0]
 801c4d8:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c4da:	68fb      	ldr	r3, [r7, #12]
 801c4dc:	685b      	ldr	r3, [r3, #4]
 801c4de:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c4e0:	68f8      	ldr	r0, [r7, #12]
 801c4e2:	f7ed ff3a 	bl	800a35a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 801c4e6:	4603      	mov	r3, r0
 801c4e8:	617b      	str	r3, [r7, #20]
 801c4ea:	f107 0214 	add.w	r2, r7, #20
 801c4ee:	f107 0308 	add.w	r3, r7, #8
 801c4f2:	4611      	mov	r1, r2
 801c4f4:	4618      	mov	r0, r3
 801c4f6:	f000 fcfe 	bl	801cef6 <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c4fa:	4603      	mov	r3, r0
 801c4fc:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c4fe:	68fb      	ldr	r3, [r7, #12]
 801c500:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c502:	4618      	mov	r0, r3
 801c504:	f000 fd0c 	bl	801cf20 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>
 801c508:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c50a:	69fb      	ldr	r3, [r7, #28]
 801c50c:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c50e:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c510:	6a3b      	ldr	r3, [r7, #32]
 801c512:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c514:	69fa      	ldr	r2, [r7, #28]
 801c516:	18d5      	adds	r5, r2, r3
 801c518:	6878      	ldr	r0, [r7, #4]
 801c51a:	f7ff ffb0 	bl	801c47e <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c51e:	4603      	mov	r3, r0
 801c520:	461a      	mov	r2, r3
 801c522:	4629      	mov	r1, r5
 801c524:	4620      	mov	r0, r4
 801c526:	f7ff ffb5 	bl	801c494 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c52a:	2300      	movs	r3, #0
 801c52c:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c52e:	f107 0308 	add.w	r3, r7, #8
 801c532:	4618      	mov	r0, r3
 801c534:	f7ee fb21 	bl	800ab7a <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c538:	4603      	mov	r3, r0
 801c53a:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c53c:	68fb      	ldr	r3, [r7, #12]
 801c53e:	4618      	mov	r0, r3
 801c540:	f7ee fab5 	bl	800aaae <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c544:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c546:	69fa      	ldr	r2, [r7, #28]
 801c548:	4621      	mov	r1, r4
 801c54a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c54c:	f000 fcfc 	bl	801cf48 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c550:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c552:	69bb      	ldr	r3, [r7, #24]
 801c554:	3304      	adds	r3, #4
 801c556:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c558:	f107 0308 	add.w	r3, r7, #8
 801c55c:	4618      	mov	r0, r3
 801c55e:	f7ee fb0c 	bl	800ab7a <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c562:	4603      	mov	r3, r0
 801c564:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c566:	68fb      	ldr	r3, [r7, #12]
 801c568:	4618      	mov	r0, r3
 801c56a:	f7ee faa0 	bl	800aaae <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c56e:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c570:	69ba      	ldr	r2, [r7, #24]
 801c572:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c574:	4620      	mov	r0, r4
 801c576:	f000 fce7 	bl	801cf48 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c57a:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c57c:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c57e:	68fb      	ldr	r3, [r7, #12]
 801c580:	689a      	ldr	r2, [r3, #8]
 801c582:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c584:	1ad3      	subs	r3, r2, r3
 801c586:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c588:	461a      	mov	r2, r3
 801c58a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c58c:	f7ee fff1 	bl	800b572 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c590:	68fb      	ldr	r3, [r7, #12]
 801c592:	69fa      	ldr	r2, [r7, #28]
 801c594:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c596:	68fb      	ldr	r3, [r7, #12]
 801c598:	69ba      	ldr	r2, [r7, #24]
 801c59a:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c59c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c59e:	009b      	lsls	r3, r3, #2
 801c5a0:	69fa      	ldr	r2, [r7, #28]
 801c5a2:	441a      	add	r2, r3
 801c5a4:	68fb      	ldr	r3, [r7, #12]
 801c5a6:	609a      	str	r2, [r3, #8]
    }
 801c5a8:	bf00      	nop
 801c5aa:	3730      	adds	r7, #48	; 0x30
 801c5ac:	46bd      	mov	sp, r7
 801c5ae:	bdb0      	pop	{r4, r5, r7, pc}
 801c5b0:	08029d74 	.word	0x08029d74

0801c5b4 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c5b4:	b580      	push	{r7, lr}
 801c5b6:	b084      	sub	sp, #16
 801c5b8:	af00      	add	r7, sp, #0
 801c5ba:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c5bc:	6878      	ldr	r0, [r7, #4]
 801c5be:	f7ed fedc 	bl	800a37a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 801c5c2:	4603      	mov	r3, r0
 801c5c4:	60fb      	str	r3, [r7, #12]
 801c5c6:	f107 030c 	add.w	r3, r7, #12
 801c5ca:	2101      	movs	r1, #1
 801c5cc:	4618      	mov	r0, r3
 801c5ce:	f000 fccf 	bl	801cf70 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c5d2:	4603      	mov	r3, r0
 801c5d4:	60bb      	str	r3, [r7, #8]
 801c5d6:	f107 0308 	add.w	r3, r7, #8
 801c5da:	4618      	mov	r0, r3
 801c5dc:	f7ed ff06 	bl	800a3ec <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c5e0:	4603      	mov	r3, r0
      }
 801c5e2:	4618      	mov	r0, r3
 801c5e4:	3710      	adds	r7, #16
 801c5e6:	46bd      	mov	sp, r7
 801c5e8:	bd80      	pop	{r7, pc}

0801c5ea <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>:
 801c5ea:	b480      	push	{r7}
 801c5ec:	b083      	sub	sp, #12
 801c5ee:	af00      	add	r7, sp, #0
 801c5f0:	6078      	str	r0, [r7, #4]
 801c5f2:	687b      	ldr	r3, [r7, #4]
 801c5f4:	4618      	mov	r0, r3
 801c5f6:	370c      	adds	r7, #12
 801c5f8:	46bd      	mov	sp, r7
 801c5fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c5fe:	4770      	bx	lr

0801c600 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c600:	b480      	push	{r7}
 801c602:	b083      	sub	sp, #12
 801c604:	af00      	add	r7, sp, #0
 801c606:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c608:	687b      	ldr	r3, [r7, #4]
 801c60a:	4618      	mov	r0, r3
 801c60c:	370c      	adds	r7, #12
 801c60e:	46bd      	mov	sp, r7
 801c610:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c614:	4770      	bx	lr

0801c616 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c616:	b580      	push	{r7, lr}
 801c618:	b084      	sub	sp, #16
 801c61a:	af00      	add	r7, sp, #0
 801c61c:	60f8      	str	r0, [r7, #12]
 801c61e:	60b9      	str	r1, [r7, #8]
 801c620:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c622:	6878      	ldr	r0, [r7, #4]
 801c624:	f7ff ffec 	bl	801c600 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c628:	4603      	mov	r3, r0
 801c62a:	461a      	mov	r2, r3
 801c62c:	68b9      	ldr	r1, [r7, #8]
 801c62e:	68f8      	ldr	r0, [r7, #12]
 801c630:	f000 fcb7 	bl	801cfa2 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c634:	bf00      	nop
 801c636:	3710      	adds	r7, #16
 801c638:	46bd      	mov	sp, r7
 801c63a:	bd80      	pop	{r7, pc}

0801c63c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c63c:	b5b0      	push	{r4, r5, r7, lr}
 801c63e:	b08c      	sub	sp, #48	; 0x30
 801c640:	af00      	add	r7, sp, #0
 801c642:	60f8      	str	r0, [r7, #12]
 801c644:	60b9      	str	r1, [r7, #8]
 801c646:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c648:	4a39      	ldr	r2, [pc, #228]	; (801c730 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c64a:	2101      	movs	r1, #1
 801c64c:	68f8      	ldr	r0, [r7, #12]
 801c64e:	f000 fcbe 	bl	801cfce <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c652:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c654:	68fb      	ldr	r3, [r7, #12]
 801c656:	681b      	ldr	r3, [r3, #0]
 801c658:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c65a:	68fb      	ldr	r3, [r7, #12]
 801c65c:	685b      	ldr	r3, [r3, #4]
 801c65e:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c660:	68f8      	ldr	r0, [r7, #12]
 801c662:	f7ed feea 	bl	800a43a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 801c666:	4603      	mov	r3, r0
 801c668:	617b      	str	r3, [r7, #20]
 801c66a:	f107 0214 	add.w	r2, r7, #20
 801c66e:	f107 0308 	add.w	r3, r7, #8
 801c672:	4611      	mov	r1, r2
 801c674:	4618      	mov	r0, r3
 801c676:	f000 fcf1 	bl	801d05c <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c67a:	4603      	mov	r3, r0
 801c67c:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c67e:	68fb      	ldr	r3, [r7, #12]
 801c680:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c682:	4618      	mov	r0, r3
 801c684:	f000 fcff 	bl	801d086 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>
 801c688:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c68a:	69fb      	ldr	r3, [r7, #28]
 801c68c:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c68e:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c690:	6a3b      	ldr	r3, [r7, #32]
 801c692:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c694:	69fa      	ldr	r2, [r7, #28]
 801c696:	18d5      	adds	r5, r2, r3
 801c698:	6878      	ldr	r0, [r7, #4]
 801c69a:	f7ff ffb1 	bl	801c600 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c69e:	4603      	mov	r3, r0
 801c6a0:	461a      	mov	r2, r3
 801c6a2:	4629      	mov	r1, r5
 801c6a4:	4620      	mov	r0, r4
 801c6a6:	f7ff ffb6 	bl	801c616 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c6aa:	2300      	movs	r3, #0
 801c6ac:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c6ae:	f107 0308 	add.w	r3, r7, #8
 801c6b2:	4618      	mov	r0, r3
 801c6b4:	f7ee faba 	bl	800ac2c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c6b8:	4603      	mov	r3, r0
 801c6ba:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c6bc:	68fb      	ldr	r3, [r7, #12]
 801c6be:	4618      	mov	r0, r3
 801c6c0:	f7ee fa8b 	bl	800abda <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c6c4:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c6c6:	69fa      	ldr	r2, [r7, #28]
 801c6c8:	4621      	mov	r1, r4
 801c6ca:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c6cc:	f000 fcef 	bl	801d0ae <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c6d0:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c6d2:	69bb      	ldr	r3, [r7, #24]
 801c6d4:	3304      	adds	r3, #4
 801c6d6:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c6d8:	f107 0308 	add.w	r3, r7, #8
 801c6dc:	4618      	mov	r0, r3
 801c6de:	f7ee faa5 	bl	800ac2c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c6e2:	4603      	mov	r3, r0
 801c6e4:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c6e6:	68fb      	ldr	r3, [r7, #12]
 801c6e8:	4618      	mov	r0, r3
 801c6ea:	f7ee fa76 	bl	800abda <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c6ee:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c6f0:	69ba      	ldr	r2, [r7, #24]
 801c6f2:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c6f4:	4620      	mov	r0, r4
 801c6f6:	f000 fcda 	bl	801d0ae <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c6fa:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c6fc:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c6fe:	68fb      	ldr	r3, [r7, #12]
 801c700:	689a      	ldr	r2, [r3, #8]
 801c702:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c704:	1ad3      	subs	r3, r2, r3
 801c706:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c708:	461a      	mov	r2, r3
 801c70a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c70c:	f7ee ff89 	bl	800b622 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c710:	68fb      	ldr	r3, [r7, #12]
 801c712:	69fa      	ldr	r2, [r7, #28]
 801c714:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c716:	68fb      	ldr	r3, [r7, #12]
 801c718:	69ba      	ldr	r2, [r7, #24]
 801c71a:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c71c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c71e:	009b      	lsls	r3, r3, #2
 801c720:	69fa      	ldr	r2, [r7, #28]
 801c722:	441a      	add	r2, r3
 801c724:	68fb      	ldr	r3, [r7, #12]
 801c726:	609a      	str	r2, [r3, #8]
    }
 801c728:	bf00      	nop
 801c72a:	3730      	adds	r7, #48	; 0x30
 801c72c:	46bd      	mov	sp, r7
 801c72e:	bdb0      	pop	{r4, r5, r7, pc}
 801c730:	08029d74 	.word	0x08029d74

0801c734 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c734:	b580      	push	{r7, lr}
 801c736:	b084      	sub	sp, #16
 801c738:	af00      	add	r7, sp, #0
 801c73a:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c73c:	6878      	ldr	r0, [r7, #4]
 801c73e:	f7ed fe8c 	bl	800a45a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801c742:	4603      	mov	r3, r0
 801c744:	60fb      	str	r3, [r7, #12]
 801c746:	f107 030c 	add.w	r3, r7, #12
 801c74a:	2101      	movs	r1, #1
 801c74c:	4618      	mov	r0, r3
 801c74e:	f000 fcc2 	bl	801d0d6 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c752:	4603      	mov	r3, r0
 801c754:	60bb      	str	r3, [r7, #8]
 801c756:	f107 0308 	add.w	r3, r7, #8
 801c75a:	4618      	mov	r0, r3
 801c75c:	f7ed feb6 	bl	800a4cc <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c760:	4603      	mov	r3, r0
      }
 801c762:	4618      	mov	r0, r3
 801c764:	3710      	adds	r7, #16
 801c766:	46bd      	mov	sp, r7
 801c768:	bd80      	pop	{r7, pc}

0801c76a <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>:
 801c76a:	b480      	push	{r7}
 801c76c:	b083      	sub	sp, #12
 801c76e:	af00      	add	r7, sp, #0
 801c770:	6078      	str	r0, [r7, #4]
 801c772:	687b      	ldr	r3, [r7, #4]
 801c774:	4618      	mov	r0, r3
 801c776:	370c      	adds	r7, #12
 801c778:	46bd      	mov	sp, r7
 801c77a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c77e:	4770      	bx	lr

0801c780 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c780:	b480      	push	{r7}
 801c782:	b083      	sub	sp, #12
 801c784:	af00      	add	r7, sp, #0
 801c786:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c788:	687b      	ldr	r3, [r7, #4]
 801c78a:	4618      	mov	r0, r3
 801c78c:	370c      	adds	r7, #12
 801c78e:	46bd      	mov	sp, r7
 801c790:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c794:	4770      	bx	lr

0801c796 <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801c796:	b580      	push	{r7, lr}
 801c798:	b084      	sub	sp, #16
 801c79a:	af00      	add	r7, sp, #0
 801c79c:	60f8      	str	r0, [r7, #12]
 801c79e:	60b9      	str	r1, [r7, #8]
 801c7a0:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801c7a2:	6878      	ldr	r0, [r7, #4]
 801c7a4:	f7ff ffec 	bl	801c780 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c7a8:	4603      	mov	r3, r0
 801c7aa:	461a      	mov	r2, r3
 801c7ac:	68b9      	ldr	r1, [r7, #8]
 801c7ae:	68f8      	ldr	r0, [r7, #12]
 801c7b0:	f000 fcaa 	bl	801d108 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 801c7b4:	bf00      	nop
 801c7b6:	3710      	adds	r7, #16
 801c7b8:	46bd      	mov	sp, r7
 801c7ba:	bd80      	pop	{r7, pc}

0801c7bc <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801c7bc:	b5b0      	push	{r4, r5, r7, lr}
 801c7be:	b08c      	sub	sp, #48	; 0x30
 801c7c0:	af00      	add	r7, sp, #0
 801c7c2:	60f8      	str	r0, [r7, #12]
 801c7c4:	60b9      	str	r1, [r7, #8]
 801c7c6:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801c7c8:	4a39      	ldr	r2, [pc, #228]	; (801c8b0 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801c7ca:	2101      	movs	r1, #1
 801c7cc:	68f8      	ldr	r0, [r7, #12]
 801c7ce:	f000 fcb1 	bl	801d134 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>
 801c7d2:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 801c7d4:	68fb      	ldr	r3, [r7, #12]
 801c7d6:	681b      	ldr	r3, [r3, #0]
 801c7d8:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801c7da:	68fb      	ldr	r3, [r7, #12]
 801c7dc:	685b      	ldr	r3, [r3, #4]
 801c7de:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 801c7e0:	68f8      	ldr	r0, [r7, #12]
 801c7e2:	f7ed fe9a 	bl	800a51a <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 801c7e6:	4603      	mov	r3, r0
 801c7e8:	617b      	str	r3, [r7, #20]
 801c7ea:	f107 0214 	add.w	r2, r7, #20
 801c7ee:	f107 0308 	add.w	r3, r7, #8
 801c7f2:	4611      	mov	r1, r2
 801c7f4:	4618      	mov	r0, r3
 801c7f6:	f000 fce4 	bl	801d1c2 <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801c7fa:	4603      	mov	r3, r0
 801c7fc:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 801c7fe:	68fb      	ldr	r3, [r7, #12]
 801c800:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 801c802:	4618      	mov	r0, r3
 801c804:	f000 fcf2 	bl	801d1ec <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>
 801c808:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801c80a:	69fb      	ldr	r3, [r7, #28]
 801c80c:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 801c80e:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 801c810:	6a3b      	ldr	r3, [r7, #32]
 801c812:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 801c814:	69fa      	ldr	r2, [r7, #28]
 801c816:	18d5      	adds	r5, r2, r3
 801c818:	6878      	ldr	r0, [r7, #4]
 801c81a:	f7ff ffb1 	bl	801c780 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801c81e:	4603      	mov	r3, r0
 801c820:	461a      	mov	r2, r3
 801c822:	4629      	mov	r1, r5
 801c824:	4620      	mov	r0, r4
 801c826:	f7ff ffb6 	bl	801c796 <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801c82a:	2300      	movs	r3, #0
 801c82c:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c82e:	f107 0308 	add.w	r3, r7, #8
 801c832:	4618      	mov	r0, r3
 801c834:	f7ee fa53 	bl	800acde <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c838:	4603      	mov	r3, r0
 801c83a:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801c83c:	68fb      	ldr	r3, [r7, #12]
 801c83e:	4618      	mov	r0, r3
 801c840:	f7ee fa24 	bl	800ac8c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c844:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801c846:	69fa      	ldr	r2, [r7, #28]
 801c848:	4621      	mov	r1, r4
 801c84a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801c84c:	f000 fce2 	bl	801d214 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c850:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 801c852:	69bb      	ldr	r3, [r7, #24]
 801c854:	3304      	adds	r3, #4
 801c856:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c858:	f107 0308 	add.w	r3, r7, #8
 801c85c:	4618      	mov	r0, r3
 801c85e:	f7ee fa3e 	bl	800acde <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801c862:	4603      	mov	r3, r0
 801c864:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 801c866:	68fb      	ldr	r3, [r7, #12]
 801c868:	4618      	mov	r0, r3
 801c86a:	f7ee fa0f 	bl	800ac8c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801c86e:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801c870:	69ba      	ldr	r2, [r7, #24]
 801c872:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801c874:	4620      	mov	r0, r4
 801c876:	f000 fccd 	bl	801d214 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 801c87a:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801c87c:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801c87e:	68fb      	ldr	r3, [r7, #12]
 801c880:	689a      	ldr	r2, [r3, #8]
 801c882:	6abb      	ldr	r3, [r7, #40]	; 0x28
 801c884:	1ad3      	subs	r3, r2, r3
 801c886:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 801c888:	461a      	mov	r2, r3
 801c88a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 801c88c:	f7ee fef5 	bl	800b67a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 801c890:	68fb      	ldr	r3, [r7, #12]
 801c892:	69fa      	ldr	r2, [r7, #28]
 801c894:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 801c896:	68fb      	ldr	r3, [r7, #12]
 801c898:	69ba      	ldr	r2, [r7, #24]
 801c89a:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 801c89c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c89e:	009b      	lsls	r3, r3, #2
 801c8a0:	69fa      	ldr	r2, [r7, #28]
 801c8a2:	441a      	add	r2, r3
 801c8a4:	68fb      	ldr	r3, [r7, #12]
 801c8a6:	609a      	str	r2, [r3, #8]
    }
 801c8a8:	bf00      	nop
 801c8aa:	3730      	adds	r7, #48	; 0x30
 801c8ac:	46bd      	mov	sp, r7
 801c8ae:	bdb0      	pop	{r4, r5, r7, pc}
 801c8b0:	08029d74 	.word	0x08029d74

0801c8b4 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 801c8b4:	b580      	push	{r7, lr}
 801c8b6:	b084      	sub	sp, #16
 801c8b8:	af00      	add	r7, sp, #0
 801c8ba:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 801c8bc:	6878      	ldr	r0, [r7, #4]
 801c8be:	f7ed fe3c 	bl	800a53a <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 801c8c2:	4603      	mov	r3, r0
 801c8c4:	60fb      	str	r3, [r7, #12]
 801c8c6:	f107 030c 	add.w	r3, r7, #12
 801c8ca:	2101      	movs	r1, #1
 801c8cc:	4618      	mov	r0, r3
 801c8ce:	f000 fcb5 	bl	801d23c <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 801c8d2:	4603      	mov	r3, r0
 801c8d4:	60bb      	str	r3, [r7, #8]
 801c8d6:	f107 0308 	add.w	r3, r7, #8
 801c8da:	4618      	mov	r0, r3
 801c8dc:	f7ed fe66 	bl	800a5ac <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 801c8e0:	4603      	mov	r3, r0
      }
 801c8e2:	4618      	mov	r0, r3
 801c8e4:	3710      	adds	r7, #16
 801c8e6:	46bd      	mov	sp, r7
 801c8e8:	bd80      	pop	{r7, pc}

0801c8ea <_ZSt9addressofIP8VariableEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801c8ea:	b580      	push	{r7, lr}
 801c8ec:	b082      	sub	sp, #8
 801c8ee:	af00      	add	r7, sp, #0
 801c8f0:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801c8f2:	6878      	ldr	r0, [r7, #4]
 801c8f4:	f7ef f9b8 	bl	800bc68 <_ZSt11__addressofIP8VariableEPT_RS2_>
 801c8f8:	4603      	mov	r3, r0
 801c8fa:	4618      	mov	r0, r3
 801c8fc:	3708      	adds	r7, #8
 801c8fe:	46bd      	mov	sp, r7
 801c900:	bd80      	pop	{r7, pc}

0801c902 <_ZSt9addressofIP10ExpressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801c902:	b580      	push	{r7, lr}
 801c904:	b082      	sub	sp, #8
 801c906:	af00      	add	r7, sp, #0
 801c908:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801c90a:	6878      	ldr	r0, [r7, #4]
 801c90c:	f000 fcaf 	bl	801d26e <_ZSt11__addressofIP10ExpressionEPT_RS2_>
 801c910:	4603      	mov	r3, r0
 801c912:	4618      	mov	r0, r3
 801c914:	3708      	adds	r7, #8
 801c916:	46bd      	mov	sp, r7
 801c918:	bd80      	pop	{r7, pc}

0801c91a <_ZSt9addressofIP17Primal_expressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 801c91a:	b580      	push	{r7, lr}
 801c91c:	b082      	sub	sp, #8
 801c91e:	af00      	add	r7, sp, #0
 801c920:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801c922:	6878      	ldr	r0, [r7, #4]
 801c924:	f000 fcae 	bl	801d284 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>
 801c928:	4603      	mov	r3, r0
 801c92a:	4618      	mov	r0, r3
 801c92c:	3708      	adds	r7, #8
 801c92e:	46bd      	mov	sp, r7
 801c930:	bd80      	pop	{r7, pc}

0801c932 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801c932:	b590      	push	{r4, r7, lr}
 801c934:	b085      	sub	sp, #20
 801c936:	af00      	add	r7, sp, #0
 801c938:	60f8      	str	r0, [r7, #12]
 801c93a:	60b9      	str	r1, [r7, #8]
 801c93c:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801c93e:	6878      	ldr	r0, [r7, #4]
 801c940:	f7ff fb32 	bl	801bfa8 <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801c944:	4603      	mov	r3, r0
 801c946:	781c      	ldrb	r4, [r3, #0]
 801c948:	68bb      	ldr	r3, [r7, #8]
 801c94a:	4619      	mov	r1, r3
 801c94c:	2001      	movs	r0, #1
 801c94e:	f7e4 fb84 	bl	800105a <_ZnwjPv>
 801c952:	4603      	mov	r3, r0
 801c954:	4622      	mov	r2, r4
 801c956:	701a      	strb	r2, [r3, #0]
 801c958:	bf00      	nop
 801c95a:	3714      	adds	r7, #20
 801c95c:	46bd      	mov	sp, r7
 801c95e:	bd90      	pop	{r4, r7, pc}

0801c960 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801c960:	b480      	push	{r7}
 801c962:	b083      	sub	sp, #12
 801c964:	af00      	add	r7, sp, #0
 801c966:	6078      	str	r0, [r7, #4]
 801c968:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801c96a:	683b      	ldr	r3, [r7, #0]
 801c96c:	681a      	ldr	r2, [r3, #0]
 801c96e:	687b      	ldr	r3, [r7, #4]
 801c970:	601a      	str	r2, [r3, #0]
 801c972:	687b      	ldr	r3, [r7, #4]
 801c974:	4618      	mov	r0, r3
 801c976:	370c      	adds	r7, #12
 801c978:	46bd      	mov	sp, r7
 801c97a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c97e:	4770      	bx	lr

0801c980 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801c980:	b590      	push	{r4, r7, lr}
 801c982:	b087      	sub	sp, #28
 801c984:	af00      	add	r7, sp, #0
 801c986:	60f8      	str	r0, [r7, #12]
 801c988:	60b9      	str	r1, [r7, #8]
 801c98a:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801c98c:	68f8      	ldr	r0, [r7, #12]
 801c98e:	f000 fc84 	bl	801d29a <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801c992:	4604      	mov	r4, r0
 801c994:	68f8      	ldr	r0, [r7, #12]
 801c996:	f7f0 f9b9 	bl	800cd0c <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c99a:	4603      	mov	r3, r0
 801c99c:	1ae2      	subs	r2, r4, r3
 801c99e:	68bb      	ldr	r3, [r7, #8]
 801c9a0:	429a      	cmp	r2, r3
 801c9a2:	bf34      	ite	cc
 801c9a4:	2301      	movcc	r3, #1
 801c9a6:	2300      	movcs	r3, #0
 801c9a8:	b2db      	uxtb	r3, r3
 801c9aa:	2b00      	cmp	r3, #0
 801c9ac:	d002      	beq.n	801c9b4 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801c9ae:	6878      	ldr	r0, [r7, #4]
 801c9b0:	f006 fd43 	bl	802343a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801c9b4:	68f8      	ldr	r0, [r7, #12]
 801c9b6:	f7f0 f9a9 	bl	800cd0c <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c9ba:	4604      	mov	r4, r0
 801c9bc:	68f8      	ldr	r0, [r7, #12]
 801c9be:	f7f0 f9a5 	bl	800cd0c <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c9c2:	4603      	mov	r3, r0
 801c9c4:	613b      	str	r3, [r7, #16]
 801c9c6:	f107 0208 	add.w	r2, r7, #8
 801c9ca:	f107 0310 	add.w	r3, r7, #16
 801c9ce:	4611      	mov	r1, r2
 801c9d0:	4618      	mov	r0, r3
 801c9d2:	f7f9 fa58 	bl	8015e86 <_ZSt3maxIjERKT_S2_S2_>
 801c9d6:	4603      	mov	r3, r0
 801c9d8:	681b      	ldr	r3, [r3, #0]
 801c9da:	4423      	add	r3, r4
 801c9dc:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801c9de:	68f8      	ldr	r0, [r7, #12]
 801c9e0:	f7f0 f994 	bl	800cd0c <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 801c9e4:	4602      	mov	r2, r0
 801c9e6:	697b      	ldr	r3, [r7, #20]
 801c9e8:	4293      	cmp	r3, r2
 801c9ea:	d306      	bcc.n	801c9fa <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801c9ec:	68f8      	ldr	r0, [r7, #12]
 801c9ee:	f000 fc54 	bl	801d29a <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801c9f2:	4602      	mov	r2, r0
 801c9f4:	697b      	ldr	r3, [r7, #20]
 801c9f6:	4293      	cmp	r3, r2
 801c9f8:	d904      	bls.n	801ca04 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801c9fa:	68f8      	ldr	r0, [r7, #12]
 801c9fc:	f000 fc4d 	bl	801d29a <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 801ca00:	4603      	mov	r3, r0
 801ca02:	e000      	b.n	801ca06 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801ca04:	697b      	ldr	r3, [r7, #20]
      }
 801ca06:	4618      	mov	r0, r3
 801ca08:	371c      	adds	r7, #28
 801ca0a:	46bd      	mov	sp, r7
 801ca0c:	bd90      	pop	{r4, r7, pc}

0801ca0e <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801ca0e:	b580      	push	{r7, lr}
 801ca10:	b084      	sub	sp, #16
 801ca12:	af00      	add	r7, sp, #0
 801ca14:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801ca16:	687a      	ldr	r2, [r7, #4]
 801ca18:	f107 030c 	add.w	r3, r7, #12
 801ca1c:	4611      	mov	r1, r2
 801ca1e:	4618      	mov	r0, r3
 801ca20:	f7ff ff9e 	bl	801c960 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801ca24:	68fb      	ldr	r3, [r7, #12]
 801ca26:	4618      	mov	r0, r3
 801ca28:	3710      	adds	r7, #16
 801ca2a:	46bd      	mov	sp, r7
 801ca2c:	bd80      	pop	{r7, pc}

0801ca2e <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801ca2e:	b590      	push	{r4, r7, lr}
 801ca30:	b083      	sub	sp, #12
 801ca32:	af00      	add	r7, sp, #0
 801ca34:	6078      	str	r0, [r7, #4]
 801ca36:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801ca38:	6878      	ldr	r0, [r7, #4]
 801ca3a:	f000 f834 	bl	801caa6 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801ca3e:	4603      	mov	r3, r0
 801ca40:	681c      	ldr	r4, [r3, #0]
 801ca42:	6838      	ldr	r0, [r7, #0]
 801ca44:	f000 f82f 	bl	801caa6 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801ca48:	4603      	mov	r3, r0
 801ca4a:	681b      	ldr	r3, [r3, #0]
 801ca4c:	1ae3      	subs	r3, r4, r3
 801ca4e:	4618      	mov	r0, r3
 801ca50:	370c      	adds	r7, #12
 801ca52:	46bd      	mov	sp, r7
 801ca54:	bd90      	pop	{r4, r7, pc}

0801ca56 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801ca56:	b580      	push	{r7, lr}
 801ca58:	b082      	sub	sp, #8
 801ca5a:	af00      	add	r7, sp, #0
 801ca5c:	6078      	str	r0, [r7, #4]
 801ca5e:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801ca60:	683b      	ldr	r3, [r7, #0]
 801ca62:	2b00      	cmp	r3, #0
 801ca64:	d006      	beq.n	801ca74 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801ca66:	687b      	ldr	r3, [r7, #4]
 801ca68:	6839      	ldr	r1, [r7, #0]
 801ca6a:	4618      	mov	r0, r3
 801ca6c:	f000 fc26 	bl	801d2bc <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>
 801ca70:	4603      	mov	r3, r0
 801ca72:	e000      	b.n	801ca76 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x20>
 801ca74:	2300      	movs	r3, #0
      }
 801ca76:	4618      	mov	r0, r3
 801ca78:	3708      	adds	r7, #8
 801ca7a:	46bd      	mov	sp, r7
 801ca7c:	bd80      	pop	{r7, pc}

0801ca7e <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801ca7e:	b590      	push	{r4, r7, lr}
 801ca80:	b089      	sub	sp, #36	; 0x24
 801ca82:	af02      	add	r7, sp, #8
 801ca84:	60f8      	str	r0, [r7, #12]
 801ca86:	60b9      	str	r1, [r7, #8]
 801ca88:	607a      	str	r2, [r7, #4]
 801ca8a:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801ca8c:	f88d 4000 	strb.w	r4, [sp]
 801ca90:	683b      	ldr	r3, [r7, #0]
 801ca92:	687a      	ldr	r2, [r7, #4]
 801ca94:	68b9      	ldr	r1, [r7, #8]
 801ca96:	68f8      	ldr	r0, [r7, #12]
 801ca98:	f000 fc1f 	bl	801d2da <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801ca9c:	4603      	mov	r3, r0
      }
 801ca9e:	4618      	mov	r0, r3
 801caa0:	371c      	adds	r7, #28
 801caa2:	46bd      	mov	sp, r7
 801caa4:	bd90      	pop	{r4, r7, pc}

0801caa6 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801caa6:	b480      	push	{r7}
 801caa8:	b083      	sub	sp, #12
 801caaa:	af00      	add	r7, sp, #0
 801caac:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801caae:	687b      	ldr	r3, [r7, #4]
 801cab0:	4618      	mov	r0, r3
 801cab2:	370c      	adds	r7, #12
 801cab4:	46bd      	mov	sp, r7
 801cab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801caba:	4770      	bx	lr

0801cabc <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801cabc:	b580      	push	{r7, lr}
 801cabe:	b084      	sub	sp, #16
 801cac0:	af00      	add	r7, sp, #0
 801cac2:	6078      	str	r0, [r7, #4]
 801cac4:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801cac6:	687b      	ldr	r3, [r7, #4]
 801cac8:	681a      	ldr	r2, [r3, #0]
 801caca:	683b      	ldr	r3, [r7, #0]
 801cacc:	425b      	negs	r3, r3
 801cace:	4413      	add	r3, r2
 801cad0:	60fb      	str	r3, [r7, #12]
 801cad2:	f107 020c 	add.w	r2, r7, #12
 801cad6:	f107 0308 	add.w	r3, r7, #8
 801cada:	4611      	mov	r1, r2
 801cadc:	4618      	mov	r0, r3
 801cade:	f7ff ff3f 	bl	801c960 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801cae2:	68bb      	ldr	r3, [r7, #8]
 801cae4:	4618      	mov	r0, r3
 801cae6:	3710      	adds	r7, #16
 801cae8:	46bd      	mov	sp, r7
 801caea:	bd80      	pop	{r7, pc}

0801caec <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801caec:	b480      	push	{r7}
 801caee:	b083      	sub	sp, #12
 801caf0:	af00      	add	r7, sp, #0
 801caf2:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801caf4:	687b      	ldr	r3, [r7, #4]
 801caf6:	681b      	ldr	r3, [r3, #0]
 801caf8:	4618      	mov	r0, r3
 801cafa:	370c      	adds	r7, #12
 801cafc:	46bd      	mov	sp, r7
 801cafe:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cb02:	4770      	bx	lr

0801cb04 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801cb04:	b590      	push	{r4, r7, lr}
 801cb06:	b085      	sub	sp, #20
 801cb08:	af00      	add	r7, sp, #0
 801cb0a:	60f8      	str	r0, [r7, #12]
 801cb0c:	60b9      	str	r1, [r7, #8]
 801cb0e:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801cb10:	6878      	ldr	r0, [r7, #4]
 801cb12:	f7ff fb24 	bl	801c15e <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801cb16:	4603      	mov	r3, r0
 801cb18:	681c      	ldr	r4, [r3, #0]
 801cb1a:	68bb      	ldr	r3, [r7, #8]
 801cb1c:	4619      	mov	r1, r3
 801cb1e:	2004      	movs	r0, #4
 801cb20:	f7e4 fa9b 	bl	800105a <_ZnwjPv>
 801cb24:	4603      	mov	r3, r0
 801cb26:	601c      	str	r4, [r3, #0]
 801cb28:	bf00      	nop
 801cb2a:	3714      	adds	r7, #20
 801cb2c:	46bd      	mov	sp, r7
 801cb2e:	bd90      	pop	{r4, r7, pc}

0801cb30 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801cb30:	b590      	push	{r4, r7, lr}
 801cb32:	b087      	sub	sp, #28
 801cb34:	af00      	add	r7, sp, #0
 801cb36:	60f8      	str	r0, [r7, #12]
 801cb38:	60b9      	str	r1, [r7, #8]
 801cb3a:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801cb3c:	68f8      	ldr	r0, [r7, #12]
 801cb3e:	f000 fbde 	bl	801d2fe <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801cb42:	4604      	mov	r4, r0
 801cb44:	68f8      	ldr	r0, [r7, #12]
 801cb46:	f000 fbeb 	bl	801d320 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cb4a:	4603      	mov	r3, r0
 801cb4c:	1ae2      	subs	r2, r4, r3
 801cb4e:	68bb      	ldr	r3, [r7, #8]
 801cb50:	429a      	cmp	r2, r3
 801cb52:	bf34      	ite	cc
 801cb54:	2301      	movcc	r3, #1
 801cb56:	2300      	movcs	r3, #0
 801cb58:	b2db      	uxtb	r3, r3
 801cb5a:	2b00      	cmp	r3, #0
 801cb5c:	d002      	beq.n	801cb64 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801cb5e:	6878      	ldr	r0, [r7, #4]
 801cb60:	f006 fc6b 	bl	802343a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801cb64:	68f8      	ldr	r0, [r7, #12]
 801cb66:	f000 fbdb 	bl	801d320 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cb6a:	4604      	mov	r4, r0
 801cb6c:	68f8      	ldr	r0, [r7, #12]
 801cb6e:	f000 fbd7 	bl	801d320 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cb72:	4603      	mov	r3, r0
 801cb74:	613b      	str	r3, [r7, #16]
 801cb76:	f107 0208 	add.w	r2, r7, #8
 801cb7a:	f107 0310 	add.w	r3, r7, #16
 801cb7e:	4611      	mov	r1, r2
 801cb80:	4618      	mov	r0, r3
 801cb82:	f7f9 f980 	bl	8015e86 <_ZSt3maxIjERKT_S2_S2_>
 801cb86:	4603      	mov	r3, r0
 801cb88:	681b      	ldr	r3, [r3, #0]
 801cb8a:	4423      	add	r3, r4
 801cb8c:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801cb8e:	68f8      	ldr	r0, [r7, #12]
 801cb90:	f000 fbc6 	bl	801d320 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 801cb94:	4602      	mov	r2, r0
 801cb96:	697b      	ldr	r3, [r7, #20]
 801cb98:	4293      	cmp	r3, r2
 801cb9a:	d306      	bcc.n	801cbaa <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801cb9c:	68f8      	ldr	r0, [r7, #12]
 801cb9e:	f000 fbae 	bl	801d2fe <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801cba2:	4602      	mov	r2, r0
 801cba4:	697b      	ldr	r3, [r7, #20]
 801cba6:	4293      	cmp	r3, r2
 801cba8:	d904      	bls.n	801cbb4 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801cbaa:	68f8      	ldr	r0, [r7, #12]
 801cbac:	f000 fba7 	bl	801d2fe <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 801cbb0:	4603      	mov	r3, r0
 801cbb2:	e000      	b.n	801cbb6 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801cbb4:	697b      	ldr	r3, [r7, #20]
      }
 801cbb6:	4618      	mov	r0, r3
 801cbb8:	371c      	adds	r7, #28
 801cbba:	46bd      	mov	sp, r7
 801cbbc:	bd90      	pop	{r4, r7, pc}

0801cbbe <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801cbbe:	b590      	push	{r4, r7, lr}
 801cbc0:	b083      	sub	sp, #12
 801cbc2:	af00      	add	r7, sp, #0
 801cbc4:	6078      	str	r0, [r7, #4]
 801cbc6:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801cbc8:	6878      	ldr	r0, [r7, #4]
 801cbca:	f7ed ff40 	bl	800aa4e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801cbce:	4603      	mov	r3, r0
 801cbd0:	681c      	ldr	r4, [r3, #0]
 801cbd2:	6838      	ldr	r0, [r7, #0]
 801cbd4:	f7ed ff3b 	bl	800aa4e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801cbd8:	4603      	mov	r3, r0
 801cbda:	681b      	ldr	r3, [r3, #0]
 801cbdc:	1ae3      	subs	r3, r4, r3
 801cbde:	109b      	asrs	r3, r3, #2
 801cbe0:	4618      	mov	r0, r3
 801cbe2:	370c      	adds	r7, #12
 801cbe4:	46bd      	mov	sp, r7
 801cbe6:	bd90      	pop	{r4, r7, pc}

0801cbe8 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801cbe8:	b580      	push	{r7, lr}
 801cbea:	b082      	sub	sp, #8
 801cbec:	af00      	add	r7, sp, #0
 801cbee:	6078      	str	r0, [r7, #4]
 801cbf0:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801cbf2:	683b      	ldr	r3, [r7, #0]
 801cbf4:	2b00      	cmp	r3, #0
 801cbf6:	d006      	beq.n	801cc06 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801cbf8:	687b      	ldr	r3, [r7, #4]
 801cbfa:	6839      	ldr	r1, [r7, #0]
 801cbfc:	4618      	mov	r0, r3
 801cbfe:	f000 fb9f 	bl	801d340 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>
 801cc02:	4603      	mov	r3, r0
 801cc04:	e000      	b.n	801cc08 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x20>
 801cc06:	2300      	movs	r3, #0
      }
 801cc08:	4618      	mov	r0, r3
 801cc0a:	3708      	adds	r7, #8
 801cc0c:	46bd      	mov	sp, r7
 801cc0e:	bd80      	pop	{r7, pc}

0801cc10 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801cc10:	b590      	push	{r4, r7, lr}
 801cc12:	b089      	sub	sp, #36	; 0x24
 801cc14:	af02      	add	r7, sp, #8
 801cc16:	60f8      	str	r0, [r7, #12]
 801cc18:	60b9      	str	r1, [r7, #8]
 801cc1a:	607a      	str	r2, [r7, #4]
 801cc1c:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801cc1e:	f88d 4000 	strb.w	r4, [sp]
 801cc22:	683b      	ldr	r3, [r7, #0]
 801cc24:	687a      	ldr	r2, [r7, #4]
 801cc26:	68b9      	ldr	r1, [r7, #8]
 801cc28:	68f8      	ldr	r0, [r7, #12]
 801cc2a:	f000 fb98 	bl	801d35e <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801cc2e:	4603      	mov	r3, r0
      }
 801cc30:	4618      	mov	r0, r3
 801cc32:	371c      	adds	r7, #28
 801cc34:	46bd      	mov	sp, r7
 801cc36:	bd90      	pop	{r4, r7, pc}

0801cc38 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801cc38:	b580      	push	{r7, lr}
 801cc3a:	b084      	sub	sp, #16
 801cc3c:	af00      	add	r7, sp, #0
 801cc3e:	6078      	str	r0, [r7, #4]
 801cc40:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801cc42:	687b      	ldr	r3, [r7, #4]
 801cc44:	681a      	ldr	r2, [r3, #0]
 801cc46:	683b      	ldr	r3, [r7, #0]
 801cc48:	009b      	lsls	r3, r3, #2
 801cc4a:	425b      	negs	r3, r3
 801cc4c:	4413      	add	r3, r2
 801cc4e:	60fb      	str	r3, [r7, #12]
 801cc50:	f107 020c 	add.w	r2, r7, #12
 801cc54:	f107 0308 	add.w	r3, r7, #8
 801cc58:	4611      	mov	r1, r2
 801cc5a:	4618      	mov	r0, r3
 801cc5c:	f7ed fee7 	bl	800aa2e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801cc60:	68bb      	ldr	r3, [r7, #8]
 801cc62:	4618      	mov	r0, r3
 801cc64:	3710      	adds	r7, #16
 801cc66:	46bd      	mov	sp, r7
 801cc68:	bd80      	pop	{r7, pc}

0801cc6a <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801cc6a:	b590      	push	{r4, r7, lr}
 801cc6c:	b085      	sub	sp, #20
 801cc6e:	af00      	add	r7, sp, #0
 801cc70:	60f8      	str	r0, [r7, #12]
 801cc72:	60b9      	str	r1, [r7, #8]
 801cc74:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801cc76:	6878      	ldr	r0, [r7, #4]
 801cc78:	f7ff fb27 	bl	801c2ca <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 801cc7c:	4603      	mov	r3, r0
 801cc7e:	781c      	ldrb	r4, [r3, #0]
 801cc80:	68bb      	ldr	r3, [r7, #8]
 801cc82:	4619      	mov	r1, r3
 801cc84:	2001      	movs	r0, #1
 801cc86:	f7e4 f9e8 	bl	800105a <_ZnwjPv>
 801cc8a:	4603      	mov	r3, r0
 801cc8c:	4622      	mov	r2, r4
 801cc8e:	701a      	strb	r2, [r3, #0]
 801cc90:	bf00      	nop
 801cc92:	3714      	adds	r7, #20
 801cc94:	46bd      	mov	sp, r7
 801cc96:	bd90      	pop	{r4, r7, pc}

0801cc98 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801cc98:	b480      	push	{r7}
 801cc9a:	b083      	sub	sp, #12
 801cc9c:	af00      	add	r7, sp, #0
 801cc9e:	6078      	str	r0, [r7, #4]
 801cca0:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801cca2:	683b      	ldr	r3, [r7, #0]
 801cca4:	681a      	ldr	r2, [r3, #0]
 801cca6:	687b      	ldr	r3, [r7, #4]
 801cca8:	601a      	str	r2, [r3, #0]
 801ccaa:	687b      	ldr	r3, [r7, #4]
 801ccac:	4618      	mov	r0, r3
 801ccae:	370c      	adds	r7, #12
 801ccb0:	46bd      	mov	sp, r7
 801ccb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ccb6:	4770      	bx	lr

0801ccb8 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801ccb8:	b590      	push	{r4, r7, lr}
 801ccba:	b087      	sub	sp, #28
 801ccbc:	af00      	add	r7, sp, #0
 801ccbe:	60f8      	str	r0, [r7, #12]
 801ccc0:	60b9      	str	r1, [r7, #8]
 801ccc2:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801ccc4:	68f8      	ldr	r0, [r7, #12]
 801ccc6:	f000 fb5c 	bl	801d382 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801ccca:	4604      	mov	r4, r0
 801cccc:	68f8      	ldr	r0, [r7, #12]
 801ccce:	f7ef ffef 	bl	800ccb0 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801ccd2:	4603      	mov	r3, r0
 801ccd4:	1ae2      	subs	r2, r4, r3
 801ccd6:	68bb      	ldr	r3, [r7, #8]
 801ccd8:	429a      	cmp	r2, r3
 801ccda:	bf34      	ite	cc
 801ccdc:	2301      	movcc	r3, #1
 801ccde:	2300      	movcs	r3, #0
 801cce0:	b2db      	uxtb	r3, r3
 801cce2:	2b00      	cmp	r3, #0
 801cce4:	d002      	beq.n	801ccec <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801cce6:	6878      	ldr	r0, [r7, #4]
 801cce8:	f006 fba7 	bl	802343a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801ccec:	68f8      	ldr	r0, [r7, #12]
 801ccee:	f7ef ffdf 	bl	800ccb0 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801ccf2:	4604      	mov	r4, r0
 801ccf4:	68f8      	ldr	r0, [r7, #12]
 801ccf6:	f7ef ffdb 	bl	800ccb0 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801ccfa:	4603      	mov	r3, r0
 801ccfc:	613b      	str	r3, [r7, #16]
 801ccfe:	f107 0208 	add.w	r2, r7, #8
 801cd02:	f107 0310 	add.w	r3, r7, #16
 801cd06:	4611      	mov	r1, r2
 801cd08:	4618      	mov	r0, r3
 801cd0a:	f7f9 f8bc 	bl	8015e86 <_ZSt3maxIjERKT_S2_S2_>
 801cd0e:	4603      	mov	r3, r0
 801cd10:	681b      	ldr	r3, [r3, #0]
 801cd12:	4423      	add	r3, r4
 801cd14:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801cd16:	68f8      	ldr	r0, [r7, #12]
 801cd18:	f7ef ffca 	bl	800ccb0 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801cd1c:	4602      	mov	r2, r0
 801cd1e:	697b      	ldr	r3, [r7, #20]
 801cd20:	4293      	cmp	r3, r2
 801cd22:	d306      	bcc.n	801cd32 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 801cd24:	68f8      	ldr	r0, [r7, #12]
 801cd26:	f000 fb2c 	bl	801d382 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801cd2a:	4602      	mov	r2, r0
 801cd2c:	697b      	ldr	r3, [r7, #20]
 801cd2e:	4293      	cmp	r3, r2
 801cd30:	d904      	bls.n	801cd3c <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 801cd32:	68f8      	ldr	r0, [r7, #12]
 801cd34:	f000 fb25 	bl	801d382 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801cd38:	4603      	mov	r3, r0
 801cd3a:	e000      	b.n	801cd3e <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 801cd3c:	697b      	ldr	r3, [r7, #20]
      }
 801cd3e:	4618      	mov	r0, r3
 801cd40:	371c      	adds	r7, #28
 801cd42:	46bd      	mov	sp, r7
 801cd44:	bd90      	pop	{r4, r7, pc}

0801cd46 <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801cd46:	b580      	push	{r7, lr}
 801cd48:	b084      	sub	sp, #16
 801cd4a:	af00      	add	r7, sp, #0
 801cd4c:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 801cd4e:	687a      	ldr	r2, [r7, #4]
 801cd50:	f107 030c 	add.w	r3, r7, #12
 801cd54:	4611      	mov	r1, r2
 801cd56:	4618      	mov	r0, r3
 801cd58:	f7ff ff9e 	bl	801cc98 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801cd5c:	68fb      	ldr	r3, [r7, #12]
 801cd5e:	4618      	mov	r0, r3
 801cd60:	3710      	adds	r7, #16
 801cd62:	46bd      	mov	sp, r7
 801cd64:	bd80      	pop	{r7, pc}

0801cd66 <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801cd66:	b590      	push	{r4, r7, lr}
 801cd68:	b083      	sub	sp, #12
 801cd6a:	af00      	add	r7, sp, #0
 801cd6c:	6078      	str	r0, [r7, #4]
 801cd6e:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801cd70:	6878      	ldr	r0, [r7, #4]
 801cd72:	f000 f834 	bl	801cdde <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801cd76:	4603      	mov	r3, r0
 801cd78:	681c      	ldr	r4, [r3, #0]
 801cd7a:	6838      	ldr	r0, [r7, #0]
 801cd7c:	f000 f82f 	bl	801cdde <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 801cd80:	4603      	mov	r3, r0
 801cd82:	681b      	ldr	r3, [r3, #0]
 801cd84:	1ae3      	subs	r3, r4, r3
 801cd86:	4618      	mov	r0, r3
 801cd88:	370c      	adds	r7, #12
 801cd8a:	46bd      	mov	sp, r7
 801cd8c:	bd90      	pop	{r4, r7, pc}

0801cd8e <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801cd8e:	b580      	push	{r7, lr}
 801cd90:	b082      	sub	sp, #8
 801cd92:	af00      	add	r7, sp, #0
 801cd94:	6078      	str	r0, [r7, #4]
 801cd96:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801cd98:	683b      	ldr	r3, [r7, #0]
 801cd9a:	2b00      	cmp	r3, #0
 801cd9c:	d006      	beq.n	801cdac <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x1e>
 801cd9e:	687b      	ldr	r3, [r7, #4]
 801cda0:	6839      	ldr	r1, [r7, #0]
 801cda2:	4618      	mov	r0, r3
 801cda4:	f000 fafe 	bl	801d3a4 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>
 801cda8:	4603      	mov	r3, r0
 801cdaa:	e000      	b.n	801cdae <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x20>
 801cdac:	2300      	movs	r3, #0
      }
 801cdae:	4618      	mov	r0, r3
 801cdb0:	3708      	adds	r7, #8
 801cdb2:	46bd      	mov	sp, r7
 801cdb4:	bd80      	pop	{r7, pc}

0801cdb6 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801cdb6:	b590      	push	{r4, r7, lr}
 801cdb8:	b089      	sub	sp, #36	; 0x24
 801cdba:	af02      	add	r7, sp, #8
 801cdbc:	60f8      	str	r0, [r7, #12]
 801cdbe:	60b9      	str	r1, [r7, #8]
 801cdc0:	607a      	str	r2, [r7, #4]
 801cdc2:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801cdc4:	f88d 4000 	strb.w	r4, [sp]
 801cdc8:	683b      	ldr	r3, [r7, #0]
 801cdca:	687a      	ldr	r2, [r7, #4]
 801cdcc:	68b9      	ldr	r1, [r7, #8]
 801cdce:	68f8      	ldr	r0, [r7, #12]
 801cdd0:	f000 faf7 	bl	801d3c2 <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 801cdd4:	4603      	mov	r3, r0
      }
 801cdd6:	4618      	mov	r0, r3
 801cdd8:	371c      	adds	r7, #28
 801cdda:	46bd      	mov	sp, r7
 801cddc:	bd90      	pop	{r4, r7, pc}

0801cdde <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801cdde:	b480      	push	{r7}
 801cde0:	b083      	sub	sp, #12
 801cde2:	af00      	add	r7, sp, #0
 801cde4:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801cde6:	687b      	ldr	r3, [r7, #4]
 801cde8:	4618      	mov	r0, r3
 801cdea:	370c      	adds	r7, #12
 801cdec:	46bd      	mov	sp, r7
 801cdee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cdf2:	4770      	bx	lr

0801cdf4 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801cdf4:	b580      	push	{r7, lr}
 801cdf6:	b084      	sub	sp, #16
 801cdf8:	af00      	add	r7, sp, #0
 801cdfa:	6078      	str	r0, [r7, #4]
 801cdfc:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801cdfe:	687b      	ldr	r3, [r7, #4]
 801ce00:	681a      	ldr	r2, [r3, #0]
 801ce02:	683b      	ldr	r3, [r7, #0]
 801ce04:	425b      	negs	r3, r3
 801ce06:	4413      	add	r3, r2
 801ce08:	60fb      	str	r3, [r7, #12]
 801ce0a:	f107 020c 	add.w	r2, r7, #12
 801ce0e:	f107 0308 	add.w	r3, r7, #8
 801ce12:	4611      	mov	r1, r2
 801ce14:	4618      	mov	r0, r3
 801ce16:	f7ff ff3f 	bl	801cc98 <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801ce1a:	68bb      	ldr	r3, [r7, #8]
 801ce1c:	4618      	mov	r0, r3
 801ce1e:	3710      	adds	r7, #16
 801ce20:	46bd      	mov	sp, r7
 801ce22:	bd80      	pop	{r7, pc}

0801ce24 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801ce24:	b480      	push	{r7}
 801ce26:	b083      	sub	sp, #12
 801ce28:	af00      	add	r7, sp, #0
 801ce2a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801ce2c:	687b      	ldr	r3, [r7, #4]
 801ce2e:	681b      	ldr	r3, [r3, #0]
 801ce30:	4618      	mov	r0, r3
 801ce32:	370c      	adds	r7, #12
 801ce34:	46bd      	mov	sp, r7
 801ce36:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ce3a:	4770      	bx	lr

0801ce3c <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801ce3c:	b590      	push	{r4, r7, lr}
 801ce3e:	b085      	sub	sp, #20
 801ce40:	af00      	add	r7, sp, #0
 801ce42:	60f8      	str	r0, [r7, #12]
 801ce44:	60b9      	str	r1, [r7, #8]
 801ce46:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801ce48:	6878      	ldr	r0, [r7, #4]
 801ce4a:	f7ff fb18 	bl	801c47e <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801ce4e:	4603      	mov	r3, r0
 801ce50:	681c      	ldr	r4, [r3, #0]
 801ce52:	68bb      	ldr	r3, [r7, #8]
 801ce54:	4619      	mov	r1, r3
 801ce56:	2004      	movs	r0, #4
 801ce58:	f7e4 f8ff 	bl	800105a <_ZnwjPv>
 801ce5c:	4603      	mov	r3, r0
 801ce5e:	601c      	str	r4, [r3, #0]
 801ce60:	bf00      	nop
 801ce62:	3714      	adds	r7, #20
 801ce64:	46bd      	mov	sp, r7
 801ce66:	bd90      	pop	{r4, r7, pc}

0801ce68 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801ce68:	b590      	push	{r4, r7, lr}
 801ce6a:	b087      	sub	sp, #28
 801ce6c:	af00      	add	r7, sp, #0
 801ce6e:	60f8      	str	r0, [r7, #12]
 801ce70:	60b9      	str	r1, [r7, #8]
 801ce72:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801ce74:	68f8      	ldr	r0, [r7, #12]
 801ce76:	f000 fab6 	bl	801d3e6 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801ce7a:	4604      	mov	r4, r0
 801ce7c:	68f8      	ldr	r0, [r7, #12]
 801ce7e:	f000 fac3 	bl	801d408 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801ce82:	4603      	mov	r3, r0
 801ce84:	1ae2      	subs	r2, r4, r3
 801ce86:	68bb      	ldr	r3, [r7, #8]
 801ce88:	429a      	cmp	r2, r3
 801ce8a:	bf34      	ite	cc
 801ce8c:	2301      	movcc	r3, #1
 801ce8e:	2300      	movcs	r3, #0
 801ce90:	b2db      	uxtb	r3, r3
 801ce92:	2b00      	cmp	r3, #0
 801ce94:	d002      	beq.n	801ce9c <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801ce96:	6878      	ldr	r0, [r7, #4]
 801ce98:	f006 facf 	bl	802343a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801ce9c:	68f8      	ldr	r0, [r7, #12]
 801ce9e:	f000 fab3 	bl	801d408 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801cea2:	4604      	mov	r4, r0
 801cea4:	68f8      	ldr	r0, [r7, #12]
 801cea6:	f000 faaf 	bl	801d408 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801ceaa:	4603      	mov	r3, r0
 801ceac:	613b      	str	r3, [r7, #16]
 801ceae:	f107 0208 	add.w	r2, r7, #8
 801ceb2:	f107 0310 	add.w	r3, r7, #16
 801ceb6:	4611      	mov	r1, r2
 801ceb8:	4618      	mov	r0, r3
 801ceba:	f7f8 ffe4 	bl	8015e86 <_ZSt3maxIjERKT_S2_S2_>
 801cebe:	4603      	mov	r3, r0
 801cec0:	681b      	ldr	r3, [r3, #0]
 801cec2:	4423      	add	r3, r4
 801cec4:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801cec6:	68f8      	ldr	r0, [r7, #12]
 801cec8:	f000 fa9e 	bl	801d408 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801cecc:	4602      	mov	r2, r0
 801cece:	697b      	ldr	r3, [r7, #20]
 801ced0:	4293      	cmp	r3, r2
 801ced2:	d306      	bcc.n	801cee2 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801ced4:	68f8      	ldr	r0, [r7, #12]
 801ced6:	f000 fa86 	bl	801d3e6 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801ceda:	4602      	mov	r2, r0
 801cedc:	697b      	ldr	r3, [r7, #20]
 801cede:	4293      	cmp	r3, r2
 801cee0:	d904      	bls.n	801ceec <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801cee2:	68f8      	ldr	r0, [r7, #12]
 801cee4:	f000 fa7f 	bl	801d3e6 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801cee8:	4603      	mov	r3, r0
 801ceea:	e000      	b.n	801ceee <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801ceec:	697b      	ldr	r3, [r7, #20]
      }
 801ceee:	4618      	mov	r0, r3
 801cef0:	371c      	adds	r7, #28
 801cef2:	46bd      	mov	sp, r7
 801cef4:	bd90      	pop	{r4, r7, pc}

0801cef6 <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801cef6:	b590      	push	{r4, r7, lr}
 801cef8:	b083      	sub	sp, #12
 801cefa:	af00      	add	r7, sp, #0
 801cefc:	6078      	str	r0, [r7, #4]
 801cefe:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801cf00:	6878      	ldr	r0, [r7, #4]
 801cf02:	f7ed fe3a 	bl	800ab7a <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801cf06:	4603      	mov	r3, r0
 801cf08:	681c      	ldr	r4, [r3, #0]
 801cf0a:	6838      	ldr	r0, [r7, #0]
 801cf0c:	f7ed fe35 	bl	800ab7a <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801cf10:	4603      	mov	r3, r0
 801cf12:	681b      	ldr	r3, [r3, #0]
 801cf14:	1ae3      	subs	r3, r4, r3
 801cf16:	109b      	asrs	r3, r3, #2
 801cf18:	4618      	mov	r0, r3
 801cf1a:	370c      	adds	r7, #12
 801cf1c:	46bd      	mov	sp, r7
 801cf1e:	bd90      	pop	{r4, r7, pc}

0801cf20 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801cf20:	b580      	push	{r7, lr}
 801cf22:	b082      	sub	sp, #8
 801cf24:	af00      	add	r7, sp, #0
 801cf26:	6078      	str	r0, [r7, #4]
 801cf28:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801cf2a:	683b      	ldr	r3, [r7, #0]
 801cf2c:	2b00      	cmp	r3, #0
 801cf2e:	d006      	beq.n	801cf3e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801cf30:	687b      	ldr	r3, [r7, #4]
 801cf32:	6839      	ldr	r1, [r7, #0]
 801cf34:	4618      	mov	r0, r3
 801cf36:	f000 fa77 	bl	801d428 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>
 801cf3a:	4603      	mov	r3, r0
 801cf3c:	e000      	b.n	801cf40 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x20>
 801cf3e:	2300      	movs	r3, #0
      }
 801cf40:	4618      	mov	r0, r3
 801cf42:	3708      	adds	r7, #8
 801cf44:	46bd      	mov	sp, r7
 801cf46:	bd80      	pop	{r7, pc}

0801cf48 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801cf48:	b590      	push	{r4, r7, lr}
 801cf4a:	b089      	sub	sp, #36	; 0x24
 801cf4c:	af02      	add	r7, sp, #8
 801cf4e:	60f8      	str	r0, [r7, #12]
 801cf50:	60b9      	str	r1, [r7, #8]
 801cf52:	607a      	str	r2, [r7, #4]
 801cf54:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801cf56:	f88d 4000 	strb.w	r4, [sp]
 801cf5a:	683b      	ldr	r3, [r7, #0]
 801cf5c:	687a      	ldr	r2, [r7, #4]
 801cf5e:	68b9      	ldr	r1, [r7, #8]
 801cf60:	68f8      	ldr	r0, [r7, #12]
 801cf62:	f000 fa70 	bl	801d446 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801cf66:	4603      	mov	r3, r0
      }
 801cf68:	4618      	mov	r0, r3
 801cf6a:	371c      	adds	r7, #28
 801cf6c:	46bd      	mov	sp, r7
 801cf6e:	bd90      	pop	{r4, r7, pc}

0801cf70 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801cf70:	b580      	push	{r7, lr}
 801cf72:	b084      	sub	sp, #16
 801cf74:	af00      	add	r7, sp, #0
 801cf76:	6078      	str	r0, [r7, #4]
 801cf78:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801cf7a:	687b      	ldr	r3, [r7, #4]
 801cf7c:	681a      	ldr	r2, [r3, #0]
 801cf7e:	683b      	ldr	r3, [r7, #0]
 801cf80:	009b      	lsls	r3, r3, #2
 801cf82:	425b      	negs	r3, r3
 801cf84:	4413      	add	r3, r2
 801cf86:	60fb      	str	r3, [r7, #12]
 801cf88:	f107 020c 	add.w	r2, r7, #12
 801cf8c:	f107 0308 	add.w	r3, r7, #8
 801cf90:	4611      	mov	r1, r2
 801cf92:	4618      	mov	r0, r3
 801cf94:	f7ed fde1 	bl	800ab5a <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801cf98:	68bb      	ldr	r3, [r7, #8]
 801cf9a:	4618      	mov	r0, r3
 801cf9c:	3710      	adds	r7, #16
 801cf9e:	46bd      	mov	sp, r7
 801cfa0:	bd80      	pop	{r7, pc}

0801cfa2 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801cfa2:	b590      	push	{r4, r7, lr}
 801cfa4:	b085      	sub	sp, #20
 801cfa6:	af00      	add	r7, sp, #0
 801cfa8:	60f8      	str	r0, [r7, #12]
 801cfaa:	60b9      	str	r1, [r7, #8]
 801cfac:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801cfae:	6878      	ldr	r0, [r7, #4]
 801cfb0:	f7ff fb26 	bl	801c600 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801cfb4:	4603      	mov	r3, r0
 801cfb6:	681c      	ldr	r4, [r3, #0]
 801cfb8:	68bb      	ldr	r3, [r7, #8]
 801cfba:	4619      	mov	r1, r3
 801cfbc:	2004      	movs	r0, #4
 801cfbe:	f7e4 f84c 	bl	800105a <_ZnwjPv>
 801cfc2:	4603      	mov	r3, r0
 801cfc4:	601c      	str	r4, [r3, #0]
 801cfc6:	bf00      	nop
 801cfc8:	3714      	adds	r7, #20
 801cfca:	46bd      	mov	sp, r7
 801cfcc:	bd90      	pop	{r4, r7, pc}

0801cfce <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801cfce:	b590      	push	{r4, r7, lr}
 801cfd0:	b087      	sub	sp, #28
 801cfd2:	af00      	add	r7, sp, #0
 801cfd4:	60f8      	str	r0, [r7, #12]
 801cfd6:	60b9      	str	r1, [r7, #8]
 801cfd8:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801cfda:	68f8      	ldr	r0, [r7, #12]
 801cfdc:	f000 fa45 	bl	801d46a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801cfe0:	4604      	mov	r4, r0
 801cfe2:	68f8      	ldr	r0, [r7, #12]
 801cfe4:	f7ef fe34 	bl	800cc50 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801cfe8:	4603      	mov	r3, r0
 801cfea:	1ae2      	subs	r2, r4, r3
 801cfec:	68bb      	ldr	r3, [r7, #8]
 801cfee:	429a      	cmp	r2, r3
 801cff0:	bf34      	ite	cc
 801cff2:	2301      	movcc	r3, #1
 801cff4:	2300      	movcs	r3, #0
 801cff6:	b2db      	uxtb	r3, r3
 801cff8:	2b00      	cmp	r3, #0
 801cffa:	d002      	beq.n	801d002 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801cffc:	6878      	ldr	r0, [r7, #4]
 801cffe:	f006 fa1c 	bl	802343a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801d002:	68f8      	ldr	r0, [r7, #12]
 801d004:	f7ef fe24 	bl	800cc50 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801d008:	4604      	mov	r4, r0
 801d00a:	68f8      	ldr	r0, [r7, #12]
 801d00c:	f7ef fe20 	bl	800cc50 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801d010:	4603      	mov	r3, r0
 801d012:	613b      	str	r3, [r7, #16]
 801d014:	f107 0208 	add.w	r2, r7, #8
 801d018:	f107 0310 	add.w	r3, r7, #16
 801d01c:	4611      	mov	r1, r2
 801d01e:	4618      	mov	r0, r3
 801d020:	f7f8 ff31 	bl	8015e86 <_ZSt3maxIjERKT_S2_S2_>
 801d024:	4603      	mov	r3, r0
 801d026:	681b      	ldr	r3, [r3, #0]
 801d028:	4423      	add	r3, r4
 801d02a:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801d02c:	68f8      	ldr	r0, [r7, #12]
 801d02e:	f7ef fe0f 	bl	800cc50 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801d032:	4602      	mov	r2, r0
 801d034:	697b      	ldr	r3, [r7, #20]
 801d036:	4293      	cmp	r3, r2
 801d038:	d306      	bcc.n	801d048 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801d03a:	68f8      	ldr	r0, [r7, #12]
 801d03c:	f000 fa15 	bl	801d46a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801d040:	4602      	mov	r2, r0
 801d042:	697b      	ldr	r3, [r7, #20]
 801d044:	4293      	cmp	r3, r2
 801d046:	d904      	bls.n	801d052 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801d048:	68f8      	ldr	r0, [r7, #12]
 801d04a:	f000 fa0e 	bl	801d46a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 801d04e:	4603      	mov	r3, r0
 801d050:	e000      	b.n	801d054 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801d052:	697b      	ldr	r3, [r7, #20]
      }
 801d054:	4618      	mov	r0, r3
 801d056:	371c      	adds	r7, #28
 801d058:	46bd      	mov	sp, r7
 801d05a:	bd90      	pop	{r4, r7, pc}

0801d05c <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801d05c:	b590      	push	{r4, r7, lr}
 801d05e:	b083      	sub	sp, #12
 801d060:	af00      	add	r7, sp, #0
 801d062:	6078      	str	r0, [r7, #4]
 801d064:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801d066:	6878      	ldr	r0, [r7, #4]
 801d068:	f7ed fde0 	bl	800ac2c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d06c:	4603      	mov	r3, r0
 801d06e:	681c      	ldr	r4, [r3, #0]
 801d070:	6838      	ldr	r0, [r7, #0]
 801d072:	f7ed fddb 	bl	800ac2c <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d076:	4603      	mov	r3, r0
 801d078:	681b      	ldr	r3, [r3, #0]
 801d07a:	1ae3      	subs	r3, r4, r3
 801d07c:	109b      	asrs	r3, r3, #2
 801d07e:	4618      	mov	r0, r3
 801d080:	370c      	adds	r7, #12
 801d082:	46bd      	mov	sp, r7
 801d084:	bd90      	pop	{r4, r7, pc}

0801d086 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801d086:	b580      	push	{r7, lr}
 801d088:	b082      	sub	sp, #8
 801d08a:	af00      	add	r7, sp, #0
 801d08c:	6078      	str	r0, [r7, #4]
 801d08e:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801d090:	683b      	ldr	r3, [r7, #0]
 801d092:	2b00      	cmp	r3, #0
 801d094:	d006      	beq.n	801d0a4 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801d096:	687b      	ldr	r3, [r7, #4]
 801d098:	6839      	ldr	r1, [r7, #0]
 801d09a:	4618      	mov	r0, r3
 801d09c:	f000 f9f6 	bl	801d48c <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>
 801d0a0:	4603      	mov	r3, r0
 801d0a2:	e000      	b.n	801d0a6 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x20>
 801d0a4:	2300      	movs	r3, #0
      }
 801d0a6:	4618      	mov	r0, r3
 801d0a8:	3708      	adds	r7, #8
 801d0aa:	46bd      	mov	sp, r7
 801d0ac:	bd80      	pop	{r7, pc}

0801d0ae <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801d0ae:	b590      	push	{r4, r7, lr}
 801d0b0:	b089      	sub	sp, #36	; 0x24
 801d0b2:	af02      	add	r7, sp, #8
 801d0b4:	60f8      	str	r0, [r7, #12]
 801d0b6:	60b9      	str	r1, [r7, #8]
 801d0b8:	607a      	str	r2, [r7, #4]
 801d0ba:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801d0bc:	f88d 4000 	strb.w	r4, [sp]
 801d0c0:	683b      	ldr	r3, [r7, #0]
 801d0c2:	687a      	ldr	r2, [r7, #4]
 801d0c4:	68b9      	ldr	r1, [r7, #8]
 801d0c6:	68f8      	ldr	r0, [r7, #12]
 801d0c8:	f000 f9ef 	bl	801d4aa <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801d0cc:	4603      	mov	r3, r0
      }
 801d0ce:	4618      	mov	r0, r3
 801d0d0:	371c      	adds	r7, #28
 801d0d2:	46bd      	mov	sp, r7
 801d0d4:	bd90      	pop	{r4, r7, pc}

0801d0d6 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801d0d6:	b580      	push	{r7, lr}
 801d0d8:	b084      	sub	sp, #16
 801d0da:	af00      	add	r7, sp, #0
 801d0dc:	6078      	str	r0, [r7, #4]
 801d0de:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801d0e0:	687b      	ldr	r3, [r7, #4]
 801d0e2:	681a      	ldr	r2, [r3, #0]
 801d0e4:	683b      	ldr	r3, [r7, #0]
 801d0e6:	009b      	lsls	r3, r3, #2
 801d0e8:	425b      	negs	r3, r3
 801d0ea:	4413      	add	r3, r2
 801d0ec:	60fb      	str	r3, [r7, #12]
 801d0ee:	f107 020c 	add.w	r2, r7, #12
 801d0f2:	f107 0308 	add.w	r3, r7, #8
 801d0f6:	4611      	mov	r1, r2
 801d0f8:	4618      	mov	r0, r3
 801d0fa:	f7ed fd87 	bl	800ac0c <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801d0fe:	68bb      	ldr	r3, [r7, #8]
 801d100:	4618      	mov	r0, r3
 801d102:	3710      	adds	r7, #16
 801d104:	46bd      	mov	sp, r7
 801d106:	bd80      	pop	{r7, pc}

0801d108 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801d108:	b590      	push	{r4, r7, lr}
 801d10a:	b085      	sub	sp, #20
 801d10c:	af00      	add	r7, sp, #0
 801d10e:	60f8      	str	r0, [r7, #12]
 801d110:	60b9      	str	r1, [r7, #8]
 801d112:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801d114:	6878      	ldr	r0, [r7, #4]
 801d116:	f7ff fb33 	bl	801c780 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801d11a:	4603      	mov	r3, r0
 801d11c:	681c      	ldr	r4, [r3, #0]
 801d11e:	68bb      	ldr	r3, [r7, #8]
 801d120:	4619      	mov	r1, r3
 801d122:	2004      	movs	r0, #4
 801d124:	f7e3 ff99 	bl	800105a <_ZnwjPv>
 801d128:	4603      	mov	r3, r0
 801d12a:	601c      	str	r4, [r3, #0]
 801d12c:	bf00      	nop
 801d12e:	3714      	adds	r7, #20
 801d130:	46bd      	mov	sp, r7
 801d132:	bd90      	pop	{r4, r7, pc}

0801d134 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801d134:	b590      	push	{r4, r7, lr}
 801d136:	b087      	sub	sp, #28
 801d138:	af00      	add	r7, sp, #0
 801d13a:	60f8      	str	r0, [r7, #12]
 801d13c:	60b9      	str	r1, [r7, #8]
 801d13e:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801d140:	68f8      	ldr	r0, [r7, #12]
 801d142:	f000 f9c4 	bl	801d4ce <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801d146:	4604      	mov	r4, r0
 801d148:	68f8      	ldr	r0, [r7, #12]
 801d14a:	f7ef fd3e 	bl	800cbca <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d14e:	4603      	mov	r3, r0
 801d150:	1ae2      	subs	r2, r4, r3
 801d152:	68bb      	ldr	r3, [r7, #8]
 801d154:	429a      	cmp	r2, r3
 801d156:	bf34      	ite	cc
 801d158:	2301      	movcc	r3, #1
 801d15a:	2300      	movcs	r3, #0
 801d15c:	b2db      	uxtb	r3, r3
 801d15e:	2b00      	cmp	r3, #0
 801d160:	d002      	beq.n	801d168 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801d162:	6878      	ldr	r0, [r7, #4]
 801d164:	f006 f969 	bl	802343a <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 801d168:	68f8      	ldr	r0, [r7, #12]
 801d16a:	f7ef fd2e 	bl	800cbca <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d16e:	4604      	mov	r4, r0
 801d170:	68f8      	ldr	r0, [r7, #12]
 801d172:	f7ef fd2a 	bl	800cbca <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d176:	4603      	mov	r3, r0
 801d178:	613b      	str	r3, [r7, #16]
 801d17a:	f107 0208 	add.w	r2, r7, #8
 801d17e:	f107 0310 	add.w	r3, r7, #16
 801d182:	4611      	mov	r1, r2
 801d184:	4618      	mov	r0, r3
 801d186:	f7f8 fe7e 	bl	8015e86 <_ZSt3maxIjERKT_S2_S2_>
 801d18a:	4603      	mov	r3, r0
 801d18c:	681b      	ldr	r3, [r3, #0]
 801d18e:	4423      	add	r3, r4
 801d190:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801d192:	68f8      	ldr	r0, [r7, #12]
 801d194:	f7ef fd19 	bl	800cbca <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 801d198:	4602      	mov	r2, r0
 801d19a:	697b      	ldr	r3, [r7, #20]
 801d19c:	4293      	cmp	r3, r2
 801d19e:	d306      	bcc.n	801d1ae <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801d1a0:	68f8      	ldr	r0, [r7, #12]
 801d1a2:	f000 f994 	bl	801d4ce <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801d1a6:	4602      	mov	r2, r0
 801d1a8:	697b      	ldr	r3, [r7, #20]
 801d1aa:	4293      	cmp	r3, r2
 801d1ac:	d904      	bls.n	801d1b8 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 801d1ae:	68f8      	ldr	r0, [r7, #12]
 801d1b0:	f000 f98d 	bl	801d4ce <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801d1b4:	4603      	mov	r3, r0
 801d1b6:	e000      	b.n	801d1ba <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801d1b8:	697b      	ldr	r3, [r7, #20]
      }
 801d1ba:	4618      	mov	r0, r3
 801d1bc:	371c      	adds	r7, #28
 801d1be:	46bd      	mov	sp, r7
 801d1c0:	bd90      	pop	{r4, r7, pc}

0801d1c2 <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801d1c2:	b590      	push	{r4, r7, lr}
 801d1c4:	b083      	sub	sp, #12
 801d1c6:	af00      	add	r7, sp, #0
 801d1c8:	6078      	str	r0, [r7, #4]
 801d1ca:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 801d1cc:	6878      	ldr	r0, [r7, #4]
 801d1ce:	f7ed fd86 	bl	800acde <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d1d2:	4603      	mov	r3, r0
 801d1d4:	681c      	ldr	r4, [r3, #0]
 801d1d6:	6838      	ldr	r0, [r7, #0]
 801d1d8:	f7ed fd81 	bl	800acde <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801d1dc:	4603      	mov	r3, r0
 801d1de:	681b      	ldr	r3, [r3, #0]
 801d1e0:	1ae3      	subs	r3, r4, r3
 801d1e2:	109b      	asrs	r3, r3, #2
 801d1e4:	4618      	mov	r0, r3
 801d1e6:	370c      	adds	r7, #12
 801d1e8:	46bd      	mov	sp, r7
 801d1ea:	bd90      	pop	{r4, r7, pc}

0801d1ec <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801d1ec:	b580      	push	{r7, lr}
 801d1ee:	b082      	sub	sp, #8
 801d1f0:	af00      	add	r7, sp, #0
 801d1f2:	6078      	str	r0, [r7, #4]
 801d1f4:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801d1f6:	683b      	ldr	r3, [r7, #0]
 801d1f8:	2b00      	cmp	r3, #0
 801d1fa:	d006      	beq.n	801d20a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x1e>
 801d1fc:	687b      	ldr	r3, [r7, #4]
 801d1fe:	6839      	ldr	r1, [r7, #0]
 801d200:	4618      	mov	r0, r3
 801d202:	f000 f975 	bl	801d4f0 <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>
 801d206:	4603      	mov	r3, r0
 801d208:	e000      	b.n	801d20c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x20>
 801d20a:	2300      	movs	r3, #0
      }
 801d20c:	4618      	mov	r0, r3
 801d20e:	3708      	adds	r7, #8
 801d210:	46bd      	mov	sp, r7
 801d212:	bd80      	pop	{r7, pc}

0801d214 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801d214:	b590      	push	{r4, r7, lr}
 801d216:	b089      	sub	sp, #36	; 0x24
 801d218:	af02      	add	r7, sp, #8
 801d21a:	60f8      	str	r0, [r7, #12]
 801d21c:	60b9      	str	r1, [r7, #8]
 801d21e:	607a      	str	r2, [r7, #4]
 801d220:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 801d222:	f88d 4000 	strb.w	r4, [sp]
 801d226:	683b      	ldr	r3, [r7, #0]
 801d228:	687a      	ldr	r2, [r7, #4]
 801d22a:	68b9      	ldr	r1, [r7, #8]
 801d22c:	68f8      	ldr	r0, [r7, #12]
 801d22e:	f000 f96e 	bl	801d50e <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 801d232:	4603      	mov	r3, r0
      }
 801d234:	4618      	mov	r0, r3
 801d236:	371c      	adds	r7, #28
 801d238:	46bd      	mov	sp, r7
 801d23a:	bd90      	pop	{r4, r7, pc}

0801d23c <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801d23c:	b580      	push	{r7, lr}
 801d23e:	b084      	sub	sp, #16
 801d240:	af00      	add	r7, sp, #0
 801d242:	6078      	str	r0, [r7, #4]
 801d244:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 801d246:	687b      	ldr	r3, [r7, #4]
 801d248:	681a      	ldr	r2, [r3, #0]
 801d24a:	683b      	ldr	r3, [r7, #0]
 801d24c:	009b      	lsls	r3, r3, #2
 801d24e:	425b      	negs	r3, r3
 801d250:	4413      	add	r3, r2
 801d252:	60fb      	str	r3, [r7, #12]
 801d254:	f107 020c 	add.w	r2, r7, #12
 801d258:	f107 0308 	add.w	r3, r7, #8
 801d25c:	4611      	mov	r1, r2
 801d25e:	4618      	mov	r0, r3
 801d260:	f7ed fd2d 	bl	800acbe <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 801d264:	68bb      	ldr	r3, [r7, #8]
 801d266:	4618      	mov	r0, r3
 801d268:	3710      	adds	r7, #16
 801d26a:	46bd      	mov	sp, r7
 801d26c:	bd80      	pop	{r7, pc}

0801d26e <_ZSt11__addressofIP10ExpressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801d26e:	b480      	push	{r7}
 801d270:	b083      	sub	sp, #12
 801d272:	af00      	add	r7, sp, #0
 801d274:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801d276:	687b      	ldr	r3, [r7, #4]
 801d278:	4618      	mov	r0, r3
 801d27a:	370c      	adds	r7, #12
 801d27c:	46bd      	mov	sp, r7
 801d27e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d282:	4770      	bx	lr

0801d284 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801d284:	b480      	push	{r7}
 801d286:	b083      	sub	sp, #12
 801d288:	af00      	add	r7, sp, #0
 801d28a:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801d28c:	687b      	ldr	r3, [r7, #4]
 801d28e:	4618      	mov	r0, r3
 801d290:	370c      	adds	r7, #12
 801d292:	46bd      	mov	sp, r7
 801d294:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d298:	4770      	bx	lr

0801d29a <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d29a:	b580      	push	{r7, lr}
 801d29c:	b082      	sub	sp, #8
 801d29e:	af00      	add	r7, sp, #0
 801d2a0:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d2a2:	687b      	ldr	r3, [r7, #4]
 801d2a4:	4618      	mov	r0, r3
 801d2a6:	f000 f95e 	bl	801d566 <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801d2aa:	4603      	mov	r3, r0
 801d2ac:	4618      	mov	r0, r3
 801d2ae:	f000 f940 	bl	801d532 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801d2b2:	4603      	mov	r3, r0
 801d2b4:	4618      	mov	r0, r3
 801d2b6:	3708      	adds	r7, #8
 801d2b8:	46bd      	mov	sp, r7
 801d2ba:	bd80      	pop	{r7, pc}

0801d2bc <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801d2bc:	b580      	push	{r7, lr}
 801d2be:	b082      	sub	sp, #8
 801d2c0:	af00      	add	r7, sp, #0
 801d2c2:	6078      	str	r0, [r7, #4]
 801d2c4:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d2c6:	2200      	movs	r2, #0
 801d2c8:	6839      	ldr	r1, [r7, #0]
 801d2ca:	6878      	ldr	r0, [r7, #4]
 801d2cc:	f000 f956 	bl	801d57c <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>
 801d2d0:	4603      	mov	r3, r0
 801d2d2:	4618      	mov	r0, r3
 801d2d4:	3708      	adds	r7, #8
 801d2d6:	46bd      	mov	sp, r7
 801d2d8:	bd80      	pop	{r7, pc}

0801d2da <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d2da:	b580      	push	{r7, lr}
 801d2dc:	b084      	sub	sp, #16
 801d2de:	af00      	add	r7, sp, #0
 801d2e0:	60f8      	str	r0, [r7, #12]
 801d2e2:	60b9      	str	r1, [r7, #8]
 801d2e4:	607a      	str	r2, [r7, #4]
 801d2e6:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d2e8:	683b      	ldr	r3, [r7, #0]
 801d2ea:	687a      	ldr	r2, [r7, #4]
 801d2ec:	68b9      	ldr	r1, [r7, #8]
 801d2ee:	68f8      	ldr	r0, [r7, #12]
 801d2f0:	f000 f961 	bl	801d5b6 <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801d2f4:	4603      	mov	r3, r0
      }
 801d2f6:	4618      	mov	r0, r3
 801d2f8:	3710      	adds	r7, #16
 801d2fa:	46bd      	mov	sp, r7
 801d2fc:	bd80      	pop	{r7, pc}

0801d2fe <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d2fe:	b580      	push	{r7, lr}
 801d300:	b082      	sub	sp, #8
 801d302:	af00      	add	r7, sp, #0
 801d304:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d306:	687b      	ldr	r3, [r7, #4]
 801d308:	4618      	mov	r0, r3
 801d30a:	f000 f98b 	bl	801d624 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d30e:	4603      	mov	r3, r0
 801d310:	4618      	mov	r0, r3
 801d312:	f000 f96d 	bl	801d5f0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d316:	4603      	mov	r3, r0
 801d318:	4618      	mov	r0, r3
 801d31a:	3708      	adds	r7, #8
 801d31c:	46bd      	mov	sp, r7
 801d31e:	bd80      	pop	{r7, pc}

0801d320 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801d320:	b480      	push	{r7}
 801d322:	b083      	sub	sp, #12
 801d324:	af00      	add	r7, sp, #0
 801d326:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801d328:	687b      	ldr	r3, [r7, #4]
 801d32a:	685a      	ldr	r2, [r3, #4]
 801d32c:	687b      	ldr	r3, [r7, #4]
 801d32e:	681b      	ldr	r3, [r3, #0]
 801d330:	1ad3      	subs	r3, r2, r3
 801d332:	109b      	asrs	r3, r3, #2
 801d334:	4618      	mov	r0, r3
 801d336:	370c      	adds	r7, #12
 801d338:	46bd      	mov	sp, r7
 801d33a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d33e:	4770      	bx	lr

0801d340 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d340:	b580      	push	{r7, lr}
 801d342:	b082      	sub	sp, #8
 801d344:	af00      	add	r7, sp, #0
 801d346:	6078      	str	r0, [r7, #4]
 801d348:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d34a:	2200      	movs	r2, #0
 801d34c:	6839      	ldr	r1, [r7, #0]
 801d34e:	6878      	ldr	r0, [r7, #4]
 801d350:	f000 f973 	bl	801d63a <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>
 801d354:	4603      	mov	r3, r0
 801d356:	4618      	mov	r0, r3
 801d358:	3708      	adds	r7, #8
 801d35a:	46bd      	mov	sp, r7
 801d35c:	bd80      	pop	{r7, pc}

0801d35e <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d35e:	b580      	push	{r7, lr}
 801d360:	b084      	sub	sp, #16
 801d362:	af00      	add	r7, sp, #0
 801d364:	60f8      	str	r0, [r7, #12]
 801d366:	60b9      	str	r1, [r7, #8]
 801d368:	607a      	str	r2, [r7, #4]
 801d36a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d36c:	683b      	ldr	r3, [r7, #0]
 801d36e:	687a      	ldr	r2, [r7, #4]
 801d370:	68b9      	ldr	r1, [r7, #8]
 801d372:	68f8      	ldr	r0, [r7, #12]
 801d374:	f000 f980 	bl	801d678 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d378:	4603      	mov	r3, r0
      }
 801d37a:	4618      	mov	r0, r3
 801d37c:	3710      	adds	r7, #16
 801d37e:	46bd      	mov	sp, r7
 801d380:	bd80      	pop	{r7, pc}

0801d382 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d382:	b580      	push	{r7, lr}
 801d384:	b082      	sub	sp, #8
 801d386:	af00      	add	r7, sp, #0
 801d388:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d38a:	687b      	ldr	r3, [r7, #4]
 801d38c:	4618      	mov	r0, r3
 801d38e:	f000 f9aa 	bl	801d6e6 <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801d392:	4603      	mov	r3, r0
 801d394:	4618      	mov	r0, r3
 801d396:	f000 f98c 	bl	801d6b2 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801d39a:	4603      	mov	r3, r0
 801d39c:	4618      	mov	r0, r3
 801d39e:	3708      	adds	r7, #8
 801d3a0:	46bd      	mov	sp, r7
 801d3a2:	bd80      	pop	{r7, pc}

0801d3a4 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801d3a4:	b580      	push	{r7, lr}
 801d3a6:	b082      	sub	sp, #8
 801d3a8:	af00      	add	r7, sp, #0
 801d3aa:	6078      	str	r0, [r7, #4]
 801d3ac:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d3ae:	2200      	movs	r2, #0
 801d3b0:	6839      	ldr	r1, [r7, #0]
 801d3b2:	6878      	ldr	r0, [r7, #4]
 801d3b4:	f000 f9a2 	bl	801d6fc <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>
 801d3b8:	4603      	mov	r3, r0
 801d3ba:	4618      	mov	r0, r3
 801d3bc:	3708      	adds	r7, #8
 801d3be:	46bd      	mov	sp, r7
 801d3c0:	bd80      	pop	{r7, pc}

0801d3c2 <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d3c2:	b580      	push	{r7, lr}
 801d3c4:	b084      	sub	sp, #16
 801d3c6:	af00      	add	r7, sp, #0
 801d3c8:	60f8      	str	r0, [r7, #12]
 801d3ca:	60b9      	str	r1, [r7, #8]
 801d3cc:	607a      	str	r2, [r7, #4]
 801d3ce:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d3d0:	683b      	ldr	r3, [r7, #0]
 801d3d2:	687a      	ldr	r2, [r7, #4]
 801d3d4:	68b9      	ldr	r1, [r7, #8]
 801d3d6:	68f8      	ldr	r0, [r7, #12]
 801d3d8:	f000 f9ad 	bl	801d736 <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801d3dc:	4603      	mov	r3, r0
      }
 801d3de:	4618      	mov	r0, r3
 801d3e0:	3710      	adds	r7, #16
 801d3e2:	46bd      	mov	sp, r7
 801d3e4:	bd80      	pop	{r7, pc}

0801d3e6 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d3e6:	b580      	push	{r7, lr}
 801d3e8:	b082      	sub	sp, #8
 801d3ea:	af00      	add	r7, sp, #0
 801d3ec:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d3ee:	687b      	ldr	r3, [r7, #4]
 801d3f0:	4618      	mov	r0, r3
 801d3f2:	f000 f9d7 	bl	801d7a4 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d3f6:	4603      	mov	r3, r0
 801d3f8:	4618      	mov	r0, r3
 801d3fa:	f000 f9b9 	bl	801d770 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d3fe:	4603      	mov	r3, r0
 801d400:	4618      	mov	r0, r3
 801d402:	3708      	adds	r7, #8
 801d404:	46bd      	mov	sp, r7
 801d406:	bd80      	pop	{r7, pc}

0801d408 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801d408:	b480      	push	{r7}
 801d40a:	b083      	sub	sp, #12
 801d40c:	af00      	add	r7, sp, #0
 801d40e:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801d410:	687b      	ldr	r3, [r7, #4]
 801d412:	685a      	ldr	r2, [r3, #4]
 801d414:	687b      	ldr	r3, [r7, #4]
 801d416:	681b      	ldr	r3, [r3, #0]
 801d418:	1ad3      	subs	r3, r2, r3
 801d41a:	109b      	asrs	r3, r3, #2
 801d41c:	4618      	mov	r0, r3
 801d41e:	370c      	adds	r7, #12
 801d420:	46bd      	mov	sp, r7
 801d422:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d426:	4770      	bx	lr

0801d428 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d428:	b580      	push	{r7, lr}
 801d42a:	b082      	sub	sp, #8
 801d42c:	af00      	add	r7, sp, #0
 801d42e:	6078      	str	r0, [r7, #4]
 801d430:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d432:	2200      	movs	r2, #0
 801d434:	6839      	ldr	r1, [r7, #0]
 801d436:	6878      	ldr	r0, [r7, #4]
 801d438:	f000 f9bf 	bl	801d7ba <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>
 801d43c:	4603      	mov	r3, r0
 801d43e:	4618      	mov	r0, r3
 801d440:	3708      	adds	r7, #8
 801d442:	46bd      	mov	sp, r7
 801d444:	bd80      	pop	{r7, pc}

0801d446 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d446:	b580      	push	{r7, lr}
 801d448:	b084      	sub	sp, #16
 801d44a:	af00      	add	r7, sp, #0
 801d44c:	60f8      	str	r0, [r7, #12]
 801d44e:	60b9      	str	r1, [r7, #8]
 801d450:	607a      	str	r2, [r7, #4]
 801d452:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d454:	683b      	ldr	r3, [r7, #0]
 801d456:	687a      	ldr	r2, [r7, #4]
 801d458:	68b9      	ldr	r1, [r7, #8]
 801d45a:	68f8      	ldr	r0, [r7, #12]
 801d45c:	f000 f9cc 	bl	801d7f8 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d460:	4603      	mov	r3, r0
      }
 801d462:	4618      	mov	r0, r3
 801d464:	3710      	adds	r7, #16
 801d466:	46bd      	mov	sp, r7
 801d468:	bd80      	pop	{r7, pc}

0801d46a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d46a:	b580      	push	{r7, lr}
 801d46c:	b082      	sub	sp, #8
 801d46e:	af00      	add	r7, sp, #0
 801d470:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d472:	687b      	ldr	r3, [r7, #4]
 801d474:	4618      	mov	r0, r3
 801d476:	f000 f9f6 	bl	801d866 <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d47a:	4603      	mov	r3, r0
 801d47c:	4618      	mov	r0, r3
 801d47e:	f000 f9d8 	bl	801d832 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d482:	4603      	mov	r3, r0
 801d484:	4618      	mov	r0, r3
 801d486:	3708      	adds	r7, #8
 801d488:	46bd      	mov	sp, r7
 801d48a:	bd80      	pop	{r7, pc}

0801d48c <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d48c:	b580      	push	{r7, lr}
 801d48e:	b082      	sub	sp, #8
 801d490:	af00      	add	r7, sp, #0
 801d492:	6078      	str	r0, [r7, #4]
 801d494:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d496:	2200      	movs	r2, #0
 801d498:	6839      	ldr	r1, [r7, #0]
 801d49a:	6878      	ldr	r0, [r7, #4]
 801d49c:	f000 f9ee 	bl	801d87c <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>
 801d4a0:	4603      	mov	r3, r0
 801d4a2:	4618      	mov	r0, r3
 801d4a4:	3708      	adds	r7, #8
 801d4a6:	46bd      	mov	sp, r7
 801d4a8:	bd80      	pop	{r7, pc}

0801d4aa <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d4aa:	b580      	push	{r7, lr}
 801d4ac:	b084      	sub	sp, #16
 801d4ae:	af00      	add	r7, sp, #0
 801d4b0:	60f8      	str	r0, [r7, #12]
 801d4b2:	60b9      	str	r1, [r7, #8]
 801d4b4:	607a      	str	r2, [r7, #4]
 801d4b6:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d4b8:	683b      	ldr	r3, [r7, #0]
 801d4ba:	687a      	ldr	r2, [r7, #4]
 801d4bc:	68b9      	ldr	r1, [r7, #8]
 801d4be:	68f8      	ldr	r0, [r7, #12]
 801d4c0:	f000 f9fb 	bl	801d8ba <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d4c4:	4603      	mov	r3, r0
      }
 801d4c6:	4618      	mov	r0, r3
 801d4c8:	3710      	adds	r7, #16
 801d4ca:	46bd      	mov	sp, r7
 801d4cc:	bd80      	pop	{r7, pc}

0801d4ce <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801d4ce:	b580      	push	{r7, lr}
 801d4d0:	b082      	sub	sp, #8
 801d4d2:	af00      	add	r7, sp, #0
 801d4d4:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801d4d6:	687b      	ldr	r3, [r7, #4]
 801d4d8:	4618      	mov	r0, r3
 801d4da:	f000 fa25 	bl	801d928 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801d4de:	4603      	mov	r3, r0
 801d4e0:	4618      	mov	r0, r3
 801d4e2:	f000 fa07 	bl	801d8f4 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801d4e6:	4603      	mov	r3, r0
 801d4e8:	4618      	mov	r0, r3
 801d4ea:	3708      	adds	r7, #8
 801d4ec:	46bd      	mov	sp, r7
 801d4ee:	bd80      	pop	{r7, pc}

0801d4f0 <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801d4f0:	b580      	push	{r7, lr}
 801d4f2:	b082      	sub	sp, #8
 801d4f4:	af00      	add	r7, sp, #0
 801d4f6:	6078      	str	r0, [r7, #4]
 801d4f8:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801d4fa:	2200      	movs	r2, #0
 801d4fc:	6839      	ldr	r1, [r7, #0]
 801d4fe:	6878      	ldr	r0, [r7, #4]
 801d500:	f000 fa1d 	bl	801d93e <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>
 801d504:	4603      	mov	r3, r0
 801d506:	4618      	mov	r0, r3
 801d508:	3708      	adds	r7, #8
 801d50a:	46bd      	mov	sp, r7
 801d50c:	bd80      	pop	{r7, pc}

0801d50e <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801d50e:	b580      	push	{r7, lr}
 801d510:	b084      	sub	sp, #16
 801d512:	af00      	add	r7, sp, #0
 801d514:	60f8      	str	r0, [r7, #12]
 801d516:	60b9      	str	r1, [r7, #8]
 801d518:	607a      	str	r2, [r7, #4]
 801d51a:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801d51c:	683b      	ldr	r3, [r7, #0]
 801d51e:	687a      	ldr	r2, [r7, #4]
 801d520:	68b9      	ldr	r1, [r7, #8]
 801d522:	68f8      	ldr	r0, [r7, #12]
 801d524:	f000 fa2a 	bl	801d97c <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 801d528:	4603      	mov	r3, r0
      }
 801d52a:	4618      	mov	r0, r3
 801d52c:	3710      	adds	r7, #16
 801d52e:	46bd      	mov	sp, r7
 801d530:	bd80      	pop	{r7, pc}

0801d532 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d532:	b580      	push	{r7, lr}
 801d534:	b084      	sub	sp, #16
 801d536:	af00      	add	r7, sp, #0
 801d538:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d53a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801d53e:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d540:	6878      	ldr	r0, [r7, #4]
 801d542:	f000 fa38 	bl	801d9b6 <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>
 801d546:	4603      	mov	r3, r0
 801d548:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d54a:	f107 0208 	add.w	r2, r7, #8
 801d54e:	f107 030c 	add.w	r3, r7, #12
 801d552:	4611      	mov	r1, r2
 801d554:	4618      	mov	r0, r3
 801d556:	f7f8 feb5 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 801d55a:	4603      	mov	r3, r0
 801d55c:	681b      	ldr	r3, [r3, #0]
      }
 801d55e:	4618      	mov	r0, r3
 801d560:	3710      	adds	r7, #16
 801d562:	46bd      	mov	sp, r7
 801d564:	bd80      	pop	{r7, pc}

0801d566 <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d566:	b480      	push	{r7}
 801d568:	b083      	sub	sp, #12
 801d56a:	af00      	add	r7, sp, #0
 801d56c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d56e:	687b      	ldr	r3, [r7, #4]
 801d570:	4618      	mov	r0, r3
 801d572:	370c      	adds	r7, #12
 801d574:	46bd      	mov	sp, r7
 801d576:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d57a:	4770      	bx	lr

0801d57c <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d57c:	b580      	push	{r7, lr}
 801d57e:	b084      	sub	sp, #16
 801d580:	af00      	add	r7, sp, #0
 801d582:	60f8      	str	r0, [r7, #12]
 801d584:	60b9      	str	r1, [r7, #8]
 801d586:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d588:	68f8      	ldr	r0, [r7, #12]
 801d58a:	f000 fa20 	bl	801d9ce <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801d58e:	4602      	mov	r2, r0
 801d590:	68bb      	ldr	r3, [r7, #8]
 801d592:	4293      	cmp	r3, r2
 801d594:	bf8c      	ite	hi
 801d596:	2301      	movhi	r3, #1
 801d598:	2300      	movls	r3, #0
 801d59a:	b2db      	uxtb	r3, r3
 801d59c:	2b00      	cmp	r3, #0
 801d59e:	d001      	beq.n	801d5a4 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d5a0:	f005 ff42 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d5a4:	68b8      	ldr	r0, [r7, #8]
 801d5a6:	f005 fe7a 	bl	802329e <_Znwj>
 801d5aa:	4603      	mov	r3, r0
 801d5ac:	bf00      	nop
      }
 801d5ae:	4618      	mov	r0, r3
 801d5b0:	3710      	adds	r7, #16
 801d5b2:	46bd      	mov	sp, r7
 801d5b4:	bd80      	pop	{r7, pc}

0801d5b6 <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d5b6:	b5b0      	push	{r4, r5, r7, lr}
 801d5b8:	b084      	sub	sp, #16
 801d5ba:	af00      	add	r7, sp, #0
 801d5bc:	60f8      	str	r0, [r7, #12]
 801d5be:	60b9      	str	r1, [r7, #8]
 801d5c0:	607a      	str	r2, [r7, #4]
 801d5c2:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d5c4:	68f8      	ldr	r0, [r7, #12]
 801d5c6:	f000 fa0e 	bl	801d9e6 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801d5ca:	4604      	mov	r4, r0
 801d5cc:	68b8      	ldr	r0, [r7, #8]
 801d5ce:	f000 fa0a 	bl	801d9e6 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801d5d2:	4605      	mov	r5, r0
 801d5d4:	6878      	ldr	r0, [r7, #4]
 801d5d6:	f000 fa06 	bl	801d9e6 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801d5da:	4602      	mov	r2, r0
 801d5dc:	683b      	ldr	r3, [r7, #0]
 801d5de:	4629      	mov	r1, r5
 801d5e0:	4620      	mov	r0, r4
 801d5e2:	f000 fa0b 	bl	801d9fc <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801d5e6:	4603      	mov	r3, r0
    }
 801d5e8:	4618      	mov	r0, r3
 801d5ea:	3710      	adds	r7, #16
 801d5ec:	46bd      	mov	sp, r7
 801d5ee:	bdb0      	pop	{r4, r5, r7, pc}

0801d5f0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d5f0:	b580      	push	{r7, lr}
 801d5f2:	b084      	sub	sp, #16
 801d5f4:	af00      	add	r7, sp, #0
 801d5f6:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d5f8:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d5fc:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d5fe:	6878      	ldr	r0, [r7, #4]
 801d600:	f000 fa17 	bl	801da32 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>
 801d604:	4603      	mov	r3, r0
 801d606:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d608:	f107 0208 	add.w	r2, r7, #8
 801d60c:	f107 030c 	add.w	r3, r7, #12
 801d610:	4611      	mov	r1, r2
 801d612:	4618      	mov	r0, r3
 801d614:	f7f8 fe56 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 801d618:	4603      	mov	r3, r0
 801d61a:	681b      	ldr	r3, [r3, #0]
      }
 801d61c:	4618      	mov	r0, r3
 801d61e:	3710      	adds	r7, #16
 801d620:	46bd      	mov	sp, r7
 801d622:	bd80      	pop	{r7, pc}

0801d624 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d624:	b480      	push	{r7}
 801d626:	b083      	sub	sp, #12
 801d628:	af00      	add	r7, sp, #0
 801d62a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d62c:	687b      	ldr	r3, [r7, #4]
 801d62e:	4618      	mov	r0, r3
 801d630:	370c      	adds	r7, #12
 801d632:	46bd      	mov	sp, r7
 801d634:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d638:	4770      	bx	lr

0801d63a <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d63a:	b580      	push	{r7, lr}
 801d63c:	b084      	sub	sp, #16
 801d63e:	af00      	add	r7, sp, #0
 801d640:	60f8      	str	r0, [r7, #12]
 801d642:	60b9      	str	r1, [r7, #8]
 801d644:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d646:	68f8      	ldr	r0, [r7, #12]
 801d648:	f000 f9ff 	bl	801da4a <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801d64c:	4602      	mov	r2, r0
 801d64e:	68bb      	ldr	r3, [r7, #8]
 801d650:	4293      	cmp	r3, r2
 801d652:	bf8c      	ite	hi
 801d654:	2301      	movhi	r3, #1
 801d656:	2300      	movls	r3, #0
 801d658:	b2db      	uxtb	r3, r3
 801d65a:	2b00      	cmp	r3, #0
 801d65c:	d001      	beq.n	801d662 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d65e:	f005 fee3 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d662:	68bb      	ldr	r3, [r7, #8]
 801d664:	009b      	lsls	r3, r3, #2
 801d666:	4618      	mov	r0, r3
 801d668:	f005 fe19 	bl	802329e <_Znwj>
 801d66c:	4603      	mov	r3, r0
 801d66e:	bf00      	nop
      }
 801d670:	4618      	mov	r0, r3
 801d672:	3710      	adds	r7, #16
 801d674:	46bd      	mov	sp, r7
 801d676:	bd80      	pop	{r7, pc}

0801d678 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d678:	b5b0      	push	{r4, r5, r7, lr}
 801d67a:	b084      	sub	sp, #16
 801d67c:	af00      	add	r7, sp, #0
 801d67e:	60f8      	str	r0, [r7, #12]
 801d680:	60b9      	str	r1, [r7, #8]
 801d682:	607a      	str	r2, [r7, #4]
 801d684:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d686:	68f8      	ldr	r0, [r7, #12]
 801d688:	f000 f9eb 	bl	801da62 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801d68c:	4604      	mov	r4, r0
 801d68e:	68b8      	ldr	r0, [r7, #8]
 801d690:	f000 f9e7 	bl	801da62 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801d694:	4605      	mov	r5, r0
 801d696:	6878      	ldr	r0, [r7, #4]
 801d698:	f000 f9e3 	bl	801da62 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 801d69c:	4602      	mov	r2, r0
 801d69e:	683b      	ldr	r3, [r7, #0]
 801d6a0:	4629      	mov	r1, r5
 801d6a2:	4620      	mov	r0, r4
 801d6a4:	f000 f9e8 	bl	801da78 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d6a8:	4603      	mov	r3, r0
    }
 801d6aa:	4618      	mov	r0, r3
 801d6ac:	3710      	adds	r7, #16
 801d6ae:	46bd      	mov	sp, r7
 801d6b0:	bdb0      	pop	{r4, r5, r7, pc}

0801d6b2 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d6b2:	b580      	push	{r7, lr}
 801d6b4:	b084      	sub	sp, #16
 801d6b6:	af00      	add	r7, sp, #0
 801d6b8:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d6ba:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801d6be:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d6c0:	6878      	ldr	r0, [r7, #4]
 801d6c2:	f000 f9f7 	bl	801dab4 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>
 801d6c6:	4603      	mov	r3, r0
 801d6c8:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d6ca:	f107 0208 	add.w	r2, r7, #8
 801d6ce:	f107 030c 	add.w	r3, r7, #12
 801d6d2:	4611      	mov	r1, r2
 801d6d4:	4618      	mov	r0, r3
 801d6d6:	f7f8 fdf5 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 801d6da:	4603      	mov	r3, r0
 801d6dc:	681b      	ldr	r3, [r3, #0]
      }
 801d6de:	4618      	mov	r0, r3
 801d6e0:	3710      	adds	r7, #16
 801d6e2:	46bd      	mov	sp, r7
 801d6e4:	bd80      	pop	{r7, pc}

0801d6e6 <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d6e6:	b480      	push	{r7}
 801d6e8:	b083      	sub	sp, #12
 801d6ea:	af00      	add	r7, sp, #0
 801d6ec:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d6ee:	687b      	ldr	r3, [r7, #4]
 801d6f0:	4618      	mov	r0, r3
 801d6f2:	370c      	adds	r7, #12
 801d6f4:	46bd      	mov	sp, r7
 801d6f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d6fa:	4770      	bx	lr

0801d6fc <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d6fc:	b580      	push	{r7, lr}
 801d6fe:	b084      	sub	sp, #16
 801d700:	af00      	add	r7, sp, #0
 801d702:	60f8      	str	r0, [r7, #12]
 801d704:	60b9      	str	r1, [r7, #8]
 801d706:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d708:	68f8      	ldr	r0, [r7, #12]
 801d70a:	f000 f9df 	bl	801dacc <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801d70e:	4602      	mov	r2, r0
 801d710:	68bb      	ldr	r3, [r7, #8]
 801d712:	4293      	cmp	r3, r2
 801d714:	bf8c      	ite	hi
 801d716:	2301      	movhi	r3, #1
 801d718:	2300      	movls	r3, #0
 801d71a:	b2db      	uxtb	r3, r3
 801d71c:	2b00      	cmp	r3, #0
 801d71e:	d001      	beq.n	801d724 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d720:	f005 fe82 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d724:	68b8      	ldr	r0, [r7, #8]
 801d726:	f005 fdba 	bl	802329e <_Znwj>
 801d72a:	4603      	mov	r3, r0
 801d72c:	bf00      	nop
      }
 801d72e:	4618      	mov	r0, r3
 801d730:	3710      	adds	r7, #16
 801d732:	46bd      	mov	sp, r7
 801d734:	bd80      	pop	{r7, pc}

0801d736 <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d736:	b5b0      	push	{r4, r5, r7, lr}
 801d738:	b084      	sub	sp, #16
 801d73a:	af00      	add	r7, sp, #0
 801d73c:	60f8      	str	r0, [r7, #12]
 801d73e:	60b9      	str	r1, [r7, #8]
 801d740:	607a      	str	r2, [r7, #4]
 801d742:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d744:	68f8      	ldr	r0, [r7, #12]
 801d746:	f000 f9cd 	bl	801dae4 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801d74a:	4604      	mov	r4, r0
 801d74c:	68b8      	ldr	r0, [r7, #8]
 801d74e:	f000 f9c9 	bl	801dae4 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801d752:	4605      	mov	r5, r0
 801d754:	6878      	ldr	r0, [r7, #4]
 801d756:	f000 f9c5 	bl	801dae4 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 801d75a:	4602      	mov	r2, r0
 801d75c:	683b      	ldr	r3, [r7, #0]
 801d75e:	4629      	mov	r1, r5
 801d760:	4620      	mov	r0, r4
 801d762:	f000 f9ca 	bl	801dafa <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 801d766:	4603      	mov	r3, r0
    }
 801d768:	4618      	mov	r0, r3
 801d76a:	3710      	adds	r7, #16
 801d76c:	46bd      	mov	sp, r7
 801d76e:	bdb0      	pop	{r4, r5, r7, pc}

0801d770 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d770:	b580      	push	{r7, lr}
 801d772:	b084      	sub	sp, #16
 801d774:	af00      	add	r7, sp, #0
 801d776:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d778:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d77c:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d77e:	6878      	ldr	r0, [r7, #4]
 801d780:	f000 f9d6 	bl	801db30 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>
 801d784:	4603      	mov	r3, r0
 801d786:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d788:	f107 0208 	add.w	r2, r7, #8
 801d78c:	f107 030c 	add.w	r3, r7, #12
 801d790:	4611      	mov	r1, r2
 801d792:	4618      	mov	r0, r3
 801d794:	f7f8 fd96 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 801d798:	4603      	mov	r3, r0
 801d79a:	681b      	ldr	r3, [r3, #0]
      }
 801d79c:	4618      	mov	r0, r3
 801d79e:	3710      	adds	r7, #16
 801d7a0:	46bd      	mov	sp, r7
 801d7a2:	bd80      	pop	{r7, pc}

0801d7a4 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d7a4:	b480      	push	{r7}
 801d7a6:	b083      	sub	sp, #12
 801d7a8:	af00      	add	r7, sp, #0
 801d7aa:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d7ac:	687b      	ldr	r3, [r7, #4]
 801d7ae:	4618      	mov	r0, r3
 801d7b0:	370c      	adds	r7, #12
 801d7b2:	46bd      	mov	sp, r7
 801d7b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d7b8:	4770      	bx	lr

0801d7ba <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d7ba:	b580      	push	{r7, lr}
 801d7bc:	b084      	sub	sp, #16
 801d7be:	af00      	add	r7, sp, #0
 801d7c0:	60f8      	str	r0, [r7, #12]
 801d7c2:	60b9      	str	r1, [r7, #8]
 801d7c4:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d7c6:	68f8      	ldr	r0, [r7, #12]
 801d7c8:	f000 f9be 	bl	801db48 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801d7cc:	4602      	mov	r2, r0
 801d7ce:	68bb      	ldr	r3, [r7, #8]
 801d7d0:	4293      	cmp	r3, r2
 801d7d2:	bf8c      	ite	hi
 801d7d4:	2301      	movhi	r3, #1
 801d7d6:	2300      	movls	r3, #0
 801d7d8:	b2db      	uxtb	r3, r3
 801d7da:	2b00      	cmp	r3, #0
 801d7dc:	d001      	beq.n	801d7e2 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d7de:	f005 fe23 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d7e2:	68bb      	ldr	r3, [r7, #8]
 801d7e4:	009b      	lsls	r3, r3, #2
 801d7e6:	4618      	mov	r0, r3
 801d7e8:	f005 fd59 	bl	802329e <_Znwj>
 801d7ec:	4603      	mov	r3, r0
 801d7ee:	bf00      	nop
      }
 801d7f0:	4618      	mov	r0, r3
 801d7f2:	3710      	adds	r7, #16
 801d7f4:	46bd      	mov	sp, r7
 801d7f6:	bd80      	pop	{r7, pc}

0801d7f8 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d7f8:	b5b0      	push	{r4, r5, r7, lr}
 801d7fa:	b084      	sub	sp, #16
 801d7fc:	af00      	add	r7, sp, #0
 801d7fe:	60f8      	str	r0, [r7, #12]
 801d800:	60b9      	str	r1, [r7, #8]
 801d802:	607a      	str	r2, [r7, #4]
 801d804:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d806:	68f8      	ldr	r0, [r7, #12]
 801d808:	f000 f9aa 	bl	801db60 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801d80c:	4604      	mov	r4, r0
 801d80e:	68b8      	ldr	r0, [r7, #8]
 801d810:	f000 f9a6 	bl	801db60 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801d814:	4605      	mov	r5, r0
 801d816:	6878      	ldr	r0, [r7, #4]
 801d818:	f000 f9a2 	bl	801db60 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 801d81c:	4602      	mov	r2, r0
 801d81e:	683b      	ldr	r3, [r7, #0]
 801d820:	4629      	mov	r1, r5
 801d822:	4620      	mov	r0, r4
 801d824:	f000 f9a7 	bl	801db76 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d828:	4603      	mov	r3, r0
    }
 801d82a:	4618      	mov	r0, r3
 801d82c:	3710      	adds	r7, #16
 801d82e:	46bd      	mov	sp, r7
 801d830:	bdb0      	pop	{r4, r5, r7, pc}

0801d832 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d832:	b580      	push	{r7, lr}
 801d834:	b084      	sub	sp, #16
 801d836:	af00      	add	r7, sp, #0
 801d838:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d83a:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d83e:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d840:	6878      	ldr	r0, [r7, #4]
 801d842:	f000 f9b6 	bl	801dbb2 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>
 801d846:	4603      	mov	r3, r0
 801d848:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d84a:	f107 0208 	add.w	r2, r7, #8
 801d84e:	f107 030c 	add.w	r3, r7, #12
 801d852:	4611      	mov	r1, r2
 801d854:	4618      	mov	r0, r3
 801d856:	f7f8 fd35 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 801d85a:	4603      	mov	r3, r0
 801d85c:	681b      	ldr	r3, [r3, #0]
      }
 801d85e:	4618      	mov	r0, r3
 801d860:	3710      	adds	r7, #16
 801d862:	46bd      	mov	sp, r7
 801d864:	bd80      	pop	{r7, pc}

0801d866 <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d866:	b480      	push	{r7}
 801d868:	b083      	sub	sp, #12
 801d86a:	af00      	add	r7, sp, #0
 801d86c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d86e:	687b      	ldr	r3, [r7, #4]
 801d870:	4618      	mov	r0, r3
 801d872:	370c      	adds	r7, #12
 801d874:	46bd      	mov	sp, r7
 801d876:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d87a:	4770      	bx	lr

0801d87c <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d87c:	b580      	push	{r7, lr}
 801d87e:	b084      	sub	sp, #16
 801d880:	af00      	add	r7, sp, #0
 801d882:	60f8      	str	r0, [r7, #12]
 801d884:	60b9      	str	r1, [r7, #8]
 801d886:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d888:	68f8      	ldr	r0, [r7, #12]
 801d88a:	f000 f99e 	bl	801dbca <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801d88e:	4602      	mov	r2, r0
 801d890:	68bb      	ldr	r3, [r7, #8]
 801d892:	4293      	cmp	r3, r2
 801d894:	bf8c      	ite	hi
 801d896:	2301      	movhi	r3, #1
 801d898:	2300      	movls	r3, #0
 801d89a:	b2db      	uxtb	r3, r3
 801d89c:	2b00      	cmp	r3, #0
 801d89e:	d001      	beq.n	801d8a4 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d8a0:	f005 fdc2 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d8a4:	68bb      	ldr	r3, [r7, #8]
 801d8a6:	009b      	lsls	r3, r3, #2
 801d8a8:	4618      	mov	r0, r3
 801d8aa:	f005 fcf8 	bl	802329e <_Znwj>
 801d8ae:	4603      	mov	r3, r0
 801d8b0:	bf00      	nop
      }
 801d8b2:	4618      	mov	r0, r3
 801d8b4:	3710      	adds	r7, #16
 801d8b6:	46bd      	mov	sp, r7
 801d8b8:	bd80      	pop	{r7, pc}

0801d8ba <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d8ba:	b5b0      	push	{r4, r5, r7, lr}
 801d8bc:	b084      	sub	sp, #16
 801d8be:	af00      	add	r7, sp, #0
 801d8c0:	60f8      	str	r0, [r7, #12]
 801d8c2:	60b9      	str	r1, [r7, #8]
 801d8c4:	607a      	str	r2, [r7, #4]
 801d8c6:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d8c8:	68f8      	ldr	r0, [r7, #12]
 801d8ca:	f000 f98a 	bl	801dbe2 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801d8ce:	4604      	mov	r4, r0
 801d8d0:	68b8      	ldr	r0, [r7, #8]
 801d8d2:	f000 f986 	bl	801dbe2 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801d8d6:	4605      	mov	r5, r0
 801d8d8:	6878      	ldr	r0, [r7, #4]
 801d8da:	f000 f982 	bl	801dbe2 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 801d8de:	4602      	mov	r2, r0
 801d8e0:	683b      	ldr	r3, [r7, #0]
 801d8e2:	4629      	mov	r1, r5
 801d8e4:	4620      	mov	r0, r4
 801d8e6:	f000 f987 	bl	801dbf8 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d8ea:	4603      	mov	r3, r0
    }
 801d8ec:	4618      	mov	r0, r3
 801d8ee:	3710      	adds	r7, #16
 801d8f0:	46bd      	mov	sp, r7
 801d8f2:	bdb0      	pop	{r4, r5, r7, pc}

0801d8f4 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801d8f4:	b580      	push	{r7, lr}
 801d8f6:	b084      	sub	sp, #16
 801d8f8:	af00      	add	r7, sp, #0
 801d8fa:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 801d8fc:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801d900:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801d902:	6878      	ldr	r0, [r7, #4]
 801d904:	f000 f996 	bl	801dc34 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>
 801d908:	4603      	mov	r3, r0
 801d90a:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801d90c:	f107 0208 	add.w	r2, r7, #8
 801d910:	f107 030c 	add.w	r3, r7, #12
 801d914:	4611      	mov	r1, r2
 801d916:	4618      	mov	r0, r3
 801d918:	f7f8 fcd4 	bl	80162c4 <_ZSt3minIjERKT_S2_S2_>
 801d91c:	4603      	mov	r3, r0
 801d91e:	681b      	ldr	r3, [r3, #0]
      }
 801d920:	4618      	mov	r0, r3
 801d922:	3710      	adds	r7, #16
 801d924:	46bd      	mov	sp, r7
 801d926:	bd80      	pop	{r7, pc}

0801d928 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801d928:	b480      	push	{r7}
 801d92a:	b083      	sub	sp, #12
 801d92c:	af00      	add	r7, sp, #0
 801d92e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801d930:	687b      	ldr	r3, [r7, #4]
 801d932:	4618      	mov	r0, r3
 801d934:	370c      	adds	r7, #12
 801d936:	46bd      	mov	sp, r7
 801d938:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d93c:	4770      	bx	lr

0801d93e <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801d93e:	b580      	push	{r7, lr}
 801d940:	b084      	sub	sp, #16
 801d942:	af00      	add	r7, sp, #0
 801d944:	60f8      	str	r0, [r7, #12]
 801d946:	60b9      	str	r1, [r7, #8]
 801d948:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801d94a:	68f8      	ldr	r0, [r7, #12]
 801d94c:	f000 f97e 	bl	801dc4c <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801d950:	4602      	mov	r2, r0
 801d952:	68bb      	ldr	r3, [r7, #8]
 801d954:	4293      	cmp	r3, r2
 801d956:	bf8c      	ite	hi
 801d958:	2301      	movhi	r3, #1
 801d95a:	2300      	movls	r3, #0
 801d95c:	b2db      	uxtb	r3, r3
 801d95e:	2b00      	cmp	r3, #0
 801d960:	d001      	beq.n	801d966 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801d962:	f005 fd61 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801d966:	68bb      	ldr	r3, [r7, #8]
 801d968:	009b      	lsls	r3, r3, #2
 801d96a:	4618      	mov	r0, r3
 801d96c:	f005 fc97 	bl	802329e <_Znwj>
 801d970:	4603      	mov	r3, r0
 801d972:	bf00      	nop
      }
 801d974:	4618      	mov	r0, r3
 801d976:	3710      	adds	r7, #16
 801d978:	46bd      	mov	sp, r7
 801d97a:	bd80      	pop	{r7, pc}

0801d97c <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 801d97c:	b5b0      	push	{r4, r5, r7, lr}
 801d97e:	b084      	sub	sp, #16
 801d980:	af00      	add	r7, sp, #0
 801d982:	60f8      	str	r0, [r7, #12]
 801d984:	60b9      	str	r1, [r7, #8]
 801d986:	607a      	str	r2, [r7, #4]
 801d988:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 801d98a:	68f8      	ldr	r0, [r7, #12]
 801d98c:	f000 f96a 	bl	801dc64 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801d990:	4604      	mov	r4, r0
 801d992:	68b8      	ldr	r0, [r7, #8]
 801d994:	f000 f966 	bl	801dc64 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801d998:	4605      	mov	r5, r0
 801d99a:	6878      	ldr	r0, [r7, #4]
 801d99c:	f000 f962 	bl	801dc64 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 801d9a0:	4602      	mov	r2, r0
 801d9a2:	683b      	ldr	r3, [r7, #0]
 801d9a4:	4629      	mov	r1, r5
 801d9a6:	4620      	mov	r0, r4
 801d9a8:	f000 f967 	bl	801dc7a <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 801d9ac:	4603      	mov	r3, r0
    }
 801d9ae:	4618      	mov	r0, r3
 801d9b0:	3710      	adds	r7, #16
 801d9b2:	46bd      	mov	sp, r7
 801d9b4:	bdb0      	pop	{r4, r5, r7, pc}

0801d9b6 <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801d9b6:	b580      	push	{r7, lr}
 801d9b8:	b082      	sub	sp, #8
 801d9ba:	af00      	add	r7, sp, #0
 801d9bc:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801d9be:	6878      	ldr	r0, [r7, #4]
 801d9c0:	f000 f805 	bl	801d9ce <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801d9c4:	4603      	mov	r3, r0
 801d9c6:	4618      	mov	r0, r3
 801d9c8:	3708      	adds	r7, #8
 801d9ca:	46bd      	mov	sp, r7
 801d9cc:	bd80      	pop	{r7, pc}

0801d9ce <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801d9ce:	b480      	push	{r7}
 801d9d0:	b083      	sub	sp, #12
 801d9d2:	af00      	add	r7, sp, #0
 801d9d4:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801d9d6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801d9da:	4618      	mov	r0, r3
 801d9dc:	370c      	adds	r7, #12
 801d9de:	46bd      	mov	sp, r7
 801d9e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d9e4:	4770      	bx	lr

0801d9e6 <_ZSt12__niter_baseIP13mult_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801d9e6:	b480      	push	{r7}
 801d9e8:	b083      	sub	sp, #12
 801d9ea:	af00      	add	r7, sp, #0
 801d9ec:	6078      	str	r0, [r7, #4]
    { return __it; }
 801d9ee:	687b      	ldr	r3, [r7, #4]
 801d9f0:	4618      	mov	r0, r3
 801d9f2:	370c      	adds	r7, #12
 801d9f4:	46bd      	mov	sp, r7
 801d9f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d9fa:	4770      	bx	lr

0801d9fc <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801d9fc:	b580      	push	{r7, lr}
 801d9fe:	b086      	sub	sp, #24
 801da00:	af00      	add	r7, sp, #0
 801da02:	60f8      	str	r0, [r7, #12]
 801da04:	60b9      	str	r1, [r7, #8]
 801da06:	607a      	str	r2, [r7, #4]
 801da08:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801da0a:	68ba      	ldr	r2, [r7, #8]
 801da0c:	68fb      	ldr	r3, [r7, #12]
 801da0e:	1ad3      	subs	r3, r2, r3
 801da10:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801da12:	697b      	ldr	r3, [r7, #20]
 801da14:	2b00      	cmp	r3, #0
 801da16:	dd05      	ble.n	801da24 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801da18:	697b      	ldr	r3, [r7, #20]
 801da1a:	461a      	mov	r2, r3
 801da1c:	68f9      	ldr	r1, [r7, #12]
 801da1e:	6878      	ldr	r0, [r7, #4]
 801da20:	f007 f912 	bl	8024c48 <memmove>
      return __result + __count;
 801da24:	697b      	ldr	r3, [r7, #20]
 801da26:	687a      	ldr	r2, [r7, #4]
 801da28:	4413      	add	r3, r2
    }
 801da2a:	4618      	mov	r0, r3
 801da2c:	3718      	adds	r7, #24
 801da2e:	46bd      	mov	sp, r7
 801da30:	bd80      	pop	{r7, pc}

0801da32 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801da32:	b580      	push	{r7, lr}
 801da34:	b082      	sub	sp, #8
 801da36:	af00      	add	r7, sp, #0
 801da38:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801da3a:	6878      	ldr	r0, [r7, #4]
 801da3c:	f000 f805 	bl	801da4a <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 801da40:	4603      	mov	r3, r0
 801da42:	4618      	mov	r0, r3
 801da44:	3708      	adds	r7, #8
 801da46:	46bd      	mov	sp, r7
 801da48:	bd80      	pop	{r7, pc}

0801da4a <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801da4a:	b480      	push	{r7}
 801da4c:	b083      	sub	sp, #12
 801da4e:	af00      	add	r7, sp, #0
 801da50:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801da52:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801da56:	4618      	mov	r0, r3
 801da58:	370c      	adds	r7, #12
 801da5a:	46bd      	mov	sp, r7
 801da5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801da60:	4770      	bx	lr

0801da62 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801da62:	b480      	push	{r7}
 801da64:	b083      	sub	sp, #12
 801da66:	af00      	add	r7, sp, #0
 801da68:	6078      	str	r0, [r7, #4]
    { return __it; }
 801da6a:	687b      	ldr	r3, [r7, #4]
 801da6c:	4618      	mov	r0, r3
 801da6e:	370c      	adds	r7, #12
 801da70:	46bd      	mov	sp, r7
 801da72:	f85d 7b04 	ldr.w	r7, [sp], #4
 801da76:	4770      	bx	lr

0801da78 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801da78:	b580      	push	{r7, lr}
 801da7a:	b086      	sub	sp, #24
 801da7c:	af00      	add	r7, sp, #0
 801da7e:	60f8      	str	r0, [r7, #12]
 801da80:	60b9      	str	r1, [r7, #8]
 801da82:	607a      	str	r2, [r7, #4]
 801da84:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801da86:	68ba      	ldr	r2, [r7, #8]
 801da88:	68fb      	ldr	r3, [r7, #12]
 801da8a:	1ad3      	subs	r3, r2, r3
 801da8c:	109b      	asrs	r3, r3, #2
 801da8e:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801da90:	697b      	ldr	r3, [r7, #20]
 801da92:	2b00      	cmp	r3, #0
 801da94:	dd06      	ble.n	801daa4 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801da96:	697b      	ldr	r3, [r7, #20]
 801da98:	009b      	lsls	r3, r3, #2
 801da9a:	461a      	mov	r2, r3
 801da9c:	68f9      	ldr	r1, [r7, #12]
 801da9e:	6878      	ldr	r0, [r7, #4]
 801daa0:	f007 f8d2 	bl	8024c48 <memmove>
      return __result + __count;
 801daa4:	697b      	ldr	r3, [r7, #20]
 801daa6:	009b      	lsls	r3, r3, #2
 801daa8:	687a      	ldr	r2, [r7, #4]
 801daaa:	4413      	add	r3, r2
    }
 801daac:	4618      	mov	r0, r3
 801daae:	3718      	adds	r7, #24
 801dab0:	46bd      	mov	sp, r7
 801dab2:	bd80      	pop	{r7, pc}

0801dab4 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 801dab4:	b580      	push	{r7, lr}
 801dab6:	b082      	sub	sp, #8
 801dab8:	af00      	add	r7, sp, #0
 801daba:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dabc:	6878      	ldr	r0, [r7, #4]
 801dabe:	f000 f805 	bl	801dacc <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 801dac2:	4603      	mov	r3, r0
 801dac4:	4618      	mov	r0, r3
 801dac6:	3708      	adds	r7, #8
 801dac8:	46bd      	mov	sp, r7
 801daca:	bd80      	pop	{r7, pc}

0801dacc <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801dacc:	b480      	push	{r7}
 801dace:	b083      	sub	sp, #12
 801dad0:	af00      	add	r7, sp, #0
 801dad2:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801dad4:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 801dad8:	4618      	mov	r0, r3
 801dada:	370c      	adds	r7, #12
 801dadc:	46bd      	mov	sp, r7
 801dade:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dae2:	4770      	bx	lr

0801dae4 <_ZSt12__niter_baseIP12sum_operatorET_S2_>:
    __niter_base(_Iterator __it)
 801dae4:	b480      	push	{r7}
 801dae6:	b083      	sub	sp, #12
 801dae8:	af00      	add	r7, sp, #0
 801daea:	6078      	str	r0, [r7, #4]
    { return __it; }
 801daec:	687b      	ldr	r3, [r7, #4]
 801daee:	4618      	mov	r0, r3
 801daf0:	370c      	adds	r7, #12
 801daf2:	46bd      	mov	sp, r7
 801daf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801daf8:	4770      	bx	lr

0801dafa <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801dafa:	b580      	push	{r7, lr}
 801dafc:	b086      	sub	sp, #24
 801dafe:	af00      	add	r7, sp, #0
 801db00:	60f8      	str	r0, [r7, #12]
 801db02:	60b9      	str	r1, [r7, #8]
 801db04:	607a      	str	r2, [r7, #4]
 801db06:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801db08:	68ba      	ldr	r2, [r7, #8]
 801db0a:	68fb      	ldr	r3, [r7, #12]
 801db0c:	1ad3      	subs	r3, r2, r3
 801db0e:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801db10:	697b      	ldr	r3, [r7, #20]
 801db12:	2b00      	cmp	r3, #0
 801db14:	dd05      	ble.n	801db22 <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801db16:	697b      	ldr	r3, [r7, #20]
 801db18:	461a      	mov	r2, r3
 801db1a:	68f9      	ldr	r1, [r7, #12]
 801db1c:	6878      	ldr	r0, [r7, #4]
 801db1e:	f007 f893 	bl	8024c48 <memmove>
      return __result + __count;
 801db22:	697b      	ldr	r3, [r7, #20]
 801db24:	687a      	ldr	r2, [r7, #4]
 801db26:	4413      	add	r3, r2
    }
 801db28:	4618      	mov	r0, r3
 801db2a:	3718      	adds	r7, #24
 801db2c:	46bd      	mov	sp, r7
 801db2e:	bd80      	pop	{r7, pc}

0801db30 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801db30:	b580      	push	{r7, lr}
 801db32:	b082      	sub	sp, #8
 801db34:	af00      	add	r7, sp, #0
 801db36:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801db38:	6878      	ldr	r0, [r7, #4]
 801db3a:	f000 f805 	bl	801db48 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 801db3e:	4603      	mov	r3, r0
 801db40:	4618      	mov	r0, r3
 801db42:	3708      	adds	r7, #8
 801db44:	46bd      	mov	sp, r7
 801db46:	bd80      	pop	{r7, pc}

0801db48 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801db48:	b480      	push	{r7}
 801db4a:	b083      	sub	sp, #12
 801db4c:	af00      	add	r7, sp, #0
 801db4e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801db50:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801db54:	4618      	mov	r0, r3
 801db56:	370c      	adds	r7, #12
 801db58:	46bd      	mov	sp, r7
 801db5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801db5e:	4770      	bx	lr

0801db60 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801db60:	b480      	push	{r7}
 801db62:	b083      	sub	sp, #12
 801db64:	af00      	add	r7, sp, #0
 801db66:	6078      	str	r0, [r7, #4]
    { return __it; }
 801db68:	687b      	ldr	r3, [r7, #4]
 801db6a:	4618      	mov	r0, r3
 801db6c:	370c      	adds	r7, #12
 801db6e:	46bd      	mov	sp, r7
 801db70:	f85d 7b04 	ldr.w	r7, [sp], #4
 801db74:	4770      	bx	lr

0801db76 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801db76:	b580      	push	{r7, lr}
 801db78:	b086      	sub	sp, #24
 801db7a:	af00      	add	r7, sp, #0
 801db7c:	60f8      	str	r0, [r7, #12]
 801db7e:	60b9      	str	r1, [r7, #8]
 801db80:	607a      	str	r2, [r7, #4]
 801db82:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801db84:	68ba      	ldr	r2, [r7, #8]
 801db86:	68fb      	ldr	r3, [r7, #12]
 801db88:	1ad3      	subs	r3, r2, r3
 801db8a:	109b      	asrs	r3, r3, #2
 801db8c:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801db8e:	697b      	ldr	r3, [r7, #20]
 801db90:	2b00      	cmp	r3, #0
 801db92:	dd06      	ble.n	801dba2 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801db94:	697b      	ldr	r3, [r7, #20]
 801db96:	009b      	lsls	r3, r3, #2
 801db98:	461a      	mov	r2, r3
 801db9a:	68f9      	ldr	r1, [r7, #12]
 801db9c:	6878      	ldr	r0, [r7, #4]
 801db9e:	f007 f853 	bl	8024c48 <memmove>
      return __result + __count;
 801dba2:	697b      	ldr	r3, [r7, #20]
 801dba4:	009b      	lsls	r3, r3, #2
 801dba6:	687a      	ldr	r2, [r7, #4]
 801dba8:	4413      	add	r3, r2
    }
 801dbaa:	4618      	mov	r0, r3
 801dbac:	3718      	adds	r7, #24
 801dbae:	46bd      	mov	sp, r7
 801dbb0:	bd80      	pop	{r7, pc}

0801dbb2 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801dbb2:	b580      	push	{r7, lr}
 801dbb4:	b082      	sub	sp, #8
 801dbb6:	af00      	add	r7, sp, #0
 801dbb8:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dbba:	6878      	ldr	r0, [r7, #4]
 801dbbc:	f000 f805 	bl	801dbca <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 801dbc0:	4603      	mov	r3, r0
 801dbc2:	4618      	mov	r0, r3
 801dbc4:	3708      	adds	r7, #8
 801dbc6:	46bd      	mov	sp, r7
 801dbc8:	bd80      	pop	{r7, pc}

0801dbca <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801dbca:	b480      	push	{r7}
 801dbcc:	b083      	sub	sp, #12
 801dbce:	af00      	add	r7, sp, #0
 801dbd0:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801dbd2:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801dbd6:	4618      	mov	r0, r3
 801dbd8:	370c      	adds	r7, #12
 801dbda:	46bd      	mov	sp, r7
 801dbdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dbe0:	4770      	bx	lr

0801dbe2 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801dbe2:	b480      	push	{r7}
 801dbe4:	b083      	sub	sp, #12
 801dbe6:	af00      	add	r7, sp, #0
 801dbe8:	6078      	str	r0, [r7, #4]
    { return __it; }
 801dbea:	687b      	ldr	r3, [r7, #4]
 801dbec:	4618      	mov	r0, r3
 801dbee:	370c      	adds	r7, #12
 801dbf0:	46bd      	mov	sp, r7
 801dbf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dbf6:	4770      	bx	lr

0801dbf8 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801dbf8:	b580      	push	{r7, lr}
 801dbfa:	b086      	sub	sp, #24
 801dbfc:	af00      	add	r7, sp, #0
 801dbfe:	60f8      	str	r0, [r7, #12]
 801dc00:	60b9      	str	r1, [r7, #8]
 801dc02:	607a      	str	r2, [r7, #4]
 801dc04:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801dc06:	68ba      	ldr	r2, [r7, #8]
 801dc08:	68fb      	ldr	r3, [r7, #12]
 801dc0a:	1ad3      	subs	r3, r2, r3
 801dc0c:	109b      	asrs	r3, r3, #2
 801dc0e:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801dc10:	697b      	ldr	r3, [r7, #20]
 801dc12:	2b00      	cmp	r3, #0
 801dc14:	dd06      	ble.n	801dc24 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801dc16:	697b      	ldr	r3, [r7, #20]
 801dc18:	009b      	lsls	r3, r3, #2
 801dc1a:	461a      	mov	r2, r3
 801dc1c:	68f9      	ldr	r1, [r7, #12]
 801dc1e:	6878      	ldr	r0, [r7, #4]
 801dc20:	f007 f812 	bl	8024c48 <memmove>
      return __result + __count;
 801dc24:	697b      	ldr	r3, [r7, #20]
 801dc26:	009b      	lsls	r3, r3, #2
 801dc28:	687a      	ldr	r2, [r7, #4]
 801dc2a:	4413      	add	r3, r2
    }
 801dc2c:	4618      	mov	r0, r3
 801dc2e:	3718      	adds	r7, #24
 801dc30:	46bd      	mov	sp, r7
 801dc32:	bd80      	pop	{r7, pc}

0801dc34 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 801dc34:	b580      	push	{r7, lr}
 801dc36:	b082      	sub	sp, #8
 801dc38:	af00      	add	r7, sp, #0
 801dc3a:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 801dc3c:	6878      	ldr	r0, [r7, #4]
 801dc3e:	f000 f805 	bl	801dc4c <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 801dc42:	4603      	mov	r3, r0
 801dc44:	4618      	mov	r0, r3
 801dc46:	3708      	adds	r7, #8
 801dc48:	46bd      	mov	sp, r7
 801dc4a:	bd80      	pop	{r7, pc}

0801dc4c <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801dc4c:	b480      	push	{r7}
 801dc4e:	b083      	sub	sp, #12
 801dc50:	af00      	add	r7, sp, #0
 801dc52:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801dc54:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801dc58:	4618      	mov	r0, r3
 801dc5a:	370c      	adds	r7, #12
 801dc5c:	46bd      	mov	sp, r7
 801dc5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dc62:	4770      	bx	lr

0801dc64 <_ZSt12__niter_baseIPP14And_expressionET_S3_>:
    __niter_base(_Iterator __it)
 801dc64:	b480      	push	{r7}
 801dc66:	b083      	sub	sp, #12
 801dc68:	af00      	add	r7, sp, #0
 801dc6a:	6078      	str	r0, [r7, #4]
    { return __it; }
 801dc6c:	687b      	ldr	r3, [r7, #4]
 801dc6e:	4618      	mov	r0, r3
 801dc70:	370c      	adds	r7, #12
 801dc72:	46bd      	mov	sp, r7
 801dc74:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dc78:	4770      	bx	lr

0801dc7a <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801dc7a:	b580      	push	{r7, lr}
 801dc7c:	b086      	sub	sp, #24
 801dc7e:	af00      	add	r7, sp, #0
 801dc80:	60f8      	str	r0, [r7, #12]
 801dc82:	60b9      	str	r1, [r7, #8]
 801dc84:	607a      	str	r2, [r7, #4]
 801dc86:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 801dc88:	68ba      	ldr	r2, [r7, #8]
 801dc8a:	68fb      	ldr	r3, [r7, #12]
 801dc8c:	1ad3      	subs	r3, r2, r3
 801dc8e:	109b      	asrs	r3, r3, #2
 801dc90:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 801dc92:	697b      	ldr	r3, [r7, #20]
 801dc94:	2b00      	cmp	r3, #0
 801dc96:	dd06      	ble.n	801dca6 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 801dc98:	697b      	ldr	r3, [r7, #20]
 801dc9a:	009b      	lsls	r3, r3, #2
 801dc9c:	461a      	mov	r2, r3
 801dc9e:	68f9      	ldr	r1, [r7, #12]
 801dca0:	6878      	ldr	r0, [r7, #4]
 801dca2:	f006 ffd1 	bl	8024c48 <memmove>
      return __result + __count;
 801dca6:	697b      	ldr	r3, [r7, #20]
 801dca8:	009b      	lsls	r3, r3, #2
 801dcaa:	687a      	ldr	r2, [r7, #4]
 801dcac:	4413      	add	r3, r2
    }
 801dcae:	4618      	mov	r0, r3
 801dcb0:	3718      	adds	r7, #24
 801dcb2:	46bd      	mov	sp, r7
 801dcb4:	bd80      	pop	{r7, pc}
	...

0801dcb8 <_Z41__static_initialization_and_destruction_0ii>:
 801dcb8:	b590      	push	{r4, r7, lr}
 801dcba:	b0e7      	sub	sp, #412	; 0x19c
 801dcbc:	af02      	add	r7, sp, #8
 801dcbe:	1d3b      	adds	r3, r7, #4
 801dcc0:	6018      	str	r0, [r3, #0]
 801dcc2:	463b      	mov	r3, r7
 801dcc4:	6019      	str	r1, [r3, #0]
 801dcc6:	1d3b      	adds	r3, r7, #4
 801dcc8:	681b      	ldr	r3, [r3, #0]
 801dcca:	2b01      	cmp	r3, #1
 801dccc:	f040 819d 	bne.w	801e00a <_Z41__static_initialization_and_destruction_0ii+0x352>
 801dcd0:	463b      	mov	r3, r7
 801dcd2:	681b      	ldr	r3, [r3, #0]
 801dcd4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801dcd8:	4293      	cmp	r3, r2
 801dcda:	f040 8196 	bne.w	801e00a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801dcde:	f107 0314 	add.w	r3, r7, #20
 801dce2:	4618      	mov	r0, r3
 801dce4:	2322      	movs	r3, #34	; 0x22
 801dce6:	461a      	mov	r2, r3
 801dce8:	2100      	movs	r1, #0
 801dcea:	f006 ffc7 	bl	8024c7c <memset>
 801dcee:	f107 0314 	add.w	r3, r7, #20
 801dcf2:	223a      	movs	r2, #58	; 0x3a
 801dcf4:	701a      	strb	r2, [r3, #0]
 801dcf6:	f107 0314 	add.w	r3, r7, #20
 801dcfa:	2201      	movs	r2, #1
 801dcfc:	705a      	strb	r2, [r3, #1]
 801dcfe:	f107 0314 	add.w	r3, r7, #20
 801dd02:	220a      	movs	r2, #10
 801dd04:	709a      	strb	r2, [r3, #2]
 801dd06:	f107 0314 	add.w	r3, r7, #20
 801dd0a:	220a      	movs	r2, #10
 801dd0c:	70da      	strb	r2, [r3, #3]
 801dd0e:	f107 0314 	add.w	r3, r7, #20
 801dd12:	222c      	movs	r2, #44	; 0x2c
 801dd14:	711a      	strb	r2, [r3, #4]
 801dd16:	f107 0314 	add.w	r3, r7, #20
 801dd1a:	220c      	movs	r2, #12
 801dd1c:	715a      	strb	r2, [r3, #5]
 801dd1e:	f107 0314 	add.w	r3, r7, #20
 801dd22:	222e      	movs	r2, #46	; 0x2e
 801dd24:	719a      	strb	r2, [r3, #6]
 801dd26:	f107 0314 	add.w	r3, r7, #20
 801dd2a:	220b      	movs	r2, #11
 801dd2c:	71da      	strb	r2, [r3, #7]
 801dd2e:	f107 0314 	add.w	r3, r7, #20
 801dd32:	225b      	movs	r2, #91	; 0x5b
 801dd34:	721a      	strb	r2, [r3, #8]
 801dd36:	f107 0314 	add.w	r3, r7, #20
 801dd3a:	220d      	movs	r2, #13
 801dd3c:	725a      	strb	r2, [r3, #9]
 801dd3e:	f107 0314 	add.w	r3, r7, #20
 801dd42:	225d      	movs	r2, #93	; 0x5d
 801dd44:	729a      	strb	r2, [r3, #10]
 801dd46:	f107 0314 	add.w	r3, r7, #20
 801dd4a:	220e      	movs	r2, #14
 801dd4c:	72da      	strb	r2, [r3, #11]
 801dd4e:	f107 0314 	add.w	r3, r7, #20
 801dd52:	227c      	movs	r2, #124	; 0x7c
 801dd54:	731a      	strb	r2, [r3, #12]
 801dd56:	f107 0314 	add.w	r3, r7, #20
 801dd5a:	2215      	movs	r2, #21
 801dd5c:	735a      	strb	r2, [r3, #13]
 801dd5e:	f107 0314 	add.w	r3, r7, #20
 801dd62:	2226      	movs	r2, #38	; 0x26
 801dd64:	739a      	strb	r2, [r3, #14]
 801dd66:	f107 0314 	add.w	r3, r7, #20
 801dd6a:	2216      	movs	r2, #22
 801dd6c:	73da      	strb	r2, [r3, #15]
 801dd6e:	f107 0314 	add.w	r3, r7, #20
 801dd72:	222b      	movs	r2, #43	; 0x2b
 801dd74:	741a      	strb	r2, [r3, #16]
 801dd76:	f107 0314 	add.w	r3, r7, #20
 801dd7a:	221f      	movs	r2, #31
 801dd7c:	745a      	strb	r2, [r3, #17]
 801dd7e:	f107 0314 	add.w	r3, r7, #20
 801dd82:	222d      	movs	r2, #45	; 0x2d
 801dd84:	749a      	strb	r2, [r3, #18]
 801dd86:	f107 0314 	add.w	r3, r7, #20
 801dd8a:	2220      	movs	r2, #32
 801dd8c:	74da      	strb	r2, [r3, #19]
 801dd8e:	f107 0314 	add.w	r3, r7, #20
 801dd92:	222a      	movs	r2, #42	; 0x2a
 801dd94:	751a      	strb	r2, [r3, #20]
 801dd96:	f107 0314 	add.w	r3, r7, #20
 801dd9a:	2221      	movs	r2, #33	; 0x21
 801dd9c:	755a      	strb	r2, [r3, #21]
 801dd9e:	f107 0314 	add.w	r3, r7, #20
 801dda2:	222f      	movs	r2, #47	; 0x2f
 801dda4:	759a      	strb	r2, [r3, #22]
 801dda6:	f107 0314 	add.w	r3, r7, #20
 801ddaa:	2222      	movs	r2, #34	; 0x22
 801ddac:	75da      	strb	r2, [r3, #23]
 801ddae:	f107 0314 	add.w	r3, r7, #20
 801ddb2:	225e      	movs	r2, #94	; 0x5e
 801ddb4:	761a      	strb	r2, [r3, #24]
 801ddb6:	f107 0314 	add.w	r3, r7, #20
 801ddba:	2223      	movs	r2, #35	; 0x23
 801ddbc:	765a      	strb	r2, [r3, #25]
 801ddbe:	f107 0314 	add.w	r3, r7, #20
 801ddc2:	2225      	movs	r2, #37	; 0x25
 801ddc4:	769a      	strb	r2, [r3, #26]
 801ddc6:	f107 0314 	add.w	r3, r7, #20
 801ddca:	2224      	movs	r2, #36	; 0x24
 801ddcc:	76da      	strb	r2, [r3, #27]
 801ddce:	f107 0314 	add.w	r3, r7, #20
 801ddd2:	2228      	movs	r2, #40	; 0x28
 801ddd4:	771a      	strb	r2, [r3, #28]
 801ddd6:	f107 0314 	add.w	r3, r7, #20
 801ddda:	2226      	movs	r2, #38	; 0x26
 801dddc:	775a      	strb	r2, [r3, #29]
 801ddde:	f107 0314 	add.w	r3, r7, #20
 801dde2:	2229      	movs	r2, #41	; 0x29
 801dde4:	779a      	strb	r2, [r3, #30]
 801dde6:	f107 0314 	add.w	r3, r7, #20
 801ddea:	2227      	movs	r2, #39	; 0x27
 801ddec:	77da      	strb	r2, [r3, #31]
 801ddee:	f107 0314 	add.w	r3, r7, #20
 801ddf2:	2225      	movs	r2, #37	; 0x25
 801ddf4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801ddf8:	f107 030c 	add.w	r3, r7, #12
 801ddfc:	f107 0214 	add.w	r2, r7, #20
 801de00:	601a      	str	r2, [r3, #0]
 801de02:	f107 030c 	add.w	r3, r7, #12
 801de06:	2211      	movs	r2, #17
 801de08:	605a      	str	r2, [r3, #4]
 801de0a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801de0e:	4618      	mov	r0, r3
 801de10:	f7e3 ff9c 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801de14:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801de18:	f107 020c 	add.w	r2, r7, #12
 801de1c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801de20:	9300      	str	r3, [sp, #0]
 801de22:	460b      	mov	r3, r1
 801de24:	ca06      	ldmia	r2, {r1, r2}
 801de26:	4885      	ldr	r0, [pc, #532]	; (801e03c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801de28:	f7e3 ffa8 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801de2c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801de30:	4618      	mov	r0, r3
 801de32:	f7e3 ff97 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801de36:	2305      	movs	r3, #5
 801de38:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801de3c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801de40:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de44:	497e      	ldr	r1, [pc, #504]	; (801e040 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801de46:	4618      	mov	r0, r3
 801de48:	f7e3 f956 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801de4c:	2306      	movs	r3, #6
 801de4e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801de52:	f207 1263 	addw	r2, r7, #355	; 0x163
 801de56:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de5a:	331c      	adds	r3, #28
 801de5c:	4979      	ldr	r1, [pc, #484]	; (801e044 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801de5e:	4618      	mov	r0, r3
 801de60:	f7e3 f972 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801de64:	2307      	movs	r3, #7
 801de66:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801de6a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801de6e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de72:	3338      	adds	r3, #56	; 0x38
 801de74:	4974      	ldr	r1, [pc, #464]	; (801e048 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801de76:	4618      	mov	r0, r3
 801de78:	f7e3 f966 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801de7c:	2308      	movs	r3, #8
 801de7e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801de82:	f207 1265 	addw	r2, r7, #357	; 0x165
 801de86:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801de8a:	3354      	adds	r3, #84	; 0x54
 801de8c:	496f      	ldr	r1, [pc, #444]	; (801e04c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801de8e:	4618      	mov	r0, r3
 801de90:	f7e3 f932 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801de94:	2309      	movs	r3, #9
 801de96:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801de9a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801de9e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801dea2:	3370      	adds	r3, #112	; 0x70
 801dea4:	496a      	ldr	r1, [pc, #424]	; (801e050 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801dea6:	4618      	mov	r0, r3
 801dea8:	f7e3 f976 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801deac:	2310      	movs	r3, #16
 801deae:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801deb2:	f207 1267 	addw	r2, r7, #359	; 0x167
 801deb6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801deba:	338c      	adds	r3, #140	; 0x8c
 801debc:	4965      	ldr	r1, [pc, #404]	; (801e054 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801debe:	4618      	mov	r0, r3
 801dec0:	f7e3 f992 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801dec4:	2311      	movs	r3, #17
 801dec6:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801deca:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801dece:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ded2:	33a8      	adds	r3, #168	; 0xa8
 801ded4:	4960      	ldr	r1, [pc, #384]	; (801e058 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801ded6:	4618      	mov	r0, r3
 801ded8:	f7e3 f95e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801dedc:	2312      	movs	r3, #18
 801dede:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801dee2:	f207 1269 	addw	r2, r7, #361	; 0x169
 801dee6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801deea:	33c4      	adds	r3, #196	; 0xc4
 801deec:	495b      	ldr	r1, [pc, #364]	; (801e05c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801deee:	4618      	mov	r0, r3
 801def0:	f7e3 f902 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801def4:	2313      	movs	r3, #19
 801def6:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801defa:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801defe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df02:	33e0      	adds	r3, #224	; 0xe0
 801df04:	4956      	ldr	r1, [pc, #344]	; (801e060 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801df06:	4618      	mov	r0, r3
 801df08:	f7e3 f91e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801df0c:	2314      	movs	r3, #20
 801df0e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801df12:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801df16:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df1a:	33fc      	adds	r3, #252	; 0xfc
 801df1c:	4951      	ldr	r1, [pc, #324]	; (801e064 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801df1e:	4618      	mov	r0, r3
 801df20:	f7e3 f98a 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801df24:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801df28:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801df2c:	601a      	str	r2, [r3, #0]
 801df2e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801df32:	220a      	movs	r2, #10
 801df34:	605a      	str	r2, [r3, #4]
 801df36:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801df3a:	4618      	mov	r0, r3
 801df3c:	f7e3 ffab 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801df40:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801df44:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801df48:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801df4c:	9300      	str	r3, [sp, #0]
 801df4e:	460b      	mov	r3, r1
 801df50:	ca06      	ldmia	r2, {r1, r2}
 801df52:	4845      	ldr	r0, [pc, #276]	; (801e068 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801df54:	f7e3 ffb7 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801df58:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801df5c:	4618      	mov	r0, r3
 801df5e:	f7e3 ffa6 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801df62:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801df66:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801df6a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801df6e:	429c      	cmp	r4, r3
 801df70:	d004      	beq.n	801df7c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801df72:	3c1c      	subs	r4, #28
 801df74:	4620      	mov	r0, r4
 801df76:	f7e3 f8b2 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801df7a:	e7f6      	b.n	801df6a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801df7c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801df80:	2200      	movs	r2, #0
 801df82:	601a      	str	r2, [r3, #0]
 801df84:	605a      	str	r2, [r3, #4]
 801df86:	609a      	str	r2, [r3, #8]
 801df88:	233c      	movs	r3, #60	; 0x3c
 801df8a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801df8e:	231b      	movs	r3, #27
 801df90:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801df94:	231c      	movs	r3, #28
 801df96:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801df9a:	233e      	movs	r3, #62	; 0x3e
 801df9c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801dfa0:	2319      	movs	r3, #25
 801dfa2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801dfa6:	231a      	movs	r3, #26
 801dfa8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801dfac:	233d      	movs	r3, #61	; 0x3d
 801dfae:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801dfb2:	2318      	movs	r3, #24
 801dfb4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801dfb8:	231d      	movs	r3, #29
 801dfba:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801dfbe:	2321      	movs	r3, #33	; 0x21
 801dfc0:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801dfc4:	2317      	movs	r3, #23
 801dfc6:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801dfca:	231e      	movs	r3, #30
 801dfcc:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801dfd0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801dfd4:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801dfd8:	2304      	movs	r3, #4
 801dfda:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801dfde:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801dfe2:	4618      	mov	r0, r3
 801dfe4:	f7e3 ff9f 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801dfe8:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801dfec:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801dff0:	9300      	str	r3, [sp, #0]
 801dff2:	4613      	mov	r3, r2
 801dff4:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801dff8:	ca06      	ldmia	r2, {r1, r2}
 801dffa:	481c      	ldr	r0, [pc, #112]	; (801e06c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801dffc:	f7e3 ffab 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e000:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e004:	4618      	mov	r0, r3
 801e006:	f7e3 ff9a 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801e00a:	1d3b      	adds	r3, r7, #4
 801e00c:	681b      	ldr	r3, [r3, #0]
 801e00e:	2b00      	cmp	r3, #0
 801e010:	d10e      	bne.n	801e030 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e012:	463b      	mov	r3, r7
 801e014:	681b      	ldr	r3, [r3, #0]
 801e016:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e01a:	4293      	cmp	r3, r2
 801e01c:	d108      	bne.n	801e030 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e01e:	4813      	ldr	r0, [pc, #76]	; (801e06c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e020:	f7eb fc08 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801e024:	4810      	ldr	r0, [pc, #64]	; (801e068 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e026:	f7eb fc12 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801e02a:	4804      	ldr	r0, [pc, #16]	; (801e03c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e02c:	f7eb fc1c 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801e030:	bf00      	nop
 801e032:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801e036:	46bd      	mov	sp, r7
 801e038:	bd90      	pop	{r4, r7, pc}
 801e03a:	bf00      	nop
 801e03c:	200005e0 	.word	0x200005e0
 801e040:	08029dbc 	.word	0x08029dbc
 801e044:	08029dc4 	.word	0x08029dc4
 801e048:	08029dcc 	.word	0x08029dcc
 801e04c:	08029dd4 	.word	0x08029dd4
 801e050:	08029ddc 	.word	0x08029ddc
 801e054:	08029de4 	.word	0x08029de4
 801e058:	08029de8 	.word	0x08029de8
 801e05c:	08029df0 	.word	0x08029df0
 801e060:	08029df8 	.word	0x08029df8
 801e064:	08029e00 	.word	0x08029e00
 801e068:	200005f8 	.word	0x200005f8
 801e06c:	20000610 	.word	0x20000610

0801e070 <_GLOBAL__sub_I__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801e070:	b580      	push	{r7, lr}
 801e072:	af00      	add	r7, sp, #0
 801e074:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e078:	2001      	movs	r0, #1
 801e07a:	f7ff fe1d 	bl	801dcb8 <_Z41__static_initialization_and_destruction_0ii>
 801e07e:	bd80      	pop	{r7, pc}

0801e080 <_GLOBAL__sub_D__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 801e080:	b580      	push	{r7, lr}
 801e082:	af00      	add	r7, sp, #0
 801e084:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e088:	2000      	movs	r0, #0
 801e08a:	f7ff fe15 	bl	801dcb8 <_Z41__static_initialization_and_destruction_0ii>
 801e08e:	bd80      	pop	{r7, pc}

0801e090 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 801e090:	b580      	push	{r7, lr}
 801e092:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 801e094:	f002 fafd 	bl	8020692 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 801e098:	f000 f808 	bl	801e0ac <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 801e09c:	f000 f8de 	bl	801e25c <_ZL12MX_GPIO_Initv>
  MX_USART1_UART_Init();
 801e0a0:	f000 f8a8 	bl	801e1f4 <_ZL19MX_USART1_UART_Initv>
  /* USER CODE BEGIN 2 */
  my_main_run();
 801e0a4:	f000 fae4 	bl	801e670 <_Z11my_main_runv>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 801e0a8:	e7fe      	b.n	801e0a8 <main+0x18>
	...

0801e0ac <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 801e0ac:	b580      	push	{r7, lr}
 801e0ae:	b0b4      	sub	sp, #208	; 0xd0
 801e0b0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 801e0b2:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801e0b6:	2230      	movs	r2, #48	; 0x30
 801e0b8:	2100      	movs	r1, #0
 801e0ba:	4618      	mov	r0, r3
 801e0bc:	f006 fdde 	bl	8024c7c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 801e0c0:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801e0c4:	2200      	movs	r2, #0
 801e0c6:	601a      	str	r2, [r3, #0]
 801e0c8:	605a      	str	r2, [r3, #4]
 801e0ca:	609a      	str	r2, [r3, #8]
 801e0cc:	60da      	str	r2, [r3, #12]
 801e0ce:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 801e0d0:	f107 0308 	add.w	r3, r7, #8
 801e0d4:	2284      	movs	r2, #132	; 0x84
 801e0d6:	2100      	movs	r1, #0
 801e0d8:	4618      	mov	r0, r3
 801e0da:	f006 fdcf 	bl	8024c7c <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 801e0de:	4b43      	ldr	r3, [pc, #268]	; (801e1ec <_Z18SystemClock_Configv+0x140>)
 801e0e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e0e2:	4a42      	ldr	r2, [pc, #264]	; (801e1ec <_Z18SystemClock_Configv+0x140>)
 801e0e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801e0e8:	6413      	str	r3, [r2, #64]	; 0x40
 801e0ea:	4b40      	ldr	r3, [pc, #256]	; (801e1ec <_Z18SystemClock_Configv+0x140>)
 801e0ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e0ee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801e0f2:	607b      	str	r3, [r7, #4]
 801e0f4:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 801e0f6:	4b3e      	ldr	r3, [pc, #248]	; (801e1f0 <_Z18SystemClock_Configv+0x144>)
 801e0f8:	681b      	ldr	r3, [r3, #0]
 801e0fa:	4a3d      	ldr	r2, [pc, #244]	; (801e1f0 <_Z18SystemClock_Configv+0x144>)
 801e0fc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 801e100:	6013      	str	r3, [r2, #0]
 801e102:	4b3b      	ldr	r3, [pc, #236]	; (801e1f0 <_Z18SystemClock_Configv+0x144>)
 801e104:	681b      	ldr	r3, [r3, #0]
 801e106:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 801e10a:	603b      	str	r3, [r7, #0]
 801e10c:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 801e10e:	2302      	movs	r3, #2
 801e110:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 801e114:	2301      	movs	r3, #1
 801e116:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 801e11a:	2310      	movs	r3, #16
 801e11c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 801e120:	2302      	movs	r3, #2
 801e122:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 801e126:	2300      	movs	r3, #0
 801e128:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 8;
 801e12c:	2308      	movs	r3, #8
 801e12e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 216;
 801e132:	23d8      	movs	r3, #216	; 0xd8
 801e134:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 801e138:	2302      	movs	r3, #2
 801e13a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 2;
 801e13e:	2302      	movs	r3, #2
 801e140:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 801e144:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801e148:	4618      	mov	r0, r3
 801e14a:	f002 fec3 	bl	8020ed4 <HAL_RCC_OscConfig>
 801e14e:	4603      	mov	r3, r0
 801e150:	2b00      	cmp	r3, #0
 801e152:	bf14      	ite	ne
 801e154:	2301      	movne	r3, #1
 801e156:	2300      	moveq	r3, #0
 801e158:	b2db      	uxtb	r3, r3
 801e15a:	2b00      	cmp	r3, #0
 801e15c:	d001      	beq.n	801e162 <_Z18SystemClock_Configv+0xb6>
  {
    Error_Handler();
 801e15e:	f000 f895 	bl	801e28c <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 801e162:	f002 fe67 	bl	8020e34 <HAL_PWREx_EnableOverDrive>
 801e166:	4603      	mov	r3, r0
 801e168:	2b00      	cmp	r3, #0
 801e16a:	bf14      	ite	ne
 801e16c:	2301      	movne	r3, #1
 801e16e:	2300      	moveq	r3, #0
 801e170:	b2db      	uxtb	r3, r3
 801e172:	2b00      	cmp	r3, #0
 801e174:	d001      	beq.n	801e17a <_Z18SystemClock_Configv+0xce>
  {
    Error_Handler();
 801e176:	f000 f889 	bl	801e28c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 801e17a:	230f      	movs	r3, #15
 801e17c:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 801e180:	2302      	movs	r3, #2
 801e182:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801e186:	2300      	movs	r3, #0
 801e188:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 801e18c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 801e190:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 801e194:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801e198:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 801e19c:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 801e1a0:	2107      	movs	r1, #7
 801e1a2:	4618      	mov	r0, r3
 801e1a4:	f003 f93a 	bl	802141c <HAL_RCC_ClockConfig>
 801e1a8:	4603      	mov	r3, r0
 801e1aa:	2b00      	cmp	r3, #0
 801e1ac:	bf14      	ite	ne
 801e1ae:	2301      	movne	r3, #1
 801e1b0:	2300      	moveq	r3, #0
 801e1b2:	b2db      	uxtb	r3, r3
 801e1b4:	2b00      	cmp	r3, #0
 801e1b6:	d001      	beq.n	801e1bc <_Z18SystemClock_Configv+0x110>
  {
    Error_Handler();
 801e1b8:	f000 f868 	bl	801e28c <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 801e1bc:	2340      	movs	r3, #64	; 0x40
 801e1be:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 801e1c0:	2300      	movs	r3, #0
 801e1c2:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 801e1c4:	f107 0308 	add.w	r3, r7, #8
 801e1c8:	4618      	mov	r0, r3
 801e1ca:	f003 fafd 	bl	80217c8 <HAL_RCCEx_PeriphCLKConfig>
 801e1ce:	4603      	mov	r3, r0
 801e1d0:	2b00      	cmp	r3, #0
 801e1d2:	bf14      	ite	ne
 801e1d4:	2301      	movne	r3, #1
 801e1d6:	2300      	moveq	r3, #0
 801e1d8:	b2db      	uxtb	r3, r3
 801e1da:	2b00      	cmp	r3, #0
 801e1dc:	d001      	beq.n	801e1e2 <_Z18SystemClock_Configv+0x136>
  {
    Error_Handler();
 801e1de:	f000 f855 	bl	801e28c <Error_Handler>
  }
}
 801e1e2:	bf00      	nop
 801e1e4:	37d0      	adds	r7, #208	; 0xd0
 801e1e6:	46bd      	mov	sp, r7
 801e1e8:	bd80      	pop	{r7, pc}
 801e1ea:	bf00      	nop
 801e1ec:	40023800 	.word	0x40023800
 801e1f0:	40007000 	.word	0x40007000

0801e1f4 <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 801e1f4:	b580      	push	{r7, lr}
 801e1f6:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 801e1f8:	4b16      	ldr	r3, [pc, #88]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e1fa:	4a17      	ldr	r2, [pc, #92]	; (801e258 <_ZL19MX_USART1_UART_Initv+0x64>)
 801e1fc:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 801e1fe:	4b15      	ldr	r3, [pc, #84]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e200:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 801e204:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 801e206:	4b13      	ldr	r3, [pc, #76]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e208:	2200      	movs	r2, #0
 801e20a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 801e20c:	4b11      	ldr	r3, [pc, #68]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e20e:	2200      	movs	r2, #0
 801e210:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 801e212:	4b10      	ldr	r3, [pc, #64]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e214:	2200      	movs	r2, #0
 801e216:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 801e218:	4b0e      	ldr	r3, [pc, #56]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e21a:	220c      	movs	r2, #12
 801e21c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 801e21e:	4b0d      	ldr	r3, [pc, #52]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e220:	2200      	movs	r2, #0
 801e222:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 801e224:	4b0b      	ldr	r3, [pc, #44]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e226:	2200      	movs	r2, #0
 801e228:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 801e22a:	4b0a      	ldr	r3, [pc, #40]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e22c:	2200      	movs	r2, #0
 801e22e:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 801e230:	4b08      	ldr	r3, [pc, #32]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e232:	2200      	movs	r2, #0
 801e234:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 801e236:	4807      	ldr	r0, [pc, #28]	; (801e254 <_ZL19MX_USART1_UART_Initv+0x60>)
 801e238:	f003 feb6 	bl	8021fa8 <HAL_UART_Init>
 801e23c:	4603      	mov	r3, r0
 801e23e:	2b00      	cmp	r3, #0
 801e240:	bf14      	ite	ne
 801e242:	2301      	movne	r3, #1
 801e244:	2300      	moveq	r3, #0
 801e246:	b2db      	uxtb	r3, r3
 801e248:	2b00      	cmp	r3, #0
 801e24a:	d001      	beq.n	801e250 <_ZL19MX_USART1_UART_Initv+0x5c>
  {
    Error_Handler();
 801e24c:	f000 f81e 	bl	801e28c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 801e250:	bf00      	nop
 801e252:	bd80      	pop	{r7, pc}
 801e254:	20000670 	.word	0x20000670
 801e258:	40011000 	.word	0x40011000

0801e25c <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 801e25c:	b480      	push	{r7}
 801e25e:	b083      	sub	sp, #12
 801e260:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 801e262:	4b09      	ldr	r3, [pc, #36]	; (801e288 <_ZL12MX_GPIO_Initv+0x2c>)
 801e264:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e266:	4a08      	ldr	r2, [pc, #32]	; (801e288 <_ZL12MX_GPIO_Initv+0x2c>)
 801e268:	f043 0301 	orr.w	r3, r3, #1
 801e26c:	6313      	str	r3, [r2, #48]	; 0x30
 801e26e:	4b06      	ldr	r3, [pc, #24]	; (801e288 <_ZL12MX_GPIO_Initv+0x2c>)
 801e270:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e272:	f003 0301 	and.w	r3, r3, #1
 801e276:	607b      	str	r3, [r7, #4]
 801e278:	687b      	ldr	r3, [r7, #4]

}
 801e27a:	bf00      	nop
 801e27c:	370c      	adds	r7, #12
 801e27e:	46bd      	mov	sp, r7
 801e280:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e284:	4770      	bx	lr
 801e286:	bf00      	nop
 801e288:	40023800 	.word	0x40023800

0801e28c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 801e28c:	b480      	push	{r7}
 801e28e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 801e290:	b672      	cpsid	i
}
 801e292:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 801e294:	e7fe      	b.n	801e294 <Error_Handler+0x8>
	...

0801e298 <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 801e298:	b590      	push	{r4, r7, lr}
 801e29a:	b0e7      	sub	sp, #412	; 0x19c
 801e29c:	af02      	add	r7, sp, #8
 801e29e:	1d3b      	adds	r3, r7, #4
 801e2a0:	6018      	str	r0, [r3, #0]
 801e2a2:	463b      	mov	r3, r7
 801e2a4:	6019      	str	r1, [r3, #0]
 801e2a6:	1d3b      	adds	r3, r7, #4
 801e2a8:	681b      	ldr	r3, [r3, #0]
 801e2aa:	2b01      	cmp	r3, #1
 801e2ac:	f040 819d 	bne.w	801e5ea <_Z41__static_initialization_and_destruction_0ii+0x352>
 801e2b0:	463b      	mov	r3, r7
 801e2b2:	681b      	ldr	r3, [r3, #0]
 801e2b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e2b8:	4293      	cmp	r3, r2
 801e2ba:	f040 8196 	bne.w	801e5ea <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801e2be:	f107 0314 	add.w	r3, r7, #20
 801e2c2:	4618      	mov	r0, r3
 801e2c4:	2322      	movs	r3, #34	; 0x22
 801e2c6:	461a      	mov	r2, r3
 801e2c8:	2100      	movs	r1, #0
 801e2ca:	f006 fcd7 	bl	8024c7c <memset>
 801e2ce:	f107 0314 	add.w	r3, r7, #20
 801e2d2:	223a      	movs	r2, #58	; 0x3a
 801e2d4:	701a      	strb	r2, [r3, #0]
 801e2d6:	f107 0314 	add.w	r3, r7, #20
 801e2da:	2201      	movs	r2, #1
 801e2dc:	705a      	strb	r2, [r3, #1]
 801e2de:	f107 0314 	add.w	r3, r7, #20
 801e2e2:	220a      	movs	r2, #10
 801e2e4:	709a      	strb	r2, [r3, #2]
 801e2e6:	f107 0314 	add.w	r3, r7, #20
 801e2ea:	220a      	movs	r2, #10
 801e2ec:	70da      	strb	r2, [r3, #3]
 801e2ee:	f107 0314 	add.w	r3, r7, #20
 801e2f2:	222c      	movs	r2, #44	; 0x2c
 801e2f4:	711a      	strb	r2, [r3, #4]
 801e2f6:	f107 0314 	add.w	r3, r7, #20
 801e2fa:	220c      	movs	r2, #12
 801e2fc:	715a      	strb	r2, [r3, #5]
 801e2fe:	f107 0314 	add.w	r3, r7, #20
 801e302:	222e      	movs	r2, #46	; 0x2e
 801e304:	719a      	strb	r2, [r3, #6]
 801e306:	f107 0314 	add.w	r3, r7, #20
 801e30a:	220b      	movs	r2, #11
 801e30c:	71da      	strb	r2, [r3, #7]
 801e30e:	f107 0314 	add.w	r3, r7, #20
 801e312:	225b      	movs	r2, #91	; 0x5b
 801e314:	721a      	strb	r2, [r3, #8]
 801e316:	f107 0314 	add.w	r3, r7, #20
 801e31a:	220d      	movs	r2, #13
 801e31c:	725a      	strb	r2, [r3, #9]
 801e31e:	f107 0314 	add.w	r3, r7, #20
 801e322:	225d      	movs	r2, #93	; 0x5d
 801e324:	729a      	strb	r2, [r3, #10]
 801e326:	f107 0314 	add.w	r3, r7, #20
 801e32a:	220e      	movs	r2, #14
 801e32c:	72da      	strb	r2, [r3, #11]
 801e32e:	f107 0314 	add.w	r3, r7, #20
 801e332:	227c      	movs	r2, #124	; 0x7c
 801e334:	731a      	strb	r2, [r3, #12]
 801e336:	f107 0314 	add.w	r3, r7, #20
 801e33a:	2215      	movs	r2, #21
 801e33c:	735a      	strb	r2, [r3, #13]
 801e33e:	f107 0314 	add.w	r3, r7, #20
 801e342:	2226      	movs	r2, #38	; 0x26
 801e344:	739a      	strb	r2, [r3, #14]
 801e346:	f107 0314 	add.w	r3, r7, #20
 801e34a:	2216      	movs	r2, #22
 801e34c:	73da      	strb	r2, [r3, #15]
 801e34e:	f107 0314 	add.w	r3, r7, #20
 801e352:	222b      	movs	r2, #43	; 0x2b
 801e354:	741a      	strb	r2, [r3, #16]
 801e356:	f107 0314 	add.w	r3, r7, #20
 801e35a:	221f      	movs	r2, #31
 801e35c:	745a      	strb	r2, [r3, #17]
 801e35e:	f107 0314 	add.w	r3, r7, #20
 801e362:	222d      	movs	r2, #45	; 0x2d
 801e364:	749a      	strb	r2, [r3, #18]
 801e366:	f107 0314 	add.w	r3, r7, #20
 801e36a:	2220      	movs	r2, #32
 801e36c:	74da      	strb	r2, [r3, #19]
 801e36e:	f107 0314 	add.w	r3, r7, #20
 801e372:	222a      	movs	r2, #42	; 0x2a
 801e374:	751a      	strb	r2, [r3, #20]
 801e376:	f107 0314 	add.w	r3, r7, #20
 801e37a:	2221      	movs	r2, #33	; 0x21
 801e37c:	755a      	strb	r2, [r3, #21]
 801e37e:	f107 0314 	add.w	r3, r7, #20
 801e382:	222f      	movs	r2, #47	; 0x2f
 801e384:	759a      	strb	r2, [r3, #22]
 801e386:	f107 0314 	add.w	r3, r7, #20
 801e38a:	2222      	movs	r2, #34	; 0x22
 801e38c:	75da      	strb	r2, [r3, #23]
 801e38e:	f107 0314 	add.w	r3, r7, #20
 801e392:	225e      	movs	r2, #94	; 0x5e
 801e394:	761a      	strb	r2, [r3, #24]
 801e396:	f107 0314 	add.w	r3, r7, #20
 801e39a:	2223      	movs	r2, #35	; 0x23
 801e39c:	765a      	strb	r2, [r3, #25]
 801e39e:	f107 0314 	add.w	r3, r7, #20
 801e3a2:	2225      	movs	r2, #37	; 0x25
 801e3a4:	769a      	strb	r2, [r3, #26]
 801e3a6:	f107 0314 	add.w	r3, r7, #20
 801e3aa:	2224      	movs	r2, #36	; 0x24
 801e3ac:	76da      	strb	r2, [r3, #27]
 801e3ae:	f107 0314 	add.w	r3, r7, #20
 801e3b2:	2228      	movs	r2, #40	; 0x28
 801e3b4:	771a      	strb	r2, [r3, #28]
 801e3b6:	f107 0314 	add.w	r3, r7, #20
 801e3ba:	2226      	movs	r2, #38	; 0x26
 801e3bc:	775a      	strb	r2, [r3, #29]
 801e3be:	f107 0314 	add.w	r3, r7, #20
 801e3c2:	2229      	movs	r2, #41	; 0x29
 801e3c4:	779a      	strb	r2, [r3, #30]
 801e3c6:	f107 0314 	add.w	r3, r7, #20
 801e3ca:	2227      	movs	r2, #39	; 0x27
 801e3cc:	77da      	strb	r2, [r3, #31]
 801e3ce:	f107 0314 	add.w	r3, r7, #20
 801e3d2:	2225      	movs	r2, #37	; 0x25
 801e3d4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e3d8:	f107 030c 	add.w	r3, r7, #12
 801e3dc:	f107 0214 	add.w	r2, r7, #20
 801e3e0:	601a      	str	r2, [r3, #0]
 801e3e2:	f107 030c 	add.w	r3, r7, #12
 801e3e6:	2211      	movs	r2, #17
 801e3e8:	605a      	str	r2, [r3, #4]
 801e3ea:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e3ee:	4618      	mov	r0, r3
 801e3f0:	f7e3 fcac 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801e3f4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801e3f8:	f107 020c 	add.w	r2, r7, #12
 801e3fc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e400:	9300      	str	r3, [sp, #0]
 801e402:	460b      	mov	r3, r1
 801e404:	ca06      	ldmia	r2, {r1, r2}
 801e406:	4885      	ldr	r0, [pc, #532]	; (801e61c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e408:	f7e3 fcb8 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e40c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e410:	4618      	mov	r0, r3
 801e412:	f7e3 fca7 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801e416:	2305      	movs	r3, #5
 801e418:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801e41c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801e420:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e424:	497e      	ldr	r1, [pc, #504]	; (801e620 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801e426:	4618      	mov	r0, r3
 801e428:	f7e2 fe66 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801e42c:	2306      	movs	r3, #6
 801e42e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801e432:	f207 1263 	addw	r2, r7, #355	; 0x163
 801e436:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e43a:	331c      	adds	r3, #28
 801e43c:	4979      	ldr	r1, [pc, #484]	; (801e624 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801e43e:	4618      	mov	r0, r3
 801e440:	f7e2 fe82 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801e444:	2307      	movs	r3, #7
 801e446:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801e44a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801e44e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e452:	3338      	adds	r3, #56	; 0x38
 801e454:	4974      	ldr	r1, [pc, #464]	; (801e628 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801e456:	4618      	mov	r0, r3
 801e458:	f7e2 fe76 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801e45c:	2308      	movs	r3, #8
 801e45e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801e462:	f207 1265 	addw	r2, r7, #357	; 0x165
 801e466:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e46a:	3354      	adds	r3, #84	; 0x54
 801e46c:	496f      	ldr	r1, [pc, #444]	; (801e62c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801e46e:	4618      	mov	r0, r3
 801e470:	f7e2 fe42 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801e474:	2309      	movs	r3, #9
 801e476:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801e47a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801e47e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e482:	3370      	adds	r3, #112	; 0x70
 801e484:	496a      	ldr	r1, [pc, #424]	; (801e630 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801e486:	4618      	mov	r0, r3
 801e488:	f7e2 fe86 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801e48c:	2310      	movs	r3, #16
 801e48e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801e492:	f207 1267 	addw	r2, r7, #359	; 0x167
 801e496:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e49a:	338c      	adds	r3, #140	; 0x8c
 801e49c:	4965      	ldr	r1, [pc, #404]	; (801e634 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801e49e:	4618      	mov	r0, r3
 801e4a0:	f7e2 fea2 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801e4a4:	2311      	movs	r3, #17
 801e4a6:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801e4aa:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801e4ae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e4b2:	33a8      	adds	r3, #168	; 0xa8
 801e4b4:	4960      	ldr	r1, [pc, #384]	; (801e638 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801e4b6:	4618      	mov	r0, r3
 801e4b8:	f7e2 fe6e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801e4bc:	2312      	movs	r3, #18
 801e4be:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801e4c2:	f207 1269 	addw	r2, r7, #361	; 0x169
 801e4c6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e4ca:	33c4      	adds	r3, #196	; 0xc4
 801e4cc:	495b      	ldr	r1, [pc, #364]	; (801e63c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801e4ce:	4618      	mov	r0, r3
 801e4d0:	f7e2 fe12 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801e4d4:	2313      	movs	r3, #19
 801e4d6:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801e4da:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801e4de:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e4e2:	33e0      	adds	r3, #224	; 0xe0
 801e4e4:	4956      	ldr	r1, [pc, #344]	; (801e640 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801e4e6:	4618      	mov	r0, r3
 801e4e8:	f7e2 fe2e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801e4ec:	2314      	movs	r3, #20
 801e4ee:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801e4f2:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801e4f6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e4fa:	33fc      	adds	r3, #252	; 0xfc
 801e4fc:	4951      	ldr	r1, [pc, #324]	; (801e644 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801e4fe:	4618      	mov	r0, r3
 801e500:	f7e2 fe9a 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801e504:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e508:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801e50c:	601a      	str	r2, [r3, #0]
 801e50e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e512:	220a      	movs	r2, #10
 801e514:	605a      	str	r2, [r3, #4]
 801e516:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e51a:	4618      	mov	r0, r3
 801e51c:	f7e3 fcbb 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801e520:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801e524:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801e528:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e52c:	9300      	str	r3, [sp, #0]
 801e52e:	460b      	mov	r3, r1
 801e530:	ca06      	ldmia	r2, {r1, r2}
 801e532:	4845      	ldr	r0, [pc, #276]	; (801e648 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e534:	f7e3 fcc7 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801e538:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e53c:	4618      	mov	r0, r3
 801e53e:	f7e3 fcb6 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801e542:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801e546:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801e54a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e54e:	429c      	cmp	r4, r3
 801e550:	d004      	beq.n	801e55c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801e552:	3c1c      	subs	r4, #28
 801e554:	4620      	mov	r0, r4
 801e556:	f7e2 fdc2 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801e55a:	e7f6      	b.n	801e54a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801e55c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e560:	2200      	movs	r2, #0
 801e562:	601a      	str	r2, [r3, #0]
 801e564:	605a      	str	r2, [r3, #4]
 801e566:	609a      	str	r2, [r3, #8]
 801e568:	233c      	movs	r3, #60	; 0x3c
 801e56a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801e56e:	231b      	movs	r3, #27
 801e570:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801e574:	231c      	movs	r3, #28
 801e576:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801e57a:	233e      	movs	r3, #62	; 0x3e
 801e57c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801e580:	2319      	movs	r3, #25
 801e582:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801e586:	231a      	movs	r3, #26
 801e588:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801e58c:	233d      	movs	r3, #61	; 0x3d
 801e58e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801e592:	2318      	movs	r3, #24
 801e594:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801e598:	231d      	movs	r3, #29
 801e59a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801e59e:	2321      	movs	r3, #33	; 0x21
 801e5a0:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801e5a4:	2317      	movs	r3, #23
 801e5a6:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801e5aa:	231e      	movs	r3, #30
 801e5ac:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801e5b0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e5b4:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801e5b8:	2304      	movs	r3, #4
 801e5ba:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801e5be:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e5c2:	4618      	mov	r0, r3
 801e5c4:	f7e3 fcaf 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801e5c8:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801e5cc:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e5d0:	9300      	str	r3, [sp, #0]
 801e5d2:	4613      	mov	r3, r2
 801e5d4:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801e5d8:	ca06      	ldmia	r2, {r1, r2}
 801e5da:	481c      	ldr	r0, [pc, #112]	; (801e64c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e5dc:	f7e3 fcbb 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e5e0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e5e4:	4618      	mov	r0, r3
 801e5e6:	f7e3 fcaa 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801e5ea:	1d3b      	adds	r3, r7, #4
 801e5ec:	681b      	ldr	r3, [r3, #0]
 801e5ee:	2b00      	cmp	r3, #0
 801e5f0:	d10e      	bne.n	801e610 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e5f2:	463b      	mov	r3, r7
 801e5f4:	681b      	ldr	r3, [r3, #0]
 801e5f6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e5fa:	4293      	cmp	r3, r2
 801e5fc:	d108      	bne.n	801e610 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e5fe:	4813      	ldr	r0, [pc, #76]	; (801e64c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e600:	f7eb f918 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801e604:	4810      	ldr	r0, [pc, #64]	; (801e648 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e606:	f7eb f922 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801e60a:	4804      	ldr	r0, [pc, #16]	; (801e61c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e60c:	f7eb f92c 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801e610:	bf00      	nop
 801e612:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801e616:	46bd      	mov	sp, r7
 801e618:	bd90      	pop	{r4, r7, pc}
 801e61a:	bf00      	nop
 801e61c:	20000628 	.word	0x20000628
 801e620:	08029e30 	.word	0x08029e30
 801e624:	08029e38 	.word	0x08029e38
 801e628:	08029e40 	.word	0x08029e40
 801e62c:	08029e48 	.word	0x08029e48
 801e630:	08029e50 	.word	0x08029e50
 801e634:	08029e58 	.word	0x08029e58
 801e638:	08029e5c 	.word	0x08029e5c
 801e63c:	08029e64 	.word	0x08029e64
 801e640:	08029e6c 	.word	0x08029e6c
 801e644:	08029e74 	.word	0x08029e74
 801e648:	20000640 	.word	0x20000640
 801e64c:	20000658 	.word	0x20000658

0801e650 <_GLOBAL__sub_I_huart1>:
 801e650:	b580      	push	{r7, lr}
 801e652:	af00      	add	r7, sp, #0
 801e654:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e658:	2001      	movs	r0, #1
 801e65a:	f7ff fe1d 	bl	801e298 <_Z41__static_initialization_and_destruction_0ii>
 801e65e:	bd80      	pop	{r7, pc}

0801e660 <_GLOBAL__sub_D_huart1>:
 801e660:	b580      	push	{r7, lr}
 801e662:	af00      	add	r7, sp, #0
 801e664:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e668:	2000      	movs	r0, #0
 801e66a:	f7ff fe15 	bl	801e298 <_Z41__static_initialization_and_destruction_0ii>
 801e66e:	bd80      	pop	{r7, pc}

0801e670 <_Z11my_main_runv>:
#include "my_main.h"

// main function called after setup from CUBEMX
void my_main_run()
{
 801e670:	b580      	push	{r7, lr}
 801e672:	b082      	sub	sp, #8
 801e674:	af00      	add	r7, sp, #0
	Program *P = Parser::parse_program();
 801e676:	f7f5 fe49 	bl	801430c <_ZN6Parser13parse_programEv>
 801e67a:	6078      	str	r0, [r7, #4]
	Transmitter::start_listening();
 801e67c:	f7fa f976 	bl	801896c <_ZN11Transmitter15start_listeningEv>
	Executor::get_instance().execute(P);
 801e680:	f7e2 fe16 	bl	80012b0 <_ZN8Executor12get_instanceEv>
 801e684:	4603      	mov	r3, r0
 801e686:	6879      	ldr	r1, [r7, #4]
 801e688:	4618      	mov	r0, r3
 801e68a:	f7e2 fffd 	bl	8001688 <_ZN8Executor7executeEP7Program>

	for (;;)
 801e68e:	e7fe      	b.n	801e68e <_Z11my_main_runv+0x1e>

0801e690 <_Z41__static_initialization_and_destruction_0ii>:
	{

	}
}
 801e690:	b590      	push	{r4, r7, lr}
 801e692:	b0e7      	sub	sp, #412	; 0x19c
 801e694:	af02      	add	r7, sp, #8
 801e696:	1d3b      	adds	r3, r7, #4
 801e698:	6018      	str	r0, [r3, #0]
 801e69a:	463b      	mov	r3, r7
 801e69c:	6019      	str	r1, [r3, #0]
 801e69e:	1d3b      	adds	r3, r7, #4
 801e6a0:	681b      	ldr	r3, [r3, #0]
 801e6a2:	2b01      	cmp	r3, #1
 801e6a4:	f040 819d 	bne.w	801e9e2 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801e6a8:	463b      	mov	r3, r7
 801e6aa:	681b      	ldr	r3, [r3, #0]
 801e6ac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e6b0:	4293      	cmp	r3, r2
 801e6b2:	f040 8196 	bne.w	801e9e2 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801e6b6:	f107 0314 	add.w	r3, r7, #20
 801e6ba:	4618      	mov	r0, r3
 801e6bc:	2322      	movs	r3, #34	; 0x22
 801e6be:	461a      	mov	r2, r3
 801e6c0:	2100      	movs	r1, #0
 801e6c2:	f006 fadb 	bl	8024c7c <memset>
 801e6c6:	f107 0314 	add.w	r3, r7, #20
 801e6ca:	223a      	movs	r2, #58	; 0x3a
 801e6cc:	701a      	strb	r2, [r3, #0]
 801e6ce:	f107 0314 	add.w	r3, r7, #20
 801e6d2:	2201      	movs	r2, #1
 801e6d4:	705a      	strb	r2, [r3, #1]
 801e6d6:	f107 0314 	add.w	r3, r7, #20
 801e6da:	220a      	movs	r2, #10
 801e6dc:	709a      	strb	r2, [r3, #2]
 801e6de:	f107 0314 	add.w	r3, r7, #20
 801e6e2:	220a      	movs	r2, #10
 801e6e4:	70da      	strb	r2, [r3, #3]
 801e6e6:	f107 0314 	add.w	r3, r7, #20
 801e6ea:	222c      	movs	r2, #44	; 0x2c
 801e6ec:	711a      	strb	r2, [r3, #4]
 801e6ee:	f107 0314 	add.w	r3, r7, #20
 801e6f2:	220c      	movs	r2, #12
 801e6f4:	715a      	strb	r2, [r3, #5]
 801e6f6:	f107 0314 	add.w	r3, r7, #20
 801e6fa:	222e      	movs	r2, #46	; 0x2e
 801e6fc:	719a      	strb	r2, [r3, #6]
 801e6fe:	f107 0314 	add.w	r3, r7, #20
 801e702:	220b      	movs	r2, #11
 801e704:	71da      	strb	r2, [r3, #7]
 801e706:	f107 0314 	add.w	r3, r7, #20
 801e70a:	225b      	movs	r2, #91	; 0x5b
 801e70c:	721a      	strb	r2, [r3, #8]
 801e70e:	f107 0314 	add.w	r3, r7, #20
 801e712:	220d      	movs	r2, #13
 801e714:	725a      	strb	r2, [r3, #9]
 801e716:	f107 0314 	add.w	r3, r7, #20
 801e71a:	225d      	movs	r2, #93	; 0x5d
 801e71c:	729a      	strb	r2, [r3, #10]
 801e71e:	f107 0314 	add.w	r3, r7, #20
 801e722:	220e      	movs	r2, #14
 801e724:	72da      	strb	r2, [r3, #11]
 801e726:	f107 0314 	add.w	r3, r7, #20
 801e72a:	227c      	movs	r2, #124	; 0x7c
 801e72c:	731a      	strb	r2, [r3, #12]
 801e72e:	f107 0314 	add.w	r3, r7, #20
 801e732:	2215      	movs	r2, #21
 801e734:	735a      	strb	r2, [r3, #13]
 801e736:	f107 0314 	add.w	r3, r7, #20
 801e73a:	2226      	movs	r2, #38	; 0x26
 801e73c:	739a      	strb	r2, [r3, #14]
 801e73e:	f107 0314 	add.w	r3, r7, #20
 801e742:	2216      	movs	r2, #22
 801e744:	73da      	strb	r2, [r3, #15]
 801e746:	f107 0314 	add.w	r3, r7, #20
 801e74a:	222b      	movs	r2, #43	; 0x2b
 801e74c:	741a      	strb	r2, [r3, #16]
 801e74e:	f107 0314 	add.w	r3, r7, #20
 801e752:	221f      	movs	r2, #31
 801e754:	745a      	strb	r2, [r3, #17]
 801e756:	f107 0314 	add.w	r3, r7, #20
 801e75a:	222d      	movs	r2, #45	; 0x2d
 801e75c:	749a      	strb	r2, [r3, #18]
 801e75e:	f107 0314 	add.w	r3, r7, #20
 801e762:	2220      	movs	r2, #32
 801e764:	74da      	strb	r2, [r3, #19]
 801e766:	f107 0314 	add.w	r3, r7, #20
 801e76a:	222a      	movs	r2, #42	; 0x2a
 801e76c:	751a      	strb	r2, [r3, #20]
 801e76e:	f107 0314 	add.w	r3, r7, #20
 801e772:	2221      	movs	r2, #33	; 0x21
 801e774:	755a      	strb	r2, [r3, #21]
 801e776:	f107 0314 	add.w	r3, r7, #20
 801e77a:	222f      	movs	r2, #47	; 0x2f
 801e77c:	759a      	strb	r2, [r3, #22]
 801e77e:	f107 0314 	add.w	r3, r7, #20
 801e782:	2222      	movs	r2, #34	; 0x22
 801e784:	75da      	strb	r2, [r3, #23]
 801e786:	f107 0314 	add.w	r3, r7, #20
 801e78a:	225e      	movs	r2, #94	; 0x5e
 801e78c:	761a      	strb	r2, [r3, #24]
 801e78e:	f107 0314 	add.w	r3, r7, #20
 801e792:	2223      	movs	r2, #35	; 0x23
 801e794:	765a      	strb	r2, [r3, #25]
 801e796:	f107 0314 	add.w	r3, r7, #20
 801e79a:	2225      	movs	r2, #37	; 0x25
 801e79c:	769a      	strb	r2, [r3, #26]
 801e79e:	f107 0314 	add.w	r3, r7, #20
 801e7a2:	2224      	movs	r2, #36	; 0x24
 801e7a4:	76da      	strb	r2, [r3, #27]
 801e7a6:	f107 0314 	add.w	r3, r7, #20
 801e7aa:	2228      	movs	r2, #40	; 0x28
 801e7ac:	771a      	strb	r2, [r3, #28]
 801e7ae:	f107 0314 	add.w	r3, r7, #20
 801e7b2:	2226      	movs	r2, #38	; 0x26
 801e7b4:	775a      	strb	r2, [r3, #29]
 801e7b6:	f107 0314 	add.w	r3, r7, #20
 801e7ba:	2229      	movs	r2, #41	; 0x29
 801e7bc:	779a      	strb	r2, [r3, #30]
 801e7be:	f107 0314 	add.w	r3, r7, #20
 801e7c2:	2227      	movs	r2, #39	; 0x27
 801e7c4:	77da      	strb	r2, [r3, #31]
 801e7c6:	f107 0314 	add.w	r3, r7, #20
 801e7ca:	2225      	movs	r2, #37	; 0x25
 801e7cc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801e7d0:	f107 030c 	add.w	r3, r7, #12
 801e7d4:	f107 0214 	add.w	r2, r7, #20
 801e7d8:	601a      	str	r2, [r3, #0]
 801e7da:	f107 030c 	add.w	r3, r7, #12
 801e7de:	2211      	movs	r2, #17
 801e7e0:	605a      	str	r2, [r3, #4]
 801e7e2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e7e6:	4618      	mov	r0, r3
 801e7e8:	f7e3 fab0 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801e7ec:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801e7f0:	f107 020c 	add.w	r2, r7, #12
 801e7f4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e7f8:	9300      	str	r3, [sp, #0]
 801e7fa:	460b      	mov	r3, r1
 801e7fc:	ca06      	ldmia	r2, {r1, r2}
 801e7fe:	4885      	ldr	r0, [pc, #532]	; (801ea14 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801e800:	f7e3 fabc 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e804:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801e808:	4618      	mov	r0, r3
 801e80a:	f7e3 faab 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801e80e:	2305      	movs	r3, #5
 801e810:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801e814:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801e818:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e81c:	497e      	ldr	r1, [pc, #504]	; (801ea18 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801e81e:	4618      	mov	r0, r3
 801e820:	f7e2 fc6a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801e824:	2306      	movs	r3, #6
 801e826:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801e82a:	f207 1263 	addw	r2, r7, #355	; 0x163
 801e82e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e832:	331c      	adds	r3, #28
 801e834:	4979      	ldr	r1, [pc, #484]	; (801ea1c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801e836:	4618      	mov	r0, r3
 801e838:	f7e2 fc86 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801e83c:	2307      	movs	r3, #7
 801e83e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801e842:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801e846:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e84a:	3338      	adds	r3, #56	; 0x38
 801e84c:	4974      	ldr	r1, [pc, #464]	; (801ea20 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801e84e:	4618      	mov	r0, r3
 801e850:	f7e2 fc7a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801e854:	2308      	movs	r3, #8
 801e856:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801e85a:	f207 1265 	addw	r2, r7, #357	; 0x165
 801e85e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e862:	3354      	adds	r3, #84	; 0x54
 801e864:	496f      	ldr	r1, [pc, #444]	; (801ea24 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801e866:	4618      	mov	r0, r3
 801e868:	f7e2 fc46 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801e86c:	2309      	movs	r3, #9
 801e86e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801e872:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801e876:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e87a:	3370      	adds	r3, #112	; 0x70
 801e87c:	496a      	ldr	r1, [pc, #424]	; (801ea28 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801e87e:	4618      	mov	r0, r3
 801e880:	f7e2 fc8a 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801e884:	2310      	movs	r3, #16
 801e886:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801e88a:	f207 1267 	addw	r2, r7, #359	; 0x167
 801e88e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e892:	338c      	adds	r3, #140	; 0x8c
 801e894:	4965      	ldr	r1, [pc, #404]	; (801ea2c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801e896:	4618      	mov	r0, r3
 801e898:	f7e2 fca6 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801e89c:	2311      	movs	r3, #17
 801e89e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801e8a2:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801e8a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e8aa:	33a8      	adds	r3, #168	; 0xa8
 801e8ac:	4960      	ldr	r1, [pc, #384]	; (801ea30 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801e8ae:	4618      	mov	r0, r3
 801e8b0:	f7e2 fc72 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801e8b4:	2312      	movs	r3, #18
 801e8b6:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801e8ba:	f207 1269 	addw	r2, r7, #361	; 0x169
 801e8be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e8c2:	33c4      	adds	r3, #196	; 0xc4
 801e8c4:	495b      	ldr	r1, [pc, #364]	; (801ea34 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801e8c6:	4618      	mov	r0, r3
 801e8c8:	f7e2 fc16 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801e8cc:	2313      	movs	r3, #19
 801e8ce:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801e8d2:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801e8d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e8da:	33e0      	adds	r3, #224	; 0xe0
 801e8dc:	4956      	ldr	r1, [pc, #344]	; (801ea38 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801e8de:	4618      	mov	r0, r3
 801e8e0:	f7e2 fc32 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801e8e4:	2314      	movs	r3, #20
 801e8e6:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801e8ea:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801e8ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e8f2:	33fc      	adds	r3, #252	; 0xfc
 801e8f4:	4951      	ldr	r1, [pc, #324]	; (801ea3c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801e8f6:	4618      	mov	r0, r3
 801e8f8:	f7e2 fc9e 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801e8fc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e900:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801e904:	601a      	str	r2, [r3, #0]
 801e906:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801e90a:	220a      	movs	r2, #10
 801e90c:	605a      	str	r2, [r3, #4]
 801e90e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e912:	4618      	mov	r0, r3
 801e914:	f7e3 fabf 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801e918:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801e91c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801e920:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e924:	9300      	str	r3, [sp, #0]
 801e926:	460b      	mov	r3, r1
 801e928:	ca06      	ldmia	r2, {r1, r2}
 801e92a:	4845      	ldr	r0, [pc, #276]	; (801ea40 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e92c:	f7e3 facb 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801e930:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801e934:	4618      	mov	r0, r3
 801e936:	f7e3 faba 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801e93a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801e93e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801e942:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801e946:	429c      	cmp	r4, r3
 801e948:	d004      	beq.n	801e954 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801e94a:	3c1c      	subs	r4, #28
 801e94c:	4620      	mov	r0, r4
 801e94e:	f7e2 fbc6 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801e952:	e7f6      	b.n	801e942 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801e954:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e958:	2200      	movs	r2, #0
 801e95a:	601a      	str	r2, [r3, #0]
 801e95c:	605a      	str	r2, [r3, #4]
 801e95e:	609a      	str	r2, [r3, #8]
 801e960:	233c      	movs	r3, #60	; 0x3c
 801e962:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801e966:	231b      	movs	r3, #27
 801e968:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801e96c:	231c      	movs	r3, #28
 801e96e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801e972:	233e      	movs	r3, #62	; 0x3e
 801e974:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801e978:	2319      	movs	r3, #25
 801e97a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801e97e:	231a      	movs	r3, #26
 801e980:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801e984:	233d      	movs	r3, #61	; 0x3d
 801e986:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801e98a:	2318      	movs	r3, #24
 801e98c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801e990:	231d      	movs	r3, #29
 801e992:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801e996:	2321      	movs	r3, #33	; 0x21
 801e998:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801e99c:	2317      	movs	r3, #23
 801e99e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801e9a2:	231e      	movs	r3, #30
 801e9a4:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801e9a8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801e9ac:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801e9b0:	2304      	movs	r3, #4
 801e9b2:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801e9b6:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e9ba:	4618      	mov	r0, r3
 801e9bc:	f7e3 fab3 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801e9c0:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801e9c4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e9c8:	9300      	str	r3, [sp, #0]
 801e9ca:	4613      	mov	r3, r2
 801e9cc:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801e9d0:	ca06      	ldmia	r2, {r1, r2}
 801e9d2:	481c      	ldr	r0, [pc, #112]	; (801ea44 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e9d4:	f7e3 fabf 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801e9d8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801e9dc:	4618      	mov	r0, r3
 801e9de:	f7e3 faae 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801e9e2:	1d3b      	adds	r3, r7, #4
 801e9e4:	681b      	ldr	r3, [r3, #0]
 801e9e6:	2b00      	cmp	r3, #0
 801e9e8:	d10e      	bne.n	801ea08 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e9ea:	463b      	mov	r3, r7
 801e9ec:	681b      	ldr	r3, [r3, #0]
 801e9ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e9f2:	4293      	cmp	r3, r2
 801e9f4:	d108      	bne.n	801ea08 <_Z41__static_initialization_and_destruction_0ii+0x378>
 801e9f6:	4813      	ldr	r0, [pc, #76]	; (801ea44 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801e9f8:	f7ea ff1c 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801e9fc:	4810      	ldr	r0, [pc, #64]	; (801ea40 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801e9fe:	f7ea ff26 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801ea02:	4804      	ldr	r0, [pc, #16]	; (801ea14 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801ea04:	f7ea ff30 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801ea08:	bf00      	nop
 801ea0a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801ea0e:	46bd      	mov	sp, r7
 801ea10:	bd90      	pop	{r4, r7, pc}
 801ea12:	bf00      	nop
 801ea14:	200006f4 	.word	0x200006f4
 801ea18:	08029ea4 	.word	0x08029ea4
 801ea1c:	08029eac 	.word	0x08029eac
 801ea20:	08029eb4 	.word	0x08029eb4
 801ea24:	08029ebc 	.word	0x08029ebc
 801ea28:	08029ec4 	.word	0x08029ec4
 801ea2c:	08029ecc 	.word	0x08029ecc
 801ea30:	08029ed0 	.word	0x08029ed0
 801ea34:	08029ed8 	.word	0x08029ed8
 801ea38:	08029ee0 	.word	0x08029ee0
 801ea3c:	08029ee8 	.word	0x08029ee8
 801ea40:	2000070c 	.word	0x2000070c
 801ea44:	20000724 	.word	0x20000724

0801ea48 <_GLOBAL__sub_I__Z11my_main_runv>:
 801ea48:	b580      	push	{r7, lr}
 801ea4a:	af00      	add	r7, sp, #0
 801ea4c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801ea50:	2001      	movs	r0, #1
 801ea52:	f7ff fe1d 	bl	801e690 <_Z41__static_initialization_and_destruction_0ii>
 801ea56:	bd80      	pop	{r7, pc}

0801ea58 <_GLOBAL__sub_D__Z11my_main_runv>:
 801ea58:	b580      	push	{r7, lr}
 801ea5a:	af00      	add	r7, sp, #0
 801ea5c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801ea60:	2000      	movs	r0, #0
 801ea62:	f7ff fe15 	bl	801e690 <_Z41__static_initialization_and_destruction_0ii>
 801ea66:	bd80      	pop	{r7, pc}

0801ea68 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 801ea68:	b480      	push	{r7}
 801ea6a:	b083      	sub	sp, #12
 801ea6c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 801ea6e:	4b0f      	ldr	r3, [pc, #60]	; (801eaac <HAL_MspInit+0x44>)
 801ea70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ea72:	4a0e      	ldr	r2, [pc, #56]	; (801eaac <HAL_MspInit+0x44>)
 801ea74:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801ea78:	6413      	str	r3, [r2, #64]	; 0x40
 801ea7a:	4b0c      	ldr	r3, [pc, #48]	; (801eaac <HAL_MspInit+0x44>)
 801ea7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ea7e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801ea82:	607b      	str	r3, [r7, #4]
 801ea84:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 801ea86:	4b09      	ldr	r3, [pc, #36]	; (801eaac <HAL_MspInit+0x44>)
 801ea88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ea8a:	4a08      	ldr	r2, [pc, #32]	; (801eaac <HAL_MspInit+0x44>)
 801ea8c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801ea90:	6453      	str	r3, [r2, #68]	; 0x44
 801ea92:	4b06      	ldr	r3, [pc, #24]	; (801eaac <HAL_MspInit+0x44>)
 801ea94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ea96:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801ea9a:	603b      	str	r3, [r7, #0]
 801ea9c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 801ea9e:	bf00      	nop
 801eaa0:	370c      	adds	r7, #12
 801eaa2:	46bd      	mov	sp, r7
 801eaa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eaa8:	4770      	bx	lr
 801eaaa:	bf00      	nop
 801eaac:	40023800 	.word	0x40023800

0801eab0 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 801eab0:	b580      	push	{r7, lr}
 801eab2:	b08a      	sub	sp, #40	; 0x28
 801eab4:	af00      	add	r7, sp, #0
 801eab6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 801eab8:	f107 0314 	add.w	r3, r7, #20
 801eabc:	2200      	movs	r2, #0
 801eabe:	601a      	str	r2, [r3, #0]
 801eac0:	605a      	str	r2, [r3, #4]
 801eac2:	609a      	str	r2, [r3, #8]
 801eac4:	60da      	str	r2, [r3, #12]
 801eac6:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 801eac8:	687b      	ldr	r3, [r7, #4]
 801eaca:	681b      	ldr	r3, [r3, #0]
 801eacc:	4a1b      	ldr	r2, [pc, #108]	; (801eb3c <HAL_UART_MspInit+0x8c>)
 801eace:	4293      	cmp	r3, r2
 801ead0:	d130      	bne.n	801eb34 <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 801ead2:	4b1b      	ldr	r3, [pc, #108]	; (801eb40 <HAL_UART_MspInit+0x90>)
 801ead4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ead6:	4a1a      	ldr	r2, [pc, #104]	; (801eb40 <HAL_UART_MspInit+0x90>)
 801ead8:	f043 0310 	orr.w	r3, r3, #16
 801eadc:	6453      	str	r3, [r2, #68]	; 0x44
 801eade:	4b18      	ldr	r3, [pc, #96]	; (801eb40 <HAL_UART_MspInit+0x90>)
 801eae0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801eae2:	f003 0310 	and.w	r3, r3, #16
 801eae6:	613b      	str	r3, [r7, #16]
 801eae8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 801eaea:	4b15      	ldr	r3, [pc, #84]	; (801eb40 <HAL_UART_MspInit+0x90>)
 801eaec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801eaee:	4a14      	ldr	r2, [pc, #80]	; (801eb40 <HAL_UART_MspInit+0x90>)
 801eaf0:	f043 0301 	orr.w	r3, r3, #1
 801eaf4:	6313      	str	r3, [r2, #48]	; 0x30
 801eaf6:	4b12      	ldr	r3, [pc, #72]	; (801eb40 <HAL_UART_MspInit+0x90>)
 801eaf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801eafa:	f003 0301 	and.w	r3, r3, #1
 801eafe:	60fb      	str	r3, [r7, #12]
 801eb00:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 801eb02:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 801eb06:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 801eb08:	2302      	movs	r3, #2
 801eb0a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 801eb0c:	2300      	movs	r3, #0
 801eb0e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 801eb10:	2303      	movs	r3, #3
 801eb12:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 801eb14:	2307      	movs	r3, #7
 801eb16:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 801eb18:	f107 0314 	add.w	r3, r7, #20
 801eb1c:	4619      	mov	r1, r3
 801eb1e:	4809      	ldr	r0, [pc, #36]	; (801eb44 <HAL_UART_MspInit+0x94>)
 801eb20:	f001 ffdc 	bl	8020adc <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 801eb24:	2200      	movs	r2, #0
 801eb26:	2100      	movs	r1, #0
 801eb28:	2025      	movs	r0, #37	; 0x25
 801eb2a:	f001 ff0e 	bl	802094a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 801eb2e:	2025      	movs	r0, #37	; 0x25
 801eb30:	f001 ff27 	bl	8020982 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 801eb34:	bf00      	nop
 801eb36:	3728      	adds	r7, #40	; 0x28
 801eb38:	46bd      	mov	sp, r7
 801eb3a:	bd80      	pop	{r7, pc}
 801eb3c:	40011000 	.word	0x40011000
 801eb40:	40023800 	.word	0x40023800
 801eb44:	40020000 	.word	0x40020000

0801eb48 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 801eb48:	b480      	push	{r7}
 801eb4a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 801eb4c:	e7fe      	b.n	801eb4c <NMI_Handler+0x4>

0801eb4e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 801eb4e:	b480      	push	{r7}
 801eb50:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 801eb52:	e7fe      	b.n	801eb52 <HardFault_Handler+0x4>

0801eb54 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 801eb54:	b480      	push	{r7}
 801eb56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 801eb58:	e7fe      	b.n	801eb58 <MemManage_Handler+0x4>

0801eb5a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 801eb5a:	b480      	push	{r7}
 801eb5c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 801eb5e:	e7fe      	b.n	801eb5e <BusFault_Handler+0x4>

0801eb60 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 801eb60:	b480      	push	{r7}
 801eb62:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 801eb64:	e7fe      	b.n	801eb64 <UsageFault_Handler+0x4>

0801eb66 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 801eb66:	b480      	push	{r7}
 801eb68:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 801eb6a:	bf00      	nop
 801eb6c:	46bd      	mov	sp, r7
 801eb6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eb72:	4770      	bx	lr

0801eb74 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 801eb74:	b480      	push	{r7}
 801eb76:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 801eb78:	bf00      	nop
 801eb7a:	46bd      	mov	sp, r7
 801eb7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eb80:	4770      	bx	lr

0801eb82 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 801eb82:	b480      	push	{r7}
 801eb84:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 801eb86:	bf00      	nop
 801eb88:	46bd      	mov	sp, r7
 801eb8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eb8e:	4770      	bx	lr

0801eb90 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 801eb90:	b580      	push	{r7, lr}
 801eb92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 801eb94:	f001 fdba 	bl	802070c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 801eb98:	bf00      	nop
 801eb9a:	bd80      	pop	{r7, pc}

0801eb9c <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 801eb9c:	b580      	push	{r7, lr}
 801eb9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 801eba0:	4802      	ldr	r0, [pc, #8]	; (801ebac <USART1_IRQHandler+0x10>)
 801eba2:	f003 fbef 	bl	8022384 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 801eba6:	bf00      	nop
 801eba8:	bd80      	pop	{r7, pc}
 801ebaa:	bf00      	nop
 801ebac:	20000670 	.word	0x20000670

0801ebb0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 801ebb0:	b480      	push	{r7}
 801ebb2:	af00      	add	r7, sp, #0
	return 1;
 801ebb4:	2301      	movs	r3, #1
}
 801ebb6:	4618      	mov	r0, r3
 801ebb8:	46bd      	mov	sp, r7
 801ebba:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ebbe:	4770      	bx	lr

0801ebc0 <_kill>:

int _kill(int pid, int sig)
{
 801ebc0:	b580      	push	{r7, lr}
 801ebc2:	b082      	sub	sp, #8
 801ebc4:	af00      	add	r7, sp, #0
 801ebc6:	6078      	str	r0, [r7, #4]
 801ebc8:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 801ebca:	f005 ffb5 	bl	8024b38 <__errno>
 801ebce:	4603      	mov	r3, r0
 801ebd0:	2216      	movs	r2, #22
 801ebd2:	601a      	str	r2, [r3, #0]
	return -1;
 801ebd4:	f04f 33ff 	mov.w	r3, #4294967295
}
 801ebd8:	4618      	mov	r0, r3
 801ebda:	3708      	adds	r7, #8
 801ebdc:	46bd      	mov	sp, r7
 801ebde:	bd80      	pop	{r7, pc}

0801ebe0 <_exit>:

void _exit (int status)
{
 801ebe0:	b580      	push	{r7, lr}
 801ebe2:	b082      	sub	sp, #8
 801ebe4:	af00      	add	r7, sp, #0
 801ebe6:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 801ebe8:	f04f 31ff 	mov.w	r1, #4294967295
 801ebec:	6878      	ldr	r0, [r7, #4]
 801ebee:	f7ff ffe7 	bl	801ebc0 <_kill>
	while (1) {}		/* Make sure we hang here */
 801ebf2:	e7fe      	b.n	801ebf2 <_exit+0x12>

0801ebf4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 801ebf4:	b580      	push	{r7, lr}
 801ebf6:	b086      	sub	sp, #24
 801ebf8:	af00      	add	r7, sp, #0
 801ebfa:	60f8      	str	r0, [r7, #12]
 801ebfc:	60b9      	str	r1, [r7, #8]
 801ebfe:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801ec00:	2300      	movs	r3, #0
 801ec02:	617b      	str	r3, [r7, #20]
 801ec04:	e00a      	b.n	801ec1c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 801ec06:	f3af 8000 	nop.w
 801ec0a:	4601      	mov	r1, r0
 801ec0c:	68bb      	ldr	r3, [r7, #8]
 801ec0e:	1c5a      	adds	r2, r3, #1
 801ec10:	60ba      	str	r2, [r7, #8]
 801ec12:	b2ca      	uxtb	r2, r1
 801ec14:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801ec16:	697b      	ldr	r3, [r7, #20]
 801ec18:	3301      	adds	r3, #1
 801ec1a:	617b      	str	r3, [r7, #20]
 801ec1c:	697a      	ldr	r2, [r7, #20]
 801ec1e:	687b      	ldr	r3, [r7, #4]
 801ec20:	429a      	cmp	r2, r3
 801ec22:	dbf0      	blt.n	801ec06 <_read+0x12>
	}

return len;
 801ec24:	687b      	ldr	r3, [r7, #4]
}
 801ec26:	4618      	mov	r0, r3
 801ec28:	3718      	adds	r7, #24
 801ec2a:	46bd      	mov	sp, r7
 801ec2c:	bd80      	pop	{r7, pc}

0801ec2e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 801ec2e:	b580      	push	{r7, lr}
 801ec30:	b086      	sub	sp, #24
 801ec32:	af00      	add	r7, sp, #0
 801ec34:	60f8      	str	r0, [r7, #12]
 801ec36:	60b9      	str	r1, [r7, #8]
 801ec38:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801ec3a:	2300      	movs	r3, #0
 801ec3c:	617b      	str	r3, [r7, #20]
 801ec3e:	e009      	b.n	801ec54 <_write+0x26>
	{
		__io_putchar(*ptr++);
 801ec40:	68bb      	ldr	r3, [r7, #8]
 801ec42:	1c5a      	adds	r2, r3, #1
 801ec44:	60ba      	str	r2, [r7, #8]
 801ec46:	781b      	ldrb	r3, [r3, #0]
 801ec48:	4618      	mov	r0, r3
 801ec4a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801ec4e:	697b      	ldr	r3, [r7, #20]
 801ec50:	3301      	adds	r3, #1
 801ec52:	617b      	str	r3, [r7, #20]
 801ec54:	697a      	ldr	r2, [r7, #20]
 801ec56:	687b      	ldr	r3, [r7, #4]
 801ec58:	429a      	cmp	r2, r3
 801ec5a:	dbf1      	blt.n	801ec40 <_write+0x12>
	}
	return len;
 801ec5c:	687b      	ldr	r3, [r7, #4]
}
 801ec5e:	4618      	mov	r0, r3
 801ec60:	3718      	adds	r7, #24
 801ec62:	46bd      	mov	sp, r7
 801ec64:	bd80      	pop	{r7, pc}

0801ec66 <_close>:

int _close(int file)
{
 801ec66:	b480      	push	{r7}
 801ec68:	b083      	sub	sp, #12
 801ec6a:	af00      	add	r7, sp, #0
 801ec6c:	6078      	str	r0, [r7, #4]
	return -1;
 801ec6e:	f04f 33ff 	mov.w	r3, #4294967295
}
 801ec72:	4618      	mov	r0, r3
 801ec74:	370c      	adds	r7, #12
 801ec76:	46bd      	mov	sp, r7
 801ec78:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ec7c:	4770      	bx	lr

0801ec7e <_fstat>:


int _fstat(int file, struct stat *st)
{
 801ec7e:	b480      	push	{r7}
 801ec80:	b083      	sub	sp, #12
 801ec82:	af00      	add	r7, sp, #0
 801ec84:	6078      	str	r0, [r7, #4]
 801ec86:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 801ec88:	683b      	ldr	r3, [r7, #0]
 801ec8a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801ec8e:	605a      	str	r2, [r3, #4]
	return 0;
 801ec90:	2300      	movs	r3, #0
}
 801ec92:	4618      	mov	r0, r3
 801ec94:	370c      	adds	r7, #12
 801ec96:	46bd      	mov	sp, r7
 801ec98:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ec9c:	4770      	bx	lr

0801ec9e <_isatty>:

int _isatty(int file)
{
 801ec9e:	b480      	push	{r7}
 801eca0:	b083      	sub	sp, #12
 801eca2:	af00      	add	r7, sp, #0
 801eca4:	6078      	str	r0, [r7, #4]
	return 1;
 801eca6:	2301      	movs	r3, #1
}
 801eca8:	4618      	mov	r0, r3
 801ecaa:	370c      	adds	r7, #12
 801ecac:	46bd      	mov	sp, r7
 801ecae:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ecb2:	4770      	bx	lr

0801ecb4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 801ecb4:	b480      	push	{r7}
 801ecb6:	b085      	sub	sp, #20
 801ecb8:	af00      	add	r7, sp, #0
 801ecba:	60f8      	str	r0, [r7, #12]
 801ecbc:	60b9      	str	r1, [r7, #8]
 801ecbe:	607a      	str	r2, [r7, #4]
	return 0;
 801ecc0:	2300      	movs	r3, #0
}
 801ecc2:	4618      	mov	r0, r3
 801ecc4:	3714      	adds	r7, #20
 801ecc6:	46bd      	mov	sp, r7
 801ecc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801eccc:	4770      	bx	lr
	...

0801ecd0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 801ecd0:	b580      	push	{r7, lr}
 801ecd2:	b086      	sub	sp, #24
 801ecd4:	af00      	add	r7, sp, #0
 801ecd6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 801ecd8:	4a14      	ldr	r2, [pc, #80]	; (801ed2c <_sbrk+0x5c>)
 801ecda:	4b15      	ldr	r3, [pc, #84]	; (801ed30 <_sbrk+0x60>)
 801ecdc:	1ad3      	subs	r3, r2, r3
 801ecde:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 801ece0:	697b      	ldr	r3, [r7, #20]
 801ece2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 801ece4:	4b13      	ldr	r3, [pc, #76]	; (801ed34 <_sbrk+0x64>)
 801ece6:	681b      	ldr	r3, [r3, #0]
 801ece8:	2b00      	cmp	r3, #0
 801ecea:	d102      	bne.n	801ecf2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 801ecec:	4b11      	ldr	r3, [pc, #68]	; (801ed34 <_sbrk+0x64>)
 801ecee:	4a12      	ldr	r2, [pc, #72]	; (801ed38 <_sbrk+0x68>)
 801ecf0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 801ecf2:	4b10      	ldr	r3, [pc, #64]	; (801ed34 <_sbrk+0x64>)
 801ecf4:	681a      	ldr	r2, [r3, #0]
 801ecf6:	687b      	ldr	r3, [r7, #4]
 801ecf8:	4413      	add	r3, r2
 801ecfa:	693a      	ldr	r2, [r7, #16]
 801ecfc:	429a      	cmp	r2, r3
 801ecfe:	d207      	bcs.n	801ed10 <_sbrk+0x40>
  {
    errno = ENOMEM;
 801ed00:	f005 ff1a 	bl	8024b38 <__errno>
 801ed04:	4603      	mov	r3, r0
 801ed06:	220c      	movs	r2, #12
 801ed08:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 801ed0a:	f04f 33ff 	mov.w	r3, #4294967295
 801ed0e:	e009      	b.n	801ed24 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 801ed10:	4b08      	ldr	r3, [pc, #32]	; (801ed34 <_sbrk+0x64>)
 801ed12:	681b      	ldr	r3, [r3, #0]
 801ed14:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 801ed16:	4b07      	ldr	r3, [pc, #28]	; (801ed34 <_sbrk+0x64>)
 801ed18:	681a      	ldr	r2, [r3, #0]
 801ed1a:	687b      	ldr	r3, [r7, #4]
 801ed1c:	4413      	add	r3, r2
 801ed1e:	4a05      	ldr	r2, [pc, #20]	; (801ed34 <_sbrk+0x64>)
 801ed20:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 801ed22:	68fb      	ldr	r3, [r7, #12]
}
 801ed24:	4618      	mov	r0, r3
 801ed26:	3718      	adds	r7, #24
 801ed28:	46bd      	mov	sp, r7
 801ed2a:	bd80      	pop	{r7, pc}
 801ed2c:	20050000 	.word	0x20050000
 801ed30:	00000400 	.word	0x00000400
 801ed34:	2000073c 	.word	0x2000073c
 801ed38:	200008f0 	.word	0x200008f0

0801ed3c <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 801ed3c:	b480      	push	{r7}
 801ed3e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 801ed40:	4b06      	ldr	r3, [pc, #24]	; (801ed5c <SystemInit+0x20>)
 801ed42:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801ed46:	4a05      	ldr	r2, [pc, #20]	; (801ed5c <SystemInit+0x20>)
 801ed48:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801ed4c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 801ed50:	bf00      	nop
 801ed52:	46bd      	mov	sp, r7
 801ed54:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ed58:	4770      	bx	lr
 801ed5a:	bf00      	nop
 801ed5c:	e000ed00 	.word	0xe000ed00

0801ed60 <__tcf_0>:
namespace
{

Symbol run_single_experiment_iteration(arglist arguments = { })
{
	static Symbol past_y = 0.0;
 801ed60:	b580      	push	{r7, lr}
 801ed62:	af00      	add	r7, sp, #0
 801ed64:	4801      	ldr	r0, [pc, #4]	; (801ed6c <__tcf_0+0xc>)
 801ed66:	f7e2 fb19 	bl	800139c <_ZN6SymbolD1Ev>
 801ed6a:	bd80      	pop	{r7, pc}
 801ed6c:	20000788 	.word	0x20000788

0801ed70 <__tcf_1>:
	static Symbol past_u = 0.0;
 801ed70:	b580      	push	{r7, lr}
 801ed72:	af00      	add	r7, sp, #0
 801ed74:	4801      	ldr	r0, [pc, #4]	; (801ed7c <__tcf_1+0xc>)
 801ed76:	f7e2 fb11 	bl	800139c <_ZN6SymbolD1Ev>
 801ed7a:	bd80      	pop	{r7, pc}
 801ed7c:	200007ac 	.word	0x200007ac

0801ed80 <__tcf_2>:

	static Symbol past_e = 0.0;
 801ed80:	b580      	push	{r7, lr}
 801ed82:	af00      	add	r7, sp, #0
 801ed84:	4801      	ldr	r0, [pc, #4]	; (801ed8c <__tcf_2+0xc>)
 801ed86:	f7e2 fb09 	bl	800139c <_ZN6SymbolD1Ev>
 801ed8a:	bd80      	pop	{r7, pc}
 801ed8c:	200007d0 	.word	0x200007d0

0801ed90 <__tcf_3>:
	static Symbol sum_e = 0.0;
 801ed90:	b580      	push	{r7, lr}
 801ed92:	af00      	add	r7, sp, #0
 801ed94:	4801      	ldr	r0, [pc, #4]	; (801ed9c <__tcf_3+0xc>)
 801ed96:	f7e2 fb01 	bl	800139c <_ZN6SymbolD1Ev>
 801ed9a:	bd80      	pop	{r7, pc}
 801ed9c:	200007f4 	.word	0x200007f4

0801eda0 <__tcf_4>:
	static Symbol e = 0.0;
 801eda0:	b580      	push	{r7, lr}
 801eda2:	af00      	add	r7, sp, #0
 801eda4:	4801      	ldr	r0, [pc, #4]	; (801edac <__tcf_4+0xc>)
 801eda6:	f7e2 faf9 	bl	800139c <_ZN6SymbolD1Ev>
 801edaa:	bd80      	pop	{r7, pc}
 801edac:	20000818 	.word	0x20000818

0801edb0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE>:
{
 801edb0:	b5b0      	push	{r4, r5, r7, lr}
 801edb2:	f5ad 6d80 	sub.w	sp, sp, #1024	; 0x400
 801edb6:	af00      	add	r7, sp, #0
 801edb8:	1d3b      	adds	r3, r7, #4
 801edba:	6018      	str	r0, [r3, #0]
 801edbc:	463b      	mov	r3, r7
 801edbe:	6019      	str	r1, [r3, #0]
	static Symbol past_y = 0.0;
 801edc0:	4bcf      	ldr	r3, [pc, #828]	; (801f100 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x350>)
 801edc2:	781b      	ldrb	r3, [r3, #0]
 801edc4:	f3bf 8f5b 	dmb	ish
 801edc8:	b2db      	uxtb	r3, r3
 801edca:	f003 0301 	and.w	r3, r3, #1
 801edce:	2b00      	cmp	r3, #0
 801edd0:	bf0c      	ite	eq
 801edd2:	2301      	moveq	r3, #1
 801edd4:	2300      	movne	r3, #0
 801edd6:	b2db      	uxtb	r3, r3
 801edd8:	2b00      	cmp	r3, #0
 801edda:	d015      	beq.n	801ee08 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x58>
 801eddc:	48c8      	ldr	r0, [pc, #800]	; (801f100 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x350>)
 801edde:	f004 fa4f 	bl	8023280 <__cxa_guard_acquire>
 801ede2:	4603      	mov	r3, r0
 801ede4:	2b00      	cmp	r3, #0
 801ede6:	bf14      	ite	ne
 801ede8:	2301      	movne	r3, #1
 801edea:	2300      	moveq	r3, #0
 801edec:	b2db      	uxtb	r3, r3
 801edee:	2b00      	cmp	r3, #0
 801edf0:	d00a      	beq.n	801ee08 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x58>
 801edf2:	ed9f 0bc1 	vldr	d0, [pc, #772]	; 801f0f8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x348>
 801edf6:	48c3      	ldr	r0, [pc, #780]	; (801f104 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x354>)
 801edf8:	f7f8 f80b 	bl	8016e12 <_ZN6SymbolC1Ed>
 801edfc:	48c0      	ldr	r0, [pc, #768]	; (801f100 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x350>)
 801edfe:	f004 fa4b 	bl	8023298 <__cxa_guard_release>
 801ee02:	48c1      	ldr	r0, [pc, #772]	; (801f108 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x358>)
 801ee04:	f005 fe91 	bl	8024b2a <atexit>
	static Symbol past_u = 0.0;
 801ee08:	4bc0      	ldr	r3, [pc, #768]	; (801f10c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x35c>)
 801ee0a:	781b      	ldrb	r3, [r3, #0]
 801ee0c:	f3bf 8f5b 	dmb	ish
 801ee10:	b2db      	uxtb	r3, r3
 801ee12:	f003 0301 	and.w	r3, r3, #1
 801ee16:	2b00      	cmp	r3, #0
 801ee18:	bf0c      	ite	eq
 801ee1a:	2301      	moveq	r3, #1
 801ee1c:	2300      	movne	r3, #0
 801ee1e:	b2db      	uxtb	r3, r3
 801ee20:	2b00      	cmp	r3, #0
 801ee22:	d015      	beq.n	801ee50 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0xa0>
 801ee24:	48b9      	ldr	r0, [pc, #740]	; (801f10c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x35c>)
 801ee26:	f004 fa2b 	bl	8023280 <__cxa_guard_acquire>
 801ee2a:	4603      	mov	r3, r0
 801ee2c:	2b00      	cmp	r3, #0
 801ee2e:	bf14      	ite	ne
 801ee30:	2301      	movne	r3, #1
 801ee32:	2300      	moveq	r3, #0
 801ee34:	b2db      	uxtb	r3, r3
 801ee36:	2b00      	cmp	r3, #0
 801ee38:	d00a      	beq.n	801ee50 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0xa0>
 801ee3a:	ed9f 0baf 	vldr	d0, [pc, #700]	; 801f0f8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x348>
 801ee3e:	48b4      	ldr	r0, [pc, #720]	; (801f110 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x360>)
 801ee40:	f7f7 ffe7 	bl	8016e12 <_ZN6SymbolC1Ed>
 801ee44:	48b1      	ldr	r0, [pc, #708]	; (801f10c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x35c>)
 801ee46:	f004 fa27 	bl	8023298 <__cxa_guard_release>
 801ee4a:	48b2      	ldr	r0, [pc, #712]	; (801f114 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x364>)
 801ee4c:	f005 fe6d 	bl	8024b2a <atexit>
	static Symbol past_e = 0.0;
 801ee50:	4bb1      	ldr	r3, [pc, #708]	; (801f118 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x368>)
 801ee52:	781b      	ldrb	r3, [r3, #0]
 801ee54:	f3bf 8f5b 	dmb	ish
 801ee58:	b2db      	uxtb	r3, r3
 801ee5a:	f003 0301 	and.w	r3, r3, #1
 801ee5e:	2b00      	cmp	r3, #0
 801ee60:	bf0c      	ite	eq
 801ee62:	2301      	moveq	r3, #1
 801ee64:	2300      	movne	r3, #0
 801ee66:	b2db      	uxtb	r3, r3
 801ee68:	2b00      	cmp	r3, #0
 801ee6a:	d015      	beq.n	801ee98 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0xe8>
 801ee6c:	48aa      	ldr	r0, [pc, #680]	; (801f118 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x368>)
 801ee6e:	f004 fa07 	bl	8023280 <__cxa_guard_acquire>
 801ee72:	4603      	mov	r3, r0
 801ee74:	2b00      	cmp	r3, #0
 801ee76:	bf14      	ite	ne
 801ee78:	2301      	movne	r3, #1
 801ee7a:	2300      	moveq	r3, #0
 801ee7c:	b2db      	uxtb	r3, r3
 801ee7e:	2b00      	cmp	r3, #0
 801ee80:	d00a      	beq.n	801ee98 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0xe8>
 801ee82:	ed9f 0b9d 	vldr	d0, [pc, #628]	; 801f0f8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x348>
 801ee86:	48a5      	ldr	r0, [pc, #660]	; (801f11c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x36c>)
 801ee88:	f7f7 ffc3 	bl	8016e12 <_ZN6SymbolC1Ed>
 801ee8c:	48a2      	ldr	r0, [pc, #648]	; (801f118 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x368>)
 801ee8e:	f004 fa03 	bl	8023298 <__cxa_guard_release>
 801ee92:	48a3      	ldr	r0, [pc, #652]	; (801f120 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x370>)
 801ee94:	f005 fe49 	bl	8024b2a <atexit>
	static Symbol sum_e = 0.0;
 801ee98:	4ba2      	ldr	r3, [pc, #648]	; (801f124 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801ee9a:	781b      	ldrb	r3, [r3, #0]
 801ee9c:	f3bf 8f5b 	dmb	ish
 801eea0:	b2db      	uxtb	r3, r3
 801eea2:	f003 0301 	and.w	r3, r3, #1
 801eea6:	2b00      	cmp	r3, #0
 801eea8:	bf0c      	ite	eq
 801eeaa:	2301      	moveq	r3, #1
 801eeac:	2300      	movne	r3, #0
 801eeae:	b2db      	uxtb	r3, r3
 801eeb0:	2b00      	cmp	r3, #0
 801eeb2:	d015      	beq.n	801eee0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x130>
 801eeb4:	489b      	ldr	r0, [pc, #620]	; (801f124 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801eeb6:	f004 f9e3 	bl	8023280 <__cxa_guard_acquire>
 801eeba:	4603      	mov	r3, r0
 801eebc:	2b00      	cmp	r3, #0
 801eebe:	bf14      	ite	ne
 801eec0:	2301      	movne	r3, #1
 801eec2:	2300      	moveq	r3, #0
 801eec4:	b2db      	uxtb	r3, r3
 801eec6:	2b00      	cmp	r3, #0
 801eec8:	d00a      	beq.n	801eee0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x130>
 801eeca:	ed9f 0b8b 	vldr	d0, [pc, #556]	; 801f0f8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x348>
 801eece:	4896      	ldr	r0, [pc, #600]	; (801f128 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x378>)
 801eed0:	f7f7 ff9f 	bl	8016e12 <_ZN6SymbolC1Ed>
 801eed4:	4893      	ldr	r0, [pc, #588]	; (801f124 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x374>)
 801eed6:	f004 f9df 	bl	8023298 <__cxa_guard_release>
 801eeda:	4894      	ldr	r0, [pc, #592]	; (801f12c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x37c>)
 801eedc:	f005 fe25 	bl	8024b2a <atexit>
	static Symbol e = 0.0;
 801eee0:	4b93      	ldr	r3, [pc, #588]	; (801f130 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801eee2:	781b      	ldrb	r3, [r3, #0]
 801eee4:	f3bf 8f5b 	dmb	ish
 801eee8:	b2db      	uxtb	r3, r3
 801eeea:	f003 0301 	and.w	r3, r3, #1
 801eeee:	2b00      	cmp	r3, #0
 801eef0:	bf0c      	ite	eq
 801eef2:	2301      	moveq	r3, #1
 801eef4:	2300      	movne	r3, #0
 801eef6:	b2db      	uxtb	r3, r3
 801eef8:	2b00      	cmp	r3, #0
 801eefa:	d015      	beq.n	801ef28 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x178>
 801eefc:	488c      	ldr	r0, [pc, #560]	; (801f130 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801eefe:	f004 f9bf 	bl	8023280 <__cxa_guard_acquire>
 801ef02:	4603      	mov	r3, r0
 801ef04:	2b00      	cmp	r3, #0
 801ef06:	bf14      	ite	ne
 801ef08:	2301      	movne	r3, #1
 801ef0a:	2300      	moveq	r3, #0
 801ef0c:	b2db      	uxtb	r3, r3
 801ef0e:	2b00      	cmp	r3, #0
 801ef10:	d00a      	beq.n	801ef28 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x178>
 801ef12:	ed9f 0b79 	vldr	d0, [pc, #484]	; 801f0f8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x348>
 801ef16:	4887      	ldr	r0, [pc, #540]	; (801f134 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x384>)
 801ef18:	f7f7 ff7b 	bl	8016e12 <_ZN6SymbolC1Ed>
 801ef1c:	4884      	ldr	r0, [pc, #528]	; (801f130 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x380>)
 801ef1e:	f004 f9bb 	bl	8023298 <__cxa_guard_release>
 801ef22:	4885      	ldr	r0, [pc, #532]	; (801f138 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x388>)
 801ef24:	f005 fe01 	bl	8024b2a <atexit>

	// uchyb
	e = PAR(yzad) - ARG(y);
 801ef28:	f7f9 ff96 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801ef2c:	4604      	mov	r4, r0
 801ef2e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801ef32:	4618      	mov	r0, r3
 801ef34:	f004 f9c4 	bl	80232c0 <_ZNSaIcEC1Ev>
 801ef38:	f107 0244 	add.w	r2, r7, #68	; 0x44
 801ef3c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801ef40:	497e      	ldr	r1, [pc, #504]	; (801f13c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x38c>)
 801ef42:	4618      	mov	r0, r3
 801ef44:	f7e2 ff55 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801ef48:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801ef4c:	4619      	mov	r1, r3
 801ef4e:	4620      	mov	r0, r4
 801ef50:	f7f9 fffc 	bl	8018f4c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801ef54:	4604      	mov	r4, r0
 801ef56:	f7f9 ff7f 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801ef5a:	4605      	mov	r5, r0
 801ef5c:	f107 0380 	add.w	r3, r7, #128	; 0x80
 801ef60:	4618      	mov	r0, r3
 801ef62:	f004 f9ad 	bl	80232c0 <_ZNSaIcEC1Ev>
 801ef66:	f107 0280 	add.w	r2, r7, #128	; 0x80
 801ef6a:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801ef6e:	4974      	ldr	r1, [pc, #464]	; (801f140 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x390>)
 801ef70:	4618      	mov	r0, r3
 801ef72:	f7e2 ff3e 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801ef76:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801ef7a:	4619      	mov	r1, r3
 801ef7c:	4628      	mov	r0, r5
 801ef7e:	f7f9 ff99 	bl	8018eb4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801ef82:	4602      	mov	r2, r0
 801ef84:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801ef88:	4611      	mov	r1, r2
 801ef8a:	4618      	mov	r0, r3
 801ef8c:	f7e2 fa64 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801ef90:	f107 030c 	add.w	r3, r7, #12
 801ef94:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801ef98:	4621      	mov	r1, r4
 801ef9a:	4618      	mov	r0, r3
 801ef9c:	f7f8 f8be 	bl	801711c <_ZN6SymbolmiES_>
 801efa0:	f107 030c 	add.w	r3, r7, #12
 801efa4:	4619      	mov	r1, r3
 801efa6:	4863      	ldr	r0, [pc, #396]	; (801f134 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x384>)
 801efa8:	f7e2 fa8c 	bl	80014c4 <_ZN6SymbolaSEOS_>
 801efac:	f107 030c 	add.w	r3, r7, #12
 801efb0:	4618      	mov	r0, r3
 801efb2:	f7e2 f9f3 	bl	800139c <_ZN6SymbolD1Ev>
 801efb6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801efba:	4618      	mov	r0, r3
 801efbc:	f7e2 f9ee 	bl	800139c <_ZN6SymbolD1Ev>
 801efc0:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801efc4:	4618      	mov	r0, r3
 801efc6:	f004 fc0c 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801efca:	f107 0380 	add.w	r3, r7, #128	; 0x80
 801efce:	4618      	mov	r0, r3
 801efd0:	f004 f977 	bl	80232c2 <_ZNSaIcED1Ev>
 801efd4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 801efd8:	4618      	mov	r0, r3
 801efda:	f004 fc02 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801efde:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801efe2:	4618      	mov	r0, r3
 801efe4:	f004 f96d 	bl	80232c2 <_ZNSaIcED1Ev>
	sum_e = sum_e + e;
 801efe8:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 801efec:	4951      	ldr	r1, [pc, #324]	; (801f134 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x384>)
 801efee:	4618      	mov	r0, r3
 801eff0:	f7e2 fa32 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801eff4:	f107 0384 	add.w	r3, r7, #132	; 0x84
 801eff8:	f107 02a4 	add.w	r2, r7, #164	; 0xa4
 801effc:	494a      	ldr	r1, [pc, #296]	; (801f128 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x378>)
 801effe:	4618      	mov	r0, r3
 801f000:	f7f7 ffe8 	bl	8016fd4 <_ZN6SymbolplES_>
 801f004:	f107 0384 	add.w	r3, r7, #132	; 0x84
 801f008:	4619      	mov	r1, r3
 801f00a:	4847      	ldr	r0, [pc, #284]	; (801f128 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x378>)
 801f00c:	f7e2 fa5a 	bl	80014c4 <_ZN6SymbolaSEOS_>
 801f010:	f107 0384 	add.w	r3, r7, #132	; 0x84
 801f014:	4618      	mov	r0, r3
 801f016:	f7e2 f9c1 	bl	800139c <_ZN6SymbolD1Ev>
 801f01a:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 801f01e:	4618      	mov	r0, r3
 801f020:	f7e2 f9bc 	bl	800139c <_ZN6SymbolD1Ev>

	//regulator
	ARG(u) = PAR(P)*e + PAR(I)*sum_e + PAR(D)*(e - past_e);
 801f024:	f7f9 ff18 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801f028:	4604      	mov	r4, r0
 801f02a:	f507 739e 	add.w	r3, r7, #316	; 0x13c
 801f02e:	4618      	mov	r0, r3
 801f030:	f004 f946 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f034:	f507 729e 	add.w	r2, r7, #316	; 0x13c
 801f038:	f507 7392 	add.w	r3, r7, #292	; 0x124
 801f03c:	4941      	ldr	r1, [pc, #260]	; (801f144 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x394>)
 801f03e:	4618      	mov	r0, r3
 801f040:	f7e2 fed7 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f044:	f507 7392 	add.w	r3, r7, #292	; 0x124
 801f048:	4619      	mov	r1, r3
 801f04a:	4620      	mov	r0, r4
 801f04c:	f7f9 ff7e 	bl	8018f4c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f050:	4604      	mov	r4, r0
 801f052:	f507 73a0 	add.w	r3, r7, #320	; 0x140
 801f056:	4937      	ldr	r1, [pc, #220]	; (801f134 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x384>)
 801f058:	4618      	mov	r0, r3
 801f05a:	f7e2 f9fd 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f05e:	f507 7382 	add.w	r3, r7, #260	; 0x104
 801f062:	f507 72a0 	add.w	r2, r7, #320	; 0x140
 801f066:	4621      	mov	r1, r4
 801f068:	4618      	mov	r0, r3
 801f06a:	f7f8 fc29 	bl	80178c0 <_ZN6SymbolmlES_>
 801f06e:	f7f9 fef3 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801f072:	4604      	mov	r4, r0
 801f074:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 801f078:	4618      	mov	r0, r3
 801f07a:	f004 f921 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f07e:	f507 72cc 	add.w	r2, r7, #408	; 0x198
 801f082:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 801f086:	4930      	ldr	r1, [pc, #192]	; (801f148 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x398>)
 801f088:	4618      	mov	r0, r3
 801f08a:	f7e2 feb2 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f08e:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 801f092:	4619      	mov	r1, r3
 801f094:	4620      	mov	r0, r4
 801f096:	f7f9 ff59 	bl	8018f4c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f09a:	4604      	mov	r4, r0
 801f09c:	f507 73ce 	add.w	r3, r7, #412	; 0x19c
 801f0a0:	4921      	ldr	r1, [pc, #132]	; (801f128 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x378>)
 801f0a2:	4618      	mov	r0, r3
 801f0a4:	f7e2 f9d8 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f0a8:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 801f0ac:	f507 72ce 	add.w	r2, r7, #412	; 0x19c
 801f0b0:	4621      	mov	r1, r4
 801f0b2:	4618      	mov	r0, r3
 801f0b4:	f7f8 fc04 	bl	80178c0 <_ZN6SymbolmlES_>
 801f0b8:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 801f0bc:	f507 72b0 	add.w	r2, r7, #352	; 0x160
 801f0c0:	f507 7182 	add.w	r1, r7, #260	; 0x104
 801f0c4:	4618      	mov	r0, r3
 801f0c6:	f7f7 ff85 	bl	8016fd4 <_ZN6SymbolplES_>
 801f0ca:	f7f9 fec5 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801f0ce:	4604      	mov	r4, r0
 801f0d0:	f507 73fa 	add.w	r3, r7, #500	; 0x1f4
 801f0d4:	4618      	mov	r0, r3
 801f0d6:	f004 f8f3 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f0da:	f507 72fa 	add.w	r2, r7, #500	; 0x1f4
 801f0de:	f507 73ee 	add.w	r3, r7, #476	; 0x1dc
 801f0e2:	491a      	ldr	r1, [pc, #104]	; (801f14c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x39c>)
 801f0e4:	4618      	mov	r0, r3
 801f0e6:	f7e2 fe84 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f0ea:	f507 73ee 	add.w	r3, r7, #476	; 0x1dc
 801f0ee:	4619      	mov	r1, r3
 801f0f0:	4620      	mov	r0, r4
 801f0f2:	f7f9 ff2b 	bl	8018f4c <_ZN16Variable_handler7get_parENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f0f6:	e02b      	b.n	801f150 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x3a0>
	...
 801f100:	200007a8 	.word	0x200007a8
 801f104:	20000788 	.word	0x20000788
 801f108:	0801ed61 	.word	0x0801ed61
 801f10c:	200007cc 	.word	0x200007cc
 801f110:	200007ac 	.word	0x200007ac
 801f114:	0801ed71 	.word	0x0801ed71
 801f118:	200007f0 	.word	0x200007f0
 801f11c:	200007d0 	.word	0x200007d0
 801f120:	0801ed81 	.word	0x0801ed81
 801f124:	20000814 	.word	0x20000814
 801f128:	200007f4 	.word	0x200007f4
 801f12c:	0801ed91 	.word	0x0801ed91
 801f130:	20000838 	.word	0x20000838
 801f134:	20000818 	.word	0x20000818
 801f138:	0801eda1 	.word	0x0801eda1
 801f13c:	08029eec 	.word	0x08029eec
 801f140:	08029ef4 	.word	0x08029ef4
 801f144:	08029ef8 	.word	0x08029ef8
 801f148:	08029efc 	.word	0x08029efc
 801f14c:	08029f00 	.word	0x08029f00
 801f150:	4604      	mov	r4, r0
 801f152:	f507 7306 	add.w	r3, r7, #536	; 0x218
 801f156:	49e8      	ldr	r1, [pc, #928]	; (801f4f8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x748>)
 801f158:	4618      	mov	r0, r3
 801f15a:	f7e2 f97d 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f15e:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801f162:	f507 7206 	add.w	r2, r7, #536	; 0x218
 801f166:	49e5      	ldr	r1, [pc, #916]	; (801f4fc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x74c>)
 801f168:	4618      	mov	r0, r3
 801f16a:	f7f7 ffd7 	bl	801711c <_ZN6SymbolmiES_>
 801f16e:	f507 73de 	add.w	r3, r7, #444	; 0x1bc
 801f172:	f507 72fc 	add.w	r2, r7, #504	; 0x1f8
 801f176:	4621      	mov	r1, r4
 801f178:	4618      	mov	r0, r3
 801f17a:	f7f8 fba1 	bl	80178c0 <_ZN6SymbolmlES_>
 801f17e:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801f182:	f507 72de 	add.w	r2, r7, #444	; 0x1bc
 801f186:	f107 01e4 	add.w	r1, r7, #228	; 0xe4
 801f18a:	4618      	mov	r0, r3
 801f18c:	f7f7 ff22 	bl	8016fd4 <_ZN6SymbolplES_>
 801f190:	f7f9 fe62 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801f194:	4604      	mov	r4, r0
 801f196:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801f19a:	4618      	mov	r0, r3
 801f19c:	f004 f890 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f1a0:	f507 7214 	add.w	r2, r7, #592	; 0x250
 801f1a4:	f507 730e 	add.w	r3, r7, #568	; 0x238
 801f1a8:	49d5      	ldr	r1, [pc, #852]	; (801f500 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x750>)
 801f1aa:	4618      	mov	r0, r3
 801f1ac:	f7e2 fe21 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f1b0:	f507 730e 	add.w	r3, r7, #568	; 0x238
 801f1b4:	4619      	mov	r1, r3
 801f1b6:	4620      	mov	r0, r4
 801f1b8:	f7f9 fe7c 	bl	8018eb4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f1bc:	4602      	mov	r2, r0
 801f1be:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801f1c2:	4619      	mov	r1, r3
 801f1c4:	4610      	mov	r0, r2
 801f1c6:	f7e2 f97d 	bl	80014c4 <_ZN6SymbolaSEOS_>
 801f1ca:	f507 730e 	add.w	r3, r7, #568	; 0x238
 801f1ce:	4618      	mov	r0, r3
 801f1d0:	f004 fb07 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f1d4:	f507 7314 	add.w	r3, r7, #592	; 0x250
 801f1d8:	4618      	mov	r0, r3
 801f1da:	f004 f872 	bl	80232c2 <_ZNSaIcED1Ev>
 801f1de:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 801f1e2:	4618      	mov	r0, r3
 801f1e4:	f7e2 f8da 	bl	800139c <_ZN6SymbolD1Ev>
 801f1e8:	f507 73de 	add.w	r3, r7, #444	; 0x1bc
 801f1ec:	4618      	mov	r0, r3
 801f1ee:	f7e2 f8d5 	bl	800139c <_ZN6SymbolD1Ev>
 801f1f2:	f507 73fc 	add.w	r3, r7, #504	; 0x1f8
 801f1f6:	4618      	mov	r0, r3
 801f1f8:	f7e2 f8d0 	bl	800139c <_ZN6SymbolD1Ev>
 801f1fc:	f507 7306 	add.w	r3, r7, #536	; 0x218
 801f200:	4618      	mov	r0, r3
 801f202:	f7e2 f8cb 	bl	800139c <_ZN6SymbolD1Ev>
 801f206:	f507 73ee 	add.w	r3, r7, #476	; 0x1dc
 801f20a:	4618      	mov	r0, r3
 801f20c:	f004 fae9 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f210:	f507 73fa 	add.w	r3, r7, #500	; 0x1f4
 801f214:	4618      	mov	r0, r3
 801f216:	f004 f854 	bl	80232c2 <_ZNSaIcED1Ev>
 801f21a:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 801f21e:	4618      	mov	r0, r3
 801f220:	f7e2 f8bc 	bl	800139c <_ZN6SymbolD1Ev>
 801f224:	f507 73b0 	add.w	r3, r7, #352	; 0x160
 801f228:	4618      	mov	r0, r3
 801f22a:	f7e2 f8b7 	bl	800139c <_ZN6SymbolD1Ev>
 801f22e:	f507 73ce 	add.w	r3, r7, #412	; 0x19c
 801f232:	4618      	mov	r0, r3
 801f234:	f7e2 f8b2 	bl	800139c <_ZN6SymbolD1Ev>
 801f238:	f507 73c0 	add.w	r3, r7, #384	; 0x180
 801f23c:	4618      	mov	r0, r3
 801f23e:	f004 fad0 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f242:	f507 73cc 	add.w	r3, r7, #408	; 0x198
 801f246:	4618      	mov	r0, r3
 801f248:	f004 f83b 	bl	80232c2 <_ZNSaIcED1Ev>
 801f24c:	f507 7382 	add.w	r3, r7, #260	; 0x104
 801f250:	4618      	mov	r0, r3
 801f252:	f7e2 f8a3 	bl	800139c <_ZN6SymbolD1Ev>
 801f256:	f507 73a0 	add.w	r3, r7, #320	; 0x140
 801f25a:	4618      	mov	r0, r3
 801f25c:	f7e2 f89e 	bl	800139c <_ZN6SymbolD1Ev>
 801f260:	f507 7392 	add.w	r3, r7, #292	; 0x124
 801f264:	4618      	mov	r0, r3
 801f266:	f004 fabc 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f26a:	f507 739e 	add.w	r3, r7, #316	; 0x13c
 801f26e:	4618      	mov	r0, r3
 801f270:	f004 f827 	bl	80232c2 <_ZNSaIcED1Ev>

	//obiekt
	ARG(y) = ARG(u) - past_u*0.5 + ARG(y)*0.5 + past_y*0.25;
 801f274:	f7f9 fdf0 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801f278:	4604      	mov	r4, r0
 801f27a:	f507 7333 	add.w	r3, r7, #716	; 0x2cc
 801f27e:	4618      	mov	r0, r3
 801f280:	f004 f81e 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f284:	f507 7233 	add.w	r2, r7, #716	; 0x2cc
 801f288:	f507 732d 	add.w	r3, r7, #692	; 0x2b4
 801f28c:	499c      	ldr	r1, [pc, #624]	; (801f500 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x750>)
 801f28e:	4618      	mov	r0, r3
 801f290:	f7e2 fdaf 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f294:	f507 732d 	add.w	r3, r7, #692	; 0x2b4
 801f298:	4619      	mov	r1, r3
 801f29a:	4620      	mov	r0, r4
 801f29c:	f7f9 fe0a 	bl	8018eb4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f2a0:	4604      	mov	r4, r0
 801f2a2:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
 801f2a6:	ed9f 0b90 	vldr	d0, [pc, #576]	; 801f4e8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x738>
 801f2aa:	4618      	mov	r0, r3
 801f2ac:	f7f7 fdb1 	bl	8016e12 <_ZN6SymbolC1Ed>
 801f2b0:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 801f2b4:	f507 723c 	add.w	r2, r7, #752	; 0x2f0
 801f2b8:	4992      	ldr	r1, [pc, #584]	; (801f504 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x754>)
 801f2ba:	4618      	mov	r0, r3
 801f2bc:	f7f8 fb00 	bl	80178c0 <_ZN6SymbolmlES_>
 801f2c0:	f507 7325 	add.w	r3, r7, #660	; 0x294
 801f2c4:	f507 7234 	add.w	r2, r7, #720	; 0x2d0
 801f2c8:	4621      	mov	r1, r4
 801f2ca:	4618      	mov	r0, r3
 801f2cc:	f7f7 ff26 	bl	801711c <_ZN6SymbolmiES_>
 801f2d0:	f7f9 fdc2 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801f2d4:	4604      	mov	r4, r0
 801f2d6:	f507 7352 	add.w	r3, r7, #840	; 0x348
 801f2da:	4618      	mov	r0, r3
 801f2dc:	f003 fff0 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f2e0:	f507 7252 	add.w	r2, r7, #840	; 0x348
 801f2e4:	f507 734c 	add.w	r3, r7, #816	; 0x330
 801f2e8:	4987      	ldr	r1, [pc, #540]	; (801f508 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x758>)
 801f2ea:	4618      	mov	r0, r3
 801f2ec:	f7e2 fd81 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f2f0:	f507 734c 	add.w	r3, r7, #816	; 0x330
 801f2f4:	4619      	mov	r1, r3
 801f2f6:	4620      	mov	r0, r4
 801f2f8:	f7f9 fddc 	bl	8018eb4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f2fc:	4604      	mov	r4, r0
 801f2fe:	f507 7353 	add.w	r3, r7, #844	; 0x34c
 801f302:	ed9f 0b79 	vldr	d0, [pc, #484]	; 801f4e8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x738>
 801f306:	4618      	mov	r0, r3
 801f308:	f7f7 fd83 	bl	8016e12 <_ZN6SymbolC1Ed>
 801f30c:	f507 7344 	add.w	r3, r7, #784	; 0x310
 801f310:	f507 7253 	add.w	r2, r7, #844	; 0x34c
 801f314:	4621      	mov	r1, r4
 801f316:	4618      	mov	r0, r3
 801f318:	f7f8 fad2 	bl	80178c0 <_ZN6SymbolmlES_>
 801f31c:	f507 731d 	add.w	r3, r7, #628	; 0x274
 801f320:	f507 7244 	add.w	r2, r7, #784	; 0x310
 801f324:	f507 7125 	add.w	r1, r7, #660	; 0x294
 801f328:	4618      	mov	r0, r3
 801f32a:	f7f7 fe53 	bl	8016fd4 <_ZN6SymbolplES_>
 801f32e:	f507 7363 	add.w	r3, r7, #908	; 0x38c
 801f332:	ed9f 0b6f 	vldr	d0, [pc, #444]	; 801f4f0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x740>
 801f336:	4618      	mov	r0, r3
 801f338:	f7f7 fd6b 	bl	8016e12 <_ZN6SymbolC1Ed>
 801f33c:	f507 735b 	add.w	r3, r7, #876	; 0x36c
 801f340:	f507 7263 	add.w	r2, r7, #908	; 0x38c
 801f344:	4971      	ldr	r1, [pc, #452]	; (801f50c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x75c>)
 801f346:	4618      	mov	r0, r3
 801f348:	f7f8 faba 	bl	80178c0 <_ZN6SymbolmlES_>
 801f34c:	f507 7315 	add.w	r3, r7, #596	; 0x254
 801f350:	f507 725b 	add.w	r2, r7, #876	; 0x36c
 801f354:	f507 711d 	add.w	r1, r7, #628	; 0x274
 801f358:	4618      	mov	r0, r3
 801f35a:	f7f7 fe3b 	bl	8016fd4 <_ZN6SymbolplES_>
 801f35e:	f7f9 fd7b 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801f362:	4604      	mov	r4, r0
 801f364:	f507 7371 	add.w	r3, r7, #964	; 0x3c4
 801f368:	4618      	mov	r0, r3
 801f36a:	f003 ffa9 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f36e:	f507 7271 	add.w	r2, r7, #964	; 0x3c4
 801f372:	f507 736b 	add.w	r3, r7, #940	; 0x3ac
 801f376:	4964      	ldr	r1, [pc, #400]	; (801f508 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x758>)
 801f378:	4618      	mov	r0, r3
 801f37a:	f7e2 fd3a 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f37e:	f507 736b 	add.w	r3, r7, #940	; 0x3ac
 801f382:	4619      	mov	r1, r3
 801f384:	4620      	mov	r0, r4
 801f386:	f7f9 fd95 	bl	8018eb4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f38a:	4602      	mov	r2, r0
 801f38c:	f507 7315 	add.w	r3, r7, #596	; 0x254
 801f390:	4619      	mov	r1, r3
 801f392:	4610      	mov	r0, r2
 801f394:	f7e2 f896 	bl	80014c4 <_ZN6SymbolaSEOS_>
 801f398:	f507 736b 	add.w	r3, r7, #940	; 0x3ac
 801f39c:	4618      	mov	r0, r3
 801f39e:	f004 fa20 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f3a2:	f507 7371 	add.w	r3, r7, #964	; 0x3c4
 801f3a6:	4618      	mov	r0, r3
 801f3a8:	f003 ff8b 	bl	80232c2 <_ZNSaIcED1Ev>
 801f3ac:	f507 7315 	add.w	r3, r7, #596	; 0x254
 801f3b0:	4618      	mov	r0, r3
 801f3b2:	f7e1 fff3 	bl	800139c <_ZN6SymbolD1Ev>
 801f3b6:	f507 735b 	add.w	r3, r7, #876	; 0x36c
 801f3ba:	4618      	mov	r0, r3
 801f3bc:	f7e1 ffee 	bl	800139c <_ZN6SymbolD1Ev>
 801f3c0:	f507 7363 	add.w	r3, r7, #908	; 0x38c
 801f3c4:	4618      	mov	r0, r3
 801f3c6:	f7e1 ffe9 	bl	800139c <_ZN6SymbolD1Ev>
 801f3ca:	f507 731d 	add.w	r3, r7, #628	; 0x274
 801f3ce:	4618      	mov	r0, r3
 801f3d0:	f7e1 ffe4 	bl	800139c <_ZN6SymbolD1Ev>
 801f3d4:	f507 7344 	add.w	r3, r7, #784	; 0x310
 801f3d8:	4618      	mov	r0, r3
 801f3da:	f7e1 ffdf 	bl	800139c <_ZN6SymbolD1Ev>
 801f3de:	f507 7353 	add.w	r3, r7, #844	; 0x34c
 801f3e2:	4618      	mov	r0, r3
 801f3e4:	f7e1 ffda 	bl	800139c <_ZN6SymbolD1Ev>
 801f3e8:	f507 734c 	add.w	r3, r7, #816	; 0x330
 801f3ec:	4618      	mov	r0, r3
 801f3ee:	f004 f9f8 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f3f2:	f507 7352 	add.w	r3, r7, #840	; 0x348
 801f3f6:	4618      	mov	r0, r3
 801f3f8:	f003 ff63 	bl	80232c2 <_ZNSaIcED1Ev>
 801f3fc:	f507 7325 	add.w	r3, r7, #660	; 0x294
 801f400:	4618      	mov	r0, r3
 801f402:	f7e1 ffcb 	bl	800139c <_ZN6SymbolD1Ev>
 801f406:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 801f40a:	4618      	mov	r0, r3
 801f40c:	f7e1 ffc6 	bl	800139c <_ZN6SymbolD1Ev>
 801f410:	f507 733c 	add.w	r3, r7, #752	; 0x2f0
 801f414:	4618      	mov	r0, r3
 801f416:	f7e1 ffc1 	bl	800139c <_ZN6SymbolD1Ev>
 801f41a:	f507 732d 	add.w	r3, r7, #692	; 0x2b4
 801f41e:	4618      	mov	r0, r3
 801f420:	f004 f9df 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f424:	f507 7333 	add.w	r3, r7, #716	; 0x2cc
 801f428:	4618      	mov	r0, r3
 801f42a:	f003 ff4a 	bl	80232c2 <_ZNSaIcED1Ev>

	past_e = e;
 801f42e:	4933      	ldr	r1, [pc, #204]	; (801f4fc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x74c>)
 801f430:	4831      	ldr	r0, [pc, #196]	; (801f4f8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x748>)
 801f432:	f7e2 faeb 	bl	8001a0c <_ZN6SymbolaSERKS_>
	past_y = ARG(y);
 801f436:	f7f9 fd0f 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801f43a:	4604      	mov	r4, r0
 801f43c:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 801f440:	4618      	mov	r0, r3
 801f442:	f003 ff3d 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f446:	f507 7278 	add.w	r2, r7, #992	; 0x3e0
 801f44a:	f507 7372 	add.w	r3, r7, #968	; 0x3c8
 801f44e:	492e      	ldr	r1, [pc, #184]	; (801f508 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x758>)
 801f450:	4618      	mov	r0, r3
 801f452:	f7e2 fcce 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f456:	f507 7372 	add.w	r3, r7, #968	; 0x3c8
 801f45a:	4619      	mov	r1, r3
 801f45c:	4620      	mov	r0, r4
 801f45e:	f7f9 fd29 	bl	8018eb4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f462:	4603      	mov	r3, r0
 801f464:	4619      	mov	r1, r3
 801f466:	4829      	ldr	r0, [pc, #164]	; (801f50c <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x75c>)
 801f468:	f7e2 fad0 	bl	8001a0c <_ZN6SymbolaSERKS_>
 801f46c:	f507 7372 	add.w	r3, r7, #968	; 0x3c8
 801f470:	4618      	mov	r0, r3
 801f472:	f004 f9b6 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f476:	f507 7378 	add.w	r3, r7, #992	; 0x3e0
 801f47a:	4618      	mov	r0, r3
 801f47c:	f003 ff21 	bl	80232c2 <_ZNSaIcED1Ev>
	past_u = ARG(u);
 801f480:	f7f9 fcea 	bl	8018e58 <_ZN16Variable_handler12get_instanceEv>
 801f484:	4604      	mov	r4, r0
 801f486:	f507 737f 	add.w	r3, r7, #1020	; 0x3fc
 801f48a:	4618      	mov	r0, r3
 801f48c:	f003 ff18 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f490:	f507 727f 	add.w	r2, r7, #1020	; 0x3fc
 801f494:	f507 7379 	add.w	r3, r7, #996	; 0x3e4
 801f498:	4919      	ldr	r1, [pc, #100]	; (801f500 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x750>)
 801f49a:	4618      	mov	r0, r3
 801f49c:	f7e2 fca9 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f4a0:	f507 7379 	add.w	r3, r7, #996	; 0x3e4
 801f4a4:	4619      	mov	r1, r3
 801f4a6:	4620      	mov	r0, r4
 801f4a8:	f7f9 fd04 	bl	8018eb4 <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801f4ac:	4603      	mov	r3, r0
 801f4ae:	4619      	mov	r1, r3
 801f4b0:	4814      	ldr	r0, [pc, #80]	; (801f504 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x754>)
 801f4b2:	f7e2 faab 	bl	8001a0c <_ZN6SymbolaSERKS_>
 801f4b6:	f507 7379 	add.w	r3, r7, #996	; 0x3e4
 801f4ba:	4618      	mov	r0, r3
 801f4bc:	f004 f991 	bl	80237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801f4c0:	f507 737f 	add.w	r3, r7, #1020	; 0x3fc
 801f4c4:	4618      	mov	r0, r3
 801f4c6:	f003 fefc 	bl	80232c2 <_ZNSaIcED1Ev>

	return 0;
 801f4ca:	1d3b      	adds	r3, r7, #4
 801f4cc:	2100      	movs	r1, #0
 801f4ce:	6818      	ldr	r0, [r3, #0]
 801f4d0:	f7f7 fc6c 	bl	8016dac <_ZN6SymbolC1Ei>
 801f4d4:	1d3b      	adds	r3, r7, #4
 801f4d6:	1d3a      	adds	r2, r7, #4
 801f4d8:	6812      	ldr	r2, [r2, #0]
 801f4da:	601a      	str	r2, [r3, #0]
}
 801f4dc:	1d3b      	adds	r3, r7, #4
 801f4de:	6818      	ldr	r0, [r3, #0]
 801f4e0:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 801f4e4:	46bd      	mov	sp, r7
 801f4e6:	bdb0      	pop	{r4, r5, r7, pc}
 801f4e8:	00000000 	.word	0x00000000
 801f4ec:	3fe00000 	.word	0x3fe00000
 801f4f0:	00000000 	.word	0x00000000
 801f4f4:	3fd00000 	.word	0x3fd00000
 801f4f8:	200007d0 	.word	0x200007d0
 801f4fc:	20000818 	.word	0x20000818
 801f500:	08029f04 	.word	0x08029f04
 801f504:	200007ac 	.word	0x200007ac
 801f508:	08029ef4 	.word	0x08029ef4
 801f50c:	20000788 	.word	0x20000788

0801f510 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>:
      _Rb_tree() = default;
 801f510:	b580      	push	{r7, lr}
 801f512:	b082      	sub	sp, #8
 801f514:	af00      	add	r7, sp, #0
 801f516:	6078      	str	r0, [r7, #4]
 801f518:	687b      	ldr	r3, [r7, #4]
 801f51a:	4618      	mov	r0, r3
 801f51c:	f000 f980 	bl	801f820 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>
 801f520:	687b      	ldr	r3, [r7, #4]
 801f522:	4618      	mov	r0, r3
 801f524:	3708      	adds	r7, #8
 801f526:	46bd      	mov	sp, r7
 801f528:	bd80      	pop	{r7, pc}

0801f52a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>:
      map() = default;
 801f52a:	b580      	push	{r7, lr}
 801f52c:	b082      	sub	sp, #8
 801f52e:	af00      	add	r7, sp, #0
 801f530:	6078      	str	r0, [r7, #4]
 801f532:	687b      	ldr	r3, [r7, #4]
 801f534:	4618      	mov	r0, r3
 801f536:	f7ff ffeb 	bl	801f510 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EEC1Ev>
 801f53a:	687b      	ldr	r3, [r7, #4]
 801f53c:	4618      	mov	r0, r3
 801f53e:	3708      	adds	r7, #8
 801f540:	46bd      	mov	sp, r7
 801f542:	bd80      	pop	{r7, pc}

0801f544 <_ZN16Function_handlerC1Ev>:

}

Function_handler::Function_handler()
 801f544:	b590      	push	{r4, r7, lr}
 801f546:	b08d      	sub	sp, #52	; 0x34
 801f548:	af00      	add	r7, sp, #0
 801f54a:	6078      	str	r0, [r7, #4]
 801f54c:	687b      	ldr	r3, [r7, #4]
 801f54e:	4618      	mov	r0, r3
 801f550:	f7ff ffeb 	bl	801f52a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEEC1Ev>
{
	ADD_FUNCTION(run_single_experiment_iteration);
 801f554:	687c      	ldr	r4, [r7, #4]
 801f556:	4b0e      	ldr	r3, [pc, #56]	; (801f590 <_ZN16Function_handlerC1Ev+0x4c>)
 801f558:	62fb      	str	r3, [r7, #44]	; 0x2c
 801f55a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 801f55e:	f107 0310 	add.w	r3, r7, #16
 801f562:	490c      	ldr	r1, [pc, #48]	; (801f594 <_ZN16Function_handlerC1Ev+0x50>)
 801f564:	4618      	mov	r0, r3
 801f566:	f000 f970 	bl	801f84a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>
 801f56a:	f107 0308 	add.w	r3, r7, #8
 801f56e:	f107 0210 	add.w	r2, r7, #16
 801f572:	4621      	mov	r1, r4
 801f574:	4618      	mov	r0, r3
 801f576:	f000 f990 	bl	801f89a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>
 801f57a:	f107 0310 	add.w	r3, r7, #16
 801f57e:	4618      	mov	r0, r3
 801f580:	f7ef fac5 	bl	800eb0e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEED1Ev>
}
 801f584:	687b      	ldr	r3, [r7, #4]
 801f586:	4618      	mov	r0, r3
 801f588:	3734      	adds	r7, #52	; 0x34
 801f58a:	46bd      	mov	sp, r7
 801f58c:	bd90      	pop	{r4, r7, pc}
 801f58e:	bf00      	nop
 801f590:	0801edb1 	.word	0x0801edb1
 801f594:	08029f08 	.word	0x08029f08

0801f598 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>:
 801f598:	b580      	push	{r7, lr}
 801f59a:	b082      	sub	sp, #8
 801f59c:	af00      	add	r7, sp, #0
 801f59e:	6078      	str	r0, [r7, #4]
 801f5a0:	687b      	ldr	r3, [r7, #4]
 801f5a2:	4618      	mov	r0, r3
 801f5a4:	f000 f98d 	bl	801f8c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>
 801f5a8:	687b      	ldr	r3, [r7, #4]
 801f5aa:	4618      	mov	r0, r3
 801f5ac:	3708      	adds	r7, #8
 801f5ae:	46bd      	mov	sp, r7
 801f5b0:	bd80      	pop	{r7, pc}

0801f5b2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>:
 801f5b2:	b580      	push	{r7, lr}
 801f5b4:	b082      	sub	sp, #8
 801f5b6:	af00      	add	r7, sp, #0
 801f5b8:	6078      	str	r0, [r7, #4]
 801f5ba:	687b      	ldr	r3, [r7, #4]
 801f5bc:	4618      	mov	r0, r3
 801f5be:	f7ff ffeb 	bl	801f598 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>
 801f5c2:	687b      	ldr	r3, [r7, #4]
 801f5c4:	4618      	mov	r0, r3
 801f5c6:	3708      	adds	r7, #8
 801f5c8:	46bd      	mov	sp, r7
 801f5ca:	bd80      	pop	{r7, pc}

0801f5cc <_ZN16Variable_handlerC1Ev>:

Variable_handler::Variable_handler()
 801f5cc:	b590      	push	{r4, r7, lr}
 801f5ce:	f5ad 7d13 	sub.w	sp, sp, #588	; 0x24c
 801f5d2:	af00      	add	r7, sp, #0
 801f5d4:	1d3b      	adds	r3, r7, #4
 801f5d6:	6018      	str	r0, [r3, #0]
 801f5d8:	1d3b      	adds	r3, r7, #4
 801f5da:	681b      	ldr	r3, [r3, #0]
 801f5dc:	4618      	mov	r0, r3
 801f5de:	f7ff ffe8 	bl	801f5b2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801f5e2:	1d3b      	adds	r3, r7, #4
 801f5e4:	681b      	ldr	r3, [r3, #0]
 801f5e6:	3318      	adds	r3, #24
 801f5e8:	4618      	mov	r0, r3
 801f5ea:	f7ff ffe2 	bl	801f5b2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 801f5ee:	1d3b      	adds	r3, r7, #4
 801f5f0:	681b      	ldr	r3, [r3, #0]
 801f5f2:	3330      	adds	r3, #48	; 0x30
 801f5f4:	4618      	mov	r0, r3
 801f5f6:	f7ff ffdc 	bl	801f5b2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
{
	ADD_ARG(u);
 801f5fa:	1d3b      	adds	r3, r7, #4
 801f5fc:	681b      	ldr	r3, [r3, #0]
 801f5fe:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801f602:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f606:	4618      	mov	r0, r3
 801f608:	2320      	movs	r3, #32
 801f60a:	461a      	mov	r2, r3
 801f60c:	2100      	movs	r1, #0
 801f60e:	f005 fb35 	bl	8024c7c <memset>
 801f612:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f616:	4618      	mov	r0, r3
 801f618:	f7ee fcb3 	bl	800df82 <_ZN6SymbolC1Ev>
 801f61c:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801f620:	f107 0310 	add.w	r3, r7, #16
 801f624:	4978      	ldr	r1, [pc, #480]	; (801f808 <_ZN16Variable_handlerC1Ev+0x23c>)
 801f626:	4618      	mov	r0, r3
 801f628:	f000 f960 	bl	801f8ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f62c:	f107 0308 	add.w	r3, r7, #8
 801f630:	f107 0210 	add.w	r2, r7, #16
 801f634:	4621      	mov	r1, r4
 801f636:	4618      	mov	r0, r3
 801f638:	f000 f97f 	bl	801f93a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f63c:	f107 0310 	add.w	r3, r7, #16
 801f640:	4618      	mov	r0, r3
 801f642:	f7fa fd57 	bl	801a0f4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f646:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801f64a:	4618      	mov	r0, r3
 801f64c:	f7e1 fea6 	bl	800139c <_ZN6SymbolD1Ev>
	ADD_ARG(y);
 801f650:	1d3b      	adds	r3, r7, #4
 801f652:	681b      	ldr	r3, [r3, #0]
 801f654:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801f658:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f65c:	4618      	mov	r0, r3
 801f65e:	2320      	movs	r3, #32
 801f660:	461a      	mov	r2, r3
 801f662:	2100      	movs	r1, #0
 801f664:	f005 fb0a 	bl	8024c7c <memset>
 801f668:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f66c:	4618      	mov	r0, r3
 801f66e:	f7ee fc88 	bl	800df82 <_ZN6SymbolC1Ev>
 801f672:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 801f676:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801f67a:	4964      	ldr	r1, [pc, #400]	; (801f80c <_ZN16Variable_handlerC1Ev+0x240>)
 801f67c:	4618      	mov	r0, r3
 801f67e:	f000 f935 	bl	801f8ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f682:	f107 0368 	add.w	r3, r7, #104	; 0x68
 801f686:	f107 0270 	add.w	r2, r7, #112	; 0x70
 801f68a:	4621      	mov	r1, r4
 801f68c:	4618      	mov	r0, r3
 801f68e:	f000 f954 	bl	801f93a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f692:	f107 0370 	add.w	r3, r7, #112	; 0x70
 801f696:	4618      	mov	r0, r3
 801f698:	f7fa fd2c 	bl	801a0f4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f69c:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 801f6a0:	4618      	mov	r0, r3
 801f6a2:	f7e1 fe7b 	bl	800139c <_ZN6SymbolD1Ev>

	ADD_PAR(yzad);
 801f6a6:	1d3b      	adds	r3, r7, #4
 801f6a8:	681b      	ldr	r3, [r3, #0]
 801f6aa:	f103 0418 	add.w	r4, r3, #24
 801f6ae:	f507 7384 	add.w	r3, r7, #264	; 0x108
 801f6b2:	4618      	mov	r0, r3
 801f6b4:	2320      	movs	r3, #32
 801f6b6:	461a      	mov	r2, r3
 801f6b8:	2100      	movs	r1, #0
 801f6ba:	f005 fadf 	bl	8024c7c <memset>
 801f6be:	f507 7384 	add.w	r3, r7, #264	; 0x108
 801f6c2:	4618      	mov	r0, r3
 801f6c4:	f7ee fc5d 	bl	800df82 <_ZN6SymbolC1Ev>
 801f6c8:	f507 7284 	add.w	r2, r7, #264	; 0x108
 801f6cc:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 801f6d0:	494f      	ldr	r1, [pc, #316]	; (801f810 <_ZN16Variable_handlerC1Ev+0x244>)
 801f6d2:	4618      	mov	r0, r3
 801f6d4:	f000 f945 	bl	801f962 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA5_KcLb1EEEOT_RKS7_>
 801f6d8:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 801f6dc:	f107 02d0 	add.w	r2, r7, #208	; 0xd0
 801f6e0:	4621      	mov	r1, r4
 801f6e2:	4618      	mov	r0, r3
 801f6e4:	f000 f929 	bl	801f93a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f6e8:	f107 03d0 	add.w	r3, r7, #208	; 0xd0
 801f6ec:	4618      	mov	r0, r3
 801f6ee:	f7fa fd01 	bl	801a0f4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f6f2:	f507 7384 	add.w	r3, r7, #264	; 0x108
 801f6f6:	4618      	mov	r0, r3
 801f6f8:	f7e1 fe50 	bl	800139c <_ZN6SymbolD1Ev>
	ADD_PAR(P);
 801f6fc:	1d3b      	adds	r3, r7, #4
 801f6fe:	681b      	ldr	r3, [r3, #0]
 801f700:	f103 0418 	add.w	r4, r3, #24
 801f704:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801f708:	2220      	movs	r2, #32
 801f70a:	2100      	movs	r1, #0
 801f70c:	4618      	mov	r0, r3
 801f70e:	f005 fab5 	bl	8024c7c <memset>
 801f712:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801f716:	4618      	mov	r0, r3
 801f718:	f7ee fc33 	bl	800df82 <_ZN6SymbolC1Ev>
 801f71c:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801f720:	f507 7398 	add.w	r3, r7, #304	; 0x130
 801f724:	493b      	ldr	r1, [pc, #236]	; (801f814 <_ZN16Variable_handlerC1Ev+0x248>)
 801f726:	4618      	mov	r0, r3
 801f728:	f000 f8e0 	bl	801f8ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f72c:	f507 7394 	add.w	r3, r7, #296	; 0x128
 801f730:	f507 7298 	add.w	r2, r7, #304	; 0x130
 801f734:	4621      	mov	r1, r4
 801f736:	4618      	mov	r0, r3
 801f738:	f000 f8ff 	bl	801f93a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f73c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 801f740:	4618      	mov	r0, r3
 801f742:	f7fa fcd7 	bl	801a0f4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f746:	f507 73b4 	add.w	r3, r7, #360	; 0x168
 801f74a:	4618      	mov	r0, r3
 801f74c:	f7e1 fe26 	bl	800139c <_ZN6SymbolD1Ev>
	ADD_PAR(I);
 801f750:	1d3b      	adds	r3, r7, #4
 801f752:	681b      	ldr	r3, [r3, #0]
 801f754:	f103 0418 	add.w	r4, r3, #24
 801f758:	f507 73e4 	add.w	r3, r7, #456	; 0x1c8
 801f75c:	2220      	movs	r2, #32
 801f75e:	2100      	movs	r1, #0
 801f760:	4618      	mov	r0, r3
 801f762:	f005 fa8b 	bl	8024c7c <memset>
 801f766:	f507 73e4 	add.w	r3, r7, #456	; 0x1c8
 801f76a:	4618      	mov	r0, r3
 801f76c:	f7ee fc09 	bl	800df82 <_ZN6SymbolC1Ev>
 801f770:	f507 72e4 	add.w	r2, r7, #456	; 0x1c8
 801f774:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801f778:	4927      	ldr	r1, [pc, #156]	; (801f818 <_ZN16Variable_handlerC1Ev+0x24c>)
 801f77a:	4618      	mov	r0, r3
 801f77c:	f000 f8b6 	bl	801f8ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f780:	f507 73c4 	add.w	r3, r7, #392	; 0x188
 801f784:	f507 72c8 	add.w	r2, r7, #400	; 0x190
 801f788:	4621      	mov	r1, r4
 801f78a:	4618      	mov	r0, r3
 801f78c:	f000 f8d5 	bl	801f93a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f790:	f507 73c8 	add.w	r3, r7, #400	; 0x190
 801f794:	4618      	mov	r0, r3
 801f796:	f7fa fcad 	bl	801a0f4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f79a:	f507 73e4 	add.w	r3, r7, #456	; 0x1c8
 801f79e:	4618      	mov	r0, r3
 801f7a0:	f7e1 fdfc 	bl	800139c <_ZN6SymbolD1Ev>
	ADD_PAR(D);
 801f7a4:	1d3b      	adds	r3, r7, #4
 801f7a6:	681b      	ldr	r3, [r3, #0]
 801f7a8:	f103 0418 	add.w	r4, r3, #24
 801f7ac:	f507 730a 	add.w	r3, r7, #552	; 0x228
 801f7b0:	2220      	movs	r2, #32
 801f7b2:	2100      	movs	r1, #0
 801f7b4:	4618      	mov	r0, r3
 801f7b6:	f005 fa61 	bl	8024c7c <memset>
 801f7ba:	f507 730a 	add.w	r3, r7, #552	; 0x228
 801f7be:	4618      	mov	r0, r3
 801f7c0:	f7ee fbdf 	bl	800df82 <_ZN6SymbolC1Ev>
 801f7c4:	f507 720a 	add.w	r2, r7, #552	; 0x228
 801f7c8:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
 801f7cc:	4913      	ldr	r1, [pc, #76]	; (801f81c <_ZN16Variable_handlerC1Ev+0x250>)
 801f7ce:	4618      	mov	r0, r3
 801f7d0:	f000 f88c 	bl	801f8ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 801f7d4:	f507 73f4 	add.w	r3, r7, #488	; 0x1e8
 801f7d8:	f507 72f8 	add.w	r2, r7, #496	; 0x1f0
 801f7dc:	4621      	mov	r1, r4
 801f7de:	4618      	mov	r0, r3
 801f7e0:	f000 f8ab 	bl	801f93a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 801f7e4:	f507 73f8 	add.w	r3, r7, #496	; 0x1f0
 801f7e8:	4618      	mov	r0, r3
 801f7ea:	f7fa fc83 	bl	801a0f4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801f7ee:	f507 730a 	add.w	r3, r7, #552	; 0x228
 801f7f2:	4618      	mov	r0, r3
 801f7f4:	f7e1 fdd2 	bl	800139c <_ZN6SymbolD1Ev>
}
 801f7f8:	1d3b      	adds	r3, r7, #4
 801f7fa:	681b      	ldr	r3, [r3, #0]
 801f7fc:	4618      	mov	r0, r3
 801f7fe:	f507 7713 	add.w	r7, r7, #588	; 0x24c
 801f802:	46bd      	mov	sp, r7
 801f804:	bd90      	pop	{r4, r7, pc}
 801f806:	bf00      	nop
 801f808:	08029f04 	.word	0x08029f04
 801f80c:	08029ef4 	.word	0x08029ef4
 801f810:	08029eec 	.word	0x08029eec
 801f814:	08029ef8 	.word	0x08029ef8
 801f818:	08029efc 	.word	0x08029efc
 801f81c:	08029f00 	.word	0x08029f00

0801f820 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE13_Rb_tree_implISK_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801f820:	b580      	push	{r7, lr}
 801f822:	b082      	sub	sp, #8
 801f824:	af00      	add	r7, sp, #0
 801f826:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801f828:	6878      	ldr	r0, [r7, #4]
 801f82a:	f000 f8c1 	bl	801f9b0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>
 801f82e:	687b      	ldr	r3, [r7, #4]
 801f830:	4618      	mov	r0, r3
 801f832:	f7f2 fec6 	bl	80125c2 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801f836:	687b      	ldr	r3, [r7, #4]
 801f838:	3304      	adds	r3, #4
 801f83a:	4618      	mov	r0, r3
 801f83c:	f7e1 fc1f 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801f840:	687b      	ldr	r3, [r7, #4]
 801f842:	4618      	mov	r0, r3
 801f844:	3708      	adds	r7, #8
 801f846:	46bd      	mov	sp, r7
 801f848:	bd80      	pop	{r7, pc}

0801f84a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1IRA32_KcSE_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801f84a:	b5b0      	push	{r4, r5, r7, lr}
 801f84c:	b086      	sub	sp, #24
 801f84e:	af00      	add	r7, sp, #0
 801f850:	60f8      	str	r0, [r7, #12]
 801f852:	60b9      	str	r1, [r7, #8]
 801f854:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801f856:	68fc      	ldr	r4, [r7, #12]
 801f858:	68b8      	ldr	r0, [r7, #8]
 801f85a:	f000 f8b5 	bl	801f9c8 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801f85e:	4605      	mov	r5, r0
 801f860:	f107 0314 	add.w	r3, r7, #20
 801f864:	4618      	mov	r0, r3
 801f866:	f003 fd2b 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f86a:	f107 0314 	add.w	r3, r7, #20
 801f86e:	461a      	mov	r2, r3
 801f870:	4629      	mov	r1, r5
 801f872:	4620      	mov	r0, r4
 801f874:	f7e2 fabd 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f878:	f107 0314 	add.w	r3, r7, #20
 801f87c:	4618      	mov	r0, r3
 801f87e:	f003 fd20 	bl	80232c2 <_ZNSaIcED1Ev>
 801f882:	6878      	ldr	r0, [r7, #4]
 801f884:	f000 f8ab 	bl	801f9de <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801f888:	4603      	mov	r3, r0
 801f88a:	681a      	ldr	r2, [r3, #0]
 801f88c:	68fb      	ldr	r3, [r7, #12]
 801f88e:	619a      	str	r2, [r3, #24]
 801f890:	68fb      	ldr	r3, [r7, #12]
 801f892:	4618      	mov	r0, r3
 801f894:	3718      	adds	r7, #24
 801f896:	46bd      	mov	sp, r7
 801f898:	bdb0      	pop	{r4, r5, r7, pc}

0801f89a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaIS9_EEESt4lessIS5_ESaISt4pairIKS5_SD_EEE6insertEOSI_>:
      insert(value_type&& __x)
 801f89a:	b590      	push	{r4, r7, lr}
 801f89c:	b085      	sub	sp, #20
 801f89e:	af00      	add	r7, sp, #0
 801f8a0:	60f8      	str	r0, [r7, #12]
 801f8a2:	60b9      	str	r1, [r7, #8]
 801f8a4:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801f8a6:	68bc      	ldr	r4, [r7, #8]
 801f8a8:	6878      	ldr	r0, [r7, #4]
 801f8aa:	f000 f8a3 	bl	801f9f4 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>
 801f8ae:	4602      	mov	r2, r0
 801f8b0:	68fb      	ldr	r3, [r7, #12]
 801f8b2:	4621      	mov	r1, r4
 801f8b4:	4618      	mov	r0, r3
 801f8b6:	f000 f8a8 	bl	801fa0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>
 801f8ba:	68f8      	ldr	r0, [r7, #12]
 801f8bc:	3714      	adds	r7, #20
 801f8be:	46bd      	mov	sp, r7
 801f8c0:	bd90      	pop	{r4, r7, pc}

0801f8c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 801f8c2:	b580      	push	{r7, lr}
 801f8c4:	b082      	sub	sp, #8
 801f8c6:	af00      	add	r7, sp, #0
 801f8c8:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 801f8ca:	6878      	ldr	r0, [r7, #4]
 801f8cc:	f000 f8ec 	bl	801faa8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801f8d0:	687b      	ldr	r3, [r7, #4]
 801f8d2:	4618      	mov	r0, r3
 801f8d4:	f7f2 fe75 	bl	80125c2 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 801f8d8:	687b      	ldr	r3, [r7, #4]
 801f8da:	3304      	adds	r3, #4
 801f8dc:	4618      	mov	r0, r3
 801f8de:	f7e1 fbce 	bl	800107e <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 801f8e2:	687b      	ldr	r3, [r7, #4]
 801f8e4:	4618      	mov	r0, r3
 801f8e6:	3708      	adds	r7, #8
 801f8e8:	46bd      	mov	sp, r7
 801f8ea:	bd80      	pop	{r7, pc}

0801f8ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801f8ec:	b5b0      	push	{r4, r5, r7, lr}
 801f8ee:	b086      	sub	sp, #24
 801f8f0:	af00      	add	r7, sp, #0
 801f8f2:	60f8      	str	r0, [r7, #12]
 801f8f4:	60b9      	str	r1, [r7, #8]
 801f8f6:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801f8f8:	68fc      	ldr	r4, [r7, #12]
 801f8fa:	68b8      	ldr	r0, [r7, #8]
 801f8fc:	f000 f8e0 	bl	801fac0 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801f900:	4605      	mov	r5, r0
 801f902:	f107 0314 	add.w	r3, r7, #20
 801f906:	4618      	mov	r0, r3
 801f908:	f003 fcda 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f90c:	f107 0314 	add.w	r3, r7, #20
 801f910:	461a      	mov	r2, r3
 801f912:	4629      	mov	r1, r5
 801f914:	4620      	mov	r0, r4
 801f916:	f7e2 fa6c 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f91a:	f107 0314 	add.w	r3, r7, #20
 801f91e:	4618      	mov	r0, r3
 801f920:	f003 fccf 	bl	80232c2 <_ZNSaIcED1Ev>
 801f924:	68fb      	ldr	r3, [r7, #12]
 801f926:	3318      	adds	r3, #24
 801f928:	6879      	ldr	r1, [r7, #4]
 801f92a:	4618      	mov	r0, r3
 801f92c:	f7e1 fd94 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f930:	68fb      	ldr	r3, [r7, #12]
 801f932:	4618      	mov	r0, r3
 801f934:	3718      	adds	r7, #24
 801f936:	46bd      	mov	sp, r7
 801f938:	bdb0      	pop	{r4, r5, r7, pc}

0801f93a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>:
      insert(value_type&& __x)
 801f93a:	b590      	push	{r4, r7, lr}
 801f93c:	b085      	sub	sp, #20
 801f93e:	af00      	add	r7, sp, #0
 801f940:	60f8      	str	r0, [r7, #12]
 801f942:	60b9      	str	r1, [r7, #8]
 801f944:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 801f946:	68bc      	ldr	r4, [r7, #8]
 801f948:	6878      	ldr	r0, [r7, #4]
 801f94a:	f000 f8c4 	bl	801fad6 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>
 801f94e:	4602      	mov	r2, r0
 801f950:	68fb      	ldr	r3, [r7, #12]
 801f952:	4621      	mov	r1, r4
 801f954:	4618      	mov	r0, r3
 801f956:	f000 f8c9 	bl	801faec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>
 801f95a:	68f8      	ldr	r0, [r7, #12]
 801f95c:	3714      	adds	r7, #20
 801f95e:	46bd      	mov	sp, r7
 801f960:	bd90      	pop	{r4, r7, pc}

0801f962 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA5_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801f962:	b5b0      	push	{r4, r5, r7, lr}
 801f964:	b086      	sub	sp, #24
 801f966:	af00      	add	r7, sp, #0
 801f968:	60f8      	str	r0, [r7, #12]
 801f96a:	60b9      	str	r1, [r7, #8]
 801f96c:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 801f96e:	68fc      	ldr	r4, [r7, #12]
 801f970:	68b8      	ldr	r0, [r7, #8]
 801f972:	f7e2 fa33 	bl	8001ddc <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 801f976:	4605      	mov	r5, r0
 801f978:	f107 0314 	add.w	r3, r7, #20
 801f97c:	4618      	mov	r0, r3
 801f97e:	f003 fc9f 	bl	80232c0 <_ZNSaIcEC1Ev>
 801f982:	f107 0314 	add.w	r3, r7, #20
 801f986:	461a      	mov	r2, r3
 801f988:	4629      	mov	r1, r5
 801f98a:	4620      	mov	r0, r4
 801f98c:	f7e2 fa31 	bl	8001df2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801f990:	f107 0314 	add.w	r3, r7, #20
 801f994:	4618      	mov	r0, r3
 801f996:	f003 fc94 	bl	80232c2 <_ZNSaIcED1Ev>
 801f99a:	68fb      	ldr	r3, [r7, #12]
 801f99c:	3318      	adds	r3, #24
 801f99e:	6879      	ldr	r1, [r7, #4]
 801f9a0:	4618      	mov	r0, r3
 801f9a2:	f7e1 fd59 	bl	8001458 <_ZN6SymbolC1ERKS_>
 801f9a6:	68fb      	ldr	r3, [r7, #12]
 801f9a8:	4618      	mov	r0, r3
 801f9aa:	3718      	adds	r7, #24
 801f9ac:	46bd      	mov	sp, r7
 801f9ae:	bdb0      	pop	{r4, r5, r7, pc}

0801f9b0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEEC1Ev>:
 801f9b0:	b580      	push	{r7, lr}
 801f9b2:	b082      	sub	sp, #8
 801f9b4:	af00      	add	r7, sp, #0
 801f9b6:	6078      	str	r0, [r7, #4]
 801f9b8:	6878      	ldr	r0, [r7, #4]
 801f9ba:	f000 f8e6 	bl	801fb8a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>
 801f9be:	687b      	ldr	r3, [r7, #4]
 801f9c0:	4618      	mov	r0, r3
 801f9c2:	3708      	adds	r7, #8
 801f9c4:	46bd      	mov	sp, r7
 801f9c6:	bd80      	pop	{r7, pc}

0801f9c8 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f9c8:	b480      	push	{r7}
 801f9ca:	b083      	sub	sp, #12
 801f9cc:	af00      	add	r7, sp, #0
 801f9ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f9d0:	687b      	ldr	r3, [r7, #4]
 801f9d2:	4618      	mov	r0, r3
 801f9d4:	370c      	adds	r7, #12
 801f9d6:	46bd      	mov	sp, r7
 801f9d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f9dc:	4770      	bx	lr

0801f9de <_ZSt7forwardIPF6SymbolSt6vectorIP10ExpressionSaIS3_EEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801f9de:	b480      	push	{r7}
 801f9e0:	b083      	sub	sp, #12
 801f9e2:	af00      	add	r7, sp, #0
 801f9e4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801f9e6:	687b      	ldr	r3, [r7, #4]
 801f9e8:	4618      	mov	r0, r3
 801f9ea:	370c      	adds	r7, #12
 801f9ec:	46bd      	mov	sp, r7
 801f9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f9f2:	4770      	bx	lr

0801f9f4 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEONSt16remove_referenceIT_E4typeEOSJ_>:
    move(_Tp&& __t) noexcept
 801f9f4:	b480      	push	{r7}
 801f9f6:	b083      	sub	sp, #12
 801f9f8:	af00      	add	r7, sp, #0
 801f9fa:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801f9fc:	687b      	ldr	r3, [r7, #4]
 801f9fe:	4618      	mov	r0, r3
 801fa00:	370c      	adds	r7, #12
 801fa02:	46bd      	mov	sp, r7
 801fa04:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fa08:	4770      	bx	lr

0801fa0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801fa0a:	b5b0      	push	{r4, r5, r7, lr}
 801fa0c:	b08e      	sub	sp, #56	; 0x38
 801fa0e:	af02      	add	r7, sp, #8
 801fa10:	60f8      	str	r0, [r7, #12]
 801fa12:	60b9      	str	r1, [r7, #8]
 801fa14:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801fa16:	f107 031c 	add.w	r3, r7, #28
 801fa1a:	6879      	ldr	r1, [r7, #4]
 801fa1c:	4618      	mov	r0, r3
 801fa1e:	f000 f944 	bl	801fcaa <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801fa22:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801fa24:	f107 0314 	add.w	r3, r7, #20
 801fa28:	68b9      	ldr	r1, [r7, #8]
 801fa2a:	4618      	mov	r0, r3
 801fa2c:	f000 f8b8 	bl	801fba0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801fa30:	69bb      	ldr	r3, [r7, #24]
 801fa32:	2b00      	cmp	r3, #0
 801fa34:	d022      	beq.n	801fa7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801fa36:	f107 0310 	add.w	r3, r7, #16
 801fa3a:	68b9      	ldr	r1, [r7, #8]
 801fa3c:	4618      	mov	r0, r3
 801fa3e:	f000 f940 	bl	801fcc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801fa42:	697c      	ldr	r4, [r7, #20]
 801fa44:	69bd      	ldr	r5, [r7, #24]
 801fa46:	6878      	ldr	r0, [r7, #4]
 801fa48:	f000 f94a 	bl	801fce0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801fa4c:	4602      	mov	r2, r0
 801fa4e:	f107 0310 	add.w	r3, r7, #16
 801fa52:	9300      	str	r3, [sp, #0]
 801fa54:	4613      	mov	r3, r2
 801fa56:	462a      	mov	r2, r5
 801fa58:	4621      	mov	r1, r4
 801fa5a:	68b8      	ldr	r0, [r7, #8]
 801fa5c:	f000 f94b 	bl	801fcf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>
 801fa60:	4603      	mov	r3, r0
 801fa62:	623b      	str	r3, [r7, #32]
		      true);
 801fa64:	2301      	movs	r3, #1
 801fa66:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801fa6a:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801fa6e:	f107 0320 	add.w	r3, r7, #32
 801fa72:	4619      	mov	r1, r3
 801fa74:	68f8      	ldr	r0, [r7, #12]
 801fa76:	f000 f987 	bl	801fd88 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
 801fa7a:	e011      	b.n	801faa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE16_M_insert_uniqueISG_EES6_ISt17_Rb_tree_iteratorISG_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801fa7c:	697a      	ldr	r2, [r7, #20]
 801fa7e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fa82:	4611      	mov	r1, r2
 801fa84:	4618      	mov	r0, r3
 801fa86:	f7ee fe7b 	bl	800e780 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801fa8a:	2300      	movs	r3, #0
 801fa8c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801fa90:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801fa94:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fa98:	4619      	mov	r1, r3
 801fa9a:	68f8      	ldr	r0, [r7, #12]
 801fa9c:	f000 f974 	bl	801fd88 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>
    }
 801faa0:	68f8      	ldr	r0, [r7, #12]
 801faa2:	3730      	adds	r7, #48	; 0x30
 801faa4:	46bd      	mov	sp, r7
 801faa6:	bdb0      	pop	{r4, r5, r7, pc}

0801faa8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 801faa8:	b580      	push	{r7, lr}
 801faaa:	b082      	sub	sp, #8
 801faac:	af00      	add	r7, sp, #0
 801faae:	6078      	str	r0, [r7, #4]
 801fab0:	6878      	ldr	r0, [r7, #4]
 801fab2:	f000 f982 	bl	801fdba <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 801fab6:	687b      	ldr	r3, [r7, #4]
 801fab8:	4618      	mov	r0, r3
 801faba:	3708      	adds	r7, #8
 801fabc:	46bd      	mov	sp, r7
 801fabe:	bd80      	pop	{r7, pc}

0801fac0 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fac0:	b480      	push	{r7}
 801fac2:	b083      	sub	sp, #12
 801fac4:	af00      	add	r7, sp, #0
 801fac6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fac8:	687b      	ldr	r3, [r7, #4]
 801faca:	4618      	mov	r0, r3
 801facc:	370c      	adds	r7, #12
 801face:	46bd      	mov	sp, r7
 801fad0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fad4:	4770      	bx	lr

0801fad6 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>:
    move(_Tp&& __t) noexcept
 801fad6:	b480      	push	{r7}
 801fad8:	b083      	sub	sp, #12
 801fada:	af00      	add	r7, sp, #0
 801fadc:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801fade:	687b      	ldr	r3, [r7, #4]
 801fae0:	4618      	mov	r0, r3
 801fae2:	370c      	adds	r7, #12
 801fae4:	46bd      	mov	sp, r7
 801fae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801faea:	4770      	bx	lr

0801faec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801faec:	b5b0      	push	{r4, r5, r7, lr}
 801faee:	b08e      	sub	sp, #56	; 0x38
 801faf0:	af02      	add	r7, sp, #8
 801faf2:	60f8      	str	r0, [r7, #12]
 801faf4:	60b9      	str	r1, [r7, #8]
 801faf6:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 801faf8:	f107 031c 	add.w	r3, r7, #28
 801fafc:	6879      	ldr	r1, [r7, #4]
 801fafe:	4618      	mov	r0, r3
 801fb00:	f000 f966 	bl	801fdd0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 801fb04:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 801fb06:	f107 0314 	add.w	r3, r7, #20
 801fb0a:	68b9      	ldr	r1, [r7, #8]
 801fb0c:	4618      	mov	r0, r3
 801fb0e:	f7fa f9bc 	bl	8019e8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 801fb12:	69bb      	ldr	r3, [r7, #24]
 801fb14:	2b00      	cmp	r3, #0
 801fb16:	d022      	beq.n	801fb5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 801fb18:	f107 0310 	add.w	r3, r7, #16
 801fb1c:	68b9      	ldr	r1, [r7, #8]
 801fb1e:	4618      	mov	r0, r3
 801fb20:	f000 f962 	bl	801fde8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  return _Res(_M_insert_(__res.first, __res.second,
 801fb24:	697c      	ldr	r4, [r7, #20]
 801fb26:	69bd      	ldr	r5, [r7, #24]
 801fb28:	6878      	ldr	r0, [r7, #4]
 801fb2a:	f000 f96c 	bl	801fe06 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801fb2e:	4602      	mov	r2, r0
 801fb30:	f107 0310 	add.w	r3, r7, #16
 801fb34:	9300      	str	r3, [sp, #0]
 801fb36:	4613      	mov	r3, r2
 801fb38:	462a      	mov	r2, r5
 801fb3a:	4621      	mov	r1, r4
 801fb3c:	68b8      	ldr	r0, [r7, #8]
 801fb3e:	f000 f96d 	bl	801fe1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>
 801fb42:	4603      	mov	r3, r0
 801fb44:	623b      	str	r3, [r7, #32]
		      true);
 801fb46:	2301      	movs	r3, #1
 801fb48:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801fb4c:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801fb50:	f107 0320 	add.w	r3, r7, #32
 801fb54:	4619      	mov	r1, r3
 801fb56:	68f8      	ldr	r0, [r7, #12]
 801fb58:	f000 f9a9 	bl	801feae <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
 801fb5c:	e011      	b.n	801fb82 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801fb5e:	697a      	ldr	r2, [r7, #20]
 801fb60:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fb64:	4611      	mov	r1, r2
 801fb66:	4618      	mov	r0, r3
 801fb68:	f7f9 fee5 	bl	8019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801fb6c:	2300      	movs	r3, #0
 801fb6e:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 801fb72:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801fb76:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801fb7a:	4619      	mov	r1, r3
 801fb7c:	68f8      	ldr	r0, [r7, #12]
 801fb7e:	f000 f996 	bl	801feae <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
    }
 801fb82:	68f8      	ldr	r0, [r7, #12]
 801fb84:	3730      	adds	r7, #48	; 0x30
 801fb86:	46bd      	mov	sp, r7
 801fb88:	bdb0      	pop	{r4, r5, r7, pc}

0801fb8a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801fb8a:	b480      	push	{r7}
 801fb8c:	b083      	sub	sp, #12
 801fb8e:	af00      	add	r7, sp, #0
 801fb90:	6078      	str	r0, [r7, #4]
 801fb92:	687b      	ldr	r3, [r7, #4]
 801fb94:	4618      	mov	r0, r3
 801fb96:	370c      	adds	r7, #12
 801fb98:	46bd      	mov	sp, r7
 801fb9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fb9e:	4770      	bx	lr

0801fba0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801fba0:	b590      	push	{r4, r7, lr}
 801fba2:	b08b      	sub	sp, #44	; 0x2c
 801fba4:	af00      	add	r7, sp, #0
 801fba6:	60f8      	str	r0, [r7, #12]
 801fba8:	60b9      	str	r1, [r7, #8]
 801fbaa:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 801fbac:	68b8      	ldr	r0, [r7, #8]
 801fbae:	f7ee fc0f 	bl	800e3d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_M_beginEv>
 801fbb2:	4603      	mov	r3, r0
 801fbb4:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 801fbb6:	68b8      	ldr	r0, [r7, #8]
 801fbb8:	f7ee fd85 	bl	800e6c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801fbbc:	4603      	mov	r3, r0
 801fbbe:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 801fbc0:	2301      	movs	r3, #1
 801fbc2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 801fbc6:	69bb      	ldr	r3, [r7, #24]
 801fbc8:	2b00      	cmp	r3, #0
 801fbca:	d020      	beq.n	801fc0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 801fbcc:	69bb      	ldr	r3, [r7, #24]
 801fbce:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 801fbd0:	68bc      	ldr	r4, [r7, #8]
 801fbd2:	69bb      	ldr	r3, [r7, #24]
 801fbd4:	4618      	mov	r0, r3
 801fbd6:	f7ee fe9c 	bl	800e912 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt13_Rb_tree_nodeISG_E>
 801fbda:	4603      	mov	r3, r0
 801fbdc:	461a      	mov	r2, r3
 801fbde:	6879      	ldr	r1, [r7, #4]
 801fbe0:	4620      	mov	r0, r4
 801fbe2:	f7e6 ff4c 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801fbe6:	4603      	mov	r3, r0
 801fbe8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 801fbec:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801fbf0:	2b00      	cmp	r3, #0
 801fbf2:	d005      	beq.n	801fc00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x60>
 801fbf4:	69bb      	ldr	r3, [r7, #24]
 801fbf6:	4618      	mov	r0, r3
 801fbf8:	f7ee fd48 	bl	800e68c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE7_S_leftEPSt18_Rb_tree_node_base>
 801fbfc:	4603      	mov	r3, r0
 801fbfe:	e004      	b.n	801fc0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x6a>
 801fc00:	69bb      	ldr	r3, [r7, #24]
 801fc02:	4618      	mov	r0, r3
 801fc04:	f7ee fd36 	bl	800e674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE8_S_rightEPSt18_Rb_tree_node_base>
 801fc08:	4603      	mov	r3, r0
 801fc0a:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 801fc0c:	e7db      	b.n	801fbc6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 801fc0e:	697a      	ldr	r2, [r7, #20]
 801fc10:	f107 0310 	add.w	r3, r7, #16
 801fc14:	4611      	mov	r1, r2
 801fc16:	4618      	mov	r0, r3
 801fc18:	f7ee fdb2 	bl	800e780 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 801fc1c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801fc20:	2b00      	cmp	r3, #0
 801fc22:	d01d      	beq.n	801fc60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 801fc24:	68b8      	ldr	r0, [r7, #8]
 801fc26:	f000 f95b 	bl	801fee0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>
 801fc2a:	4603      	mov	r3, r0
 801fc2c:	61fb      	str	r3, [r7, #28]
 801fc2e:	f107 021c 	add.w	r2, r7, #28
 801fc32:	f107 0310 	add.w	r3, r7, #16
 801fc36:	4611      	mov	r1, r2
 801fc38:	4618      	mov	r0, r3
 801fc3a:	f7ee fd81 	bl	800e740 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEESJ_>
 801fc3e:	4603      	mov	r3, r0
 801fc40:	2b00      	cmp	r3, #0
 801fc42:	d008      	beq.n	801fc56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 801fc44:	f107 0214 	add.w	r2, r7, #20
 801fc48:	f107 0318 	add.w	r3, r7, #24
 801fc4c:	4619      	mov	r1, r3
 801fc4e:	68f8      	ldr	r0, [r7, #12]
 801fc50:	f000 f957 	bl	801ff02 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801fc54:	e025      	b.n	801fca2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 801fc56:	f107 0310 	add.w	r3, r7, #16
 801fc5a:	4618      	mov	r0, r3
 801fc5c:	f000 f96a 	bl	801ff34 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 801fc60:	68bc      	ldr	r4, [r7, #8]
 801fc62:	693b      	ldr	r3, [r7, #16]
 801fc64:	4618      	mov	r0, r3
 801fc66:	f7ee fd7f 	bl	800e768 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801fc6a:	4603      	mov	r3, r0
 801fc6c:	687a      	ldr	r2, [r7, #4]
 801fc6e:	4619      	mov	r1, r3
 801fc70:	4620      	mov	r0, r4
 801fc72:	f7e6 ff04 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801fc76:	4603      	mov	r3, r0
 801fc78:	2b00      	cmp	r3, #0
 801fc7a:	d008      	beq.n	801fc8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 801fc7c:	f107 0214 	add.w	r2, r7, #20
 801fc80:	f107 0318 	add.w	r3, r7, #24
 801fc84:	4619      	mov	r1, r3
 801fc86:	68f8      	ldr	r0, [r7, #12]
 801fc88:	f000 f93b 	bl	801ff02 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>
 801fc8c:	e009      	b.n	801fca2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 801fc8e:	2300      	movs	r3, #0
 801fc90:	623b      	str	r3, [r7, #32]
 801fc92:	f107 0220 	add.w	r2, r7, #32
 801fc96:	f107 0310 	add.w	r3, r7, #16
 801fc9a:	4619      	mov	r1, r3
 801fc9c:	68f8      	ldr	r0, [r7, #12]
 801fc9e:	f7e6 fe50 	bl	8006942 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 801fca2:	68f8      	ldr	r0, [r7, #12]
 801fca4:	372c      	adds	r7, #44	; 0x2c
 801fca6:	46bd      	mov	sp, r7
 801fca8:	bd90      	pop	{r4, r7, pc}

0801fcaa <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>:
      operator()(_Pair& __x) const
 801fcaa:	b480      	push	{r7}
 801fcac:	b083      	sub	sp, #12
 801fcae:	af00      	add	r7, sp, #0
 801fcb0:	6078      	str	r0, [r7, #4]
 801fcb2:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801fcb4:	683b      	ldr	r3, [r7, #0]
 801fcb6:	4618      	mov	r0, r3
 801fcb8:	370c      	adds	r7, #12
 801fcba:	46bd      	mov	sp, r7
 801fcbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fcc0:	4770      	bx	lr

0801fcc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeC1ERSM_>:
	_Alloc_node(_Rb_tree& __t)
 801fcc2:	b480      	push	{r7}
 801fcc4:	b083      	sub	sp, #12
 801fcc6:	af00      	add	r7, sp, #0
 801fcc8:	6078      	str	r0, [r7, #4]
 801fcca:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801fccc:	687b      	ldr	r3, [r7, #4]
 801fcce:	683a      	ldr	r2, [r7, #0]
 801fcd0:	601a      	str	r2, [r3, #0]
 801fcd2:	687b      	ldr	r3, [r7, #4]
 801fcd4:	4618      	mov	r0, r3
 801fcd6:	370c      	adds	r7, #12
 801fcd8:	46bd      	mov	sp, r7
 801fcda:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fcde:	4770      	bx	lr

0801fce0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fce0:	b480      	push	{r7}
 801fce2:	b083      	sub	sp, #12
 801fce4:	af00      	add	r7, sp, #0
 801fce6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fce8:	687b      	ldr	r3, [r7, #4]
 801fcea:	4618      	mov	r0, r3
 801fcec:	370c      	adds	r7, #12
 801fcee:	46bd      	mov	sp, r7
 801fcf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fcf4:	4770      	bx	lr

0801fcf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801fcf6:	b5b0      	push	{r4, r5, r7, lr}
 801fcf8:	b088      	sub	sp, #32
 801fcfa:	af00      	add	r7, sp, #0
 801fcfc:	60f8      	str	r0, [r7, #12]
 801fcfe:	60b9      	str	r1, [r7, #8]
 801fd00:	607a      	str	r2, [r7, #4]
 801fd02:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801fd04:	68bb      	ldr	r3, [r7, #8]
 801fd06:	2b00      	cmp	r3, #0
 801fd08:	d11a      	bne.n	801fd40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 801fd0a:	68f8      	ldr	r0, [r7, #12]
 801fd0c:	f7ee fcdb 	bl	800e6c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_M_endEv>
 801fd10:	4602      	mov	r2, r0
 801fd12:	687b      	ldr	r3, [r7, #4]
 801fd14:	4293      	cmp	r3, r2
 801fd16:	d013      	beq.n	801fd40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801fd18:	68fc      	ldr	r4, [r7, #12]
 801fd1a:	f107 0310 	add.w	r3, r7, #16
 801fd1e:	6839      	ldr	r1, [r7, #0]
 801fd20:	4618      	mov	r0, r3
 801fd22:	f7ff ffc2 	bl	801fcaa <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEclERSG_>
 801fd26:	4605      	mov	r5, r0
 801fd28:	6878      	ldr	r0, [r7, #4]
 801fd2a:	f7ee fd1d 	bl	800e768 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801fd2e:	4603      	mov	r3, r0
 801fd30:	461a      	mov	r2, r3
 801fd32:	4629      	mov	r1, r5
 801fd34:	4620      	mov	r0, r4
 801fd36:	f7e6 fea2 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801fd3a:	4603      	mov	r3, r0
 801fd3c:	2b00      	cmp	r3, #0
 801fd3e:	d001      	beq.n	801fd44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x4e>
 801fd40:	2301      	movs	r3, #1
 801fd42:	e000      	b.n	801fd46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE10_M_insert_ISG_NSM_11_Alloc_nodeEEESt17_Rb_tree_iteratorISG_EPSt18_Rb_tree_node_baseSS_OT_RT0_+0x50>
 801fd44:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801fd46:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801fd48:	6838      	ldr	r0, [r7, #0]
 801fd4a:	f7ff ffc9 	bl	801fce0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801fd4e:	4603      	mov	r3, r0
 801fd50:	4619      	mov	r1, r3
 801fd52:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801fd54:	f000 f8ff 	bl	801ff56 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>
 801fd58:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801fd5a:	68fb      	ldr	r3, [r7, #12]
 801fd5c:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801fd5e:	7ff8      	ldrb	r0, [r7, #31]
 801fd60:	687a      	ldr	r2, [r7, #4]
 801fd62:	69b9      	ldr	r1, [r7, #24]
 801fd64:	f003 fb04 	bl	8023370 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 801fd68:	68fb      	ldr	r3, [r7, #12]
 801fd6a:	695b      	ldr	r3, [r3, #20]
 801fd6c:	1c5a      	adds	r2, r3, #1
 801fd6e:	68fb      	ldr	r3, [r7, #12]
 801fd70:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 801fd72:	f107 0314 	add.w	r3, r7, #20
 801fd76:	69b9      	ldr	r1, [r7, #24]
 801fd78:	4618      	mov	r0, r3
 801fd7a:	f7ee fd01 	bl	800e780 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801fd7e:	697b      	ldr	r3, [r7, #20]
      }
 801fd80:	4618      	mov	r0, r3
 801fd82:	3720      	adds	r7, #32
 801fd84:	46bd      	mov	sp, r7
 801fd86:	bdb0      	pop	{r4, r5, r7, pc}

0801fd88 <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEbEC1ISH_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801fd88:	b580      	push	{r7, lr}
 801fd8a:	b084      	sub	sp, #16
 801fd8c:	af00      	add	r7, sp, #0
 801fd8e:	60f8      	str	r0, [r7, #12]
 801fd90:	60b9      	str	r1, [r7, #8]
 801fd92:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801fd94:	68b8      	ldr	r0, [r7, #8]
 801fd96:	f000 f8f2 	bl	801ff7e <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801fd9a:	4602      	mov	r2, r0
 801fd9c:	68fb      	ldr	r3, [r7, #12]
 801fd9e:	6812      	ldr	r2, [r2, #0]
 801fda0:	601a      	str	r2, [r3, #0]
 801fda2:	6878      	ldr	r0, [r7, #4]
 801fda4:	f7e7 ff58 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801fda8:	4603      	mov	r3, r0
 801fdaa:	781a      	ldrb	r2, [r3, #0]
 801fdac:	68fb      	ldr	r3, [r7, #12]
 801fdae:	711a      	strb	r2, [r3, #4]
 801fdb0:	68fb      	ldr	r3, [r7, #12]
 801fdb2:	4618      	mov	r0, r3
 801fdb4:	3710      	adds	r7, #16
 801fdb6:	46bd      	mov	sp, r7
 801fdb8:	bd80      	pop	{r7, pc}

0801fdba <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 801fdba:	b480      	push	{r7}
 801fdbc:	b083      	sub	sp, #12
 801fdbe:	af00      	add	r7, sp, #0
 801fdc0:	6078      	str	r0, [r7, #4]
 801fdc2:	687b      	ldr	r3, [r7, #4]
 801fdc4:	4618      	mov	r0, r3
 801fdc6:	370c      	adds	r7, #12
 801fdc8:	46bd      	mov	sp, r7
 801fdca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fdce:	4770      	bx	lr

0801fdd0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>:
      operator()(_Pair& __x) const
 801fdd0:	b480      	push	{r7}
 801fdd2:	b083      	sub	sp, #12
 801fdd4:	af00      	add	r7, sp, #0
 801fdd6:	6078      	str	r0, [r7, #4]
 801fdd8:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 801fdda:	683b      	ldr	r3, [r7, #0]
 801fddc:	4618      	mov	r0, r3
 801fdde:	370c      	adds	r7, #12
 801fde0:	46bd      	mov	sp, r7
 801fde2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fde6:	4770      	bx	lr

0801fde8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 801fde8:	b480      	push	{r7}
 801fdea:	b083      	sub	sp, #12
 801fdec:	af00      	add	r7, sp, #0
 801fdee:	6078      	str	r0, [r7, #4]
 801fdf0:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 801fdf2:	687b      	ldr	r3, [r7, #4]
 801fdf4:	683a      	ldr	r2, [r7, #0]
 801fdf6:	601a      	str	r2, [r3, #0]
 801fdf8:	687b      	ldr	r3, [r7, #4]
 801fdfa:	4618      	mov	r0, r3
 801fdfc:	370c      	adds	r7, #12
 801fdfe:	46bd      	mov	sp, r7
 801fe00:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fe04:	4770      	bx	lr

0801fe06 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801fe06:	b480      	push	{r7}
 801fe08:	b083      	sub	sp, #12
 801fe0a:	af00      	add	r7, sp, #0
 801fe0c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801fe0e:	687b      	ldr	r3, [r7, #4]
 801fe10:	4618      	mov	r0, r3
 801fe12:	370c      	adds	r7, #12
 801fe14:	46bd      	mov	sp, r7
 801fe16:	f85d 7b04 	ldr.w	r7, [sp], #4
 801fe1a:	4770      	bx	lr

0801fe1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801fe1c:	b5b0      	push	{r4, r5, r7, lr}
 801fe1e:	b088      	sub	sp, #32
 801fe20:	af00      	add	r7, sp, #0
 801fe22:	60f8      	str	r0, [r7, #12]
 801fe24:	60b9      	str	r1, [r7, #8]
 801fe26:	607a      	str	r2, [r7, #4]
 801fe28:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801fe2a:	68bb      	ldr	r3, [r7, #8]
 801fe2c:	2b00      	cmp	r3, #0
 801fe2e:	d11a      	bne.n	801fe66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 801fe30:	68f8      	ldr	r0, [r7, #12]
 801fe32:	f7f9 fd37 	bl	80198a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801fe36:	4602      	mov	r2, r0
 801fe38:	687b      	ldr	r3, [r7, #4]
 801fe3a:	4293      	cmp	r3, r2
 801fe3c:	d013      	beq.n	801fe66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801fe3e:	68fc      	ldr	r4, [r7, #12]
 801fe40:	f107 0310 	add.w	r3, r7, #16
 801fe44:	6839      	ldr	r1, [r7, #0]
 801fe46:	4618      	mov	r0, r3
 801fe48:	f7ff ffc2 	bl	801fdd0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 801fe4c:	4605      	mov	r5, r0
 801fe4e:	6878      	ldr	r0, [r7, #4]
 801fe50:	f7f9 fd65 	bl	801991e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801fe54:	4603      	mov	r3, r0
 801fe56:	461a      	mov	r2, r3
 801fe58:	4629      	mov	r1, r5
 801fe5a:	4620      	mov	r0, r4
 801fe5c:	f7e6 fe0f 	bl	8006a7e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801fe60:	4603      	mov	r3, r0
 801fe62:	2b00      	cmp	r3, #0
 801fe64:	d001      	beq.n	801fe6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4e>
 801fe66:	2301      	movs	r3, #1
 801fe68:	e000      	b.n	801fe6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x50>
 801fe6a:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801fe6c:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801fe6e:	6838      	ldr	r0, [r7, #0]
 801fe70:	f7ff ffc9 	bl	801fe06 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801fe74:	4603      	mov	r3, r0
 801fe76:	4619      	mov	r1, r3
 801fe78:	6b38      	ldr	r0, [r7, #48]	; 0x30
 801fe7a:	f000 f88b 	bl	801ff94 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 801fe7e:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801fe80:	68fb      	ldr	r3, [r7, #12]
 801fe82:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 801fe84:	7ff8      	ldrb	r0, [r7, #31]
 801fe86:	687a      	ldr	r2, [r7, #4]
 801fe88:	69b9      	ldr	r1, [r7, #24]
 801fe8a:	f003 fa71 	bl	8023370 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 801fe8e:	68fb      	ldr	r3, [r7, #12]
 801fe90:	695b      	ldr	r3, [r3, #20]
 801fe92:	1c5a      	adds	r2, r3, #1
 801fe94:	68fb      	ldr	r3, [r7, #12]
 801fe96:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 801fe98:	f107 0314 	add.w	r3, r7, #20
 801fe9c:	69b9      	ldr	r1, [r7, #24]
 801fe9e:	4618      	mov	r0, r3
 801fea0:	f7f9 fd49 	bl	8019936 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801fea4:	697b      	ldr	r3, [r7, #20]
      }
 801fea6:	4618      	mov	r0, r3
 801fea8:	3720      	adds	r7, #32
 801feaa:	46bd      	mov	sp, r7
 801feac:	bdb0      	pop	{r4, r5, r7, pc}

0801feae <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801feae:	b580      	push	{r7, lr}
 801feb0:	b084      	sub	sp, #16
 801feb2:	af00      	add	r7, sp, #0
 801feb4:	60f8      	str	r0, [r7, #12]
 801feb6:	60b9      	str	r1, [r7, #8]
 801feb8:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801feba:	68b8      	ldr	r0, [r7, #8]
 801febc:	f000 f87e 	bl	801ffbc <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>
 801fec0:	4602      	mov	r2, r0
 801fec2:	68fb      	ldr	r3, [r7, #12]
 801fec4:	6812      	ldr	r2, [r2, #0]
 801fec6:	601a      	str	r2, [r3, #0]
 801fec8:	6878      	ldr	r0, [r7, #4]
 801feca:	f7e7 fec5 	bl	8007c58 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801fece:	4603      	mov	r3, r0
 801fed0:	781a      	ldrb	r2, [r3, #0]
 801fed2:	68fb      	ldr	r3, [r7, #12]
 801fed4:	711a      	strb	r2, [r3, #4]
 801fed6:	68fb      	ldr	r3, [r7, #12]
 801fed8:	4618      	mov	r0, r3
 801feda:	3710      	adds	r7, #16
 801fedc:	46bd      	mov	sp, r7
 801fede:	bd80      	pop	{r7, pc}

0801fee0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 801fee0:	b580      	push	{r7, lr}
 801fee2:	b084      	sub	sp, #16
 801fee4:	af00      	add	r7, sp, #0
 801fee6:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 801fee8:	687b      	ldr	r3, [r7, #4]
 801feea:	68da      	ldr	r2, [r3, #12]
 801feec:	f107 030c 	add.w	r3, r7, #12
 801fef0:	4611      	mov	r1, r2
 801fef2:	4618      	mov	r0, r3
 801fef4:	f7ee fc44 	bl	800e780 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEC1EPSt18_Rb_tree_node_base>
 801fef8:	68fb      	ldr	r3, [r7, #12]
 801fefa:	4618      	mov	r0, r3
 801fefc:	3710      	adds	r7, #16
 801fefe:	46bd      	mov	sp, r7
 801ff00:	bd80      	pop	{r7, pc}

0801ff02 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISF_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801ff02:	b580      	push	{r7, lr}
 801ff04:	b084      	sub	sp, #16
 801ff06:	af00      	add	r7, sp, #0
 801ff08:	60f8      	str	r0, [r7, #12]
 801ff0a:	60b9      	str	r1, [r7, #8]
 801ff0c:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 801ff0e:	68b8      	ldr	r0, [r7, #8]
 801ff10:	f000 f85f 	bl	801ffd2 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 801ff14:	4603      	mov	r3, r0
 801ff16:	681a      	ldr	r2, [r3, #0]
 801ff18:	68fb      	ldr	r3, [r7, #12]
 801ff1a:	601a      	str	r2, [r3, #0]
 801ff1c:	6878      	ldr	r0, [r7, #4]
 801ff1e:	f7e7 fb78 	bl	8007612 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 801ff22:	4603      	mov	r3, r0
 801ff24:	681a      	ldr	r2, [r3, #0]
 801ff26:	68fb      	ldr	r3, [r7, #12]
 801ff28:	605a      	str	r2, [r3, #4]
 801ff2a:	68fb      	ldr	r3, [r7, #12]
 801ff2c:	4618      	mov	r0, r3
 801ff2e:	3710      	adds	r7, #16
 801ff30:	46bd      	mov	sp, r7
 801ff32:	bd80      	pop	{r7, pc}

0801ff34 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 801ff34:	b580      	push	{r7, lr}
 801ff36:	b082      	sub	sp, #8
 801ff38:	af00      	add	r7, sp, #0
 801ff3a:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 801ff3c:	687b      	ldr	r3, [r7, #4]
 801ff3e:	681b      	ldr	r3, [r3, #0]
 801ff40:	4618      	mov	r0, r3
 801ff42:	f003 fa13 	bl	802336c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 801ff46:	4602      	mov	r2, r0
 801ff48:	687b      	ldr	r3, [r7, #4]
 801ff4a:	601a      	str	r2, [r3, #0]
	return *this;
 801ff4c:	687b      	ldr	r3, [r7, #4]
      }
 801ff4e:	4618      	mov	r0, r3
 801ff50:	3708      	adds	r7, #8
 801ff52:	46bd      	mov	sp, r7
 801ff54:	bd80      	pop	{r7, pc}

0801ff56 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_Alloc_nodeclISG_EEPSt13_Rb_tree_nodeISG_EOT_>:
	  operator()(_Arg&& __arg) const
 801ff56:	b590      	push	{r4, r7, lr}
 801ff58:	b083      	sub	sp, #12
 801ff5a:	af00      	add	r7, sp, #0
 801ff5c:	6078      	str	r0, [r7, #4]
 801ff5e:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 801ff60:	687b      	ldr	r3, [r7, #4]
 801ff62:	681c      	ldr	r4, [r3, #0]
 801ff64:	6838      	ldr	r0, [r7, #0]
 801ff66:	f7ff febb 	bl	801fce0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801ff6a:	4603      	mov	r3, r0
 801ff6c:	4619      	mov	r1, r3
 801ff6e:	4620      	mov	r0, r4
 801ff70:	f000 f83a 	bl	801ffe8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>
 801ff74:	4603      	mov	r3, r0
 801ff76:	4618      	mov	r0, r3
 801ff78:	370c      	adds	r7, #12
 801ff7a:	46bd      	mov	sp, r7
 801ff7c:	bd90      	pop	{r4, r7, pc}

0801ff7e <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ff7e:	b480      	push	{r7}
 801ff80:	b083      	sub	sp, #12
 801ff82:	af00      	add	r7, sp, #0
 801ff84:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ff86:	687b      	ldr	r3, [r7, #4]
 801ff88:	4618      	mov	r0, r3
 801ff8a:	370c      	adds	r7, #12
 801ff8c:	46bd      	mov	sp, r7
 801ff8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ff92:	4770      	bx	lr

0801ff94 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 801ff94:	b590      	push	{r4, r7, lr}
 801ff96:	b083      	sub	sp, #12
 801ff98:	af00      	add	r7, sp, #0
 801ff9a:	6078      	str	r0, [r7, #4]
 801ff9c:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 801ff9e:	687b      	ldr	r3, [r7, #4]
 801ffa0:	681c      	ldr	r4, [r3, #0]
 801ffa2:	6838      	ldr	r0, [r7, #0]
 801ffa4:	f7ff ff2f 	bl	801fe06 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801ffa8:	4603      	mov	r3, r0
 801ffaa:	4619      	mov	r1, r3
 801ffac:	4620      	mov	r0, r4
 801ffae:	f000 f832 	bl	8020016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 801ffb2:	4603      	mov	r3, r0
 801ffb4:	4618      	mov	r0, r3
 801ffb6:	370c      	adds	r7, #12
 801ffb8:	46bd      	mov	sp, r7
 801ffba:	bd90      	pop	{r4, r7, pc}

0801ffbc <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ffbc:	b480      	push	{r7}
 801ffbe:	b083      	sub	sp, #12
 801ffc0:	af00      	add	r7, sp, #0
 801ffc2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ffc4:	687b      	ldr	r3, [r7, #4]
 801ffc6:	4618      	mov	r0, r3
 801ffc8:	370c      	adds	r7, #12
 801ffca:	46bd      	mov	sp, r7
 801ffcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ffd0:	4770      	bx	lr

0801ffd2 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ffd2:	b480      	push	{r7}
 801ffd4:	b083      	sub	sp, #12
 801ffd6:	af00      	add	r7, sp, #0
 801ffd8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ffda:	687b      	ldr	r3, [r7, #4]
 801ffdc:	4618      	mov	r0, r3
 801ffde:	370c      	adds	r7, #12
 801ffe0:	46bd      	mov	sp, r7
 801ffe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ffe6:	4770      	bx	lr

0801ffe8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE14_M_create_nodeIJSG_EEEPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_create_node(_Args&&... __args)
 801ffe8:	b580      	push	{r7, lr}
 801ffea:	b084      	sub	sp, #16
 801ffec:	af00      	add	r7, sp, #0
 801ffee:	6078      	str	r0, [r7, #4]
 801fff0:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 801fff2:	6878      	ldr	r0, [r7, #4]
 801fff4:	f000 f826 	bl	8020044 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>
 801fff8:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 801fffa:	6838      	ldr	r0, [r7, #0]
 801fffc:	f7ff fe70 	bl	801fce0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8020000:	4603      	mov	r3, r0
 8020002:	461a      	mov	r2, r3
 8020004:	68f9      	ldr	r1, [r7, #12]
 8020006:	6878      	ldr	r0, [r7, #4]
 8020008:	f000 f82d 	bl	8020066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>
	  return __tmp;
 802000c:	68fb      	ldr	r3, [r7, #12]
	}
 802000e:	4618      	mov	r0, r3
 8020010:	3710      	adds	r7, #16
 8020012:	46bd      	mov	sp, r7
 8020014:	bd80      	pop	{r7, pc}

08020016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8020016:	b580      	push	{r7, lr}
 8020018:	b084      	sub	sp, #16
 802001a:	af00      	add	r7, sp, #0
 802001c:	6078      	str	r0, [r7, #4]
 802001e:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8020020:	6878      	ldr	r0, [r7, #4]
 8020022:	f7f9 fecb 	bl	8019dbc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 8020026:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8020028:	6838      	ldr	r0, [r7, #0]
 802002a:	f7ff feec 	bl	801fe06 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 802002e:	4603      	mov	r3, r0
 8020030:	461a      	mov	r2, r3
 8020032:	68f9      	ldr	r1, [r7, #12]
 8020034:	6878      	ldr	r0, [r7, #4]
 8020036:	f000 f836 	bl	80200a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 802003a:	68fb      	ldr	r3, [r7, #12]
	}
 802003c:	4618      	mov	r0, r3
 802003e:	3710      	adds	r7, #16
 8020040:	46bd      	mov	sp, r7
 8020042:	bd80      	pop	{r7, pc}

08020044 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE11_M_get_nodeEv>:
      _M_get_node()
 8020044:	b580      	push	{r7, lr}
 8020046:	b082      	sub	sp, #8
 8020048:	af00      	add	r7, sp, #0
 802004a:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 802004c:	6878      	ldr	r0, [r7, #4]
 802004e:	f7ee fcde 	bl	800ea0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 8020052:	4603      	mov	r3, r0
 8020054:	2101      	movs	r1, #1
 8020056:	4618      	mov	r0, r3
 8020058:	f000 f845 	bl	80200e6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>
 802005c:	4603      	mov	r3, r0
 802005e:	4618      	mov	r0, r3
 8020060:	3708      	adds	r7, #8
 8020062:	46bd      	mov	sp, r7
 8020064:	bd80      	pop	{r7, pc}

08020066 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE17_M_construct_nodeIJSG_EEEvPSt13_Rb_tree_nodeISG_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8020066:	b5b0      	push	{r4, r5, r7, lr}
 8020068:	b084      	sub	sp, #16
 802006a:	af00      	add	r7, sp, #0
 802006c:	60f8      	str	r0, [r7, #12]
 802006e:	60b9      	str	r1, [r7, #8]
 8020070:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8020072:	68bb      	ldr	r3, [r7, #8]
 8020074:	4619      	mov	r1, r3
 8020076:	202c      	movs	r0, #44	; 0x2c
 8020078:	f7e0 ffef 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 802007c:	68f8      	ldr	r0, [r7, #12]
 802007e:	f7ee fcc6 	bl	800ea0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PF6SymbolSt6vectorIP10ExpressionSaISB_EEEESt10_Select1stISG_ESt4lessIS5_ESaISG_EE21_M_get_Node_allocatorEv>
 8020082:	4604      	mov	r4, r0
 8020084:	68b8      	ldr	r0, [r7, #8]
 8020086:	f7ee f9fc 	bl	800e482 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEE9_M_valptrEv>
 802008a:	4605      	mov	r5, r0
 802008c:	6878      	ldr	r0, [r7, #4]
 802008e:	f7ff fe27 	bl	801fce0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8020092:	4603      	mov	r3, r0
 8020094:	461a      	mov	r2, r3
 8020096:	4629      	mov	r1, r5
 8020098:	4620      	mov	r0, r4
 802009a:	f000 f833 	bl	8020104 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>
	}
 802009e:	bf00      	nop
 80200a0:	3710      	adds	r7, #16
 80200a2:	46bd      	mov	sp, r7
 80200a4:	bdb0      	pop	{r4, r5, r7, pc}

080200a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80200a6:	b5b0      	push	{r4, r5, r7, lr}
 80200a8:	b084      	sub	sp, #16
 80200aa:	af00      	add	r7, sp, #0
 80200ac:	60f8      	str	r0, [r7, #12]
 80200ae:	60b9      	str	r1, [r7, #8]
 80200b0:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 80200b2:	68bb      	ldr	r3, [r7, #8]
 80200b4:	4619      	mov	r1, r3
 80200b6:	2048      	movs	r0, #72	; 0x48
 80200b8:	f7e0 ffcf 	bl	800105a <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 80200bc:	68f8      	ldr	r0, [r7, #12]
 80200be:	f7f9 ffa0 	bl	801a002 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80200c2:	4604      	mov	r4, r0
 80200c4:	68b8      	ldr	r0, [r7, #8]
 80200c6:	f7f9 fae9 	bl	801969c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 80200ca:	4605      	mov	r5, r0
 80200cc:	6878      	ldr	r0, [r7, #4]
 80200ce:	f7ff fe9a 	bl	801fe06 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 80200d2:	4603      	mov	r3, r0
 80200d4:	461a      	mov	r2, r3
 80200d6:	4629      	mov	r1, r5
 80200d8:	4620      	mov	r0, r4
 80200da:	f000 f826 	bl	802012a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>
	}
 80200de:	bf00      	nop
 80200e0:	3710      	adds	r7, #16
 80200e2:	46bd      	mov	sp, r7
 80200e4:	bdb0      	pop	{r4, r5, r7, pc}

080200e6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE8allocateERSJ_j>:
      allocate(allocator_type& __a, size_type __n)
 80200e6:	b580      	push	{r7, lr}
 80200e8:	b082      	sub	sp, #8
 80200ea:	af00      	add	r7, sp, #0
 80200ec:	6078      	str	r0, [r7, #4]
 80200ee:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 80200f0:	2200      	movs	r2, #0
 80200f2:	6839      	ldr	r1, [r7, #0]
 80200f4:	6878      	ldr	r0, [r7, #4]
 80200f6:	f000 f82b 	bl	8020150 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>
 80200fa:	4603      	mov	r3, r0
 80200fc:	4618      	mov	r0, r3
 80200fe:	3708      	adds	r7, #8
 8020100:	46bd      	mov	sp, r7
 8020102:	bd80      	pop	{r7, pc}

08020104 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISC_EEEEEEE9constructISH_JSH_EEEvRSJ_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8020104:	b580      	push	{r7, lr}
 8020106:	b084      	sub	sp, #16
 8020108:	af00      	add	r7, sp, #0
 802010a:	60f8      	str	r0, [r7, #12]
 802010c:	60b9      	str	r1, [r7, #8]
 802010e:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8020110:	6878      	ldr	r0, [r7, #4]
 8020112:	f7ff fde5 	bl	801fce0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 8020116:	4603      	mov	r3, r0
 8020118:	461a      	mov	r2, r3
 802011a:	68b9      	ldr	r1, [r7, #8]
 802011c:	68f8      	ldr	r0, [r7, #12]
 802011e:	f000 f84c 	bl	80201ba <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>
 8020122:	bf00      	nop
 8020124:	3710      	adds	r7, #16
 8020126:	46bd      	mov	sp, r7
 8020128:	bd80      	pop	{r7, pc}

0802012a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 802012a:	b580      	push	{r7, lr}
 802012c:	b084      	sub	sp, #16
 802012e:	af00      	add	r7, sp, #0
 8020130:	60f8      	str	r0, [r7, #12]
 8020132:	60b9      	str	r1, [r7, #8]
 8020134:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8020136:	6878      	ldr	r0, [r7, #4]
 8020138:	f7ff fe65 	bl	801fe06 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 802013c:	4603      	mov	r3, r0
 802013e:	461a      	mov	r2, r3
 8020140:	68b9      	ldr	r1, [r7, #8]
 8020142:	68f8      	ldr	r0, [r7, #12]
 8020144:	f000 f86a 	bl	802021c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>
 8020148:	bf00      	nop
 802014a:	3710      	adds	r7, #16
 802014c:	46bd      	mov	sp, r7
 802014e:	bd80      	pop	{r7, pc}

08020150 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8020150:	b580      	push	{r7, lr}
 8020152:	b084      	sub	sp, #16
 8020154:	af00      	add	r7, sp, #0
 8020156:	60f8      	str	r0, [r7, #12]
 8020158:	60b9      	str	r1, [r7, #8]
 802015a:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 802015c:	68f8      	ldr	r0, [r7, #12]
 802015e:	f000 f875 	bl	802024c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>
 8020162:	4602      	mov	r2, r0
 8020164:	68bb      	ldr	r3, [r7, #8]
 8020166:	4293      	cmp	r3, r2
 8020168:	bf8c      	ite	hi
 802016a:	2301      	movhi	r3, #1
 802016c:	2300      	movls	r3, #0
 802016e:	b2db      	uxtb	r3, r3
 8020170:	2b00      	cmp	r3, #0
 8020172:	d001      	beq.n	8020178 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8020174:	f003 f958 	bl	8023428 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8020178:	68bb      	ldr	r3, [r7, #8]
 802017a:	222c      	movs	r2, #44	; 0x2c
 802017c:	fb02 f303 	mul.w	r3, r2, r3
 8020180:	4618      	mov	r0, r3
 8020182:	f003 f88c 	bl	802329e <_Znwj>
 8020186:	4603      	mov	r3, r0
 8020188:	bf00      	nop
      }
 802018a:	4618      	mov	r0, r3
 802018c:	3710      	adds	r7, #16
 802018e:	46bd      	mov	sp, r7
 8020190:	bd80      	pop	{r7, pc}

08020192 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>:
      constexpr pair(pair&&) = default;
 8020192:	b580      	push	{r7, lr}
 8020194:	b082      	sub	sp, #8
 8020196:	af00      	add	r7, sp, #0
 8020198:	6078      	str	r0, [r7, #4]
 802019a:	6039      	str	r1, [r7, #0]
 802019c:	687b      	ldr	r3, [r7, #4]
 802019e:	683a      	ldr	r2, [r7, #0]
 80201a0:	4611      	mov	r1, r2
 80201a2:	4618      	mov	r0, r3
 80201a4:	f003 fcec 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80201a8:	683b      	ldr	r3, [r7, #0]
 80201aa:	699a      	ldr	r2, [r3, #24]
 80201ac:	687b      	ldr	r3, [r7, #4]
 80201ae:	619a      	str	r2, [r3, #24]
 80201b0:	687b      	ldr	r3, [r7, #4]
 80201b2:	4618      	mov	r0, r3
 80201b4:	3708      	adds	r7, #8
 80201b6:	46bd      	mov	sp, r7
 80201b8:	bd80      	pop	{r7, pc}

080201ba <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE9constructISI_JSI_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80201ba:	b590      	push	{r4, r7, lr}
 80201bc:	b085      	sub	sp, #20
 80201be:	af00      	add	r7, sp, #0
 80201c0:	60f8      	str	r0, [r7, #12]
 80201c2:	60b9      	str	r1, [r7, #8]
 80201c4:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80201c6:	6878      	ldr	r0, [r7, #4]
 80201c8:	f7ff fd8a 	bl	801fce0 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISB_EEEEEOT_RNSt16remove_referenceISH_E4typeE>
 80201cc:	4604      	mov	r4, r0
 80201ce:	68bb      	ldr	r3, [r7, #8]
 80201d0:	4619      	mov	r1, r3
 80201d2:	201c      	movs	r0, #28
 80201d4:	f7e0 ff41 	bl	800105a <_ZnwjPv>
 80201d8:	4603      	mov	r3, r0
 80201da:	4621      	mov	r1, r4
 80201dc:	4618      	mov	r0, r3
 80201de:	f7ff ffd8 	bl	8020192 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISA_EEEEC1EOSF_>
 80201e2:	bf00      	nop
 80201e4:	3714      	adds	r7, #20
 80201e6:	46bd      	mov	sp, r7
 80201e8:	bd90      	pop	{r4, r7, pc}

080201ea <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>:
 80201ea:	b580      	push	{r7, lr}
 80201ec:	b082      	sub	sp, #8
 80201ee:	af00      	add	r7, sp, #0
 80201f0:	6078      	str	r0, [r7, #4]
 80201f2:	6039      	str	r1, [r7, #0]
 80201f4:	687b      	ldr	r3, [r7, #4]
 80201f6:	683a      	ldr	r2, [r7, #0]
 80201f8:	4611      	mov	r1, r2
 80201fa:	4618      	mov	r0, r3
 80201fc:	f003 fcc0 	bl	8023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8020200:	687b      	ldr	r3, [r7, #4]
 8020202:	f103 0218 	add.w	r2, r3, #24
 8020206:	683b      	ldr	r3, [r7, #0]
 8020208:	3318      	adds	r3, #24
 802020a:	4619      	mov	r1, r3
 802020c:	4610      	mov	r0, r2
 802020e:	f7eb ffb5 	bl	800c17c <_ZN6SymbolC1EOS_>
 8020212:	687b      	ldr	r3, [r7, #4]
 8020214:	4618      	mov	r0, r3
 8020216:	3708      	adds	r7, #8
 8020218:	46bd      	mov	sp, r7
 802021a:	bd80      	pop	{r7, pc}

0802021c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 802021c:	b590      	push	{r4, r7, lr}
 802021e:	b085      	sub	sp, #20
 8020220:	af00      	add	r7, sp, #0
 8020222:	60f8      	str	r0, [r7, #12]
 8020224:	60b9      	str	r1, [r7, #8]
 8020226:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8020228:	6878      	ldr	r0, [r7, #4]
 802022a:	f7ff fdec 	bl	801fe06 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 802022e:	4604      	mov	r4, r0
 8020230:	68bb      	ldr	r3, [r7, #8]
 8020232:	4619      	mov	r1, r3
 8020234:	2038      	movs	r0, #56	; 0x38
 8020236:	f7e0 ff10 	bl	800105a <_ZnwjPv>
 802023a:	4603      	mov	r3, r0
 802023c:	4621      	mov	r1, r4
 802023e:	4618      	mov	r0, r3
 8020240:	f7ff ffd3 	bl	80201ea <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>
 8020244:	bf00      	nop
 8020246:	3714      	adds	r7, #20
 8020248:	46bd      	mov	sp, r7
 802024a:	bd90      	pop	{r4, r7, pc}

0802024c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 802024c:	b480      	push	{r7}
 802024e:	b083      	sub	sp, #12
 8020250:	af00      	add	r7, sp, #0
 8020252:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8020254:	4b03      	ldr	r3, [pc, #12]	; (8020264 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPF6SymbolSt6vectorIP10ExpressionSaISD_EEEEEE8max_sizeEv+0x18>)
      }
 8020256:	4618      	mov	r0, r3
 8020258:	370c      	adds	r7, #12
 802025a:	46bd      	mov	sp, r7
 802025c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020260:	4770      	bx	lr
 8020262:	bf00      	nop
 8020264:	02e8ba2e 	.word	0x02e8ba2e

08020268 <_Z41__static_initialization_and_destruction_0ii>:
 8020268:	b590      	push	{r4, r7, lr}
 802026a:	b0e7      	sub	sp, #412	; 0x19c
 802026c:	af02      	add	r7, sp, #8
 802026e:	1d3b      	adds	r3, r7, #4
 8020270:	6018      	str	r0, [r3, #0]
 8020272:	463b      	mov	r3, r7
 8020274:	6019      	str	r1, [r3, #0]
 8020276:	1d3b      	adds	r3, r7, #4
 8020278:	681b      	ldr	r3, [r3, #0]
 802027a:	2b01      	cmp	r3, #1
 802027c:	f040 819d 	bne.w	80205ba <_Z41__static_initialization_and_destruction_0ii+0x352>
 8020280:	463b      	mov	r3, r7
 8020282:	681b      	ldr	r3, [r3, #0]
 8020284:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8020288:	4293      	cmp	r3, r2
 802028a:	f040 8196 	bne.w	80205ba <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 802028e:	f107 0314 	add.w	r3, r7, #20
 8020292:	4618      	mov	r0, r3
 8020294:	2322      	movs	r3, #34	; 0x22
 8020296:	461a      	mov	r2, r3
 8020298:	2100      	movs	r1, #0
 802029a:	f004 fcef 	bl	8024c7c <memset>
 802029e:	f107 0314 	add.w	r3, r7, #20
 80202a2:	223a      	movs	r2, #58	; 0x3a
 80202a4:	701a      	strb	r2, [r3, #0]
 80202a6:	f107 0314 	add.w	r3, r7, #20
 80202aa:	2201      	movs	r2, #1
 80202ac:	705a      	strb	r2, [r3, #1]
 80202ae:	f107 0314 	add.w	r3, r7, #20
 80202b2:	220a      	movs	r2, #10
 80202b4:	709a      	strb	r2, [r3, #2]
 80202b6:	f107 0314 	add.w	r3, r7, #20
 80202ba:	220a      	movs	r2, #10
 80202bc:	70da      	strb	r2, [r3, #3]
 80202be:	f107 0314 	add.w	r3, r7, #20
 80202c2:	222c      	movs	r2, #44	; 0x2c
 80202c4:	711a      	strb	r2, [r3, #4]
 80202c6:	f107 0314 	add.w	r3, r7, #20
 80202ca:	220c      	movs	r2, #12
 80202cc:	715a      	strb	r2, [r3, #5]
 80202ce:	f107 0314 	add.w	r3, r7, #20
 80202d2:	222e      	movs	r2, #46	; 0x2e
 80202d4:	719a      	strb	r2, [r3, #6]
 80202d6:	f107 0314 	add.w	r3, r7, #20
 80202da:	220b      	movs	r2, #11
 80202dc:	71da      	strb	r2, [r3, #7]
 80202de:	f107 0314 	add.w	r3, r7, #20
 80202e2:	225b      	movs	r2, #91	; 0x5b
 80202e4:	721a      	strb	r2, [r3, #8]
 80202e6:	f107 0314 	add.w	r3, r7, #20
 80202ea:	220d      	movs	r2, #13
 80202ec:	725a      	strb	r2, [r3, #9]
 80202ee:	f107 0314 	add.w	r3, r7, #20
 80202f2:	225d      	movs	r2, #93	; 0x5d
 80202f4:	729a      	strb	r2, [r3, #10]
 80202f6:	f107 0314 	add.w	r3, r7, #20
 80202fa:	220e      	movs	r2, #14
 80202fc:	72da      	strb	r2, [r3, #11]
 80202fe:	f107 0314 	add.w	r3, r7, #20
 8020302:	227c      	movs	r2, #124	; 0x7c
 8020304:	731a      	strb	r2, [r3, #12]
 8020306:	f107 0314 	add.w	r3, r7, #20
 802030a:	2215      	movs	r2, #21
 802030c:	735a      	strb	r2, [r3, #13]
 802030e:	f107 0314 	add.w	r3, r7, #20
 8020312:	2226      	movs	r2, #38	; 0x26
 8020314:	739a      	strb	r2, [r3, #14]
 8020316:	f107 0314 	add.w	r3, r7, #20
 802031a:	2216      	movs	r2, #22
 802031c:	73da      	strb	r2, [r3, #15]
 802031e:	f107 0314 	add.w	r3, r7, #20
 8020322:	222b      	movs	r2, #43	; 0x2b
 8020324:	741a      	strb	r2, [r3, #16]
 8020326:	f107 0314 	add.w	r3, r7, #20
 802032a:	221f      	movs	r2, #31
 802032c:	745a      	strb	r2, [r3, #17]
 802032e:	f107 0314 	add.w	r3, r7, #20
 8020332:	222d      	movs	r2, #45	; 0x2d
 8020334:	749a      	strb	r2, [r3, #18]
 8020336:	f107 0314 	add.w	r3, r7, #20
 802033a:	2220      	movs	r2, #32
 802033c:	74da      	strb	r2, [r3, #19]
 802033e:	f107 0314 	add.w	r3, r7, #20
 8020342:	222a      	movs	r2, #42	; 0x2a
 8020344:	751a      	strb	r2, [r3, #20]
 8020346:	f107 0314 	add.w	r3, r7, #20
 802034a:	2221      	movs	r2, #33	; 0x21
 802034c:	755a      	strb	r2, [r3, #21]
 802034e:	f107 0314 	add.w	r3, r7, #20
 8020352:	222f      	movs	r2, #47	; 0x2f
 8020354:	759a      	strb	r2, [r3, #22]
 8020356:	f107 0314 	add.w	r3, r7, #20
 802035a:	2222      	movs	r2, #34	; 0x22
 802035c:	75da      	strb	r2, [r3, #23]
 802035e:	f107 0314 	add.w	r3, r7, #20
 8020362:	225e      	movs	r2, #94	; 0x5e
 8020364:	761a      	strb	r2, [r3, #24]
 8020366:	f107 0314 	add.w	r3, r7, #20
 802036a:	2223      	movs	r2, #35	; 0x23
 802036c:	765a      	strb	r2, [r3, #25]
 802036e:	f107 0314 	add.w	r3, r7, #20
 8020372:	2225      	movs	r2, #37	; 0x25
 8020374:	769a      	strb	r2, [r3, #26]
 8020376:	f107 0314 	add.w	r3, r7, #20
 802037a:	2224      	movs	r2, #36	; 0x24
 802037c:	76da      	strb	r2, [r3, #27]
 802037e:	f107 0314 	add.w	r3, r7, #20
 8020382:	2228      	movs	r2, #40	; 0x28
 8020384:	771a      	strb	r2, [r3, #28]
 8020386:	f107 0314 	add.w	r3, r7, #20
 802038a:	2226      	movs	r2, #38	; 0x26
 802038c:	775a      	strb	r2, [r3, #29]
 802038e:	f107 0314 	add.w	r3, r7, #20
 8020392:	2229      	movs	r2, #41	; 0x29
 8020394:	779a      	strb	r2, [r3, #30]
 8020396:	f107 0314 	add.w	r3, r7, #20
 802039a:	2227      	movs	r2, #39	; 0x27
 802039c:	77da      	strb	r2, [r3, #31]
 802039e:	f107 0314 	add.w	r3, r7, #20
 80203a2:	2225      	movs	r2, #37	; 0x25
 80203a4:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80203a8:	f107 030c 	add.w	r3, r7, #12
 80203ac:	f107 0214 	add.w	r2, r7, #20
 80203b0:	601a      	str	r2, [r3, #0]
 80203b2:	f107 030c 	add.w	r3, r7, #12
 80203b6:	2211      	movs	r2, #17
 80203b8:	605a      	str	r2, [r3, #4]
 80203ba:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80203be:	4618      	mov	r0, r3
 80203c0:	f7e1 fcc4 	bl	8001d4c <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80203c4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80203c8:	f107 020c 	add.w	r2, r7, #12
 80203cc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80203d0:	9300      	str	r3, [sp, #0]
 80203d2:	460b      	mov	r3, r1
 80203d4:	ca06      	ldmia	r2, {r1, r2}
 80203d6:	4885      	ldr	r0, [pc, #532]	; (80205ec <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80203d8:	f7e1 fcd0 	bl	8001d7c <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80203dc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80203e0:	4618      	mov	r0, r3
 80203e2:	f7e1 fcbf 	bl	8001d64 <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80203e6:	2305      	movs	r3, #5
 80203e8:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80203ec:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80203f0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80203f4:	497e      	ldr	r1, [pc, #504]	; (80205f0 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80203f6:	4618      	mov	r0, r3
 80203f8:	f7e0 fe7e 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80203fc:	2306      	movs	r3, #6
 80203fe:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8020402:	f207 1263 	addw	r2, r7, #355	; 0x163
 8020406:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802040a:	331c      	adds	r3, #28
 802040c:	4979      	ldr	r1, [pc, #484]	; (80205f4 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 802040e:	4618      	mov	r0, r3
 8020410:	f7e0 fe9a 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8020414:	2307      	movs	r3, #7
 8020416:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 802041a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 802041e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020422:	3338      	adds	r3, #56	; 0x38
 8020424:	4974      	ldr	r1, [pc, #464]	; (80205f8 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8020426:	4618      	mov	r0, r3
 8020428:	f7e0 fe8e 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 802042c:	2308      	movs	r3, #8
 802042e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8020432:	f207 1265 	addw	r2, r7, #357	; 0x165
 8020436:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802043a:	3354      	adds	r3, #84	; 0x54
 802043c:	496f      	ldr	r1, [pc, #444]	; (80205fc <_Z41__static_initialization_and_destruction_0ii+0x394>)
 802043e:	4618      	mov	r0, r3
 8020440:	f7e0 fe5a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8020444:	2309      	movs	r3, #9
 8020446:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 802044a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 802044e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020452:	3370      	adds	r3, #112	; 0x70
 8020454:	496a      	ldr	r1, [pc, #424]	; (8020600 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8020456:	4618      	mov	r0, r3
 8020458:	f7e0 fe9e 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 802045c:	2310      	movs	r3, #16
 802045e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8020462:	f207 1267 	addw	r2, r7, #359	; 0x167
 8020466:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802046a:	338c      	adds	r3, #140	; 0x8c
 802046c:	4965      	ldr	r1, [pc, #404]	; (8020604 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 802046e:	4618      	mov	r0, r3
 8020470:	f7e0 feba 	bl	80011e8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8020474:	2311      	movs	r3, #17
 8020476:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 802047a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 802047e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8020482:	33a8      	adds	r3, #168	; 0xa8
 8020484:	4960      	ldr	r1, [pc, #384]	; (8020608 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8020486:	4618      	mov	r0, r3
 8020488:	f7e0 fe86 	bl	8001198 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 802048c:	2312      	movs	r3, #18
 802048e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8020492:	f207 1269 	addw	r2, r7, #361	; 0x169
 8020496:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802049a:	33c4      	adds	r3, #196	; 0xc4
 802049c:	495b      	ldr	r1, [pc, #364]	; (802060c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 802049e:	4618      	mov	r0, r3
 80204a0:	f7e0 fe2a 	bl	80010f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 80204a4:	2313      	movs	r3, #19
 80204a6:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 80204aa:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 80204ae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80204b2:	33e0      	adds	r3, #224	; 0xe0
 80204b4:	4956      	ldr	r1, [pc, #344]	; (8020610 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80204b6:	4618      	mov	r0, r3
 80204b8:	f7e0 fe46 	bl	8001148 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80204bc:	2314      	movs	r3, #20
 80204be:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80204c2:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80204c6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80204ca:	33fc      	adds	r3, #252	; 0xfc
 80204cc:	4951      	ldr	r1, [pc, #324]	; (8020614 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80204ce:	4618      	mov	r0, r3
 80204d0:	f7e0 feb2 	bl	8001238 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80204d4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80204d8:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80204dc:	601a      	str	r2, [r3, #0]
 80204de:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80204e2:	220a      	movs	r2, #10
 80204e4:	605a      	str	r2, [r3, #4]
 80204e6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80204ea:	4618      	mov	r0, r3
 80204ec:	f7e1 fcd3 	bl	8001e96 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80204f0:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80204f4:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80204f8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80204fc:	9300      	str	r3, [sp, #0]
 80204fe:	460b      	mov	r3, r1
 8020500:	ca06      	ldmia	r2, {r1, r2}
 8020502:	4845      	ldr	r0, [pc, #276]	; (8020618 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8020504:	f7e1 fcdf 	bl	8001ec6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8020508:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 802050c:	4618      	mov	r0, r3
 802050e:	f7e1 fcce 	bl	8001eae <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8020512:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8020516:	f504 748c 	add.w	r4, r4, #280	; 0x118
 802051a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 802051e:	429c      	cmp	r4, r3
 8020520:	d004      	beq.n	802052c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8020522:	3c1c      	subs	r4, #28
 8020524:	4620      	mov	r0, r4
 8020526:	f7e0 fdda 	bl	80010de <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 802052a:	e7f6      	b.n	802051a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 802052c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8020530:	2200      	movs	r2, #0
 8020532:	601a      	str	r2, [r3, #0]
 8020534:	605a      	str	r2, [r3, #4]
 8020536:	609a      	str	r2, [r3, #8]
 8020538:	233c      	movs	r3, #60	; 0x3c
 802053a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 802053e:	231b      	movs	r3, #27
 8020540:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8020544:	231c      	movs	r3, #28
 8020546:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 802054a:	233e      	movs	r3, #62	; 0x3e
 802054c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8020550:	2319      	movs	r3, #25
 8020552:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8020556:	231a      	movs	r3, #26
 8020558:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 802055c:	233d      	movs	r3, #61	; 0x3d
 802055e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8020562:	2318      	movs	r3, #24
 8020564:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8020568:	231d      	movs	r3, #29
 802056a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 802056e:	2321      	movs	r3, #33	; 0x21
 8020570:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8020574:	2317      	movs	r3, #23
 8020576:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 802057a:	231e      	movs	r3, #30
 802057c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8020580:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8020584:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8020588:	2304      	movs	r3, #4
 802058a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 802058e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8020592:	4618      	mov	r0, r3
 8020594:	f7e1 fcc7 	bl	8001f26 <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8020598:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 802059c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80205a0:	9300      	str	r3, [sp, #0]
 80205a2:	4613      	mov	r3, r2
 80205a4:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 80205a8:	ca06      	ldmia	r2, {r1, r2}
 80205aa:	481c      	ldr	r0, [pc, #112]	; (802061c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80205ac:	f7e1 fcd3 	bl	8001f56 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80205b0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80205b4:	4618      	mov	r0, r3
 80205b6:	f7e1 fcc2 	bl	8001f3e <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80205ba:	1d3b      	adds	r3, r7, #4
 80205bc:	681b      	ldr	r3, [r3, #0]
 80205be:	2b00      	cmp	r3, #0
 80205c0:	d10e      	bne.n	80205e0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80205c2:	463b      	mov	r3, r7
 80205c4:	681b      	ldr	r3, [r3, #0]
 80205c6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80205ca:	4293      	cmp	r3, r2
 80205cc:	d108      	bne.n	80205e0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80205ce:	4813      	ldr	r0, [pc, #76]	; (802061c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80205d0:	f7e9 f930 	bl	8009834 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80205d4:	4810      	ldr	r0, [pc, #64]	; (8020618 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80205d6:	f7e9 f93a 	bl	800984e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80205da:	4804      	ldr	r0, [pc, #16]	; (80205ec <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80205dc:	f7e9 f944 	bl	8009868 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80205e0:	bf00      	nop
 80205e2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80205e6:	46bd      	mov	sp, r7
 80205e8:	bd90      	pop	{r4, r7, pc}
 80205ea:	bf00      	nop
 80205ec:	20000740 	.word	0x20000740
 80205f0:	08029f68 	.word	0x08029f68
 80205f4:	08029f70 	.word	0x08029f70
 80205f8:	08029f78 	.word	0x08029f78
 80205fc:	08029f80 	.word	0x08029f80
 8020600:	08029f88 	.word	0x08029f88
 8020604:	08029f90 	.word	0x08029f90
 8020608:	08029f94 	.word	0x08029f94
 802060c:	08029f9c 	.word	0x08029f9c
 8020610:	08029fa4 	.word	0x08029fa4
 8020614:	08029fac 	.word	0x08029fac
 8020618:	20000758 	.word	0x20000758
 802061c:	20000770 	.word	0x20000770

08020620 <_GLOBAL__sub_I__ZN16Function_handlerC2Ev>:
 8020620:	b580      	push	{r7, lr}
 8020622:	af00      	add	r7, sp, #0
 8020624:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8020628:	2001      	movs	r0, #1
 802062a:	f7ff fe1d 	bl	8020268 <_Z41__static_initialization_and_destruction_0ii>
 802062e:	bd80      	pop	{r7, pc}

08020630 <_GLOBAL__sub_D__ZN16Function_handlerC2Ev>:
 8020630:	b580      	push	{r7, lr}
 8020632:	af00      	add	r7, sp, #0
 8020634:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8020638:	2000      	movs	r0, #0
 802063a:	f7ff fe15 	bl	8020268 <_Z41__static_initialization_and_destruction_0ii>
 802063e:	bd80      	pop	{r7, pc}

08020640 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8020640:	f8df d034 	ldr.w	sp, [pc, #52]	; 8020678 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8020644:	480d      	ldr	r0, [pc, #52]	; (802067c <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8020646:	490e      	ldr	r1, [pc, #56]	; (8020680 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8020648:	4a0e      	ldr	r2, [pc, #56]	; (8020684 <LoopFillZerobss+0x1e>)
  movs r3, #0
 802064a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 802064c:	e002      	b.n	8020654 <LoopCopyDataInit>

0802064e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 802064e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8020650:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8020652:	3304      	adds	r3, #4

08020654 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8020654:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8020656:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8020658:	d3f9      	bcc.n	802064e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 802065a:	4a0b      	ldr	r2, [pc, #44]	; (8020688 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 802065c:	4c0b      	ldr	r4, [pc, #44]	; (802068c <LoopFillZerobss+0x26>)
  movs r3, #0
 802065e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8020660:	e001      	b.n	8020666 <LoopFillZerobss>

08020662 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8020662:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8020664:	3204      	adds	r2, #4

08020666 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8020666:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8020668:	d3fb      	bcc.n	8020662 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 802066a:	f7fe fb67 	bl	801ed3c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 802066e:	f004 fa69 	bl	8024b44 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8020672:	f7fd fd0d 	bl	801e090 <main>
  bx  lr    
 8020676:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8020678:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 802067c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8020680:	200001e8 	.word	0x200001e8
  ldr r2, =_sidata
 8020684:	0802a70c 	.word	0x0802a70c
  ldr r2, =_sbss
 8020688:	200001e8 	.word	0x200001e8
  ldr r4, =_ebss
 802068c:	200008ec 	.word	0x200008ec

08020690 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8020690:	e7fe      	b.n	8020690 <ADC_IRQHandler>

08020692 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8020692:	b580      	push	{r7, lr}
 8020694:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8020696:	2003      	movs	r0, #3
 8020698:	f000 f94c 	bl	8020934 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 802069c:	200f      	movs	r0, #15
 802069e:	f000 f805 	bl	80206ac <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 80206a2:	f7fe f9e1 	bl	801ea68 <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
 80206a6:	2300      	movs	r3, #0
}
 80206a8:	4618      	mov	r0, r3
 80206aa:	bd80      	pop	{r7, pc}

080206ac <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80206ac:	b580      	push	{r7, lr}
 80206ae:	b082      	sub	sp, #8
 80206b0:	af00      	add	r7, sp, #0
 80206b2:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80206b4:	4b12      	ldr	r3, [pc, #72]	; (8020700 <HAL_InitTick+0x54>)
 80206b6:	681a      	ldr	r2, [r3, #0]
 80206b8:	4b12      	ldr	r3, [pc, #72]	; (8020704 <HAL_InitTick+0x58>)
 80206ba:	781b      	ldrb	r3, [r3, #0]
 80206bc:	4619      	mov	r1, r3
 80206be:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80206c2:	fbb3 f3f1 	udiv	r3, r3, r1
 80206c6:	fbb2 f3f3 	udiv	r3, r2, r3
 80206ca:	4618      	mov	r0, r3
 80206cc:	f000 f967 	bl	802099e <HAL_SYSTICK_Config>
 80206d0:	4603      	mov	r3, r0
 80206d2:	2b00      	cmp	r3, #0
 80206d4:	d001      	beq.n	80206da <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80206d6:	2301      	movs	r3, #1
 80206d8:	e00e      	b.n	80206f8 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80206da:	687b      	ldr	r3, [r7, #4]
 80206dc:	2b0f      	cmp	r3, #15
 80206de:	d80a      	bhi.n	80206f6 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80206e0:	2200      	movs	r2, #0
 80206e2:	6879      	ldr	r1, [r7, #4]
 80206e4:	f04f 30ff 	mov.w	r0, #4294967295
 80206e8:	f000 f92f 	bl	802094a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80206ec:	4a06      	ldr	r2, [pc, #24]	; (8020708 <HAL_InitTick+0x5c>)
 80206ee:	687b      	ldr	r3, [r7, #4]
 80206f0:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80206f2:	2300      	movs	r3, #0
 80206f4:	e000      	b.n	80206f8 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80206f6:	2301      	movs	r3, #1
}
 80206f8:	4618      	mov	r0, r3
 80206fa:	3708      	adds	r7, #8
 80206fc:	46bd      	mov	sp, r7
 80206fe:	bd80      	pop	{r7, pc}
 8020700:	20000004 	.word	0x20000004
 8020704:	2000000c 	.word	0x2000000c
 8020708:	20000008 	.word	0x20000008

0802070c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 802070c:	b480      	push	{r7}
 802070e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8020710:	4b06      	ldr	r3, [pc, #24]	; (802072c <HAL_IncTick+0x20>)
 8020712:	781b      	ldrb	r3, [r3, #0]
 8020714:	461a      	mov	r2, r3
 8020716:	4b06      	ldr	r3, [pc, #24]	; (8020730 <HAL_IncTick+0x24>)
 8020718:	681b      	ldr	r3, [r3, #0]
 802071a:	4413      	add	r3, r2
 802071c:	4a04      	ldr	r2, [pc, #16]	; (8020730 <HAL_IncTick+0x24>)
 802071e:	6013      	str	r3, [r2, #0]
}
 8020720:	bf00      	nop
 8020722:	46bd      	mov	sp, r7
 8020724:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020728:	4770      	bx	lr
 802072a:	bf00      	nop
 802072c:	2000000c 	.word	0x2000000c
 8020730:	200008d8 	.word	0x200008d8

08020734 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8020734:	b480      	push	{r7}
 8020736:	af00      	add	r7, sp, #0
  return uwTick;
 8020738:	4b03      	ldr	r3, [pc, #12]	; (8020748 <HAL_GetTick+0x14>)
 802073a:	681b      	ldr	r3, [r3, #0]
}
 802073c:	4618      	mov	r0, r3
 802073e:	46bd      	mov	sp, r7
 8020740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020744:	4770      	bx	lr
 8020746:	bf00      	nop
 8020748:	200008d8 	.word	0x200008d8

0802074c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 802074c:	b580      	push	{r7, lr}
 802074e:	b084      	sub	sp, #16
 8020750:	af00      	add	r7, sp, #0
 8020752:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8020754:	f7ff ffee 	bl	8020734 <HAL_GetTick>
 8020758:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 802075a:	687b      	ldr	r3, [r7, #4]
 802075c:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 802075e:	68fb      	ldr	r3, [r7, #12]
 8020760:	f1b3 3fff 	cmp.w	r3, #4294967295
 8020764:	d005      	beq.n	8020772 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8020766:	4b0a      	ldr	r3, [pc, #40]	; (8020790 <HAL_Delay+0x44>)
 8020768:	781b      	ldrb	r3, [r3, #0]
 802076a:	461a      	mov	r2, r3
 802076c:	68fb      	ldr	r3, [r7, #12]
 802076e:	4413      	add	r3, r2
 8020770:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8020772:	bf00      	nop
 8020774:	f7ff ffde 	bl	8020734 <HAL_GetTick>
 8020778:	4602      	mov	r2, r0
 802077a:	68bb      	ldr	r3, [r7, #8]
 802077c:	1ad3      	subs	r3, r2, r3
 802077e:	68fa      	ldr	r2, [r7, #12]
 8020780:	429a      	cmp	r2, r3
 8020782:	d8f7      	bhi.n	8020774 <HAL_Delay+0x28>
  {
  }
}
 8020784:	bf00      	nop
 8020786:	bf00      	nop
 8020788:	3710      	adds	r7, #16
 802078a:	46bd      	mov	sp, r7
 802078c:	bd80      	pop	{r7, pc}
 802078e:	bf00      	nop
 8020790:	2000000c 	.word	0x2000000c

08020794 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8020794:	b480      	push	{r7}
 8020796:	b085      	sub	sp, #20
 8020798:	af00      	add	r7, sp, #0
 802079a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 802079c:	687b      	ldr	r3, [r7, #4]
 802079e:	f003 0307 	and.w	r3, r3, #7
 80207a2:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80207a4:	4b0b      	ldr	r3, [pc, #44]	; (80207d4 <__NVIC_SetPriorityGrouping+0x40>)
 80207a6:	68db      	ldr	r3, [r3, #12]
 80207a8:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80207aa:	68ba      	ldr	r2, [r7, #8]
 80207ac:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80207b0:	4013      	ands	r3, r2
 80207b2:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80207b4:	68fb      	ldr	r3, [r7, #12]
 80207b6:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80207b8:	68bb      	ldr	r3, [r7, #8]
 80207ba:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 80207bc:	4b06      	ldr	r3, [pc, #24]	; (80207d8 <__NVIC_SetPriorityGrouping+0x44>)
 80207be:	4313      	orrs	r3, r2
 80207c0:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80207c2:	4a04      	ldr	r2, [pc, #16]	; (80207d4 <__NVIC_SetPriorityGrouping+0x40>)
 80207c4:	68bb      	ldr	r3, [r7, #8]
 80207c6:	60d3      	str	r3, [r2, #12]
}
 80207c8:	bf00      	nop
 80207ca:	3714      	adds	r7, #20
 80207cc:	46bd      	mov	sp, r7
 80207ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80207d2:	4770      	bx	lr
 80207d4:	e000ed00 	.word	0xe000ed00
 80207d8:	05fa0000 	.word	0x05fa0000

080207dc <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80207dc:	b480      	push	{r7}
 80207de:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80207e0:	4b04      	ldr	r3, [pc, #16]	; (80207f4 <__NVIC_GetPriorityGrouping+0x18>)
 80207e2:	68db      	ldr	r3, [r3, #12]
 80207e4:	0a1b      	lsrs	r3, r3, #8
 80207e6:	f003 0307 	and.w	r3, r3, #7
}
 80207ea:	4618      	mov	r0, r3
 80207ec:	46bd      	mov	sp, r7
 80207ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80207f2:	4770      	bx	lr
 80207f4:	e000ed00 	.word	0xe000ed00

080207f8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80207f8:	b480      	push	{r7}
 80207fa:	b083      	sub	sp, #12
 80207fc:	af00      	add	r7, sp, #0
 80207fe:	4603      	mov	r3, r0
 8020800:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8020802:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020806:	2b00      	cmp	r3, #0
 8020808:	db0b      	blt.n	8020822 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 802080a:	79fb      	ldrb	r3, [r7, #7]
 802080c:	f003 021f 	and.w	r2, r3, #31
 8020810:	4907      	ldr	r1, [pc, #28]	; (8020830 <__NVIC_EnableIRQ+0x38>)
 8020812:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020816:	095b      	lsrs	r3, r3, #5
 8020818:	2001      	movs	r0, #1
 802081a:	fa00 f202 	lsl.w	r2, r0, r2
 802081e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8020822:	bf00      	nop
 8020824:	370c      	adds	r7, #12
 8020826:	46bd      	mov	sp, r7
 8020828:	f85d 7b04 	ldr.w	r7, [sp], #4
 802082c:	4770      	bx	lr
 802082e:	bf00      	nop
 8020830:	e000e100 	.word	0xe000e100

08020834 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8020834:	b480      	push	{r7}
 8020836:	b083      	sub	sp, #12
 8020838:	af00      	add	r7, sp, #0
 802083a:	4603      	mov	r3, r0
 802083c:	6039      	str	r1, [r7, #0]
 802083e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8020840:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020844:	2b00      	cmp	r3, #0
 8020846:	db0a      	blt.n	802085e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8020848:	683b      	ldr	r3, [r7, #0]
 802084a:	b2da      	uxtb	r2, r3
 802084c:	490c      	ldr	r1, [pc, #48]	; (8020880 <__NVIC_SetPriority+0x4c>)
 802084e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020852:	0112      	lsls	r2, r2, #4
 8020854:	b2d2      	uxtb	r2, r2
 8020856:	440b      	add	r3, r1
 8020858:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 802085c:	e00a      	b.n	8020874 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 802085e:	683b      	ldr	r3, [r7, #0]
 8020860:	b2da      	uxtb	r2, r3
 8020862:	4908      	ldr	r1, [pc, #32]	; (8020884 <__NVIC_SetPriority+0x50>)
 8020864:	79fb      	ldrb	r3, [r7, #7]
 8020866:	f003 030f 	and.w	r3, r3, #15
 802086a:	3b04      	subs	r3, #4
 802086c:	0112      	lsls	r2, r2, #4
 802086e:	b2d2      	uxtb	r2, r2
 8020870:	440b      	add	r3, r1
 8020872:	761a      	strb	r2, [r3, #24]
}
 8020874:	bf00      	nop
 8020876:	370c      	adds	r7, #12
 8020878:	46bd      	mov	sp, r7
 802087a:	f85d 7b04 	ldr.w	r7, [sp], #4
 802087e:	4770      	bx	lr
 8020880:	e000e100 	.word	0xe000e100
 8020884:	e000ed00 	.word	0xe000ed00

08020888 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8020888:	b480      	push	{r7}
 802088a:	b089      	sub	sp, #36	; 0x24
 802088c:	af00      	add	r7, sp, #0
 802088e:	60f8      	str	r0, [r7, #12]
 8020890:	60b9      	str	r1, [r7, #8]
 8020892:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8020894:	68fb      	ldr	r3, [r7, #12]
 8020896:	f003 0307 	and.w	r3, r3, #7
 802089a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 802089c:	69fb      	ldr	r3, [r7, #28]
 802089e:	f1c3 0307 	rsb	r3, r3, #7
 80208a2:	2b04      	cmp	r3, #4
 80208a4:	bf28      	it	cs
 80208a6:	2304      	movcs	r3, #4
 80208a8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80208aa:	69fb      	ldr	r3, [r7, #28]
 80208ac:	3304      	adds	r3, #4
 80208ae:	2b06      	cmp	r3, #6
 80208b0:	d902      	bls.n	80208b8 <NVIC_EncodePriority+0x30>
 80208b2:	69fb      	ldr	r3, [r7, #28]
 80208b4:	3b03      	subs	r3, #3
 80208b6:	e000      	b.n	80208ba <NVIC_EncodePriority+0x32>
 80208b8:	2300      	movs	r3, #0
 80208ba:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80208bc:	f04f 32ff 	mov.w	r2, #4294967295
 80208c0:	69bb      	ldr	r3, [r7, #24]
 80208c2:	fa02 f303 	lsl.w	r3, r2, r3
 80208c6:	43da      	mvns	r2, r3
 80208c8:	68bb      	ldr	r3, [r7, #8]
 80208ca:	401a      	ands	r2, r3
 80208cc:	697b      	ldr	r3, [r7, #20]
 80208ce:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80208d0:	f04f 31ff 	mov.w	r1, #4294967295
 80208d4:	697b      	ldr	r3, [r7, #20]
 80208d6:	fa01 f303 	lsl.w	r3, r1, r3
 80208da:	43d9      	mvns	r1, r3
 80208dc:	687b      	ldr	r3, [r7, #4]
 80208de:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80208e0:	4313      	orrs	r3, r2
         );
}
 80208e2:	4618      	mov	r0, r3
 80208e4:	3724      	adds	r7, #36	; 0x24
 80208e6:	46bd      	mov	sp, r7
 80208e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80208ec:	4770      	bx	lr
	...

080208f0 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80208f0:	b580      	push	{r7, lr}
 80208f2:	b082      	sub	sp, #8
 80208f4:	af00      	add	r7, sp, #0
 80208f6:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80208f8:	687b      	ldr	r3, [r7, #4]
 80208fa:	3b01      	subs	r3, #1
 80208fc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8020900:	d301      	bcc.n	8020906 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8020902:	2301      	movs	r3, #1
 8020904:	e00f      	b.n	8020926 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8020906:	4a0a      	ldr	r2, [pc, #40]	; (8020930 <SysTick_Config+0x40>)
 8020908:	687b      	ldr	r3, [r7, #4]
 802090a:	3b01      	subs	r3, #1
 802090c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 802090e:	210f      	movs	r1, #15
 8020910:	f04f 30ff 	mov.w	r0, #4294967295
 8020914:	f7ff ff8e 	bl	8020834 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8020918:	4b05      	ldr	r3, [pc, #20]	; (8020930 <SysTick_Config+0x40>)
 802091a:	2200      	movs	r2, #0
 802091c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 802091e:	4b04      	ldr	r3, [pc, #16]	; (8020930 <SysTick_Config+0x40>)
 8020920:	2207      	movs	r2, #7
 8020922:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8020924:	2300      	movs	r3, #0
}
 8020926:	4618      	mov	r0, r3
 8020928:	3708      	adds	r7, #8
 802092a:	46bd      	mov	sp, r7
 802092c:	bd80      	pop	{r7, pc}
 802092e:	bf00      	nop
 8020930:	e000e010 	.word	0xe000e010

08020934 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8020934:	b580      	push	{r7, lr}
 8020936:	b082      	sub	sp, #8
 8020938:	af00      	add	r7, sp, #0
 802093a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 802093c:	6878      	ldr	r0, [r7, #4]
 802093e:	f7ff ff29 	bl	8020794 <__NVIC_SetPriorityGrouping>
}
 8020942:	bf00      	nop
 8020944:	3708      	adds	r7, #8
 8020946:	46bd      	mov	sp, r7
 8020948:	bd80      	pop	{r7, pc}

0802094a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 802094a:	b580      	push	{r7, lr}
 802094c:	b086      	sub	sp, #24
 802094e:	af00      	add	r7, sp, #0
 8020950:	4603      	mov	r3, r0
 8020952:	60b9      	str	r1, [r7, #8]
 8020954:	607a      	str	r2, [r7, #4]
 8020956:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 8020958:	2300      	movs	r3, #0
 802095a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 802095c:	f7ff ff3e 	bl	80207dc <__NVIC_GetPriorityGrouping>
 8020960:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8020962:	687a      	ldr	r2, [r7, #4]
 8020964:	68b9      	ldr	r1, [r7, #8]
 8020966:	6978      	ldr	r0, [r7, #20]
 8020968:	f7ff ff8e 	bl	8020888 <NVIC_EncodePriority>
 802096c:	4602      	mov	r2, r0
 802096e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8020972:	4611      	mov	r1, r2
 8020974:	4618      	mov	r0, r3
 8020976:	f7ff ff5d 	bl	8020834 <__NVIC_SetPriority>
}
 802097a:	bf00      	nop
 802097c:	3718      	adds	r7, #24
 802097e:	46bd      	mov	sp, r7
 8020980:	bd80      	pop	{r7, pc}

08020982 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8020982:	b580      	push	{r7, lr}
 8020984:	b082      	sub	sp, #8
 8020986:	af00      	add	r7, sp, #0
 8020988:	4603      	mov	r3, r0
 802098a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 802098c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8020990:	4618      	mov	r0, r3
 8020992:	f7ff ff31 	bl	80207f8 <__NVIC_EnableIRQ>
}
 8020996:	bf00      	nop
 8020998:	3708      	adds	r7, #8
 802099a:	46bd      	mov	sp, r7
 802099c:	bd80      	pop	{r7, pc}

0802099e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 802099e:	b580      	push	{r7, lr}
 80209a0:	b082      	sub	sp, #8
 80209a2:	af00      	add	r7, sp, #0
 80209a4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80209a6:	6878      	ldr	r0, [r7, #4]
 80209a8:	f7ff ffa2 	bl	80208f0 <SysTick_Config>
 80209ac:	4603      	mov	r3, r0
}
 80209ae:	4618      	mov	r0, r3
 80209b0:	3708      	adds	r7, #8
 80209b2:	46bd      	mov	sp, r7
 80209b4:	bd80      	pop	{r7, pc}

080209b6 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 80209b6:	b580      	push	{r7, lr}
 80209b8:	b084      	sub	sp, #16
 80209ba:	af00      	add	r7, sp, #0
 80209bc:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80209be:	687b      	ldr	r3, [r7, #4]
 80209c0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80209c2:	60fb      	str	r3, [r7, #12]
  
  uint32_t tickstart = HAL_GetTick();
 80209c4:	f7ff feb6 	bl	8020734 <HAL_GetTick>
 80209c8:	60b8      	str	r0, [r7, #8]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80209ca:	687b      	ldr	r3, [r7, #4]
 80209cc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80209d0:	b2db      	uxtb	r3, r3
 80209d2:	2b02      	cmp	r3, #2
 80209d4:	d008      	beq.n	80209e8 <HAL_DMA_Abort+0x32>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80209d6:	687b      	ldr	r3, [r7, #4]
 80209d8:	2280      	movs	r2, #128	; 0x80
 80209da:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 80209dc:	687b      	ldr	r3, [r7, #4]
 80209de:	2200      	movs	r2, #0
 80209e0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    return HAL_ERROR;
 80209e4:	2301      	movs	r3, #1
 80209e6:	e052      	b.n	8020a8e <HAL_DMA_Abort+0xd8>
  }
  else
  {
    /* Disable all the transfer interrupts */
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80209e8:	687b      	ldr	r3, [r7, #4]
 80209ea:	681b      	ldr	r3, [r3, #0]
 80209ec:	681a      	ldr	r2, [r3, #0]
 80209ee:	687b      	ldr	r3, [r7, #4]
 80209f0:	681b      	ldr	r3, [r3, #0]
 80209f2:	f022 0216 	bic.w	r2, r2, #22
 80209f6:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80209f8:	687b      	ldr	r3, [r7, #4]
 80209fa:	681b      	ldr	r3, [r3, #0]
 80209fc:	695a      	ldr	r2, [r3, #20]
 80209fe:	687b      	ldr	r3, [r7, #4]
 8020a00:	681b      	ldr	r3, [r3, #0]
 8020a02:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8020a06:	615a      	str	r2, [r3, #20]
    
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8020a08:	687b      	ldr	r3, [r7, #4]
 8020a0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020a0c:	2b00      	cmp	r3, #0
 8020a0e:	d103      	bne.n	8020a18 <HAL_DMA_Abort+0x62>
 8020a10:	687b      	ldr	r3, [r7, #4]
 8020a12:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8020a14:	2b00      	cmp	r3, #0
 8020a16:	d007      	beq.n	8020a28 <HAL_DMA_Abort+0x72>
    {
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8020a18:	687b      	ldr	r3, [r7, #4]
 8020a1a:	681b      	ldr	r3, [r3, #0]
 8020a1c:	681a      	ldr	r2, [r3, #0]
 8020a1e:	687b      	ldr	r3, [r7, #4]
 8020a20:	681b      	ldr	r3, [r3, #0]
 8020a22:	f022 0208 	bic.w	r2, r2, #8
 8020a26:	601a      	str	r2, [r3, #0]
    }
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8020a28:	687b      	ldr	r3, [r7, #4]
 8020a2a:	681b      	ldr	r3, [r3, #0]
 8020a2c:	681a      	ldr	r2, [r3, #0]
 8020a2e:	687b      	ldr	r3, [r7, #4]
 8020a30:	681b      	ldr	r3, [r3, #0]
 8020a32:	f022 0201 	bic.w	r2, r2, #1
 8020a36:	601a      	str	r2, [r3, #0]
    
    /* Check if the DMA Stream is effectively disabled */
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8020a38:	e013      	b.n	8020a62 <HAL_DMA_Abort+0xac>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8020a3a:	f7ff fe7b 	bl	8020734 <HAL_GetTick>
 8020a3e:	4602      	mov	r2, r0
 8020a40:	68bb      	ldr	r3, [r7, #8]
 8020a42:	1ad3      	subs	r3, r2, r3
 8020a44:	2b05      	cmp	r3, #5
 8020a46:	d90c      	bls.n	8020a62 <HAL_DMA_Abort+0xac>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8020a48:	687b      	ldr	r3, [r7, #4]
 8020a4a:	2220      	movs	r2, #32
 8020a4c:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8020a4e:	687b      	ldr	r3, [r7, #4]
 8020a50:	2200      	movs	r2, #0
 8020a52:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8020a56:	687b      	ldr	r3, [r7, #4]
 8020a58:	2203      	movs	r2, #3
 8020a5a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_TIMEOUT;
 8020a5e:	2303      	movs	r3, #3
 8020a60:	e015      	b.n	8020a8e <HAL_DMA_Abort+0xd8>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8020a62:	687b      	ldr	r3, [r7, #4]
 8020a64:	681b      	ldr	r3, [r3, #0]
 8020a66:	681b      	ldr	r3, [r3, #0]
 8020a68:	f003 0301 	and.w	r3, r3, #1
 8020a6c:	2b00      	cmp	r3, #0
 8020a6e:	d1e4      	bne.n	8020a3a <HAL_DMA_Abort+0x84>
      }
    }
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8020a70:	687b      	ldr	r3, [r7, #4]
 8020a72:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8020a74:	223f      	movs	r2, #63	; 0x3f
 8020a76:	409a      	lsls	r2, r3
 8020a78:	68fb      	ldr	r3, [r7, #12]
 8020a7a:	609a      	str	r2, [r3, #8]
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8020a7c:	687b      	ldr	r3, [r7, #4]
 8020a7e:	2200      	movs	r2, #0
 8020a80:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Change the DMA state*/
    hdma->State = HAL_DMA_STATE_READY;
 8020a84:	687b      	ldr	r3, [r7, #4]
 8020a86:	2201      	movs	r2, #1
 8020a88:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  }
  return HAL_OK;
 8020a8c:	2300      	movs	r3, #0
}
 8020a8e:	4618      	mov	r0, r3
 8020a90:	3710      	adds	r7, #16
 8020a92:	46bd      	mov	sp, r7
 8020a94:	bd80      	pop	{r7, pc}

08020a96 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8020a96:	b480      	push	{r7}
 8020a98:	b083      	sub	sp, #12
 8020a9a:	af00      	add	r7, sp, #0
 8020a9c:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8020a9e:	687b      	ldr	r3, [r7, #4]
 8020aa0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8020aa4:	b2db      	uxtb	r3, r3
 8020aa6:	2b02      	cmp	r3, #2
 8020aa8:	d004      	beq.n	8020ab4 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8020aaa:	687b      	ldr	r3, [r7, #4]
 8020aac:	2280      	movs	r2, #128	; 0x80
 8020aae:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 8020ab0:	2301      	movs	r3, #1
 8020ab2:	e00c      	b.n	8020ace <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8020ab4:	687b      	ldr	r3, [r7, #4]
 8020ab6:	2205      	movs	r2, #5
 8020ab8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8020abc:	687b      	ldr	r3, [r7, #4]
 8020abe:	681b      	ldr	r3, [r3, #0]
 8020ac0:	681a      	ldr	r2, [r3, #0]
 8020ac2:	687b      	ldr	r3, [r7, #4]
 8020ac4:	681b      	ldr	r3, [r3, #0]
 8020ac6:	f022 0201 	bic.w	r2, r2, #1
 8020aca:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 8020acc:	2300      	movs	r3, #0
}
 8020ace:	4618      	mov	r0, r3
 8020ad0:	370c      	adds	r7, #12
 8020ad2:	46bd      	mov	sp, r7
 8020ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020ad8:	4770      	bx	lr
	...

08020adc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8020adc:	b480      	push	{r7}
 8020ade:	b089      	sub	sp, #36	; 0x24
 8020ae0:	af00      	add	r7, sp, #0
 8020ae2:	6078      	str	r0, [r7, #4]
 8020ae4:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 8020ae6:	2300      	movs	r3, #0
 8020ae8:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 8020aea:	2300      	movs	r3, #0
 8020aec:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 8020aee:	2300      	movs	r3, #0
 8020af0:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 8020af2:	2300      	movs	r3, #0
 8020af4:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8020af6:	2300      	movs	r3, #0
 8020af8:	61fb      	str	r3, [r7, #28]
 8020afa:	e175      	b.n	8020de8 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8020afc:	2201      	movs	r2, #1
 8020afe:	69fb      	ldr	r3, [r7, #28]
 8020b00:	fa02 f303 	lsl.w	r3, r2, r3
 8020b04:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8020b06:	683b      	ldr	r3, [r7, #0]
 8020b08:	681b      	ldr	r3, [r3, #0]
 8020b0a:	697a      	ldr	r2, [r7, #20]
 8020b0c:	4013      	ands	r3, r2
 8020b0e:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8020b10:	693a      	ldr	r2, [r7, #16]
 8020b12:	697b      	ldr	r3, [r7, #20]
 8020b14:	429a      	cmp	r2, r3
 8020b16:	f040 8164 	bne.w	8020de2 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8020b1a:	683b      	ldr	r3, [r7, #0]
 8020b1c:	685b      	ldr	r3, [r3, #4]
 8020b1e:	2b01      	cmp	r3, #1
 8020b20:	d00b      	beq.n	8020b3a <HAL_GPIO_Init+0x5e>
 8020b22:	683b      	ldr	r3, [r7, #0]
 8020b24:	685b      	ldr	r3, [r3, #4]
 8020b26:	2b02      	cmp	r3, #2
 8020b28:	d007      	beq.n	8020b3a <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8020b2a:	683b      	ldr	r3, [r7, #0]
 8020b2c:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8020b2e:	2b11      	cmp	r3, #17
 8020b30:	d003      	beq.n	8020b3a <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8020b32:	683b      	ldr	r3, [r7, #0]
 8020b34:	685b      	ldr	r3, [r3, #4]
 8020b36:	2b12      	cmp	r3, #18
 8020b38:	d130      	bne.n	8020b9c <HAL_GPIO_Init+0xc0>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8020b3a:	687b      	ldr	r3, [r7, #4]
 8020b3c:	689b      	ldr	r3, [r3, #8]
 8020b3e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8020b40:	69fb      	ldr	r3, [r7, #28]
 8020b42:	005b      	lsls	r3, r3, #1
 8020b44:	2203      	movs	r2, #3
 8020b46:	fa02 f303 	lsl.w	r3, r2, r3
 8020b4a:	43db      	mvns	r3, r3
 8020b4c:	69ba      	ldr	r2, [r7, #24]
 8020b4e:	4013      	ands	r3, r2
 8020b50:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 8020b52:	683b      	ldr	r3, [r7, #0]
 8020b54:	68da      	ldr	r2, [r3, #12]
 8020b56:	69fb      	ldr	r3, [r7, #28]
 8020b58:	005b      	lsls	r3, r3, #1
 8020b5a:	fa02 f303 	lsl.w	r3, r2, r3
 8020b5e:	69ba      	ldr	r2, [r7, #24]
 8020b60:	4313      	orrs	r3, r2
 8020b62:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8020b64:	687b      	ldr	r3, [r7, #4]
 8020b66:	69ba      	ldr	r2, [r7, #24]
 8020b68:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8020b6a:	687b      	ldr	r3, [r7, #4]
 8020b6c:	685b      	ldr	r3, [r3, #4]
 8020b6e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8020b70:	2201      	movs	r2, #1
 8020b72:	69fb      	ldr	r3, [r7, #28]
 8020b74:	fa02 f303 	lsl.w	r3, r2, r3
 8020b78:	43db      	mvns	r3, r3
 8020b7a:	69ba      	ldr	r2, [r7, #24]
 8020b7c:	4013      	ands	r3, r2
 8020b7e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 8020b80:	683b      	ldr	r3, [r7, #0]
 8020b82:	685b      	ldr	r3, [r3, #4]
 8020b84:	091b      	lsrs	r3, r3, #4
 8020b86:	f003 0201 	and.w	r2, r3, #1
 8020b8a:	69fb      	ldr	r3, [r7, #28]
 8020b8c:	fa02 f303 	lsl.w	r3, r2, r3
 8020b90:	69ba      	ldr	r2, [r7, #24]
 8020b92:	4313      	orrs	r3, r2
 8020b94:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8020b96:	687b      	ldr	r3, [r7, #4]
 8020b98:	69ba      	ldr	r2, [r7, #24]
 8020b9a:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8020b9c:	687b      	ldr	r3, [r7, #4]
 8020b9e:	68db      	ldr	r3, [r3, #12]
 8020ba0:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8020ba2:	69fb      	ldr	r3, [r7, #28]
 8020ba4:	005b      	lsls	r3, r3, #1
 8020ba6:	2203      	movs	r2, #3
 8020ba8:	fa02 f303 	lsl.w	r3, r2, r3
 8020bac:	43db      	mvns	r3, r3
 8020bae:	69ba      	ldr	r2, [r7, #24]
 8020bb0:	4013      	ands	r3, r2
 8020bb2:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2));
 8020bb4:	683b      	ldr	r3, [r7, #0]
 8020bb6:	689a      	ldr	r2, [r3, #8]
 8020bb8:	69fb      	ldr	r3, [r7, #28]
 8020bba:	005b      	lsls	r3, r3, #1
 8020bbc:	fa02 f303 	lsl.w	r3, r2, r3
 8020bc0:	69ba      	ldr	r2, [r7, #24]
 8020bc2:	4313      	orrs	r3, r2
 8020bc4:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8020bc6:	687b      	ldr	r3, [r7, #4]
 8020bc8:	69ba      	ldr	r2, [r7, #24]
 8020bca:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8020bcc:	683b      	ldr	r3, [r7, #0]
 8020bce:	685b      	ldr	r3, [r3, #4]
 8020bd0:	2b02      	cmp	r3, #2
 8020bd2:	d003      	beq.n	8020bdc <HAL_GPIO_Init+0x100>
 8020bd4:	683b      	ldr	r3, [r7, #0]
 8020bd6:	685b      	ldr	r3, [r3, #4]
 8020bd8:	2b12      	cmp	r3, #18
 8020bda:	d123      	bne.n	8020c24 <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8020bdc:	69fb      	ldr	r3, [r7, #28]
 8020bde:	08da      	lsrs	r2, r3, #3
 8020be0:	687b      	ldr	r3, [r7, #4]
 8020be2:	3208      	adds	r2, #8
 8020be4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020be8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8020bea:	69fb      	ldr	r3, [r7, #28]
 8020bec:	f003 0307 	and.w	r3, r3, #7
 8020bf0:	009b      	lsls	r3, r3, #2
 8020bf2:	220f      	movs	r2, #15
 8020bf4:	fa02 f303 	lsl.w	r3, r2, r3
 8020bf8:	43db      	mvns	r3, r3
 8020bfa:	69ba      	ldr	r2, [r7, #24]
 8020bfc:	4013      	ands	r3, r2
 8020bfe:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8020c00:	683b      	ldr	r3, [r7, #0]
 8020c02:	691a      	ldr	r2, [r3, #16]
 8020c04:	69fb      	ldr	r3, [r7, #28]
 8020c06:	f003 0307 	and.w	r3, r3, #7
 8020c0a:	009b      	lsls	r3, r3, #2
 8020c0c:	fa02 f303 	lsl.w	r3, r2, r3
 8020c10:	69ba      	ldr	r2, [r7, #24]
 8020c12:	4313      	orrs	r3, r2
 8020c14:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 8020c16:	69fb      	ldr	r3, [r7, #28]
 8020c18:	08da      	lsrs	r2, r3, #3
 8020c1a:	687b      	ldr	r3, [r7, #4]
 8020c1c:	3208      	adds	r2, #8
 8020c1e:	69b9      	ldr	r1, [r7, #24]
 8020c20:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }
      
      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8020c24:	687b      	ldr	r3, [r7, #4]
 8020c26:	681b      	ldr	r3, [r3, #0]
 8020c28:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8020c2a:	69fb      	ldr	r3, [r7, #28]
 8020c2c:	005b      	lsls	r3, r3, #1
 8020c2e:	2203      	movs	r2, #3
 8020c30:	fa02 f303 	lsl.w	r3, r2, r3
 8020c34:	43db      	mvns	r3, r3
 8020c36:	69ba      	ldr	r2, [r7, #24]
 8020c38:	4013      	ands	r3, r2
 8020c3a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8020c3c:	683b      	ldr	r3, [r7, #0]
 8020c3e:	685b      	ldr	r3, [r3, #4]
 8020c40:	f003 0203 	and.w	r2, r3, #3
 8020c44:	69fb      	ldr	r3, [r7, #28]
 8020c46:	005b      	lsls	r3, r3, #1
 8020c48:	fa02 f303 	lsl.w	r3, r2, r3
 8020c4c:	69ba      	ldr	r2, [r7, #24]
 8020c4e:	4313      	orrs	r3, r2
 8020c50:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8020c52:	687b      	ldr	r3, [r7, #4]
 8020c54:	69ba      	ldr	r2, [r7, #24]
 8020c56:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8020c58:	683b      	ldr	r3, [r7, #0]
 8020c5a:	685b      	ldr	r3, [r3, #4]
 8020c5c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020c60:	2b00      	cmp	r3, #0
 8020c62:	f000 80be 	beq.w	8020de2 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8020c66:	4b66      	ldr	r3, [pc, #408]	; (8020e00 <HAL_GPIO_Init+0x324>)
 8020c68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8020c6a:	4a65      	ldr	r2, [pc, #404]	; (8020e00 <HAL_GPIO_Init+0x324>)
 8020c6c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8020c70:	6453      	str	r3, [r2, #68]	; 0x44
 8020c72:	4b63      	ldr	r3, [pc, #396]	; (8020e00 <HAL_GPIO_Init+0x324>)
 8020c74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8020c76:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8020c7a:	60fb      	str	r3, [r7, #12]
 8020c7c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 8020c7e:	4a61      	ldr	r2, [pc, #388]	; (8020e04 <HAL_GPIO_Init+0x328>)
 8020c80:	69fb      	ldr	r3, [r7, #28]
 8020c82:	089b      	lsrs	r3, r3, #2
 8020c84:	3302      	adds	r3, #2
 8020c86:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8020c8a:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8020c8c:	69fb      	ldr	r3, [r7, #28]
 8020c8e:	f003 0303 	and.w	r3, r3, #3
 8020c92:	009b      	lsls	r3, r3, #2
 8020c94:	220f      	movs	r2, #15
 8020c96:	fa02 f303 	lsl.w	r3, r2, r3
 8020c9a:	43db      	mvns	r3, r3
 8020c9c:	69ba      	ldr	r2, [r7, #24]
 8020c9e:	4013      	ands	r3, r2
 8020ca0:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8020ca2:	687b      	ldr	r3, [r7, #4]
 8020ca4:	4a58      	ldr	r2, [pc, #352]	; (8020e08 <HAL_GPIO_Init+0x32c>)
 8020ca6:	4293      	cmp	r3, r2
 8020ca8:	d037      	beq.n	8020d1a <HAL_GPIO_Init+0x23e>
 8020caa:	687b      	ldr	r3, [r7, #4]
 8020cac:	4a57      	ldr	r2, [pc, #348]	; (8020e0c <HAL_GPIO_Init+0x330>)
 8020cae:	4293      	cmp	r3, r2
 8020cb0:	d031      	beq.n	8020d16 <HAL_GPIO_Init+0x23a>
 8020cb2:	687b      	ldr	r3, [r7, #4]
 8020cb4:	4a56      	ldr	r2, [pc, #344]	; (8020e10 <HAL_GPIO_Init+0x334>)
 8020cb6:	4293      	cmp	r3, r2
 8020cb8:	d02b      	beq.n	8020d12 <HAL_GPIO_Init+0x236>
 8020cba:	687b      	ldr	r3, [r7, #4]
 8020cbc:	4a55      	ldr	r2, [pc, #340]	; (8020e14 <HAL_GPIO_Init+0x338>)
 8020cbe:	4293      	cmp	r3, r2
 8020cc0:	d025      	beq.n	8020d0e <HAL_GPIO_Init+0x232>
 8020cc2:	687b      	ldr	r3, [r7, #4]
 8020cc4:	4a54      	ldr	r2, [pc, #336]	; (8020e18 <HAL_GPIO_Init+0x33c>)
 8020cc6:	4293      	cmp	r3, r2
 8020cc8:	d01f      	beq.n	8020d0a <HAL_GPIO_Init+0x22e>
 8020cca:	687b      	ldr	r3, [r7, #4]
 8020ccc:	4a53      	ldr	r2, [pc, #332]	; (8020e1c <HAL_GPIO_Init+0x340>)
 8020cce:	4293      	cmp	r3, r2
 8020cd0:	d019      	beq.n	8020d06 <HAL_GPIO_Init+0x22a>
 8020cd2:	687b      	ldr	r3, [r7, #4]
 8020cd4:	4a52      	ldr	r2, [pc, #328]	; (8020e20 <HAL_GPIO_Init+0x344>)
 8020cd6:	4293      	cmp	r3, r2
 8020cd8:	d013      	beq.n	8020d02 <HAL_GPIO_Init+0x226>
 8020cda:	687b      	ldr	r3, [r7, #4]
 8020cdc:	4a51      	ldr	r2, [pc, #324]	; (8020e24 <HAL_GPIO_Init+0x348>)
 8020cde:	4293      	cmp	r3, r2
 8020ce0:	d00d      	beq.n	8020cfe <HAL_GPIO_Init+0x222>
 8020ce2:	687b      	ldr	r3, [r7, #4]
 8020ce4:	4a50      	ldr	r2, [pc, #320]	; (8020e28 <HAL_GPIO_Init+0x34c>)
 8020ce6:	4293      	cmp	r3, r2
 8020ce8:	d007      	beq.n	8020cfa <HAL_GPIO_Init+0x21e>
 8020cea:	687b      	ldr	r3, [r7, #4]
 8020cec:	4a4f      	ldr	r2, [pc, #316]	; (8020e2c <HAL_GPIO_Init+0x350>)
 8020cee:	4293      	cmp	r3, r2
 8020cf0:	d101      	bne.n	8020cf6 <HAL_GPIO_Init+0x21a>
 8020cf2:	2309      	movs	r3, #9
 8020cf4:	e012      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020cf6:	230a      	movs	r3, #10
 8020cf8:	e010      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020cfa:	2308      	movs	r3, #8
 8020cfc:	e00e      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020cfe:	2307      	movs	r3, #7
 8020d00:	e00c      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020d02:	2306      	movs	r3, #6
 8020d04:	e00a      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020d06:	2305      	movs	r3, #5
 8020d08:	e008      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020d0a:	2304      	movs	r3, #4
 8020d0c:	e006      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020d0e:	2303      	movs	r3, #3
 8020d10:	e004      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020d12:	2302      	movs	r3, #2
 8020d14:	e002      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020d16:	2301      	movs	r3, #1
 8020d18:	e000      	b.n	8020d1c <HAL_GPIO_Init+0x240>
 8020d1a:	2300      	movs	r3, #0
 8020d1c:	69fa      	ldr	r2, [r7, #28]
 8020d1e:	f002 0203 	and.w	r2, r2, #3
 8020d22:	0092      	lsls	r2, r2, #2
 8020d24:	4093      	lsls	r3, r2
 8020d26:	69ba      	ldr	r2, [r7, #24]
 8020d28:	4313      	orrs	r3, r2
 8020d2a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 8020d2c:	4935      	ldr	r1, [pc, #212]	; (8020e04 <HAL_GPIO_Init+0x328>)
 8020d2e:	69fb      	ldr	r3, [r7, #28]
 8020d30:	089b      	lsrs	r3, r3, #2
 8020d32:	3302      	adds	r3, #2
 8020d34:	69ba      	ldr	r2, [r7, #24]
 8020d36:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8020d3a:	4b3d      	ldr	r3, [pc, #244]	; (8020e30 <HAL_GPIO_Init+0x354>)
 8020d3c:	681b      	ldr	r3, [r3, #0]
 8020d3e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020d40:	693b      	ldr	r3, [r7, #16]
 8020d42:	43db      	mvns	r3, r3
 8020d44:	69ba      	ldr	r2, [r7, #24]
 8020d46:	4013      	ands	r3, r2
 8020d48:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8020d4a:	683b      	ldr	r3, [r7, #0]
 8020d4c:	685b      	ldr	r3, [r3, #4]
 8020d4e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8020d52:	2b00      	cmp	r3, #0
 8020d54:	d003      	beq.n	8020d5e <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8020d56:	69ba      	ldr	r2, [r7, #24]
 8020d58:	693b      	ldr	r3, [r7, #16]
 8020d5a:	4313      	orrs	r3, r2
 8020d5c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8020d5e:	4a34      	ldr	r2, [pc, #208]	; (8020e30 <HAL_GPIO_Init+0x354>)
 8020d60:	69bb      	ldr	r3, [r7, #24]
 8020d62:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8020d64:	4b32      	ldr	r3, [pc, #200]	; (8020e30 <HAL_GPIO_Init+0x354>)
 8020d66:	685b      	ldr	r3, [r3, #4]
 8020d68:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020d6a:	693b      	ldr	r3, [r7, #16]
 8020d6c:	43db      	mvns	r3, r3
 8020d6e:	69ba      	ldr	r2, [r7, #24]
 8020d70:	4013      	ands	r3, r2
 8020d72:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8020d74:	683b      	ldr	r3, [r7, #0]
 8020d76:	685b      	ldr	r3, [r3, #4]
 8020d78:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020d7c:	2b00      	cmp	r3, #0
 8020d7e:	d003      	beq.n	8020d88 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8020d80:	69ba      	ldr	r2, [r7, #24]
 8020d82:	693b      	ldr	r3, [r7, #16]
 8020d84:	4313      	orrs	r3, r2
 8020d86:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8020d88:	4a29      	ldr	r2, [pc, #164]	; (8020e30 <HAL_GPIO_Init+0x354>)
 8020d8a:	69bb      	ldr	r3, [r7, #24]
 8020d8c:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8020d8e:	4b28      	ldr	r3, [pc, #160]	; (8020e30 <HAL_GPIO_Init+0x354>)
 8020d90:	689b      	ldr	r3, [r3, #8]
 8020d92:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020d94:	693b      	ldr	r3, [r7, #16]
 8020d96:	43db      	mvns	r3, r3
 8020d98:	69ba      	ldr	r2, [r7, #24]
 8020d9a:	4013      	ands	r3, r2
 8020d9c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8020d9e:	683b      	ldr	r3, [r7, #0]
 8020da0:	685b      	ldr	r3, [r3, #4]
 8020da2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8020da6:	2b00      	cmp	r3, #0
 8020da8:	d003      	beq.n	8020db2 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8020daa:	69ba      	ldr	r2, [r7, #24]
 8020dac:	693b      	ldr	r3, [r7, #16]
 8020dae:	4313      	orrs	r3, r2
 8020db0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8020db2:	4a1f      	ldr	r2, [pc, #124]	; (8020e30 <HAL_GPIO_Init+0x354>)
 8020db4:	69bb      	ldr	r3, [r7, #24]
 8020db6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8020db8:	4b1d      	ldr	r3, [pc, #116]	; (8020e30 <HAL_GPIO_Init+0x354>)
 8020dba:	68db      	ldr	r3, [r3, #12]
 8020dbc:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8020dbe:	693b      	ldr	r3, [r7, #16]
 8020dc0:	43db      	mvns	r3, r3
 8020dc2:	69ba      	ldr	r2, [r7, #24]
 8020dc4:	4013      	ands	r3, r2
 8020dc6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8020dc8:	683b      	ldr	r3, [r7, #0]
 8020dca:	685b      	ldr	r3, [r3, #4]
 8020dcc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8020dd0:	2b00      	cmp	r3, #0
 8020dd2:	d003      	beq.n	8020ddc <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8020dd4:	69ba      	ldr	r2, [r7, #24]
 8020dd6:	693b      	ldr	r3, [r7, #16]
 8020dd8:	4313      	orrs	r3, r2
 8020dda:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8020ddc:	4a14      	ldr	r2, [pc, #80]	; (8020e30 <HAL_GPIO_Init+0x354>)
 8020dde:	69bb      	ldr	r3, [r7, #24]
 8020de0:	60d3      	str	r3, [r2, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 8020de2:	69fb      	ldr	r3, [r7, #28]
 8020de4:	3301      	adds	r3, #1
 8020de6:	61fb      	str	r3, [r7, #28]
 8020de8:	69fb      	ldr	r3, [r7, #28]
 8020dea:	2b0f      	cmp	r3, #15
 8020dec:	f67f ae86 	bls.w	8020afc <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 8020df0:	bf00      	nop
 8020df2:	bf00      	nop
 8020df4:	3724      	adds	r7, #36	; 0x24
 8020df6:	46bd      	mov	sp, r7
 8020df8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020dfc:	4770      	bx	lr
 8020dfe:	bf00      	nop
 8020e00:	40023800 	.word	0x40023800
 8020e04:	40013800 	.word	0x40013800
 8020e08:	40020000 	.word	0x40020000
 8020e0c:	40020400 	.word	0x40020400
 8020e10:	40020800 	.word	0x40020800
 8020e14:	40020c00 	.word	0x40020c00
 8020e18:	40021000 	.word	0x40021000
 8020e1c:	40021400 	.word	0x40021400
 8020e20:	40021800 	.word	0x40021800
 8020e24:	40021c00 	.word	0x40021c00
 8020e28:	40022000 	.word	0x40022000
 8020e2c:	40022400 	.word	0x40022400
 8020e30:	40013c00 	.word	0x40013c00

08020e34 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8020e34:	b580      	push	{r7, lr}
 8020e36:	b082      	sub	sp, #8
 8020e38:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 8020e3a:	2300      	movs	r3, #0
 8020e3c:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8020e3e:	4b23      	ldr	r3, [pc, #140]	; (8020ecc <HAL_PWREx_EnableOverDrive+0x98>)
 8020e40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020e42:	4a22      	ldr	r2, [pc, #136]	; (8020ecc <HAL_PWREx_EnableOverDrive+0x98>)
 8020e44:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8020e48:	6413      	str	r3, [r2, #64]	; 0x40
 8020e4a:	4b20      	ldr	r3, [pc, #128]	; (8020ecc <HAL_PWREx_EnableOverDrive+0x98>)
 8020e4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8020e4e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8020e52:	603b      	str	r3, [r7, #0]
 8020e54:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8020e56:	4b1e      	ldr	r3, [pc, #120]	; (8020ed0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020e58:	681b      	ldr	r3, [r3, #0]
 8020e5a:	4a1d      	ldr	r2, [pc, #116]	; (8020ed0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020e5c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020e60:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8020e62:	f7ff fc67 	bl	8020734 <HAL_GetTick>
 8020e66:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8020e68:	e009      	b.n	8020e7e <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8020e6a:	f7ff fc63 	bl	8020734 <HAL_GetTick>
 8020e6e:	4602      	mov	r2, r0
 8020e70:	687b      	ldr	r3, [r7, #4]
 8020e72:	1ad3      	subs	r3, r2, r3
 8020e74:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8020e78:	d901      	bls.n	8020e7e <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 8020e7a:	2303      	movs	r3, #3
 8020e7c:	e022      	b.n	8020ec4 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8020e7e:	4b14      	ldr	r3, [pc, #80]	; (8020ed0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020e80:	685b      	ldr	r3, [r3, #4]
 8020e82:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8020e86:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8020e8a:	d1ee      	bne.n	8020e6a <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8020e8c:	4b10      	ldr	r3, [pc, #64]	; (8020ed0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020e8e:	681b      	ldr	r3, [r3, #0]
 8020e90:	4a0f      	ldr	r2, [pc, #60]	; (8020ed0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020e92:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8020e96:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8020e98:	f7ff fc4c 	bl	8020734 <HAL_GetTick>
 8020e9c:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8020e9e:	e009      	b.n	8020eb4 <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8020ea0:	f7ff fc48 	bl	8020734 <HAL_GetTick>
 8020ea4:	4602      	mov	r2, r0
 8020ea6:	687b      	ldr	r3, [r7, #4]
 8020ea8:	1ad3      	subs	r3, r2, r3
 8020eaa:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8020eae:	d901      	bls.n	8020eb4 <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 8020eb0:	2303      	movs	r3, #3
 8020eb2:	e007      	b.n	8020ec4 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8020eb4:	4b06      	ldr	r3, [pc, #24]	; (8020ed0 <HAL_PWREx_EnableOverDrive+0x9c>)
 8020eb6:	685b      	ldr	r3, [r3, #4]
 8020eb8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020ebc:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8020ec0:	d1ee      	bne.n	8020ea0 <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 8020ec2:	2300      	movs	r3, #0
}
 8020ec4:	4618      	mov	r0, r3
 8020ec6:	3708      	adds	r7, #8
 8020ec8:	46bd      	mov	sp, r7
 8020eca:	bd80      	pop	{r7, pc}
 8020ecc:	40023800 	.word	0x40023800
 8020ed0:	40007000 	.word	0x40007000

08020ed4 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8020ed4:	b580      	push	{r7, lr}
 8020ed6:	b086      	sub	sp, #24
 8020ed8:	af00      	add	r7, sp, #0
 8020eda:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 8020edc:	2300      	movs	r3, #0
 8020ede:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8020ee0:	687b      	ldr	r3, [r7, #4]
 8020ee2:	2b00      	cmp	r3, #0
 8020ee4:	d101      	bne.n	8020eea <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 8020ee6:	2301      	movs	r3, #1
 8020ee8:	e291      	b.n	802140e <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8020eea:	687b      	ldr	r3, [r7, #4]
 8020eec:	681b      	ldr	r3, [r3, #0]
 8020eee:	f003 0301 	and.w	r3, r3, #1
 8020ef2:	2b00      	cmp	r3, #0
 8020ef4:	f000 8087 	beq.w	8021006 <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8020ef8:	4b96      	ldr	r3, [pc, #600]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020efa:	689b      	ldr	r3, [r3, #8]
 8020efc:	f003 030c 	and.w	r3, r3, #12
 8020f00:	2b04      	cmp	r3, #4
 8020f02:	d00c      	beq.n	8020f1e <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8020f04:	4b93      	ldr	r3, [pc, #588]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f06:	689b      	ldr	r3, [r3, #8]
 8020f08:	f003 030c 	and.w	r3, r3, #12
 8020f0c:	2b08      	cmp	r3, #8
 8020f0e:	d112      	bne.n	8020f36 <HAL_RCC_OscConfig+0x62>
 8020f10:	4b90      	ldr	r3, [pc, #576]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f12:	685b      	ldr	r3, [r3, #4]
 8020f14:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8020f18:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8020f1c:	d10b      	bne.n	8020f36 <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8020f1e:	4b8d      	ldr	r3, [pc, #564]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f20:	681b      	ldr	r3, [r3, #0]
 8020f22:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020f26:	2b00      	cmp	r3, #0
 8020f28:	d06c      	beq.n	8021004 <HAL_RCC_OscConfig+0x130>
 8020f2a:	687b      	ldr	r3, [r7, #4]
 8020f2c:	685b      	ldr	r3, [r3, #4]
 8020f2e:	2b00      	cmp	r3, #0
 8020f30:	d168      	bne.n	8021004 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 8020f32:	2301      	movs	r3, #1
 8020f34:	e26b      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8020f36:	687b      	ldr	r3, [r7, #4]
 8020f38:	685b      	ldr	r3, [r3, #4]
 8020f3a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8020f3e:	d106      	bne.n	8020f4e <HAL_RCC_OscConfig+0x7a>
 8020f40:	4b84      	ldr	r3, [pc, #528]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f42:	681b      	ldr	r3, [r3, #0]
 8020f44:	4a83      	ldr	r2, [pc, #524]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f46:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020f4a:	6013      	str	r3, [r2, #0]
 8020f4c:	e02e      	b.n	8020fac <HAL_RCC_OscConfig+0xd8>
 8020f4e:	687b      	ldr	r3, [r7, #4]
 8020f50:	685b      	ldr	r3, [r3, #4]
 8020f52:	2b00      	cmp	r3, #0
 8020f54:	d10c      	bne.n	8020f70 <HAL_RCC_OscConfig+0x9c>
 8020f56:	4b7f      	ldr	r3, [pc, #508]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f58:	681b      	ldr	r3, [r3, #0]
 8020f5a:	4a7e      	ldr	r2, [pc, #504]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f5c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8020f60:	6013      	str	r3, [r2, #0]
 8020f62:	4b7c      	ldr	r3, [pc, #496]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f64:	681b      	ldr	r3, [r3, #0]
 8020f66:	4a7b      	ldr	r2, [pc, #492]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f68:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8020f6c:	6013      	str	r3, [r2, #0]
 8020f6e:	e01d      	b.n	8020fac <HAL_RCC_OscConfig+0xd8>
 8020f70:	687b      	ldr	r3, [r7, #4]
 8020f72:	685b      	ldr	r3, [r3, #4]
 8020f74:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8020f78:	d10c      	bne.n	8020f94 <HAL_RCC_OscConfig+0xc0>
 8020f7a:	4b76      	ldr	r3, [pc, #472]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f7c:	681b      	ldr	r3, [r3, #0]
 8020f7e:	4a75      	ldr	r2, [pc, #468]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f80:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8020f84:	6013      	str	r3, [r2, #0]
 8020f86:	4b73      	ldr	r3, [pc, #460]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f88:	681b      	ldr	r3, [r3, #0]
 8020f8a:	4a72      	ldr	r2, [pc, #456]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f8c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8020f90:	6013      	str	r3, [r2, #0]
 8020f92:	e00b      	b.n	8020fac <HAL_RCC_OscConfig+0xd8>
 8020f94:	4b6f      	ldr	r3, [pc, #444]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f96:	681b      	ldr	r3, [r3, #0]
 8020f98:	4a6e      	ldr	r2, [pc, #440]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020f9a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8020f9e:	6013      	str	r3, [r2, #0]
 8020fa0:	4b6c      	ldr	r3, [pc, #432]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020fa2:	681b      	ldr	r3, [r3, #0]
 8020fa4:	4a6b      	ldr	r2, [pc, #428]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020fa6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8020faa:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8020fac:	687b      	ldr	r3, [r7, #4]
 8020fae:	685b      	ldr	r3, [r3, #4]
 8020fb0:	2b00      	cmp	r3, #0
 8020fb2:	d013      	beq.n	8020fdc <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020fb4:	f7ff fbbe 	bl	8020734 <HAL_GetTick>
 8020fb8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8020fba:	e008      	b.n	8020fce <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8020fbc:	f7ff fbba 	bl	8020734 <HAL_GetTick>
 8020fc0:	4602      	mov	r2, r0
 8020fc2:	693b      	ldr	r3, [r7, #16]
 8020fc4:	1ad3      	subs	r3, r2, r3
 8020fc6:	2b64      	cmp	r3, #100	; 0x64
 8020fc8:	d901      	bls.n	8020fce <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8020fca:	2303      	movs	r3, #3
 8020fcc:	e21f      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8020fce:	4b61      	ldr	r3, [pc, #388]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020fd0:	681b      	ldr	r3, [r3, #0]
 8020fd2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020fd6:	2b00      	cmp	r3, #0
 8020fd8:	d0f0      	beq.n	8020fbc <HAL_RCC_OscConfig+0xe8>
 8020fda:	e014      	b.n	8021006 <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8020fdc:	f7ff fbaa 	bl	8020734 <HAL_GetTick>
 8020fe0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8020fe2:	e008      	b.n	8020ff6 <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8020fe4:	f7ff fba6 	bl	8020734 <HAL_GetTick>
 8020fe8:	4602      	mov	r2, r0
 8020fea:	693b      	ldr	r3, [r7, #16]
 8020fec:	1ad3      	subs	r3, r2, r3
 8020fee:	2b64      	cmp	r3, #100	; 0x64
 8020ff0:	d901      	bls.n	8020ff6 <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 8020ff2:	2303      	movs	r3, #3
 8020ff4:	e20b      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8020ff6:	4b57      	ldr	r3, [pc, #348]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8020ff8:	681b      	ldr	r3, [r3, #0]
 8020ffa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8020ffe:	2b00      	cmp	r3, #0
 8021000:	d1f0      	bne.n	8020fe4 <HAL_RCC_OscConfig+0x110>
 8021002:	e000      	b.n	8021006 <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8021004:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8021006:	687b      	ldr	r3, [r7, #4]
 8021008:	681b      	ldr	r3, [r3, #0]
 802100a:	f003 0302 	and.w	r3, r3, #2
 802100e:	2b00      	cmp	r3, #0
 8021010:	d069      	beq.n	80210e6 <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8021012:	4b50      	ldr	r3, [pc, #320]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021014:	689b      	ldr	r3, [r3, #8]
 8021016:	f003 030c 	and.w	r3, r3, #12
 802101a:	2b00      	cmp	r3, #0
 802101c:	d00b      	beq.n	8021036 <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 802101e:	4b4d      	ldr	r3, [pc, #308]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021020:	689b      	ldr	r3, [r3, #8]
 8021022:	f003 030c 	and.w	r3, r3, #12
 8021026:	2b08      	cmp	r3, #8
 8021028:	d11c      	bne.n	8021064 <HAL_RCC_OscConfig+0x190>
 802102a:	4b4a      	ldr	r3, [pc, #296]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 802102c:	685b      	ldr	r3, [r3, #4]
 802102e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8021032:	2b00      	cmp	r3, #0
 8021034:	d116      	bne.n	8021064 <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8021036:	4b47      	ldr	r3, [pc, #284]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021038:	681b      	ldr	r3, [r3, #0]
 802103a:	f003 0302 	and.w	r3, r3, #2
 802103e:	2b00      	cmp	r3, #0
 8021040:	d005      	beq.n	802104e <HAL_RCC_OscConfig+0x17a>
 8021042:	687b      	ldr	r3, [r7, #4]
 8021044:	68db      	ldr	r3, [r3, #12]
 8021046:	2b01      	cmp	r3, #1
 8021048:	d001      	beq.n	802104e <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 802104a:	2301      	movs	r3, #1
 802104c:	e1df      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 802104e:	4b41      	ldr	r3, [pc, #260]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021050:	681b      	ldr	r3, [r3, #0]
 8021052:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8021056:	687b      	ldr	r3, [r7, #4]
 8021058:	691b      	ldr	r3, [r3, #16]
 802105a:	00db      	lsls	r3, r3, #3
 802105c:	493d      	ldr	r1, [pc, #244]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 802105e:	4313      	orrs	r3, r2
 8021060:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8021062:	e040      	b.n	80210e6 <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8021064:	687b      	ldr	r3, [r7, #4]
 8021066:	68db      	ldr	r3, [r3, #12]
 8021068:	2b00      	cmp	r3, #0
 802106a:	d023      	beq.n	80210b4 <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 802106c:	4b39      	ldr	r3, [pc, #228]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 802106e:	681b      	ldr	r3, [r3, #0]
 8021070:	4a38      	ldr	r2, [pc, #224]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021072:	f043 0301 	orr.w	r3, r3, #1
 8021076:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021078:	f7ff fb5c 	bl	8020734 <HAL_GetTick>
 802107c:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 802107e:	e008      	b.n	8021092 <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8021080:	f7ff fb58 	bl	8020734 <HAL_GetTick>
 8021084:	4602      	mov	r2, r0
 8021086:	693b      	ldr	r3, [r7, #16]
 8021088:	1ad3      	subs	r3, r2, r3
 802108a:	2b02      	cmp	r3, #2
 802108c:	d901      	bls.n	8021092 <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 802108e:	2303      	movs	r3, #3
 8021090:	e1bd      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8021092:	4b30      	ldr	r3, [pc, #192]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021094:	681b      	ldr	r3, [r3, #0]
 8021096:	f003 0302 	and.w	r3, r3, #2
 802109a:	2b00      	cmp	r3, #0
 802109c:	d0f0      	beq.n	8021080 <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 802109e:	4b2d      	ldr	r3, [pc, #180]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 80210a0:	681b      	ldr	r3, [r3, #0]
 80210a2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80210a6:	687b      	ldr	r3, [r7, #4]
 80210a8:	691b      	ldr	r3, [r3, #16]
 80210aa:	00db      	lsls	r3, r3, #3
 80210ac:	4929      	ldr	r1, [pc, #164]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 80210ae:	4313      	orrs	r3, r2
 80210b0:	600b      	str	r3, [r1, #0]
 80210b2:	e018      	b.n	80210e6 <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80210b4:	4b27      	ldr	r3, [pc, #156]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 80210b6:	681b      	ldr	r3, [r3, #0]
 80210b8:	4a26      	ldr	r2, [pc, #152]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 80210ba:	f023 0301 	bic.w	r3, r3, #1
 80210be:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80210c0:	f7ff fb38 	bl	8020734 <HAL_GetTick>
 80210c4:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80210c6:	e008      	b.n	80210da <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80210c8:	f7ff fb34 	bl	8020734 <HAL_GetTick>
 80210cc:	4602      	mov	r2, r0
 80210ce:	693b      	ldr	r3, [r7, #16]
 80210d0:	1ad3      	subs	r3, r2, r3
 80210d2:	2b02      	cmp	r3, #2
 80210d4:	d901      	bls.n	80210da <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 80210d6:	2303      	movs	r3, #3
 80210d8:	e199      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80210da:	4b1e      	ldr	r3, [pc, #120]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 80210dc:	681b      	ldr	r3, [r3, #0]
 80210de:	f003 0302 	and.w	r3, r3, #2
 80210e2:	2b00      	cmp	r3, #0
 80210e4:	d1f0      	bne.n	80210c8 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80210e6:	687b      	ldr	r3, [r7, #4]
 80210e8:	681b      	ldr	r3, [r3, #0]
 80210ea:	f003 0308 	and.w	r3, r3, #8
 80210ee:	2b00      	cmp	r3, #0
 80210f0:	d038      	beq.n	8021164 <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80210f2:	687b      	ldr	r3, [r7, #4]
 80210f4:	695b      	ldr	r3, [r3, #20]
 80210f6:	2b00      	cmp	r3, #0
 80210f8:	d019      	beq.n	802112e <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80210fa:	4b16      	ldr	r3, [pc, #88]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 80210fc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80210fe:	4a15      	ldr	r2, [pc, #84]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021100:	f043 0301 	orr.w	r3, r3, #1
 8021104:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8021106:	f7ff fb15 	bl	8020734 <HAL_GetTick>
 802110a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 802110c:	e008      	b.n	8021120 <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 802110e:	f7ff fb11 	bl	8020734 <HAL_GetTick>
 8021112:	4602      	mov	r2, r0
 8021114:	693b      	ldr	r3, [r7, #16]
 8021116:	1ad3      	subs	r3, r2, r3
 8021118:	2b02      	cmp	r3, #2
 802111a:	d901      	bls.n	8021120 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 802111c:	2303      	movs	r3, #3
 802111e:	e176      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8021120:	4b0c      	ldr	r3, [pc, #48]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021122:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8021124:	f003 0302 	and.w	r3, r3, #2
 8021128:	2b00      	cmp	r3, #0
 802112a:	d0f0      	beq.n	802110e <HAL_RCC_OscConfig+0x23a>
 802112c:	e01a      	b.n	8021164 <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 802112e:	4b09      	ldr	r3, [pc, #36]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021130:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8021132:	4a08      	ldr	r2, [pc, #32]	; (8021154 <HAL_RCC_OscConfig+0x280>)
 8021134:	f023 0301 	bic.w	r3, r3, #1
 8021138:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 802113a:	f7ff fafb 	bl	8020734 <HAL_GetTick>
 802113e:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8021140:	e00a      	b.n	8021158 <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8021142:	f7ff faf7 	bl	8020734 <HAL_GetTick>
 8021146:	4602      	mov	r2, r0
 8021148:	693b      	ldr	r3, [r7, #16]
 802114a:	1ad3      	subs	r3, r2, r3
 802114c:	2b02      	cmp	r3, #2
 802114e:	d903      	bls.n	8021158 <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 8021150:	2303      	movs	r3, #3
 8021152:	e15c      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
 8021154:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8021158:	4b91      	ldr	r3, [pc, #580]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 802115a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 802115c:	f003 0302 	and.w	r3, r3, #2
 8021160:	2b00      	cmp	r3, #0
 8021162:	d1ee      	bne.n	8021142 <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8021164:	687b      	ldr	r3, [r7, #4]
 8021166:	681b      	ldr	r3, [r3, #0]
 8021168:	f003 0304 	and.w	r3, r3, #4
 802116c:	2b00      	cmp	r3, #0
 802116e:	f000 80a4 	beq.w	80212ba <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8021172:	4b8b      	ldr	r3, [pc, #556]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021174:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021176:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 802117a:	2b00      	cmp	r3, #0
 802117c:	d10d      	bne.n	802119a <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 802117e:	4b88      	ldr	r3, [pc, #544]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021180:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021182:	4a87      	ldr	r2, [pc, #540]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021184:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8021188:	6413      	str	r3, [r2, #64]	; 0x40
 802118a:	4b85      	ldr	r3, [pc, #532]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 802118c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802118e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8021192:	60bb      	str	r3, [r7, #8]
 8021194:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8021196:	2301      	movs	r3, #1
 8021198:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 802119a:	4b82      	ldr	r3, [pc, #520]	; (80213a4 <HAL_RCC_OscConfig+0x4d0>)
 802119c:	681b      	ldr	r3, [r3, #0]
 802119e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80211a2:	2b00      	cmp	r3, #0
 80211a4:	d118      	bne.n	80211d8 <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 80211a6:	4b7f      	ldr	r3, [pc, #508]	; (80213a4 <HAL_RCC_OscConfig+0x4d0>)
 80211a8:	681b      	ldr	r3, [r3, #0]
 80211aa:	4a7e      	ldr	r2, [pc, #504]	; (80213a4 <HAL_RCC_OscConfig+0x4d0>)
 80211ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80211b0:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80211b2:	f7ff fabf 	bl	8020734 <HAL_GetTick>
 80211b6:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80211b8:	e008      	b.n	80211cc <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80211ba:	f7ff fabb 	bl	8020734 <HAL_GetTick>
 80211be:	4602      	mov	r2, r0
 80211c0:	693b      	ldr	r3, [r7, #16]
 80211c2:	1ad3      	subs	r3, r2, r3
 80211c4:	2b64      	cmp	r3, #100	; 0x64
 80211c6:	d901      	bls.n	80211cc <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 80211c8:	2303      	movs	r3, #3
 80211ca:	e120      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80211cc:	4b75      	ldr	r3, [pc, #468]	; (80213a4 <HAL_RCC_OscConfig+0x4d0>)
 80211ce:	681b      	ldr	r3, [r3, #0]
 80211d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80211d4:	2b00      	cmp	r3, #0
 80211d6:	d0f0      	beq.n	80211ba <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80211d8:	687b      	ldr	r3, [r7, #4]
 80211da:	689b      	ldr	r3, [r3, #8]
 80211dc:	2b01      	cmp	r3, #1
 80211de:	d106      	bne.n	80211ee <HAL_RCC_OscConfig+0x31a>
 80211e0:	4b6f      	ldr	r3, [pc, #444]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 80211e2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80211e4:	4a6e      	ldr	r2, [pc, #440]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 80211e6:	f043 0301 	orr.w	r3, r3, #1
 80211ea:	6713      	str	r3, [r2, #112]	; 0x70
 80211ec:	e02d      	b.n	802124a <HAL_RCC_OscConfig+0x376>
 80211ee:	687b      	ldr	r3, [r7, #4]
 80211f0:	689b      	ldr	r3, [r3, #8]
 80211f2:	2b00      	cmp	r3, #0
 80211f4:	d10c      	bne.n	8021210 <HAL_RCC_OscConfig+0x33c>
 80211f6:	4b6a      	ldr	r3, [pc, #424]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 80211f8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80211fa:	4a69      	ldr	r2, [pc, #420]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 80211fc:	f023 0301 	bic.w	r3, r3, #1
 8021200:	6713      	str	r3, [r2, #112]	; 0x70
 8021202:	4b67      	ldr	r3, [pc, #412]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021204:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021206:	4a66      	ldr	r2, [pc, #408]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021208:	f023 0304 	bic.w	r3, r3, #4
 802120c:	6713      	str	r3, [r2, #112]	; 0x70
 802120e:	e01c      	b.n	802124a <HAL_RCC_OscConfig+0x376>
 8021210:	687b      	ldr	r3, [r7, #4]
 8021212:	689b      	ldr	r3, [r3, #8]
 8021214:	2b05      	cmp	r3, #5
 8021216:	d10c      	bne.n	8021232 <HAL_RCC_OscConfig+0x35e>
 8021218:	4b61      	ldr	r3, [pc, #388]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 802121a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802121c:	4a60      	ldr	r2, [pc, #384]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 802121e:	f043 0304 	orr.w	r3, r3, #4
 8021222:	6713      	str	r3, [r2, #112]	; 0x70
 8021224:	4b5e      	ldr	r3, [pc, #376]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021226:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021228:	4a5d      	ldr	r2, [pc, #372]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 802122a:	f043 0301 	orr.w	r3, r3, #1
 802122e:	6713      	str	r3, [r2, #112]	; 0x70
 8021230:	e00b      	b.n	802124a <HAL_RCC_OscConfig+0x376>
 8021232:	4b5b      	ldr	r3, [pc, #364]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021234:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021236:	4a5a      	ldr	r2, [pc, #360]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021238:	f023 0301 	bic.w	r3, r3, #1
 802123c:	6713      	str	r3, [r2, #112]	; 0x70
 802123e:	4b58      	ldr	r3, [pc, #352]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021240:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021242:	4a57      	ldr	r2, [pc, #348]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021244:	f023 0304 	bic.w	r3, r3, #4
 8021248:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 802124a:	687b      	ldr	r3, [r7, #4]
 802124c:	689b      	ldr	r3, [r3, #8]
 802124e:	2b00      	cmp	r3, #0
 8021250:	d015      	beq.n	802127e <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8021252:	f7ff fa6f 	bl	8020734 <HAL_GetTick>
 8021256:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8021258:	e00a      	b.n	8021270 <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 802125a:	f7ff fa6b 	bl	8020734 <HAL_GetTick>
 802125e:	4602      	mov	r2, r0
 8021260:	693b      	ldr	r3, [r7, #16]
 8021262:	1ad3      	subs	r3, r2, r3
 8021264:	f241 3288 	movw	r2, #5000	; 0x1388
 8021268:	4293      	cmp	r3, r2
 802126a:	d901      	bls.n	8021270 <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 802126c:	2303      	movs	r3, #3
 802126e:	e0ce      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8021270:	4b4b      	ldr	r3, [pc, #300]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021272:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021274:	f003 0302 	and.w	r3, r3, #2
 8021278:	2b00      	cmp	r3, #0
 802127a:	d0ee      	beq.n	802125a <HAL_RCC_OscConfig+0x386>
 802127c:	e014      	b.n	80212a8 <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 802127e:	f7ff fa59 	bl	8020734 <HAL_GetTick>
 8021282:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8021284:	e00a      	b.n	802129c <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8021286:	f7ff fa55 	bl	8020734 <HAL_GetTick>
 802128a:	4602      	mov	r2, r0
 802128c:	693b      	ldr	r3, [r7, #16]
 802128e:	1ad3      	subs	r3, r2, r3
 8021290:	f241 3288 	movw	r2, #5000	; 0x1388
 8021294:	4293      	cmp	r3, r2
 8021296:	d901      	bls.n	802129c <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 8021298:	2303      	movs	r3, #3
 802129a:	e0b8      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 802129c:	4b40      	ldr	r3, [pc, #256]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 802129e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80212a0:	f003 0302 	and.w	r3, r3, #2
 80212a4:	2b00      	cmp	r3, #0
 80212a6:	d1ee      	bne.n	8021286 <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 80212a8:	7dfb      	ldrb	r3, [r7, #23]
 80212aa:	2b01      	cmp	r3, #1
 80212ac:	d105      	bne.n	80212ba <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80212ae:	4b3c      	ldr	r3, [pc, #240]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 80212b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80212b2:	4a3b      	ldr	r2, [pc, #236]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 80212b4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80212b8:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80212ba:	687b      	ldr	r3, [r7, #4]
 80212bc:	699b      	ldr	r3, [r3, #24]
 80212be:	2b00      	cmp	r3, #0
 80212c0:	f000 80a4 	beq.w	802140c <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80212c4:	4b36      	ldr	r3, [pc, #216]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 80212c6:	689b      	ldr	r3, [r3, #8]
 80212c8:	f003 030c 	and.w	r3, r3, #12
 80212cc:	2b08      	cmp	r3, #8
 80212ce:	d06b      	beq.n	80213a8 <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80212d0:	687b      	ldr	r3, [r7, #4]
 80212d2:	699b      	ldr	r3, [r3, #24]
 80212d4:	2b02      	cmp	r3, #2
 80212d6:	d149      	bne.n	802136c <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80212d8:	4b31      	ldr	r3, [pc, #196]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 80212da:	681b      	ldr	r3, [r3, #0]
 80212dc:	4a30      	ldr	r2, [pc, #192]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 80212de:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80212e2:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80212e4:	f7ff fa26 	bl	8020734 <HAL_GetTick>
 80212e8:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80212ea:	e008      	b.n	80212fe <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80212ec:	f7ff fa22 	bl	8020734 <HAL_GetTick>
 80212f0:	4602      	mov	r2, r0
 80212f2:	693b      	ldr	r3, [r7, #16]
 80212f4:	1ad3      	subs	r3, r2, r3
 80212f6:	2b02      	cmp	r3, #2
 80212f8:	d901      	bls.n	80212fe <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 80212fa:	2303      	movs	r3, #3
 80212fc:	e087      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80212fe:	4b28      	ldr	r3, [pc, #160]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021300:	681b      	ldr	r3, [r3, #0]
 8021302:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021306:	2b00      	cmp	r3, #0
 8021308:	d1f0      	bne.n	80212ec <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 802130a:	687b      	ldr	r3, [r7, #4]
 802130c:	69da      	ldr	r2, [r3, #28]
 802130e:	687b      	ldr	r3, [r7, #4]
 8021310:	6a1b      	ldr	r3, [r3, #32]
 8021312:	431a      	orrs	r2, r3
 8021314:	687b      	ldr	r3, [r7, #4]
 8021316:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021318:	019b      	lsls	r3, r3, #6
 802131a:	431a      	orrs	r2, r3
 802131c:	687b      	ldr	r3, [r7, #4]
 802131e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021320:	085b      	lsrs	r3, r3, #1
 8021322:	3b01      	subs	r3, #1
 8021324:	041b      	lsls	r3, r3, #16
 8021326:	431a      	orrs	r2, r3
 8021328:	687b      	ldr	r3, [r7, #4]
 802132a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802132c:	061b      	lsls	r3, r3, #24
 802132e:	4313      	orrs	r3, r2
 8021330:	4a1b      	ldr	r2, [pc, #108]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021332:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8021336:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8021338:	4b19      	ldr	r3, [pc, #100]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 802133a:	681b      	ldr	r3, [r3, #0]
 802133c:	4a18      	ldr	r2, [pc, #96]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 802133e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8021342:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021344:	f7ff f9f6 	bl	8020734 <HAL_GetTick>
 8021348:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 802134a:	e008      	b.n	802135e <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 802134c:	f7ff f9f2 	bl	8020734 <HAL_GetTick>
 8021350:	4602      	mov	r2, r0
 8021352:	693b      	ldr	r3, [r7, #16]
 8021354:	1ad3      	subs	r3, r2, r3
 8021356:	2b02      	cmp	r3, #2
 8021358:	d901      	bls.n	802135e <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 802135a:	2303      	movs	r3, #3
 802135c:	e057      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 802135e:	4b10      	ldr	r3, [pc, #64]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021360:	681b      	ldr	r3, [r3, #0]
 8021362:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021366:	2b00      	cmp	r3, #0
 8021368:	d0f0      	beq.n	802134c <HAL_RCC_OscConfig+0x478>
 802136a:	e04f      	b.n	802140c <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 802136c:	4b0c      	ldr	r3, [pc, #48]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 802136e:	681b      	ldr	r3, [r3, #0]
 8021370:	4a0b      	ldr	r2, [pc, #44]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021372:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8021376:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021378:	f7ff f9dc 	bl	8020734 <HAL_GetTick>
 802137c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 802137e:	e008      	b.n	8021392 <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8021380:	f7ff f9d8 	bl	8020734 <HAL_GetTick>
 8021384:	4602      	mov	r2, r0
 8021386:	693b      	ldr	r3, [r7, #16]
 8021388:	1ad3      	subs	r3, r2, r3
 802138a:	2b02      	cmp	r3, #2
 802138c:	d901      	bls.n	8021392 <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 802138e:	2303      	movs	r3, #3
 8021390:	e03d      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8021392:	4b03      	ldr	r3, [pc, #12]	; (80213a0 <HAL_RCC_OscConfig+0x4cc>)
 8021394:	681b      	ldr	r3, [r3, #0]
 8021396:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 802139a:	2b00      	cmp	r3, #0
 802139c:	d1f0      	bne.n	8021380 <HAL_RCC_OscConfig+0x4ac>
 802139e:	e035      	b.n	802140c <HAL_RCC_OscConfig+0x538>
 80213a0:	40023800 	.word	0x40023800
 80213a4:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 80213a8:	4b1b      	ldr	r3, [pc, #108]	; (8021418 <HAL_RCC_OscConfig+0x544>)
 80213aa:	685b      	ldr	r3, [r3, #4]
 80213ac:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80213ae:	687b      	ldr	r3, [r7, #4]
 80213b0:	699b      	ldr	r3, [r3, #24]
 80213b2:	2b01      	cmp	r3, #1
 80213b4:	d028      	beq.n	8021408 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80213b6:	68fb      	ldr	r3, [r7, #12]
 80213b8:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80213bc:	687b      	ldr	r3, [r7, #4]
 80213be:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80213c0:	429a      	cmp	r2, r3
 80213c2:	d121      	bne.n	8021408 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80213c4:	68fb      	ldr	r3, [r7, #12]
 80213c6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80213ca:	687b      	ldr	r3, [r7, #4]
 80213cc:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80213ce:	429a      	cmp	r2, r3
 80213d0:	d11a      	bne.n	8021408 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80213d2:	68fa      	ldr	r2, [r7, #12]
 80213d4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80213d8:	4013      	ands	r3, r2
 80213da:	687a      	ldr	r2, [r7, #4]
 80213dc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80213de:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80213e0:	4293      	cmp	r3, r2
 80213e2:	d111      	bne.n	8021408 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80213e4:	68fb      	ldr	r3, [r7, #12]
 80213e6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80213ea:	687b      	ldr	r3, [r7, #4]
 80213ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80213ee:	085b      	lsrs	r3, r3, #1
 80213f0:	3b01      	subs	r3, #1
 80213f2:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80213f4:	429a      	cmp	r2, r3
 80213f6:	d107      	bne.n	8021408 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80213f8:	68fb      	ldr	r3, [r7, #12]
 80213fa:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80213fe:	687b      	ldr	r3, [r7, #4]
 8021400:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021402:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8021404:	429a      	cmp	r2, r3
 8021406:	d001      	beq.n	802140c <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 8021408:	2301      	movs	r3, #1
 802140a:	e000      	b.n	802140e <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 802140c:	2300      	movs	r3, #0
}
 802140e:	4618      	mov	r0, r3
 8021410:	3718      	adds	r7, #24
 8021412:	46bd      	mov	sp, r7
 8021414:	bd80      	pop	{r7, pc}
 8021416:	bf00      	nop
 8021418:	40023800 	.word	0x40023800

0802141c <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 802141c:	b580      	push	{r7, lr}
 802141e:	b084      	sub	sp, #16
 8021420:	af00      	add	r7, sp, #0
 8021422:	6078      	str	r0, [r7, #4]
 8021424:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 8021426:	2300      	movs	r3, #0
 8021428:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 802142a:	687b      	ldr	r3, [r7, #4]
 802142c:	2b00      	cmp	r3, #0
 802142e:	d101      	bne.n	8021434 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 8021430:	2301      	movs	r3, #1
 8021432:	e0d0      	b.n	80215d6 <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8021434:	4b6a      	ldr	r3, [pc, #424]	; (80215e0 <HAL_RCC_ClockConfig+0x1c4>)
 8021436:	681b      	ldr	r3, [r3, #0]
 8021438:	f003 030f 	and.w	r3, r3, #15
 802143c:	683a      	ldr	r2, [r7, #0]
 802143e:	429a      	cmp	r2, r3
 8021440:	d910      	bls.n	8021464 <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8021442:	4b67      	ldr	r3, [pc, #412]	; (80215e0 <HAL_RCC_ClockConfig+0x1c4>)
 8021444:	681b      	ldr	r3, [r3, #0]
 8021446:	f023 020f 	bic.w	r2, r3, #15
 802144a:	4965      	ldr	r1, [pc, #404]	; (80215e0 <HAL_RCC_ClockConfig+0x1c4>)
 802144c:	683b      	ldr	r3, [r7, #0]
 802144e:	4313      	orrs	r3, r2
 8021450:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8021452:	4b63      	ldr	r3, [pc, #396]	; (80215e0 <HAL_RCC_ClockConfig+0x1c4>)
 8021454:	681b      	ldr	r3, [r3, #0]
 8021456:	f003 030f 	and.w	r3, r3, #15
 802145a:	683a      	ldr	r2, [r7, #0]
 802145c:	429a      	cmp	r2, r3
 802145e:	d001      	beq.n	8021464 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 8021460:	2301      	movs	r3, #1
 8021462:	e0b8      	b.n	80215d6 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8021464:	687b      	ldr	r3, [r7, #4]
 8021466:	681b      	ldr	r3, [r3, #0]
 8021468:	f003 0302 	and.w	r3, r3, #2
 802146c:	2b00      	cmp	r3, #0
 802146e:	d020      	beq.n	80214b2 <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8021470:	687b      	ldr	r3, [r7, #4]
 8021472:	681b      	ldr	r3, [r3, #0]
 8021474:	f003 0304 	and.w	r3, r3, #4
 8021478:	2b00      	cmp	r3, #0
 802147a:	d005      	beq.n	8021488 <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 802147c:	4b59      	ldr	r3, [pc, #356]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 802147e:	689b      	ldr	r3, [r3, #8]
 8021480:	4a58      	ldr	r2, [pc, #352]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 8021482:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8021486:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8021488:	687b      	ldr	r3, [r7, #4]
 802148a:	681b      	ldr	r3, [r3, #0]
 802148c:	f003 0308 	and.w	r3, r3, #8
 8021490:	2b00      	cmp	r3, #0
 8021492:	d005      	beq.n	80214a0 <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8021494:	4b53      	ldr	r3, [pc, #332]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 8021496:	689b      	ldr	r3, [r3, #8]
 8021498:	4a52      	ldr	r2, [pc, #328]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 802149a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 802149e:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80214a0:	4b50      	ldr	r3, [pc, #320]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 80214a2:	689b      	ldr	r3, [r3, #8]
 80214a4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80214a8:	687b      	ldr	r3, [r7, #4]
 80214aa:	689b      	ldr	r3, [r3, #8]
 80214ac:	494d      	ldr	r1, [pc, #308]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 80214ae:	4313      	orrs	r3, r2
 80214b0:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80214b2:	687b      	ldr	r3, [r7, #4]
 80214b4:	681b      	ldr	r3, [r3, #0]
 80214b6:	f003 0301 	and.w	r3, r3, #1
 80214ba:	2b00      	cmp	r3, #0
 80214bc:	d040      	beq.n	8021540 <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80214be:	687b      	ldr	r3, [r7, #4]
 80214c0:	685b      	ldr	r3, [r3, #4]
 80214c2:	2b01      	cmp	r3, #1
 80214c4:	d107      	bne.n	80214d6 <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80214c6:	4b47      	ldr	r3, [pc, #284]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 80214c8:	681b      	ldr	r3, [r3, #0]
 80214ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80214ce:	2b00      	cmp	r3, #0
 80214d0:	d115      	bne.n	80214fe <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80214d2:	2301      	movs	r3, #1
 80214d4:	e07f      	b.n	80215d6 <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80214d6:	687b      	ldr	r3, [r7, #4]
 80214d8:	685b      	ldr	r3, [r3, #4]
 80214da:	2b02      	cmp	r3, #2
 80214dc:	d107      	bne.n	80214ee <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80214de:	4b41      	ldr	r3, [pc, #260]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 80214e0:	681b      	ldr	r3, [r3, #0]
 80214e2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80214e6:	2b00      	cmp	r3, #0
 80214e8:	d109      	bne.n	80214fe <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80214ea:	2301      	movs	r3, #1
 80214ec:	e073      	b.n	80215d6 <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80214ee:	4b3d      	ldr	r3, [pc, #244]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 80214f0:	681b      	ldr	r3, [r3, #0]
 80214f2:	f003 0302 	and.w	r3, r3, #2
 80214f6:	2b00      	cmp	r3, #0
 80214f8:	d101      	bne.n	80214fe <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80214fa:	2301      	movs	r3, #1
 80214fc:	e06b      	b.n	80215d6 <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80214fe:	4b39      	ldr	r3, [pc, #228]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 8021500:	689b      	ldr	r3, [r3, #8]
 8021502:	f023 0203 	bic.w	r2, r3, #3
 8021506:	687b      	ldr	r3, [r7, #4]
 8021508:	685b      	ldr	r3, [r3, #4]
 802150a:	4936      	ldr	r1, [pc, #216]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 802150c:	4313      	orrs	r3, r2
 802150e:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021510:	f7ff f910 	bl	8020734 <HAL_GetTick>
 8021514:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8021516:	e00a      	b.n	802152e <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8021518:	f7ff f90c 	bl	8020734 <HAL_GetTick>
 802151c:	4602      	mov	r2, r0
 802151e:	68fb      	ldr	r3, [r7, #12]
 8021520:	1ad3      	subs	r3, r2, r3
 8021522:	f241 3288 	movw	r2, #5000	; 0x1388
 8021526:	4293      	cmp	r3, r2
 8021528:	d901      	bls.n	802152e <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 802152a:	2303      	movs	r3, #3
 802152c:	e053      	b.n	80215d6 <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 802152e:	4b2d      	ldr	r3, [pc, #180]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 8021530:	689b      	ldr	r3, [r3, #8]
 8021532:	f003 020c 	and.w	r2, r3, #12
 8021536:	687b      	ldr	r3, [r7, #4]
 8021538:	685b      	ldr	r3, [r3, #4]
 802153a:	009b      	lsls	r3, r3, #2
 802153c:	429a      	cmp	r2, r3
 802153e:	d1eb      	bne.n	8021518 <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8021540:	4b27      	ldr	r3, [pc, #156]	; (80215e0 <HAL_RCC_ClockConfig+0x1c4>)
 8021542:	681b      	ldr	r3, [r3, #0]
 8021544:	f003 030f 	and.w	r3, r3, #15
 8021548:	683a      	ldr	r2, [r7, #0]
 802154a:	429a      	cmp	r2, r3
 802154c:	d210      	bcs.n	8021570 <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 802154e:	4b24      	ldr	r3, [pc, #144]	; (80215e0 <HAL_RCC_ClockConfig+0x1c4>)
 8021550:	681b      	ldr	r3, [r3, #0]
 8021552:	f023 020f 	bic.w	r2, r3, #15
 8021556:	4922      	ldr	r1, [pc, #136]	; (80215e0 <HAL_RCC_ClockConfig+0x1c4>)
 8021558:	683b      	ldr	r3, [r7, #0]
 802155a:	4313      	orrs	r3, r2
 802155c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 802155e:	4b20      	ldr	r3, [pc, #128]	; (80215e0 <HAL_RCC_ClockConfig+0x1c4>)
 8021560:	681b      	ldr	r3, [r3, #0]
 8021562:	f003 030f 	and.w	r3, r3, #15
 8021566:	683a      	ldr	r2, [r7, #0]
 8021568:	429a      	cmp	r2, r3
 802156a:	d001      	beq.n	8021570 <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 802156c:	2301      	movs	r3, #1
 802156e:	e032      	b.n	80215d6 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8021570:	687b      	ldr	r3, [r7, #4]
 8021572:	681b      	ldr	r3, [r3, #0]
 8021574:	f003 0304 	and.w	r3, r3, #4
 8021578:	2b00      	cmp	r3, #0
 802157a:	d008      	beq.n	802158e <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 802157c:	4b19      	ldr	r3, [pc, #100]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 802157e:	689b      	ldr	r3, [r3, #8]
 8021580:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8021584:	687b      	ldr	r3, [r7, #4]
 8021586:	68db      	ldr	r3, [r3, #12]
 8021588:	4916      	ldr	r1, [pc, #88]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 802158a:	4313      	orrs	r3, r2
 802158c:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 802158e:	687b      	ldr	r3, [r7, #4]
 8021590:	681b      	ldr	r3, [r3, #0]
 8021592:	f003 0308 	and.w	r3, r3, #8
 8021596:	2b00      	cmp	r3, #0
 8021598:	d009      	beq.n	80215ae <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 802159a:	4b12      	ldr	r3, [pc, #72]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 802159c:	689b      	ldr	r3, [r3, #8]
 802159e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80215a2:	687b      	ldr	r3, [r7, #4]
 80215a4:	691b      	ldr	r3, [r3, #16]
 80215a6:	00db      	lsls	r3, r3, #3
 80215a8:	490e      	ldr	r1, [pc, #56]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 80215aa:	4313      	orrs	r3, r2
 80215ac:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80215ae:	f000 f821 	bl	80215f4 <HAL_RCC_GetSysClockFreq>
 80215b2:	4602      	mov	r2, r0
 80215b4:	4b0b      	ldr	r3, [pc, #44]	; (80215e4 <HAL_RCC_ClockConfig+0x1c8>)
 80215b6:	689b      	ldr	r3, [r3, #8]
 80215b8:	091b      	lsrs	r3, r3, #4
 80215ba:	f003 030f 	and.w	r3, r3, #15
 80215be:	490a      	ldr	r1, [pc, #40]	; (80215e8 <HAL_RCC_ClockConfig+0x1cc>)
 80215c0:	5ccb      	ldrb	r3, [r1, r3]
 80215c2:	fa22 f303 	lsr.w	r3, r2, r3
 80215c6:	4a09      	ldr	r2, [pc, #36]	; (80215ec <HAL_RCC_ClockConfig+0x1d0>)
 80215c8:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 80215ca:	4b09      	ldr	r3, [pc, #36]	; (80215f0 <HAL_RCC_ClockConfig+0x1d4>)
 80215cc:	681b      	ldr	r3, [r3, #0]
 80215ce:	4618      	mov	r0, r3
 80215d0:	f7ff f86c 	bl	80206ac <HAL_InitTick>

  return HAL_OK;
 80215d4:	2300      	movs	r3, #0
}
 80215d6:	4618      	mov	r0, r3
 80215d8:	3710      	adds	r7, #16
 80215da:	46bd      	mov	sp, r7
 80215dc:	bd80      	pop	{r7, pc}
 80215de:	bf00      	nop
 80215e0:	40023c00 	.word	0x40023c00
 80215e4:	40023800 	.word	0x40023800
 80215e8:	0802a060 	.word	0x0802a060
 80215ec:	20000004 	.word	0x20000004
 80215f0:	20000008 	.word	0x20000008

080215f4 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80215f4:	b5b0      	push	{r4, r5, r7, lr}
 80215f6:	b084      	sub	sp, #16
 80215f8:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 80215fa:	2100      	movs	r1, #0
 80215fc:	6079      	str	r1, [r7, #4]
 80215fe:	2100      	movs	r1, #0
 8021600:	60f9      	str	r1, [r7, #12]
 8021602:	2100      	movs	r1, #0
 8021604:	6039      	str	r1, [r7, #0]
  uint32_t sysclockfreq = 0;
 8021606:	2100      	movs	r1, #0
 8021608:	60b9      	str	r1, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 802160a:	4952      	ldr	r1, [pc, #328]	; (8021754 <HAL_RCC_GetSysClockFreq+0x160>)
 802160c:	6889      	ldr	r1, [r1, #8]
 802160e:	f001 010c 	and.w	r1, r1, #12
 8021612:	2908      	cmp	r1, #8
 8021614:	d00d      	beq.n	8021632 <HAL_RCC_GetSysClockFreq+0x3e>
 8021616:	2908      	cmp	r1, #8
 8021618:	f200 8094 	bhi.w	8021744 <HAL_RCC_GetSysClockFreq+0x150>
 802161c:	2900      	cmp	r1, #0
 802161e:	d002      	beq.n	8021626 <HAL_RCC_GetSysClockFreq+0x32>
 8021620:	2904      	cmp	r1, #4
 8021622:	d003      	beq.n	802162c <HAL_RCC_GetSysClockFreq+0x38>
 8021624:	e08e      	b.n	8021744 <HAL_RCC_GetSysClockFreq+0x150>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8021626:	4b4c      	ldr	r3, [pc, #304]	; (8021758 <HAL_RCC_GetSysClockFreq+0x164>)
 8021628:	60bb      	str	r3, [r7, #8]
      break;
 802162a:	e08e      	b.n	802174a <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 802162c:	4b4b      	ldr	r3, [pc, #300]	; (802175c <HAL_RCC_GetSysClockFreq+0x168>)
 802162e:	60bb      	str	r3, [r7, #8]
      break;
 8021630:	e08b      	b.n	802174a <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8021632:	4948      	ldr	r1, [pc, #288]	; (8021754 <HAL_RCC_GetSysClockFreq+0x160>)
 8021634:	6849      	ldr	r1, [r1, #4]
 8021636:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 802163a:	6079      	str	r1, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 802163c:	4945      	ldr	r1, [pc, #276]	; (8021754 <HAL_RCC_GetSysClockFreq+0x160>)
 802163e:	6849      	ldr	r1, [r1, #4]
 8021640:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 8021644:	2900      	cmp	r1, #0
 8021646:	d024      	beq.n	8021692 <HAL_RCC_GetSysClockFreq+0x9e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8021648:	4942      	ldr	r1, [pc, #264]	; (8021754 <HAL_RCC_GetSysClockFreq+0x160>)
 802164a:	6849      	ldr	r1, [r1, #4]
 802164c:	0989      	lsrs	r1, r1, #6
 802164e:	4608      	mov	r0, r1
 8021650:	f04f 0100 	mov.w	r1, #0
 8021654:	f240 14ff 	movw	r4, #511	; 0x1ff
 8021658:	f04f 0500 	mov.w	r5, #0
 802165c:	ea00 0204 	and.w	r2, r0, r4
 8021660:	ea01 0305 	and.w	r3, r1, r5
 8021664:	493d      	ldr	r1, [pc, #244]	; (802175c <HAL_RCC_GetSysClockFreq+0x168>)
 8021666:	fb01 f003 	mul.w	r0, r1, r3
 802166a:	2100      	movs	r1, #0
 802166c:	fb01 f102 	mul.w	r1, r1, r2
 8021670:	1844      	adds	r4, r0, r1
 8021672:	493a      	ldr	r1, [pc, #232]	; (802175c <HAL_RCC_GetSysClockFreq+0x168>)
 8021674:	fba2 0101 	umull	r0, r1, r2, r1
 8021678:	1863      	adds	r3, r4, r1
 802167a:	4619      	mov	r1, r3
 802167c:	687b      	ldr	r3, [r7, #4]
 802167e:	461a      	mov	r2, r3
 8021680:	f04f 0300 	mov.w	r3, #0
 8021684:	f7df fb20 	bl	8000cc8 <__aeabi_uldivmod>
 8021688:	4602      	mov	r2, r0
 802168a:	460b      	mov	r3, r1
 802168c:	4613      	mov	r3, r2
 802168e:	60fb      	str	r3, [r7, #12]
 8021690:	e04a      	b.n	8021728 <HAL_RCC_GetSysClockFreq+0x134>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8021692:	4b30      	ldr	r3, [pc, #192]	; (8021754 <HAL_RCC_GetSysClockFreq+0x160>)
 8021694:	685b      	ldr	r3, [r3, #4]
 8021696:	099b      	lsrs	r3, r3, #6
 8021698:	461a      	mov	r2, r3
 802169a:	f04f 0300 	mov.w	r3, #0
 802169e:	f240 10ff 	movw	r0, #511	; 0x1ff
 80216a2:	f04f 0100 	mov.w	r1, #0
 80216a6:	ea02 0400 	and.w	r4, r2, r0
 80216aa:	ea03 0501 	and.w	r5, r3, r1
 80216ae:	4620      	mov	r0, r4
 80216b0:	4629      	mov	r1, r5
 80216b2:	f04f 0200 	mov.w	r2, #0
 80216b6:	f04f 0300 	mov.w	r3, #0
 80216ba:	014b      	lsls	r3, r1, #5
 80216bc:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80216c0:	0142      	lsls	r2, r0, #5
 80216c2:	4610      	mov	r0, r2
 80216c4:	4619      	mov	r1, r3
 80216c6:	1b00      	subs	r0, r0, r4
 80216c8:	eb61 0105 	sbc.w	r1, r1, r5
 80216cc:	f04f 0200 	mov.w	r2, #0
 80216d0:	f04f 0300 	mov.w	r3, #0
 80216d4:	018b      	lsls	r3, r1, #6
 80216d6:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80216da:	0182      	lsls	r2, r0, #6
 80216dc:	1a12      	subs	r2, r2, r0
 80216de:	eb63 0301 	sbc.w	r3, r3, r1
 80216e2:	f04f 0000 	mov.w	r0, #0
 80216e6:	f04f 0100 	mov.w	r1, #0
 80216ea:	00d9      	lsls	r1, r3, #3
 80216ec:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80216f0:	00d0      	lsls	r0, r2, #3
 80216f2:	4602      	mov	r2, r0
 80216f4:	460b      	mov	r3, r1
 80216f6:	1912      	adds	r2, r2, r4
 80216f8:	eb45 0303 	adc.w	r3, r5, r3
 80216fc:	f04f 0000 	mov.w	r0, #0
 8021700:	f04f 0100 	mov.w	r1, #0
 8021704:	0299      	lsls	r1, r3, #10
 8021706:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 802170a:	0290      	lsls	r0, r2, #10
 802170c:	4602      	mov	r2, r0
 802170e:	460b      	mov	r3, r1
 8021710:	4610      	mov	r0, r2
 8021712:	4619      	mov	r1, r3
 8021714:	687b      	ldr	r3, [r7, #4]
 8021716:	461a      	mov	r2, r3
 8021718:	f04f 0300 	mov.w	r3, #0
 802171c:	f7df fad4 	bl	8000cc8 <__aeabi_uldivmod>
 8021720:	4602      	mov	r2, r0
 8021722:	460b      	mov	r3, r1
 8021724:	4613      	mov	r3, r2
 8021726:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8021728:	4b0a      	ldr	r3, [pc, #40]	; (8021754 <HAL_RCC_GetSysClockFreq+0x160>)
 802172a:	685b      	ldr	r3, [r3, #4]
 802172c:	0c1b      	lsrs	r3, r3, #16
 802172e:	f003 0303 	and.w	r3, r3, #3
 8021732:	3301      	adds	r3, #1
 8021734:	005b      	lsls	r3, r3, #1
 8021736:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco / pllp;
 8021738:	68fa      	ldr	r2, [r7, #12]
 802173a:	683b      	ldr	r3, [r7, #0]
 802173c:	fbb2 f3f3 	udiv	r3, r2, r3
 8021740:	60bb      	str	r3, [r7, #8]
      break;
 8021742:	e002      	b.n	802174a <HAL_RCC_GetSysClockFreq+0x156>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8021744:	4b04      	ldr	r3, [pc, #16]	; (8021758 <HAL_RCC_GetSysClockFreq+0x164>)
 8021746:	60bb      	str	r3, [r7, #8]
      break;
 8021748:	bf00      	nop
    }
  }
  return sysclockfreq;
 802174a:	68bb      	ldr	r3, [r7, #8]
}
 802174c:	4618      	mov	r0, r3
 802174e:	3710      	adds	r7, #16
 8021750:	46bd      	mov	sp, r7
 8021752:	bdb0      	pop	{r4, r5, r7, pc}
 8021754:	40023800 	.word	0x40023800
 8021758:	00f42400 	.word	0x00f42400
 802175c:	017d7840 	.word	0x017d7840

08021760 <HAL_RCC_GetHCLKFreq>:
  *         right HCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8021760:	b480      	push	{r7}
 8021762:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8021764:	4b03      	ldr	r3, [pc, #12]	; (8021774 <HAL_RCC_GetHCLKFreq+0x14>)
 8021766:	681b      	ldr	r3, [r3, #0]
}
 8021768:	4618      	mov	r0, r3
 802176a:	46bd      	mov	sp, r7
 802176c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8021770:	4770      	bx	lr
 8021772:	bf00      	nop
 8021774:	20000004 	.word	0x20000004

08021778 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8021778:	b580      	push	{r7, lr}
 802177a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 802177c:	f7ff fff0 	bl	8021760 <HAL_RCC_GetHCLKFreq>
 8021780:	4602      	mov	r2, r0
 8021782:	4b05      	ldr	r3, [pc, #20]	; (8021798 <HAL_RCC_GetPCLK1Freq+0x20>)
 8021784:	689b      	ldr	r3, [r3, #8]
 8021786:	0a9b      	lsrs	r3, r3, #10
 8021788:	f003 0307 	and.w	r3, r3, #7
 802178c:	4903      	ldr	r1, [pc, #12]	; (802179c <HAL_RCC_GetPCLK1Freq+0x24>)
 802178e:	5ccb      	ldrb	r3, [r1, r3]
 8021790:	fa22 f303 	lsr.w	r3, r2, r3
}
 8021794:	4618      	mov	r0, r3
 8021796:	bd80      	pop	{r7, pc}
 8021798:	40023800 	.word	0x40023800
 802179c:	0802a070 	.word	0x0802a070

080217a0 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80217a0:	b580      	push	{r7, lr}
 80217a2:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 80217a4:	f7ff ffdc 	bl	8021760 <HAL_RCC_GetHCLKFreq>
 80217a8:	4602      	mov	r2, r0
 80217aa:	4b05      	ldr	r3, [pc, #20]	; (80217c0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80217ac:	689b      	ldr	r3, [r3, #8]
 80217ae:	0b5b      	lsrs	r3, r3, #13
 80217b0:	f003 0307 	and.w	r3, r3, #7
 80217b4:	4903      	ldr	r1, [pc, #12]	; (80217c4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80217b6:	5ccb      	ldrb	r3, [r1, r3]
 80217b8:	fa22 f303 	lsr.w	r3, r2, r3
}
 80217bc:	4618      	mov	r0, r3
 80217be:	bd80      	pop	{r7, pc}
 80217c0:	40023800 	.word	0x40023800
 80217c4:	0802a070 	.word	0x0802a070

080217c8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80217c8:	b580      	push	{r7, lr}
 80217ca:	b088      	sub	sp, #32
 80217cc:	af00      	add	r7, sp, #0
 80217ce:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 80217d0:	2300      	movs	r3, #0
 80217d2:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 80217d4:	2300      	movs	r3, #0
 80217d6:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 80217d8:	2300      	movs	r3, #0
 80217da:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 80217dc:	2300      	movs	r3, #0
 80217de:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 80217e0:	2300      	movs	r3, #0
 80217e2:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80217e4:	687b      	ldr	r3, [r7, #4]
 80217e6:	681b      	ldr	r3, [r3, #0]
 80217e8:	f003 0301 	and.w	r3, r3, #1
 80217ec:	2b00      	cmp	r3, #0
 80217ee:	d012      	beq.n	8021816 <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80217f0:	4b69      	ldr	r3, [pc, #420]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80217f2:	689b      	ldr	r3, [r3, #8]
 80217f4:	4a68      	ldr	r2, [pc, #416]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80217f6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80217fa:	6093      	str	r3, [r2, #8]
 80217fc:	4b66      	ldr	r3, [pc, #408]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80217fe:	689a      	ldr	r2, [r3, #8]
 8021800:	687b      	ldr	r3, [r7, #4]
 8021802:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8021804:	4964      	ldr	r1, [pc, #400]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021806:	4313      	orrs	r3, r2
 8021808:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 802180a:	687b      	ldr	r3, [r7, #4]
 802180c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 802180e:	2b00      	cmp	r3, #0
 8021810:	d101      	bne.n	8021816 <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 8021812:	2301      	movs	r3, #1
 8021814:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8021816:	687b      	ldr	r3, [r7, #4]
 8021818:	681b      	ldr	r3, [r3, #0]
 802181a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 802181e:	2b00      	cmp	r3, #0
 8021820:	d017      	beq.n	8021852 <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8021822:	4b5d      	ldr	r3, [pc, #372]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021824:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021828:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 802182c:	687b      	ldr	r3, [r7, #4]
 802182e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021830:	4959      	ldr	r1, [pc, #356]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021832:	4313      	orrs	r3, r2
 8021834:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8021838:	687b      	ldr	r3, [r7, #4]
 802183a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 802183c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8021840:	d101      	bne.n	8021846 <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 8021842:	2301      	movs	r3, #1
 8021844:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8021846:	687b      	ldr	r3, [r7, #4]
 8021848:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 802184a:	2b00      	cmp	r3, #0
 802184c:	d101      	bne.n	8021852 <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 802184e:	2301      	movs	r3, #1
 8021850:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8021852:	687b      	ldr	r3, [r7, #4]
 8021854:	681b      	ldr	r3, [r3, #0]
 8021856:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 802185a:	2b00      	cmp	r3, #0
 802185c:	d017      	beq.n	802188e <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 802185e:	4b4e      	ldr	r3, [pc, #312]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021860:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021864:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8021868:	687b      	ldr	r3, [r7, #4]
 802186a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 802186c:	494a      	ldr	r1, [pc, #296]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802186e:	4313      	orrs	r3, r2
 8021870:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8021874:	687b      	ldr	r3, [r7, #4]
 8021876:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021878:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 802187c:	d101      	bne.n	8021882 <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 802187e:	2301      	movs	r3, #1
 8021880:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 8021882:	687b      	ldr	r3, [r7, #4]
 8021884:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021886:	2b00      	cmp	r3, #0
 8021888:	d101      	bne.n	802188e <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 802188a:	2301      	movs	r3, #1
 802188c:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 802188e:	687b      	ldr	r3, [r7, #4]
 8021890:	681b      	ldr	r3, [r3, #0]
 8021892:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8021896:	2b00      	cmp	r3, #0
 8021898:	d001      	beq.n	802189e <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 802189a:	2301      	movs	r3, #1
 802189c:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 802189e:	687b      	ldr	r3, [r7, #4]
 80218a0:	681b      	ldr	r3, [r3, #0]
 80218a2:	f003 0320 	and.w	r3, r3, #32
 80218a6:	2b00      	cmp	r3, #0
 80218a8:	f000 808b 	beq.w	80219c2 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80218ac:	4b3a      	ldr	r3, [pc, #232]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80218ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80218b0:	4a39      	ldr	r2, [pc, #228]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80218b2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80218b6:	6413      	str	r3, [r2, #64]	; 0x40
 80218b8:	4b37      	ldr	r3, [pc, #220]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80218ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80218bc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80218c0:	60bb      	str	r3, [r7, #8]
 80218c2:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 80218c4:	4b35      	ldr	r3, [pc, #212]	; (802199c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80218c6:	681b      	ldr	r3, [r3, #0]
 80218c8:	4a34      	ldr	r2, [pc, #208]	; (802199c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80218ca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80218ce:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80218d0:	f7fe ff30 	bl	8020734 <HAL_GetTick>
 80218d4:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 80218d6:	e008      	b.n	80218ea <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80218d8:	f7fe ff2c 	bl	8020734 <HAL_GetTick>
 80218dc:	4602      	mov	r2, r0
 80218de:	697b      	ldr	r3, [r7, #20]
 80218e0:	1ad3      	subs	r3, r2, r3
 80218e2:	2b64      	cmp	r3, #100	; 0x64
 80218e4:	d901      	bls.n	80218ea <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 80218e6:	2303      	movs	r3, #3
 80218e8:	e357      	b.n	8021f9a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 80218ea:	4b2c      	ldr	r3, [pc, #176]	; (802199c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80218ec:	681b      	ldr	r3, [r3, #0]
 80218ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80218f2:	2b00      	cmp	r3, #0
 80218f4:	d0f0      	beq.n	80218d8 <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80218f6:	4b28      	ldr	r3, [pc, #160]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80218f8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80218fa:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80218fe:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8021900:	693b      	ldr	r3, [r7, #16]
 8021902:	2b00      	cmp	r3, #0
 8021904:	d035      	beq.n	8021972 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8021906:	687b      	ldr	r3, [r7, #4]
 8021908:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 802190a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 802190e:	693a      	ldr	r2, [r7, #16]
 8021910:	429a      	cmp	r2, r3
 8021912:	d02e      	beq.n	8021972 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8021914:	4b20      	ldr	r3, [pc, #128]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021916:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021918:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 802191c:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 802191e:	4b1e      	ldr	r3, [pc, #120]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021920:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021922:	4a1d      	ldr	r2, [pc, #116]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021924:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8021928:	6713      	str	r3, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 802192a:	4b1b      	ldr	r3, [pc, #108]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802192c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802192e:	4a1a      	ldr	r2, [pc, #104]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021930:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8021934:	6713      	str	r3, [r2, #112]	; 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 8021936:	4a18      	ldr	r2, [pc, #96]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021938:	693b      	ldr	r3, [r7, #16]
 802193a:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 802193c:	4b16      	ldr	r3, [pc, #88]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 802193e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021940:	f003 0301 	and.w	r3, r3, #1
 8021944:	2b01      	cmp	r3, #1
 8021946:	d114      	bne.n	8021972 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8021948:	f7fe fef4 	bl	8020734 <HAL_GetTick>
 802194c:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 802194e:	e00a      	b.n	8021966 <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8021950:	f7fe fef0 	bl	8020734 <HAL_GetTick>
 8021954:	4602      	mov	r2, r0
 8021956:	697b      	ldr	r3, [r7, #20]
 8021958:	1ad3      	subs	r3, r2, r3
 802195a:	f241 3288 	movw	r2, #5000	; 0x1388
 802195e:	4293      	cmp	r3, r2
 8021960:	d901      	bls.n	8021966 <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 8021962:	2303      	movs	r3, #3
 8021964:	e319      	b.n	8021f9a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8021966:	4b0c      	ldr	r3, [pc, #48]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021968:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802196a:	f003 0302 	and.w	r3, r3, #2
 802196e:	2b00      	cmp	r3, #0
 8021970:	d0ee      	beq.n	8021950 <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8021972:	687b      	ldr	r3, [r7, #4]
 8021974:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8021976:	f403 7340 	and.w	r3, r3, #768	; 0x300
 802197a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 802197e:	d111      	bne.n	80219a4 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8021980:	4b05      	ldr	r3, [pc, #20]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021982:	689b      	ldr	r3, [r3, #8]
 8021984:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8021988:	687b      	ldr	r3, [r7, #4]
 802198a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 802198c:	4b04      	ldr	r3, [pc, #16]	; (80219a0 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 802198e:	400b      	ands	r3, r1
 8021990:	4901      	ldr	r1, [pc, #4]	; (8021998 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8021992:	4313      	orrs	r3, r2
 8021994:	608b      	str	r3, [r1, #8]
 8021996:	e00b      	b.n	80219b0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8021998:	40023800 	.word	0x40023800
 802199c:	40007000 	.word	0x40007000
 80219a0:	0ffffcff 	.word	0x0ffffcff
 80219a4:	4bb1      	ldr	r3, [pc, #708]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80219a6:	689b      	ldr	r3, [r3, #8]
 80219a8:	4ab0      	ldr	r2, [pc, #704]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80219aa:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 80219ae:	6093      	str	r3, [r2, #8]
 80219b0:	4bae      	ldr	r3, [pc, #696]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80219b2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80219b4:	687b      	ldr	r3, [r7, #4]
 80219b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80219b8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80219bc:	49ab      	ldr	r1, [pc, #684]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80219be:	4313      	orrs	r3, r2
 80219c0:	670b      	str	r3, [r1, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80219c2:	687b      	ldr	r3, [r7, #4]
 80219c4:	681b      	ldr	r3, [r3, #0]
 80219c6:	f003 0310 	and.w	r3, r3, #16
 80219ca:	2b00      	cmp	r3, #0
 80219cc:	d010      	beq.n	80219f0 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80219ce:	4ba7      	ldr	r3, [pc, #668]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80219d0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80219d4:	4aa5      	ldr	r2, [pc, #660]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80219d6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80219da:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 80219de:	4ba3      	ldr	r3, [pc, #652]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80219e0:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80219e4:	687b      	ldr	r3, [r7, #4]
 80219e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80219e8:	49a0      	ldr	r1, [pc, #640]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80219ea:	4313      	orrs	r3, r2
 80219ec:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80219f0:	687b      	ldr	r3, [r7, #4]
 80219f2:	681b      	ldr	r3, [r3, #0]
 80219f4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80219f8:	2b00      	cmp	r3, #0
 80219fa:	d00a      	beq.n	8021a12 <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80219fc:	4b9b      	ldr	r3, [pc, #620]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 80219fe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021a02:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8021a06:	687b      	ldr	r3, [r7, #4]
 8021a08:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8021a0a:	4998      	ldr	r1, [pc, #608]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021a0c:	4313      	orrs	r3, r2
 8021a0e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8021a12:	687b      	ldr	r3, [r7, #4]
 8021a14:	681b      	ldr	r3, [r3, #0]
 8021a16:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8021a1a:	2b00      	cmp	r3, #0
 8021a1c:	d00a      	beq.n	8021a34 <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8021a1e:	4b93      	ldr	r3, [pc, #588]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021a20:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021a24:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8021a28:	687b      	ldr	r3, [r7, #4]
 8021a2a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8021a2c:	498f      	ldr	r1, [pc, #572]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021a2e:	4313      	orrs	r3, r2
 8021a30:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8021a34:	687b      	ldr	r3, [r7, #4]
 8021a36:	681b      	ldr	r3, [r3, #0]
 8021a38:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8021a3c:	2b00      	cmp	r3, #0
 8021a3e:	d00a      	beq.n	8021a56 <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8021a40:	4b8a      	ldr	r3, [pc, #552]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021a42:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021a46:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8021a4a:	687b      	ldr	r3, [r7, #4]
 8021a4c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8021a4e:	4987      	ldr	r1, [pc, #540]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021a50:	4313      	orrs	r3, r2
 8021a52:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8021a56:	687b      	ldr	r3, [r7, #4]
 8021a58:	681b      	ldr	r3, [r3, #0]
 8021a5a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8021a5e:	2b00      	cmp	r3, #0
 8021a60:	d00a      	beq.n	8021a78 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8021a62:	4b82      	ldr	r3, [pc, #520]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021a64:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021a68:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8021a6c:	687b      	ldr	r3, [r7, #4]
 8021a6e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8021a70:	497e      	ldr	r1, [pc, #504]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021a72:	4313      	orrs	r3, r2
 8021a74:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8021a78:	687b      	ldr	r3, [r7, #4]
 8021a7a:	681b      	ldr	r3, [r3, #0]
 8021a7c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8021a80:	2b00      	cmp	r3, #0
 8021a82:	d00a      	beq.n	8021a9a <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8021a84:	4b79      	ldr	r3, [pc, #484]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021a86:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021a8a:	f023 0203 	bic.w	r2, r3, #3
 8021a8e:	687b      	ldr	r3, [r7, #4]
 8021a90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8021a92:	4976      	ldr	r1, [pc, #472]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021a94:	4313      	orrs	r3, r2
 8021a96:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8021a9a:	687b      	ldr	r3, [r7, #4]
 8021a9c:	681b      	ldr	r3, [r3, #0]
 8021a9e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8021aa2:	2b00      	cmp	r3, #0
 8021aa4:	d00a      	beq.n	8021abc <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8021aa6:	4b71      	ldr	r3, [pc, #452]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021aa8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021aac:	f023 020c 	bic.w	r2, r3, #12
 8021ab0:	687b      	ldr	r3, [r7, #4]
 8021ab2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8021ab4:	496d      	ldr	r1, [pc, #436]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021ab6:	4313      	orrs	r3, r2
 8021ab8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8021abc:	687b      	ldr	r3, [r7, #4]
 8021abe:	681b      	ldr	r3, [r3, #0]
 8021ac0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8021ac4:	2b00      	cmp	r3, #0
 8021ac6:	d00a      	beq.n	8021ade <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8021ac8:	4b68      	ldr	r3, [pc, #416]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021aca:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021ace:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8021ad2:	687b      	ldr	r3, [r7, #4]
 8021ad4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8021ad6:	4965      	ldr	r1, [pc, #404]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021ad8:	4313      	orrs	r3, r2
 8021ada:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8021ade:	687b      	ldr	r3, [r7, #4]
 8021ae0:	681b      	ldr	r3, [r3, #0]
 8021ae2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8021ae6:	2b00      	cmp	r3, #0
 8021ae8:	d00a      	beq.n	8021b00 <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8021aea:	4b60      	ldr	r3, [pc, #384]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021aec:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021af0:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8021af4:	687b      	ldr	r3, [r7, #4]
 8021af6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8021af8:	495c      	ldr	r1, [pc, #368]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021afa:	4313      	orrs	r3, r2
 8021afc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8021b00:	687b      	ldr	r3, [r7, #4]
 8021b02:	681b      	ldr	r3, [r3, #0]
 8021b04:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8021b08:	2b00      	cmp	r3, #0
 8021b0a:	d00a      	beq.n	8021b22 <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8021b0c:	4b57      	ldr	r3, [pc, #348]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021b0e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021b12:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8021b16:	687b      	ldr	r3, [r7, #4]
 8021b18:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8021b1a:	4954      	ldr	r1, [pc, #336]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021b1c:	4313      	orrs	r3, r2
 8021b1e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8021b22:	687b      	ldr	r3, [r7, #4]
 8021b24:	681b      	ldr	r3, [r3, #0]
 8021b26:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8021b2a:	2b00      	cmp	r3, #0
 8021b2c:	d00a      	beq.n	8021b44 <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8021b2e:	4b4f      	ldr	r3, [pc, #316]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021b30:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021b34:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8021b38:	687b      	ldr	r3, [r7, #4]
 8021b3a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8021b3c:	494b      	ldr	r1, [pc, #300]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021b3e:	4313      	orrs	r3, r2
 8021b40:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8021b44:	687b      	ldr	r3, [r7, #4]
 8021b46:	681b      	ldr	r3, [r3, #0]
 8021b48:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8021b4c:	2b00      	cmp	r3, #0
 8021b4e:	d00a      	beq.n	8021b66 <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8021b50:	4b46      	ldr	r3, [pc, #280]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021b52:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021b56:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8021b5a:	687b      	ldr	r3, [r7, #4]
 8021b5c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8021b5e:	4943      	ldr	r1, [pc, #268]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021b60:	4313      	orrs	r3, r2
 8021b62:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8021b66:	687b      	ldr	r3, [r7, #4]
 8021b68:	681b      	ldr	r3, [r3, #0]
 8021b6a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8021b6e:	2b00      	cmp	r3, #0
 8021b70:	d00a      	beq.n	8021b88 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8021b72:	4b3e      	ldr	r3, [pc, #248]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021b74:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021b78:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8021b7c:	687b      	ldr	r3, [r7, #4]
 8021b7e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8021b80:	493a      	ldr	r1, [pc, #232]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021b82:	4313      	orrs	r3, r2
 8021b84:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8021b88:	687b      	ldr	r3, [r7, #4]
 8021b8a:	681b      	ldr	r3, [r3, #0]
 8021b8c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8021b90:	2b00      	cmp	r3, #0
 8021b92:	d00a      	beq.n	8021baa <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8021b94:	4b35      	ldr	r3, [pc, #212]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021b96:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021b9a:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8021b9e:	687b      	ldr	r3, [r7, #4]
 8021ba0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8021ba2:	4932      	ldr	r1, [pc, #200]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021ba4:	4313      	orrs	r3, r2
 8021ba6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8021baa:	687b      	ldr	r3, [r7, #4]
 8021bac:	681b      	ldr	r3, [r3, #0]
 8021bae:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8021bb2:	2b00      	cmp	r3, #0
 8021bb4:	d011      	beq.n	8021bda <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8021bb6:	4b2d      	ldr	r3, [pc, #180]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021bb8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021bbc:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8021bc0:	687b      	ldr	r3, [r7, #4]
 8021bc2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8021bc4:	4929      	ldr	r1, [pc, #164]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021bc6:	4313      	orrs	r3, r2
 8021bc8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 8021bcc:	687b      	ldr	r3, [r7, #4]
 8021bce:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8021bd0:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8021bd4:	d101      	bne.n	8021bda <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 8021bd6:	2301      	movs	r3, #1
 8021bd8:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8021bda:	687b      	ldr	r3, [r7, #4]
 8021bdc:	681b      	ldr	r3, [r3, #0]
 8021bde:	f003 0308 	and.w	r3, r3, #8
 8021be2:	2b00      	cmp	r3, #0
 8021be4:	d001      	beq.n	8021bea <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 8021be6:	2301      	movs	r3, #1
 8021be8:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8021bea:	687b      	ldr	r3, [r7, #4]
 8021bec:	681b      	ldr	r3, [r3, #0]
 8021bee:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8021bf2:	2b00      	cmp	r3, #0
 8021bf4:	d00a      	beq.n	8021c0c <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8021bf6:	4b1d      	ldr	r3, [pc, #116]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021bf8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021bfc:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8021c00:	687b      	ldr	r3, [r7, #4]
 8021c02:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8021c04:	4919      	ldr	r1, [pc, #100]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c06:	4313      	orrs	r3, r2
 8021c08:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8021c0c:	687b      	ldr	r3, [r7, #4]
 8021c0e:	681b      	ldr	r3, [r3, #0]
 8021c10:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8021c14:	2b00      	cmp	r3, #0
 8021c16:	d00b      	beq.n	8021c30 <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8021c18:	4b14      	ldr	r3, [pc, #80]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8021c1e:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8021c22:	687b      	ldr	r3, [r7, #4]
 8021c24:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8021c28:	4910      	ldr	r1, [pc, #64]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c2a:	4313      	orrs	r3, r2
 8021c2c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8021c30:	69fb      	ldr	r3, [r7, #28]
 8021c32:	2b01      	cmp	r3, #1
 8021c34:	d006      	beq.n	8021c44 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 8021c36:	687b      	ldr	r3, [r7, #4]
 8021c38:	681b      	ldr	r3, [r3, #0]
 8021c3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021c3e:	2b00      	cmp	r3, #0
 8021c40:	f000 80d9 	beq.w	8021df6 <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8021c44:	4b09      	ldr	r3, [pc, #36]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c46:	681b      	ldr	r3, [r3, #0]
 8021c48:	4a08      	ldr	r2, [pc, #32]	; (8021c6c <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 8021c4a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8021c4e:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021c50:	f7fe fd70 	bl	8020734 <HAL_GetTick>
 8021c54:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8021c56:	e00b      	b.n	8021c70 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8021c58:	f7fe fd6c 	bl	8020734 <HAL_GetTick>
 8021c5c:	4602      	mov	r2, r0
 8021c5e:	697b      	ldr	r3, [r7, #20]
 8021c60:	1ad3      	subs	r3, r2, r3
 8021c62:	2b64      	cmp	r3, #100	; 0x64
 8021c64:	d904      	bls.n	8021c70 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021c66:	2303      	movs	r3, #3
 8021c68:	e197      	b.n	8021f9a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8021c6a:	bf00      	nop
 8021c6c:	40023800 	.word	0x40023800
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8021c70:	4b6c      	ldr	r3, [pc, #432]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021c72:	681b      	ldr	r3, [r3, #0]
 8021c74:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8021c78:	2b00      	cmp	r3, #0
 8021c7a:	d1ed      	bne.n	8021c58 <HAL_RCCEx_PeriphCLKConfig+0x490>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8021c7c:	687b      	ldr	r3, [r7, #4]
 8021c7e:	681b      	ldr	r3, [r3, #0]
 8021c80:	f003 0301 	and.w	r3, r3, #1
 8021c84:	2b00      	cmp	r3, #0
 8021c86:	d021      	beq.n	8021ccc <HAL_RCCEx_PeriphCLKConfig+0x504>
 8021c88:	687b      	ldr	r3, [r7, #4]
 8021c8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8021c8c:	2b00      	cmp	r3, #0
 8021c8e:	d11d      	bne.n	8021ccc <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8021c90:	4b64      	ldr	r3, [pc, #400]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021c92:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021c96:	0c1b      	lsrs	r3, r3, #16
 8021c98:	f003 0303 	and.w	r3, r3, #3
 8021c9c:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8021c9e:	4b61      	ldr	r3, [pc, #388]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021ca0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021ca4:	0e1b      	lsrs	r3, r3, #24
 8021ca6:	f003 030f 	and.w	r3, r3, #15
 8021caa:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8021cac:	687b      	ldr	r3, [r7, #4]
 8021cae:	685b      	ldr	r3, [r3, #4]
 8021cb0:	019a      	lsls	r2, r3, #6
 8021cb2:	693b      	ldr	r3, [r7, #16]
 8021cb4:	041b      	lsls	r3, r3, #16
 8021cb6:	431a      	orrs	r2, r3
 8021cb8:	68fb      	ldr	r3, [r7, #12]
 8021cba:	061b      	lsls	r3, r3, #24
 8021cbc:	431a      	orrs	r2, r3
 8021cbe:	687b      	ldr	r3, [r7, #4]
 8021cc0:	689b      	ldr	r3, [r3, #8]
 8021cc2:	071b      	lsls	r3, r3, #28
 8021cc4:	4957      	ldr	r1, [pc, #348]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021cc6:	4313      	orrs	r3, r2
 8021cc8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8021ccc:	687b      	ldr	r3, [r7, #4]
 8021cce:	681b      	ldr	r3, [r3, #0]
 8021cd0:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8021cd4:	2b00      	cmp	r3, #0
 8021cd6:	d004      	beq.n	8021ce2 <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8021cd8:	687b      	ldr	r3, [r7, #4]
 8021cda:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021cdc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8021ce0:	d00a      	beq.n	8021cf8 <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8021ce2:	687b      	ldr	r3, [r7, #4]
 8021ce4:	681b      	ldr	r3, [r3, #0]
 8021ce6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8021cea:	2b00      	cmp	r3, #0
 8021cec:	d02e      	beq.n	8021d4c <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8021cee:	687b      	ldr	r3, [r7, #4]
 8021cf0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021cf2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8021cf6:	d129      	bne.n	8021d4c <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8021cf8:	4b4a      	ldr	r3, [pc, #296]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021cfa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021cfe:	0c1b      	lsrs	r3, r3, #16
 8021d00:	f003 0303 	and.w	r3, r3, #3
 8021d04:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8021d06:	4b47      	ldr	r3, [pc, #284]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021d08:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021d0c:	0f1b      	lsrs	r3, r3, #28
 8021d0e:	f003 0307 	and.w	r3, r3, #7
 8021d12:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8021d14:	687b      	ldr	r3, [r7, #4]
 8021d16:	685b      	ldr	r3, [r3, #4]
 8021d18:	019a      	lsls	r2, r3, #6
 8021d1a:	693b      	ldr	r3, [r7, #16]
 8021d1c:	041b      	lsls	r3, r3, #16
 8021d1e:	431a      	orrs	r2, r3
 8021d20:	687b      	ldr	r3, [r7, #4]
 8021d22:	68db      	ldr	r3, [r3, #12]
 8021d24:	061b      	lsls	r3, r3, #24
 8021d26:	431a      	orrs	r2, r3
 8021d28:	68fb      	ldr	r3, [r7, #12]
 8021d2a:	071b      	lsls	r3, r3, #28
 8021d2c:	493d      	ldr	r1, [pc, #244]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021d2e:	4313      	orrs	r3, r2
 8021d30:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8021d34:	4b3b      	ldr	r3, [pc, #236]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021d36:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021d3a:	f023 021f 	bic.w	r2, r3, #31
 8021d3e:	687b      	ldr	r3, [r7, #4]
 8021d40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021d42:	3b01      	subs	r3, #1
 8021d44:	4937      	ldr	r1, [pc, #220]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021d46:	4313      	orrs	r3, r2
 8021d48:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8021d4c:	687b      	ldr	r3, [r7, #4]
 8021d4e:	681b      	ldr	r3, [r3, #0]
 8021d50:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8021d54:	2b00      	cmp	r3, #0
 8021d56:	d01d      	beq.n	8021d94 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8021d58:	4b32      	ldr	r3, [pc, #200]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021d5a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021d5e:	0e1b      	lsrs	r3, r3, #24
 8021d60:	f003 030f 	and.w	r3, r3, #15
 8021d64:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8021d66:	4b2f      	ldr	r3, [pc, #188]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021d68:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021d6c:	0f1b      	lsrs	r3, r3, #28
 8021d6e:	f003 0307 	and.w	r3, r3, #7
 8021d72:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8021d74:	687b      	ldr	r3, [r7, #4]
 8021d76:	685b      	ldr	r3, [r3, #4]
 8021d78:	019a      	lsls	r2, r3, #6
 8021d7a:	687b      	ldr	r3, [r7, #4]
 8021d7c:	691b      	ldr	r3, [r3, #16]
 8021d7e:	041b      	lsls	r3, r3, #16
 8021d80:	431a      	orrs	r2, r3
 8021d82:	693b      	ldr	r3, [r7, #16]
 8021d84:	061b      	lsls	r3, r3, #24
 8021d86:	431a      	orrs	r2, r3
 8021d88:	68fb      	ldr	r3, [r7, #12]
 8021d8a:	071b      	lsls	r3, r3, #28
 8021d8c:	4925      	ldr	r1, [pc, #148]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021d8e:	4313      	orrs	r3, r2
 8021d90:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8021d94:	687b      	ldr	r3, [r7, #4]
 8021d96:	681b      	ldr	r3, [r3, #0]
 8021d98:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8021d9c:	2b00      	cmp	r3, #0
 8021d9e:	d011      	beq.n	8021dc4 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8021da0:	687b      	ldr	r3, [r7, #4]
 8021da2:	685b      	ldr	r3, [r3, #4]
 8021da4:	019a      	lsls	r2, r3, #6
 8021da6:	687b      	ldr	r3, [r7, #4]
 8021da8:	691b      	ldr	r3, [r3, #16]
 8021daa:	041b      	lsls	r3, r3, #16
 8021dac:	431a      	orrs	r2, r3
 8021dae:	687b      	ldr	r3, [r7, #4]
 8021db0:	68db      	ldr	r3, [r3, #12]
 8021db2:	061b      	lsls	r3, r3, #24
 8021db4:	431a      	orrs	r2, r3
 8021db6:	687b      	ldr	r3, [r7, #4]
 8021db8:	689b      	ldr	r3, [r3, #8]
 8021dba:	071b      	lsls	r3, r3, #28
 8021dbc:	4919      	ldr	r1, [pc, #100]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021dbe:	4313      	orrs	r3, r2
 8021dc0:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8021dc4:	4b17      	ldr	r3, [pc, #92]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021dc6:	681b      	ldr	r3, [r3, #0]
 8021dc8:	4a16      	ldr	r2, [pc, #88]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021dca:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8021dce:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021dd0:	f7fe fcb0 	bl	8020734 <HAL_GetTick>
 8021dd4:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8021dd6:	e008      	b.n	8021dea <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8021dd8:	f7fe fcac 	bl	8020734 <HAL_GetTick>
 8021ddc:	4602      	mov	r2, r0
 8021dde:	697b      	ldr	r3, [r7, #20]
 8021de0:	1ad3      	subs	r3, r2, r3
 8021de2:	2b64      	cmp	r3, #100	; 0x64
 8021de4:	d901      	bls.n	8021dea <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021de6:	2303      	movs	r3, #3
 8021de8:	e0d7      	b.n	8021f9a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8021dea:	4b0e      	ldr	r3, [pc, #56]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021dec:	681b      	ldr	r3, [r3, #0]
 8021dee:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8021df2:	2b00      	cmp	r3, #0
 8021df4:	d0f0      	beq.n	8021dd8 <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8021df6:	69bb      	ldr	r3, [r7, #24]
 8021df8:	2b01      	cmp	r3, #1
 8021dfa:	f040 80cd 	bne.w	8021f98 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8021dfe:	4b09      	ldr	r3, [pc, #36]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021e00:	681b      	ldr	r3, [r3, #0]
 8021e02:	4a08      	ldr	r2, [pc, #32]	; (8021e24 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8021e04:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8021e08:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021e0a:	f7fe fc93 	bl	8020734 <HAL_GetTick>
 8021e0e:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8021e10:	e00a      	b.n	8021e28 <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8021e12:	f7fe fc8f 	bl	8020734 <HAL_GetTick>
 8021e16:	4602      	mov	r2, r0
 8021e18:	697b      	ldr	r3, [r7, #20]
 8021e1a:	1ad3      	subs	r3, r2, r3
 8021e1c:	2b64      	cmp	r3, #100	; 0x64
 8021e1e:	d903      	bls.n	8021e28 <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021e20:	2303      	movs	r3, #3
 8021e22:	e0ba      	b.n	8021f9a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8021e24:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8021e28:	4b5e      	ldr	r3, [pc, #376]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021e2a:	681b      	ldr	r3, [r3, #0]
 8021e2c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8021e30:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8021e34:	d0ed      	beq.n	8021e12 <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8021e36:	687b      	ldr	r3, [r7, #4]
 8021e38:	681b      	ldr	r3, [r3, #0]
 8021e3a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8021e3e:	2b00      	cmp	r3, #0
 8021e40:	d003      	beq.n	8021e4a <HAL_RCCEx_PeriphCLKConfig+0x682>
 8021e42:	687b      	ldr	r3, [r7, #4]
 8021e44:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8021e46:	2b00      	cmp	r3, #0
 8021e48:	d009      	beq.n	8021e5e <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8021e4a:	687b      	ldr	r3, [r7, #4]
 8021e4c:	681b      	ldr	r3, [r3, #0]
 8021e4e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8021e52:	2b00      	cmp	r3, #0
 8021e54:	d02e      	beq.n	8021eb4 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8021e56:	687b      	ldr	r3, [r7, #4]
 8021e58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8021e5a:	2b00      	cmp	r3, #0
 8021e5c:	d12a      	bne.n	8021eb4 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8021e5e:	4b51      	ldr	r3, [pc, #324]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021e60:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021e64:	0c1b      	lsrs	r3, r3, #16
 8021e66:	f003 0303 	and.w	r3, r3, #3
 8021e6a:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8021e6c:	4b4d      	ldr	r3, [pc, #308]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021e6e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021e72:	0f1b      	lsrs	r3, r3, #28
 8021e74:	f003 0307 	and.w	r3, r3, #7
 8021e78:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8021e7a:	687b      	ldr	r3, [r7, #4]
 8021e7c:	695b      	ldr	r3, [r3, #20]
 8021e7e:	019a      	lsls	r2, r3, #6
 8021e80:	693b      	ldr	r3, [r7, #16]
 8021e82:	041b      	lsls	r3, r3, #16
 8021e84:	431a      	orrs	r2, r3
 8021e86:	687b      	ldr	r3, [r7, #4]
 8021e88:	699b      	ldr	r3, [r3, #24]
 8021e8a:	061b      	lsls	r3, r3, #24
 8021e8c:	431a      	orrs	r2, r3
 8021e8e:	68fb      	ldr	r3, [r7, #12]
 8021e90:	071b      	lsls	r3, r3, #28
 8021e92:	4944      	ldr	r1, [pc, #272]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021e94:	4313      	orrs	r3, r2
 8021e96:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8021e9a:	4b42      	ldr	r3, [pc, #264]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021e9c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021ea0:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8021ea4:	687b      	ldr	r3, [r7, #4]
 8021ea6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021ea8:	3b01      	subs	r3, #1
 8021eaa:	021b      	lsls	r3, r3, #8
 8021eac:	493d      	ldr	r1, [pc, #244]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021eae:	4313      	orrs	r3, r2
 8021eb0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8021eb4:	687b      	ldr	r3, [r7, #4]
 8021eb6:	681b      	ldr	r3, [r3, #0]
 8021eb8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8021ebc:	2b00      	cmp	r3, #0
 8021ebe:	d022      	beq.n	8021f06 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8021ec0:	687b      	ldr	r3, [r7, #4]
 8021ec2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8021ec4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8021ec8:	d11d      	bne.n	8021f06 <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8021eca:	4b36      	ldr	r3, [pc, #216]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021ecc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021ed0:	0e1b      	lsrs	r3, r3, #24
 8021ed2:	f003 030f 	and.w	r3, r3, #15
 8021ed6:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8021ed8:	4b32      	ldr	r3, [pc, #200]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021eda:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021ede:	0f1b      	lsrs	r3, r3, #28
 8021ee0:	f003 0307 	and.w	r3, r3, #7
 8021ee4:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8021ee6:	687b      	ldr	r3, [r7, #4]
 8021ee8:	695b      	ldr	r3, [r3, #20]
 8021eea:	019a      	lsls	r2, r3, #6
 8021eec:	687b      	ldr	r3, [r7, #4]
 8021eee:	6a1b      	ldr	r3, [r3, #32]
 8021ef0:	041b      	lsls	r3, r3, #16
 8021ef2:	431a      	orrs	r2, r3
 8021ef4:	693b      	ldr	r3, [r7, #16]
 8021ef6:	061b      	lsls	r3, r3, #24
 8021ef8:	431a      	orrs	r2, r3
 8021efa:	68fb      	ldr	r3, [r7, #12]
 8021efc:	071b      	lsls	r3, r3, #28
 8021efe:	4929      	ldr	r1, [pc, #164]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021f00:	4313      	orrs	r3, r2
 8021f02:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8021f06:	687b      	ldr	r3, [r7, #4]
 8021f08:	681b      	ldr	r3, [r3, #0]
 8021f0a:	f003 0308 	and.w	r3, r3, #8
 8021f0e:	2b00      	cmp	r3, #0
 8021f10:	d028      	beq.n	8021f64 <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8021f12:	4b24      	ldr	r3, [pc, #144]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021f14:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021f18:	0e1b      	lsrs	r3, r3, #24
 8021f1a:	f003 030f 	and.w	r3, r3, #15
 8021f1e:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8021f20:	4b20      	ldr	r3, [pc, #128]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021f22:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8021f26:	0c1b      	lsrs	r3, r3, #16
 8021f28:	f003 0303 	and.w	r3, r3, #3
 8021f2c:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8021f2e:	687b      	ldr	r3, [r7, #4]
 8021f30:	695b      	ldr	r3, [r3, #20]
 8021f32:	019a      	lsls	r2, r3, #6
 8021f34:	68fb      	ldr	r3, [r7, #12]
 8021f36:	041b      	lsls	r3, r3, #16
 8021f38:	431a      	orrs	r2, r3
 8021f3a:	693b      	ldr	r3, [r7, #16]
 8021f3c:	061b      	lsls	r3, r3, #24
 8021f3e:	431a      	orrs	r2, r3
 8021f40:	687b      	ldr	r3, [r7, #4]
 8021f42:	69db      	ldr	r3, [r3, #28]
 8021f44:	071b      	lsls	r3, r3, #28
 8021f46:	4917      	ldr	r1, [pc, #92]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021f48:	4313      	orrs	r3, r2
 8021f4a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8021f4e:	4b15      	ldr	r3, [pc, #84]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021f50:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8021f54:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8021f58:	687b      	ldr	r3, [r7, #4]
 8021f5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021f5c:	4911      	ldr	r1, [pc, #68]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021f5e:	4313      	orrs	r3, r2
 8021f60:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8021f64:	4b0f      	ldr	r3, [pc, #60]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021f66:	681b      	ldr	r3, [r3, #0]
 8021f68:	4a0e      	ldr	r2, [pc, #56]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021f6a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8021f6e:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8021f70:	f7fe fbe0 	bl	8020734 <HAL_GetTick>
 8021f74:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8021f76:	e008      	b.n	8021f8a <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8021f78:	f7fe fbdc 	bl	8020734 <HAL_GetTick>
 8021f7c:	4602      	mov	r2, r0
 8021f7e:	697b      	ldr	r3, [r7, #20]
 8021f80:	1ad3      	subs	r3, r2, r3
 8021f82:	2b64      	cmp	r3, #100	; 0x64
 8021f84:	d901      	bls.n	8021f8a <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8021f86:	2303      	movs	r3, #3
 8021f88:	e007      	b.n	8021f9a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8021f8a:	4b06      	ldr	r3, [pc, #24]	; (8021fa4 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8021f8c:	681b      	ldr	r3, [r3, #0]
 8021f8e:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8021f92:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8021f96:	d1ef      	bne.n	8021f78 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 8021f98:	2300      	movs	r3, #0
}
 8021f9a:	4618      	mov	r0, r3
 8021f9c:	3720      	adds	r7, #32
 8021f9e:	46bd      	mov	sp, r7
 8021fa0:	bd80      	pop	{r7, pc}
 8021fa2:	bf00      	nop
 8021fa4:	40023800 	.word	0x40023800

08021fa8 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8021fa8:	b580      	push	{r7, lr}
 8021faa:	b082      	sub	sp, #8
 8021fac:	af00      	add	r7, sp, #0
 8021fae:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8021fb0:	687b      	ldr	r3, [r7, #4]
 8021fb2:	2b00      	cmp	r3, #0
 8021fb4:	d101      	bne.n	8021fba <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8021fb6:	2301      	movs	r3, #1
 8021fb8:	e040      	b.n	802203c <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8021fba:	687b      	ldr	r3, [r7, #4]
 8021fbc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8021fbe:	2b00      	cmp	r3, #0
 8021fc0:	d106      	bne.n	8021fd0 <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8021fc2:	687b      	ldr	r3, [r7, #4]
 8021fc4:	2200      	movs	r2, #0
 8021fc6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8021fca:	6878      	ldr	r0, [r7, #4]
 8021fcc:	f7fc fd70 	bl	801eab0 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8021fd0:	687b      	ldr	r3, [r7, #4]
 8021fd2:	2224      	movs	r2, #36	; 0x24
 8021fd4:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 8021fd6:	687b      	ldr	r3, [r7, #4]
 8021fd8:	681b      	ldr	r3, [r3, #0]
 8021fda:	681a      	ldr	r2, [r3, #0]
 8021fdc:	687b      	ldr	r3, [r7, #4]
 8021fde:	681b      	ldr	r3, [r3, #0]
 8021fe0:	f022 0201 	bic.w	r2, r2, #1
 8021fe4:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8021fe6:	6878      	ldr	r0, [r7, #4]
 8021fe8:	f000 fbd8 	bl	802279c <UART_SetConfig>
 8021fec:	4603      	mov	r3, r0
 8021fee:	2b01      	cmp	r3, #1
 8021ff0:	d101      	bne.n	8021ff6 <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 8021ff2:	2301      	movs	r3, #1
 8021ff4:	e022      	b.n	802203c <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8021ff6:	687b      	ldr	r3, [r7, #4]
 8021ff8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021ffa:	2b00      	cmp	r3, #0
 8021ffc:	d002      	beq.n	8022004 <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 8021ffe:	6878      	ldr	r0, [r7, #4]
 8022000:	f000 fe2e 	bl	8022c60 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8022004:	687b      	ldr	r3, [r7, #4]
 8022006:	681b      	ldr	r3, [r3, #0]
 8022008:	685a      	ldr	r2, [r3, #4]
 802200a:	687b      	ldr	r3, [r7, #4]
 802200c:	681b      	ldr	r3, [r3, #0]
 802200e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8022012:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8022014:	687b      	ldr	r3, [r7, #4]
 8022016:	681b      	ldr	r3, [r3, #0]
 8022018:	689a      	ldr	r2, [r3, #8]
 802201a:	687b      	ldr	r3, [r7, #4]
 802201c:	681b      	ldr	r3, [r3, #0]
 802201e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8022022:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 8022024:	687b      	ldr	r3, [r7, #4]
 8022026:	681b      	ldr	r3, [r3, #0]
 8022028:	681a      	ldr	r2, [r3, #0]
 802202a:	687b      	ldr	r3, [r7, #4]
 802202c:	681b      	ldr	r3, [r3, #0]
 802202e:	f042 0201 	orr.w	r2, r2, #1
 8022032:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8022034:	6878      	ldr	r0, [r7, #4]
 8022036:	f000 feb5 	bl	8022da4 <UART_CheckIdleState>
 802203a:	4603      	mov	r3, r0
}
 802203c:	4618      	mov	r0, r3
 802203e:	3708      	adds	r7, #8
 8022040:	46bd      	mov	sp, r7
 8022042:	bd80      	pop	{r7, pc}

08022044 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8022044:	b580      	push	{r7, lr}
 8022046:	b08a      	sub	sp, #40	; 0x28
 8022048:	af02      	add	r7, sp, #8
 802204a:	60f8      	str	r0, [r7, #12]
 802204c:	60b9      	str	r1, [r7, #8]
 802204e:	603b      	str	r3, [r7, #0]
 8022050:	4613      	mov	r3, r2
 8022052:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8022054:	68fb      	ldr	r3, [r7, #12]
 8022056:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8022058:	2b20      	cmp	r3, #32
 802205a:	f040 8081 	bne.w	8022160 <HAL_UART_Transmit+0x11c>
  {
    if ((pData == NULL) || (Size == 0U))
 802205e:	68bb      	ldr	r3, [r7, #8]
 8022060:	2b00      	cmp	r3, #0
 8022062:	d002      	beq.n	802206a <HAL_UART_Transmit+0x26>
 8022064:	88fb      	ldrh	r3, [r7, #6]
 8022066:	2b00      	cmp	r3, #0
 8022068:	d101      	bne.n	802206e <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 802206a:	2301      	movs	r3, #1
 802206c:	e079      	b.n	8022162 <HAL_UART_Transmit+0x11e>
    }

    __HAL_LOCK(huart);
 802206e:	68fb      	ldr	r3, [r7, #12]
 8022070:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8022074:	2b01      	cmp	r3, #1
 8022076:	d101      	bne.n	802207c <HAL_UART_Transmit+0x38>
 8022078:	2302      	movs	r3, #2
 802207a:	e072      	b.n	8022162 <HAL_UART_Transmit+0x11e>
 802207c:	68fb      	ldr	r3, [r7, #12]
 802207e:	2201      	movs	r2, #1
 8022080:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8022084:	68fb      	ldr	r3, [r7, #12]
 8022086:	2200      	movs	r2, #0
 8022088:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 802208c:	68fb      	ldr	r3, [r7, #12]
 802208e:	2221      	movs	r2, #33	; 0x21
 8022090:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8022092:	f7fe fb4f 	bl	8020734 <HAL_GetTick>
 8022096:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 8022098:	68fb      	ldr	r3, [r7, #12]
 802209a:	88fa      	ldrh	r2, [r7, #6]
 802209c:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 80220a0:	68fb      	ldr	r3, [r7, #12]
 80220a2:	88fa      	ldrh	r2, [r7, #6]
 80220a4:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80220a8:	68fb      	ldr	r3, [r7, #12]
 80220aa:	689b      	ldr	r3, [r3, #8]
 80220ac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80220b0:	d108      	bne.n	80220c4 <HAL_UART_Transmit+0x80>
 80220b2:	68fb      	ldr	r3, [r7, #12]
 80220b4:	691b      	ldr	r3, [r3, #16]
 80220b6:	2b00      	cmp	r3, #0
 80220b8:	d104      	bne.n	80220c4 <HAL_UART_Transmit+0x80>
    {
      pdata8bits  = NULL;
 80220ba:	2300      	movs	r3, #0
 80220bc:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 80220be:	68bb      	ldr	r3, [r7, #8]
 80220c0:	61bb      	str	r3, [r7, #24]
 80220c2:	e003      	b.n	80220cc <HAL_UART_Transmit+0x88>
    }
    else
    {
      pdata8bits  = pData;
 80220c4:	68bb      	ldr	r3, [r7, #8]
 80220c6:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80220c8:	2300      	movs	r3, #0
 80220ca:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 80220cc:	68fb      	ldr	r3, [r7, #12]
 80220ce:	2200      	movs	r2, #0
 80220d0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    while (huart->TxXferCount > 0U)
 80220d4:	e02c      	b.n	8022130 <HAL_UART_Transmit+0xec>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80220d6:	683b      	ldr	r3, [r7, #0]
 80220d8:	9300      	str	r3, [sp, #0]
 80220da:	697b      	ldr	r3, [r7, #20]
 80220dc:	2200      	movs	r2, #0
 80220de:	2180      	movs	r1, #128	; 0x80
 80220e0:	68f8      	ldr	r0, [r7, #12]
 80220e2:	f000 fe92 	bl	8022e0a <UART_WaitOnFlagUntilTimeout>
 80220e6:	4603      	mov	r3, r0
 80220e8:	2b00      	cmp	r3, #0
 80220ea:	d001      	beq.n	80220f0 <HAL_UART_Transmit+0xac>
      {
        return HAL_TIMEOUT;
 80220ec:	2303      	movs	r3, #3
 80220ee:	e038      	b.n	8022162 <HAL_UART_Transmit+0x11e>
      }
      if (pdata8bits == NULL)
 80220f0:	69fb      	ldr	r3, [r7, #28]
 80220f2:	2b00      	cmp	r3, #0
 80220f4:	d10b      	bne.n	802210e <HAL_UART_Transmit+0xca>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80220f6:	69bb      	ldr	r3, [r7, #24]
 80220f8:	881b      	ldrh	r3, [r3, #0]
 80220fa:	461a      	mov	r2, r3
 80220fc:	68fb      	ldr	r3, [r7, #12]
 80220fe:	681b      	ldr	r3, [r3, #0]
 8022100:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8022104:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8022106:	69bb      	ldr	r3, [r7, #24]
 8022108:	3302      	adds	r3, #2
 802210a:	61bb      	str	r3, [r7, #24]
 802210c:	e007      	b.n	802211e <HAL_UART_Transmit+0xda>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 802210e:	69fb      	ldr	r3, [r7, #28]
 8022110:	781a      	ldrb	r2, [r3, #0]
 8022112:	68fb      	ldr	r3, [r7, #12]
 8022114:	681b      	ldr	r3, [r3, #0]
 8022116:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8022118:	69fb      	ldr	r3, [r7, #28]
 802211a:	3301      	adds	r3, #1
 802211c:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 802211e:	68fb      	ldr	r3, [r7, #12]
 8022120:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8022124:	b29b      	uxth	r3, r3
 8022126:	3b01      	subs	r3, #1
 8022128:	b29a      	uxth	r2, r3
 802212a:	68fb      	ldr	r3, [r7, #12]
 802212c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 8022130:	68fb      	ldr	r3, [r7, #12]
 8022132:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8022136:	b29b      	uxth	r3, r3
 8022138:	2b00      	cmp	r3, #0
 802213a:	d1cc      	bne.n	80220d6 <HAL_UART_Transmit+0x92>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 802213c:	683b      	ldr	r3, [r7, #0]
 802213e:	9300      	str	r3, [sp, #0]
 8022140:	697b      	ldr	r3, [r7, #20]
 8022142:	2200      	movs	r2, #0
 8022144:	2140      	movs	r1, #64	; 0x40
 8022146:	68f8      	ldr	r0, [r7, #12]
 8022148:	f000 fe5f 	bl	8022e0a <UART_WaitOnFlagUntilTimeout>
 802214c:	4603      	mov	r3, r0
 802214e:	2b00      	cmp	r3, #0
 8022150:	d001      	beq.n	8022156 <HAL_UART_Transmit+0x112>
    {
      return HAL_TIMEOUT;
 8022152:	2303      	movs	r3, #3
 8022154:	e005      	b.n	8022162 <HAL_UART_Transmit+0x11e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8022156:	68fb      	ldr	r3, [r7, #12]
 8022158:	2220      	movs	r2, #32
 802215a:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 802215c:	2300      	movs	r3, #0
 802215e:	e000      	b.n	8022162 <HAL_UART_Transmit+0x11e>
  }
  else
  {
    return HAL_BUSY;
 8022160:	2302      	movs	r3, #2
  }
}
 8022162:	4618      	mov	r0, r3
 8022164:	3720      	adds	r7, #32
 8022166:	46bd      	mov	sp, r7
 8022168:	bd80      	pop	{r7, pc}

0802216a <HAL_UART_Receive>:
  * @param Size    Amount of data elements (u8 or u16) to be received.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 802216a:	b580      	push	{r7, lr}
 802216c:	b08a      	sub	sp, #40	; 0x28
 802216e:	af02      	add	r7, sp, #8
 8022170:	60f8      	str	r0, [r7, #12]
 8022172:	60b9      	str	r1, [r7, #8]
 8022174:	603b      	str	r3, [r7, #0]
 8022176:	4613      	mov	r3, r2
 8022178:	80fb      	strh	r3, [r7, #6]
  uint16_t *pdata16bits;
  uint16_t uhMask;
  uint32_t tickstart;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 802217a:	68fb      	ldr	r3, [r7, #12]
 802217c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 802217e:	2b20      	cmp	r3, #32
 8022180:	f040 80be 	bne.w	8022300 <HAL_UART_Receive+0x196>
  {
    if ((pData == NULL) || (Size == 0U))
 8022184:	68bb      	ldr	r3, [r7, #8]
 8022186:	2b00      	cmp	r3, #0
 8022188:	d002      	beq.n	8022190 <HAL_UART_Receive+0x26>
 802218a:	88fb      	ldrh	r3, [r7, #6]
 802218c:	2b00      	cmp	r3, #0
 802218e:	d101      	bne.n	8022194 <HAL_UART_Receive+0x2a>
    {
      return  HAL_ERROR;
 8022190:	2301      	movs	r3, #1
 8022192:	e0b6      	b.n	8022302 <HAL_UART_Receive+0x198>
    }

    __HAL_LOCK(huart);
 8022194:	68fb      	ldr	r3, [r7, #12]
 8022196:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 802219a:	2b01      	cmp	r3, #1
 802219c:	d101      	bne.n	80221a2 <HAL_UART_Receive+0x38>
 802219e:	2302      	movs	r3, #2
 80221a0:	e0af      	b.n	8022302 <HAL_UART_Receive+0x198>
 80221a2:	68fb      	ldr	r3, [r7, #12]
 80221a4:	2201      	movs	r2, #1
 80221a6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80221aa:	68fb      	ldr	r3, [r7, #12]
 80221ac:	2200      	movs	r2, #0
 80221ae:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 80221b2:	68fb      	ldr	r3, [r7, #12]
 80221b4:	2222      	movs	r2, #34	; 0x22
 80221b6:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80221b8:	68fb      	ldr	r3, [r7, #12]
 80221ba:	2200      	movs	r2, #0
 80221bc:	661a      	str	r2, [r3, #96]	; 0x60

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 80221be:	f7fe fab9 	bl	8020734 <HAL_GetTick>
 80221c2:	6178      	str	r0, [r7, #20]

    huart->RxXferSize  = Size;
 80221c4:	68fb      	ldr	r3, [r7, #12]
 80221c6:	88fa      	ldrh	r2, [r7, #6]
 80221c8:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
    huart->RxXferCount = Size;
 80221cc:	68fb      	ldr	r3, [r7, #12]
 80221ce:	88fa      	ldrh	r2, [r7, #6]
 80221d0:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    /* Computation of UART mask to apply to RDR register */
    UART_MASK_COMPUTATION(huart);
 80221d4:	68fb      	ldr	r3, [r7, #12]
 80221d6:	689b      	ldr	r3, [r3, #8]
 80221d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80221dc:	d10e      	bne.n	80221fc <HAL_UART_Receive+0x92>
 80221de:	68fb      	ldr	r3, [r7, #12]
 80221e0:	691b      	ldr	r3, [r3, #16]
 80221e2:	2b00      	cmp	r3, #0
 80221e4:	d105      	bne.n	80221f2 <HAL_UART_Receive+0x88>
 80221e6:	68fb      	ldr	r3, [r7, #12]
 80221e8:	f240 12ff 	movw	r2, #511	; 0x1ff
 80221ec:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80221f0:	e02d      	b.n	802224e <HAL_UART_Receive+0xe4>
 80221f2:	68fb      	ldr	r3, [r7, #12]
 80221f4:	22ff      	movs	r2, #255	; 0xff
 80221f6:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80221fa:	e028      	b.n	802224e <HAL_UART_Receive+0xe4>
 80221fc:	68fb      	ldr	r3, [r7, #12]
 80221fe:	689b      	ldr	r3, [r3, #8]
 8022200:	2b00      	cmp	r3, #0
 8022202:	d10d      	bne.n	8022220 <HAL_UART_Receive+0xb6>
 8022204:	68fb      	ldr	r3, [r7, #12]
 8022206:	691b      	ldr	r3, [r3, #16]
 8022208:	2b00      	cmp	r3, #0
 802220a:	d104      	bne.n	8022216 <HAL_UART_Receive+0xac>
 802220c:	68fb      	ldr	r3, [r7, #12]
 802220e:	22ff      	movs	r2, #255	; 0xff
 8022210:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022214:	e01b      	b.n	802224e <HAL_UART_Receive+0xe4>
 8022216:	68fb      	ldr	r3, [r7, #12]
 8022218:	227f      	movs	r2, #127	; 0x7f
 802221a:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802221e:	e016      	b.n	802224e <HAL_UART_Receive+0xe4>
 8022220:	68fb      	ldr	r3, [r7, #12]
 8022222:	689b      	ldr	r3, [r3, #8]
 8022224:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8022228:	d10d      	bne.n	8022246 <HAL_UART_Receive+0xdc>
 802222a:	68fb      	ldr	r3, [r7, #12]
 802222c:	691b      	ldr	r3, [r3, #16]
 802222e:	2b00      	cmp	r3, #0
 8022230:	d104      	bne.n	802223c <HAL_UART_Receive+0xd2>
 8022232:	68fb      	ldr	r3, [r7, #12]
 8022234:	227f      	movs	r2, #127	; 0x7f
 8022236:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 802223a:	e008      	b.n	802224e <HAL_UART_Receive+0xe4>
 802223c:	68fb      	ldr	r3, [r7, #12]
 802223e:	223f      	movs	r2, #63	; 0x3f
 8022240:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022244:	e003      	b.n	802224e <HAL_UART_Receive+0xe4>
 8022246:	68fb      	ldr	r3, [r7, #12]
 8022248:	2200      	movs	r2, #0
 802224a:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
    uhMask = huart->Mask;
 802224e:	68fb      	ldr	r3, [r7, #12]
 8022250:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8022254:	827b      	strh	r3, [r7, #18]

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8022256:	68fb      	ldr	r3, [r7, #12]
 8022258:	689b      	ldr	r3, [r3, #8]
 802225a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 802225e:	d108      	bne.n	8022272 <HAL_UART_Receive+0x108>
 8022260:	68fb      	ldr	r3, [r7, #12]
 8022262:	691b      	ldr	r3, [r3, #16]
 8022264:	2b00      	cmp	r3, #0
 8022266:	d104      	bne.n	8022272 <HAL_UART_Receive+0x108>
    {
      pdata8bits  = NULL;
 8022268:	2300      	movs	r3, #0
 802226a:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 802226c:	68bb      	ldr	r3, [r7, #8]
 802226e:	61bb      	str	r3, [r7, #24]
 8022270:	e003      	b.n	802227a <HAL_UART_Receive+0x110>
    }
    else
    {
      pdata8bits  = pData;
 8022272:	68bb      	ldr	r3, [r7, #8]
 8022274:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8022276:	2300      	movs	r3, #0
 8022278:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 802227a:	68fb      	ldr	r3, [r7, #12]
 802227c:	2200      	movs	r2, #0
 802227e:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* as long as data have to be received */
    while (huart->RxXferCount > 0U)
 8022282:	e032      	b.n	80222ea <HAL_UART_Receive+0x180>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 8022284:	683b      	ldr	r3, [r7, #0]
 8022286:	9300      	str	r3, [sp, #0]
 8022288:	697b      	ldr	r3, [r7, #20]
 802228a:	2200      	movs	r2, #0
 802228c:	2120      	movs	r1, #32
 802228e:	68f8      	ldr	r0, [r7, #12]
 8022290:	f000 fdbb 	bl	8022e0a <UART_WaitOnFlagUntilTimeout>
 8022294:	4603      	mov	r3, r0
 8022296:	2b00      	cmp	r3, #0
 8022298:	d001      	beq.n	802229e <HAL_UART_Receive+0x134>
      {
        return HAL_TIMEOUT;
 802229a:	2303      	movs	r3, #3
 802229c:	e031      	b.n	8022302 <HAL_UART_Receive+0x198>
      }
      if (pdata8bits == NULL)
 802229e:	69fb      	ldr	r3, [r7, #28]
 80222a0:	2b00      	cmp	r3, #0
 80222a2:	d10c      	bne.n	80222be <HAL_UART_Receive+0x154>
      {
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 80222a4:	68fb      	ldr	r3, [r7, #12]
 80222a6:	681b      	ldr	r3, [r3, #0]
 80222a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80222aa:	b29a      	uxth	r2, r3
 80222ac:	8a7b      	ldrh	r3, [r7, #18]
 80222ae:	4013      	ands	r3, r2
 80222b0:	b29a      	uxth	r2, r3
 80222b2:	69bb      	ldr	r3, [r7, #24]
 80222b4:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 80222b6:	69bb      	ldr	r3, [r7, #24]
 80222b8:	3302      	adds	r3, #2
 80222ba:	61bb      	str	r3, [r7, #24]
 80222bc:	e00c      	b.n	80222d8 <HAL_UART_Receive+0x16e>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 80222be:	68fb      	ldr	r3, [r7, #12]
 80222c0:	681b      	ldr	r3, [r3, #0]
 80222c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80222c4:	b2da      	uxtb	r2, r3
 80222c6:	8a7b      	ldrh	r3, [r7, #18]
 80222c8:	b2db      	uxtb	r3, r3
 80222ca:	4013      	ands	r3, r2
 80222cc:	b2da      	uxtb	r2, r3
 80222ce:	69fb      	ldr	r3, [r7, #28]
 80222d0:	701a      	strb	r2, [r3, #0]
        pdata8bits++;
 80222d2:	69fb      	ldr	r3, [r7, #28]
 80222d4:	3301      	adds	r3, #1
 80222d6:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 80222d8:	68fb      	ldr	r3, [r7, #12]
 80222da:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80222de:	b29b      	uxth	r3, r3
 80222e0:	3b01      	subs	r3, #1
 80222e2:	b29a      	uxth	r2, r3
 80222e4:	68fb      	ldr	r3, [r7, #12]
 80222e6:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
    while (huart->RxXferCount > 0U)
 80222ea:	68fb      	ldr	r3, [r7, #12]
 80222ec:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80222f0:	b29b      	uxth	r3, r3
 80222f2:	2b00      	cmp	r3, #0
 80222f4:	d1c6      	bne.n	8022284 <HAL_UART_Receive+0x11a>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 80222f6:	68fb      	ldr	r3, [r7, #12]
 80222f8:	2220      	movs	r2, #32
 80222fa:	67da      	str	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 80222fc:	2300      	movs	r3, #0
 80222fe:	e000      	b.n	8022302 <HAL_UART_Receive+0x198>
  }
  else
  {
    return HAL_BUSY;
 8022300:	2302      	movs	r3, #2
  }
}
 8022302:	4618      	mov	r0, r3
 8022304:	3720      	adds	r7, #32
 8022306:	46bd      	mov	sp, r7
 8022308:	bd80      	pop	{r7, pc}

0802230a <HAL_UART_Receive_IT>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 802230a:	b580      	push	{r7, lr}
 802230c:	b084      	sub	sp, #16
 802230e:	af00      	add	r7, sp, #0
 8022310:	60f8      	str	r0, [r7, #12]
 8022312:	60b9      	str	r1, [r7, #8]
 8022314:	4613      	mov	r3, r2
 8022316:	80fb      	strh	r3, [r7, #6]
  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 8022318:	68fb      	ldr	r3, [r7, #12]
 802231a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 802231c:	2b20      	cmp	r3, #32
 802231e:	d12c      	bne.n	802237a <HAL_UART_Receive_IT+0x70>
  {
    if ((pData == NULL) || (Size == 0U))
 8022320:	68bb      	ldr	r3, [r7, #8]
 8022322:	2b00      	cmp	r3, #0
 8022324:	d002      	beq.n	802232c <HAL_UART_Receive_IT+0x22>
 8022326:	88fb      	ldrh	r3, [r7, #6]
 8022328:	2b00      	cmp	r3, #0
 802232a:	d101      	bne.n	8022330 <HAL_UART_Receive_IT+0x26>
    {
      return HAL_ERROR;
 802232c:	2301      	movs	r3, #1
 802232e:	e025      	b.n	802237c <HAL_UART_Receive_IT+0x72>
    }

    __HAL_LOCK(huart);
 8022330:	68fb      	ldr	r3, [r7, #12]
 8022332:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8022336:	2b01      	cmp	r3, #1
 8022338:	d101      	bne.n	802233e <HAL_UART_Receive_IT+0x34>
 802233a:	2302      	movs	r3, #2
 802233c:	e01e      	b.n	802237c <HAL_UART_Receive_IT+0x72>
 802233e:	68fb      	ldr	r3, [r7, #12]
 8022340:	2201      	movs	r2, #1
 8022342:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Set Reception type to Standard reception */
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8022346:	68fb      	ldr	r3, [r7, #12]
 8022348:	2200      	movs	r2, #0
 802234a:	661a      	str	r2, [r3, #96]	; 0x60

    /* Check that USART RTOEN bit is set */
    if (READ_BIT(huart->Instance->CR2, USART_CR2_RTOEN) != 0U)
 802234c:	68fb      	ldr	r3, [r7, #12]
 802234e:	681b      	ldr	r3, [r3, #0]
 8022350:	685b      	ldr	r3, [r3, #4]
 8022352:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8022356:	2b00      	cmp	r3, #0
 8022358:	d007      	beq.n	802236a <HAL_UART_Receive_IT+0x60>
    {
      /* Enable the UART Receiver Timeout Interrupt */
      SET_BIT(huart->Instance->CR1, USART_CR1_RTOIE);
 802235a:	68fb      	ldr	r3, [r7, #12]
 802235c:	681b      	ldr	r3, [r3, #0]
 802235e:	681a      	ldr	r2, [r3, #0]
 8022360:	68fb      	ldr	r3, [r7, #12]
 8022362:	681b      	ldr	r3, [r3, #0]
 8022364:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8022368:	601a      	str	r2, [r3, #0]
    }

    return (UART_Start_Receive_IT(huart, pData, Size));
 802236a:	88fb      	ldrh	r3, [r7, #6]
 802236c:	461a      	mov	r2, r3
 802236e:	68b9      	ldr	r1, [r7, #8]
 8022370:	68f8      	ldr	r0, [r7, #12]
 8022372:	f000 fdc7 	bl	8022f04 <UART_Start_Receive_IT>
 8022376:	4603      	mov	r3, r0
 8022378:	e000      	b.n	802237c <HAL_UART_Receive_IT+0x72>
  }
  else
  {
    return HAL_BUSY;
 802237a:	2302      	movs	r3, #2
  }
}
 802237c:	4618      	mov	r0, r3
 802237e:	3710      	adds	r7, #16
 8022380:	46bd      	mov	sp, r7
 8022382:	bd80      	pop	{r7, pc}

08022384 <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 8022384:	b580      	push	{r7, lr}
 8022386:	b088      	sub	sp, #32
 8022388:	af00      	add	r7, sp, #0
 802238a:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 802238c:	687b      	ldr	r3, [r7, #4]
 802238e:	681b      	ldr	r3, [r3, #0]
 8022390:	69db      	ldr	r3, [r3, #28]
 8022392:	61fb      	str	r3, [r7, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8022394:	687b      	ldr	r3, [r7, #4]
 8022396:	681b      	ldr	r3, [r3, #0]
 8022398:	681b      	ldr	r3, [r3, #0]
 802239a:	61bb      	str	r3, [r7, #24]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 802239c:	687b      	ldr	r3, [r7, #4]
 802239e:	681b      	ldr	r3, [r3, #0]
 80223a0:	689b      	ldr	r3, [r3, #8]
 80223a2:	617b      	str	r3, [r7, #20]

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 80223a4:	69fa      	ldr	r2, [r7, #28]
 80223a6:	f640 030f 	movw	r3, #2063	; 0x80f
 80223aa:	4013      	ands	r3, r2
 80223ac:	613b      	str	r3, [r7, #16]
  if (errorflags == 0U)
 80223ae:	693b      	ldr	r3, [r7, #16]
 80223b0:	2b00      	cmp	r3, #0
 80223b2:	d113      	bne.n	80223dc <HAL_UART_IRQHandler+0x58>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
    if (((isrflags & USART_ISR_RXNE) != 0U)
 80223b4:	69fb      	ldr	r3, [r7, #28]
 80223b6:	f003 0320 	and.w	r3, r3, #32
 80223ba:	2b00      	cmp	r3, #0
 80223bc:	d00e      	beq.n	80223dc <HAL_UART_IRQHandler+0x58>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80223be:	69bb      	ldr	r3, [r7, #24]
 80223c0:	f003 0320 	and.w	r3, r3, #32
 80223c4:	2b00      	cmp	r3, #0
 80223c6:	d009      	beq.n	80223dc <HAL_UART_IRQHandler+0x58>
    {
      if (huart->RxISR != NULL)
 80223c8:	687b      	ldr	r3, [r7, #4]
 80223ca:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80223cc:	2b00      	cmp	r3, #0
 80223ce:	f000 81b9 	beq.w	8022744 <HAL_UART_IRQHandler+0x3c0>
      {
        huart->RxISR(huart);
 80223d2:	687b      	ldr	r3, [r7, #4]
 80223d4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80223d6:	6878      	ldr	r0, [r7, #4]
 80223d8:	4798      	blx	r3
      }
      return;
 80223da:	e1b3      	b.n	8022744 <HAL_UART_IRQHandler+0x3c0>
    }
  }

  /* If some errors occur */
  if ((errorflags != 0U)
 80223dc:	693b      	ldr	r3, [r7, #16]
 80223de:	2b00      	cmp	r3, #0
 80223e0:	f000 80e3 	beq.w	80225aa <HAL_UART_IRQHandler+0x226>
      && (((cr3its & USART_CR3_EIE) != 0U)
 80223e4:	697b      	ldr	r3, [r7, #20]
 80223e6:	f003 0301 	and.w	r3, r3, #1
 80223ea:	2b00      	cmp	r3, #0
 80223ec:	d105      	bne.n	80223fa <HAL_UART_IRQHandler+0x76>
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 80223ee:	69ba      	ldr	r2, [r7, #24]
 80223f0:	4ba5      	ldr	r3, [pc, #660]	; (8022688 <HAL_UART_IRQHandler+0x304>)
 80223f2:	4013      	ands	r3, r2
 80223f4:	2b00      	cmp	r3, #0
 80223f6:	f000 80d8 	beq.w	80225aa <HAL_UART_IRQHandler+0x226>
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 80223fa:	69fb      	ldr	r3, [r7, #28]
 80223fc:	f003 0301 	and.w	r3, r3, #1
 8022400:	2b00      	cmp	r3, #0
 8022402:	d010      	beq.n	8022426 <HAL_UART_IRQHandler+0xa2>
 8022404:	69bb      	ldr	r3, [r7, #24]
 8022406:	f403 7380 	and.w	r3, r3, #256	; 0x100
 802240a:	2b00      	cmp	r3, #0
 802240c:	d00b      	beq.n	8022426 <HAL_UART_IRQHandler+0xa2>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 802240e:	687b      	ldr	r3, [r7, #4]
 8022410:	681b      	ldr	r3, [r3, #0]
 8022412:	2201      	movs	r2, #1
 8022414:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8022416:	687b      	ldr	r3, [r7, #4]
 8022418:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 802241c:	f043 0201 	orr.w	r2, r3, #1
 8022420:	687b      	ldr	r3, [r7, #4]
 8022422:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8022426:	69fb      	ldr	r3, [r7, #28]
 8022428:	f003 0302 	and.w	r3, r3, #2
 802242c:	2b00      	cmp	r3, #0
 802242e:	d010      	beq.n	8022452 <HAL_UART_IRQHandler+0xce>
 8022430:	697b      	ldr	r3, [r7, #20]
 8022432:	f003 0301 	and.w	r3, r3, #1
 8022436:	2b00      	cmp	r3, #0
 8022438:	d00b      	beq.n	8022452 <HAL_UART_IRQHandler+0xce>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 802243a:	687b      	ldr	r3, [r7, #4]
 802243c:	681b      	ldr	r3, [r3, #0]
 802243e:	2202      	movs	r2, #2
 8022440:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8022442:	687b      	ldr	r3, [r7, #4]
 8022444:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8022448:	f043 0204 	orr.w	r2, r3, #4
 802244c:	687b      	ldr	r3, [r7, #4]
 802244e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8022452:	69fb      	ldr	r3, [r7, #28]
 8022454:	f003 0304 	and.w	r3, r3, #4
 8022458:	2b00      	cmp	r3, #0
 802245a:	d010      	beq.n	802247e <HAL_UART_IRQHandler+0xfa>
 802245c:	697b      	ldr	r3, [r7, #20]
 802245e:	f003 0301 	and.w	r3, r3, #1
 8022462:	2b00      	cmp	r3, #0
 8022464:	d00b      	beq.n	802247e <HAL_UART_IRQHandler+0xfa>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 8022466:	687b      	ldr	r3, [r7, #4]
 8022468:	681b      	ldr	r3, [r3, #0]
 802246a:	2204      	movs	r2, #4
 802246c:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 802246e:	687b      	ldr	r3, [r7, #4]
 8022470:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8022474:	f043 0202 	orr.w	r2, r3, #2
 8022478:	687b      	ldr	r3, [r7, #4]
 802247a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
    if (((isrflags & USART_ISR_ORE) != 0U)
 802247e:	69fb      	ldr	r3, [r7, #28]
 8022480:	f003 0308 	and.w	r3, r3, #8
 8022484:	2b00      	cmp	r3, #0
 8022486:	d015      	beq.n	80224b4 <HAL_UART_IRQHandler+0x130>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8022488:	69bb      	ldr	r3, [r7, #24]
 802248a:	f003 0320 	and.w	r3, r3, #32
 802248e:	2b00      	cmp	r3, #0
 8022490:	d104      	bne.n	802249c <HAL_UART_IRQHandler+0x118>
            ((cr3its & USART_CR3_EIE) != 0U)))
 8022492:	697b      	ldr	r3, [r7, #20]
 8022494:	f003 0301 	and.w	r3, r3, #1
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 8022498:	2b00      	cmp	r3, #0
 802249a:	d00b      	beq.n	80224b4 <HAL_UART_IRQHandler+0x130>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 802249c:	687b      	ldr	r3, [r7, #4]
 802249e:	681b      	ldr	r3, [r3, #0]
 80224a0:	2208      	movs	r2, #8
 80224a2:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80224a4:	687b      	ldr	r3, [r7, #4]
 80224a6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80224aa:	f043 0208 	orr.w	r2, r3, #8
 80224ae:	687b      	ldr	r3, [r7, #4]
 80224b0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 80224b4:	69fb      	ldr	r3, [r7, #28]
 80224b6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80224ba:	2b00      	cmp	r3, #0
 80224bc:	d011      	beq.n	80224e2 <HAL_UART_IRQHandler+0x15e>
 80224be:	69bb      	ldr	r3, [r7, #24]
 80224c0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80224c4:	2b00      	cmp	r3, #0
 80224c6:	d00c      	beq.n	80224e2 <HAL_UART_IRQHandler+0x15e>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80224c8:	687b      	ldr	r3, [r7, #4]
 80224ca:	681b      	ldr	r3, [r3, #0]
 80224cc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80224d0:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 80224d2:	687b      	ldr	r3, [r7, #4]
 80224d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80224d8:	f043 0220 	orr.w	r2, r3, #32
 80224dc:	687b      	ldr	r3, [r7, #4]
 80224de:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80224e2:	687b      	ldr	r3, [r7, #4]
 80224e4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80224e8:	2b00      	cmp	r3, #0
 80224ea:	f000 812d 	beq.w	8022748 <HAL_UART_IRQHandler+0x3c4>
    {
      /* UART in mode Receiver --------------------------------------------------*/
      if (((isrflags & USART_ISR_RXNE) != 0U)
 80224ee:	69fb      	ldr	r3, [r7, #28]
 80224f0:	f003 0320 	and.w	r3, r3, #32
 80224f4:	2b00      	cmp	r3, #0
 80224f6:	d00c      	beq.n	8022512 <HAL_UART_IRQHandler+0x18e>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 80224f8:	69bb      	ldr	r3, [r7, #24]
 80224fa:	f003 0320 	and.w	r3, r3, #32
 80224fe:	2b00      	cmp	r3, #0
 8022500:	d007      	beq.n	8022512 <HAL_UART_IRQHandler+0x18e>
      {
        if (huart->RxISR != NULL)
 8022502:	687b      	ldr	r3, [r7, #4]
 8022504:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8022506:	2b00      	cmp	r3, #0
 8022508:	d003      	beq.n	8022512 <HAL_UART_IRQHandler+0x18e>
        {
          huart->RxISR(huart);
 802250a:	687b      	ldr	r3, [r7, #4]
 802250c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802250e:	6878      	ldr	r0, [r7, #4]
 8022510:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 8022512:	687b      	ldr	r3, [r7, #4]
 8022514:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8022518:	60fb      	str	r3, [r7, #12]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 802251a:	687b      	ldr	r3, [r7, #4]
 802251c:	681b      	ldr	r3, [r3, #0]
 802251e:	689b      	ldr	r3, [r3, #8]
 8022520:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022524:	2b40      	cmp	r3, #64	; 0x40
 8022526:	d004      	beq.n	8022532 <HAL_UART_IRQHandler+0x1ae>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 8022528:	68fb      	ldr	r3, [r7, #12]
 802252a:	f003 0328 	and.w	r3, r3, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 802252e:	2b00      	cmp	r3, #0
 8022530:	d031      	beq.n	8022596 <HAL_UART_IRQHandler+0x212>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 8022532:	6878      	ldr	r0, [r7, #4]
 8022534:	f000 fd6e 	bl	8023014 <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8022538:	687b      	ldr	r3, [r7, #4]
 802253a:	681b      	ldr	r3, [r3, #0]
 802253c:	689b      	ldr	r3, [r3, #8]
 802253e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022542:	2b40      	cmp	r3, #64	; 0x40
 8022544:	d123      	bne.n	802258e <HAL_UART_IRQHandler+0x20a>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8022546:	687b      	ldr	r3, [r7, #4]
 8022548:	681b      	ldr	r3, [r3, #0]
 802254a:	689a      	ldr	r2, [r3, #8]
 802254c:	687b      	ldr	r3, [r7, #4]
 802254e:	681b      	ldr	r3, [r3, #0]
 8022550:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8022554:	609a      	str	r2, [r3, #8]

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 8022556:	687b      	ldr	r3, [r7, #4]
 8022558:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802255a:	2b00      	cmp	r3, #0
 802255c:	d013      	beq.n	8022586 <HAL_UART_IRQHandler+0x202>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 802255e:	687b      	ldr	r3, [r7, #4]
 8022560:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8022562:	4a4a      	ldr	r2, [pc, #296]	; (802268c <HAL_UART_IRQHandler+0x308>)
 8022564:	651a      	str	r2, [r3, #80]	; 0x50

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8022566:	687b      	ldr	r3, [r7, #4]
 8022568:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802256a:	4618      	mov	r0, r3
 802256c:	f7fe fa93 	bl	8020a96 <HAL_DMA_Abort_IT>
 8022570:	4603      	mov	r3, r0
 8022572:	2b00      	cmp	r3, #0
 8022574:	d017      	beq.n	80225a6 <HAL_UART_IRQHandler+0x222>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8022576:	687b      	ldr	r3, [r7, #4]
 8022578:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802257a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 802257c:	687a      	ldr	r2, [r7, #4]
 802257e:	6f12      	ldr	r2, [r2, #112]	; 0x70
 8022580:	4610      	mov	r0, r2
 8022582:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8022584:	e00f      	b.n	80225a6 <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 8022586:	6878      	ldr	r0, [r7, #4]
 8022588:	f000 f8f2 	bl	8022770 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 802258c:	e00b      	b.n	80225a6 <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 802258e:	6878      	ldr	r0, [r7, #4]
 8022590:	f000 f8ee 	bl	8022770 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8022594:	e007      	b.n	80225a6 <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 8022596:	6878      	ldr	r0, [r7, #4]
 8022598:	f000 f8ea 	bl	8022770 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 802259c:	687b      	ldr	r3, [r7, #4]
 802259e:	2200      	movs	r2, #0
 80225a0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
      }
    }
    return;
 80225a4:	e0d0      	b.n	8022748 <HAL_UART_IRQHandler+0x3c4>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80225a6:	bf00      	nop
    return;
 80225a8:	e0ce      	b.n	8022748 <HAL_UART_IRQHandler+0x3c4>

  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80225aa:	687b      	ldr	r3, [r7, #4]
 80225ac:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80225ae:	2b01      	cmp	r3, #1
 80225b0:	f040 80a7 	bne.w	8022702 <HAL_UART_IRQHandler+0x37e>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 80225b4:	69fb      	ldr	r3, [r7, #28]
 80225b6:	f003 0310 	and.w	r3, r3, #16
 80225ba:	2b00      	cmp	r3, #0
 80225bc:	f000 80a1 	beq.w	8022702 <HAL_UART_IRQHandler+0x37e>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 80225c0:	69bb      	ldr	r3, [r7, #24]
 80225c2:	f003 0310 	and.w	r3, r3, #16
 80225c6:	2b00      	cmp	r3, #0
 80225c8:	f000 809b 	beq.w	8022702 <HAL_UART_IRQHandler+0x37e>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 80225cc:	687b      	ldr	r3, [r7, #4]
 80225ce:	681b      	ldr	r3, [r3, #0]
 80225d0:	2210      	movs	r2, #16
 80225d2:	621a      	str	r2, [r3, #32]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80225d4:	687b      	ldr	r3, [r7, #4]
 80225d6:	681b      	ldr	r3, [r3, #0]
 80225d8:	689b      	ldr	r3, [r3, #8]
 80225da:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80225de:	2b40      	cmp	r3, #64	; 0x40
 80225e0:	d156      	bne.n	8022690 <HAL_UART_IRQHandler+0x30c>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 80225e2:	687b      	ldr	r3, [r7, #4]
 80225e4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80225e6:	681b      	ldr	r3, [r3, #0]
 80225e8:	685b      	ldr	r3, [r3, #4]
 80225ea:	813b      	strh	r3, [r7, #8]
      if ((nb_remaining_rx_data > 0U)
 80225ec:	893b      	ldrh	r3, [r7, #8]
 80225ee:	2b00      	cmp	r3, #0
 80225f0:	f000 80ac 	beq.w	802274c <HAL_UART_IRQHandler+0x3c8>
          && (nb_remaining_rx_data < huart->RxXferSize))
 80225f4:	687b      	ldr	r3, [r7, #4]
 80225f6:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 80225fa:	893a      	ldrh	r2, [r7, #8]
 80225fc:	429a      	cmp	r2, r3
 80225fe:	f080 80a5 	bcs.w	802274c <HAL_UART_IRQHandler+0x3c8>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 8022602:	687b      	ldr	r3, [r7, #4]
 8022604:	893a      	ldrh	r2, [r7, #8]
 8022606:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 802260a:	687b      	ldr	r3, [r7, #4]
 802260c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 802260e:	69db      	ldr	r3, [r3, #28]
 8022610:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8022614:	d02a      	beq.n	802266c <HAL_UART_IRQHandler+0x2e8>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8022616:	687b      	ldr	r3, [r7, #4]
 8022618:	681b      	ldr	r3, [r3, #0]
 802261a:	681a      	ldr	r2, [r3, #0]
 802261c:	687b      	ldr	r3, [r7, #4]
 802261e:	681b      	ldr	r3, [r3, #0]
 8022620:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8022624:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022626:	687b      	ldr	r3, [r7, #4]
 8022628:	681b      	ldr	r3, [r3, #0]
 802262a:	689a      	ldr	r2, [r3, #8]
 802262c:	687b      	ldr	r3, [r7, #4]
 802262e:	681b      	ldr	r3, [r3, #0]
 8022630:	f022 0201 	bic.w	r2, r2, #1
 8022634:	609a      	str	r2, [r3, #8]

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8022636:	687b      	ldr	r3, [r7, #4]
 8022638:	681b      	ldr	r3, [r3, #0]
 802263a:	689a      	ldr	r2, [r3, #8]
 802263c:	687b      	ldr	r3, [r7, #4]
 802263e:	681b      	ldr	r3, [r3, #0]
 8022640:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8022644:	609a      	str	r2, [r3, #8]

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 8022646:	687b      	ldr	r3, [r7, #4]
 8022648:	2220      	movs	r2, #32
 802264a:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802264c:	687b      	ldr	r3, [r7, #4]
 802264e:	2200      	movs	r2, #0
 8022650:	661a      	str	r2, [r3, #96]	; 0x60

          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8022652:	687b      	ldr	r3, [r7, #4]
 8022654:	681b      	ldr	r3, [r3, #0]
 8022656:	681a      	ldr	r2, [r3, #0]
 8022658:	687b      	ldr	r3, [r7, #4]
 802265a:	681b      	ldr	r3, [r3, #0]
 802265c:	f022 0210 	bic.w	r2, r2, #16
 8022660:	601a      	str	r2, [r3, #0]

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 8022662:	687b      	ldr	r3, [r7, #4]
 8022664:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8022666:	4618      	mov	r0, r3
 8022668:	f7fe f9a5 	bl	80209b6 <HAL_DMA_Abort>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 802266c:	687b      	ldr	r3, [r7, #4]
 802266e:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8022672:	687b      	ldr	r3, [r7, #4]
 8022674:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8022678:	b29b      	uxth	r3, r3
 802267a:	1ad3      	subs	r3, r2, r3
 802267c:	b29b      	uxth	r3, r3
 802267e:	4619      	mov	r1, r3
 8022680:	6878      	ldr	r0, [r7, #4]
 8022682:	f000 f87f 	bl	8022784 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 8022686:	e061      	b.n	802274c <HAL_UART_IRQHandler+0x3c8>
 8022688:	04000120 	.word	0x04000120
 802268c:	08023073 	.word	0x08023073
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8022690:	687b      	ldr	r3, [r7, #4]
 8022692:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 8022696:	687b      	ldr	r3, [r7, #4]
 8022698:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 802269c:	b29b      	uxth	r3, r3
 802269e:	1ad3      	subs	r3, r2, r3
 80226a0:	817b      	strh	r3, [r7, #10]
      if ((huart->RxXferCount > 0U)
 80226a2:	687b      	ldr	r3, [r7, #4]
 80226a4:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80226a8:	b29b      	uxth	r3, r3
 80226aa:	2b00      	cmp	r3, #0
 80226ac:	d050      	beq.n	8022750 <HAL_UART_IRQHandler+0x3cc>
          && (nb_rx_data > 0U))
 80226ae:	897b      	ldrh	r3, [r7, #10]
 80226b0:	2b00      	cmp	r3, #0
 80226b2:	d04d      	beq.n	8022750 <HAL_UART_IRQHandler+0x3cc>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80226b4:	687b      	ldr	r3, [r7, #4]
 80226b6:	681b      	ldr	r3, [r3, #0]
 80226b8:	681a      	ldr	r2, [r3, #0]
 80226ba:	687b      	ldr	r3, [r7, #4]
 80226bc:	681b      	ldr	r3, [r3, #0]
 80226be:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80226c2:	601a      	str	r2, [r3, #0]

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80226c4:	687b      	ldr	r3, [r7, #4]
 80226c6:	681b      	ldr	r3, [r3, #0]
 80226c8:	689a      	ldr	r2, [r3, #8]
 80226ca:	687b      	ldr	r3, [r7, #4]
 80226cc:	681b      	ldr	r3, [r3, #0]
 80226ce:	f022 0201 	bic.w	r2, r2, #1
 80226d2:	609a      	str	r2, [r3, #8]

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 80226d4:	687b      	ldr	r3, [r7, #4]
 80226d6:	2220      	movs	r2, #32
 80226d8:	67da      	str	r2, [r3, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80226da:	687b      	ldr	r3, [r7, #4]
 80226dc:	2200      	movs	r2, #0
 80226de:	661a      	str	r2, [r3, #96]	; 0x60

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 80226e0:	687b      	ldr	r3, [r7, #4]
 80226e2:	2200      	movs	r2, #0
 80226e4:	665a      	str	r2, [r3, #100]	; 0x64

        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80226e6:	687b      	ldr	r3, [r7, #4]
 80226e8:	681b      	ldr	r3, [r3, #0]
 80226ea:	681a      	ldr	r2, [r3, #0]
 80226ec:	687b      	ldr	r3, [r7, #4]
 80226ee:	681b      	ldr	r3, [r3, #0]
 80226f0:	f022 0210 	bic.w	r2, r2, #16
 80226f4:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 80226f6:	897b      	ldrh	r3, [r7, #10]
 80226f8:	4619      	mov	r1, r3
 80226fa:	6878      	ldr	r0, [r7, #4]
 80226fc:	f000 f842 	bl	8022784 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 8022700:	e026      	b.n	8022750 <HAL_UART_IRQHandler+0x3cc>
  }
#endif /* USART_CR3_WUFIE */
#endif /* USART_CR1_UESM */

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_ISR_TXE) != 0U)
 8022702:	69fb      	ldr	r3, [r7, #28]
 8022704:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8022708:	2b00      	cmp	r3, #0
 802270a:	d00d      	beq.n	8022728 <HAL_UART_IRQHandler+0x3a4>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 802270c:	69bb      	ldr	r3, [r7, #24]
 802270e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8022712:	2b00      	cmp	r3, #0
 8022714:	d008      	beq.n	8022728 <HAL_UART_IRQHandler+0x3a4>
  {
    if (huart->TxISR != NULL)
 8022716:	687b      	ldr	r3, [r7, #4]
 8022718:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 802271a:	2b00      	cmp	r3, #0
 802271c:	d01a      	beq.n	8022754 <HAL_UART_IRQHandler+0x3d0>
    {
      huart->TxISR(huart);
 802271e:	687b      	ldr	r3, [r7, #4]
 8022720:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8022722:	6878      	ldr	r0, [r7, #4]
 8022724:	4798      	blx	r3
    }
    return;
 8022726:	e015      	b.n	8022754 <HAL_UART_IRQHandler+0x3d0>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 8022728:	69fb      	ldr	r3, [r7, #28]
 802272a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 802272e:	2b00      	cmp	r3, #0
 8022730:	d011      	beq.n	8022756 <HAL_UART_IRQHandler+0x3d2>
 8022732:	69bb      	ldr	r3, [r7, #24]
 8022734:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022738:	2b00      	cmp	r3, #0
 802273a:	d00c      	beq.n	8022756 <HAL_UART_IRQHandler+0x3d2>
  {
    UART_EndTransmit_IT(huart);
 802273c:	6878      	ldr	r0, [r7, #4]
 802273e:	f000 fcae 	bl	802309e <UART_EndTransmit_IT>
    return;
 8022742:	e008      	b.n	8022756 <HAL_UART_IRQHandler+0x3d2>
      return;
 8022744:	bf00      	nop
 8022746:	e006      	b.n	8022756 <HAL_UART_IRQHandler+0x3d2>
    return;
 8022748:	bf00      	nop
 802274a:	e004      	b.n	8022756 <HAL_UART_IRQHandler+0x3d2>
      return;
 802274c:	bf00      	nop
 802274e:	e002      	b.n	8022756 <HAL_UART_IRQHandler+0x3d2>
      return;
 8022750:	bf00      	nop
 8022752:	e000      	b.n	8022756 <HAL_UART_IRQHandler+0x3d2>
    return;
 8022754:	bf00      	nop
  }

}
 8022756:	3720      	adds	r7, #32
 8022758:	46bd      	mov	sp, r7
 802275a:	bd80      	pop	{r7, pc}

0802275c <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 802275c:	b480      	push	{r7}
 802275e:	b083      	sub	sp, #12
 8022760:	af00      	add	r7, sp, #0
 8022762:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 8022764:	bf00      	nop
 8022766:	370c      	adds	r7, #12
 8022768:	46bd      	mov	sp, r7
 802276a:	f85d 7b04 	ldr.w	r7, [sp], #4
 802276e:	4770      	bx	lr

08022770 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8022770:	b480      	push	{r7}
 8022772:	b083      	sub	sp, #12
 8022774:	af00      	add	r7, sp, #0
 8022776:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 8022778:	bf00      	nop
 802277a:	370c      	adds	r7, #12
 802277c:	46bd      	mov	sp, r7
 802277e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8022782:	4770      	bx	lr

08022784 <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 8022784:	b480      	push	{r7}
 8022786:	b083      	sub	sp, #12
 8022788:	af00      	add	r7, sp, #0
 802278a:	6078      	str	r0, [r7, #4]
 802278c:	460b      	mov	r3, r1
 802278e:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 8022790:	bf00      	nop
 8022792:	370c      	adds	r7, #12
 8022794:	46bd      	mov	sp, r7
 8022796:	f85d 7b04 	ldr.w	r7, [sp], #4
 802279a:	4770      	bx	lr

0802279c <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 802279c:	b580      	push	{r7, lr}
 802279e:	b088      	sub	sp, #32
 80227a0:	af00      	add	r7, sp, #0
 80227a2:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 80227a4:	2300      	movs	r3, #0
 80227a6:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80227a8:	687b      	ldr	r3, [r7, #4]
 80227aa:	689a      	ldr	r2, [r3, #8]
 80227ac:	687b      	ldr	r3, [r7, #4]
 80227ae:	691b      	ldr	r3, [r3, #16]
 80227b0:	431a      	orrs	r2, r3
 80227b2:	687b      	ldr	r3, [r7, #4]
 80227b4:	695b      	ldr	r3, [r3, #20]
 80227b6:	431a      	orrs	r2, r3
 80227b8:	687b      	ldr	r3, [r7, #4]
 80227ba:	69db      	ldr	r3, [r3, #28]
 80227bc:	4313      	orrs	r3, r2
 80227be:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80227c0:	687b      	ldr	r3, [r7, #4]
 80227c2:	681b      	ldr	r3, [r3, #0]
 80227c4:	681a      	ldr	r2, [r3, #0]
 80227c6:	4ba7      	ldr	r3, [pc, #668]	; (8022a64 <UART_SetConfig+0x2c8>)
 80227c8:	4013      	ands	r3, r2
 80227ca:	687a      	ldr	r2, [r7, #4]
 80227cc:	6812      	ldr	r2, [r2, #0]
 80227ce:	6979      	ldr	r1, [r7, #20]
 80227d0:	430b      	orrs	r3, r1
 80227d2:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80227d4:	687b      	ldr	r3, [r7, #4]
 80227d6:	681b      	ldr	r3, [r3, #0]
 80227d8:	685b      	ldr	r3, [r3, #4]
 80227da:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80227de:	687b      	ldr	r3, [r7, #4]
 80227e0:	68da      	ldr	r2, [r3, #12]
 80227e2:	687b      	ldr	r3, [r7, #4]
 80227e4:	681b      	ldr	r3, [r3, #0]
 80227e6:	430a      	orrs	r2, r1
 80227e8:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80227ea:	687b      	ldr	r3, [r7, #4]
 80227ec:	699b      	ldr	r3, [r3, #24]
 80227ee:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 80227f0:	687b      	ldr	r3, [r7, #4]
 80227f2:	6a1b      	ldr	r3, [r3, #32]
 80227f4:	697a      	ldr	r2, [r7, #20]
 80227f6:	4313      	orrs	r3, r2
 80227f8:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80227fa:	687b      	ldr	r3, [r7, #4]
 80227fc:	681b      	ldr	r3, [r3, #0]
 80227fe:	689b      	ldr	r3, [r3, #8]
 8022800:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8022804:	687b      	ldr	r3, [r7, #4]
 8022806:	681b      	ldr	r3, [r3, #0]
 8022808:	697a      	ldr	r2, [r7, #20]
 802280a:	430a      	orrs	r2, r1
 802280c:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 802280e:	687b      	ldr	r3, [r7, #4]
 8022810:	681b      	ldr	r3, [r3, #0]
 8022812:	4a95      	ldr	r2, [pc, #596]	; (8022a68 <UART_SetConfig+0x2cc>)
 8022814:	4293      	cmp	r3, r2
 8022816:	d120      	bne.n	802285a <UART_SetConfig+0xbe>
 8022818:	4b94      	ldr	r3, [pc, #592]	; (8022a6c <UART_SetConfig+0x2d0>)
 802281a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 802281e:	f003 0303 	and.w	r3, r3, #3
 8022822:	2b03      	cmp	r3, #3
 8022824:	d816      	bhi.n	8022854 <UART_SetConfig+0xb8>
 8022826:	a201      	add	r2, pc, #4	; (adr r2, 802282c <UART_SetConfig+0x90>)
 8022828:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 802282c:	0802283d 	.word	0x0802283d
 8022830:	08022849 	.word	0x08022849
 8022834:	08022843 	.word	0x08022843
 8022838:	0802284f 	.word	0x0802284f
 802283c:	2301      	movs	r3, #1
 802283e:	77fb      	strb	r3, [r7, #31]
 8022840:	e14f      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022842:	2302      	movs	r3, #2
 8022844:	77fb      	strb	r3, [r7, #31]
 8022846:	e14c      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022848:	2304      	movs	r3, #4
 802284a:	77fb      	strb	r3, [r7, #31]
 802284c:	e149      	b.n	8022ae2 <UART_SetConfig+0x346>
 802284e:	2308      	movs	r3, #8
 8022850:	77fb      	strb	r3, [r7, #31]
 8022852:	e146      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022854:	2310      	movs	r3, #16
 8022856:	77fb      	strb	r3, [r7, #31]
 8022858:	e143      	b.n	8022ae2 <UART_SetConfig+0x346>
 802285a:	687b      	ldr	r3, [r7, #4]
 802285c:	681b      	ldr	r3, [r3, #0]
 802285e:	4a84      	ldr	r2, [pc, #528]	; (8022a70 <UART_SetConfig+0x2d4>)
 8022860:	4293      	cmp	r3, r2
 8022862:	d132      	bne.n	80228ca <UART_SetConfig+0x12e>
 8022864:	4b81      	ldr	r3, [pc, #516]	; (8022a6c <UART_SetConfig+0x2d0>)
 8022866:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 802286a:	f003 030c 	and.w	r3, r3, #12
 802286e:	2b0c      	cmp	r3, #12
 8022870:	d828      	bhi.n	80228c4 <UART_SetConfig+0x128>
 8022872:	a201      	add	r2, pc, #4	; (adr r2, 8022878 <UART_SetConfig+0xdc>)
 8022874:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022878:	080228ad 	.word	0x080228ad
 802287c:	080228c5 	.word	0x080228c5
 8022880:	080228c5 	.word	0x080228c5
 8022884:	080228c5 	.word	0x080228c5
 8022888:	080228b9 	.word	0x080228b9
 802288c:	080228c5 	.word	0x080228c5
 8022890:	080228c5 	.word	0x080228c5
 8022894:	080228c5 	.word	0x080228c5
 8022898:	080228b3 	.word	0x080228b3
 802289c:	080228c5 	.word	0x080228c5
 80228a0:	080228c5 	.word	0x080228c5
 80228a4:	080228c5 	.word	0x080228c5
 80228a8:	080228bf 	.word	0x080228bf
 80228ac:	2300      	movs	r3, #0
 80228ae:	77fb      	strb	r3, [r7, #31]
 80228b0:	e117      	b.n	8022ae2 <UART_SetConfig+0x346>
 80228b2:	2302      	movs	r3, #2
 80228b4:	77fb      	strb	r3, [r7, #31]
 80228b6:	e114      	b.n	8022ae2 <UART_SetConfig+0x346>
 80228b8:	2304      	movs	r3, #4
 80228ba:	77fb      	strb	r3, [r7, #31]
 80228bc:	e111      	b.n	8022ae2 <UART_SetConfig+0x346>
 80228be:	2308      	movs	r3, #8
 80228c0:	77fb      	strb	r3, [r7, #31]
 80228c2:	e10e      	b.n	8022ae2 <UART_SetConfig+0x346>
 80228c4:	2310      	movs	r3, #16
 80228c6:	77fb      	strb	r3, [r7, #31]
 80228c8:	e10b      	b.n	8022ae2 <UART_SetConfig+0x346>
 80228ca:	687b      	ldr	r3, [r7, #4]
 80228cc:	681b      	ldr	r3, [r3, #0]
 80228ce:	4a69      	ldr	r2, [pc, #420]	; (8022a74 <UART_SetConfig+0x2d8>)
 80228d0:	4293      	cmp	r3, r2
 80228d2:	d120      	bne.n	8022916 <UART_SetConfig+0x17a>
 80228d4:	4b65      	ldr	r3, [pc, #404]	; (8022a6c <UART_SetConfig+0x2d0>)
 80228d6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80228da:	f003 0330 	and.w	r3, r3, #48	; 0x30
 80228de:	2b30      	cmp	r3, #48	; 0x30
 80228e0:	d013      	beq.n	802290a <UART_SetConfig+0x16e>
 80228e2:	2b30      	cmp	r3, #48	; 0x30
 80228e4:	d814      	bhi.n	8022910 <UART_SetConfig+0x174>
 80228e6:	2b20      	cmp	r3, #32
 80228e8:	d009      	beq.n	80228fe <UART_SetConfig+0x162>
 80228ea:	2b20      	cmp	r3, #32
 80228ec:	d810      	bhi.n	8022910 <UART_SetConfig+0x174>
 80228ee:	2b00      	cmp	r3, #0
 80228f0:	d002      	beq.n	80228f8 <UART_SetConfig+0x15c>
 80228f2:	2b10      	cmp	r3, #16
 80228f4:	d006      	beq.n	8022904 <UART_SetConfig+0x168>
 80228f6:	e00b      	b.n	8022910 <UART_SetConfig+0x174>
 80228f8:	2300      	movs	r3, #0
 80228fa:	77fb      	strb	r3, [r7, #31]
 80228fc:	e0f1      	b.n	8022ae2 <UART_SetConfig+0x346>
 80228fe:	2302      	movs	r3, #2
 8022900:	77fb      	strb	r3, [r7, #31]
 8022902:	e0ee      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022904:	2304      	movs	r3, #4
 8022906:	77fb      	strb	r3, [r7, #31]
 8022908:	e0eb      	b.n	8022ae2 <UART_SetConfig+0x346>
 802290a:	2308      	movs	r3, #8
 802290c:	77fb      	strb	r3, [r7, #31]
 802290e:	e0e8      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022910:	2310      	movs	r3, #16
 8022912:	77fb      	strb	r3, [r7, #31]
 8022914:	e0e5      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022916:	687b      	ldr	r3, [r7, #4]
 8022918:	681b      	ldr	r3, [r3, #0]
 802291a:	4a57      	ldr	r2, [pc, #348]	; (8022a78 <UART_SetConfig+0x2dc>)
 802291c:	4293      	cmp	r3, r2
 802291e:	d120      	bne.n	8022962 <UART_SetConfig+0x1c6>
 8022920:	4b52      	ldr	r3, [pc, #328]	; (8022a6c <UART_SetConfig+0x2d0>)
 8022922:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022926:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 802292a:	2bc0      	cmp	r3, #192	; 0xc0
 802292c:	d013      	beq.n	8022956 <UART_SetConfig+0x1ba>
 802292e:	2bc0      	cmp	r3, #192	; 0xc0
 8022930:	d814      	bhi.n	802295c <UART_SetConfig+0x1c0>
 8022932:	2b80      	cmp	r3, #128	; 0x80
 8022934:	d009      	beq.n	802294a <UART_SetConfig+0x1ae>
 8022936:	2b80      	cmp	r3, #128	; 0x80
 8022938:	d810      	bhi.n	802295c <UART_SetConfig+0x1c0>
 802293a:	2b00      	cmp	r3, #0
 802293c:	d002      	beq.n	8022944 <UART_SetConfig+0x1a8>
 802293e:	2b40      	cmp	r3, #64	; 0x40
 8022940:	d006      	beq.n	8022950 <UART_SetConfig+0x1b4>
 8022942:	e00b      	b.n	802295c <UART_SetConfig+0x1c0>
 8022944:	2300      	movs	r3, #0
 8022946:	77fb      	strb	r3, [r7, #31]
 8022948:	e0cb      	b.n	8022ae2 <UART_SetConfig+0x346>
 802294a:	2302      	movs	r3, #2
 802294c:	77fb      	strb	r3, [r7, #31]
 802294e:	e0c8      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022950:	2304      	movs	r3, #4
 8022952:	77fb      	strb	r3, [r7, #31]
 8022954:	e0c5      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022956:	2308      	movs	r3, #8
 8022958:	77fb      	strb	r3, [r7, #31]
 802295a:	e0c2      	b.n	8022ae2 <UART_SetConfig+0x346>
 802295c:	2310      	movs	r3, #16
 802295e:	77fb      	strb	r3, [r7, #31]
 8022960:	e0bf      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022962:	687b      	ldr	r3, [r7, #4]
 8022964:	681b      	ldr	r3, [r3, #0]
 8022966:	4a45      	ldr	r2, [pc, #276]	; (8022a7c <UART_SetConfig+0x2e0>)
 8022968:	4293      	cmp	r3, r2
 802296a:	d125      	bne.n	80229b8 <UART_SetConfig+0x21c>
 802296c:	4b3f      	ldr	r3, [pc, #252]	; (8022a6c <UART_SetConfig+0x2d0>)
 802296e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022972:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8022976:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 802297a:	d017      	beq.n	80229ac <UART_SetConfig+0x210>
 802297c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8022980:	d817      	bhi.n	80229b2 <UART_SetConfig+0x216>
 8022982:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8022986:	d00b      	beq.n	80229a0 <UART_SetConfig+0x204>
 8022988:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802298c:	d811      	bhi.n	80229b2 <UART_SetConfig+0x216>
 802298e:	2b00      	cmp	r3, #0
 8022990:	d003      	beq.n	802299a <UART_SetConfig+0x1fe>
 8022992:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8022996:	d006      	beq.n	80229a6 <UART_SetConfig+0x20a>
 8022998:	e00b      	b.n	80229b2 <UART_SetConfig+0x216>
 802299a:	2300      	movs	r3, #0
 802299c:	77fb      	strb	r3, [r7, #31]
 802299e:	e0a0      	b.n	8022ae2 <UART_SetConfig+0x346>
 80229a0:	2302      	movs	r3, #2
 80229a2:	77fb      	strb	r3, [r7, #31]
 80229a4:	e09d      	b.n	8022ae2 <UART_SetConfig+0x346>
 80229a6:	2304      	movs	r3, #4
 80229a8:	77fb      	strb	r3, [r7, #31]
 80229aa:	e09a      	b.n	8022ae2 <UART_SetConfig+0x346>
 80229ac:	2308      	movs	r3, #8
 80229ae:	77fb      	strb	r3, [r7, #31]
 80229b0:	e097      	b.n	8022ae2 <UART_SetConfig+0x346>
 80229b2:	2310      	movs	r3, #16
 80229b4:	77fb      	strb	r3, [r7, #31]
 80229b6:	e094      	b.n	8022ae2 <UART_SetConfig+0x346>
 80229b8:	687b      	ldr	r3, [r7, #4]
 80229ba:	681b      	ldr	r3, [r3, #0]
 80229bc:	4a30      	ldr	r2, [pc, #192]	; (8022a80 <UART_SetConfig+0x2e4>)
 80229be:	4293      	cmp	r3, r2
 80229c0:	d125      	bne.n	8022a0e <UART_SetConfig+0x272>
 80229c2:	4b2a      	ldr	r3, [pc, #168]	; (8022a6c <UART_SetConfig+0x2d0>)
 80229c4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80229c8:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80229cc:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80229d0:	d017      	beq.n	8022a02 <UART_SetConfig+0x266>
 80229d2:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80229d6:	d817      	bhi.n	8022a08 <UART_SetConfig+0x26c>
 80229d8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80229dc:	d00b      	beq.n	80229f6 <UART_SetConfig+0x25a>
 80229de:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80229e2:	d811      	bhi.n	8022a08 <UART_SetConfig+0x26c>
 80229e4:	2b00      	cmp	r3, #0
 80229e6:	d003      	beq.n	80229f0 <UART_SetConfig+0x254>
 80229e8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80229ec:	d006      	beq.n	80229fc <UART_SetConfig+0x260>
 80229ee:	e00b      	b.n	8022a08 <UART_SetConfig+0x26c>
 80229f0:	2301      	movs	r3, #1
 80229f2:	77fb      	strb	r3, [r7, #31]
 80229f4:	e075      	b.n	8022ae2 <UART_SetConfig+0x346>
 80229f6:	2302      	movs	r3, #2
 80229f8:	77fb      	strb	r3, [r7, #31]
 80229fa:	e072      	b.n	8022ae2 <UART_SetConfig+0x346>
 80229fc:	2304      	movs	r3, #4
 80229fe:	77fb      	strb	r3, [r7, #31]
 8022a00:	e06f      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022a02:	2308      	movs	r3, #8
 8022a04:	77fb      	strb	r3, [r7, #31]
 8022a06:	e06c      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022a08:	2310      	movs	r3, #16
 8022a0a:	77fb      	strb	r3, [r7, #31]
 8022a0c:	e069      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022a0e:	687b      	ldr	r3, [r7, #4]
 8022a10:	681b      	ldr	r3, [r3, #0]
 8022a12:	4a1c      	ldr	r2, [pc, #112]	; (8022a84 <UART_SetConfig+0x2e8>)
 8022a14:	4293      	cmp	r3, r2
 8022a16:	d137      	bne.n	8022a88 <UART_SetConfig+0x2ec>
 8022a18:	4b14      	ldr	r3, [pc, #80]	; (8022a6c <UART_SetConfig+0x2d0>)
 8022a1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022a1e:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8022a22:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8022a26:	d017      	beq.n	8022a58 <UART_SetConfig+0x2bc>
 8022a28:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8022a2c:	d817      	bhi.n	8022a5e <UART_SetConfig+0x2c2>
 8022a2e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8022a32:	d00b      	beq.n	8022a4c <UART_SetConfig+0x2b0>
 8022a34:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8022a38:	d811      	bhi.n	8022a5e <UART_SetConfig+0x2c2>
 8022a3a:	2b00      	cmp	r3, #0
 8022a3c:	d003      	beq.n	8022a46 <UART_SetConfig+0x2aa>
 8022a3e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8022a42:	d006      	beq.n	8022a52 <UART_SetConfig+0x2b6>
 8022a44:	e00b      	b.n	8022a5e <UART_SetConfig+0x2c2>
 8022a46:	2300      	movs	r3, #0
 8022a48:	77fb      	strb	r3, [r7, #31]
 8022a4a:	e04a      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022a4c:	2302      	movs	r3, #2
 8022a4e:	77fb      	strb	r3, [r7, #31]
 8022a50:	e047      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022a52:	2304      	movs	r3, #4
 8022a54:	77fb      	strb	r3, [r7, #31]
 8022a56:	e044      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022a58:	2308      	movs	r3, #8
 8022a5a:	77fb      	strb	r3, [r7, #31]
 8022a5c:	e041      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022a5e:	2310      	movs	r3, #16
 8022a60:	77fb      	strb	r3, [r7, #31]
 8022a62:	e03e      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022a64:	efff69f3 	.word	0xefff69f3
 8022a68:	40011000 	.word	0x40011000
 8022a6c:	40023800 	.word	0x40023800
 8022a70:	40004400 	.word	0x40004400
 8022a74:	40004800 	.word	0x40004800
 8022a78:	40004c00 	.word	0x40004c00
 8022a7c:	40005000 	.word	0x40005000
 8022a80:	40011400 	.word	0x40011400
 8022a84:	40007800 	.word	0x40007800
 8022a88:	687b      	ldr	r3, [r7, #4]
 8022a8a:	681b      	ldr	r3, [r3, #0]
 8022a8c:	4a71      	ldr	r2, [pc, #452]	; (8022c54 <UART_SetConfig+0x4b8>)
 8022a8e:	4293      	cmp	r3, r2
 8022a90:	d125      	bne.n	8022ade <UART_SetConfig+0x342>
 8022a92:	4b71      	ldr	r3, [pc, #452]	; (8022c58 <UART_SetConfig+0x4bc>)
 8022a94:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8022a98:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8022a9c:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8022aa0:	d017      	beq.n	8022ad2 <UART_SetConfig+0x336>
 8022aa2:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8022aa6:	d817      	bhi.n	8022ad8 <UART_SetConfig+0x33c>
 8022aa8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022aac:	d00b      	beq.n	8022ac6 <UART_SetConfig+0x32a>
 8022aae:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022ab2:	d811      	bhi.n	8022ad8 <UART_SetConfig+0x33c>
 8022ab4:	2b00      	cmp	r3, #0
 8022ab6:	d003      	beq.n	8022ac0 <UART_SetConfig+0x324>
 8022ab8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8022abc:	d006      	beq.n	8022acc <UART_SetConfig+0x330>
 8022abe:	e00b      	b.n	8022ad8 <UART_SetConfig+0x33c>
 8022ac0:	2300      	movs	r3, #0
 8022ac2:	77fb      	strb	r3, [r7, #31]
 8022ac4:	e00d      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022ac6:	2302      	movs	r3, #2
 8022ac8:	77fb      	strb	r3, [r7, #31]
 8022aca:	e00a      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022acc:	2304      	movs	r3, #4
 8022ace:	77fb      	strb	r3, [r7, #31]
 8022ad0:	e007      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022ad2:	2308      	movs	r3, #8
 8022ad4:	77fb      	strb	r3, [r7, #31]
 8022ad6:	e004      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022ad8:	2310      	movs	r3, #16
 8022ada:	77fb      	strb	r3, [r7, #31]
 8022adc:	e001      	b.n	8022ae2 <UART_SetConfig+0x346>
 8022ade:	2310      	movs	r3, #16
 8022ae0:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8022ae2:	687b      	ldr	r3, [r7, #4]
 8022ae4:	69db      	ldr	r3, [r3, #28]
 8022ae6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8022aea:	d15b      	bne.n	8022ba4 <UART_SetConfig+0x408>
  {
    switch (clocksource)
 8022aec:	7ffb      	ldrb	r3, [r7, #31]
 8022aee:	2b08      	cmp	r3, #8
 8022af0:	d827      	bhi.n	8022b42 <UART_SetConfig+0x3a6>
 8022af2:	a201      	add	r2, pc, #4	; (adr r2, 8022af8 <UART_SetConfig+0x35c>)
 8022af4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022af8:	08022b1d 	.word	0x08022b1d
 8022afc:	08022b25 	.word	0x08022b25
 8022b00:	08022b2d 	.word	0x08022b2d
 8022b04:	08022b43 	.word	0x08022b43
 8022b08:	08022b33 	.word	0x08022b33
 8022b0c:	08022b43 	.word	0x08022b43
 8022b10:	08022b43 	.word	0x08022b43
 8022b14:	08022b43 	.word	0x08022b43
 8022b18:	08022b3b 	.word	0x08022b3b
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8022b1c:	f7fe fe2c 	bl	8021778 <HAL_RCC_GetPCLK1Freq>
 8022b20:	61b8      	str	r0, [r7, #24]
        break;
 8022b22:	e013      	b.n	8022b4c <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8022b24:	f7fe fe3c 	bl	80217a0 <HAL_RCC_GetPCLK2Freq>
 8022b28:	61b8      	str	r0, [r7, #24]
        break;
 8022b2a:	e00f      	b.n	8022b4c <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8022b2c:	4b4b      	ldr	r3, [pc, #300]	; (8022c5c <UART_SetConfig+0x4c0>)
 8022b2e:	61bb      	str	r3, [r7, #24]
        break;
 8022b30:	e00c      	b.n	8022b4c <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8022b32:	f7fe fd5f 	bl	80215f4 <HAL_RCC_GetSysClockFreq>
 8022b36:	61b8      	str	r0, [r7, #24]
        break;
 8022b38:	e008      	b.n	8022b4c <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8022b3a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8022b3e:	61bb      	str	r3, [r7, #24]
        break;
 8022b40:	e004      	b.n	8022b4c <UART_SetConfig+0x3b0>
      default:
        pclk = 0U;
 8022b42:	2300      	movs	r3, #0
 8022b44:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8022b46:	2301      	movs	r3, #1
 8022b48:	77bb      	strb	r3, [r7, #30]
        break;
 8022b4a:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 8022b4c:	69bb      	ldr	r3, [r7, #24]
 8022b4e:	2b00      	cmp	r3, #0
 8022b50:	d074      	beq.n	8022c3c <UART_SetConfig+0x4a0>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8022b52:	69bb      	ldr	r3, [r7, #24]
 8022b54:	005a      	lsls	r2, r3, #1
 8022b56:	687b      	ldr	r3, [r7, #4]
 8022b58:	685b      	ldr	r3, [r3, #4]
 8022b5a:	085b      	lsrs	r3, r3, #1
 8022b5c:	441a      	add	r2, r3
 8022b5e:	687b      	ldr	r3, [r7, #4]
 8022b60:	685b      	ldr	r3, [r3, #4]
 8022b62:	fbb2 f3f3 	udiv	r3, r2, r3
 8022b66:	b29b      	uxth	r3, r3
 8022b68:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8022b6a:	693b      	ldr	r3, [r7, #16]
 8022b6c:	2b0f      	cmp	r3, #15
 8022b6e:	d916      	bls.n	8022b9e <UART_SetConfig+0x402>
 8022b70:	693b      	ldr	r3, [r7, #16]
 8022b72:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8022b76:	d212      	bcs.n	8022b9e <UART_SetConfig+0x402>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8022b78:	693b      	ldr	r3, [r7, #16]
 8022b7a:	b29b      	uxth	r3, r3
 8022b7c:	f023 030f 	bic.w	r3, r3, #15
 8022b80:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8022b82:	693b      	ldr	r3, [r7, #16]
 8022b84:	085b      	lsrs	r3, r3, #1
 8022b86:	b29b      	uxth	r3, r3
 8022b88:	f003 0307 	and.w	r3, r3, #7
 8022b8c:	b29a      	uxth	r2, r3
 8022b8e:	89fb      	ldrh	r3, [r7, #14]
 8022b90:	4313      	orrs	r3, r2
 8022b92:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 8022b94:	687b      	ldr	r3, [r7, #4]
 8022b96:	681b      	ldr	r3, [r3, #0]
 8022b98:	89fa      	ldrh	r2, [r7, #14]
 8022b9a:	60da      	str	r2, [r3, #12]
 8022b9c:	e04e      	b.n	8022c3c <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 8022b9e:	2301      	movs	r3, #1
 8022ba0:	77bb      	strb	r3, [r7, #30]
 8022ba2:	e04b      	b.n	8022c3c <UART_SetConfig+0x4a0>
      }
    }
  }
  else
  {
    switch (clocksource)
 8022ba4:	7ffb      	ldrb	r3, [r7, #31]
 8022ba6:	2b08      	cmp	r3, #8
 8022ba8:	d827      	bhi.n	8022bfa <UART_SetConfig+0x45e>
 8022baa:	a201      	add	r2, pc, #4	; (adr r2, 8022bb0 <UART_SetConfig+0x414>)
 8022bac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8022bb0:	08022bd5 	.word	0x08022bd5
 8022bb4:	08022bdd 	.word	0x08022bdd
 8022bb8:	08022be5 	.word	0x08022be5
 8022bbc:	08022bfb 	.word	0x08022bfb
 8022bc0:	08022beb 	.word	0x08022beb
 8022bc4:	08022bfb 	.word	0x08022bfb
 8022bc8:	08022bfb 	.word	0x08022bfb
 8022bcc:	08022bfb 	.word	0x08022bfb
 8022bd0:	08022bf3 	.word	0x08022bf3
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8022bd4:	f7fe fdd0 	bl	8021778 <HAL_RCC_GetPCLK1Freq>
 8022bd8:	61b8      	str	r0, [r7, #24]
        break;
 8022bda:	e013      	b.n	8022c04 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8022bdc:	f7fe fde0 	bl	80217a0 <HAL_RCC_GetPCLK2Freq>
 8022be0:	61b8      	str	r0, [r7, #24]
        break;
 8022be2:	e00f      	b.n	8022c04 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8022be4:	4b1d      	ldr	r3, [pc, #116]	; (8022c5c <UART_SetConfig+0x4c0>)
 8022be6:	61bb      	str	r3, [r7, #24]
        break;
 8022be8:	e00c      	b.n	8022c04 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8022bea:	f7fe fd03 	bl	80215f4 <HAL_RCC_GetSysClockFreq>
 8022bee:	61b8      	str	r0, [r7, #24]
        break;
 8022bf0:	e008      	b.n	8022c04 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8022bf2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8022bf6:	61bb      	str	r3, [r7, #24]
        break;
 8022bf8:	e004      	b.n	8022c04 <UART_SetConfig+0x468>
      default:
        pclk = 0U;
 8022bfa:	2300      	movs	r3, #0
 8022bfc:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8022bfe:	2301      	movs	r3, #1
 8022c00:	77bb      	strb	r3, [r7, #30]
        break;
 8022c02:	bf00      	nop
    }

    if (pclk != 0U)
 8022c04:	69bb      	ldr	r3, [r7, #24]
 8022c06:	2b00      	cmp	r3, #0
 8022c08:	d018      	beq.n	8022c3c <UART_SetConfig+0x4a0>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8022c0a:	687b      	ldr	r3, [r7, #4]
 8022c0c:	685b      	ldr	r3, [r3, #4]
 8022c0e:	085a      	lsrs	r2, r3, #1
 8022c10:	69bb      	ldr	r3, [r7, #24]
 8022c12:	441a      	add	r2, r3
 8022c14:	687b      	ldr	r3, [r7, #4]
 8022c16:	685b      	ldr	r3, [r3, #4]
 8022c18:	fbb2 f3f3 	udiv	r3, r2, r3
 8022c1c:	b29b      	uxth	r3, r3
 8022c1e:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8022c20:	693b      	ldr	r3, [r7, #16]
 8022c22:	2b0f      	cmp	r3, #15
 8022c24:	d908      	bls.n	8022c38 <UART_SetConfig+0x49c>
 8022c26:	693b      	ldr	r3, [r7, #16]
 8022c28:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8022c2c:	d204      	bcs.n	8022c38 <UART_SetConfig+0x49c>
      {
        huart->Instance->BRR = usartdiv;
 8022c2e:	687b      	ldr	r3, [r7, #4]
 8022c30:	681b      	ldr	r3, [r3, #0]
 8022c32:	693a      	ldr	r2, [r7, #16]
 8022c34:	60da      	str	r2, [r3, #12]
 8022c36:	e001      	b.n	8022c3c <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 8022c38:	2301      	movs	r3, #1
 8022c3a:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8022c3c:	687b      	ldr	r3, [r7, #4]
 8022c3e:	2200      	movs	r2, #0
 8022c40:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 8022c42:	687b      	ldr	r3, [r7, #4]
 8022c44:	2200      	movs	r2, #0
 8022c46:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 8022c48:	7fbb      	ldrb	r3, [r7, #30]
}
 8022c4a:	4618      	mov	r0, r3
 8022c4c:	3720      	adds	r7, #32
 8022c4e:	46bd      	mov	sp, r7
 8022c50:	bd80      	pop	{r7, pc}
 8022c52:	bf00      	nop
 8022c54:	40007c00 	.word	0x40007c00
 8022c58:	40023800 	.word	0x40023800
 8022c5c:	00f42400 	.word	0x00f42400

08022c60 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8022c60:	b480      	push	{r7}
 8022c62:	b083      	sub	sp, #12
 8022c64:	af00      	add	r7, sp, #0
 8022c66:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8022c68:	687b      	ldr	r3, [r7, #4]
 8022c6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022c6c:	f003 0301 	and.w	r3, r3, #1
 8022c70:	2b00      	cmp	r3, #0
 8022c72:	d00a      	beq.n	8022c8a <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8022c74:	687b      	ldr	r3, [r7, #4]
 8022c76:	681b      	ldr	r3, [r3, #0]
 8022c78:	685b      	ldr	r3, [r3, #4]
 8022c7a:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8022c7e:	687b      	ldr	r3, [r7, #4]
 8022c80:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8022c82:	687b      	ldr	r3, [r7, #4]
 8022c84:	681b      	ldr	r3, [r3, #0]
 8022c86:	430a      	orrs	r2, r1
 8022c88:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8022c8a:	687b      	ldr	r3, [r7, #4]
 8022c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022c8e:	f003 0302 	and.w	r3, r3, #2
 8022c92:	2b00      	cmp	r3, #0
 8022c94:	d00a      	beq.n	8022cac <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8022c96:	687b      	ldr	r3, [r7, #4]
 8022c98:	681b      	ldr	r3, [r3, #0]
 8022c9a:	685b      	ldr	r3, [r3, #4]
 8022c9c:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8022ca0:	687b      	ldr	r3, [r7, #4]
 8022ca2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8022ca4:	687b      	ldr	r3, [r7, #4]
 8022ca6:	681b      	ldr	r3, [r3, #0]
 8022ca8:	430a      	orrs	r2, r1
 8022caa:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8022cac:	687b      	ldr	r3, [r7, #4]
 8022cae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022cb0:	f003 0304 	and.w	r3, r3, #4
 8022cb4:	2b00      	cmp	r3, #0
 8022cb6:	d00a      	beq.n	8022cce <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8022cb8:	687b      	ldr	r3, [r7, #4]
 8022cba:	681b      	ldr	r3, [r3, #0]
 8022cbc:	685b      	ldr	r3, [r3, #4]
 8022cbe:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8022cc2:	687b      	ldr	r3, [r7, #4]
 8022cc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8022cc6:	687b      	ldr	r3, [r7, #4]
 8022cc8:	681b      	ldr	r3, [r3, #0]
 8022cca:	430a      	orrs	r2, r1
 8022ccc:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8022cce:	687b      	ldr	r3, [r7, #4]
 8022cd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022cd2:	f003 0308 	and.w	r3, r3, #8
 8022cd6:	2b00      	cmp	r3, #0
 8022cd8:	d00a      	beq.n	8022cf0 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8022cda:	687b      	ldr	r3, [r7, #4]
 8022cdc:	681b      	ldr	r3, [r3, #0]
 8022cde:	685b      	ldr	r3, [r3, #4]
 8022ce0:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8022ce4:	687b      	ldr	r3, [r7, #4]
 8022ce6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8022ce8:	687b      	ldr	r3, [r7, #4]
 8022cea:	681b      	ldr	r3, [r3, #0]
 8022cec:	430a      	orrs	r2, r1
 8022cee:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8022cf0:	687b      	ldr	r3, [r7, #4]
 8022cf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022cf4:	f003 0310 	and.w	r3, r3, #16
 8022cf8:	2b00      	cmp	r3, #0
 8022cfa:	d00a      	beq.n	8022d12 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8022cfc:	687b      	ldr	r3, [r7, #4]
 8022cfe:	681b      	ldr	r3, [r3, #0]
 8022d00:	689b      	ldr	r3, [r3, #8]
 8022d02:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8022d06:	687b      	ldr	r3, [r7, #4]
 8022d08:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8022d0a:	687b      	ldr	r3, [r7, #4]
 8022d0c:	681b      	ldr	r3, [r3, #0]
 8022d0e:	430a      	orrs	r2, r1
 8022d10:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8022d12:	687b      	ldr	r3, [r7, #4]
 8022d14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022d16:	f003 0320 	and.w	r3, r3, #32
 8022d1a:	2b00      	cmp	r3, #0
 8022d1c:	d00a      	beq.n	8022d34 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8022d1e:	687b      	ldr	r3, [r7, #4]
 8022d20:	681b      	ldr	r3, [r3, #0]
 8022d22:	689b      	ldr	r3, [r3, #8]
 8022d24:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8022d28:	687b      	ldr	r3, [r7, #4]
 8022d2a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8022d2c:	687b      	ldr	r3, [r7, #4]
 8022d2e:	681b      	ldr	r3, [r3, #0]
 8022d30:	430a      	orrs	r2, r1
 8022d32:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8022d34:	687b      	ldr	r3, [r7, #4]
 8022d36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022d38:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8022d3c:	2b00      	cmp	r3, #0
 8022d3e:	d01a      	beq.n	8022d76 <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8022d40:	687b      	ldr	r3, [r7, #4]
 8022d42:	681b      	ldr	r3, [r3, #0]
 8022d44:	685b      	ldr	r3, [r3, #4]
 8022d46:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8022d4a:	687b      	ldr	r3, [r7, #4]
 8022d4c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8022d4e:	687b      	ldr	r3, [r7, #4]
 8022d50:	681b      	ldr	r3, [r3, #0]
 8022d52:	430a      	orrs	r2, r1
 8022d54:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8022d56:	687b      	ldr	r3, [r7, #4]
 8022d58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8022d5a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8022d5e:	d10a      	bne.n	8022d76 <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8022d60:	687b      	ldr	r3, [r7, #4]
 8022d62:	681b      	ldr	r3, [r3, #0]
 8022d64:	685b      	ldr	r3, [r3, #4]
 8022d66:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8022d6a:	687b      	ldr	r3, [r7, #4]
 8022d6c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8022d6e:	687b      	ldr	r3, [r7, #4]
 8022d70:	681b      	ldr	r3, [r3, #0]
 8022d72:	430a      	orrs	r2, r1
 8022d74:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8022d76:	687b      	ldr	r3, [r7, #4]
 8022d78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8022d7a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8022d7e:	2b00      	cmp	r3, #0
 8022d80:	d00a      	beq.n	8022d98 <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8022d82:	687b      	ldr	r3, [r7, #4]
 8022d84:	681b      	ldr	r3, [r3, #0]
 8022d86:	685b      	ldr	r3, [r3, #4]
 8022d88:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8022d8c:	687b      	ldr	r3, [r7, #4]
 8022d8e:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8022d90:	687b      	ldr	r3, [r7, #4]
 8022d92:	681b      	ldr	r3, [r3, #0]
 8022d94:	430a      	orrs	r2, r1
 8022d96:	605a      	str	r2, [r3, #4]
  }
}
 8022d98:	bf00      	nop
 8022d9a:	370c      	adds	r7, #12
 8022d9c:	46bd      	mov	sp, r7
 8022d9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8022da2:	4770      	bx	lr

08022da4 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8022da4:	b580      	push	{r7, lr}
 8022da6:	b086      	sub	sp, #24
 8022da8:	af02      	add	r7, sp, #8
 8022daa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8022dac:	687b      	ldr	r3, [r7, #4]
 8022dae:	2200      	movs	r2, #0
 8022db0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8022db4:	f7fd fcbe 	bl	8020734 <HAL_GetTick>
 8022db8:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8022dba:	687b      	ldr	r3, [r7, #4]
 8022dbc:	681b      	ldr	r3, [r3, #0]
 8022dbe:	681b      	ldr	r3, [r3, #0]
 8022dc0:	f003 0308 	and.w	r3, r3, #8
 8022dc4:	2b08      	cmp	r3, #8
 8022dc6:	d10e      	bne.n	8022de6 <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8022dc8:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8022dcc:	9300      	str	r3, [sp, #0]
 8022dce:	68fb      	ldr	r3, [r7, #12]
 8022dd0:	2200      	movs	r2, #0
 8022dd2:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8022dd6:	6878      	ldr	r0, [r7, #4]
 8022dd8:	f000 f817 	bl	8022e0a <UART_WaitOnFlagUntilTimeout>
 8022ddc:	4603      	mov	r3, r0
 8022dde:	2b00      	cmp	r3, #0
 8022de0:	d001      	beq.n	8022de6 <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8022de2:	2303      	movs	r3, #3
 8022de4:	e00d      	b.n	8022e02 <UART_CheckIdleState+0x5e>
    }
  }
#endif

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8022de6:	687b      	ldr	r3, [r7, #4]
 8022de8:	2220      	movs	r2, #32
 8022dea:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8022dec:	687b      	ldr	r3, [r7, #4]
 8022dee:	2220      	movs	r2, #32
 8022df0:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8022df2:	687b      	ldr	r3, [r7, #4]
 8022df4:	2200      	movs	r2, #0
 8022df6:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 8022df8:	687b      	ldr	r3, [r7, #4]
 8022dfa:	2200      	movs	r2, #0
 8022dfc:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  return HAL_OK;
 8022e00:	2300      	movs	r3, #0
}
 8022e02:	4618      	mov	r0, r3
 8022e04:	3710      	adds	r7, #16
 8022e06:	46bd      	mov	sp, r7
 8022e08:	bd80      	pop	{r7, pc}

08022e0a <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8022e0a:	b580      	push	{r7, lr}
 8022e0c:	b084      	sub	sp, #16
 8022e0e:	af00      	add	r7, sp, #0
 8022e10:	60f8      	str	r0, [r7, #12]
 8022e12:	60b9      	str	r1, [r7, #8]
 8022e14:	603b      	str	r3, [r7, #0]
 8022e16:	4613      	mov	r3, r2
 8022e18:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8022e1a:	e05e      	b.n	8022eda <UART_WaitOnFlagUntilTimeout+0xd0>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8022e1c:	69bb      	ldr	r3, [r7, #24]
 8022e1e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8022e22:	d05a      	beq.n	8022eda <UART_WaitOnFlagUntilTimeout+0xd0>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8022e24:	f7fd fc86 	bl	8020734 <HAL_GetTick>
 8022e28:	4602      	mov	r2, r0
 8022e2a:	683b      	ldr	r3, [r7, #0]
 8022e2c:	1ad3      	subs	r3, r2, r3
 8022e2e:	69ba      	ldr	r2, [r7, #24]
 8022e30:	429a      	cmp	r2, r3
 8022e32:	d302      	bcc.n	8022e3a <UART_WaitOnFlagUntilTimeout+0x30>
 8022e34:	69bb      	ldr	r3, [r7, #24]
 8022e36:	2b00      	cmp	r3, #0
 8022e38:	d11b      	bne.n	8022e72 <UART_WaitOnFlagUntilTimeout+0x68>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8022e3a:	68fb      	ldr	r3, [r7, #12]
 8022e3c:	681b      	ldr	r3, [r3, #0]
 8022e3e:	681a      	ldr	r2, [r3, #0]
 8022e40:	68fb      	ldr	r3, [r7, #12]
 8022e42:	681b      	ldr	r3, [r3, #0]
 8022e44:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8022e48:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022e4a:	68fb      	ldr	r3, [r7, #12]
 8022e4c:	681b      	ldr	r3, [r3, #0]
 8022e4e:	689a      	ldr	r2, [r3, #8]
 8022e50:	68fb      	ldr	r3, [r7, #12]
 8022e52:	681b      	ldr	r3, [r3, #0]
 8022e54:	f022 0201 	bic.w	r2, r2, #1
 8022e58:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
 8022e5a:	68fb      	ldr	r3, [r7, #12]
 8022e5c:	2220      	movs	r2, #32
 8022e5e:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8022e60:	68fb      	ldr	r3, [r7, #12]
 8022e62:	2220      	movs	r2, #32
 8022e64:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 8022e66:	68fb      	ldr	r3, [r7, #12]
 8022e68:	2200      	movs	r2, #0
 8022e6a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        return HAL_TIMEOUT;
 8022e6e:	2303      	movs	r3, #3
 8022e70:	e043      	b.n	8022efa <UART_WaitOnFlagUntilTimeout+0xf0>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8022e72:	68fb      	ldr	r3, [r7, #12]
 8022e74:	681b      	ldr	r3, [r3, #0]
 8022e76:	681b      	ldr	r3, [r3, #0]
 8022e78:	f003 0304 	and.w	r3, r3, #4
 8022e7c:	2b00      	cmp	r3, #0
 8022e7e:	d02c      	beq.n	8022eda <UART_WaitOnFlagUntilTimeout+0xd0>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8022e80:	68fb      	ldr	r3, [r7, #12]
 8022e82:	681b      	ldr	r3, [r3, #0]
 8022e84:	69db      	ldr	r3, [r3, #28]
 8022e86:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8022e8a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8022e8e:	d124      	bne.n	8022eda <UART_WaitOnFlagUntilTimeout+0xd0>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8022e90:	68fb      	ldr	r3, [r7, #12]
 8022e92:	681b      	ldr	r3, [r3, #0]
 8022e94:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8022e98:	621a      	str	r2, [r3, #32]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8022e9a:	68fb      	ldr	r3, [r7, #12]
 8022e9c:	681b      	ldr	r3, [r3, #0]
 8022e9e:	681a      	ldr	r2, [r3, #0]
 8022ea0:	68fb      	ldr	r3, [r7, #12]
 8022ea2:	681b      	ldr	r3, [r3, #0]
 8022ea4:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8022ea8:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022eaa:	68fb      	ldr	r3, [r7, #12]
 8022eac:	681b      	ldr	r3, [r3, #0]
 8022eae:	689a      	ldr	r2, [r3, #8]
 8022eb0:	68fb      	ldr	r3, [r7, #12]
 8022eb2:	681b      	ldr	r3, [r3, #0]
 8022eb4:	f022 0201 	bic.w	r2, r2, #1
 8022eb8:	609a      	str	r2, [r3, #8]

          huart->gState = HAL_UART_STATE_READY;
 8022eba:	68fb      	ldr	r3, [r7, #12]
 8022ebc:	2220      	movs	r2, #32
 8022ebe:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8022ec0:	68fb      	ldr	r3, [r7, #12]
 8022ec2:	2220      	movs	r2, #32
 8022ec4:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8022ec6:	68fb      	ldr	r3, [r7, #12]
 8022ec8:	2220      	movs	r2, #32
 8022eca:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8022ece:	68fb      	ldr	r3, [r7, #12]
 8022ed0:	2200      	movs	r2, #0
 8022ed2:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

          return HAL_TIMEOUT;
 8022ed6:	2303      	movs	r3, #3
 8022ed8:	e00f      	b.n	8022efa <UART_WaitOnFlagUntilTimeout+0xf0>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8022eda:	68fb      	ldr	r3, [r7, #12]
 8022edc:	681b      	ldr	r3, [r3, #0]
 8022ede:	69da      	ldr	r2, [r3, #28]
 8022ee0:	68bb      	ldr	r3, [r7, #8]
 8022ee2:	4013      	ands	r3, r2
 8022ee4:	68ba      	ldr	r2, [r7, #8]
 8022ee6:	429a      	cmp	r2, r3
 8022ee8:	bf0c      	ite	eq
 8022eea:	2301      	moveq	r3, #1
 8022eec:	2300      	movne	r3, #0
 8022eee:	b2db      	uxtb	r3, r3
 8022ef0:	461a      	mov	r2, r3
 8022ef2:	79fb      	ldrb	r3, [r7, #7]
 8022ef4:	429a      	cmp	r2, r3
 8022ef6:	d091      	beq.n	8022e1c <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8022ef8:	2300      	movs	r3, #0
}
 8022efa:	4618      	mov	r0, r3
 8022efc:	3710      	adds	r7, #16
 8022efe:	46bd      	mov	sp, r7
 8022f00:	bd80      	pop	{r7, pc}
	...

08022f04 <UART_Start_Receive_IT>:
  * @param  pData Pointer to data buffer (u8 or u16 data elements).
  * @param  Size  Amount of data elements (u8 or u16) to be received.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
{
 8022f04:	b480      	push	{r7}
 8022f06:	b085      	sub	sp, #20
 8022f08:	af00      	add	r7, sp, #0
 8022f0a:	60f8      	str	r0, [r7, #12]
 8022f0c:	60b9      	str	r1, [r7, #8]
 8022f0e:	4613      	mov	r3, r2
 8022f10:	80fb      	strh	r3, [r7, #6]
  huart->pRxBuffPtr  = pData;
 8022f12:	68fb      	ldr	r3, [r7, #12]
 8022f14:	68ba      	ldr	r2, [r7, #8]
 8022f16:	655a      	str	r2, [r3, #84]	; 0x54
  huart->RxXferSize  = Size;
 8022f18:	68fb      	ldr	r3, [r7, #12]
 8022f1a:	88fa      	ldrh	r2, [r7, #6]
 8022f1c:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
  huart->RxXferCount = Size;
 8022f20:	68fb      	ldr	r3, [r7, #12]
 8022f22:	88fa      	ldrh	r2, [r7, #6]
 8022f24:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->RxISR       = NULL;
 8022f28:	68fb      	ldr	r3, [r7, #12]
 8022f2a:	2200      	movs	r2, #0
 8022f2c:	665a      	str	r2, [r3, #100]	; 0x64

  /* Computation of UART mask to apply to RDR register */
  UART_MASK_COMPUTATION(huart);
 8022f2e:	68fb      	ldr	r3, [r7, #12]
 8022f30:	689b      	ldr	r3, [r3, #8]
 8022f32:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8022f36:	d10e      	bne.n	8022f56 <UART_Start_Receive_IT+0x52>
 8022f38:	68fb      	ldr	r3, [r7, #12]
 8022f3a:	691b      	ldr	r3, [r3, #16]
 8022f3c:	2b00      	cmp	r3, #0
 8022f3e:	d105      	bne.n	8022f4c <UART_Start_Receive_IT+0x48>
 8022f40:	68fb      	ldr	r3, [r7, #12]
 8022f42:	f240 12ff 	movw	r2, #511	; 0x1ff
 8022f46:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022f4a:	e02d      	b.n	8022fa8 <UART_Start_Receive_IT+0xa4>
 8022f4c:	68fb      	ldr	r3, [r7, #12]
 8022f4e:	22ff      	movs	r2, #255	; 0xff
 8022f50:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022f54:	e028      	b.n	8022fa8 <UART_Start_Receive_IT+0xa4>
 8022f56:	68fb      	ldr	r3, [r7, #12]
 8022f58:	689b      	ldr	r3, [r3, #8]
 8022f5a:	2b00      	cmp	r3, #0
 8022f5c:	d10d      	bne.n	8022f7a <UART_Start_Receive_IT+0x76>
 8022f5e:	68fb      	ldr	r3, [r7, #12]
 8022f60:	691b      	ldr	r3, [r3, #16]
 8022f62:	2b00      	cmp	r3, #0
 8022f64:	d104      	bne.n	8022f70 <UART_Start_Receive_IT+0x6c>
 8022f66:	68fb      	ldr	r3, [r7, #12]
 8022f68:	22ff      	movs	r2, #255	; 0xff
 8022f6a:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022f6e:	e01b      	b.n	8022fa8 <UART_Start_Receive_IT+0xa4>
 8022f70:	68fb      	ldr	r3, [r7, #12]
 8022f72:	227f      	movs	r2, #127	; 0x7f
 8022f74:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022f78:	e016      	b.n	8022fa8 <UART_Start_Receive_IT+0xa4>
 8022f7a:	68fb      	ldr	r3, [r7, #12]
 8022f7c:	689b      	ldr	r3, [r3, #8]
 8022f7e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8022f82:	d10d      	bne.n	8022fa0 <UART_Start_Receive_IT+0x9c>
 8022f84:	68fb      	ldr	r3, [r7, #12]
 8022f86:	691b      	ldr	r3, [r3, #16]
 8022f88:	2b00      	cmp	r3, #0
 8022f8a:	d104      	bne.n	8022f96 <UART_Start_Receive_IT+0x92>
 8022f8c:	68fb      	ldr	r3, [r7, #12]
 8022f8e:	227f      	movs	r2, #127	; 0x7f
 8022f90:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022f94:	e008      	b.n	8022fa8 <UART_Start_Receive_IT+0xa4>
 8022f96:	68fb      	ldr	r3, [r7, #12]
 8022f98:	223f      	movs	r2, #63	; 0x3f
 8022f9a:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 8022f9e:	e003      	b.n	8022fa8 <UART_Start_Receive_IT+0xa4>
 8022fa0:	68fb      	ldr	r3, [r7, #12]
 8022fa2:	2200      	movs	r2, #0
 8022fa4:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c

  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8022fa8:	68fb      	ldr	r3, [r7, #12]
 8022faa:	2200      	movs	r2, #0
 8022fac:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8022fb0:	68fb      	ldr	r3, [r7, #12]
 8022fb2:	2222      	movs	r2, #34	; 0x22
 8022fb4:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
  SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8022fb6:	68fb      	ldr	r3, [r7, #12]
 8022fb8:	681b      	ldr	r3, [r3, #0]
 8022fba:	689a      	ldr	r2, [r3, #8]
 8022fbc:	68fb      	ldr	r3, [r7, #12]
 8022fbe:	681b      	ldr	r3, [r3, #0]
 8022fc0:	f042 0201 	orr.w	r2, r2, #1
 8022fc4:	609a      	str	r2, [r3, #8]

  /* Set the Rx ISR function pointer according to the data word length */
  if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8022fc6:	68fb      	ldr	r3, [r7, #12]
 8022fc8:	689b      	ldr	r3, [r3, #8]
 8022fca:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8022fce:	d107      	bne.n	8022fe0 <UART_Start_Receive_IT+0xdc>
 8022fd0:	68fb      	ldr	r3, [r7, #12]
 8022fd2:	691b      	ldr	r3, [r3, #16]
 8022fd4:	2b00      	cmp	r3, #0
 8022fd6:	d103      	bne.n	8022fe0 <UART_Start_Receive_IT+0xdc>
  {
    huart->RxISR = UART_RxISR_16BIT;
 8022fd8:	68fb      	ldr	r3, [r7, #12]
 8022fda:	4a0c      	ldr	r2, [pc, #48]	; (802300c <UART_Start_Receive_IT+0x108>)
 8022fdc:	665a      	str	r2, [r3, #100]	; 0x64
 8022fde:	e002      	b.n	8022fe6 <UART_Start_Receive_IT+0xe2>
  }
  else
  {
    huart->RxISR = UART_RxISR_8BIT;
 8022fe0:	68fb      	ldr	r3, [r7, #12]
 8022fe2:	4a0b      	ldr	r2, [pc, #44]	; (8023010 <UART_Start_Receive_IT+0x10c>)
 8022fe4:	665a      	str	r2, [r3, #100]	; 0x64
  }

  __HAL_UNLOCK(huart);
 8022fe6:	68fb      	ldr	r3, [r7, #12]
 8022fe8:	2200      	movs	r2, #0
 8022fea:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
  SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 8022fee:	68fb      	ldr	r3, [r7, #12]
 8022ff0:	681b      	ldr	r3, [r3, #0]
 8022ff2:	681a      	ldr	r2, [r3, #0]
 8022ff4:	68fb      	ldr	r3, [r7, #12]
 8022ff6:	681b      	ldr	r3, [r3, #0]
 8022ff8:	f442 7290 	orr.w	r2, r2, #288	; 0x120
 8022ffc:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8022ffe:	2300      	movs	r3, #0
}
 8023000:	4618      	mov	r0, r3
 8023002:	3714      	adds	r7, #20
 8023004:	46bd      	mov	sp, r7
 8023006:	f85d 7b04 	ldr.w	r7, [sp], #4
 802300a:	4770      	bx	lr
 802300c:	080231a5 	.word	0x080231a5
 8023010:	080230d1 	.word	0x080230d1

08023014 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8023014:	b480      	push	{r7}
 8023016:	b083      	sub	sp, #12
 8023018:	af00      	add	r7, sp, #0
 802301a:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 802301c:	687b      	ldr	r3, [r7, #4]
 802301e:	681b      	ldr	r3, [r3, #0]
 8023020:	681a      	ldr	r2, [r3, #0]
 8023022:	687b      	ldr	r3, [r7, #4]
 8023024:	681b      	ldr	r3, [r3, #0]
 8023026:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 802302a:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802302c:	687b      	ldr	r3, [r7, #4]
 802302e:	681b      	ldr	r3, [r3, #0]
 8023030:	689a      	ldr	r2, [r3, #8]
 8023032:	687b      	ldr	r3, [r7, #4]
 8023034:	681b      	ldr	r3, [r3, #0]
 8023036:	f022 0201 	bic.w	r2, r2, #1
 802303a:	609a      	str	r2, [r3, #8]

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802303c:	687b      	ldr	r3, [r7, #4]
 802303e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8023040:	2b01      	cmp	r3, #1
 8023042:	d107      	bne.n	8023054 <UART_EndRxTransfer+0x40>
  {
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8023044:	687b      	ldr	r3, [r7, #4]
 8023046:	681b      	ldr	r3, [r3, #0]
 8023048:	681a      	ldr	r2, [r3, #0]
 802304a:	687b      	ldr	r3, [r7, #4]
 802304c:	681b      	ldr	r3, [r3, #0]
 802304e:	f022 0210 	bic.w	r2, r2, #16
 8023052:	601a      	str	r2, [r3, #0]
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8023054:	687b      	ldr	r3, [r7, #4]
 8023056:	2220      	movs	r2, #32
 8023058:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802305a:	687b      	ldr	r3, [r7, #4]
 802305c:	2200      	movs	r2, #0
 802305e:	661a      	str	r2, [r3, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8023060:	687b      	ldr	r3, [r7, #4]
 8023062:	2200      	movs	r2, #0
 8023064:	665a      	str	r2, [r3, #100]	; 0x64
}
 8023066:	bf00      	nop
 8023068:	370c      	adds	r7, #12
 802306a:	46bd      	mov	sp, r7
 802306c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8023070:	4770      	bx	lr

08023072 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8023072:	b580      	push	{r7, lr}
 8023074:	b084      	sub	sp, #16
 8023076:	af00      	add	r7, sp, #0
 8023078:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 802307a:	687b      	ldr	r3, [r7, #4]
 802307c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802307e:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 8023080:	68fb      	ldr	r3, [r7, #12]
 8023082:	2200      	movs	r2, #0
 8023084:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->TxXferCount = 0U;
 8023088:	68fb      	ldr	r3, [r7, #12]
 802308a:	2200      	movs	r2, #0
 802308c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8023090:	68f8      	ldr	r0, [r7, #12]
 8023092:	f7ff fb6d 	bl	8022770 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8023096:	bf00      	nop
 8023098:	3710      	adds	r7, #16
 802309a:	46bd      	mov	sp, r7
 802309c:	bd80      	pop	{r7, pc}

0802309e <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 802309e:	b580      	push	{r7, lr}
 80230a0:	b082      	sub	sp, #8
 80230a2:	af00      	add	r7, sp, #0
 80230a4:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80230a6:	687b      	ldr	r3, [r7, #4]
 80230a8:	681b      	ldr	r3, [r3, #0]
 80230aa:	681a      	ldr	r2, [r3, #0]
 80230ac:	687b      	ldr	r3, [r7, #4]
 80230ae:	681b      	ldr	r3, [r3, #0]
 80230b0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80230b4:	601a      	str	r2, [r3, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 80230b6:	687b      	ldr	r3, [r7, #4]
 80230b8:	2220      	movs	r2, #32
 80230ba:	679a      	str	r2, [r3, #120]	; 0x78

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 80230bc:	687b      	ldr	r3, [r7, #4]
 80230be:	2200      	movs	r2, #0
 80230c0:	669a      	str	r2, [r3, #104]	; 0x68
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80230c2:	6878      	ldr	r0, [r7, #4]
 80230c4:	f7ff fb4a 	bl	802275c <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80230c8:	bf00      	nop
 80230ca:	3708      	adds	r7, #8
 80230cc:	46bd      	mov	sp, r7
 80230ce:	bd80      	pop	{r7, pc}

080230d0 <UART_RxISR_8BIT>:
  * @brief RX interrupt handler for 7 or 8 bits data word length .
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
{
 80230d0:	b580      	push	{r7, lr}
 80230d2:	b084      	sub	sp, #16
 80230d4:	af00      	add	r7, sp, #0
 80230d6:	6078      	str	r0, [r7, #4]
  uint16_t uhMask = huart->Mask;
 80230d8:	687b      	ldr	r3, [r7, #4]
 80230da:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80230de:	81fb      	strh	r3, [r7, #14]
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80230e0:	687b      	ldr	r3, [r7, #4]
 80230e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80230e4:	2b22      	cmp	r3, #34	; 0x22
 80230e6:	d151      	bne.n	802318c <UART_RxISR_8BIT+0xbc>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80230e8:	687b      	ldr	r3, [r7, #4]
 80230ea:	681b      	ldr	r3, [r3, #0]
 80230ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80230ee:	81bb      	strh	r3, [r7, #12]
    *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 80230f0:	89bb      	ldrh	r3, [r7, #12]
 80230f2:	b2d9      	uxtb	r1, r3
 80230f4:	89fb      	ldrh	r3, [r7, #14]
 80230f6:	b2da      	uxtb	r2, r3
 80230f8:	687b      	ldr	r3, [r7, #4]
 80230fa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80230fc:	400a      	ands	r2, r1
 80230fe:	b2d2      	uxtb	r2, r2
 8023100:	701a      	strb	r2, [r3, #0]
    huart->pRxBuffPtr++;
 8023102:	687b      	ldr	r3, [r7, #4]
 8023104:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8023106:	1c5a      	adds	r2, r3, #1
 8023108:	687b      	ldr	r3, [r7, #4]
 802310a:	655a      	str	r2, [r3, #84]	; 0x54
    huart->RxXferCount--;
 802310c:	687b      	ldr	r3, [r7, #4]
 802310e:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8023112:	b29b      	uxth	r3, r3
 8023114:	3b01      	subs	r3, #1
 8023116:	b29a      	uxth	r2, r3
 8023118:	687b      	ldr	r3, [r7, #4]
 802311a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 802311e:	687b      	ldr	r3, [r7, #4]
 8023120:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 8023124:	b29b      	uxth	r3, r3
 8023126:	2b00      	cmp	r3, #0
 8023128:	d138      	bne.n	802319c <UART_RxISR_8BIT+0xcc>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupts */
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 802312a:	687b      	ldr	r3, [r7, #4]
 802312c:	681b      	ldr	r3, [r3, #0]
 802312e:	681a      	ldr	r2, [r3, #0]
 8023130:	687b      	ldr	r3, [r7, #4]
 8023132:	681b      	ldr	r3, [r3, #0]
 8023134:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8023138:	601a      	str	r2, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802313a:	687b      	ldr	r3, [r7, #4]
 802313c:	681b      	ldr	r3, [r3, #0]
 802313e:	689a      	ldr	r2, [r3, #8]
 8023140:	687b      	ldr	r3, [r7, #4]
 8023142:	681b      	ldr	r3, [r3, #0]
 8023144:	f022 0201 	bic.w	r2, r2, #1
 8023148:	609a      	str	r2, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 802314a:	687b      	ldr	r3, [r7, #4]
 802314c:	2220      	movs	r2, #32
 802314e:	67da      	str	r2, [r3, #124]	; 0x7c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8023150:	687b      	ldr	r3, [r7, #4]
 8023152:	2200      	movs	r2, #0
 8023154:	665a      	str	r2, [r3, #100]	; 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8023156:	687b      	ldr	r3, [r7, #4]
 8023158:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802315a:	2b01      	cmp	r3, #1
 802315c:	d10f      	bne.n	802317e <UART_RxISR_8BIT+0xae>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 802315e:	687b      	ldr	r3, [r7, #4]
 8023160:	681b      	ldr	r3, [r3, #0]
 8023162:	681a      	ldr	r2, [r3, #0]
 8023164:	687b      	ldr	r3, [r7, #4]
 8023166:	681b      	ldr	r3, [r3, #0]
 8023168:	f022 0210 	bic.w	r2, r2, #16
 802316c:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 802316e:	687b      	ldr	r3, [r7, #4]
 8023170:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8023174:	4619      	mov	r1, r3
 8023176:	6878      	ldr	r0, [r7, #4]
 8023178:	f7ff fb04 	bl	8022784 <HAL_UARTEx_RxEventCallback>
 802317c:	e002      	b.n	8023184 <UART_RxISR_8BIT+0xb4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 802317e:	6878      	ldr	r0, [r7, #4]
 8023180:	f7f5 fc24 	bl	80189cc <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8023184:	687b      	ldr	r3, [r7, #4]
 8023186:	2200      	movs	r2, #0
 8023188:	661a      	str	r2, [r3, #96]	; 0x60
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 802318a:	e007      	b.n	802319c <UART_RxISR_8BIT+0xcc>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 802318c:	687b      	ldr	r3, [r7, #4]
 802318e:	681b      	ldr	r3, [r3, #0]
 8023190:	699a      	ldr	r2, [r3, #24]
 8023192:	687b      	ldr	r3, [r7, #4]
 8023194:	681b      	ldr	r3, [r3, #0]
 8023196:	f042 0208 	orr.w	r2, r2, #8
 802319a:	619a      	str	r2, [r3, #24]
}
 802319c:	bf00      	nop
 802319e:	3710      	adds	r7, #16
 80231a0:	46bd      	mov	sp, r7
 80231a2:	bd80      	pop	{r7, pc}

080231a4 <UART_RxISR_16BIT>:
  *         interruptions have been enabled by HAL_UART_Receive_IT()
  * @param huart UART handle.
  * @retval None
  */
static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
{
 80231a4:	b580      	push	{r7, lr}
 80231a6:	b084      	sub	sp, #16
 80231a8:	af00      	add	r7, sp, #0
 80231aa:	6078      	str	r0, [r7, #4]
  uint16_t *tmp;
  uint16_t uhMask = huart->Mask;
 80231ac:	687b      	ldr	r3, [r7, #4]
 80231ae:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80231b2:	81fb      	strh	r3, [r7, #14]
  uint16_t  uhdata;

  /* Check that a Rx process is ongoing */
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80231b4:	687b      	ldr	r3, [r7, #4]
 80231b6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80231b8:	2b22      	cmp	r3, #34	; 0x22
 80231ba:	d151      	bne.n	8023260 <UART_RxISR_16BIT+0xbc>
  {
    uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 80231bc:	687b      	ldr	r3, [r7, #4]
 80231be:	681b      	ldr	r3, [r3, #0]
 80231c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80231c2:	81bb      	strh	r3, [r7, #12]
    tmp = (uint16_t *) huart->pRxBuffPtr ;
 80231c4:	687b      	ldr	r3, [r7, #4]
 80231c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80231c8:	60bb      	str	r3, [r7, #8]
    *tmp = (uint16_t)(uhdata & uhMask);
 80231ca:	89ba      	ldrh	r2, [r7, #12]
 80231cc:	89fb      	ldrh	r3, [r7, #14]
 80231ce:	4013      	ands	r3, r2
 80231d0:	b29a      	uxth	r2, r3
 80231d2:	68bb      	ldr	r3, [r7, #8]
 80231d4:	801a      	strh	r2, [r3, #0]
    huart->pRxBuffPtr += 2U;
 80231d6:	687b      	ldr	r3, [r7, #4]
 80231d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80231da:	1c9a      	adds	r2, r3, #2
 80231dc:	687b      	ldr	r3, [r7, #4]
 80231de:	655a      	str	r2, [r3, #84]	; 0x54
    huart->RxXferCount--;
 80231e0:	687b      	ldr	r3, [r7, #4]
 80231e2:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80231e6:	b29b      	uxth	r3, r3
 80231e8:	3b01      	subs	r3, #1
 80231ea:	b29a      	uxth	r2, r3
 80231ec:	687b      	ldr	r3, [r7, #4]
 80231ee:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    if (huart->RxXferCount == 0U)
 80231f2:	687b      	ldr	r3, [r7, #4]
 80231f4:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 80231f8:	b29b      	uxth	r3, r3
 80231fa:	2b00      	cmp	r3, #0
 80231fc:	d138      	bne.n	8023270 <UART_RxISR_16BIT+0xcc>
    {
      /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
      CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80231fe:	687b      	ldr	r3, [r7, #4]
 8023200:	681b      	ldr	r3, [r3, #0]
 8023202:	681a      	ldr	r2, [r3, #0]
 8023204:	687b      	ldr	r3, [r7, #4]
 8023206:	681b      	ldr	r3, [r3, #0]
 8023208:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 802320c:	601a      	str	r2, [r3, #0]

      /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
      CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802320e:	687b      	ldr	r3, [r7, #4]
 8023210:	681b      	ldr	r3, [r3, #0]
 8023212:	689a      	ldr	r2, [r3, #8]
 8023214:	687b      	ldr	r3, [r7, #4]
 8023216:	681b      	ldr	r3, [r3, #0]
 8023218:	f022 0201 	bic.w	r2, r2, #1
 802321c:	609a      	str	r2, [r3, #8]

      /* Rx process is completed, restore huart->RxState to Ready */
      huart->RxState = HAL_UART_STATE_READY;
 802321e:	687b      	ldr	r3, [r7, #4]
 8023220:	2220      	movs	r2, #32
 8023222:	67da      	str	r2, [r3, #124]	; 0x7c

      /* Clear RxISR function pointer */
      huart->RxISR = NULL;
 8023224:	687b      	ldr	r3, [r7, #4]
 8023226:	2200      	movs	r2, #0
 8023228:	665a      	str	r2, [r3, #100]	; 0x64

      /* Check current reception Mode :
         If Reception till IDLE event has been selected : */
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802322a:	687b      	ldr	r3, [r7, #4]
 802322c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802322e:	2b01      	cmp	r3, #1
 8023230:	d10f      	bne.n	8023252 <UART_RxISR_16BIT+0xae>
      {
        /* Disable IDLE interrupt */
        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8023232:	687b      	ldr	r3, [r7, #4]
 8023234:	681b      	ldr	r3, [r3, #0]
 8023236:	681a      	ldr	r2, [r3, #0]
 8023238:	687b      	ldr	r3, [r7, #4]
 802323a:	681b      	ldr	r3, [r3, #0]
 802323c:	f022 0210 	bic.w	r2, r2, #16
 8023240:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, huart->RxXferSize);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8023242:	687b      	ldr	r3, [r7, #4]
 8023244:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8023248:	4619      	mov	r1, r3
 802324a:	6878      	ldr	r0, [r7, #4]
 802324c:	f7ff fa9a 	bl	8022784 <HAL_UARTEx_RxEventCallback>
 8023250:	e002      	b.n	8023258 <UART_RxISR_16BIT+0xb4>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxCpltCallback(huart);
#else
        /*Call legacy weak Rx complete callback*/
        HAL_UART_RxCpltCallback(huart);
 8023252:	6878      	ldr	r0, [r7, #4]
 8023254:	f7f5 fbba 	bl	80189cc <HAL_UART_RxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
      }
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8023258:	687b      	ldr	r3, [r7, #4]
 802325a:	2200      	movs	r2, #0
 802325c:	661a      	str	r2, [r3, #96]	; 0x60
  else
  {
    /* Clear RXNE interrupt flag */
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
  }
}
 802325e:	e007      	b.n	8023270 <UART_RxISR_16BIT+0xcc>
    __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 8023260:	687b      	ldr	r3, [r7, #4]
 8023262:	681b      	ldr	r3, [r3, #0]
 8023264:	699a      	ldr	r2, [r3, #24]
 8023266:	687b      	ldr	r3, [r7, #4]
 8023268:	681b      	ldr	r3, [r3, #0]
 802326a:	f042 0208 	orr.w	r2, r2, #8
 802326e:	619a      	str	r2, [r3, #24]
}
 8023270:	bf00      	nop
 8023272:	3710      	adds	r7, #16
 8023274:	46bd      	mov	sp, r7
 8023276:	bd80      	pop	{r7, pc}

08023278 <_ZdlPv>:
 8023278:	f001 bcc2 	b.w	8024c00 <free>

0802327c <_ZdlPvj>:
 802327c:	f7ff bffc 	b.w	8023278 <_ZdlPv>

08023280 <__cxa_guard_acquire>:
 8023280:	6803      	ldr	r3, [r0, #0]
 8023282:	07db      	lsls	r3, r3, #31
 8023284:	d406      	bmi.n	8023294 <__cxa_guard_acquire+0x14>
 8023286:	7843      	ldrb	r3, [r0, #1]
 8023288:	b103      	cbz	r3, 802328c <__cxa_guard_acquire+0xc>
 802328a:	deff      	udf	#255	; 0xff
 802328c:	2301      	movs	r3, #1
 802328e:	7043      	strb	r3, [r0, #1]
 8023290:	4618      	mov	r0, r3
 8023292:	4770      	bx	lr
 8023294:	2000      	movs	r0, #0
 8023296:	4770      	bx	lr

08023298 <__cxa_guard_release>:
 8023298:	2301      	movs	r3, #1
 802329a:	6003      	str	r3, [r0, #0]
 802329c:	4770      	bx	lr

0802329e <_Znwj>:
 802329e:	2801      	cmp	r0, #1
 80232a0:	bf38      	it	cc
 80232a2:	2001      	movcc	r0, #1
 80232a4:	b510      	push	{r4, lr}
 80232a6:	4604      	mov	r4, r0
 80232a8:	4620      	mov	r0, r4
 80232aa:	f001 fca1 	bl	8024bf0 <malloc>
 80232ae:	b930      	cbnz	r0, 80232be <_Znwj+0x20>
 80232b0:	f000 fc76 	bl	8023ba0 <_ZSt15get_new_handlerv>
 80232b4:	b908      	cbnz	r0, 80232ba <_Znwj+0x1c>
 80232b6:	f001 fc31 	bl	8024b1c <abort>
 80232ba:	4780      	blx	r0
 80232bc:	e7f4      	b.n	80232a8 <_Znwj+0xa>
 80232be:	bd10      	pop	{r4, pc}

080232c0 <_ZNSaIcEC1Ev>:
 80232c0:	4770      	bx	lr

080232c2 <_ZNSaIcED1Ev>:
 80232c2:	4770      	bx	lr

080232c4 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
 80232c4:	68c3      	ldr	r3, [r0, #12]
 80232c6:	689a      	ldr	r2, [r3, #8]
 80232c8:	60c2      	str	r2, [r0, #12]
 80232ca:	b510      	push	{r4, lr}
 80232cc:	b102      	cbz	r2, 80232d0 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0xc>
 80232ce:	6050      	str	r0, [r2, #4]
 80232d0:	6842      	ldr	r2, [r0, #4]
 80232d2:	605a      	str	r2, [r3, #4]
 80232d4:	680c      	ldr	r4, [r1, #0]
 80232d6:	4284      	cmp	r4, r0
 80232d8:	d103      	bne.n	80232e2 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x1e>
 80232da:	600b      	str	r3, [r1, #0]
 80232dc:	6098      	str	r0, [r3, #8]
 80232de:	6043      	str	r3, [r0, #4]
 80232e0:	bd10      	pop	{r4, pc}
 80232e2:	6891      	ldr	r1, [r2, #8]
 80232e4:	4281      	cmp	r1, r0
 80232e6:	bf0c      	ite	eq
 80232e8:	6093      	streq	r3, [r2, #8]
 80232ea:	60d3      	strne	r3, [r2, #12]
 80232ec:	e7f6      	b.n	80232dc <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x18>

080232ee <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
 80232ee:	6883      	ldr	r3, [r0, #8]
 80232f0:	68da      	ldr	r2, [r3, #12]
 80232f2:	6082      	str	r2, [r0, #8]
 80232f4:	b510      	push	{r4, lr}
 80232f6:	b102      	cbz	r2, 80232fa <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0xc>
 80232f8:	6050      	str	r0, [r2, #4]
 80232fa:	6842      	ldr	r2, [r0, #4]
 80232fc:	605a      	str	r2, [r3, #4]
 80232fe:	680c      	ldr	r4, [r1, #0]
 8023300:	4284      	cmp	r4, r0
 8023302:	d103      	bne.n	802330c <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x1e>
 8023304:	600b      	str	r3, [r1, #0]
 8023306:	60d8      	str	r0, [r3, #12]
 8023308:	6043      	str	r3, [r0, #4]
 802330a:	bd10      	pop	{r4, pc}
 802330c:	68d1      	ldr	r1, [r2, #12]
 802330e:	4281      	cmp	r1, r0
 8023310:	bf0c      	ite	eq
 8023312:	60d3      	streq	r3, [r2, #12]
 8023314:	6093      	strne	r3, [r2, #8]
 8023316:	e7f6      	b.n	8023306 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x18>

08023318 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 8023318:	7803      	ldrb	r3, [r0, #0]
 802331a:	b933      	cbnz	r3, 802332a <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 802331c:	6843      	ldr	r3, [r0, #4]
 802331e:	685b      	ldr	r3, [r3, #4]
 8023320:	4283      	cmp	r3, r0
 8023322:	d102      	bne.n	802332a <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 8023324:	68db      	ldr	r3, [r3, #12]
 8023326:	4618      	mov	r0, r3
 8023328:	4770      	bx	lr
 802332a:	6882      	ldr	r2, [r0, #8]
 802332c:	b122      	cbz	r2, 8023338 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
 802332e:	4613      	mov	r3, r2
 8023330:	68d2      	ldr	r2, [r2, #12]
 8023332:	2a00      	cmp	r2, #0
 8023334:	d1fb      	bne.n	802332e <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x16>
 8023336:	e7f6      	b.n	8023326 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 8023338:	6843      	ldr	r3, [r0, #4]
 802333a:	689a      	ldr	r2, [r3, #8]
 802333c:	4282      	cmp	r2, r0
 802333e:	d1f2      	bne.n	8023326 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 8023340:	4618      	mov	r0, r3
 8023342:	685b      	ldr	r3, [r3, #4]
 8023344:	e7f9      	b.n	802333a <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x22>

08023346 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
 8023346:	68c3      	ldr	r3, [r0, #12]
 8023348:	b123      	cbz	r3, 8023354 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0xe>
 802334a:	4618      	mov	r0, r3
 802334c:	689b      	ldr	r3, [r3, #8]
 802334e:	2b00      	cmp	r3, #0
 8023350:	d1fb      	bne.n	802334a <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x4>
 8023352:	4770      	bx	lr
 8023354:	6843      	ldr	r3, [r0, #4]
 8023356:	68da      	ldr	r2, [r3, #12]
 8023358:	4282      	cmp	r2, r0
 802335a:	d102      	bne.n	8023362 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x1c>
 802335c:	4618      	mov	r0, r3
 802335e:	685b      	ldr	r3, [r3, #4]
 8023360:	e7f9      	b.n	8023356 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
 8023362:	68c2      	ldr	r2, [r0, #12]
 8023364:	4293      	cmp	r3, r2
 8023366:	bf18      	it	ne
 8023368:	4618      	movne	r0, r3
 802336a:	4770      	bx	lr

0802336c <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 802336c:	f7ff bfd4 	b.w	8023318 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

08023370 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
 8023370:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023374:	461e      	mov	r6, r3
 8023376:	f103 0804 	add.w	r8, r3, #4
 802337a:	2300      	movs	r3, #0
 802337c:	e9c1 3302 	strd	r3, r3, [r1, #8]
 8023380:	460c      	mov	r4, r1
 8023382:	604a      	str	r2, [r1, #4]
 8023384:	700b      	strb	r3, [r1, #0]
 8023386:	b300      	cbz	r0, 80233ca <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x5a>
 8023388:	4296      	cmp	r6, r2
 802338a:	6091      	str	r1, [r2, #8]
 802338c:	d118      	bne.n	80233c0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x50>
 802338e:	6071      	str	r1, [r6, #4]
 8023390:	60f4      	str	r4, [r6, #12]
 8023392:	2701      	movs	r7, #1
 8023394:	f04f 0900 	mov.w	r9, #0
 8023398:	6873      	ldr	r3, [r6, #4]
 802339a:	42a3      	cmp	r3, r4
 802339c:	d03f      	beq.n	802341e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xae>
 802339e:	6860      	ldr	r0, [r4, #4]
 80233a0:	7802      	ldrb	r2, [r0, #0]
 80233a2:	2a00      	cmp	r2, #0
 80233a4:	d13c      	bne.n	8023420 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xb0>
 80233a6:	6845      	ldr	r5, [r0, #4]
 80233a8:	68ab      	ldr	r3, [r5, #8]
 80233aa:	4298      	cmp	r0, r3
 80233ac:	d123      	bne.n	80233f6 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x86>
 80233ae:	68eb      	ldr	r3, [r5, #12]
 80233b0:	b183      	cbz	r3, 80233d4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 80233b2:	781a      	ldrb	r2, [r3, #0]
 80233b4:	b972      	cbnz	r2, 80233d4 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 80233b6:	7007      	strb	r7, [r0, #0]
 80233b8:	701f      	strb	r7, [r3, #0]
 80233ba:	702a      	strb	r2, [r5, #0]
 80233bc:	462c      	mov	r4, r5
 80233be:	e7eb      	b.n	8023398 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
 80233c0:	68b3      	ldr	r3, [r6, #8]
 80233c2:	4293      	cmp	r3, r2
 80233c4:	d1e5      	bne.n	8023392 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 80233c6:	60b1      	str	r1, [r6, #8]
 80233c8:	e7e3      	b.n	8023392 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 80233ca:	60d1      	str	r1, [r2, #12]
 80233cc:	68f3      	ldr	r3, [r6, #12]
 80233ce:	4293      	cmp	r3, r2
 80233d0:	d1df      	bne.n	8023392 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 80233d2:	e7dd      	b.n	8023390 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x20>
 80233d4:	68c3      	ldr	r3, [r0, #12]
 80233d6:	42a3      	cmp	r3, r4
 80233d8:	d103      	bne.n	80233e2 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x72>
 80233da:	4641      	mov	r1, r8
 80233dc:	f7ff ff72 	bl	80232c4 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 80233e0:	4604      	mov	r4, r0
 80233e2:	6863      	ldr	r3, [r4, #4]
 80233e4:	4641      	mov	r1, r8
 80233e6:	701f      	strb	r7, [r3, #0]
 80233e8:	4628      	mov	r0, r5
 80233ea:	f885 9000 	strb.w	r9, [r5]
 80233ee:	f7ff ff7e 	bl	80232ee <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 80233f2:	4625      	mov	r5, r4
 80233f4:	e7e2      	b.n	80233bc <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x4c>
 80233f6:	b113      	cbz	r3, 80233fe <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x8e>
 80233f8:	781a      	ldrb	r2, [r3, #0]
 80233fa:	2a00      	cmp	r2, #0
 80233fc:	d0db      	beq.n	80233b6 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x46>
 80233fe:	6883      	ldr	r3, [r0, #8]
 8023400:	42a3      	cmp	r3, r4
 8023402:	d103      	bne.n	802340c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x9c>
 8023404:	4641      	mov	r1, r8
 8023406:	f7ff ff72 	bl	80232ee <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 802340a:	4604      	mov	r4, r0
 802340c:	6863      	ldr	r3, [r4, #4]
 802340e:	4641      	mov	r1, r8
 8023410:	701f      	strb	r7, [r3, #0]
 8023412:	4628      	mov	r0, r5
 8023414:	f885 9000 	strb.w	r9, [r5]
 8023418:	f7ff ff54 	bl	80232c4 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 802341c:	e7e9      	b.n	80233f2 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x82>
 802341e:	4623      	mov	r3, r4
 8023420:	2201      	movs	r2, #1
 8023422:	701a      	strb	r2, [r3, #0]
 8023424:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08023428 <_ZSt17__throw_bad_allocv>:
 8023428:	b508      	push	{r3, lr}
 802342a:	f001 fb77 	bl	8024b1c <abort>

0802342e <_ZSt19__throw_logic_errorPKc>:
 802342e:	b508      	push	{r3, lr}
 8023430:	f001 fb74 	bl	8024b1c <abort>

08023434 <_ZSt24__throw_invalid_argumentPKc>:
 8023434:	b508      	push	{r3, lr}
 8023436:	f001 fb71 	bl	8024b1c <abort>

0802343a <_ZSt20__throw_length_errorPKc>:
 802343a:	b508      	push	{r3, lr}
 802343c:	f001 fb6e 	bl	8024b1c <abort>

08023440 <_ZSt20__throw_out_of_rangePKc>:
 8023440:	b508      	push	{r3, lr}
 8023442:	f001 fb6b 	bl	8024b1c <abort>

08023446 <_ZSt24__throw_out_of_range_fmtPKcz>:
 8023446:	b40f      	push	{r0, r1, r2, r3}
 8023448:	b580      	push	{r7, lr}
 802344a:	b084      	sub	sp, #16
 802344c:	af00      	add	r7, sp, #0
 802344e:	f107 0418 	add.w	r4, r7, #24
 8023452:	f854 2b04 	ldr.w	r2, [r4], #4
 8023456:	607a      	str	r2, [r7, #4]
 8023458:	4610      	mov	r0, r2
 802345a:	f7dc ff29 	bl	80002b0 <strlen>
 802345e:	f200 2307 	addw	r3, r0, #519	; 0x207
 8023462:	f023 0307 	bic.w	r3, r3, #7
 8023466:	ebad 0d03 	sub.w	sp, sp, r3
 802346a:	f500 7100 	add.w	r1, r0, #512	; 0x200
 802346e:	687a      	ldr	r2, [r7, #4]
 8023470:	60fc      	str	r4, [r7, #12]
 8023472:	4623      	mov	r3, r4
 8023474:	4668      	mov	r0, sp
 8023476:	f000 f855 	bl	8023524 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>
 802347a:	f001 fb4f 	bl	8024b1c <abort>
	...

08023480 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>:
 8023480:	b580      	push	{r7, lr}
 8023482:	b09c      	sub	sp, #112	; 0x70
 8023484:	4606      	mov	r6, r0
 8023486:	af00      	add	r7, sp, #0
 8023488:	460c      	mov	r4, r1
 802348a:	1ba4      	subs	r4, r4, r6
 802348c:	490e      	ldr	r1, [pc, #56]	; (80234c8 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_+0x48>)
 802348e:	2269      	movs	r2, #105	; 0x69
 8023490:	1d38      	adds	r0, r7, #4
 8023492:	f001 fbcb 	bl	8024c2c <memcpy>
 8023496:	f104 0370 	add.w	r3, r4, #112	; 0x70
 802349a:	f023 0307 	bic.w	r3, r3, #7
 802349e:	ebad 0d03 	sub.w	sp, sp, r3
 80234a2:	466d      	mov	r5, sp
 80234a4:	2268      	movs	r2, #104	; 0x68
 80234a6:	1d39      	adds	r1, r7, #4
 80234a8:	4628      	mov	r0, r5
 80234aa:	f001 fbbf 	bl	8024c2c <memcpy>
 80234ae:	4622      	mov	r2, r4
 80234b0:	4631      	mov	r1, r6
 80234b2:	f105 0068 	add.w	r0, r5, #104	; 0x68
 80234b6:	442c      	add	r4, r5
 80234b8:	f001 fbb8 	bl	8024c2c <memcpy>
 80234bc:	2300      	movs	r3, #0
 80234be:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 80234c2:	4628      	mov	r0, r5
 80234c4:	f7ff ffb3 	bl	802342e <_ZSt19__throw_logic_errorPKc>
 80234c8:	0802a078 	.word	0x0802a078

080234cc <_ZN9__gnu_cxx15__concat_size_tEPcjj>:
 80234cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80234d0:	af00      	add	r7, sp, #0
 80234d2:	b084      	sub	sp, #16
 80234d4:	466d      	mov	r5, sp
 80234d6:	f105 040c 	add.w	r4, r5, #12
 80234da:	f8df 8044 	ldr.w	r8, [pc, #68]	; 8023520 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x54>
 80234de:	4623      	mov	r3, r4
 80234e0:	f04f 0c0a 	mov.w	ip, #10
 80234e4:	fbb2 f6fc 	udiv	r6, r2, ip
 80234e8:	fb0c 2e16 	mls	lr, ip, r6, r2
 80234ec:	f818 e00e 	ldrb.w	lr, [r8, lr]
 80234f0:	f803 ed01 	strb.w	lr, [r3, #-1]!
 80234f4:	4696      	mov	lr, r2
 80234f6:	f1be 0f09 	cmp.w	lr, #9
 80234fa:	4632      	mov	r2, r6
 80234fc:	d8f2      	bhi.n	80234e4 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x18>
 80234fe:	1ae4      	subs	r4, r4, r3
 8023500:	428c      	cmp	r4, r1
 8023502:	d809      	bhi.n	8023518 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x4c>
 8023504:	f1c4 010c 	rsb	r1, r4, #12
 8023508:	4622      	mov	r2, r4
 802350a:	4429      	add	r1, r5
 802350c:	f001 fb8e 	bl	8024c2c <memcpy>
 8023510:	4620      	mov	r0, r4
 8023512:	46bd      	mov	sp, r7
 8023514:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023518:	f04f 34ff 	mov.w	r4, #4294967295
 802351c:	e7f8      	b.n	8023510 <_ZN9__gnu_cxx15__concat_size_tEPcjj+0x44>
 802351e:	bf00      	nop
 8023520:	0802a0e1 	.word	0x0802a0e1

08023524 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list>:
 8023524:	3901      	subs	r1, #1
 8023526:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802352a:	4607      	mov	r7, r0
 802352c:	4615      	mov	r5, r2
 802352e:	eb00 0801 	add.w	r8, r0, r1
 8023532:	4604      	mov	r4, r0
 8023534:	782a      	ldrb	r2, [r5, #0]
 8023536:	b362      	cbz	r2, 8023592 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x6e>
 8023538:	4544      	cmp	r4, r8
 802353a:	d22e      	bcs.n	802359a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 802353c:	2a25      	cmp	r2, #37	; 0x25
 802353e:	d107      	bne.n	8023550 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 8023540:	786a      	ldrb	r2, [r5, #1]
 8023542:	2a73      	cmp	r2, #115	; 0x73
 8023544:	d009      	beq.n	802355a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x36>
 8023546:	2a7a      	cmp	r2, #122	; 0x7a
 8023548:	d012      	beq.n	8023570 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x4c>
 802354a:	2a25      	cmp	r2, #37	; 0x25
 802354c:	d100      	bne.n	8023550 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 802354e:	3501      	adds	r5, #1
 8023550:	f815 2b01 	ldrb.w	r2, [r5], #1
 8023554:	f804 2b01 	strb.w	r2, [r4], #1
 8023558:	e7ec      	b.n	8023534 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 802355a:	f853 2b04 	ldr.w	r2, [r3], #4
 802355e:	3a01      	subs	r2, #1
 8023560:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8023564:	b1e9      	cbz	r1, 80235a2 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x7e>
 8023566:	4544      	cmp	r4, r8
 8023568:	d017      	beq.n	802359a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 802356a:	f804 1b01 	strb.w	r1, [r4], #1
 802356e:	e7f7      	b.n	8023560 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x3c>
 8023570:	78aa      	ldrb	r2, [r5, #2]
 8023572:	2a75      	cmp	r2, #117	; 0x75
 8023574:	d1ec      	bne.n	8023550 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x2c>
 8023576:	461e      	mov	r6, r3
 8023578:	eba8 0104 	sub.w	r1, r8, r4
 802357c:	f856 2b04 	ldr.w	r2, [r6], #4
 8023580:	4620      	mov	r0, r4
 8023582:	f7ff ffa3 	bl	80234cc <_ZN9__gnu_cxx15__concat_size_tEPcjj>
 8023586:	2800      	cmp	r0, #0
 8023588:	dd07      	ble.n	802359a <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x76>
 802358a:	4404      	add	r4, r0
 802358c:	3503      	adds	r5, #3
 802358e:	4633      	mov	r3, r6
 8023590:	e7d0      	b.n	8023534 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>
 8023592:	7022      	strb	r2, [r4, #0]
 8023594:	1be0      	subs	r0, r4, r7
 8023596:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802359a:	4621      	mov	r1, r4
 802359c:	4638      	mov	r0, r7
 802359e:	f7ff ff6f 	bl	8023480 <_ZN9__gnu_cxx26__throw_insufficient_spaceEPKcS1_>
 80235a2:	3502      	adds	r5, #2
 80235a4:	e7c6      	b.n	8023534 <_ZN9__gnu_cxx15__snprintf_liteEPcjPKcSt9__va_list+0x10>

080235a6 <_ZNSt11char_traitsIcE7compareEPKcS2_j>:
 80235a6:	b10a      	cbz	r2, 80235ac <_ZNSt11char_traitsIcE7compareEPKcS2_j+0x6>
 80235a8:	f001 bb32 	b.w	8024c10 <memcmp>
 80235ac:	4610      	mov	r0, r2
 80235ae:	4770      	bx	lr

080235b0 <_ZNSt11char_traitsIcE4copyEPcPKcj>:
 80235b0:	b10a      	cbz	r2, 80235b6 <_ZNSt11char_traitsIcE4copyEPcPKcj+0x6>
 80235b2:	f001 bb3b 	b.w	8024c2c <memcpy>
 80235b6:	4770      	bx	lr

080235b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
 80235b8:	6001      	str	r1, [r0, #0]
 80235ba:	4770      	bx	lr

080235bc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
 80235bc:	6800      	ldr	r0, [r0, #0]
 80235be:	4770      	bx	lr

080235c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
 80235c0:	3008      	adds	r0, #8
 80235c2:	4770      	bx	lr

080235c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>:
 80235c4:	6081      	str	r1, [r0, #8]
 80235c6:	4770      	bx	lr

080235c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>:
 80235c8:	6803      	ldr	r3, [r0, #0]
 80235ca:	6041      	str	r1, [r0, #4]
 80235cc:	2200      	movs	r2, #0
 80235ce:	545a      	strb	r2, [r3, r1]
 80235d0:	4770      	bx	lr
	...

080235d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 80235d4:	b508      	push	{r3, lr}
 80235d6:	680b      	ldr	r3, [r1, #0]
 80235d8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80235dc:	d302      	bcc.n	80235e4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 80235de:	480d      	ldr	r0, [pc, #52]	; (8023614 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 80235e0:	f7ff ff2b 	bl	802343a <_ZSt20__throw_length_errorPKc>
 80235e4:	4293      	cmp	r3, r2
 80235e6:	d90b      	bls.n	8023600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 80235e8:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80235ec:	ea4f 0042 	mov.w	r0, r2, lsl #1
 80235f0:	d206      	bcs.n	8023600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 80235f2:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80235f6:	bf2a      	itet	cs
 80235f8:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 80235fc:	6008      	strcc	r0, [r1, #0]
 80235fe:	600b      	strcs	r3, [r1, #0]
 8023600:	6808      	ldr	r0, [r1, #0]
 8023602:	3001      	adds	r0, #1
 8023604:	d501      	bpl.n	802360a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 8023606:	f7ff ff0f 	bl	8023428 <_ZSt17__throw_bad_allocv>
 802360a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 802360e:	f7ff be46 	b.w	802329e <_Znwj>
 8023612:	bf00      	nop
 8023614:	0802a0ec 	.word	0x0802a0ec

08023618 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 8023618:	f850 3b08 	ldr.w	r3, [r0], #8
 802361c:	4283      	cmp	r3, r0
 802361e:	d002      	beq.n	8023626 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 8023620:	4618      	mov	r0, r3
 8023622:	f7ff be29 	b.w	8023278 <_ZdlPv>
 8023626:	4770      	bx	lr

08023628 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>:
 8023628:	b508      	push	{r3, lr}
 802362a:	4603      	mov	r3, r0
 802362c:	4608      	mov	r0, r1
 802362e:	685b      	ldr	r3, [r3, #4]
 8023630:	4298      	cmp	r0, r3
 8023632:	4611      	mov	r1, r2
 8023634:	d903      	bls.n	802363e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x16>
 8023636:	4602      	mov	r2, r0
 8023638:	4801      	ldr	r0, [pc, #4]	; (8023640 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc+0x18>)
 802363a:	f7ff ff04 	bl	8023446 <_ZSt24__throw_out_of_range_fmtPKcz>
 802363e:	bd08      	pop	{r3, pc}
 8023640:	0802a104 	.word	0x0802a104

08023644 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 8023644:	6840      	ldr	r0, [r0, #4]
 8023646:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802364a:	3901      	subs	r1, #1
 802364c:	1a09      	subs	r1, r1, r0
 802364e:	4291      	cmp	r1, r2
 8023650:	b508      	push	{r3, lr}
 8023652:	d202      	bcs.n	802365a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 8023654:	4618      	mov	r0, r3
 8023656:	f7ff fef0 	bl	802343a <_ZSt20__throw_length_errorPKc>
 802365a:	bd08      	pop	{r3, pc}

0802365c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
 802365c:	6803      	ldr	r3, [r0, #0]
 802365e:	428b      	cmp	r3, r1
 8023660:	d806      	bhi.n	8023670 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x14>
 8023662:	6840      	ldr	r0, [r0, #4]
 8023664:	4418      	add	r0, r3
 8023666:	4281      	cmp	r1, r0
 8023668:	bf94      	ite	ls
 802366a:	2000      	movls	r0, #0
 802366c:	2001      	movhi	r0, #1
 802366e:	4770      	bx	lr
 8023670:	2001      	movs	r0, #1
 8023672:	4770      	bx	lr

08023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 8023674:	2a01      	cmp	r2, #1
 8023676:	b510      	push	{r4, lr}
 8023678:	d102      	bne.n	8023680 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xc>
 802367a:	780a      	ldrb	r2, [r1, #0]
 802367c:	7002      	strb	r2, [r0, #0]
 802367e:	bd10      	pop	{r4, pc}
 8023680:	f7ff ff96 	bl	80235b0 <_ZNSt11char_traitsIcE4copyEPcPKcj>
 8023684:	e7fb      	b.n	802367e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xa>

08023686 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
 8023686:	2a01      	cmp	r2, #1
 8023688:	b430      	push	{r4, r5}
 802368a:	d103      	bne.n	8023694 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xe>
 802368c:	780b      	ldrb	r3, [r1, #0]
 802368e:	7003      	strb	r3, [r0, #0]
 8023690:	bc30      	pop	{r4, r5}
 8023692:	4770      	bx	lr
 8023694:	2a00      	cmp	r2, #0
 8023696:	d0fb      	beq.n	8023690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xa>
 8023698:	bc30      	pop	{r4, r5}
 802369a:	f001 bad5 	b.w	8024c48 <memmove>

0802369e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
 802369e:	b508      	push	{r3, lr}
 80236a0:	1a52      	subs	r2, r2, r1
 80236a2:	f7ff ffe7 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80236a6:	bd08      	pop	{r3, pc}

080236a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 80236a8:	b508      	push	{r3, lr}
 80236aa:	1a52      	subs	r2, r2, r1
 80236ac:	f7ff ffe2 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80236b0:	bd08      	pop	{r3, pc}

080236b2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
 80236b2:	4288      	cmp	r0, r1
 80236b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80236b6:	4604      	mov	r4, r0
 80236b8:	460e      	mov	r6, r1
 80236ba:	d01e      	beq.n	80236fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x48>
 80236bc:	4603      	mov	r3, r0
 80236be:	684d      	ldr	r5, [r1, #4]
 80236c0:	f853 2b08 	ldr.w	r2, [r3], #8
 80236c4:	429a      	cmp	r2, r3
 80236c6:	bf14      	ite	ne
 80236c8:	6882      	ldrne	r2, [r0, #8]
 80236ca:	220f      	moveq	r2, #15
 80236cc:	42aa      	cmp	r2, r5
 80236ce:	d20a      	bcs.n	80236e6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
 80236d0:	a901      	add	r1, sp, #4
 80236d2:	9501      	str	r5, [sp, #4]
 80236d4:	f7ff ff7e 	bl	80235d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 80236d8:	4607      	mov	r7, r0
 80236da:	4620      	mov	r0, r4
 80236dc:	f7ff ff9c 	bl	8023618 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80236e0:	9b01      	ldr	r3, [sp, #4]
 80236e2:	6027      	str	r7, [r4, #0]
 80236e4:	60a3      	str	r3, [r4, #8]
 80236e6:	b125      	cbz	r5, 80236f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x40>
 80236e8:	6831      	ldr	r1, [r6, #0]
 80236ea:	6820      	ldr	r0, [r4, #0]
 80236ec:	462a      	mov	r2, r5
 80236ee:	f7ff ffc1 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80236f2:	6823      	ldr	r3, [r4, #0]
 80236f4:	6065      	str	r5, [r4, #4]
 80236f6:	2200      	movs	r2, #0
 80236f8:	555a      	strb	r2, [r3, r5]
 80236fa:	b003      	add	sp, #12
 80236fc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080236fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 80236fe:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8023702:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8023704:	461f      	mov	r7, r3
 8023706:	6843      	ldr	r3, [r0, #4]
 8023708:	eb01 0802 	add.w	r8, r1, r2
 802370c:	1ab2      	subs	r2, r6, r2
 802370e:	441a      	add	r2, r3
 8023710:	eba3 0908 	sub.w	r9, r3, r8
 8023714:	4603      	mov	r3, r0
 8023716:	9201      	str	r2, [sp, #4]
 8023718:	f853 2b08 	ldr.w	r2, [r3], #8
 802371c:	429a      	cmp	r2, r3
 802371e:	bf18      	it	ne
 8023720:	6882      	ldrne	r2, [r0, #8]
 8023722:	460d      	mov	r5, r1
 8023724:	bf08      	it	eq
 8023726:	220f      	moveq	r2, #15
 8023728:	a901      	add	r1, sp, #4
 802372a:	4604      	mov	r4, r0
 802372c:	f7ff ff52 	bl	80235d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8023730:	4682      	mov	sl, r0
 8023732:	b11d      	cbz	r5, 802373c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 8023734:	6821      	ldr	r1, [r4, #0]
 8023736:	462a      	mov	r2, r5
 8023738:	f7ff ff9c 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802373c:	b137      	cbz	r7, 802374c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 802373e:	b12e      	cbz	r6, 802374c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8023740:	4632      	mov	r2, r6
 8023742:	4639      	mov	r1, r7
 8023744:	eb0a 0005 	add.w	r0, sl, r5
 8023748:	f7ff ff94 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802374c:	f1b9 0f00 	cmp.w	r9, #0
 8023750:	d007      	beq.n	8023762 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 8023752:	6821      	ldr	r1, [r4, #0]
 8023754:	4435      	add	r5, r6
 8023756:	464a      	mov	r2, r9
 8023758:	4441      	add	r1, r8
 802375a:	eb0a 0005 	add.w	r0, sl, r5
 802375e:	f7ff ff89 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023762:	4620      	mov	r0, r4
 8023764:	f7ff ff58 	bl	8023618 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 8023768:	9b01      	ldr	r3, [sp, #4]
 802376a:	f8c4 a000 	str.w	sl, [r4]
 802376e:	60a3      	str	r3, [r4, #8]
 8023770:	b002      	add	sp, #8
 8023772:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08023776 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
 8023776:	b538      	push	{r3, r4, r5, lr}
 8023778:	4604      	mov	r4, r0
 802377a:	4615      	mov	r5, r2
 802377c:	4608      	mov	r0, r1
 802377e:	4411      	add	r1, r2
 8023780:	6862      	ldr	r2, [r4, #4]
 8023782:	1a52      	subs	r2, r2, r1
 8023784:	d005      	beq.n	8023792 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 8023786:	b125      	cbz	r5, 8023792 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 8023788:	6823      	ldr	r3, [r4, #0]
 802378a:	4419      	add	r1, r3
 802378c:	4418      	add	r0, r3
 802378e:	f7ff ff7a 	bl	8023686 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8023792:	6862      	ldr	r2, [r4, #4]
 8023794:	6823      	ldr	r3, [r4, #0]
 8023796:	1b55      	subs	r5, r2, r5
 8023798:	2200      	movs	r2, #0
 802379a:	6065      	str	r5, [r4, #4]
 802379c:	555a      	strb	r2, [r3, r5]
 802379e:	bd38      	pop	{r3, r4, r5, pc}

080237a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
 80237a0:	f100 0208 	add.w	r2, r0, #8
 80237a4:	6002      	str	r2, [r0, #0]
 80237a6:	2200      	movs	r2, #0
 80237a8:	6042      	str	r2, [r0, #4]
 80237aa:	7202      	strb	r2, [r0, #8]
 80237ac:	4770      	bx	lr

080237ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
 80237ae:	b570      	push	{r4, r5, r6, lr}
 80237b0:	4604      	mov	r4, r0
 80237b2:	460e      	mov	r6, r1
 80237b4:	3008      	adds	r0, #8
 80237b6:	6020      	str	r0, [r4, #0]
 80237b8:	f856 3b08 	ldr.w	r3, [r6], #8
 80237bc:	429e      	cmp	r6, r3
 80237be:	460d      	mov	r5, r1
 80237c0:	d10b      	bne.n	80237da <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x2c>
 80237c2:	2210      	movs	r2, #16
 80237c4:	4631      	mov	r1, r6
 80237c6:	f7ff fef3 	bl	80235b0 <_ZNSt11char_traitsIcE4copyEPcPKcj>
 80237ca:	686b      	ldr	r3, [r5, #4]
 80237cc:	6063      	str	r3, [r4, #4]
 80237ce:	2300      	movs	r3, #0
 80237d0:	602e      	str	r6, [r5, #0]
 80237d2:	606b      	str	r3, [r5, #4]
 80237d4:	722b      	strb	r3, [r5, #8]
 80237d6:	4620      	mov	r0, r4
 80237d8:	bd70      	pop	{r4, r5, r6, pc}
 80237da:	6023      	str	r3, [r4, #0]
 80237dc:	688b      	ldr	r3, [r1, #8]
 80237de:	60a3      	str	r3, [r4, #8]
 80237e0:	e7f3      	b.n	80237ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x1c>

080237e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
 80237e2:	b510      	push	{r4, lr}
 80237e4:	4604      	mov	r4, r0
 80237e6:	f7ff ff17 	bl	8023618 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80237ea:	4620      	mov	r0, r4
 80237ec:	bd10      	pop	{r4, pc}

080237ee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
 80237ee:	b510      	push	{r4, lr}
 80237f0:	4604      	mov	r4, r0
 80237f2:	f7ff ff5e 	bl	80236b2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 80237f6:	4620      	mov	r0, r4
 80237f8:	bd10      	pop	{r4, pc}

080237fa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
 80237fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80237fc:	460d      	mov	r5, r1
 80237fe:	f851 3b08 	ldr.w	r3, [r1], #8
 8023802:	686a      	ldr	r2, [r5, #4]
 8023804:	4299      	cmp	r1, r3
 8023806:	4604      	mov	r4, r0
 8023808:	6800      	ldr	r0, [r0, #0]
 802380a:	d10d      	bne.n	8023828 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x2e>
 802380c:	b10a      	cbz	r2, 8023812 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x18>
 802380e:	f7ff ff31 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023812:	686b      	ldr	r3, [r5, #4]
 8023814:	6822      	ldr	r2, [r4, #0]
 8023816:	6063      	str	r3, [r4, #4]
 8023818:	2100      	movs	r1, #0
 802381a:	54d1      	strb	r1, [r2, r3]
 802381c:	682a      	ldr	r2, [r5, #0]
 802381e:	2300      	movs	r3, #0
 8023820:	606b      	str	r3, [r5, #4]
 8023822:	7013      	strb	r3, [r2, #0]
 8023824:	4620      	mov	r0, r4
 8023826:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023828:	e9c4 3200 	strd	r3, r2, [r4]
 802382c:	f104 0708 	add.w	r7, r4, #8
 8023830:	42b8      	cmp	r0, r7
 8023832:	68ab      	ldr	r3, [r5, #8]
 8023834:	bf18      	it	ne
 8023836:	68a6      	ldrne	r6, [r4, #8]
 8023838:	60a3      	str	r3, [r4, #8]
 802383a:	bf08      	it	eq
 802383c:	2000      	moveq	r0, #0
 802383e:	b110      	cbz	r0, 8023846 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x4c>
 8023840:	6028      	str	r0, [r5, #0]
 8023842:	60ae      	str	r6, [r5, #8]
 8023844:	e7ea      	b.n	802381c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>
 8023846:	6029      	str	r1, [r5, #0]
 8023848:	e7e8      	b.n	802381c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>

0802384a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
 802384a:	6840      	ldr	r0, [r0, #4]
 802384c:	4770      	bx	lr

0802384e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
 802384e:	6840      	ldr	r0, [r0, #4]
 8023850:	4770      	bx	lr

08023852 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
 8023852:	4603      	mov	r3, r0
 8023854:	f853 2b08 	ldr.w	r2, [r3], #8
 8023858:	429a      	cmp	r2, r3
 802385a:	bf14      	ite	ne
 802385c:	6880      	ldrne	r0, [r0, #8]
 802385e:	200f      	moveq	r0, #15
 8023860:	4770      	bx	lr

08023862 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
 8023862:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023864:	4605      	mov	r5, r0
 8023866:	6843      	ldr	r3, [r0, #4]
 8023868:	4299      	cmp	r1, r3
 802386a:	bf2c      	ite	cs
 802386c:	9101      	strcs	r1, [sp, #4]
 802386e:	9301      	strcc	r3, [sp, #4]
 8023870:	f855 1b08 	ldr.w	r1, [r5], #8
 8023874:	428d      	cmp	r5, r1
 8023876:	bf18      	it	ne
 8023878:	6882      	ldrne	r2, [r0, #8]
 802387a:	4604      	mov	r4, r0
 802387c:	9801      	ldr	r0, [sp, #4]
 802387e:	bf08      	it	eq
 8023880:	220f      	moveq	r2, #15
 8023882:	4290      	cmp	r0, r2
 8023884:	d012      	beq.n	80238ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 8023886:	d801      	bhi.n	802388c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2a>
 8023888:	280f      	cmp	r0, #15
 802388a:	d911      	bls.n	80238b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4e>
 802388c:	a901      	add	r1, sp, #4
 802388e:	4620      	mov	r0, r4
 8023890:	f7ff fea0 	bl	80235d4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8023894:	6862      	ldr	r2, [r4, #4]
 8023896:	6821      	ldr	r1, [r4, #0]
 8023898:	3201      	adds	r2, #1
 802389a:	4605      	mov	r5, r0
 802389c:	f7ff feea 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80238a0:	4620      	mov	r0, r4
 80238a2:	f7ff feb9 	bl	8023618 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80238a6:	9b01      	ldr	r3, [sp, #4]
 80238a8:	6025      	str	r5, [r4, #0]
 80238aa:	60a3      	str	r3, [r4, #8]
 80238ac:	b003      	add	sp, #12
 80238ae:	bd30      	pop	{r4, r5, pc}
 80238b0:	428d      	cmp	r5, r1
 80238b2:	d0fb      	beq.n	80238ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 80238b4:	1c5a      	adds	r2, r3, #1
 80238b6:	4628      	mov	r0, r5
 80238b8:	f7ff fedc 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80238bc:	6820      	ldr	r0, [r4, #0]
 80238be:	f7ff fcdb 	bl	8023278 <_ZdlPv>
 80238c2:	6025      	str	r5, [r4, #0]
 80238c4:	e7f2      	b.n	80238ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>

080238c6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
 80238c6:	6843      	ldr	r3, [r0, #4]
 80238c8:	6800      	ldr	r0, [r0, #0]
 80238ca:	3b01      	subs	r3, #1
 80238cc:	4418      	add	r0, r3
 80238ce:	4770      	bx	lr

080238d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
 80238d0:	4603      	mov	r3, r0
 80238d2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80238d4:	f853 2b08 	ldr.w	r2, [r3], #8
 80238d8:	6846      	ldr	r6, [r0, #4]
 80238da:	429a      	cmp	r2, r3
 80238dc:	bf18      	it	ne
 80238de:	6883      	ldrne	r3, [r0, #8]
 80238e0:	f106 0501 	add.w	r5, r6, #1
 80238e4:	bf08      	it	eq
 80238e6:	230f      	moveq	r3, #15
 80238e8:	429d      	cmp	r5, r3
 80238ea:	4604      	mov	r4, r0
 80238ec:	460f      	mov	r7, r1
 80238ee:	d906      	bls.n	80238fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x2e>
 80238f0:	2301      	movs	r3, #1
 80238f2:	9300      	str	r3, [sp, #0]
 80238f4:	2300      	movs	r3, #0
 80238f6:	461a      	mov	r2, r3
 80238f8:	4631      	mov	r1, r6
 80238fa:	f7ff ff00 	bl	80236fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 80238fe:	6823      	ldr	r3, [r4, #0]
 8023900:	559f      	strb	r7, [r3, r6]
 8023902:	6823      	ldr	r3, [r4, #0]
 8023904:	6065      	str	r5, [r4, #4]
 8023906:	2200      	movs	r2, #0
 8023908:	555a      	strb	r2, [r3, r5]
 802390a:	b003      	add	sp, #12
 802390c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0802390e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc>:
 802390e:	b510      	push	{r4, lr}
 8023910:	4604      	mov	r4, r0
 8023912:	f7ff ffdd 	bl	80238d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8023916:	4620      	mov	r0, r4
 8023918:	bd10      	pop	{r4, pc}

0802391a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>:
 802391a:	b508      	push	{r3, lr}
 802391c:	6841      	ldr	r1, [r0, #4]
 802391e:	2201      	movs	r2, #1
 8023920:	3901      	subs	r1, #1
 8023922:	f7ff ff28 	bl	8023776 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
 8023926:	bd08      	pop	{r3, pc}

08023928 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
 8023928:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802392c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802392e:	4614      	mov	r4, r2
 8023930:	4680      	mov	r8, r0
 8023932:	462a      	mov	r2, r5
 8023934:	4689      	mov	r9, r1
 8023936:	461f      	mov	r7, r3
 8023938:	4621      	mov	r1, r4
 802393a:	4b39      	ldr	r3, [pc, #228]	; (8023a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xf8>)
 802393c:	f7ff fe82 	bl	8023644 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8023940:	4642      	mov	r2, r8
 8023942:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8023946:	f852 6b08 	ldr.w	r6, [r2], #8
 802394a:	4296      	cmp	r6, r2
 802394c:	bf18      	it	ne
 802394e:	f8d8 2008 	ldrne.w	r2, [r8, #8]
 8023952:	eba5 0b04 	sub.w	fp, r5, r4
 8023956:	eb03 0a0b 	add.w	sl, r3, fp
 802395a:	bf08      	it	eq
 802395c:	220f      	moveq	r2, #15
 802395e:	4552      	cmp	r2, sl
 8023960:	d351      	bcc.n	8023a06 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xde>
 8023962:	444e      	add	r6, r9
 8023964:	4639      	mov	r1, r7
 8023966:	44a1      	add	r9, r4
 8023968:	4640      	mov	r0, r8
 802396a:	eba3 0909 	sub.w	r9, r3, r9
 802396e:	f7ff fe75 	bl	802365c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
 8023972:	b180      	cbz	r0, 8023996 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x6e>
 8023974:	f1b9 0f00 	cmp.w	r9, #0
 8023978:	d006      	beq.n	8023988 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 802397a:	42ac      	cmp	r4, r5
 802397c:	d004      	beq.n	8023988 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 802397e:	464a      	mov	r2, r9
 8023980:	1931      	adds	r1, r6, r4
 8023982:	1970      	adds	r0, r6, r5
 8023984:	f7ff fe7f 	bl	8023686 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8023988:	b315      	cbz	r5, 80239d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 802398a:	462a      	mov	r2, r5
 802398c:	4639      	mov	r1, r7
 802398e:	4630      	mov	r0, r6
 8023990:	f7ff fe70 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023994:	e01c      	b.n	80239d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8023996:	b135      	cbz	r5, 80239a6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x7e>
 8023998:	42ac      	cmp	r4, r5
 802399a:	d33c      	bcc.n	8023a16 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xee>
 802399c:	462a      	mov	r2, r5
 802399e:	4639      	mov	r1, r7
 80239a0:	4630      	mov	r0, r6
 80239a2:	f7ff fe70 	bl	8023686 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 80239a6:	f1b9 0f00 	cmp.w	r9, #0
 80239aa:	d011      	beq.n	80239d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 80239ac:	42ac      	cmp	r4, r5
 80239ae:	d00f      	beq.n	80239d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 80239b0:	464a      	mov	r2, r9
 80239b2:	1931      	adds	r1, r6, r4
 80239b4:	1970      	adds	r0, r6, r5
 80239b6:	f7ff fe66 	bl	8023686 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 80239ba:	42ac      	cmp	r4, r5
 80239bc:	d208      	bcs.n	80239d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 80239be:	4434      	add	r4, r6
 80239c0:	197b      	adds	r3, r7, r5
 80239c2:	429c      	cmp	r4, r3
 80239c4:	d30f      	bcc.n	80239e6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbe>
 80239c6:	462a      	mov	r2, r5
 80239c8:	4639      	mov	r1, r7
 80239ca:	4630      	mov	r0, r6
 80239cc:	f7ff fe5b 	bl	8023686 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 80239d0:	f8d8 3000 	ldr.w	r3, [r8]
 80239d4:	f8c8 a004 	str.w	sl, [r8, #4]
 80239d8:	2200      	movs	r2, #0
 80239da:	4640      	mov	r0, r8
 80239dc:	f803 200a 	strb.w	r2, [r3, sl]
 80239e0:	b003      	add	sp, #12
 80239e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80239e6:	42bc      	cmp	r4, r7
 80239e8:	d803      	bhi.n	80239f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xca>
 80239ea:	462a      	mov	r2, r5
 80239ec:	eb07 010b 	add.w	r1, r7, fp
 80239f0:	e7cd      	b.n	802398e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x66>
 80239f2:	1be4      	subs	r4, r4, r7
 80239f4:	4622      	mov	r2, r4
 80239f6:	4639      	mov	r1, r7
 80239f8:	4630      	mov	r0, r6
 80239fa:	f7ff fe44 	bl	8023686 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 80239fe:	1b2a      	subs	r2, r5, r4
 8023a00:	1971      	adds	r1, r6, r5
 8023a02:	1930      	adds	r0, r6, r4
 8023a04:	e7c4      	b.n	8023990 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x68>
 8023a06:	9500      	str	r5, [sp, #0]
 8023a08:	463b      	mov	r3, r7
 8023a0a:	4622      	mov	r2, r4
 8023a0c:	4649      	mov	r1, r9
 8023a0e:	4640      	mov	r0, r8
 8023a10:	f7ff fe75 	bl	80236fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8023a14:	e7dc      	b.n	80239d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 8023a16:	f1b9 0f00 	cmp.w	r9, #0
 8023a1a:	d0d0      	beq.n	80239be <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x96>
 8023a1c:	e7c8      	b.n	80239b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x88>
 8023a1e:	bf00      	nop
 8023a20:	0802a151 	.word	0x0802a151

08023a24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>:
 8023a24:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8023a26:	4604      	mov	r4, r0
 8023a28:	4615      	mov	r5, r2
 8023a2a:	4a09      	ldr	r2, [pc, #36]	; (8023a50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj+0x2c>)
 8023a2c:	9303      	str	r3, [sp, #12]
 8023a2e:	460e      	mov	r6, r1
 8023a30:	f7ff fdfa 	bl	8023628 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEjPKc>
 8023a34:	6862      	ldr	r2, [r4, #4]
 8023a36:	9b03      	ldr	r3, [sp, #12]
 8023a38:	1b92      	subs	r2, r2, r6
 8023a3a:	4601      	mov	r1, r0
 8023a3c:	42aa      	cmp	r2, r5
 8023a3e:	9808      	ldr	r0, [sp, #32]
 8023a40:	9000      	str	r0, [sp, #0]
 8023a42:	bf28      	it	cs
 8023a44:	462a      	movcs	r2, r5
 8023a46:	4620      	mov	r0, r4
 8023a48:	f7ff ff6e 	bl	8023928 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
 8023a4c:	b004      	add	sp, #16
 8023a4e:	bd70      	pop	{r4, r5, r6, pc}
 8023a50:	0802a13b 	.word	0x0802a13b

08023a54 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjRKS4_>:
 8023a54:	b507      	push	{r0, r1, r2, lr}
 8023a56:	6853      	ldr	r3, [r2, #4]
 8023a58:	9300      	str	r3, [sp, #0]
 8023a5a:	6813      	ldr	r3, [r2, #0]
 8023a5c:	2200      	movs	r2, #0
 8023a5e:	f7ff ffe1 	bl	8023a24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>
 8023a62:	b003      	add	sp, #12
 8023a64:	f85d fb04 	ldr.w	pc, [sp], #4

08023a68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEjPKc>:
 8023a68:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8023a6a:	4604      	mov	r4, r0
 8023a6c:	4610      	mov	r0, r2
 8023a6e:	9103      	str	r1, [sp, #12]
 8023a70:	9202      	str	r2, [sp, #8]
 8023a72:	f7dc fc1d 	bl	80002b0 <strlen>
 8023a76:	9b02      	ldr	r3, [sp, #8]
 8023a78:	9000      	str	r0, [sp, #0]
 8023a7a:	9903      	ldr	r1, [sp, #12]
 8023a7c:	2200      	movs	r2, #0
 8023a7e:	4620      	mov	r0, r4
 8023a80:	f7ff ffd0 	bl	8023a24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEjjPKcj>
 8023a84:	b004      	add	sp, #16
 8023a86:	bd10      	pop	{r4, pc}

08023a88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
 8023a88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023a8a:	4604      	mov	r4, r0
 8023a8c:	4623      	mov	r3, r4
 8023a8e:	6840      	ldr	r0, [r0, #4]
 8023a90:	f853 6b08 	ldr.w	r6, [r3], #8
 8023a94:	429e      	cmp	r6, r3
 8023a96:	bf18      	it	ne
 8023a98:	68a3      	ldrne	r3, [r4, #8]
 8023a9a:	eb00 0502 	add.w	r5, r0, r2
 8023a9e:	bf08      	it	eq
 8023aa0:	230f      	moveq	r3, #15
 8023aa2:	429d      	cmp	r5, r3
 8023aa4:	d80a      	bhi.n	8023abc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x34>
 8023aa6:	b112      	cbz	r2, 8023aae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>
 8023aa8:	4430      	add	r0, r6
 8023aaa:	f7ff fde3 	bl	8023674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8023aae:	6823      	ldr	r3, [r4, #0]
 8023ab0:	6065      	str	r5, [r4, #4]
 8023ab2:	2200      	movs	r2, #0
 8023ab4:	4620      	mov	r0, r4
 8023ab6:	555a      	strb	r2, [r3, r5]
 8023ab8:	b002      	add	sp, #8
 8023aba:	bd70      	pop	{r4, r5, r6, pc}
 8023abc:	9200      	str	r2, [sp, #0]
 8023abe:	460b      	mov	r3, r1
 8023ac0:	2200      	movs	r2, #0
 8023ac2:	4601      	mov	r1, r0
 8023ac4:	4620      	mov	r0, r4
 8023ac6:	f7ff fe1a 	bl	80236fe <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8023aca:	e7f0      	b.n	8023aae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>

08023acc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
 8023acc:	b508      	push	{r3, lr}
 8023ace:	e9d1 1200 	ldrd	r1, r2, [r1]
 8023ad2:	f7ff ffd9 	bl	8023a88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8023ad6:	bd08      	pop	{r3, pc}

08023ad8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_>:
 8023ad8:	b508      	push	{r3, lr}
 8023ada:	f7ff fff7 	bl	8023acc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
 8023ade:	bd08      	pop	{r3, pc}

08023ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
 8023ae0:	b570      	push	{r4, r5, r6, lr}
 8023ae2:	4b06      	ldr	r3, [pc, #24]	; (8023afc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x1c>)
 8023ae4:	4604      	mov	r4, r0
 8023ae6:	460d      	mov	r5, r1
 8023ae8:	4616      	mov	r6, r2
 8023aea:	2100      	movs	r1, #0
 8023aec:	f7ff fdaa 	bl	8023644 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8023af0:	4632      	mov	r2, r6
 8023af2:	4629      	mov	r1, r5
 8023af4:	4620      	mov	r0, r4
 8023af6:	f7ff ffc7 	bl	8023a88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8023afa:	bd70      	pop	{r4, r5, r6, pc}
 8023afc:	0802a16a 	.word	0x0802a16a

08023b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
 8023b00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8023b02:	4604      	mov	r4, r0
 8023b04:	4608      	mov	r0, r1
 8023b06:	460d      	mov	r5, r1
 8023b08:	f7dc fbd2 	bl	80002b0 <strlen>
 8023b0c:	4b06      	ldr	r3, [pc, #24]	; (8023b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x28>)
 8023b0e:	9001      	str	r0, [sp, #4]
 8023b10:	4602      	mov	r2, r0
 8023b12:	2100      	movs	r1, #0
 8023b14:	4620      	mov	r0, r4
 8023b16:	f7ff fd95 	bl	8023644 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8023b1a:	9a01      	ldr	r2, [sp, #4]
 8023b1c:	4629      	mov	r1, r5
 8023b1e:	4620      	mov	r0, r4
 8023b20:	f7ff ffb2 	bl	8023a88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8023b24:	b003      	add	sp, #12
 8023b26:	bd30      	pop	{r4, r5, pc}
 8023b28:	0802a16a 	.word	0x0802a16a

08023b2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>:
 8023b2c:	b508      	push	{r3, lr}
 8023b2e:	f7ff ffe7 	bl	8023b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 8023b32:	bd08      	pop	{r3, pc}

08023b34 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
 8023b34:	6800      	ldr	r0, [r0, #0]
 8023b36:	4770      	bx	lr

08023b38 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
 8023b38:	b538      	push	{r3, r4, r5, lr}
 8023b3a:	6845      	ldr	r5, [r0, #4]
 8023b3c:	684c      	ldr	r4, [r1, #4]
 8023b3e:	6800      	ldr	r0, [r0, #0]
 8023b40:	6809      	ldr	r1, [r1, #0]
 8023b42:	42a5      	cmp	r5, r4
 8023b44:	462a      	mov	r2, r5
 8023b46:	bf28      	it	cs
 8023b48:	4622      	movcs	r2, r4
 8023b4a:	f7ff fd2c 	bl	80235a6 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8023b4e:	b900      	cbnz	r0, 8023b52 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x1a>
 8023b50:	1b28      	subs	r0, r5, r4
 8023b52:	bd38      	pop	{r3, r4, r5, pc}

08023b54 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
 8023b54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8023b56:	6846      	ldr	r6, [r0, #4]
 8023b58:	9101      	str	r1, [sp, #4]
 8023b5a:	4605      	mov	r5, r0
 8023b5c:	4608      	mov	r0, r1
 8023b5e:	f7dc fba7 	bl	80002b0 <strlen>
 8023b62:	4286      	cmp	r6, r0
 8023b64:	4604      	mov	r4, r0
 8023b66:	4632      	mov	r2, r6
 8023b68:	9901      	ldr	r1, [sp, #4]
 8023b6a:	bf28      	it	cs
 8023b6c:	4602      	movcs	r2, r0
 8023b6e:	6828      	ldr	r0, [r5, #0]
 8023b70:	f7ff fd19 	bl	80235a6 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8023b74:	b900      	cbnz	r0, 8023b78 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x24>
 8023b76:	1b30      	subs	r0, r6, r4
 8023b78:	b002      	add	sp, #8
 8023b7a:	bd70      	pop	{r4, r5, r6, pc}

08023b7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
 8023b7c:	6001      	str	r1, [r0, #0]
 8023b7e:	4770      	bx	lr

08023b80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
 8023b80:	b538      	push	{r3, r4, r5, lr}
 8023b82:	f100 0308 	add.w	r3, r0, #8
 8023b86:	6003      	str	r3, [r0, #0]
 8023b88:	e9d1 5200 	ldrd	r5, r2, [r1]
 8023b8c:	4604      	mov	r4, r0
 8023b8e:	f04f 0300 	mov.w	r3, #0
 8023b92:	442a      	add	r2, r5
 8023b94:	4629      	mov	r1, r5
 8023b96:	f7ef f899 	bl	8012ccc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
 8023b9a:	4620      	mov	r0, r4
 8023b9c:	bd38      	pop	{r3, r4, r5, pc}
	...

08023ba0 <_ZSt15get_new_handlerv>:
 8023ba0:	4b02      	ldr	r3, [pc, #8]	; (8023bac <_ZSt15get_new_handlerv+0xc>)
 8023ba2:	6818      	ldr	r0, [r3, #0]
 8023ba4:	f3bf 8f5b 	dmb	ish
 8023ba8:	4770      	bx	lr
 8023baa:	bf00      	nop
 8023bac:	2000083c 	.word	0x2000083c

08023bb0 <pow>:
 8023bb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023bb4:	ec59 8b10 	vmov	r8, r9, d0
 8023bb8:	ec57 6b11 	vmov	r6, r7, d1
 8023bbc:	f000 f8a8 	bl	8023d10 <__ieee754_pow>
 8023bc0:	4b4e      	ldr	r3, [pc, #312]	; (8023cfc <pow+0x14c>)
 8023bc2:	f993 3000 	ldrsb.w	r3, [r3]
 8023bc6:	3301      	adds	r3, #1
 8023bc8:	ec55 4b10 	vmov	r4, r5, d0
 8023bcc:	d015      	beq.n	8023bfa <pow+0x4a>
 8023bce:	4632      	mov	r2, r6
 8023bd0:	463b      	mov	r3, r7
 8023bd2:	4630      	mov	r0, r6
 8023bd4:	4639      	mov	r1, r7
 8023bd6:	f7dc ffc9 	bl	8000b6c <__aeabi_dcmpun>
 8023bda:	b970      	cbnz	r0, 8023bfa <pow+0x4a>
 8023bdc:	4642      	mov	r2, r8
 8023bde:	464b      	mov	r3, r9
 8023be0:	4640      	mov	r0, r8
 8023be2:	4649      	mov	r1, r9
 8023be4:	f7dc ffc2 	bl	8000b6c <__aeabi_dcmpun>
 8023be8:	2200      	movs	r2, #0
 8023bea:	2300      	movs	r3, #0
 8023bec:	b148      	cbz	r0, 8023c02 <pow+0x52>
 8023bee:	4630      	mov	r0, r6
 8023bf0:	4639      	mov	r1, r7
 8023bf2:	f7dc ff89 	bl	8000b08 <__aeabi_dcmpeq>
 8023bf6:	2800      	cmp	r0, #0
 8023bf8:	d17d      	bne.n	8023cf6 <pow+0x146>
 8023bfa:	ec45 4b10 	vmov	d0, r4, r5
 8023bfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023c02:	4640      	mov	r0, r8
 8023c04:	4649      	mov	r1, r9
 8023c06:	f7dc ff7f 	bl	8000b08 <__aeabi_dcmpeq>
 8023c0a:	b1e0      	cbz	r0, 8023c46 <pow+0x96>
 8023c0c:	2200      	movs	r2, #0
 8023c0e:	2300      	movs	r3, #0
 8023c10:	4630      	mov	r0, r6
 8023c12:	4639      	mov	r1, r7
 8023c14:	f7dc ff78 	bl	8000b08 <__aeabi_dcmpeq>
 8023c18:	2800      	cmp	r0, #0
 8023c1a:	d16c      	bne.n	8023cf6 <pow+0x146>
 8023c1c:	ec47 6b10 	vmov	d0, r6, r7
 8023c20:	f000 fe55 	bl	80248ce <finite>
 8023c24:	2800      	cmp	r0, #0
 8023c26:	d0e8      	beq.n	8023bfa <pow+0x4a>
 8023c28:	2200      	movs	r2, #0
 8023c2a:	2300      	movs	r3, #0
 8023c2c:	4630      	mov	r0, r6
 8023c2e:	4639      	mov	r1, r7
 8023c30:	f7dc ff74 	bl	8000b1c <__aeabi_dcmplt>
 8023c34:	2800      	cmp	r0, #0
 8023c36:	d0e0      	beq.n	8023bfa <pow+0x4a>
 8023c38:	f000 ff7e 	bl	8024b38 <__errno>
 8023c3c:	2321      	movs	r3, #33	; 0x21
 8023c3e:	6003      	str	r3, [r0, #0]
 8023c40:	2400      	movs	r4, #0
 8023c42:	4d2f      	ldr	r5, [pc, #188]	; (8023d00 <pow+0x150>)
 8023c44:	e7d9      	b.n	8023bfa <pow+0x4a>
 8023c46:	ec45 4b10 	vmov	d0, r4, r5
 8023c4a:	f000 fe40 	bl	80248ce <finite>
 8023c4e:	bbb8      	cbnz	r0, 8023cc0 <pow+0x110>
 8023c50:	ec49 8b10 	vmov	d0, r8, r9
 8023c54:	f000 fe3b 	bl	80248ce <finite>
 8023c58:	b390      	cbz	r0, 8023cc0 <pow+0x110>
 8023c5a:	ec47 6b10 	vmov	d0, r6, r7
 8023c5e:	f000 fe36 	bl	80248ce <finite>
 8023c62:	b368      	cbz	r0, 8023cc0 <pow+0x110>
 8023c64:	4622      	mov	r2, r4
 8023c66:	462b      	mov	r3, r5
 8023c68:	4620      	mov	r0, r4
 8023c6a:	4629      	mov	r1, r5
 8023c6c:	f7dc ff7e 	bl	8000b6c <__aeabi_dcmpun>
 8023c70:	b160      	cbz	r0, 8023c8c <pow+0xdc>
 8023c72:	f000 ff61 	bl	8024b38 <__errno>
 8023c76:	2321      	movs	r3, #33	; 0x21
 8023c78:	6003      	str	r3, [r0, #0]
 8023c7a:	2200      	movs	r2, #0
 8023c7c:	2300      	movs	r3, #0
 8023c7e:	4610      	mov	r0, r2
 8023c80:	4619      	mov	r1, r3
 8023c82:	f7dc fe03 	bl	800088c <__aeabi_ddiv>
 8023c86:	4604      	mov	r4, r0
 8023c88:	460d      	mov	r5, r1
 8023c8a:	e7b6      	b.n	8023bfa <pow+0x4a>
 8023c8c:	f000 ff54 	bl	8024b38 <__errno>
 8023c90:	2322      	movs	r3, #34	; 0x22
 8023c92:	6003      	str	r3, [r0, #0]
 8023c94:	2200      	movs	r2, #0
 8023c96:	2300      	movs	r3, #0
 8023c98:	4640      	mov	r0, r8
 8023c9a:	4649      	mov	r1, r9
 8023c9c:	f7dc ff3e 	bl	8000b1c <__aeabi_dcmplt>
 8023ca0:	2400      	movs	r4, #0
 8023ca2:	b158      	cbz	r0, 8023cbc <pow+0x10c>
 8023ca4:	ec47 6b10 	vmov	d0, r6, r7
 8023ca8:	f000 fe26 	bl	80248f8 <rint>
 8023cac:	4632      	mov	r2, r6
 8023cae:	ec51 0b10 	vmov	r0, r1, d0
 8023cb2:	463b      	mov	r3, r7
 8023cb4:	f7dc ff28 	bl	8000b08 <__aeabi_dcmpeq>
 8023cb8:	2800      	cmp	r0, #0
 8023cba:	d0c2      	beq.n	8023c42 <pow+0x92>
 8023cbc:	4d11      	ldr	r5, [pc, #68]	; (8023d04 <pow+0x154>)
 8023cbe:	e79c      	b.n	8023bfa <pow+0x4a>
 8023cc0:	2200      	movs	r2, #0
 8023cc2:	2300      	movs	r3, #0
 8023cc4:	4620      	mov	r0, r4
 8023cc6:	4629      	mov	r1, r5
 8023cc8:	f7dc ff1e 	bl	8000b08 <__aeabi_dcmpeq>
 8023ccc:	2800      	cmp	r0, #0
 8023cce:	d094      	beq.n	8023bfa <pow+0x4a>
 8023cd0:	ec49 8b10 	vmov	d0, r8, r9
 8023cd4:	f000 fdfb 	bl	80248ce <finite>
 8023cd8:	2800      	cmp	r0, #0
 8023cda:	d08e      	beq.n	8023bfa <pow+0x4a>
 8023cdc:	ec47 6b10 	vmov	d0, r6, r7
 8023ce0:	f000 fdf5 	bl	80248ce <finite>
 8023ce4:	2800      	cmp	r0, #0
 8023ce6:	d088      	beq.n	8023bfa <pow+0x4a>
 8023ce8:	f000 ff26 	bl	8024b38 <__errno>
 8023cec:	2322      	movs	r3, #34	; 0x22
 8023cee:	6003      	str	r3, [r0, #0]
 8023cf0:	2400      	movs	r4, #0
 8023cf2:	2500      	movs	r5, #0
 8023cf4:	e781      	b.n	8023bfa <pow+0x4a>
 8023cf6:	4d04      	ldr	r5, [pc, #16]	; (8023d08 <pow+0x158>)
 8023cf8:	2400      	movs	r4, #0
 8023cfa:	e77e      	b.n	8023bfa <pow+0x4a>
 8023cfc:	2000000d 	.word	0x2000000d
 8023d00:	fff00000 	.word	0xfff00000
 8023d04:	7ff00000 	.word	0x7ff00000
 8023d08:	3ff00000 	.word	0x3ff00000
 8023d0c:	00000000 	.word	0x00000000

08023d10 <__ieee754_pow>:
 8023d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d14:	ed2d 8b06 	vpush	{d8-d10}
 8023d18:	b08d      	sub	sp, #52	; 0x34
 8023d1a:	ed8d 1b02 	vstr	d1, [sp, #8]
 8023d1e:	e9dd 0702 	ldrd	r0, r7, [sp, #8]
 8023d22:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 8023d26:	ea56 0100 	orrs.w	r1, r6, r0
 8023d2a:	ec53 2b10 	vmov	r2, r3, d0
 8023d2e:	f000 84d1 	beq.w	80246d4 <__ieee754_pow+0x9c4>
 8023d32:	497f      	ldr	r1, [pc, #508]	; (8023f30 <__ieee754_pow+0x220>)
 8023d34:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 8023d38:	428c      	cmp	r4, r1
 8023d3a:	ee10 8a10 	vmov	r8, s0
 8023d3e:	4699      	mov	r9, r3
 8023d40:	dc09      	bgt.n	8023d56 <__ieee754_pow+0x46>
 8023d42:	d103      	bne.n	8023d4c <__ieee754_pow+0x3c>
 8023d44:	b97a      	cbnz	r2, 8023d66 <__ieee754_pow+0x56>
 8023d46:	42a6      	cmp	r6, r4
 8023d48:	dd02      	ble.n	8023d50 <__ieee754_pow+0x40>
 8023d4a:	e00c      	b.n	8023d66 <__ieee754_pow+0x56>
 8023d4c:	428e      	cmp	r6, r1
 8023d4e:	dc02      	bgt.n	8023d56 <__ieee754_pow+0x46>
 8023d50:	428e      	cmp	r6, r1
 8023d52:	d110      	bne.n	8023d76 <__ieee754_pow+0x66>
 8023d54:	b178      	cbz	r0, 8023d76 <__ieee754_pow+0x66>
 8023d56:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8023d5a:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8023d5e:	ea54 0308 	orrs.w	r3, r4, r8
 8023d62:	f000 84b7 	beq.w	80246d4 <__ieee754_pow+0x9c4>
 8023d66:	4873      	ldr	r0, [pc, #460]	; (8023f34 <__ieee754_pow+0x224>)
 8023d68:	b00d      	add	sp, #52	; 0x34
 8023d6a:	ecbd 8b06 	vpop	{d8-d10}
 8023d6e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d72:	f000 bdb9 	b.w	80248e8 <nan>
 8023d76:	f1b9 0f00 	cmp.w	r9, #0
 8023d7a:	da36      	bge.n	8023dea <__ieee754_pow+0xda>
 8023d7c:	496e      	ldr	r1, [pc, #440]	; (8023f38 <__ieee754_pow+0x228>)
 8023d7e:	428e      	cmp	r6, r1
 8023d80:	dc51      	bgt.n	8023e26 <__ieee754_pow+0x116>
 8023d82:	f1a1 7154 	sub.w	r1, r1, #55574528	; 0x3500000
 8023d86:	428e      	cmp	r6, r1
 8023d88:	f340 84af 	ble.w	80246ea <__ieee754_pow+0x9da>
 8023d8c:	1531      	asrs	r1, r6, #20
 8023d8e:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 8023d92:	2914      	cmp	r1, #20
 8023d94:	dd0f      	ble.n	8023db6 <__ieee754_pow+0xa6>
 8023d96:	f1c1 0134 	rsb	r1, r1, #52	; 0x34
 8023d9a:	fa20 fc01 	lsr.w	ip, r0, r1
 8023d9e:	fa0c f101 	lsl.w	r1, ip, r1
 8023da2:	4281      	cmp	r1, r0
 8023da4:	f040 84a1 	bne.w	80246ea <__ieee754_pow+0x9da>
 8023da8:	f00c 0c01 	and.w	ip, ip, #1
 8023dac:	f1cc 0102 	rsb	r1, ip, #2
 8023db0:	9100      	str	r1, [sp, #0]
 8023db2:	b180      	cbz	r0, 8023dd6 <__ieee754_pow+0xc6>
 8023db4:	e059      	b.n	8023e6a <__ieee754_pow+0x15a>
 8023db6:	2800      	cmp	r0, #0
 8023db8:	d155      	bne.n	8023e66 <__ieee754_pow+0x156>
 8023dba:	f1c1 0114 	rsb	r1, r1, #20
 8023dbe:	fa46 fc01 	asr.w	ip, r6, r1
 8023dc2:	fa0c f101 	lsl.w	r1, ip, r1
 8023dc6:	42b1      	cmp	r1, r6
 8023dc8:	f040 848c 	bne.w	80246e4 <__ieee754_pow+0x9d4>
 8023dcc:	f00c 0c01 	and.w	ip, ip, #1
 8023dd0:	f1cc 0102 	rsb	r1, ip, #2
 8023dd4:	9100      	str	r1, [sp, #0]
 8023dd6:	4959      	ldr	r1, [pc, #356]	; (8023f3c <__ieee754_pow+0x22c>)
 8023dd8:	428e      	cmp	r6, r1
 8023dda:	d12d      	bne.n	8023e38 <__ieee754_pow+0x128>
 8023ddc:	2f00      	cmp	r7, #0
 8023dde:	da79      	bge.n	8023ed4 <__ieee754_pow+0x1c4>
 8023de0:	4956      	ldr	r1, [pc, #344]	; (8023f3c <__ieee754_pow+0x22c>)
 8023de2:	2000      	movs	r0, #0
 8023de4:	f7dc fd52 	bl	800088c <__aeabi_ddiv>
 8023de8:	e016      	b.n	8023e18 <__ieee754_pow+0x108>
 8023dea:	2100      	movs	r1, #0
 8023dec:	9100      	str	r1, [sp, #0]
 8023dee:	2800      	cmp	r0, #0
 8023df0:	d13b      	bne.n	8023e6a <__ieee754_pow+0x15a>
 8023df2:	494f      	ldr	r1, [pc, #316]	; (8023f30 <__ieee754_pow+0x220>)
 8023df4:	428e      	cmp	r6, r1
 8023df6:	d1ee      	bne.n	8023dd6 <__ieee754_pow+0xc6>
 8023df8:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8023dfc:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8023e00:	ea53 0308 	orrs.w	r3, r3, r8
 8023e04:	f000 8466 	beq.w	80246d4 <__ieee754_pow+0x9c4>
 8023e08:	4b4d      	ldr	r3, [pc, #308]	; (8023f40 <__ieee754_pow+0x230>)
 8023e0a:	429c      	cmp	r4, r3
 8023e0c:	dd0d      	ble.n	8023e2a <__ieee754_pow+0x11a>
 8023e0e:	2f00      	cmp	r7, #0
 8023e10:	f280 8464 	bge.w	80246dc <__ieee754_pow+0x9cc>
 8023e14:	2000      	movs	r0, #0
 8023e16:	2100      	movs	r1, #0
 8023e18:	ec41 0b10 	vmov	d0, r0, r1
 8023e1c:	b00d      	add	sp, #52	; 0x34
 8023e1e:	ecbd 8b06 	vpop	{d8-d10}
 8023e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023e26:	2102      	movs	r1, #2
 8023e28:	e7e0      	b.n	8023dec <__ieee754_pow+0xdc>
 8023e2a:	2f00      	cmp	r7, #0
 8023e2c:	daf2      	bge.n	8023e14 <__ieee754_pow+0x104>
 8023e2e:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 8023e32:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8023e36:	e7ef      	b.n	8023e18 <__ieee754_pow+0x108>
 8023e38:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 8023e3c:	d104      	bne.n	8023e48 <__ieee754_pow+0x138>
 8023e3e:	4610      	mov	r0, r2
 8023e40:	4619      	mov	r1, r3
 8023e42:	f7dc fbf9 	bl	8000638 <__aeabi_dmul>
 8023e46:	e7e7      	b.n	8023e18 <__ieee754_pow+0x108>
 8023e48:	493e      	ldr	r1, [pc, #248]	; (8023f44 <__ieee754_pow+0x234>)
 8023e4a:	428f      	cmp	r7, r1
 8023e4c:	d10d      	bne.n	8023e6a <__ieee754_pow+0x15a>
 8023e4e:	f1b9 0f00 	cmp.w	r9, #0
 8023e52:	db0a      	blt.n	8023e6a <__ieee754_pow+0x15a>
 8023e54:	ec43 2b10 	vmov	d0, r2, r3
 8023e58:	b00d      	add	sp, #52	; 0x34
 8023e5a:	ecbd 8b06 	vpop	{d8-d10}
 8023e5e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023e62:	f000 bc77 	b.w	8024754 <__ieee754_sqrt>
 8023e66:	2100      	movs	r1, #0
 8023e68:	9100      	str	r1, [sp, #0]
 8023e6a:	ec43 2b10 	vmov	d0, r2, r3
 8023e6e:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8023e72:	f000 fd23 	bl	80248bc <fabs>
 8023e76:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8023e7a:	ec51 0b10 	vmov	r0, r1, d0
 8023e7e:	f1b8 0f00 	cmp.w	r8, #0
 8023e82:	d12a      	bne.n	8023eda <__ieee754_pow+0x1ca>
 8023e84:	b12c      	cbz	r4, 8023e92 <__ieee754_pow+0x182>
 8023e86:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 8023f3c <__ieee754_pow+0x22c>
 8023e8a:	f029 4e40 	bic.w	lr, r9, #3221225472	; 0xc0000000
 8023e8e:	45e6      	cmp	lr, ip
 8023e90:	d123      	bne.n	8023eda <__ieee754_pow+0x1ca>
 8023e92:	2f00      	cmp	r7, #0
 8023e94:	da05      	bge.n	8023ea2 <__ieee754_pow+0x192>
 8023e96:	4602      	mov	r2, r0
 8023e98:	460b      	mov	r3, r1
 8023e9a:	2000      	movs	r0, #0
 8023e9c:	4927      	ldr	r1, [pc, #156]	; (8023f3c <__ieee754_pow+0x22c>)
 8023e9e:	f7dc fcf5 	bl	800088c <__aeabi_ddiv>
 8023ea2:	f1b9 0f00 	cmp.w	r9, #0
 8023ea6:	dab7      	bge.n	8023e18 <__ieee754_pow+0x108>
 8023ea8:	9b00      	ldr	r3, [sp, #0]
 8023eaa:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8023eae:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8023eb2:	4323      	orrs	r3, r4
 8023eb4:	d108      	bne.n	8023ec8 <__ieee754_pow+0x1b8>
 8023eb6:	4602      	mov	r2, r0
 8023eb8:	460b      	mov	r3, r1
 8023eba:	4610      	mov	r0, r2
 8023ebc:	4619      	mov	r1, r3
 8023ebe:	f7dc fa03 	bl	80002c8 <__aeabi_dsub>
 8023ec2:	4602      	mov	r2, r0
 8023ec4:	460b      	mov	r3, r1
 8023ec6:	e78d      	b.n	8023de4 <__ieee754_pow+0xd4>
 8023ec8:	9b00      	ldr	r3, [sp, #0]
 8023eca:	2b01      	cmp	r3, #1
 8023ecc:	d1a4      	bne.n	8023e18 <__ieee754_pow+0x108>
 8023ece:	4602      	mov	r2, r0
 8023ed0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8023ed4:	4610      	mov	r0, r2
 8023ed6:	4619      	mov	r1, r3
 8023ed8:	e79e      	b.n	8023e18 <__ieee754_pow+0x108>
 8023eda:	ea4f 7cd9 	mov.w	ip, r9, lsr #31
 8023ede:	f10c 35ff 	add.w	r5, ip, #4294967295
 8023ee2:	950a      	str	r5, [sp, #40]	; 0x28
 8023ee4:	9d00      	ldr	r5, [sp, #0]
 8023ee6:	46ac      	mov	ip, r5
 8023ee8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023eea:	ea5c 0505 	orrs.w	r5, ip, r5
 8023eee:	d0e4      	beq.n	8023eba <__ieee754_pow+0x1aa>
 8023ef0:	4b15      	ldr	r3, [pc, #84]	; (8023f48 <__ieee754_pow+0x238>)
 8023ef2:	429e      	cmp	r6, r3
 8023ef4:	f340 80fc 	ble.w	80240f0 <__ieee754_pow+0x3e0>
 8023ef8:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8023efc:	429e      	cmp	r6, r3
 8023efe:	4b10      	ldr	r3, [pc, #64]	; (8023f40 <__ieee754_pow+0x230>)
 8023f00:	dd07      	ble.n	8023f12 <__ieee754_pow+0x202>
 8023f02:	429c      	cmp	r4, r3
 8023f04:	dc0a      	bgt.n	8023f1c <__ieee754_pow+0x20c>
 8023f06:	2f00      	cmp	r7, #0
 8023f08:	da84      	bge.n	8023e14 <__ieee754_pow+0x104>
 8023f0a:	a307      	add	r3, pc, #28	; (adr r3, 8023f28 <__ieee754_pow+0x218>)
 8023f0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023f10:	e795      	b.n	8023e3e <__ieee754_pow+0x12e>
 8023f12:	429c      	cmp	r4, r3
 8023f14:	dbf7      	blt.n	8023f06 <__ieee754_pow+0x1f6>
 8023f16:	4b09      	ldr	r3, [pc, #36]	; (8023f3c <__ieee754_pow+0x22c>)
 8023f18:	429c      	cmp	r4, r3
 8023f1a:	dd17      	ble.n	8023f4c <__ieee754_pow+0x23c>
 8023f1c:	2f00      	cmp	r7, #0
 8023f1e:	dcf4      	bgt.n	8023f0a <__ieee754_pow+0x1fa>
 8023f20:	e778      	b.n	8023e14 <__ieee754_pow+0x104>
 8023f22:	bf00      	nop
 8023f24:	f3af 8000 	nop.w
 8023f28:	8800759c 	.word	0x8800759c
 8023f2c:	7e37e43c 	.word	0x7e37e43c
 8023f30:	7ff00000 	.word	0x7ff00000
 8023f34:	0802a628 	.word	0x0802a628
 8023f38:	433fffff 	.word	0x433fffff
 8023f3c:	3ff00000 	.word	0x3ff00000
 8023f40:	3fefffff 	.word	0x3fefffff
 8023f44:	3fe00000 	.word	0x3fe00000
 8023f48:	41e00000 	.word	0x41e00000
 8023f4c:	4b64      	ldr	r3, [pc, #400]	; (80240e0 <__ieee754_pow+0x3d0>)
 8023f4e:	2200      	movs	r2, #0
 8023f50:	f7dc f9ba 	bl	80002c8 <__aeabi_dsub>
 8023f54:	a356      	add	r3, pc, #344	; (adr r3, 80240b0 <__ieee754_pow+0x3a0>)
 8023f56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023f5a:	4604      	mov	r4, r0
 8023f5c:	460d      	mov	r5, r1
 8023f5e:	f7dc fb6b 	bl	8000638 <__aeabi_dmul>
 8023f62:	a355      	add	r3, pc, #340	; (adr r3, 80240b8 <__ieee754_pow+0x3a8>)
 8023f64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023f68:	4606      	mov	r6, r0
 8023f6a:	460f      	mov	r7, r1
 8023f6c:	4620      	mov	r0, r4
 8023f6e:	4629      	mov	r1, r5
 8023f70:	f7dc fb62 	bl	8000638 <__aeabi_dmul>
 8023f74:	4b5b      	ldr	r3, [pc, #364]	; (80240e4 <__ieee754_pow+0x3d4>)
 8023f76:	4682      	mov	sl, r0
 8023f78:	468b      	mov	fp, r1
 8023f7a:	2200      	movs	r2, #0
 8023f7c:	4620      	mov	r0, r4
 8023f7e:	4629      	mov	r1, r5
 8023f80:	f7dc fb5a 	bl	8000638 <__aeabi_dmul>
 8023f84:	4602      	mov	r2, r0
 8023f86:	460b      	mov	r3, r1
 8023f88:	a14d      	add	r1, pc, #308	; (adr r1, 80240c0 <__ieee754_pow+0x3b0>)
 8023f8a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023f8e:	f7dc f99b 	bl	80002c8 <__aeabi_dsub>
 8023f92:	4622      	mov	r2, r4
 8023f94:	462b      	mov	r3, r5
 8023f96:	f7dc fb4f 	bl	8000638 <__aeabi_dmul>
 8023f9a:	4602      	mov	r2, r0
 8023f9c:	460b      	mov	r3, r1
 8023f9e:	2000      	movs	r0, #0
 8023fa0:	4951      	ldr	r1, [pc, #324]	; (80240e8 <__ieee754_pow+0x3d8>)
 8023fa2:	f7dc f991 	bl	80002c8 <__aeabi_dsub>
 8023fa6:	4622      	mov	r2, r4
 8023fa8:	4680      	mov	r8, r0
 8023faa:	4689      	mov	r9, r1
 8023fac:	462b      	mov	r3, r5
 8023fae:	4620      	mov	r0, r4
 8023fb0:	4629      	mov	r1, r5
 8023fb2:	f7dc fb41 	bl	8000638 <__aeabi_dmul>
 8023fb6:	4602      	mov	r2, r0
 8023fb8:	460b      	mov	r3, r1
 8023fba:	4640      	mov	r0, r8
 8023fbc:	4649      	mov	r1, r9
 8023fbe:	f7dc fb3b 	bl	8000638 <__aeabi_dmul>
 8023fc2:	a341      	add	r3, pc, #260	; (adr r3, 80240c8 <__ieee754_pow+0x3b8>)
 8023fc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023fc8:	f7dc fb36 	bl	8000638 <__aeabi_dmul>
 8023fcc:	4602      	mov	r2, r0
 8023fce:	460b      	mov	r3, r1
 8023fd0:	4650      	mov	r0, sl
 8023fd2:	4659      	mov	r1, fp
 8023fd4:	f7dc f978 	bl	80002c8 <__aeabi_dsub>
 8023fd8:	4602      	mov	r2, r0
 8023fda:	460b      	mov	r3, r1
 8023fdc:	4680      	mov	r8, r0
 8023fde:	4689      	mov	r9, r1
 8023fe0:	4630      	mov	r0, r6
 8023fe2:	4639      	mov	r1, r7
 8023fe4:	f7dc f972 	bl	80002cc <__adddf3>
 8023fe8:	2400      	movs	r4, #0
 8023fea:	4632      	mov	r2, r6
 8023fec:	463b      	mov	r3, r7
 8023fee:	4620      	mov	r0, r4
 8023ff0:	460d      	mov	r5, r1
 8023ff2:	f7dc f969 	bl	80002c8 <__aeabi_dsub>
 8023ff6:	4602      	mov	r2, r0
 8023ff8:	460b      	mov	r3, r1
 8023ffa:	4640      	mov	r0, r8
 8023ffc:	4649      	mov	r1, r9
 8023ffe:	f7dc f963 	bl	80002c8 <__aeabi_dsub>
 8024002:	9b00      	ldr	r3, [sp, #0]
 8024004:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024006:	3b01      	subs	r3, #1
 8024008:	4313      	orrs	r3, r2
 802400a:	4682      	mov	sl, r0
 802400c:	468b      	mov	fp, r1
 802400e:	f040 81f1 	bne.w	80243f4 <__ieee754_pow+0x6e4>
 8024012:	ed9f 7b2f 	vldr	d7, [pc, #188]	; 80240d0 <__ieee754_pow+0x3c0>
 8024016:	eeb0 8a47 	vmov.f32	s16, s14
 802401a:	eef0 8a67 	vmov.f32	s17, s15
 802401e:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8024022:	2600      	movs	r6, #0
 8024024:	4632      	mov	r2, r6
 8024026:	463b      	mov	r3, r7
 8024028:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802402c:	f7dc f94c 	bl	80002c8 <__aeabi_dsub>
 8024030:	4622      	mov	r2, r4
 8024032:	462b      	mov	r3, r5
 8024034:	f7dc fb00 	bl	8000638 <__aeabi_dmul>
 8024038:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 802403c:	4680      	mov	r8, r0
 802403e:	4689      	mov	r9, r1
 8024040:	4650      	mov	r0, sl
 8024042:	4659      	mov	r1, fp
 8024044:	f7dc faf8 	bl	8000638 <__aeabi_dmul>
 8024048:	4602      	mov	r2, r0
 802404a:	460b      	mov	r3, r1
 802404c:	4640      	mov	r0, r8
 802404e:	4649      	mov	r1, r9
 8024050:	f7dc f93c 	bl	80002cc <__adddf3>
 8024054:	4632      	mov	r2, r6
 8024056:	463b      	mov	r3, r7
 8024058:	4680      	mov	r8, r0
 802405a:	4689      	mov	r9, r1
 802405c:	4620      	mov	r0, r4
 802405e:	4629      	mov	r1, r5
 8024060:	f7dc faea 	bl	8000638 <__aeabi_dmul>
 8024064:	460b      	mov	r3, r1
 8024066:	4604      	mov	r4, r0
 8024068:	460d      	mov	r5, r1
 802406a:	4602      	mov	r2, r0
 802406c:	4649      	mov	r1, r9
 802406e:	4640      	mov	r0, r8
 8024070:	f7dc f92c 	bl	80002cc <__adddf3>
 8024074:	4b1d      	ldr	r3, [pc, #116]	; (80240ec <__ieee754_pow+0x3dc>)
 8024076:	4299      	cmp	r1, r3
 8024078:	ec45 4b19 	vmov	d9, r4, r5
 802407c:	4606      	mov	r6, r0
 802407e:	460f      	mov	r7, r1
 8024080:	468b      	mov	fp, r1
 8024082:	f340 82fe 	ble.w	8024682 <__ieee754_pow+0x972>
 8024086:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 802408a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 802408e:	4303      	orrs	r3, r0
 8024090:	f000 81f0 	beq.w	8024474 <__ieee754_pow+0x764>
 8024094:	a310      	add	r3, pc, #64	; (adr r3, 80240d8 <__ieee754_pow+0x3c8>)
 8024096:	e9d3 2300 	ldrd	r2, r3, [r3]
 802409a:	ec51 0b18 	vmov	r0, r1, d8
 802409e:	f7dc facb 	bl	8000638 <__aeabi_dmul>
 80240a2:	a30d      	add	r3, pc, #52	; (adr r3, 80240d8 <__ieee754_pow+0x3c8>)
 80240a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80240a8:	e6cb      	b.n	8023e42 <__ieee754_pow+0x132>
 80240aa:	bf00      	nop
 80240ac:	f3af 8000 	nop.w
 80240b0:	60000000 	.word	0x60000000
 80240b4:	3ff71547 	.word	0x3ff71547
 80240b8:	f85ddf44 	.word	0xf85ddf44
 80240bc:	3e54ae0b 	.word	0x3e54ae0b
 80240c0:	55555555 	.word	0x55555555
 80240c4:	3fd55555 	.word	0x3fd55555
 80240c8:	652b82fe 	.word	0x652b82fe
 80240cc:	3ff71547 	.word	0x3ff71547
 80240d0:	00000000 	.word	0x00000000
 80240d4:	bff00000 	.word	0xbff00000
 80240d8:	8800759c 	.word	0x8800759c
 80240dc:	7e37e43c 	.word	0x7e37e43c
 80240e0:	3ff00000 	.word	0x3ff00000
 80240e4:	3fd00000 	.word	0x3fd00000
 80240e8:	3fe00000 	.word	0x3fe00000
 80240ec:	408fffff 	.word	0x408fffff
 80240f0:	4bd7      	ldr	r3, [pc, #860]	; (8024450 <__ieee754_pow+0x740>)
 80240f2:	ea03 0309 	and.w	r3, r3, r9
 80240f6:	2200      	movs	r2, #0
 80240f8:	b92b      	cbnz	r3, 8024106 <__ieee754_pow+0x3f6>
 80240fa:	4bd6      	ldr	r3, [pc, #856]	; (8024454 <__ieee754_pow+0x744>)
 80240fc:	f7dc fa9c 	bl	8000638 <__aeabi_dmul>
 8024100:	f06f 0234 	mvn.w	r2, #52	; 0x34
 8024104:	460c      	mov	r4, r1
 8024106:	1523      	asrs	r3, r4, #20
 8024108:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 802410c:	4413      	add	r3, r2
 802410e:	9309      	str	r3, [sp, #36]	; 0x24
 8024110:	4bd1      	ldr	r3, [pc, #836]	; (8024458 <__ieee754_pow+0x748>)
 8024112:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8024116:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 802411a:	429c      	cmp	r4, r3
 802411c:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8024120:	dd08      	ble.n	8024134 <__ieee754_pow+0x424>
 8024122:	4bce      	ldr	r3, [pc, #824]	; (802445c <__ieee754_pow+0x74c>)
 8024124:	429c      	cmp	r4, r3
 8024126:	f340 8163 	ble.w	80243f0 <__ieee754_pow+0x6e0>
 802412a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802412c:	3301      	adds	r3, #1
 802412e:	9309      	str	r3, [sp, #36]	; 0x24
 8024130:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 8024134:	2400      	movs	r4, #0
 8024136:	00e3      	lsls	r3, r4, #3
 8024138:	930b      	str	r3, [sp, #44]	; 0x2c
 802413a:	4bc9      	ldr	r3, [pc, #804]	; (8024460 <__ieee754_pow+0x750>)
 802413c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8024140:	ed93 7b00 	vldr	d7, [r3]
 8024144:	4629      	mov	r1, r5
 8024146:	ec53 2b17 	vmov	r2, r3, d7
 802414a:	eeb0 8a47 	vmov.f32	s16, s14
 802414e:	eef0 8a67 	vmov.f32	s17, s15
 8024152:	4682      	mov	sl, r0
 8024154:	f7dc f8b8 	bl	80002c8 <__aeabi_dsub>
 8024158:	4652      	mov	r2, sl
 802415a:	4606      	mov	r6, r0
 802415c:	460f      	mov	r7, r1
 802415e:	462b      	mov	r3, r5
 8024160:	ec51 0b18 	vmov	r0, r1, d8
 8024164:	f7dc f8b2 	bl	80002cc <__adddf3>
 8024168:	4602      	mov	r2, r0
 802416a:	460b      	mov	r3, r1
 802416c:	2000      	movs	r0, #0
 802416e:	49bd      	ldr	r1, [pc, #756]	; (8024464 <__ieee754_pow+0x754>)
 8024170:	f7dc fb8c 	bl	800088c <__aeabi_ddiv>
 8024174:	ec41 0b19 	vmov	d9, r0, r1
 8024178:	4602      	mov	r2, r0
 802417a:	460b      	mov	r3, r1
 802417c:	4630      	mov	r0, r6
 802417e:	4639      	mov	r1, r7
 8024180:	f7dc fa5a 	bl	8000638 <__aeabi_dmul>
 8024184:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8024188:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802418c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8024190:	2300      	movs	r3, #0
 8024192:	9304      	str	r3, [sp, #16]
 8024194:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8024198:	46ab      	mov	fp, r5
 802419a:	106d      	asrs	r5, r5, #1
 802419c:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 80241a0:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 80241a4:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 80241a8:	2200      	movs	r2, #0
 80241aa:	4640      	mov	r0, r8
 80241ac:	4649      	mov	r1, r9
 80241ae:	4614      	mov	r4, r2
 80241b0:	461d      	mov	r5, r3
 80241b2:	f7dc fa41 	bl	8000638 <__aeabi_dmul>
 80241b6:	4602      	mov	r2, r0
 80241b8:	460b      	mov	r3, r1
 80241ba:	4630      	mov	r0, r6
 80241bc:	4639      	mov	r1, r7
 80241be:	f7dc f883 	bl	80002c8 <__aeabi_dsub>
 80241c2:	ec53 2b18 	vmov	r2, r3, d8
 80241c6:	4606      	mov	r6, r0
 80241c8:	460f      	mov	r7, r1
 80241ca:	4620      	mov	r0, r4
 80241cc:	4629      	mov	r1, r5
 80241ce:	f7dc f87b 	bl	80002c8 <__aeabi_dsub>
 80241d2:	4602      	mov	r2, r0
 80241d4:	460b      	mov	r3, r1
 80241d6:	4650      	mov	r0, sl
 80241d8:	4659      	mov	r1, fp
 80241da:	f7dc f875 	bl	80002c8 <__aeabi_dsub>
 80241de:	4642      	mov	r2, r8
 80241e0:	464b      	mov	r3, r9
 80241e2:	f7dc fa29 	bl	8000638 <__aeabi_dmul>
 80241e6:	4602      	mov	r2, r0
 80241e8:	460b      	mov	r3, r1
 80241ea:	4630      	mov	r0, r6
 80241ec:	4639      	mov	r1, r7
 80241ee:	f7dc f86b 	bl	80002c8 <__aeabi_dsub>
 80241f2:	ec53 2b19 	vmov	r2, r3, d9
 80241f6:	f7dc fa1f 	bl	8000638 <__aeabi_dmul>
 80241fa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80241fe:	ec41 0b18 	vmov	d8, r0, r1
 8024202:	4610      	mov	r0, r2
 8024204:	4619      	mov	r1, r3
 8024206:	f7dc fa17 	bl	8000638 <__aeabi_dmul>
 802420a:	a37d      	add	r3, pc, #500	; (adr r3, 8024400 <__ieee754_pow+0x6f0>)
 802420c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024210:	4604      	mov	r4, r0
 8024212:	460d      	mov	r5, r1
 8024214:	f7dc fa10 	bl	8000638 <__aeabi_dmul>
 8024218:	a37b      	add	r3, pc, #492	; (adr r3, 8024408 <__ieee754_pow+0x6f8>)
 802421a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802421e:	f7dc f855 	bl	80002cc <__adddf3>
 8024222:	4622      	mov	r2, r4
 8024224:	462b      	mov	r3, r5
 8024226:	f7dc fa07 	bl	8000638 <__aeabi_dmul>
 802422a:	a379      	add	r3, pc, #484	; (adr r3, 8024410 <__ieee754_pow+0x700>)
 802422c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024230:	f7dc f84c 	bl	80002cc <__adddf3>
 8024234:	4622      	mov	r2, r4
 8024236:	462b      	mov	r3, r5
 8024238:	f7dc f9fe 	bl	8000638 <__aeabi_dmul>
 802423c:	a376      	add	r3, pc, #472	; (adr r3, 8024418 <__ieee754_pow+0x708>)
 802423e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024242:	f7dc f843 	bl	80002cc <__adddf3>
 8024246:	4622      	mov	r2, r4
 8024248:	462b      	mov	r3, r5
 802424a:	f7dc f9f5 	bl	8000638 <__aeabi_dmul>
 802424e:	a374      	add	r3, pc, #464	; (adr r3, 8024420 <__ieee754_pow+0x710>)
 8024250:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024254:	f7dc f83a 	bl	80002cc <__adddf3>
 8024258:	4622      	mov	r2, r4
 802425a:	462b      	mov	r3, r5
 802425c:	f7dc f9ec 	bl	8000638 <__aeabi_dmul>
 8024260:	a371      	add	r3, pc, #452	; (adr r3, 8024428 <__ieee754_pow+0x718>)
 8024262:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024266:	f7dc f831 	bl	80002cc <__adddf3>
 802426a:	4622      	mov	r2, r4
 802426c:	4606      	mov	r6, r0
 802426e:	460f      	mov	r7, r1
 8024270:	462b      	mov	r3, r5
 8024272:	4620      	mov	r0, r4
 8024274:	4629      	mov	r1, r5
 8024276:	f7dc f9df 	bl	8000638 <__aeabi_dmul>
 802427a:	4602      	mov	r2, r0
 802427c:	460b      	mov	r3, r1
 802427e:	4630      	mov	r0, r6
 8024280:	4639      	mov	r1, r7
 8024282:	f7dc f9d9 	bl	8000638 <__aeabi_dmul>
 8024286:	4642      	mov	r2, r8
 8024288:	4604      	mov	r4, r0
 802428a:	460d      	mov	r5, r1
 802428c:	464b      	mov	r3, r9
 802428e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8024292:	f7dc f81b 	bl	80002cc <__adddf3>
 8024296:	ec53 2b18 	vmov	r2, r3, d8
 802429a:	f7dc f9cd 	bl	8000638 <__aeabi_dmul>
 802429e:	4622      	mov	r2, r4
 80242a0:	462b      	mov	r3, r5
 80242a2:	f7dc f813 	bl	80002cc <__adddf3>
 80242a6:	4642      	mov	r2, r8
 80242a8:	4682      	mov	sl, r0
 80242aa:	468b      	mov	fp, r1
 80242ac:	464b      	mov	r3, r9
 80242ae:	4640      	mov	r0, r8
 80242b0:	4649      	mov	r1, r9
 80242b2:	f7dc f9c1 	bl	8000638 <__aeabi_dmul>
 80242b6:	4b6c      	ldr	r3, [pc, #432]	; (8024468 <__ieee754_pow+0x758>)
 80242b8:	2200      	movs	r2, #0
 80242ba:	4606      	mov	r6, r0
 80242bc:	460f      	mov	r7, r1
 80242be:	f7dc f805 	bl	80002cc <__adddf3>
 80242c2:	4652      	mov	r2, sl
 80242c4:	465b      	mov	r3, fp
 80242c6:	f7dc f801 	bl	80002cc <__adddf3>
 80242ca:	9c04      	ldr	r4, [sp, #16]
 80242cc:	460d      	mov	r5, r1
 80242ce:	4622      	mov	r2, r4
 80242d0:	460b      	mov	r3, r1
 80242d2:	4640      	mov	r0, r8
 80242d4:	4649      	mov	r1, r9
 80242d6:	f7dc f9af 	bl	8000638 <__aeabi_dmul>
 80242da:	4b63      	ldr	r3, [pc, #396]	; (8024468 <__ieee754_pow+0x758>)
 80242dc:	4680      	mov	r8, r0
 80242de:	4689      	mov	r9, r1
 80242e0:	2200      	movs	r2, #0
 80242e2:	4620      	mov	r0, r4
 80242e4:	4629      	mov	r1, r5
 80242e6:	f7db ffef 	bl	80002c8 <__aeabi_dsub>
 80242ea:	4632      	mov	r2, r6
 80242ec:	463b      	mov	r3, r7
 80242ee:	f7db ffeb 	bl	80002c8 <__aeabi_dsub>
 80242f2:	4602      	mov	r2, r0
 80242f4:	460b      	mov	r3, r1
 80242f6:	4650      	mov	r0, sl
 80242f8:	4659      	mov	r1, fp
 80242fa:	f7db ffe5 	bl	80002c8 <__aeabi_dsub>
 80242fe:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8024302:	f7dc f999 	bl	8000638 <__aeabi_dmul>
 8024306:	4622      	mov	r2, r4
 8024308:	4606      	mov	r6, r0
 802430a:	460f      	mov	r7, r1
 802430c:	462b      	mov	r3, r5
 802430e:	ec51 0b18 	vmov	r0, r1, d8
 8024312:	f7dc f991 	bl	8000638 <__aeabi_dmul>
 8024316:	4602      	mov	r2, r0
 8024318:	460b      	mov	r3, r1
 802431a:	4630      	mov	r0, r6
 802431c:	4639      	mov	r1, r7
 802431e:	f7db ffd5 	bl	80002cc <__adddf3>
 8024322:	4606      	mov	r6, r0
 8024324:	460f      	mov	r7, r1
 8024326:	4602      	mov	r2, r0
 8024328:	460b      	mov	r3, r1
 802432a:	4640      	mov	r0, r8
 802432c:	4649      	mov	r1, r9
 802432e:	f7db ffcd 	bl	80002cc <__adddf3>
 8024332:	9c04      	ldr	r4, [sp, #16]
 8024334:	a33e      	add	r3, pc, #248	; (adr r3, 8024430 <__ieee754_pow+0x720>)
 8024336:	e9d3 2300 	ldrd	r2, r3, [r3]
 802433a:	4620      	mov	r0, r4
 802433c:	460d      	mov	r5, r1
 802433e:	f7dc f97b 	bl	8000638 <__aeabi_dmul>
 8024342:	4642      	mov	r2, r8
 8024344:	ec41 0b18 	vmov	d8, r0, r1
 8024348:	464b      	mov	r3, r9
 802434a:	4620      	mov	r0, r4
 802434c:	4629      	mov	r1, r5
 802434e:	f7db ffbb 	bl	80002c8 <__aeabi_dsub>
 8024352:	4602      	mov	r2, r0
 8024354:	460b      	mov	r3, r1
 8024356:	4630      	mov	r0, r6
 8024358:	4639      	mov	r1, r7
 802435a:	f7db ffb5 	bl	80002c8 <__aeabi_dsub>
 802435e:	a336      	add	r3, pc, #216	; (adr r3, 8024438 <__ieee754_pow+0x728>)
 8024360:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024364:	f7dc f968 	bl	8000638 <__aeabi_dmul>
 8024368:	a335      	add	r3, pc, #212	; (adr r3, 8024440 <__ieee754_pow+0x730>)
 802436a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802436e:	4606      	mov	r6, r0
 8024370:	460f      	mov	r7, r1
 8024372:	4620      	mov	r0, r4
 8024374:	4629      	mov	r1, r5
 8024376:	f7dc f95f 	bl	8000638 <__aeabi_dmul>
 802437a:	4602      	mov	r2, r0
 802437c:	460b      	mov	r3, r1
 802437e:	4630      	mov	r0, r6
 8024380:	4639      	mov	r1, r7
 8024382:	f7db ffa3 	bl	80002cc <__adddf3>
 8024386:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024388:	4b38      	ldr	r3, [pc, #224]	; (802446c <__ieee754_pow+0x75c>)
 802438a:	4413      	add	r3, r2
 802438c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024390:	f7db ff9c 	bl	80002cc <__adddf3>
 8024394:	4682      	mov	sl, r0
 8024396:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024398:	468b      	mov	fp, r1
 802439a:	f7dc f8e3 	bl	8000564 <__aeabi_i2d>
 802439e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80243a0:	4b33      	ldr	r3, [pc, #204]	; (8024470 <__ieee754_pow+0x760>)
 80243a2:	4413      	add	r3, r2
 80243a4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80243a8:	4606      	mov	r6, r0
 80243aa:	460f      	mov	r7, r1
 80243ac:	4652      	mov	r2, sl
 80243ae:	465b      	mov	r3, fp
 80243b0:	ec51 0b18 	vmov	r0, r1, d8
 80243b4:	f7db ff8a 	bl	80002cc <__adddf3>
 80243b8:	4642      	mov	r2, r8
 80243ba:	464b      	mov	r3, r9
 80243bc:	f7db ff86 	bl	80002cc <__adddf3>
 80243c0:	4632      	mov	r2, r6
 80243c2:	463b      	mov	r3, r7
 80243c4:	f7db ff82 	bl	80002cc <__adddf3>
 80243c8:	9c04      	ldr	r4, [sp, #16]
 80243ca:	4632      	mov	r2, r6
 80243cc:	463b      	mov	r3, r7
 80243ce:	4620      	mov	r0, r4
 80243d0:	460d      	mov	r5, r1
 80243d2:	f7db ff79 	bl	80002c8 <__aeabi_dsub>
 80243d6:	4642      	mov	r2, r8
 80243d8:	464b      	mov	r3, r9
 80243da:	f7db ff75 	bl	80002c8 <__aeabi_dsub>
 80243de:	ec53 2b18 	vmov	r2, r3, d8
 80243e2:	f7db ff71 	bl	80002c8 <__aeabi_dsub>
 80243e6:	4602      	mov	r2, r0
 80243e8:	460b      	mov	r3, r1
 80243ea:	4650      	mov	r0, sl
 80243ec:	4659      	mov	r1, fp
 80243ee:	e606      	b.n	8023ffe <__ieee754_pow+0x2ee>
 80243f0:	2401      	movs	r4, #1
 80243f2:	e6a0      	b.n	8024136 <__ieee754_pow+0x426>
 80243f4:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8024448 <__ieee754_pow+0x738>
 80243f8:	e60d      	b.n	8024016 <__ieee754_pow+0x306>
 80243fa:	bf00      	nop
 80243fc:	f3af 8000 	nop.w
 8024400:	4a454eef 	.word	0x4a454eef
 8024404:	3fca7e28 	.word	0x3fca7e28
 8024408:	93c9db65 	.word	0x93c9db65
 802440c:	3fcd864a 	.word	0x3fcd864a
 8024410:	a91d4101 	.word	0xa91d4101
 8024414:	3fd17460 	.word	0x3fd17460
 8024418:	518f264d 	.word	0x518f264d
 802441c:	3fd55555 	.word	0x3fd55555
 8024420:	db6fabff 	.word	0xdb6fabff
 8024424:	3fdb6db6 	.word	0x3fdb6db6
 8024428:	33333303 	.word	0x33333303
 802442c:	3fe33333 	.word	0x3fe33333
 8024430:	e0000000 	.word	0xe0000000
 8024434:	3feec709 	.word	0x3feec709
 8024438:	dc3a03fd 	.word	0xdc3a03fd
 802443c:	3feec709 	.word	0x3feec709
 8024440:	145b01f5 	.word	0x145b01f5
 8024444:	be3e2fe0 	.word	0xbe3e2fe0
 8024448:	00000000 	.word	0x00000000
 802444c:	3ff00000 	.word	0x3ff00000
 8024450:	7ff00000 	.word	0x7ff00000
 8024454:	43400000 	.word	0x43400000
 8024458:	0003988e 	.word	0x0003988e
 802445c:	000bb679 	.word	0x000bb679
 8024460:	0802a180 	.word	0x0802a180
 8024464:	3ff00000 	.word	0x3ff00000
 8024468:	40080000 	.word	0x40080000
 802446c:	0802a1a0 	.word	0x0802a1a0
 8024470:	0802a190 	.word	0x0802a190
 8024474:	a3b5      	add	r3, pc, #724	; (adr r3, 802474c <__ieee754_pow+0xa3c>)
 8024476:	e9d3 2300 	ldrd	r2, r3, [r3]
 802447a:	4640      	mov	r0, r8
 802447c:	4649      	mov	r1, r9
 802447e:	f7db ff25 	bl	80002cc <__adddf3>
 8024482:	4622      	mov	r2, r4
 8024484:	ec41 0b1a 	vmov	d10, r0, r1
 8024488:	462b      	mov	r3, r5
 802448a:	4630      	mov	r0, r6
 802448c:	4639      	mov	r1, r7
 802448e:	f7db ff1b 	bl	80002c8 <__aeabi_dsub>
 8024492:	4602      	mov	r2, r0
 8024494:	460b      	mov	r3, r1
 8024496:	ec51 0b1a 	vmov	r0, r1, d10
 802449a:	f7dc fb5d 	bl	8000b58 <__aeabi_dcmpgt>
 802449e:	2800      	cmp	r0, #0
 80244a0:	f47f adf8 	bne.w	8024094 <__ieee754_pow+0x384>
 80244a4:	4aa4      	ldr	r2, [pc, #656]	; (8024738 <__ieee754_pow+0xa28>)
 80244a6:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80244aa:	4293      	cmp	r3, r2
 80244ac:	f340 810b 	ble.w	80246c6 <__ieee754_pow+0x9b6>
 80244b0:	151b      	asrs	r3, r3, #20
 80244b2:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 80244b6:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 80244ba:	fa4a f303 	asr.w	r3, sl, r3
 80244be:	445b      	add	r3, fp
 80244c0:	f3c3 520a 	ubfx	r2, r3, #20, #11
 80244c4:	4e9d      	ldr	r6, [pc, #628]	; (802473c <__ieee754_pow+0xa2c>)
 80244c6:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 80244ca:	4116      	asrs	r6, r2
 80244cc:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 80244d0:	2000      	movs	r0, #0
 80244d2:	ea23 0106 	bic.w	r1, r3, r6
 80244d6:	f1c2 0214 	rsb	r2, r2, #20
 80244da:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 80244de:	fa4a fa02 	asr.w	sl, sl, r2
 80244e2:	f1bb 0f00 	cmp.w	fp, #0
 80244e6:	4602      	mov	r2, r0
 80244e8:	460b      	mov	r3, r1
 80244ea:	4620      	mov	r0, r4
 80244ec:	4629      	mov	r1, r5
 80244ee:	bfb8      	it	lt
 80244f0:	f1ca 0a00 	rsblt	sl, sl, #0
 80244f4:	f7db fee8 	bl	80002c8 <__aeabi_dsub>
 80244f8:	ec41 0b19 	vmov	d9, r0, r1
 80244fc:	4642      	mov	r2, r8
 80244fe:	464b      	mov	r3, r9
 8024500:	ec51 0b19 	vmov	r0, r1, d9
 8024504:	f7db fee2 	bl	80002cc <__adddf3>
 8024508:	2400      	movs	r4, #0
 802450a:	a379      	add	r3, pc, #484	; (adr r3, 80246f0 <__ieee754_pow+0x9e0>)
 802450c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024510:	4620      	mov	r0, r4
 8024512:	460d      	mov	r5, r1
 8024514:	f7dc f890 	bl	8000638 <__aeabi_dmul>
 8024518:	ec53 2b19 	vmov	r2, r3, d9
 802451c:	4606      	mov	r6, r0
 802451e:	460f      	mov	r7, r1
 8024520:	4620      	mov	r0, r4
 8024522:	4629      	mov	r1, r5
 8024524:	f7db fed0 	bl	80002c8 <__aeabi_dsub>
 8024528:	4602      	mov	r2, r0
 802452a:	460b      	mov	r3, r1
 802452c:	4640      	mov	r0, r8
 802452e:	4649      	mov	r1, r9
 8024530:	f7db feca 	bl	80002c8 <__aeabi_dsub>
 8024534:	a370      	add	r3, pc, #448	; (adr r3, 80246f8 <__ieee754_pow+0x9e8>)
 8024536:	e9d3 2300 	ldrd	r2, r3, [r3]
 802453a:	f7dc f87d 	bl	8000638 <__aeabi_dmul>
 802453e:	a370      	add	r3, pc, #448	; (adr r3, 8024700 <__ieee754_pow+0x9f0>)
 8024540:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024544:	4680      	mov	r8, r0
 8024546:	4689      	mov	r9, r1
 8024548:	4620      	mov	r0, r4
 802454a:	4629      	mov	r1, r5
 802454c:	f7dc f874 	bl	8000638 <__aeabi_dmul>
 8024550:	4602      	mov	r2, r0
 8024552:	460b      	mov	r3, r1
 8024554:	4640      	mov	r0, r8
 8024556:	4649      	mov	r1, r9
 8024558:	f7db feb8 	bl	80002cc <__adddf3>
 802455c:	4604      	mov	r4, r0
 802455e:	460d      	mov	r5, r1
 8024560:	4602      	mov	r2, r0
 8024562:	460b      	mov	r3, r1
 8024564:	4630      	mov	r0, r6
 8024566:	4639      	mov	r1, r7
 8024568:	f7db feb0 	bl	80002cc <__adddf3>
 802456c:	4632      	mov	r2, r6
 802456e:	463b      	mov	r3, r7
 8024570:	4680      	mov	r8, r0
 8024572:	4689      	mov	r9, r1
 8024574:	f7db fea8 	bl	80002c8 <__aeabi_dsub>
 8024578:	4602      	mov	r2, r0
 802457a:	460b      	mov	r3, r1
 802457c:	4620      	mov	r0, r4
 802457e:	4629      	mov	r1, r5
 8024580:	f7db fea2 	bl	80002c8 <__aeabi_dsub>
 8024584:	4642      	mov	r2, r8
 8024586:	4606      	mov	r6, r0
 8024588:	460f      	mov	r7, r1
 802458a:	464b      	mov	r3, r9
 802458c:	4640      	mov	r0, r8
 802458e:	4649      	mov	r1, r9
 8024590:	f7dc f852 	bl	8000638 <__aeabi_dmul>
 8024594:	a35c      	add	r3, pc, #368	; (adr r3, 8024708 <__ieee754_pow+0x9f8>)
 8024596:	e9d3 2300 	ldrd	r2, r3, [r3]
 802459a:	4604      	mov	r4, r0
 802459c:	460d      	mov	r5, r1
 802459e:	f7dc f84b 	bl	8000638 <__aeabi_dmul>
 80245a2:	a35b      	add	r3, pc, #364	; (adr r3, 8024710 <__ieee754_pow+0xa00>)
 80245a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245a8:	f7db fe8e 	bl	80002c8 <__aeabi_dsub>
 80245ac:	4622      	mov	r2, r4
 80245ae:	462b      	mov	r3, r5
 80245b0:	f7dc f842 	bl	8000638 <__aeabi_dmul>
 80245b4:	a358      	add	r3, pc, #352	; (adr r3, 8024718 <__ieee754_pow+0xa08>)
 80245b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245ba:	f7db fe87 	bl	80002cc <__adddf3>
 80245be:	4622      	mov	r2, r4
 80245c0:	462b      	mov	r3, r5
 80245c2:	f7dc f839 	bl	8000638 <__aeabi_dmul>
 80245c6:	a356      	add	r3, pc, #344	; (adr r3, 8024720 <__ieee754_pow+0xa10>)
 80245c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245cc:	f7db fe7c 	bl	80002c8 <__aeabi_dsub>
 80245d0:	4622      	mov	r2, r4
 80245d2:	462b      	mov	r3, r5
 80245d4:	f7dc f830 	bl	8000638 <__aeabi_dmul>
 80245d8:	a353      	add	r3, pc, #332	; (adr r3, 8024728 <__ieee754_pow+0xa18>)
 80245da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245de:	f7db fe75 	bl	80002cc <__adddf3>
 80245e2:	4622      	mov	r2, r4
 80245e4:	462b      	mov	r3, r5
 80245e6:	f7dc f827 	bl	8000638 <__aeabi_dmul>
 80245ea:	4602      	mov	r2, r0
 80245ec:	460b      	mov	r3, r1
 80245ee:	4640      	mov	r0, r8
 80245f0:	4649      	mov	r1, r9
 80245f2:	f7db fe69 	bl	80002c8 <__aeabi_dsub>
 80245f6:	4604      	mov	r4, r0
 80245f8:	460d      	mov	r5, r1
 80245fa:	4602      	mov	r2, r0
 80245fc:	460b      	mov	r3, r1
 80245fe:	4640      	mov	r0, r8
 8024600:	4649      	mov	r1, r9
 8024602:	f7dc f819 	bl	8000638 <__aeabi_dmul>
 8024606:	2200      	movs	r2, #0
 8024608:	ec41 0b19 	vmov	d9, r0, r1
 802460c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8024610:	4620      	mov	r0, r4
 8024612:	4629      	mov	r1, r5
 8024614:	f7db fe58 	bl	80002c8 <__aeabi_dsub>
 8024618:	4602      	mov	r2, r0
 802461a:	460b      	mov	r3, r1
 802461c:	ec51 0b19 	vmov	r0, r1, d9
 8024620:	f7dc f934 	bl	800088c <__aeabi_ddiv>
 8024624:	4632      	mov	r2, r6
 8024626:	4604      	mov	r4, r0
 8024628:	460d      	mov	r5, r1
 802462a:	463b      	mov	r3, r7
 802462c:	4640      	mov	r0, r8
 802462e:	4649      	mov	r1, r9
 8024630:	f7dc f802 	bl	8000638 <__aeabi_dmul>
 8024634:	4632      	mov	r2, r6
 8024636:	463b      	mov	r3, r7
 8024638:	f7db fe48 	bl	80002cc <__adddf3>
 802463c:	4602      	mov	r2, r0
 802463e:	460b      	mov	r3, r1
 8024640:	4620      	mov	r0, r4
 8024642:	4629      	mov	r1, r5
 8024644:	f7db fe40 	bl	80002c8 <__aeabi_dsub>
 8024648:	4642      	mov	r2, r8
 802464a:	464b      	mov	r3, r9
 802464c:	f7db fe3c 	bl	80002c8 <__aeabi_dsub>
 8024650:	460b      	mov	r3, r1
 8024652:	4602      	mov	r2, r0
 8024654:	493a      	ldr	r1, [pc, #232]	; (8024740 <__ieee754_pow+0xa30>)
 8024656:	2000      	movs	r0, #0
 8024658:	f7db fe36 	bl	80002c8 <__aeabi_dsub>
 802465c:	e9cd 0100 	strd	r0, r1, [sp]
 8024660:	9b01      	ldr	r3, [sp, #4]
 8024662:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 8024666:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 802466a:	da2f      	bge.n	80246cc <__ieee754_pow+0x9bc>
 802466c:	4650      	mov	r0, sl
 802466e:	ed9d 0b00 	vldr	d0, [sp]
 8024672:	f000 f9cd 	bl	8024a10 <scalbn>
 8024676:	ec51 0b10 	vmov	r0, r1, d0
 802467a:	ec53 2b18 	vmov	r2, r3, d8
 802467e:	f7ff bbe0 	b.w	8023e42 <__ieee754_pow+0x132>
 8024682:	4b30      	ldr	r3, [pc, #192]	; (8024744 <__ieee754_pow+0xa34>)
 8024684:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8024688:	429e      	cmp	r6, r3
 802468a:	f77f af0b 	ble.w	80244a4 <__ieee754_pow+0x794>
 802468e:	4b2e      	ldr	r3, [pc, #184]	; (8024748 <__ieee754_pow+0xa38>)
 8024690:	440b      	add	r3, r1
 8024692:	4303      	orrs	r3, r0
 8024694:	d00b      	beq.n	80246ae <__ieee754_pow+0x99e>
 8024696:	a326      	add	r3, pc, #152	; (adr r3, 8024730 <__ieee754_pow+0xa20>)
 8024698:	e9d3 2300 	ldrd	r2, r3, [r3]
 802469c:	ec51 0b18 	vmov	r0, r1, d8
 80246a0:	f7db ffca 	bl	8000638 <__aeabi_dmul>
 80246a4:	a322      	add	r3, pc, #136	; (adr r3, 8024730 <__ieee754_pow+0xa20>)
 80246a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80246aa:	f7ff bbca 	b.w	8023e42 <__ieee754_pow+0x132>
 80246ae:	4622      	mov	r2, r4
 80246b0:	462b      	mov	r3, r5
 80246b2:	f7db fe09 	bl	80002c8 <__aeabi_dsub>
 80246b6:	4642      	mov	r2, r8
 80246b8:	464b      	mov	r3, r9
 80246ba:	f7dc fa43 	bl	8000b44 <__aeabi_dcmpge>
 80246be:	2800      	cmp	r0, #0
 80246c0:	f43f aef0 	beq.w	80244a4 <__ieee754_pow+0x794>
 80246c4:	e7e7      	b.n	8024696 <__ieee754_pow+0x986>
 80246c6:	f04f 0a00 	mov.w	sl, #0
 80246ca:	e717      	b.n	80244fc <__ieee754_pow+0x7ec>
 80246cc:	e9dd 0100 	ldrd	r0, r1, [sp]
 80246d0:	4619      	mov	r1, r3
 80246d2:	e7d2      	b.n	802467a <__ieee754_pow+0x96a>
 80246d4:	491a      	ldr	r1, [pc, #104]	; (8024740 <__ieee754_pow+0xa30>)
 80246d6:	2000      	movs	r0, #0
 80246d8:	f7ff bb9e 	b.w	8023e18 <__ieee754_pow+0x108>
 80246dc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80246e0:	f7ff bb9a 	b.w	8023e18 <__ieee754_pow+0x108>
 80246e4:	9000      	str	r0, [sp, #0]
 80246e6:	f7ff bb76 	b.w	8023dd6 <__ieee754_pow+0xc6>
 80246ea:	2100      	movs	r1, #0
 80246ec:	f7ff bb60 	b.w	8023db0 <__ieee754_pow+0xa0>
 80246f0:	00000000 	.word	0x00000000
 80246f4:	3fe62e43 	.word	0x3fe62e43
 80246f8:	fefa39ef 	.word	0xfefa39ef
 80246fc:	3fe62e42 	.word	0x3fe62e42
 8024700:	0ca86c39 	.word	0x0ca86c39
 8024704:	be205c61 	.word	0xbe205c61
 8024708:	72bea4d0 	.word	0x72bea4d0
 802470c:	3e663769 	.word	0x3e663769
 8024710:	c5d26bf1 	.word	0xc5d26bf1
 8024714:	3ebbbd41 	.word	0x3ebbbd41
 8024718:	af25de2c 	.word	0xaf25de2c
 802471c:	3f11566a 	.word	0x3f11566a
 8024720:	16bebd93 	.word	0x16bebd93
 8024724:	3f66c16c 	.word	0x3f66c16c
 8024728:	5555553e 	.word	0x5555553e
 802472c:	3fc55555 	.word	0x3fc55555
 8024730:	c2f8f359 	.word	0xc2f8f359
 8024734:	01a56e1f 	.word	0x01a56e1f
 8024738:	3fe00000 	.word	0x3fe00000
 802473c:	000fffff 	.word	0x000fffff
 8024740:	3ff00000 	.word	0x3ff00000
 8024744:	4090cbff 	.word	0x4090cbff
 8024748:	3f6f3400 	.word	0x3f6f3400
 802474c:	652b82fe 	.word	0x652b82fe
 8024750:	3c971547 	.word	0x3c971547

08024754 <__ieee754_sqrt>:
 8024754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024758:	ec55 4b10 	vmov	r4, r5, d0
 802475c:	4e56      	ldr	r6, [pc, #344]	; (80248b8 <__ieee754_sqrt+0x164>)
 802475e:	43ae      	bics	r6, r5
 8024760:	ee10 0a10 	vmov	r0, s0
 8024764:	ee10 3a10 	vmov	r3, s0
 8024768:	4629      	mov	r1, r5
 802476a:	462a      	mov	r2, r5
 802476c:	d110      	bne.n	8024790 <__ieee754_sqrt+0x3c>
 802476e:	ee10 2a10 	vmov	r2, s0
 8024772:	462b      	mov	r3, r5
 8024774:	f7db ff60 	bl	8000638 <__aeabi_dmul>
 8024778:	4602      	mov	r2, r0
 802477a:	460b      	mov	r3, r1
 802477c:	4620      	mov	r0, r4
 802477e:	4629      	mov	r1, r5
 8024780:	f7db fda4 	bl	80002cc <__adddf3>
 8024784:	4604      	mov	r4, r0
 8024786:	460d      	mov	r5, r1
 8024788:	ec45 4b10 	vmov	d0, r4, r5
 802478c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024790:	2d00      	cmp	r5, #0
 8024792:	dc10      	bgt.n	80247b6 <__ieee754_sqrt+0x62>
 8024794:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8024798:	4330      	orrs	r0, r6
 802479a:	d0f5      	beq.n	8024788 <__ieee754_sqrt+0x34>
 802479c:	b15d      	cbz	r5, 80247b6 <__ieee754_sqrt+0x62>
 802479e:	ee10 2a10 	vmov	r2, s0
 80247a2:	462b      	mov	r3, r5
 80247a4:	ee10 0a10 	vmov	r0, s0
 80247a8:	f7db fd8e 	bl	80002c8 <__aeabi_dsub>
 80247ac:	4602      	mov	r2, r0
 80247ae:	460b      	mov	r3, r1
 80247b0:	f7dc f86c 	bl	800088c <__aeabi_ddiv>
 80247b4:	e7e6      	b.n	8024784 <__ieee754_sqrt+0x30>
 80247b6:	1509      	asrs	r1, r1, #20
 80247b8:	d076      	beq.n	80248a8 <__ieee754_sqrt+0x154>
 80247ba:	f3c2 0213 	ubfx	r2, r2, #0, #20
 80247be:	07ce      	lsls	r6, r1, #31
 80247c0:	f442 1080 	orr.w	r0, r2, #1048576	; 0x100000
 80247c4:	bf5e      	ittt	pl
 80247c6:	0fda      	lsrpl	r2, r3, #31
 80247c8:	005b      	lslpl	r3, r3, #1
 80247ca:	eb02 0040 	addpl.w	r0, r2, r0, lsl #1
 80247ce:	0fda      	lsrs	r2, r3, #31
 80247d0:	f2a1 35ff 	subw	r5, r1, #1023	; 0x3ff
 80247d4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80247d8:	2000      	movs	r0, #0
 80247da:	106d      	asrs	r5, r5, #1
 80247dc:	005b      	lsls	r3, r3, #1
 80247de:	f04f 0e16 	mov.w	lr, #22
 80247e2:	4684      	mov	ip, r0
 80247e4:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80247e8:	eb0c 0401 	add.w	r4, ip, r1
 80247ec:	4294      	cmp	r4, r2
 80247ee:	bfde      	ittt	le
 80247f0:	1b12      	suble	r2, r2, r4
 80247f2:	eb04 0c01 	addle.w	ip, r4, r1
 80247f6:	1840      	addle	r0, r0, r1
 80247f8:	0052      	lsls	r2, r2, #1
 80247fa:	f1be 0e01 	subs.w	lr, lr, #1
 80247fe:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8024802:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8024806:	ea4f 0343 	mov.w	r3, r3, lsl #1
 802480a:	d1ed      	bne.n	80247e8 <__ieee754_sqrt+0x94>
 802480c:	4671      	mov	r1, lr
 802480e:	2720      	movs	r7, #32
 8024810:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8024814:	4562      	cmp	r2, ip
 8024816:	eb04 060e 	add.w	r6, r4, lr
 802481a:	dc02      	bgt.n	8024822 <__ieee754_sqrt+0xce>
 802481c:	d113      	bne.n	8024846 <__ieee754_sqrt+0xf2>
 802481e:	429e      	cmp	r6, r3
 8024820:	d811      	bhi.n	8024846 <__ieee754_sqrt+0xf2>
 8024822:	2e00      	cmp	r6, #0
 8024824:	eb06 0e04 	add.w	lr, r6, r4
 8024828:	da43      	bge.n	80248b2 <__ieee754_sqrt+0x15e>
 802482a:	f1be 0f00 	cmp.w	lr, #0
 802482e:	db40      	blt.n	80248b2 <__ieee754_sqrt+0x15e>
 8024830:	f10c 0801 	add.w	r8, ip, #1
 8024834:	eba2 020c 	sub.w	r2, r2, ip
 8024838:	429e      	cmp	r6, r3
 802483a:	bf88      	it	hi
 802483c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8024840:	1b9b      	subs	r3, r3, r6
 8024842:	4421      	add	r1, r4
 8024844:	46c4      	mov	ip, r8
 8024846:	0052      	lsls	r2, r2, #1
 8024848:	3f01      	subs	r7, #1
 802484a:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 802484e:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8024852:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8024856:	d1dd      	bne.n	8024814 <__ieee754_sqrt+0xc0>
 8024858:	4313      	orrs	r3, r2
 802485a:	d006      	beq.n	802486a <__ieee754_sqrt+0x116>
 802485c:	1c4c      	adds	r4, r1, #1
 802485e:	bf13      	iteet	ne
 8024860:	3101      	addne	r1, #1
 8024862:	3001      	addeq	r0, #1
 8024864:	4639      	moveq	r1, r7
 8024866:	f021 0101 	bicne.w	r1, r1, #1
 802486a:	1043      	asrs	r3, r0, #1
 802486c:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8024870:	0849      	lsrs	r1, r1, #1
 8024872:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8024876:	07c2      	lsls	r2, r0, #31
 8024878:	bf48      	it	mi
 802487a:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
 802487e:	eb03 5705 	add.w	r7, r3, r5, lsl #20
 8024882:	460c      	mov	r4, r1
 8024884:	463d      	mov	r5, r7
 8024886:	e77f      	b.n	8024788 <__ieee754_sqrt+0x34>
 8024888:	0ada      	lsrs	r2, r3, #11
 802488a:	3815      	subs	r0, #21
 802488c:	055b      	lsls	r3, r3, #21
 802488e:	2a00      	cmp	r2, #0
 8024890:	d0fa      	beq.n	8024888 <__ieee754_sqrt+0x134>
 8024892:	02d7      	lsls	r7, r2, #11
 8024894:	d50a      	bpl.n	80248ac <__ieee754_sqrt+0x158>
 8024896:	f1c1 0420 	rsb	r4, r1, #32
 802489a:	fa23 f404 	lsr.w	r4, r3, r4
 802489e:	1e4d      	subs	r5, r1, #1
 80248a0:	408b      	lsls	r3, r1
 80248a2:	4322      	orrs	r2, r4
 80248a4:	1b41      	subs	r1, r0, r5
 80248a6:	e788      	b.n	80247ba <__ieee754_sqrt+0x66>
 80248a8:	4608      	mov	r0, r1
 80248aa:	e7f0      	b.n	802488e <__ieee754_sqrt+0x13a>
 80248ac:	0052      	lsls	r2, r2, #1
 80248ae:	3101      	adds	r1, #1
 80248b0:	e7ef      	b.n	8024892 <__ieee754_sqrt+0x13e>
 80248b2:	46e0      	mov	r8, ip
 80248b4:	e7be      	b.n	8024834 <__ieee754_sqrt+0xe0>
 80248b6:	bf00      	nop
 80248b8:	7ff00000 	.word	0x7ff00000

080248bc <fabs>:
 80248bc:	ec51 0b10 	vmov	r0, r1, d0
 80248c0:	ee10 2a10 	vmov	r2, s0
 80248c4:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80248c8:	ec43 2b10 	vmov	d0, r2, r3
 80248cc:	4770      	bx	lr

080248ce <finite>:
 80248ce:	b082      	sub	sp, #8
 80248d0:	ed8d 0b00 	vstr	d0, [sp]
 80248d4:	9801      	ldr	r0, [sp, #4]
 80248d6:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 80248da:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 80248de:	0fc0      	lsrs	r0, r0, #31
 80248e0:	b002      	add	sp, #8
 80248e2:	4770      	bx	lr
 80248e4:	0000      	movs	r0, r0
	...

080248e8 <nan>:
 80248e8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 80248f0 <nan+0x8>
 80248ec:	4770      	bx	lr
 80248ee:	bf00      	nop
 80248f0:	00000000 	.word	0x00000000
 80248f4:	7ff80000 	.word	0x7ff80000

080248f8 <rint>:
 80248f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80248fa:	ec51 0b10 	vmov	r0, r1, d0
 80248fe:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8024902:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8024906:	2e13      	cmp	r6, #19
 8024908:	ee10 4a10 	vmov	r4, s0
 802490c:	460b      	mov	r3, r1
 802490e:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 8024912:	dc58      	bgt.n	80249c6 <rint+0xce>
 8024914:	2e00      	cmp	r6, #0
 8024916:	da2b      	bge.n	8024970 <rint+0x78>
 8024918:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 802491c:	4302      	orrs	r2, r0
 802491e:	d023      	beq.n	8024968 <rint+0x70>
 8024920:	f3c1 0213 	ubfx	r2, r1, #0, #20
 8024924:	4302      	orrs	r2, r0
 8024926:	4254      	negs	r4, r2
 8024928:	4314      	orrs	r4, r2
 802492a:	0c4b      	lsrs	r3, r1, #17
 802492c:	0b24      	lsrs	r4, r4, #12
 802492e:	045b      	lsls	r3, r3, #17
 8024930:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 8024934:	ea44 0103 	orr.w	r1, r4, r3
 8024938:	4b32      	ldr	r3, [pc, #200]	; (8024a04 <rint+0x10c>)
 802493a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 802493e:	e9d3 6700 	ldrd	r6, r7, [r3]
 8024942:	4602      	mov	r2, r0
 8024944:	460b      	mov	r3, r1
 8024946:	4630      	mov	r0, r6
 8024948:	4639      	mov	r1, r7
 802494a:	f7db fcbf 	bl	80002cc <__adddf3>
 802494e:	e9cd 0100 	strd	r0, r1, [sp]
 8024952:	463b      	mov	r3, r7
 8024954:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024958:	4632      	mov	r2, r6
 802495a:	f7db fcb5 	bl	80002c8 <__aeabi_dsub>
 802495e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8024962:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 8024966:	4639      	mov	r1, r7
 8024968:	ec41 0b10 	vmov	d0, r0, r1
 802496c:	b003      	add	sp, #12
 802496e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024970:	4a25      	ldr	r2, [pc, #148]	; (8024a08 <rint+0x110>)
 8024972:	4132      	asrs	r2, r6
 8024974:	ea01 0702 	and.w	r7, r1, r2
 8024978:	4307      	orrs	r7, r0
 802497a:	d0f5      	beq.n	8024968 <rint+0x70>
 802497c:	0851      	lsrs	r1, r2, #1
 802497e:	ea03 0252 	and.w	r2, r3, r2, lsr #1
 8024982:	4314      	orrs	r4, r2
 8024984:	d00c      	beq.n	80249a0 <rint+0xa8>
 8024986:	ea23 0201 	bic.w	r2, r3, r1
 802498a:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 802498e:	2e13      	cmp	r6, #19
 8024990:	fa43 f606 	asr.w	r6, r3, r6
 8024994:	bf0c      	ite	eq
 8024996:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 802499a:	2400      	movne	r4, #0
 802499c:	ea42 0306 	orr.w	r3, r2, r6
 80249a0:	4918      	ldr	r1, [pc, #96]	; (8024a04 <rint+0x10c>)
 80249a2:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 80249a6:	4622      	mov	r2, r4
 80249a8:	e9d5 4500 	ldrd	r4, r5, [r5]
 80249ac:	4620      	mov	r0, r4
 80249ae:	4629      	mov	r1, r5
 80249b0:	f7db fc8c 	bl	80002cc <__adddf3>
 80249b4:	e9cd 0100 	strd	r0, r1, [sp]
 80249b8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80249bc:	4622      	mov	r2, r4
 80249be:	462b      	mov	r3, r5
 80249c0:	f7db fc82 	bl	80002c8 <__aeabi_dsub>
 80249c4:	e7d0      	b.n	8024968 <rint+0x70>
 80249c6:	2e33      	cmp	r6, #51	; 0x33
 80249c8:	dd07      	ble.n	80249da <rint+0xe2>
 80249ca:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80249ce:	d1cb      	bne.n	8024968 <rint+0x70>
 80249d0:	ee10 2a10 	vmov	r2, s0
 80249d4:	f7db fc7a 	bl	80002cc <__adddf3>
 80249d8:	e7c6      	b.n	8024968 <rint+0x70>
 80249da:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 80249de:	f04f 36ff 	mov.w	r6, #4294967295
 80249e2:	40d6      	lsrs	r6, r2
 80249e4:	4230      	tst	r0, r6
 80249e6:	d0bf      	beq.n	8024968 <rint+0x70>
 80249e8:	ea14 0056 	ands.w	r0, r4, r6, lsr #1
 80249ec:	ea4f 0156 	mov.w	r1, r6, lsr #1
 80249f0:	bf1f      	itttt	ne
 80249f2:	ea24 0101 	bicne.w	r1, r4, r1
 80249f6:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 80249fa:	fa44 f202 	asrne.w	r2, r4, r2
 80249fe:	ea41 0402 	orrne.w	r4, r1, r2
 8024a02:	e7cd      	b.n	80249a0 <rint+0xa8>
 8024a04:	0802a1b0 	.word	0x0802a1b0
 8024a08:	000fffff 	.word	0x000fffff
 8024a0c:	00000000 	.word	0x00000000

08024a10 <scalbn>:
 8024a10:	b570      	push	{r4, r5, r6, lr}
 8024a12:	ec55 4b10 	vmov	r4, r5, d0
 8024a16:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8024a1a:	4606      	mov	r6, r0
 8024a1c:	462b      	mov	r3, r5
 8024a1e:	b99a      	cbnz	r2, 8024a48 <scalbn+0x38>
 8024a20:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8024a24:	4323      	orrs	r3, r4
 8024a26:	d036      	beq.n	8024a96 <scalbn+0x86>
 8024a28:	4b39      	ldr	r3, [pc, #228]	; (8024b10 <scalbn+0x100>)
 8024a2a:	4629      	mov	r1, r5
 8024a2c:	ee10 0a10 	vmov	r0, s0
 8024a30:	2200      	movs	r2, #0
 8024a32:	f7db fe01 	bl	8000638 <__aeabi_dmul>
 8024a36:	4b37      	ldr	r3, [pc, #220]	; (8024b14 <scalbn+0x104>)
 8024a38:	429e      	cmp	r6, r3
 8024a3a:	4604      	mov	r4, r0
 8024a3c:	460d      	mov	r5, r1
 8024a3e:	da10      	bge.n	8024a62 <scalbn+0x52>
 8024a40:	a32b      	add	r3, pc, #172	; (adr r3, 8024af0 <scalbn+0xe0>)
 8024a42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024a46:	e03a      	b.n	8024abe <scalbn+0xae>
 8024a48:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8024a4c:	428a      	cmp	r2, r1
 8024a4e:	d10c      	bne.n	8024a6a <scalbn+0x5a>
 8024a50:	ee10 2a10 	vmov	r2, s0
 8024a54:	4620      	mov	r0, r4
 8024a56:	4629      	mov	r1, r5
 8024a58:	f7db fc38 	bl	80002cc <__adddf3>
 8024a5c:	4604      	mov	r4, r0
 8024a5e:	460d      	mov	r5, r1
 8024a60:	e019      	b.n	8024a96 <scalbn+0x86>
 8024a62:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8024a66:	460b      	mov	r3, r1
 8024a68:	3a36      	subs	r2, #54	; 0x36
 8024a6a:	4432      	add	r2, r6
 8024a6c:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8024a70:	428a      	cmp	r2, r1
 8024a72:	dd08      	ble.n	8024a86 <scalbn+0x76>
 8024a74:	2d00      	cmp	r5, #0
 8024a76:	a120      	add	r1, pc, #128	; (adr r1, 8024af8 <scalbn+0xe8>)
 8024a78:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024a7c:	da1c      	bge.n	8024ab8 <scalbn+0xa8>
 8024a7e:	a120      	add	r1, pc, #128	; (adr r1, 8024b00 <scalbn+0xf0>)
 8024a80:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024a84:	e018      	b.n	8024ab8 <scalbn+0xa8>
 8024a86:	2a00      	cmp	r2, #0
 8024a88:	dd08      	ble.n	8024a9c <scalbn+0x8c>
 8024a8a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8024a8e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8024a92:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8024a96:	ec45 4b10 	vmov	d0, r4, r5
 8024a9a:	bd70      	pop	{r4, r5, r6, pc}
 8024a9c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8024aa0:	da19      	bge.n	8024ad6 <scalbn+0xc6>
 8024aa2:	f24c 3350 	movw	r3, #50000	; 0xc350
 8024aa6:	429e      	cmp	r6, r3
 8024aa8:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8024aac:	dd0a      	ble.n	8024ac4 <scalbn+0xb4>
 8024aae:	a112      	add	r1, pc, #72	; (adr r1, 8024af8 <scalbn+0xe8>)
 8024ab0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024ab4:	2b00      	cmp	r3, #0
 8024ab6:	d1e2      	bne.n	8024a7e <scalbn+0x6e>
 8024ab8:	a30f      	add	r3, pc, #60	; (adr r3, 8024af8 <scalbn+0xe8>)
 8024aba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024abe:	f7db fdbb 	bl	8000638 <__aeabi_dmul>
 8024ac2:	e7cb      	b.n	8024a5c <scalbn+0x4c>
 8024ac4:	a10a      	add	r1, pc, #40	; (adr r1, 8024af0 <scalbn+0xe0>)
 8024ac6:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024aca:	2b00      	cmp	r3, #0
 8024acc:	d0b8      	beq.n	8024a40 <scalbn+0x30>
 8024ace:	a10e      	add	r1, pc, #56	; (adr r1, 8024b08 <scalbn+0xf8>)
 8024ad0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8024ad4:	e7b4      	b.n	8024a40 <scalbn+0x30>
 8024ad6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8024ada:	3236      	adds	r2, #54	; 0x36
 8024adc:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8024ae0:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8024ae4:	4620      	mov	r0, r4
 8024ae6:	4b0c      	ldr	r3, [pc, #48]	; (8024b18 <scalbn+0x108>)
 8024ae8:	2200      	movs	r2, #0
 8024aea:	e7e8      	b.n	8024abe <scalbn+0xae>
 8024aec:	f3af 8000 	nop.w
 8024af0:	c2f8f359 	.word	0xc2f8f359
 8024af4:	01a56e1f 	.word	0x01a56e1f
 8024af8:	8800759c 	.word	0x8800759c
 8024afc:	7e37e43c 	.word	0x7e37e43c
 8024b00:	8800759c 	.word	0x8800759c
 8024b04:	fe37e43c 	.word	0xfe37e43c
 8024b08:	c2f8f359 	.word	0xc2f8f359
 8024b0c:	81a56e1f 	.word	0x81a56e1f
 8024b10:	43500000 	.word	0x43500000
 8024b14:	ffff3cb0 	.word	0xffff3cb0
 8024b18:	3c900000 	.word	0x3c900000

08024b1c <abort>:
 8024b1c:	b508      	push	{r3, lr}
 8024b1e:	2006      	movs	r0, #6
 8024b20:	f000 fe00 	bl	8025724 <raise>
 8024b24:	2001      	movs	r0, #1
 8024b26:	f7fa f85b 	bl	801ebe0 <_exit>

08024b2a <atexit>:
 8024b2a:	2300      	movs	r3, #0
 8024b2c:	4601      	mov	r1, r0
 8024b2e:	461a      	mov	r2, r3
 8024b30:	4618      	mov	r0, r3
 8024b32:	f001 bdbf 	b.w	80266b4 <__register_exitproc>
	...

08024b38 <__errno>:
 8024b38:	4b01      	ldr	r3, [pc, #4]	; (8024b40 <__errno+0x8>)
 8024b3a:	6818      	ldr	r0, [r3, #0]
 8024b3c:	4770      	bx	lr
 8024b3e:	bf00      	nop
 8024b40:	20000010 	.word	0x20000010

08024b44 <__libc_init_array>:
 8024b44:	b570      	push	{r4, r5, r6, lr}
 8024b46:	4d0d      	ldr	r5, [pc, #52]	; (8024b7c <__libc_init_array+0x38>)
 8024b48:	4c0d      	ldr	r4, [pc, #52]	; (8024b80 <__libc_init_array+0x3c>)
 8024b4a:	1b64      	subs	r4, r4, r5
 8024b4c:	10a4      	asrs	r4, r4, #2
 8024b4e:	2600      	movs	r6, #0
 8024b50:	42a6      	cmp	r6, r4
 8024b52:	d109      	bne.n	8024b68 <__libc_init_array+0x24>
 8024b54:	4d0b      	ldr	r5, [pc, #44]	; (8024b84 <__libc_init_array+0x40>)
 8024b56:	4c0c      	ldr	r4, [pc, #48]	; (8024b88 <__libc_init_array+0x44>)
 8024b58:	f004 fba8 	bl	80292ac <_init>
 8024b5c:	1b64      	subs	r4, r4, r5
 8024b5e:	10a4      	asrs	r4, r4, #2
 8024b60:	2600      	movs	r6, #0
 8024b62:	42a6      	cmp	r6, r4
 8024b64:	d105      	bne.n	8024b72 <__libc_init_array+0x2e>
 8024b66:	bd70      	pop	{r4, r5, r6, pc}
 8024b68:	f855 3b04 	ldr.w	r3, [r5], #4
 8024b6c:	4798      	blx	r3
 8024b6e:	3601      	adds	r6, #1
 8024b70:	e7ee      	b.n	8024b50 <__libc_init_array+0xc>
 8024b72:	f855 3b04 	ldr.w	r3, [r5], #4
 8024b76:	4798      	blx	r3
 8024b78:	3601      	adds	r6, #1
 8024b7a:	e7f2      	b.n	8024b62 <__libc_init_array+0x1e>
 8024b7c:	0802a694 	.word	0x0802a694
 8024b80:	0802a694 	.word	0x0802a694
 8024b84:	0802a694 	.word	0x0802a694
 8024b88:	0802a6d0 	.word	0x0802a6d0

08024b8c <isalnum>:
 8024b8c:	4b02      	ldr	r3, [pc, #8]	; (8024b98 <isalnum+0xc>)
 8024b8e:	4418      	add	r0, r3
 8024b90:	7840      	ldrb	r0, [r0, #1]
 8024b92:	f000 0007 	and.w	r0, r0, #7
 8024b96:	4770      	bx	lr
 8024b98:	0802a26d 	.word	0x0802a26d

08024b9c <isalpha>:
 8024b9c:	4b02      	ldr	r3, [pc, #8]	; (8024ba8 <isalpha+0xc>)
 8024b9e:	4418      	add	r0, r3
 8024ba0:	7840      	ldrb	r0, [r0, #1]
 8024ba2:	f000 0003 	and.w	r0, r0, #3
 8024ba6:	4770      	bx	lr
 8024ba8:	0802a26d 	.word	0x0802a26d

08024bac <isspace>:
 8024bac:	4b02      	ldr	r3, [pc, #8]	; (8024bb8 <isspace+0xc>)
 8024bae:	4418      	add	r0, r3
 8024bb0:	7840      	ldrb	r0, [r0, #1]
 8024bb2:	f000 0008 	and.w	r0, r0, #8
 8024bb6:	4770      	bx	lr
 8024bb8:	0802a26d 	.word	0x0802a26d

08024bbc <__itoa>:
 8024bbc:	1e93      	subs	r3, r2, #2
 8024bbe:	2b22      	cmp	r3, #34	; 0x22
 8024bc0:	b510      	push	{r4, lr}
 8024bc2:	460c      	mov	r4, r1
 8024bc4:	d904      	bls.n	8024bd0 <__itoa+0x14>
 8024bc6:	2300      	movs	r3, #0
 8024bc8:	700b      	strb	r3, [r1, #0]
 8024bca:	461c      	mov	r4, r3
 8024bcc:	4620      	mov	r0, r4
 8024bce:	bd10      	pop	{r4, pc}
 8024bd0:	2a0a      	cmp	r2, #10
 8024bd2:	d109      	bne.n	8024be8 <__itoa+0x2c>
 8024bd4:	2800      	cmp	r0, #0
 8024bd6:	da07      	bge.n	8024be8 <__itoa+0x2c>
 8024bd8:	232d      	movs	r3, #45	; 0x2d
 8024bda:	700b      	strb	r3, [r1, #0]
 8024bdc:	4240      	negs	r0, r0
 8024bde:	2101      	movs	r1, #1
 8024be0:	4421      	add	r1, r4
 8024be2:	f001 fceb 	bl	80265bc <__utoa>
 8024be6:	e7f1      	b.n	8024bcc <__itoa+0x10>
 8024be8:	2100      	movs	r1, #0
 8024bea:	e7f9      	b.n	8024be0 <__itoa+0x24>

08024bec <itoa>:
 8024bec:	f7ff bfe6 	b.w	8024bbc <__itoa>

08024bf0 <malloc>:
 8024bf0:	4b02      	ldr	r3, [pc, #8]	; (8024bfc <malloc+0xc>)
 8024bf2:	4601      	mov	r1, r0
 8024bf4:	6818      	ldr	r0, [r3, #0]
 8024bf6:	f000 b899 	b.w	8024d2c <_malloc_r>
 8024bfa:	bf00      	nop
 8024bfc:	20000010 	.word	0x20000010

08024c00 <free>:
 8024c00:	4b02      	ldr	r3, [pc, #8]	; (8024c0c <free+0xc>)
 8024c02:	4601      	mov	r1, r0
 8024c04:	6818      	ldr	r0, [r3, #0]
 8024c06:	f000 b841 	b.w	8024c8c <_free_r>
 8024c0a:	bf00      	nop
 8024c0c:	20000010 	.word	0x20000010

08024c10 <memcmp>:
 8024c10:	b530      	push	{r4, r5, lr}
 8024c12:	3901      	subs	r1, #1
 8024c14:	2400      	movs	r4, #0
 8024c16:	42a2      	cmp	r2, r4
 8024c18:	d101      	bne.n	8024c1e <memcmp+0xe>
 8024c1a:	2000      	movs	r0, #0
 8024c1c:	e005      	b.n	8024c2a <memcmp+0x1a>
 8024c1e:	5d03      	ldrb	r3, [r0, r4]
 8024c20:	3401      	adds	r4, #1
 8024c22:	5d0d      	ldrb	r5, [r1, r4]
 8024c24:	42ab      	cmp	r3, r5
 8024c26:	d0f6      	beq.n	8024c16 <memcmp+0x6>
 8024c28:	1b58      	subs	r0, r3, r5
 8024c2a:	bd30      	pop	{r4, r5, pc}

08024c2c <memcpy>:
 8024c2c:	440a      	add	r2, r1
 8024c2e:	4291      	cmp	r1, r2
 8024c30:	f100 33ff 	add.w	r3, r0, #4294967295
 8024c34:	d100      	bne.n	8024c38 <memcpy+0xc>
 8024c36:	4770      	bx	lr
 8024c38:	b510      	push	{r4, lr}
 8024c3a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8024c3e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8024c42:	4291      	cmp	r1, r2
 8024c44:	d1f9      	bne.n	8024c3a <memcpy+0xe>
 8024c46:	bd10      	pop	{r4, pc}

08024c48 <memmove>:
 8024c48:	4288      	cmp	r0, r1
 8024c4a:	b510      	push	{r4, lr}
 8024c4c:	eb01 0402 	add.w	r4, r1, r2
 8024c50:	d902      	bls.n	8024c58 <memmove+0x10>
 8024c52:	4284      	cmp	r4, r0
 8024c54:	4623      	mov	r3, r4
 8024c56:	d807      	bhi.n	8024c68 <memmove+0x20>
 8024c58:	1e43      	subs	r3, r0, #1
 8024c5a:	42a1      	cmp	r1, r4
 8024c5c:	d008      	beq.n	8024c70 <memmove+0x28>
 8024c5e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8024c62:	f803 2f01 	strb.w	r2, [r3, #1]!
 8024c66:	e7f8      	b.n	8024c5a <memmove+0x12>
 8024c68:	4402      	add	r2, r0
 8024c6a:	4601      	mov	r1, r0
 8024c6c:	428a      	cmp	r2, r1
 8024c6e:	d100      	bne.n	8024c72 <memmove+0x2a>
 8024c70:	bd10      	pop	{r4, pc}
 8024c72:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8024c76:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8024c7a:	e7f7      	b.n	8024c6c <memmove+0x24>

08024c7c <memset>:
 8024c7c:	4402      	add	r2, r0
 8024c7e:	4603      	mov	r3, r0
 8024c80:	4293      	cmp	r3, r2
 8024c82:	d100      	bne.n	8024c86 <memset+0xa>
 8024c84:	4770      	bx	lr
 8024c86:	f803 1b01 	strb.w	r1, [r3], #1
 8024c8a:	e7f9      	b.n	8024c80 <memset+0x4>

08024c8c <_free_r>:
 8024c8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8024c8e:	2900      	cmp	r1, #0
 8024c90:	d048      	beq.n	8024d24 <_free_r+0x98>
 8024c92:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024c96:	9001      	str	r0, [sp, #4]
 8024c98:	2b00      	cmp	r3, #0
 8024c9a:	f1a1 0404 	sub.w	r4, r1, #4
 8024c9e:	bfb8      	it	lt
 8024ca0:	18e4      	addlt	r4, r4, r3
 8024ca2:	f002 ff6b 	bl	8027b7c <__malloc_lock>
 8024ca6:	4a20      	ldr	r2, [pc, #128]	; (8024d28 <_free_r+0x9c>)
 8024ca8:	9801      	ldr	r0, [sp, #4]
 8024caa:	6813      	ldr	r3, [r2, #0]
 8024cac:	4615      	mov	r5, r2
 8024cae:	b933      	cbnz	r3, 8024cbe <_free_r+0x32>
 8024cb0:	6063      	str	r3, [r4, #4]
 8024cb2:	6014      	str	r4, [r2, #0]
 8024cb4:	b003      	add	sp, #12
 8024cb6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8024cba:	f002 bf65 	b.w	8027b88 <__malloc_unlock>
 8024cbe:	42a3      	cmp	r3, r4
 8024cc0:	d90b      	bls.n	8024cda <_free_r+0x4e>
 8024cc2:	6821      	ldr	r1, [r4, #0]
 8024cc4:	1862      	adds	r2, r4, r1
 8024cc6:	4293      	cmp	r3, r2
 8024cc8:	bf04      	itt	eq
 8024cca:	681a      	ldreq	r2, [r3, #0]
 8024ccc:	685b      	ldreq	r3, [r3, #4]
 8024cce:	6063      	str	r3, [r4, #4]
 8024cd0:	bf04      	itt	eq
 8024cd2:	1852      	addeq	r2, r2, r1
 8024cd4:	6022      	streq	r2, [r4, #0]
 8024cd6:	602c      	str	r4, [r5, #0]
 8024cd8:	e7ec      	b.n	8024cb4 <_free_r+0x28>
 8024cda:	461a      	mov	r2, r3
 8024cdc:	685b      	ldr	r3, [r3, #4]
 8024cde:	b10b      	cbz	r3, 8024ce4 <_free_r+0x58>
 8024ce0:	42a3      	cmp	r3, r4
 8024ce2:	d9fa      	bls.n	8024cda <_free_r+0x4e>
 8024ce4:	6811      	ldr	r1, [r2, #0]
 8024ce6:	1855      	adds	r5, r2, r1
 8024ce8:	42a5      	cmp	r5, r4
 8024cea:	d10b      	bne.n	8024d04 <_free_r+0x78>
 8024cec:	6824      	ldr	r4, [r4, #0]
 8024cee:	4421      	add	r1, r4
 8024cf0:	1854      	adds	r4, r2, r1
 8024cf2:	42a3      	cmp	r3, r4
 8024cf4:	6011      	str	r1, [r2, #0]
 8024cf6:	d1dd      	bne.n	8024cb4 <_free_r+0x28>
 8024cf8:	681c      	ldr	r4, [r3, #0]
 8024cfa:	685b      	ldr	r3, [r3, #4]
 8024cfc:	6053      	str	r3, [r2, #4]
 8024cfe:	4421      	add	r1, r4
 8024d00:	6011      	str	r1, [r2, #0]
 8024d02:	e7d7      	b.n	8024cb4 <_free_r+0x28>
 8024d04:	d902      	bls.n	8024d0c <_free_r+0x80>
 8024d06:	230c      	movs	r3, #12
 8024d08:	6003      	str	r3, [r0, #0]
 8024d0a:	e7d3      	b.n	8024cb4 <_free_r+0x28>
 8024d0c:	6825      	ldr	r5, [r4, #0]
 8024d0e:	1961      	adds	r1, r4, r5
 8024d10:	428b      	cmp	r3, r1
 8024d12:	bf04      	itt	eq
 8024d14:	6819      	ldreq	r1, [r3, #0]
 8024d16:	685b      	ldreq	r3, [r3, #4]
 8024d18:	6063      	str	r3, [r4, #4]
 8024d1a:	bf04      	itt	eq
 8024d1c:	1949      	addeq	r1, r1, r5
 8024d1e:	6021      	streq	r1, [r4, #0]
 8024d20:	6054      	str	r4, [r2, #4]
 8024d22:	e7c7      	b.n	8024cb4 <_free_r+0x28>
 8024d24:	b003      	add	sp, #12
 8024d26:	bd30      	pop	{r4, r5, pc}
 8024d28:	20000840 	.word	0x20000840

08024d2c <_malloc_r>:
 8024d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024d2e:	1ccd      	adds	r5, r1, #3
 8024d30:	f025 0503 	bic.w	r5, r5, #3
 8024d34:	3508      	adds	r5, #8
 8024d36:	2d0c      	cmp	r5, #12
 8024d38:	bf38      	it	cc
 8024d3a:	250c      	movcc	r5, #12
 8024d3c:	2d00      	cmp	r5, #0
 8024d3e:	4606      	mov	r6, r0
 8024d40:	db01      	blt.n	8024d46 <_malloc_r+0x1a>
 8024d42:	42a9      	cmp	r1, r5
 8024d44:	d903      	bls.n	8024d4e <_malloc_r+0x22>
 8024d46:	230c      	movs	r3, #12
 8024d48:	6033      	str	r3, [r6, #0]
 8024d4a:	2000      	movs	r0, #0
 8024d4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024d4e:	f002 ff15 	bl	8027b7c <__malloc_lock>
 8024d52:	4921      	ldr	r1, [pc, #132]	; (8024dd8 <_malloc_r+0xac>)
 8024d54:	680a      	ldr	r2, [r1, #0]
 8024d56:	4614      	mov	r4, r2
 8024d58:	b99c      	cbnz	r4, 8024d82 <_malloc_r+0x56>
 8024d5a:	4f20      	ldr	r7, [pc, #128]	; (8024ddc <_malloc_r+0xb0>)
 8024d5c:	683b      	ldr	r3, [r7, #0]
 8024d5e:	b923      	cbnz	r3, 8024d6a <_malloc_r+0x3e>
 8024d60:	4621      	mov	r1, r4
 8024d62:	4630      	mov	r0, r6
 8024d64:	f000 fca6 	bl	80256b4 <_sbrk_r>
 8024d68:	6038      	str	r0, [r7, #0]
 8024d6a:	4629      	mov	r1, r5
 8024d6c:	4630      	mov	r0, r6
 8024d6e:	f000 fca1 	bl	80256b4 <_sbrk_r>
 8024d72:	1c43      	adds	r3, r0, #1
 8024d74:	d123      	bne.n	8024dbe <_malloc_r+0x92>
 8024d76:	230c      	movs	r3, #12
 8024d78:	6033      	str	r3, [r6, #0]
 8024d7a:	4630      	mov	r0, r6
 8024d7c:	f002 ff04 	bl	8027b88 <__malloc_unlock>
 8024d80:	e7e3      	b.n	8024d4a <_malloc_r+0x1e>
 8024d82:	6823      	ldr	r3, [r4, #0]
 8024d84:	1b5b      	subs	r3, r3, r5
 8024d86:	d417      	bmi.n	8024db8 <_malloc_r+0x8c>
 8024d88:	2b0b      	cmp	r3, #11
 8024d8a:	d903      	bls.n	8024d94 <_malloc_r+0x68>
 8024d8c:	6023      	str	r3, [r4, #0]
 8024d8e:	441c      	add	r4, r3
 8024d90:	6025      	str	r5, [r4, #0]
 8024d92:	e004      	b.n	8024d9e <_malloc_r+0x72>
 8024d94:	6863      	ldr	r3, [r4, #4]
 8024d96:	42a2      	cmp	r2, r4
 8024d98:	bf0c      	ite	eq
 8024d9a:	600b      	streq	r3, [r1, #0]
 8024d9c:	6053      	strne	r3, [r2, #4]
 8024d9e:	4630      	mov	r0, r6
 8024da0:	f002 fef2 	bl	8027b88 <__malloc_unlock>
 8024da4:	f104 000b 	add.w	r0, r4, #11
 8024da8:	1d23      	adds	r3, r4, #4
 8024daa:	f020 0007 	bic.w	r0, r0, #7
 8024dae:	1ac2      	subs	r2, r0, r3
 8024db0:	d0cc      	beq.n	8024d4c <_malloc_r+0x20>
 8024db2:	1a1b      	subs	r3, r3, r0
 8024db4:	50a3      	str	r3, [r4, r2]
 8024db6:	e7c9      	b.n	8024d4c <_malloc_r+0x20>
 8024db8:	4622      	mov	r2, r4
 8024dba:	6864      	ldr	r4, [r4, #4]
 8024dbc:	e7cc      	b.n	8024d58 <_malloc_r+0x2c>
 8024dbe:	1cc4      	adds	r4, r0, #3
 8024dc0:	f024 0403 	bic.w	r4, r4, #3
 8024dc4:	42a0      	cmp	r0, r4
 8024dc6:	d0e3      	beq.n	8024d90 <_malloc_r+0x64>
 8024dc8:	1a21      	subs	r1, r4, r0
 8024dca:	4630      	mov	r0, r6
 8024dcc:	f000 fc72 	bl	80256b4 <_sbrk_r>
 8024dd0:	3001      	adds	r0, #1
 8024dd2:	d1dd      	bne.n	8024d90 <_malloc_r+0x64>
 8024dd4:	e7cf      	b.n	8024d76 <_malloc_r+0x4a>
 8024dd6:	bf00      	nop
 8024dd8:	20000840 	.word	0x20000840
 8024ddc:	20000844 	.word	0x20000844

08024de0 <__cvt>:
 8024de0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8024de4:	ec55 4b10 	vmov	r4, r5, d0
 8024de8:	2d00      	cmp	r5, #0
 8024dea:	460e      	mov	r6, r1
 8024dec:	4619      	mov	r1, r3
 8024dee:	462b      	mov	r3, r5
 8024df0:	bfbb      	ittet	lt
 8024df2:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8024df6:	461d      	movlt	r5, r3
 8024df8:	2300      	movge	r3, #0
 8024dfa:	232d      	movlt	r3, #45	; 0x2d
 8024dfc:	700b      	strb	r3, [r1, #0]
 8024dfe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024e00:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8024e04:	4691      	mov	r9, r2
 8024e06:	f023 0820 	bic.w	r8, r3, #32
 8024e0a:	bfbc      	itt	lt
 8024e0c:	4622      	movlt	r2, r4
 8024e0e:	4614      	movlt	r4, r2
 8024e10:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8024e14:	d005      	beq.n	8024e22 <__cvt+0x42>
 8024e16:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8024e1a:	d100      	bne.n	8024e1e <__cvt+0x3e>
 8024e1c:	3601      	adds	r6, #1
 8024e1e:	2102      	movs	r1, #2
 8024e20:	e000      	b.n	8024e24 <__cvt+0x44>
 8024e22:	2103      	movs	r1, #3
 8024e24:	ab03      	add	r3, sp, #12
 8024e26:	9301      	str	r3, [sp, #4]
 8024e28:	ab02      	add	r3, sp, #8
 8024e2a:	9300      	str	r3, [sp, #0]
 8024e2c:	ec45 4b10 	vmov	d0, r4, r5
 8024e30:	4653      	mov	r3, sl
 8024e32:	4632      	mov	r2, r6
 8024e34:	f001 fd2c 	bl	8026890 <_dtoa_r>
 8024e38:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8024e3c:	4607      	mov	r7, r0
 8024e3e:	d102      	bne.n	8024e46 <__cvt+0x66>
 8024e40:	f019 0f01 	tst.w	r9, #1
 8024e44:	d022      	beq.n	8024e8c <__cvt+0xac>
 8024e46:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8024e4a:	eb07 0906 	add.w	r9, r7, r6
 8024e4e:	d110      	bne.n	8024e72 <__cvt+0x92>
 8024e50:	783b      	ldrb	r3, [r7, #0]
 8024e52:	2b30      	cmp	r3, #48	; 0x30
 8024e54:	d10a      	bne.n	8024e6c <__cvt+0x8c>
 8024e56:	2200      	movs	r2, #0
 8024e58:	2300      	movs	r3, #0
 8024e5a:	4620      	mov	r0, r4
 8024e5c:	4629      	mov	r1, r5
 8024e5e:	f7db fe53 	bl	8000b08 <__aeabi_dcmpeq>
 8024e62:	b918      	cbnz	r0, 8024e6c <__cvt+0x8c>
 8024e64:	f1c6 0601 	rsb	r6, r6, #1
 8024e68:	f8ca 6000 	str.w	r6, [sl]
 8024e6c:	f8da 3000 	ldr.w	r3, [sl]
 8024e70:	4499      	add	r9, r3
 8024e72:	2200      	movs	r2, #0
 8024e74:	2300      	movs	r3, #0
 8024e76:	4620      	mov	r0, r4
 8024e78:	4629      	mov	r1, r5
 8024e7a:	f7db fe45 	bl	8000b08 <__aeabi_dcmpeq>
 8024e7e:	b108      	cbz	r0, 8024e84 <__cvt+0xa4>
 8024e80:	f8cd 900c 	str.w	r9, [sp, #12]
 8024e84:	2230      	movs	r2, #48	; 0x30
 8024e86:	9b03      	ldr	r3, [sp, #12]
 8024e88:	454b      	cmp	r3, r9
 8024e8a:	d307      	bcc.n	8024e9c <__cvt+0xbc>
 8024e8c:	9b03      	ldr	r3, [sp, #12]
 8024e8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024e90:	1bdb      	subs	r3, r3, r7
 8024e92:	4638      	mov	r0, r7
 8024e94:	6013      	str	r3, [r2, #0]
 8024e96:	b004      	add	sp, #16
 8024e98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024e9c:	1c59      	adds	r1, r3, #1
 8024e9e:	9103      	str	r1, [sp, #12]
 8024ea0:	701a      	strb	r2, [r3, #0]
 8024ea2:	e7f0      	b.n	8024e86 <__cvt+0xa6>

08024ea4 <__exponent>:
 8024ea4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8024ea6:	4603      	mov	r3, r0
 8024ea8:	2900      	cmp	r1, #0
 8024eaa:	bfb8      	it	lt
 8024eac:	4249      	neglt	r1, r1
 8024eae:	f803 2b02 	strb.w	r2, [r3], #2
 8024eb2:	bfb4      	ite	lt
 8024eb4:	222d      	movlt	r2, #45	; 0x2d
 8024eb6:	222b      	movge	r2, #43	; 0x2b
 8024eb8:	2909      	cmp	r1, #9
 8024eba:	7042      	strb	r2, [r0, #1]
 8024ebc:	dd2a      	ble.n	8024f14 <__exponent+0x70>
 8024ebe:	f10d 0407 	add.w	r4, sp, #7
 8024ec2:	46a4      	mov	ip, r4
 8024ec4:	270a      	movs	r7, #10
 8024ec6:	46a6      	mov	lr, r4
 8024ec8:	460a      	mov	r2, r1
 8024eca:	fb91 f6f7 	sdiv	r6, r1, r7
 8024ece:	fb07 1516 	mls	r5, r7, r6, r1
 8024ed2:	3530      	adds	r5, #48	; 0x30
 8024ed4:	2a63      	cmp	r2, #99	; 0x63
 8024ed6:	f104 34ff 	add.w	r4, r4, #4294967295
 8024eda:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8024ede:	4631      	mov	r1, r6
 8024ee0:	dcf1      	bgt.n	8024ec6 <__exponent+0x22>
 8024ee2:	3130      	adds	r1, #48	; 0x30
 8024ee4:	f1ae 0502 	sub.w	r5, lr, #2
 8024ee8:	f804 1c01 	strb.w	r1, [r4, #-1]
 8024eec:	1c44      	adds	r4, r0, #1
 8024eee:	4629      	mov	r1, r5
 8024ef0:	4561      	cmp	r1, ip
 8024ef2:	d30a      	bcc.n	8024f0a <__exponent+0x66>
 8024ef4:	f10d 0209 	add.w	r2, sp, #9
 8024ef8:	eba2 020e 	sub.w	r2, r2, lr
 8024efc:	4565      	cmp	r5, ip
 8024efe:	bf88      	it	hi
 8024f00:	2200      	movhi	r2, #0
 8024f02:	4413      	add	r3, r2
 8024f04:	1a18      	subs	r0, r3, r0
 8024f06:	b003      	add	sp, #12
 8024f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024f0a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8024f0e:	f804 2f01 	strb.w	r2, [r4, #1]!
 8024f12:	e7ed      	b.n	8024ef0 <__exponent+0x4c>
 8024f14:	2330      	movs	r3, #48	; 0x30
 8024f16:	3130      	adds	r1, #48	; 0x30
 8024f18:	7083      	strb	r3, [r0, #2]
 8024f1a:	70c1      	strb	r1, [r0, #3]
 8024f1c:	1d03      	adds	r3, r0, #4
 8024f1e:	e7f1      	b.n	8024f04 <__exponent+0x60>

08024f20 <_printf_float>:
 8024f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f24:	ed2d 8b02 	vpush	{d8}
 8024f28:	b08d      	sub	sp, #52	; 0x34
 8024f2a:	460c      	mov	r4, r1
 8024f2c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8024f30:	4616      	mov	r6, r2
 8024f32:	461f      	mov	r7, r3
 8024f34:	4605      	mov	r5, r0
 8024f36:	f002 fe07 	bl	8027b48 <_localeconv_r>
 8024f3a:	f8d0 a000 	ldr.w	sl, [r0]
 8024f3e:	4650      	mov	r0, sl
 8024f40:	f7db f9b6 	bl	80002b0 <strlen>
 8024f44:	2300      	movs	r3, #0
 8024f46:	930a      	str	r3, [sp, #40]	; 0x28
 8024f48:	6823      	ldr	r3, [r4, #0]
 8024f4a:	9305      	str	r3, [sp, #20]
 8024f4c:	f8d8 3000 	ldr.w	r3, [r8]
 8024f50:	f894 b018 	ldrb.w	fp, [r4, #24]
 8024f54:	3307      	adds	r3, #7
 8024f56:	f023 0307 	bic.w	r3, r3, #7
 8024f5a:	f103 0208 	add.w	r2, r3, #8
 8024f5e:	f8c8 2000 	str.w	r2, [r8]
 8024f62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024f66:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8024f6a:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8024f6e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8024f72:	9307      	str	r3, [sp, #28]
 8024f74:	f8cd 8018 	str.w	r8, [sp, #24]
 8024f78:	ee08 0a10 	vmov	s16, r0
 8024f7c:	4b9f      	ldr	r3, [pc, #636]	; (80251fc <_printf_float+0x2dc>)
 8024f7e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8024f82:	f04f 32ff 	mov.w	r2, #4294967295
 8024f86:	f7db fdf1 	bl	8000b6c <__aeabi_dcmpun>
 8024f8a:	bb88      	cbnz	r0, 8024ff0 <_printf_float+0xd0>
 8024f8c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8024f90:	4b9a      	ldr	r3, [pc, #616]	; (80251fc <_printf_float+0x2dc>)
 8024f92:	f04f 32ff 	mov.w	r2, #4294967295
 8024f96:	f7db fdcb 	bl	8000b30 <__aeabi_dcmple>
 8024f9a:	bb48      	cbnz	r0, 8024ff0 <_printf_float+0xd0>
 8024f9c:	2200      	movs	r2, #0
 8024f9e:	2300      	movs	r3, #0
 8024fa0:	4640      	mov	r0, r8
 8024fa2:	4649      	mov	r1, r9
 8024fa4:	f7db fdba 	bl	8000b1c <__aeabi_dcmplt>
 8024fa8:	b110      	cbz	r0, 8024fb0 <_printf_float+0x90>
 8024faa:	232d      	movs	r3, #45	; 0x2d
 8024fac:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8024fb0:	4b93      	ldr	r3, [pc, #588]	; (8025200 <_printf_float+0x2e0>)
 8024fb2:	4894      	ldr	r0, [pc, #592]	; (8025204 <_printf_float+0x2e4>)
 8024fb4:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8024fb8:	bf94      	ite	ls
 8024fba:	4698      	movls	r8, r3
 8024fbc:	4680      	movhi	r8, r0
 8024fbe:	2303      	movs	r3, #3
 8024fc0:	6123      	str	r3, [r4, #16]
 8024fc2:	9b05      	ldr	r3, [sp, #20]
 8024fc4:	f023 0204 	bic.w	r2, r3, #4
 8024fc8:	6022      	str	r2, [r4, #0]
 8024fca:	f04f 0900 	mov.w	r9, #0
 8024fce:	9700      	str	r7, [sp, #0]
 8024fd0:	4633      	mov	r3, r6
 8024fd2:	aa0b      	add	r2, sp, #44	; 0x2c
 8024fd4:	4621      	mov	r1, r4
 8024fd6:	4628      	mov	r0, r5
 8024fd8:	f000 f9d8 	bl	802538c <_printf_common>
 8024fdc:	3001      	adds	r0, #1
 8024fde:	f040 8090 	bne.w	8025102 <_printf_float+0x1e2>
 8024fe2:	f04f 30ff 	mov.w	r0, #4294967295
 8024fe6:	b00d      	add	sp, #52	; 0x34
 8024fe8:	ecbd 8b02 	vpop	{d8}
 8024fec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024ff0:	4642      	mov	r2, r8
 8024ff2:	464b      	mov	r3, r9
 8024ff4:	4640      	mov	r0, r8
 8024ff6:	4649      	mov	r1, r9
 8024ff8:	f7db fdb8 	bl	8000b6c <__aeabi_dcmpun>
 8024ffc:	b140      	cbz	r0, 8025010 <_printf_float+0xf0>
 8024ffe:	464b      	mov	r3, r9
 8025000:	2b00      	cmp	r3, #0
 8025002:	bfbc      	itt	lt
 8025004:	232d      	movlt	r3, #45	; 0x2d
 8025006:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 802500a:	487f      	ldr	r0, [pc, #508]	; (8025208 <_printf_float+0x2e8>)
 802500c:	4b7f      	ldr	r3, [pc, #508]	; (802520c <_printf_float+0x2ec>)
 802500e:	e7d1      	b.n	8024fb4 <_printf_float+0x94>
 8025010:	6863      	ldr	r3, [r4, #4]
 8025012:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8025016:	9206      	str	r2, [sp, #24]
 8025018:	1c5a      	adds	r2, r3, #1
 802501a:	d13f      	bne.n	802509c <_printf_float+0x17c>
 802501c:	2306      	movs	r3, #6
 802501e:	6063      	str	r3, [r4, #4]
 8025020:	9b05      	ldr	r3, [sp, #20]
 8025022:	6861      	ldr	r1, [r4, #4]
 8025024:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8025028:	2300      	movs	r3, #0
 802502a:	9303      	str	r3, [sp, #12]
 802502c:	ab0a      	add	r3, sp, #40	; 0x28
 802502e:	e9cd b301 	strd	fp, r3, [sp, #4]
 8025032:	ab09      	add	r3, sp, #36	; 0x24
 8025034:	ec49 8b10 	vmov	d0, r8, r9
 8025038:	9300      	str	r3, [sp, #0]
 802503a:	6022      	str	r2, [r4, #0]
 802503c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8025040:	4628      	mov	r0, r5
 8025042:	f7ff fecd 	bl	8024de0 <__cvt>
 8025046:	9b06      	ldr	r3, [sp, #24]
 8025048:	9909      	ldr	r1, [sp, #36]	; 0x24
 802504a:	2b47      	cmp	r3, #71	; 0x47
 802504c:	4680      	mov	r8, r0
 802504e:	d108      	bne.n	8025062 <_printf_float+0x142>
 8025050:	1cc8      	adds	r0, r1, #3
 8025052:	db02      	blt.n	802505a <_printf_float+0x13a>
 8025054:	6863      	ldr	r3, [r4, #4]
 8025056:	4299      	cmp	r1, r3
 8025058:	dd41      	ble.n	80250de <_printf_float+0x1be>
 802505a:	f1ab 0b02 	sub.w	fp, fp, #2
 802505e:	fa5f fb8b 	uxtb.w	fp, fp
 8025062:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8025066:	d820      	bhi.n	80250aa <_printf_float+0x18a>
 8025068:	3901      	subs	r1, #1
 802506a:	465a      	mov	r2, fp
 802506c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8025070:	9109      	str	r1, [sp, #36]	; 0x24
 8025072:	f7ff ff17 	bl	8024ea4 <__exponent>
 8025076:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025078:	1813      	adds	r3, r2, r0
 802507a:	2a01      	cmp	r2, #1
 802507c:	4681      	mov	r9, r0
 802507e:	6123      	str	r3, [r4, #16]
 8025080:	dc02      	bgt.n	8025088 <_printf_float+0x168>
 8025082:	6822      	ldr	r2, [r4, #0]
 8025084:	07d2      	lsls	r2, r2, #31
 8025086:	d501      	bpl.n	802508c <_printf_float+0x16c>
 8025088:	3301      	adds	r3, #1
 802508a:	6123      	str	r3, [r4, #16]
 802508c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8025090:	2b00      	cmp	r3, #0
 8025092:	d09c      	beq.n	8024fce <_printf_float+0xae>
 8025094:	232d      	movs	r3, #45	; 0x2d
 8025096:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802509a:	e798      	b.n	8024fce <_printf_float+0xae>
 802509c:	9a06      	ldr	r2, [sp, #24]
 802509e:	2a47      	cmp	r2, #71	; 0x47
 80250a0:	d1be      	bne.n	8025020 <_printf_float+0x100>
 80250a2:	2b00      	cmp	r3, #0
 80250a4:	d1bc      	bne.n	8025020 <_printf_float+0x100>
 80250a6:	2301      	movs	r3, #1
 80250a8:	e7b9      	b.n	802501e <_printf_float+0xfe>
 80250aa:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80250ae:	d118      	bne.n	80250e2 <_printf_float+0x1c2>
 80250b0:	2900      	cmp	r1, #0
 80250b2:	6863      	ldr	r3, [r4, #4]
 80250b4:	dd0b      	ble.n	80250ce <_printf_float+0x1ae>
 80250b6:	6121      	str	r1, [r4, #16]
 80250b8:	b913      	cbnz	r3, 80250c0 <_printf_float+0x1a0>
 80250ba:	6822      	ldr	r2, [r4, #0]
 80250bc:	07d0      	lsls	r0, r2, #31
 80250be:	d502      	bpl.n	80250c6 <_printf_float+0x1a6>
 80250c0:	3301      	adds	r3, #1
 80250c2:	440b      	add	r3, r1
 80250c4:	6123      	str	r3, [r4, #16]
 80250c6:	65a1      	str	r1, [r4, #88]	; 0x58
 80250c8:	f04f 0900 	mov.w	r9, #0
 80250cc:	e7de      	b.n	802508c <_printf_float+0x16c>
 80250ce:	b913      	cbnz	r3, 80250d6 <_printf_float+0x1b6>
 80250d0:	6822      	ldr	r2, [r4, #0]
 80250d2:	07d2      	lsls	r2, r2, #31
 80250d4:	d501      	bpl.n	80250da <_printf_float+0x1ba>
 80250d6:	3302      	adds	r3, #2
 80250d8:	e7f4      	b.n	80250c4 <_printf_float+0x1a4>
 80250da:	2301      	movs	r3, #1
 80250dc:	e7f2      	b.n	80250c4 <_printf_float+0x1a4>
 80250de:	f04f 0b67 	mov.w	fp, #103	; 0x67
 80250e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80250e4:	4299      	cmp	r1, r3
 80250e6:	db05      	blt.n	80250f4 <_printf_float+0x1d4>
 80250e8:	6823      	ldr	r3, [r4, #0]
 80250ea:	6121      	str	r1, [r4, #16]
 80250ec:	07d8      	lsls	r0, r3, #31
 80250ee:	d5ea      	bpl.n	80250c6 <_printf_float+0x1a6>
 80250f0:	1c4b      	adds	r3, r1, #1
 80250f2:	e7e7      	b.n	80250c4 <_printf_float+0x1a4>
 80250f4:	2900      	cmp	r1, #0
 80250f6:	bfd4      	ite	le
 80250f8:	f1c1 0202 	rsble	r2, r1, #2
 80250fc:	2201      	movgt	r2, #1
 80250fe:	4413      	add	r3, r2
 8025100:	e7e0      	b.n	80250c4 <_printf_float+0x1a4>
 8025102:	6823      	ldr	r3, [r4, #0]
 8025104:	055a      	lsls	r2, r3, #21
 8025106:	d407      	bmi.n	8025118 <_printf_float+0x1f8>
 8025108:	6923      	ldr	r3, [r4, #16]
 802510a:	4642      	mov	r2, r8
 802510c:	4631      	mov	r1, r6
 802510e:	4628      	mov	r0, r5
 8025110:	47b8      	blx	r7
 8025112:	3001      	adds	r0, #1
 8025114:	d12c      	bne.n	8025170 <_printf_float+0x250>
 8025116:	e764      	b.n	8024fe2 <_printf_float+0xc2>
 8025118:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 802511c:	f240 80e0 	bls.w	80252e0 <_printf_float+0x3c0>
 8025120:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8025124:	2200      	movs	r2, #0
 8025126:	2300      	movs	r3, #0
 8025128:	f7db fcee 	bl	8000b08 <__aeabi_dcmpeq>
 802512c:	2800      	cmp	r0, #0
 802512e:	d034      	beq.n	802519a <_printf_float+0x27a>
 8025130:	4a37      	ldr	r2, [pc, #220]	; (8025210 <_printf_float+0x2f0>)
 8025132:	2301      	movs	r3, #1
 8025134:	4631      	mov	r1, r6
 8025136:	4628      	mov	r0, r5
 8025138:	47b8      	blx	r7
 802513a:	3001      	adds	r0, #1
 802513c:	f43f af51 	beq.w	8024fe2 <_printf_float+0xc2>
 8025140:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025144:	429a      	cmp	r2, r3
 8025146:	db02      	blt.n	802514e <_printf_float+0x22e>
 8025148:	6823      	ldr	r3, [r4, #0]
 802514a:	07d8      	lsls	r0, r3, #31
 802514c:	d510      	bpl.n	8025170 <_printf_float+0x250>
 802514e:	ee18 3a10 	vmov	r3, s16
 8025152:	4652      	mov	r2, sl
 8025154:	4631      	mov	r1, r6
 8025156:	4628      	mov	r0, r5
 8025158:	47b8      	blx	r7
 802515a:	3001      	adds	r0, #1
 802515c:	f43f af41 	beq.w	8024fe2 <_printf_float+0xc2>
 8025160:	f04f 0800 	mov.w	r8, #0
 8025164:	f104 091a 	add.w	r9, r4, #26
 8025168:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802516a:	3b01      	subs	r3, #1
 802516c:	4543      	cmp	r3, r8
 802516e:	dc09      	bgt.n	8025184 <_printf_float+0x264>
 8025170:	6823      	ldr	r3, [r4, #0]
 8025172:	079b      	lsls	r3, r3, #30
 8025174:	f100 8105 	bmi.w	8025382 <_printf_float+0x462>
 8025178:	68e0      	ldr	r0, [r4, #12]
 802517a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802517c:	4298      	cmp	r0, r3
 802517e:	bfb8      	it	lt
 8025180:	4618      	movlt	r0, r3
 8025182:	e730      	b.n	8024fe6 <_printf_float+0xc6>
 8025184:	2301      	movs	r3, #1
 8025186:	464a      	mov	r2, r9
 8025188:	4631      	mov	r1, r6
 802518a:	4628      	mov	r0, r5
 802518c:	47b8      	blx	r7
 802518e:	3001      	adds	r0, #1
 8025190:	f43f af27 	beq.w	8024fe2 <_printf_float+0xc2>
 8025194:	f108 0801 	add.w	r8, r8, #1
 8025198:	e7e6      	b.n	8025168 <_printf_float+0x248>
 802519a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802519c:	2b00      	cmp	r3, #0
 802519e:	dc39      	bgt.n	8025214 <_printf_float+0x2f4>
 80251a0:	4a1b      	ldr	r2, [pc, #108]	; (8025210 <_printf_float+0x2f0>)
 80251a2:	2301      	movs	r3, #1
 80251a4:	4631      	mov	r1, r6
 80251a6:	4628      	mov	r0, r5
 80251a8:	47b8      	blx	r7
 80251aa:	3001      	adds	r0, #1
 80251ac:	f43f af19 	beq.w	8024fe2 <_printf_float+0xc2>
 80251b0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80251b4:	4313      	orrs	r3, r2
 80251b6:	d102      	bne.n	80251be <_printf_float+0x29e>
 80251b8:	6823      	ldr	r3, [r4, #0]
 80251ba:	07d9      	lsls	r1, r3, #31
 80251bc:	d5d8      	bpl.n	8025170 <_printf_float+0x250>
 80251be:	ee18 3a10 	vmov	r3, s16
 80251c2:	4652      	mov	r2, sl
 80251c4:	4631      	mov	r1, r6
 80251c6:	4628      	mov	r0, r5
 80251c8:	47b8      	blx	r7
 80251ca:	3001      	adds	r0, #1
 80251cc:	f43f af09 	beq.w	8024fe2 <_printf_float+0xc2>
 80251d0:	f04f 0900 	mov.w	r9, #0
 80251d4:	f104 0a1a 	add.w	sl, r4, #26
 80251d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80251da:	425b      	negs	r3, r3
 80251dc:	454b      	cmp	r3, r9
 80251de:	dc01      	bgt.n	80251e4 <_printf_float+0x2c4>
 80251e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80251e2:	e792      	b.n	802510a <_printf_float+0x1ea>
 80251e4:	2301      	movs	r3, #1
 80251e6:	4652      	mov	r2, sl
 80251e8:	4631      	mov	r1, r6
 80251ea:	4628      	mov	r0, r5
 80251ec:	47b8      	blx	r7
 80251ee:	3001      	adds	r0, #1
 80251f0:	f43f aef7 	beq.w	8024fe2 <_printf_float+0xc2>
 80251f4:	f109 0901 	add.w	r9, r9, #1
 80251f8:	e7ee      	b.n	80251d8 <_printf_float+0x2b8>
 80251fa:	bf00      	nop
 80251fc:	7fefffff 	.word	0x7fefffff
 8025200:	0802a1c4 	.word	0x0802a1c4
 8025204:	0802a1c8 	.word	0x0802a1c8
 8025208:	0802a1d0 	.word	0x0802a1d0
 802520c:	0802a1cc 	.word	0x0802a1cc
 8025210:	0802a1d4 	.word	0x0802a1d4
 8025214:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025216:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8025218:	429a      	cmp	r2, r3
 802521a:	bfa8      	it	ge
 802521c:	461a      	movge	r2, r3
 802521e:	2a00      	cmp	r2, #0
 8025220:	4691      	mov	r9, r2
 8025222:	dc37      	bgt.n	8025294 <_printf_float+0x374>
 8025224:	f04f 0b00 	mov.w	fp, #0
 8025228:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802522c:	f104 021a 	add.w	r2, r4, #26
 8025230:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8025232:	9305      	str	r3, [sp, #20]
 8025234:	eba3 0309 	sub.w	r3, r3, r9
 8025238:	455b      	cmp	r3, fp
 802523a:	dc33      	bgt.n	80252a4 <_printf_float+0x384>
 802523c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025240:	429a      	cmp	r2, r3
 8025242:	db3b      	blt.n	80252bc <_printf_float+0x39c>
 8025244:	6823      	ldr	r3, [r4, #0]
 8025246:	07da      	lsls	r2, r3, #31
 8025248:	d438      	bmi.n	80252bc <_printf_float+0x39c>
 802524a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802524c:	9b05      	ldr	r3, [sp, #20]
 802524e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025250:	1ad3      	subs	r3, r2, r3
 8025252:	eba2 0901 	sub.w	r9, r2, r1
 8025256:	4599      	cmp	r9, r3
 8025258:	bfa8      	it	ge
 802525a:	4699      	movge	r9, r3
 802525c:	f1b9 0f00 	cmp.w	r9, #0
 8025260:	dc35      	bgt.n	80252ce <_printf_float+0x3ae>
 8025262:	f04f 0800 	mov.w	r8, #0
 8025266:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 802526a:	f104 0a1a 	add.w	sl, r4, #26
 802526e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8025272:	1a9b      	subs	r3, r3, r2
 8025274:	eba3 0309 	sub.w	r3, r3, r9
 8025278:	4543      	cmp	r3, r8
 802527a:	f77f af79 	ble.w	8025170 <_printf_float+0x250>
 802527e:	2301      	movs	r3, #1
 8025280:	4652      	mov	r2, sl
 8025282:	4631      	mov	r1, r6
 8025284:	4628      	mov	r0, r5
 8025286:	47b8      	blx	r7
 8025288:	3001      	adds	r0, #1
 802528a:	f43f aeaa 	beq.w	8024fe2 <_printf_float+0xc2>
 802528e:	f108 0801 	add.w	r8, r8, #1
 8025292:	e7ec      	b.n	802526e <_printf_float+0x34e>
 8025294:	4613      	mov	r3, r2
 8025296:	4631      	mov	r1, r6
 8025298:	4642      	mov	r2, r8
 802529a:	4628      	mov	r0, r5
 802529c:	47b8      	blx	r7
 802529e:	3001      	adds	r0, #1
 80252a0:	d1c0      	bne.n	8025224 <_printf_float+0x304>
 80252a2:	e69e      	b.n	8024fe2 <_printf_float+0xc2>
 80252a4:	2301      	movs	r3, #1
 80252a6:	4631      	mov	r1, r6
 80252a8:	4628      	mov	r0, r5
 80252aa:	9205      	str	r2, [sp, #20]
 80252ac:	47b8      	blx	r7
 80252ae:	3001      	adds	r0, #1
 80252b0:	f43f ae97 	beq.w	8024fe2 <_printf_float+0xc2>
 80252b4:	9a05      	ldr	r2, [sp, #20]
 80252b6:	f10b 0b01 	add.w	fp, fp, #1
 80252ba:	e7b9      	b.n	8025230 <_printf_float+0x310>
 80252bc:	ee18 3a10 	vmov	r3, s16
 80252c0:	4652      	mov	r2, sl
 80252c2:	4631      	mov	r1, r6
 80252c4:	4628      	mov	r0, r5
 80252c6:	47b8      	blx	r7
 80252c8:	3001      	adds	r0, #1
 80252ca:	d1be      	bne.n	802524a <_printf_float+0x32a>
 80252cc:	e689      	b.n	8024fe2 <_printf_float+0xc2>
 80252ce:	9a05      	ldr	r2, [sp, #20]
 80252d0:	464b      	mov	r3, r9
 80252d2:	4442      	add	r2, r8
 80252d4:	4631      	mov	r1, r6
 80252d6:	4628      	mov	r0, r5
 80252d8:	47b8      	blx	r7
 80252da:	3001      	adds	r0, #1
 80252dc:	d1c1      	bne.n	8025262 <_printf_float+0x342>
 80252de:	e680      	b.n	8024fe2 <_printf_float+0xc2>
 80252e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80252e2:	2a01      	cmp	r2, #1
 80252e4:	dc01      	bgt.n	80252ea <_printf_float+0x3ca>
 80252e6:	07db      	lsls	r3, r3, #31
 80252e8:	d538      	bpl.n	802535c <_printf_float+0x43c>
 80252ea:	2301      	movs	r3, #1
 80252ec:	4642      	mov	r2, r8
 80252ee:	4631      	mov	r1, r6
 80252f0:	4628      	mov	r0, r5
 80252f2:	47b8      	blx	r7
 80252f4:	3001      	adds	r0, #1
 80252f6:	f43f ae74 	beq.w	8024fe2 <_printf_float+0xc2>
 80252fa:	ee18 3a10 	vmov	r3, s16
 80252fe:	4652      	mov	r2, sl
 8025300:	4631      	mov	r1, r6
 8025302:	4628      	mov	r0, r5
 8025304:	47b8      	blx	r7
 8025306:	3001      	adds	r0, #1
 8025308:	f43f ae6b 	beq.w	8024fe2 <_printf_float+0xc2>
 802530c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8025310:	2200      	movs	r2, #0
 8025312:	2300      	movs	r3, #0
 8025314:	f7db fbf8 	bl	8000b08 <__aeabi_dcmpeq>
 8025318:	b9d8      	cbnz	r0, 8025352 <_printf_float+0x432>
 802531a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802531c:	f108 0201 	add.w	r2, r8, #1
 8025320:	3b01      	subs	r3, #1
 8025322:	4631      	mov	r1, r6
 8025324:	4628      	mov	r0, r5
 8025326:	47b8      	blx	r7
 8025328:	3001      	adds	r0, #1
 802532a:	d10e      	bne.n	802534a <_printf_float+0x42a>
 802532c:	e659      	b.n	8024fe2 <_printf_float+0xc2>
 802532e:	2301      	movs	r3, #1
 8025330:	4652      	mov	r2, sl
 8025332:	4631      	mov	r1, r6
 8025334:	4628      	mov	r0, r5
 8025336:	47b8      	blx	r7
 8025338:	3001      	adds	r0, #1
 802533a:	f43f ae52 	beq.w	8024fe2 <_printf_float+0xc2>
 802533e:	f108 0801 	add.w	r8, r8, #1
 8025342:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025344:	3b01      	subs	r3, #1
 8025346:	4543      	cmp	r3, r8
 8025348:	dcf1      	bgt.n	802532e <_printf_float+0x40e>
 802534a:	464b      	mov	r3, r9
 802534c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8025350:	e6dc      	b.n	802510c <_printf_float+0x1ec>
 8025352:	f04f 0800 	mov.w	r8, #0
 8025356:	f104 0a1a 	add.w	sl, r4, #26
 802535a:	e7f2      	b.n	8025342 <_printf_float+0x422>
 802535c:	2301      	movs	r3, #1
 802535e:	4642      	mov	r2, r8
 8025360:	e7df      	b.n	8025322 <_printf_float+0x402>
 8025362:	2301      	movs	r3, #1
 8025364:	464a      	mov	r2, r9
 8025366:	4631      	mov	r1, r6
 8025368:	4628      	mov	r0, r5
 802536a:	47b8      	blx	r7
 802536c:	3001      	adds	r0, #1
 802536e:	f43f ae38 	beq.w	8024fe2 <_printf_float+0xc2>
 8025372:	f108 0801 	add.w	r8, r8, #1
 8025376:	68e3      	ldr	r3, [r4, #12]
 8025378:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802537a:	1a5b      	subs	r3, r3, r1
 802537c:	4543      	cmp	r3, r8
 802537e:	dcf0      	bgt.n	8025362 <_printf_float+0x442>
 8025380:	e6fa      	b.n	8025178 <_printf_float+0x258>
 8025382:	f04f 0800 	mov.w	r8, #0
 8025386:	f104 0919 	add.w	r9, r4, #25
 802538a:	e7f4      	b.n	8025376 <_printf_float+0x456>

0802538c <_printf_common>:
 802538c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025390:	4616      	mov	r6, r2
 8025392:	4699      	mov	r9, r3
 8025394:	688a      	ldr	r2, [r1, #8]
 8025396:	690b      	ldr	r3, [r1, #16]
 8025398:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802539c:	4293      	cmp	r3, r2
 802539e:	bfb8      	it	lt
 80253a0:	4613      	movlt	r3, r2
 80253a2:	6033      	str	r3, [r6, #0]
 80253a4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80253a8:	4607      	mov	r7, r0
 80253aa:	460c      	mov	r4, r1
 80253ac:	b10a      	cbz	r2, 80253b2 <_printf_common+0x26>
 80253ae:	3301      	adds	r3, #1
 80253b0:	6033      	str	r3, [r6, #0]
 80253b2:	6823      	ldr	r3, [r4, #0]
 80253b4:	0699      	lsls	r1, r3, #26
 80253b6:	bf42      	ittt	mi
 80253b8:	6833      	ldrmi	r3, [r6, #0]
 80253ba:	3302      	addmi	r3, #2
 80253bc:	6033      	strmi	r3, [r6, #0]
 80253be:	6825      	ldr	r5, [r4, #0]
 80253c0:	f015 0506 	ands.w	r5, r5, #6
 80253c4:	d106      	bne.n	80253d4 <_printf_common+0x48>
 80253c6:	f104 0a19 	add.w	sl, r4, #25
 80253ca:	68e3      	ldr	r3, [r4, #12]
 80253cc:	6832      	ldr	r2, [r6, #0]
 80253ce:	1a9b      	subs	r3, r3, r2
 80253d0:	42ab      	cmp	r3, r5
 80253d2:	dc26      	bgt.n	8025422 <_printf_common+0x96>
 80253d4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80253d8:	1e13      	subs	r3, r2, #0
 80253da:	6822      	ldr	r2, [r4, #0]
 80253dc:	bf18      	it	ne
 80253de:	2301      	movne	r3, #1
 80253e0:	0692      	lsls	r2, r2, #26
 80253e2:	d42b      	bmi.n	802543c <_printf_common+0xb0>
 80253e4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80253e8:	4649      	mov	r1, r9
 80253ea:	4638      	mov	r0, r7
 80253ec:	47c0      	blx	r8
 80253ee:	3001      	adds	r0, #1
 80253f0:	d01e      	beq.n	8025430 <_printf_common+0xa4>
 80253f2:	6823      	ldr	r3, [r4, #0]
 80253f4:	68e5      	ldr	r5, [r4, #12]
 80253f6:	6832      	ldr	r2, [r6, #0]
 80253f8:	f003 0306 	and.w	r3, r3, #6
 80253fc:	2b04      	cmp	r3, #4
 80253fe:	bf08      	it	eq
 8025400:	1aad      	subeq	r5, r5, r2
 8025402:	68a3      	ldr	r3, [r4, #8]
 8025404:	6922      	ldr	r2, [r4, #16]
 8025406:	bf0c      	ite	eq
 8025408:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802540c:	2500      	movne	r5, #0
 802540e:	4293      	cmp	r3, r2
 8025410:	bfc4      	itt	gt
 8025412:	1a9b      	subgt	r3, r3, r2
 8025414:	18ed      	addgt	r5, r5, r3
 8025416:	2600      	movs	r6, #0
 8025418:	341a      	adds	r4, #26
 802541a:	42b5      	cmp	r5, r6
 802541c:	d11a      	bne.n	8025454 <_printf_common+0xc8>
 802541e:	2000      	movs	r0, #0
 8025420:	e008      	b.n	8025434 <_printf_common+0xa8>
 8025422:	2301      	movs	r3, #1
 8025424:	4652      	mov	r2, sl
 8025426:	4649      	mov	r1, r9
 8025428:	4638      	mov	r0, r7
 802542a:	47c0      	blx	r8
 802542c:	3001      	adds	r0, #1
 802542e:	d103      	bne.n	8025438 <_printf_common+0xac>
 8025430:	f04f 30ff 	mov.w	r0, #4294967295
 8025434:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025438:	3501      	adds	r5, #1
 802543a:	e7c6      	b.n	80253ca <_printf_common+0x3e>
 802543c:	18e1      	adds	r1, r4, r3
 802543e:	1c5a      	adds	r2, r3, #1
 8025440:	2030      	movs	r0, #48	; 0x30
 8025442:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8025446:	4422      	add	r2, r4
 8025448:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802544c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8025450:	3302      	adds	r3, #2
 8025452:	e7c7      	b.n	80253e4 <_printf_common+0x58>
 8025454:	2301      	movs	r3, #1
 8025456:	4622      	mov	r2, r4
 8025458:	4649      	mov	r1, r9
 802545a:	4638      	mov	r0, r7
 802545c:	47c0      	blx	r8
 802545e:	3001      	adds	r0, #1
 8025460:	d0e6      	beq.n	8025430 <_printf_common+0xa4>
 8025462:	3601      	adds	r6, #1
 8025464:	e7d9      	b.n	802541a <_printf_common+0x8e>
	...

08025468 <_printf_i>:
 8025468:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802546c:	460c      	mov	r4, r1
 802546e:	4691      	mov	r9, r2
 8025470:	7e27      	ldrb	r7, [r4, #24]
 8025472:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025474:	2f78      	cmp	r7, #120	; 0x78
 8025476:	4680      	mov	r8, r0
 8025478:	469a      	mov	sl, r3
 802547a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802547e:	d807      	bhi.n	8025490 <_printf_i+0x28>
 8025480:	2f62      	cmp	r7, #98	; 0x62
 8025482:	d80a      	bhi.n	802549a <_printf_i+0x32>
 8025484:	2f00      	cmp	r7, #0
 8025486:	f000 80d8 	beq.w	802563a <_printf_i+0x1d2>
 802548a:	2f58      	cmp	r7, #88	; 0x58
 802548c:	f000 80a3 	beq.w	80255d6 <_printf_i+0x16e>
 8025490:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8025494:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8025498:	e03a      	b.n	8025510 <_printf_i+0xa8>
 802549a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802549e:	2b15      	cmp	r3, #21
 80254a0:	d8f6      	bhi.n	8025490 <_printf_i+0x28>
 80254a2:	a001      	add	r0, pc, #4	; (adr r0, 80254a8 <_printf_i+0x40>)
 80254a4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80254a8:	08025501 	.word	0x08025501
 80254ac:	08025515 	.word	0x08025515
 80254b0:	08025491 	.word	0x08025491
 80254b4:	08025491 	.word	0x08025491
 80254b8:	08025491 	.word	0x08025491
 80254bc:	08025491 	.word	0x08025491
 80254c0:	08025515 	.word	0x08025515
 80254c4:	08025491 	.word	0x08025491
 80254c8:	08025491 	.word	0x08025491
 80254cc:	08025491 	.word	0x08025491
 80254d0:	08025491 	.word	0x08025491
 80254d4:	08025621 	.word	0x08025621
 80254d8:	08025545 	.word	0x08025545
 80254dc:	08025603 	.word	0x08025603
 80254e0:	08025491 	.word	0x08025491
 80254e4:	08025491 	.word	0x08025491
 80254e8:	08025643 	.word	0x08025643
 80254ec:	08025491 	.word	0x08025491
 80254f0:	08025545 	.word	0x08025545
 80254f4:	08025491 	.word	0x08025491
 80254f8:	08025491 	.word	0x08025491
 80254fc:	0802560b 	.word	0x0802560b
 8025500:	680b      	ldr	r3, [r1, #0]
 8025502:	1d1a      	adds	r2, r3, #4
 8025504:	681b      	ldr	r3, [r3, #0]
 8025506:	600a      	str	r2, [r1, #0]
 8025508:	f104 0642 	add.w	r6, r4, #66	; 0x42
 802550c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8025510:	2301      	movs	r3, #1
 8025512:	e0a3      	b.n	802565c <_printf_i+0x1f4>
 8025514:	6825      	ldr	r5, [r4, #0]
 8025516:	6808      	ldr	r0, [r1, #0]
 8025518:	062e      	lsls	r6, r5, #24
 802551a:	f100 0304 	add.w	r3, r0, #4
 802551e:	d50a      	bpl.n	8025536 <_printf_i+0xce>
 8025520:	6805      	ldr	r5, [r0, #0]
 8025522:	600b      	str	r3, [r1, #0]
 8025524:	2d00      	cmp	r5, #0
 8025526:	da03      	bge.n	8025530 <_printf_i+0xc8>
 8025528:	232d      	movs	r3, #45	; 0x2d
 802552a:	426d      	negs	r5, r5
 802552c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8025530:	485e      	ldr	r0, [pc, #376]	; (80256ac <_printf_i+0x244>)
 8025532:	230a      	movs	r3, #10
 8025534:	e019      	b.n	802556a <_printf_i+0x102>
 8025536:	f015 0f40 	tst.w	r5, #64	; 0x40
 802553a:	6805      	ldr	r5, [r0, #0]
 802553c:	600b      	str	r3, [r1, #0]
 802553e:	bf18      	it	ne
 8025540:	b22d      	sxthne	r5, r5
 8025542:	e7ef      	b.n	8025524 <_printf_i+0xbc>
 8025544:	680b      	ldr	r3, [r1, #0]
 8025546:	6825      	ldr	r5, [r4, #0]
 8025548:	1d18      	adds	r0, r3, #4
 802554a:	6008      	str	r0, [r1, #0]
 802554c:	0628      	lsls	r0, r5, #24
 802554e:	d501      	bpl.n	8025554 <_printf_i+0xec>
 8025550:	681d      	ldr	r5, [r3, #0]
 8025552:	e002      	b.n	802555a <_printf_i+0xf2>
 8025554:	0669      	lsls	r1, r5, #25
 8025556:	d5fb      	bpl.n	8025550 <_printf_i+0xe8>
 8025558:	881d      	ldrh	r5, [r3, #0]
 802555a:	4854      	ldr	r0, [pc, #336]	; (80256ac <_printf_i+0x244>)
 802555c:	2f6f      	cmp	r7, #111	; 0x6f
 802555e:	bf0c      	ite	eq
 8025560:	2308      	moveq	r3, #8
 8025562:	230a      	movne	r3, #10
 8025564:	2100      	movs	r1, #0
 8025566:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802556a:	6866      	ldr	r6, [r4, #4]
 802556c:	60a6      	str	r6, [r4, #8]
 802556e:	2e00      	cmp	r6, #0
 8025570:	bfa2      	ittt	ge
 8025572:	6821      	ldrge	r1, [r4, #0]
 8025574:	f021 0104 	bicge.w	r1, r1, #4
 8025578:	6021      	strge	r1, [r4, #0]
 802557a:	b90d      	cbnz	r5, 8025580 <_printf_i+0x118>
 802557c:	2e00      	cmp	r6, #0
 802557e:	d04d      	beq.n	802561c <_printf_i+0x1b4>
 8025580:	4616      	mov	r6, r2
 8025582:	fbb5 f1f3 	udiv	r1, r5, r3
 8025586:	fb03 5711 	mls	r7, r3, r1, r5
 802558a:	5dc7      	ldrb	r7, [r0, r7]
 802558c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8025590:	462f      	mov	r7, r5
 8025592:	42bb      	cmp	r3, r7
 8025594:	460d      	mov	r5, r1
 8025596:	d9f4      	bls.n	8025582 <_printf_i+0x11a>
 8025598:	2b08      	cmp	r3, #8
 802559a:	d10b      	bne.n	80255b4 <_printf_i+0x14c>
 802559c:	6823      	ldr	r3, [r4, #0]
 802559e:	07df      	lsls	r7, r3, #31
 80255a0:	d508      	bpl.n	80255b4 <_printf_i+0x14c>
 80255a2:	6923      	ldr	r3, [r4, #16]
 80255a4:	6861      	ldr	r1, [r4, #4]
 80255a6:	4299      	cmp	r1, r3
 80255a8:	bfde      	ittt	le
 80255aa:	2330      	movle	r3, #48	; 0x30
 80255ac:	f806 3c01 	strble.w	r3, [r6, #-1]
 80255b0:	f106 36ff 	addle.w	r6, r6, #4294967295
 80255b4:	1b92      	subs	r2, r2, r6
 80255b6:	6122      	str	r2, [r4, #16]
 80255b8:	f8cd a000 	str.w	sl, [sp]
 80255bc:	464b      	mov	r3, r9
 80255be:	aa03      	add	r2, sp, #12
 80255c0:	4621      	mov	r1, r4
 80255c2:	4640      	mov	r0, r8
 80255c4:	f7ff fee2 	bl	802538c <_printf_common>
 80255c8:	3001      	adds	r0, #1
 80255ca:	d14c      	bne.n	8025666 <_printf_i+0x1fe>
 80255cc:	f04f 30ff 	mov.w	r0, #4294967295
 80255d0:	b004      	add	sp, #16
 80255d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80255d6:	4835      	ldr	r0, [pc, #212]	; (80256ac <_printf_i+0x244>)
 80255d8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80255dc:	6823      	ldr	r3, [r4, #0]
 80255de:	680e      	ldr	r6, [r1, #0]
 80255e0:	061f      	lsls	r7, r3, #24
 80255e2:	f856 5b04 	ldr.w	r5, [r6], #4
 80255e6:	600e      	str	r6, [r1, #0]
 80255e8:	d514      	bpl.n	8025614 <_printf_i+0x1ac>
 80255ea:	07d9      	lsls	r1, r3, #31
 80255ec:	bf44      	itt	mi
 80255ee:	f043 0320 	orrmi.w	r3, r3, #32
 80255f2:	6023      	strmi	r3, [r4, #0]
 80255f4:	b91d      	cbnz	r5, 80255fe <_printf_i+0x196>
 80255f6:	6823      	ldr	r3, [r4, #0]
 80255f8:	f023 0320 	bic.w	r3, r3, #32
 80255fc:	6023      	str	r3, [r4, #0]
 80255fe:	2310      	movs	r3, #16
 8025600:	e7b0      	b.n	8025564 <_printf_i+0xfc>
 8025602:	6823      	ldr	r3, [r4, #0]
 8025604:	f043 0320 	orr.w	r3, r3, #32
 8025608:	6023      	str	r3, [r4, #0]
 802560a:	2378      	movs	r3, #120	; 0x78
 802560c:	4828      	ldr	r0, [pc, #160]	; (80256b0 <_printf_i+0x248>)
 802560e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8025612:	e7e3      	b.n	80255dc <_printf_i+0x174>
 8025614:	065e      	lsls	r6, r3, #25
 8025616:	bf48      	it	mi
 8025618:	b2ad      	uxthmi	r5, r5
 802561a:	e7e6      	b.n	80255ea <_printf_i+0x182>
 802561c:	4616      	mov	r6, r2
 802561e:	e7bb      	b.n	8025598 <_printf_i+0x130>
 8025620:	680b      	ldr	r3, [r1, #0]
 8025622:	6826      	ldr	r6, [r4, #0]
 8025624:	6960      	ldr	r0, [r4, #20]
 8025626:	1d1d      	adds	r5, r3, #4
 8025628:	600d      	str	r5, [r1, #0]
 802562a:	0635      	lsls	r5, r6, #24
 802562c:	681b      	ldr	r3, [r3, #0]
 802562e:	d501      	bpl.n	8025634 <_printf_i+0x1cc>
 8025630:	6018      	str	r0, [r3, #0]
 8025632:	e002      	b.n	802563a <_printf_i+0x1d2>
 8025634:	0671      	lsls	r1, r6, #25
 8025636:	d5fb      	bpl.n	8025630 <_printf_i+0x1c8>
 8025638:	8018      	strh	r0, [r3, #0]
 802563a:	2300      	movs	r3, #0
 802563c:	6123      	str	r3, [r4, #16]
 802563e:	4616      	mov	r6, r2
 8025640:	e7ba      	b.n	80255b8 <_printf_i+0x150>
 8025642:	680b      	ldr	r3, [r1, #0]
 8025644:	1d1a      	adds	r2, r3, #4
 8025646:	600a      	str	r2, [r1, #0]
 8025648:	681e      	ldr	r6, [r3, #0]
 802564a:	6862      	ldr	r2, [r4, #4]
 802564c:	2100      	movs	r1, #0
 802564e:	4630      	mov	r0, r6
 8025650:	f7da fdde 	bl	8000210 <memchr>
 8025654:	b108      	cbz	r0, 802565a <_printf_i+0x1f2>
 8025656:	1b80      	subs	r0, r0, r6
 8025658:	6060      	str	r0, [r4, #4]
 802565a:	6863      	ldr	r3, [r4, #4]
 802565c:	6123      	str	r3, [r4, #16]
 802565e:	2300      	movs	r3, #0
 8025660:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8025664:	e7a8      	b.n	80255b8 <_printf_i+0x150>
 8025666:	6923      	ldr	r3, [r4, #16]
 8025668:	4632      	mov	r2, r6
 802566a:	4649      	mov	r1, r9
 802566c:	4640      	mov	r0, r8
 802566e:	47d0      	blx	sl
 8025670:	3001      	adds	r0, #1
 8025672:	d0ab      	beq.n	80255cc <_printf_i+0x164>
 8025674:	6823      	ldr	r3, [r4, #0]
 8025676:	079b      	lsls	r3, r3, #30
 8025678:	d413      	bmi.n	80256a2 <_printf_i+0x23a>
 802567a:	68e0      	ldr	r0, [r4, #12]
 802567c:	9b03      	ldr	r3, [sp, #12]
 802567e:	4298      	cmp	r0, r3
 8025680:	bfb8      	it	lt
 8025682:	4618      	movlt	r0, r3
 8025684:	e7a4      	b.n	80255d0 <_printf_i+0x168>
 8025686:	2301      	movs	r3, #1
 8025688:	4632      	mov	r2, r6
 802568a:	4649      	mov	r1, r9
 802568c:	4640      	mov	r0, r8
 802568e:	47d0      	blx	sl
 8025690:	3001      	adds	r0, #1
 8025692:	d09b      	beq.n	80255cc <_printf_i+0x164>
 8025694:	3501      	adds	r5, #1
 8025696:	68e3      	ldr	r3, [r4, #12]
 8025698:	9903      	ldr	r1, [sp, #12]
 802569a:	1a5b      	subs	r3, r3, r1
 802569c:	42ab      	cmp	r3, r5
 802569e:	dcf2      	bgt.n	8025686 <_printf_i+0x21e>
 80256a0:	e7eb      	b.n	802567a <_printf_i+0x212>
 80256a2:	2500      	movs	r5, #0
 80256a4:	f104 0619 	add.w	r6, r4, #25
 80256a8:	e7f5      	b.n	8025696 <_printf_i+0x22e>
 80256aa:	bf00      	nop
 80256ac:	0802a1d6 	.word	0x0802a1d6
 80256b0:	0802a1e7 	.word	0x0802a1e7

080256b4 <_sbrk_r>:
 80256b4:	b538      	push	{r3, r4, r5, lr}
 80256b6:	4d06      	ldr	r5, [pc, #24]	; (80256d0 <_sbrk_r+0x1c>)
 80256b8:	2300      	movs	r3, #0
 80256ba:	4604      	mov	r4, r0
 80256bc:	4608      	mov	r0, r1
 80256be:	602b      	str	r3, [r5, #0]
 80256c0:	f7f9 fb06 	bl	801ecd0 <_sbrk>
 80256c4:	1c43      	adds	r3, r0, #1
 80256c6:	d102      	bne.n	80256ce <_sbrk_r+0x1a>
 80256c8:	682b      	ldr	r3, [r5, #0]
 80256ca:	b103      	cbz	r3, 80256ce <_sbrk_r+0x1a>
 80256cc:	6023      	str	r3, [r4, #0]
 80256ce:	bd38      	pop	{r3, r4, r5, pc}
 80256d0:	200008e8 	.word	0x200008e8

080256d4 <_raise_r>:
 80256d4:	291f      	cmp	r1, #31
 80256d6:	b538      	push	{r3, r4, r5, lr}
 80256d8:	4604      	mov	r4, r0
 80256da:	460d      	mov	r5, r1
 80256dc:	d904      	bls.n	80256e8 <_raise_r+0x14>
 80256de:	2316      	movs	r3, #22
 80256e0:	6003      	str	r3, [r0, #0]
 80256e2:	f04f 30ff 	mov.w	r0, #4294967295
 80256e6:	bd38      	pop	{r3, r4, r5, pc}
 80256e8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80256ea:	b112      	cbz	r2, 80256f2 <_raise_r+0x1e>
 80256ec:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80256f0:	b94b      	cbnz	r3, 8025706 <_raise_r+0x32>
 80256f2:	4620      	mov	r0, r4
 80256f4:	f000 f830 	bl	8025758 <_getpid_r>
 80256f8:	462a      	mov	r2, r5
 80256fa:	4601      	mov	r1, r0
 80256fc:	4620      	mov	r0, r4
 80256fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025702:	f000 b817 	b.w	8025734 <_kill_r>
 8025706:	2b01      	cmp	r3, #1
 8025708:	d00a      	beq.n	8025720 <_raise_r+0x4c>
 802570a:	1c59      	adds	r1, r3, #1
 802570c:	d103      	bne.n	8025716 <_raise_r+0x42>
 802570e:	2316      	movs	r3, #22
 8025710:	6003      	str	r3, [r0, #0]
 8025712:	2001      	movs	r0, #1
 8025714:	e7e7      	b.n	80256e6 <_raise_r+0x12>
 8025716:	2400      	movs	r4, #0
 8025718:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802571c:	4628      	mov	r0, r5
 802571e:	4798      	blx	r3
 8025720:	2000      	movs	r0, #0
 8025722:	e7e0      	b.n	80256e6 <_raise_r+0x12>

08025724 <raise>:
 8025724:	4b02      	ldr	r3, [pc, #8]	; (8025730 <raise+0xc>)
 8025726:	4601      	mov	r1, r0
 8025728:	6818      	ldr	r0, [r3, #0]
 802572a:	f7ff bfd3 	b.w	80256d4 <_raise_r>
 802572e:	bf00      	nop
 8025730:	20000010 	.word	0x20000010

08025734 <_kill_r>:
 8025734:	b538      	push	{r3, r4, r5, lr}
 8025736:	4d07      	ldr	r5, [pc, #28]	; (8025754 <_kill_r+0x20>)
 8025738:	2300      	movs	r3, #0
 802573a:	4604      	mov	r4, r0
 802573c:	4608      	mov	r0, r1
 802573e:	4611      	mov	r1, r2
 8025740:	602b      	str	r3, [r5, #0]
 8025742:	f7f9 fa3d 	bl	801ebc0 <_kill>
 8025746:	1c43      	adds	r3, r0, #1
 8025748:	d102      	bne.n	8025750 <_kill_r+0x1c>
 802574a:	682b      	ldr	r3, [r5, #0]
 802574c:	b103      	cbz	r3, 8025750 <_kill_r+0x1c>
 802574e:	6023      	str	r3, [r4, #0]
 8025750:	bd38      	pop	{r3, r4, r5, pc}
 8025752:	bf00      	nop
 8025754:	200008e8 	.word	0x200008e8

08025758 <_getpid_r>:
 8025758:	f7f9 ba2a 	b.w	801ebb0 <_getpid>

0802575c <siprintf>:
 802575c:	b40e      	push	{r1, r2, r3}
 802575e:	b500      	push	{lr}
 8025760:	b09c      	sub	sp, #112	; 0x70
 8025762:	ab1d      	add	r3, sp, #116	; 0x74
 8025764:	9002      	str	r0, [sp, #8]
 8025766:	9006      	str	r0, [sp, #24]
 8025768:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 802576c:	4809      	ldr	r0, [pc, #36]	; (8025794 <siprintf+0x38>)
 802576e:	9107      	str	r1, [sp, #28]
 8025770:	9104      	str	r1, [sp, #16]
 8025772:	4909      	ldr	r1, [pc, #36]	; (8025798 <siprintf+0x3c>)
 8025774:	f853 2b04 	ldr.w	r2, [r3], #4
 8025778:	9105      	str	r1, [sp, #20]
 802577a:	6800      	ldr	r0, [r0, #0]
 802577c:	9301      	str	r3, [sp, #4]
 802577e:	a902      	add	r1, sp, #8
 8025780:	f002 ff2e 	bl	80285e0 <_svfiprintf_r>
 8025784:	9b02      	ldr	r3, [sp, #8]
 8025786:	2200      	movs	r2, #0
 8025788:	701a      	strb	r2, [r3, #0]
 802578a:	b01c      	add	sp, #112	; 0x70
 802578c:	f85d eb04 	ldr.w	lr, [sp], #4
 8025790:	b003      	add	sp, #12
 8025792:	4770      	bx	lr
 8025794:	20000010 	.word	0x20000010
 8025798:	ffff0208 	.word	0xffff0208

0802579c <sulp>:
 802579c:	b570      	push	{r4, r5, r6, lr}
 802579e:	4604      	mov	r4, r0
 80257a0:	460d      	mov	r5, r1
 80257a2:	ec45 4b10 	vmov	d0, r4, r5
 80257a6:	4616      	mov	r6, r2
 80257a8:	f002 fd60 	bl	802826c <__ulp>
 80257ac:	ec51 0b10 	vmov	r0, r1, d0
 80257b0:	b17e      	cbz	r6, 80257d2 <sulp+0x36>
 80257b2:	f3c5 530a 	ubfx	r3, r5, #20, #11
 80257b6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80257ba:	2b00      	cmp	r3, #0
 80257bc:	dd09      	ble.n	80257d2 <sulp+0x36>
 80257be:	051b      	lsls	r3, r3, #20
 80257c0:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80257c4:	2400      	movs	r4, #0
 80257c6:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80257ca:	4622      	mov	r2, r4
 80257cc:	462b      	mov	r3, r5
 80257ce:	f7da ff33 	bl	8000638 <__aeabi_dmul>
 80257d2:	bd70      	pop	{r4, r5, r6, pc}
 80257d4:	0000      	movs	r0, r0
	...

080257d8 <_strtod_l>:
 80257d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80257dc:	b0a3      	sub	sp, #140	; 0x8c
 80257de:	461f      	mov	r7, r3
 80257e0:	2300      	movs	r3, #0
 80257e2:	931e      	str	r3, [sp, #120]	; 0x78
 80257e4:	4ba4      	ldr	r3, [pc, #656]	; (8025a78 <_strtod_l+0x2a0>)
 80257e6:	9219      	str	r2, [sp, #100]	; 0x64
 80257e8:	681b      	ldr	r3, [r3, #0]
 80257ea:	9307      	str	r3, [sp, #28]
 80257ec:	4604      	mov	r4, r0
 80257ee:	4618      	mov	r0, r3
 80257f0:	4688      	mov	r8, r1
 80257f2:	f7da fd5d 	bl	80002b0 <strlen>
 80257f6:	f04f 0a00 	mov.w	sl, #0
 80257fa:	4605      	mov	r5, r0
 80257fc:	f04f 0b00 	mov.w	fp, #0
 8025800:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8025804:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025806:	781a      	ldrb	r2, [r3, #0]
 8025808:	2a2b      	cmp	r2, #43	; 0x2b
 802580a:	d04c      	beq.n	80258a6 <_strtod_l+0xce>
 802580c:	d839      	bhi.n	8025882 <_strtod_l+0xaa>
 802580e:	2a0d      	cmp	r2, #13
 8025810:	d832      	bhi.n	8025878 <_strtod_l+0xa0>
 8025812:	2a08      	cmp	r2, #8
 8025814:	d832      	bhi.n	802587c <_strtod_l+0xa4>
 8025816:	2a00      	cmp	r2, #0
 8025818:	d03c      	beq.n	8025894 <_strtod_l+0xbc>
 802581a:	2300      	movs	r3, #0
 802581c:	930e      	str	r3, [sp, #56]	; 0x38
 802581e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025820:	7833      	ldrb	r3, [r6, #0]
 8025822:	2b30      	cmp	r3, #48	; 0x30
 8025824:	f040 80b4 	bne.w	8025990 <_strtod_l+0x1b8>
 8025828:	7873      	ldrb	r3, [r6, #1]
 802582a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 802582e:	2b58      	cmp	r3, #88	; 0x58
 8025830:	d16c      	bne.n	802590c <_strtod_l+0x134>
 8025832:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025834:	9301      	str	r3, [sp, #4]
 8025836:	ab1e      	add	r3, sp, #120	; 0x78
 8025838:	9702      	str	r7, [sp, #8]
 802583a:	9300      	str	r3, [sp, #0]
 802583c:	4a8f      	ldr	r2, [pc, #572]	; (8025a7c <_strtod_l+0x2a4>)
 802583e:	ab1f      	add	r3, sp, #124	; 0x7c
 8025840:	a91d      	add	r1, sp, #116	; 0x74
 8025842:	4620      	mov	r0, r4
 8025844:	f001 fe78 	bl	8027538 <__gethex>
 8025848:	f010 0707 	ands.w	r7, r0, #7
 802584c:	4605      	mov	r5, r0
 802584e:	d005      	beq.n	802585c <_strtod_l+0x84>
 8025850:	2f06      	cmp	r7, #6
 8025852:	d12a      	bne.n	80258aa <_strtod_l+0xd2>
 8025854:	3601      	adds	r6, #1
 8025856:	2300      	movs	r3, #0
 8025858:	961d      	str	r6, [sp, #116]	; 0x74
 802585a:	930e      	str	r3, [sp, #56]	; 0x38
 802585c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802585e:	2b00      	cmp	r3, #0
 8025860:	f040 8596 	bne.w	8026390 <_strtod_l+0xbb8>
 8025864:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025866:	b1db      	cbz	r3, 80258a0 <_strtod_l+0xc8>
 8025868:	4652      	mov	r2, sl
 802586a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 802586e:	ec43 2b10 	vmov	d0, r2, r3
 8025872:	b023      	add	sp, #140	; 0x8c
 8025874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025878:	2a20      	cmp	r2, #32
 802587a:	d1ce      	bne.n	802581a <_strtod_l+0x42>
 802587c:	3301      	adds	r3, #1
 802587e:	931d      	str	r3, [sp, #116]	; 0x74
 8025880:	e7c0      	b.n	8025804 <_strtod_l+0x2c>
 8025882:	2a2d      	cmp	r2, #45	; 0x2d
 8025884:	d1c9      	bne.n	802581a <_strtod_l+0x42>
 8025886:	2201      	movs	r2, #1
 8025888:	920e      	str	r2, [sp, #56]	; 0x38
 802588a:	1c5a      	adds	r2, r3, #1
 802588c:	921d      	str	r2, [sp, #116]	; 0x74
 802588e:	785b      	ldrb	r3, [r3, #1]
 8025890:	2b00      	cmp	r3, #0
 8025892:	d1c4      	bne.n	802581e <_strtod_l+0x46>
 8025894:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025896:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 802589a:	2b00      	cmp	r3, #0
 802589c:	f040 8576 	bne.w	802638c <_strtod_l+0xbb4>
 80258a0:	4652      	mov	r2, sl
 80258a2:	465b      	mov	r3, fp
 80258a4:	e7e3      	b.n	802586e <_strtod_l+0x96>
 80258a6:	2200      	movs	r2, #0
 80258a8:	e7ee      	b.n	8025888 <_strtod_l+0xb0>
 80258aa:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80258ac:	b13a      	cbz	r2, 80258be <_strtod_l+0xe6>
 80258ae:	2135      	movs	r1, #53	; 0x35
 80258b0:	a820      	add	r0, sp, #128	; 0x80
 80258b2:	f002 fde6 	bl	8028482 <__copybits>
 80258b6:	991e      	ldr	r1, [sp, #120]	; 0x78
 80258b8:	4620      	mov	r0, r4
 80258ba:	f002 f9ab 	bl	8027c14 <_Bfree>
 80258be:	3f01      	subs	r7, #1
 80258c0:	2f05      	cmp	r7, #5
 80258c2:	d807      	bhi.n	80258d4 <_strtod_l+0xfc>
 80258c4:	e8df f007 	tbb	[pc, r7]
 80258c8:	1d180b0e 	.word	0x1d180b0e
 80258cc:	030e      	.short	0x030e
 80258ce:	f04f 0b00 	mov.w	fp, #0
 80258d2:	46da      	mov	sl, fp
 80258d4:	0728      	lsls	r0, r5, #28
 80258d6:	d5c1      	bpl.n	802585c <_strtod_l+0x84>
 80258d8:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 80258dc:	e7be      	b.n	802585c <_strtod_l+0x84>
 80258de:	e9dd ab20 	ldrd	sl, fp, [sp, #128]	; 0x80
 80258e2:	e7f7      	b.n	80258d4 <_strtod_l+0xfc>
 80258e4:	e9dd a320 	ldrd	sl, r3, [sp, #128]	; 0x80
 80258e8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80258ea:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80258ee:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80258f2:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80258f6:	e7ed      	b.n	80258d4 <_strtod_l+0xfc>
 80258f8:	f8df b184 	ldr.w	fp, [pc, #388]	; 8025a80 <_strtod_l+0x2a8>
 80258fc:	f04f 0a00 	mov.w	sl, #0
 8025900:	e7e8      	b.n	80258d4 <_strtod_l+0xfc>
 8025902:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8025906:	f04f 3aff 	mov.w	sl, #4294967295
 802590a:	e7e3      	b.n	80258d4 <_strtod_l+0xfc>
 802590c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802590e:	1c5a      	adds	r2, r3, #1
 8025910:	921d      	str	r2, [sp, #116]	; 0x74
 8025912:	785b      	ldrb	r3, [r3, #1]
 8025914:	2b30      	cmp	r3, #48	; 0x30
 8025916:	d0f9      	beq.n	802590c <_strtod_l+0x134>
 8025918:	2b00      	cmp	r3, #0
 802591a:	d09f      	beq.n	802585c <_strtod_l+0x84>
 802591c:	2301      	movs	r3, #1
 802591e:	f04f 0900 	mov.w	r9, #0
 8025922:	9304      	str	r3, [sp, #16]
 8025924:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025926:	930a      	str	r3, [sp, #40]	; 0x28
 8025928:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 802592c:	464f      	mov	r7, r9
 802592e:	220a      	movs	r2, #10
 8025930:	981d      	ldr	r0, [sp, #116]	; 0x74
 8025932:	7806      	ldrb	r6, [r0, #0]
 8025934:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8025938:	b2d9      	uxtb	r1, r3
 802593a:	2909      	cmp	r1, #9
 802593c:	d92a      	bls.n	8025994 <_strtod_l+0x1bc>
 802593e:	9907      	ldr	r1, [sp, #28]
 8025940:	462a      	mov	r2, r5
 8025942:	f002 ff53 	bl	80287ec <strncmp>
 8025946:	b398      	cbz	r0, 80259b0 <_strtod_l+0x1d8>
 8025948:	2000      	movs	r0, #0
 802594a:	4633      	mov	r3, r6
 802594c:	463d      	mov	r5, r7
 802594e:	9007      	str	r0, [sp, #28]
 8025950:	4602      	mov	r2, r0
 8025952:	2b65      	cmp	r3, #101	; 0x65
 8025954:	d001      	beq.n	802595a <_strtod_l+0x182>
 8025956:	2b45      	cmp	r3, #69	; 0x45
 8025958:	d118      	bne.n	802598c <_strtod_l+0x1b4>
 802595a:	b91d      	cbnz	r5, 8025964 <_strtod_l+0x18c>
 802595c:	9b04      	ldr	r3, [sp, #16]
 802595e:	4303      	orrs	r3, r0
 8025960:	d098      	beq.n	8025894 <_strtod_l+0xbc>
 8025962:	2500      	movs	r5, #0
 8025964:	f8dd 8074 	ldr.w	r8, [sp, #116]	; 0x74
 8025968:	f108 0301 	add.w	r3, r8, #1
 802596c:	931d      	str	r3, [sp, #116]	; 0x74
 802596e:	f898 3001 	ldrb.w	r3, [r8, #1]
 8025972:	2b2b      	cmp	r3, #43	; 0x2b
 8025974:	d075      	beq.n	8025a62 <_strtod_l+0x28a>
 8025976:	2b2d      	cmp	r3, #45	; 0x2d
 8025978:	d07b      	beq.n	8025a72 <_strtod_l+0x29a>
 802597a:	f04f 0c00 	mov.w	ip, #0
 802597e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8025982:	2909      	cmp	r1, #9
 8025984:	f240 8082 	bls.w	8025a8c <_strtod_l+0x2b4>
 8025988:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 802598c:	2600      	movs	r6, #0
 802598e:	e09d      	b.n	8025acc <_strtod_l+0x2f4>
 8025990:	2300      	movs	r3, #0
 8025992:	e7c4      	b.n	802591e <_strtod_l+0x146>
 8025994:	2f08      	cmp	r7, #8
 8025996:	bfd8      	it	le
 8025998:	9909      	ldrle	r1, [sp, #36]	; 0x24
 802599a:	f100 0001 	add.w	r0, r0, #1
 802599e:	bfda      	itte	le
 80259a0:	fb02 3301 	mlale	r3, r2, r1, r3
 80259a4:	9309      	strle	r3, [sp, #36]	; 0x24
 80259a6:	fb02 3909 	mlagt	r9, r2, r9, r3
 80259aa:	3701      	adds	r7, #1
 80259ac:	901d      	str	r0, [sp, #116]	; 0x74
 80259ae:	e7bf      	b.n	8025930 <_strtod_l+0x158>
 80259b0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80259b2:	195a      	adds	r2, r3, r5
 80259b4:	921d      	str	r2, [sp, #116]	; 0x74
 80259b6:	5d5b      	ldrb	r3, [r3, r5]
 80259b8:	2f00      	cmp	r7, #0
 80259ba:	d037      	beq.n	8025a2c <_strtod_l+0x254>
 80259bc:	9007      	str	r0, [sp, #28]
 80259be:	463d      	mov	r5, r7
 80259c0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80259c4:	2a09      	cmp	r2, #9
 80259c6:	d912      	bls.n	80259ee <_strtod_l+0x216>
 80259c8:	2201      	movs	r2, #1
 80259ca:	e7c2      	b.n	8025952 <_strtod_l+0x17a>
 80259cc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80259ce:	1c5a      	adds	r2, r3, #1
 80259d0:	921d      	str	r2, [sp, #116]	; 0x74
 80259d2:	785b      	ldrb	r3, [r3, #1]
 80259d4:	3001      	adds	r0, #1
 80259d6:	2b30      	cmp	r3, #48	; 0x30
 80259d8:	d0f8      	beq.n	80259cc <_strtod_l+0x1f4>
 80259da:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 80259de:	2a08      	cmp	r2, #8
 80259e0:	f200 84db 	bhi.w	802639a <_strtod_l+0xbc2>
 80259e4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80259e6:	9007      	str	r0, [sp, #28]
 80259e8:	2000      	movs	r0, #0
 80259ea:	920a      	str	r2, [sp, #40]	; 0x28
 80259ec:	4605      	mov	r5, r0
 80259ee:	3b30      	subs	r3, #48	; 0x30
 80259f0:	f100 0201 	add.w	r2, r0, #1
 80259f4:	d014      	beq.n	8025a20 <_strtod_l+0x248>
 80259f6:	9907      	ldr	r1, [sp, #28]
 80259f8:	4411      	add	r1, r2
 80259fa:	9107      	str	r1, [sp, #28]
 80259fc:	462a      	mov	r2, r5
 80259fe:	eb00 0e05 	add.w	lr, r0, r5
 8025a02:	210a      	movs	r1, #10
 8025a04:	4572      	cmp	r2, lr
 8025a06:	d113      	bne.n	8025a30 <_strtod_l+0x258>
 8025a08:	182a      	adds	r2, r5, r0
 8025a0a:	2a08      	cmp	r2, #8
 8025a0c:	f105 0501 	add.w	r5, r5, #1
 8025a10:	4405      	add	r5, r0
 8025a12:	dc1c      	bgt.n	8025a4e <_strtod_l+0x276>
 8025a14:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025a16:	220a      	movs	r2, #10
 8025a18:	fb02 3301 	mla	r3, r2, r1, r3
 8025a1c:	9309      	str	r3, [sp, #36]	; 0x24
 8025a1e:	2200      	movs	r2, #0
 8025a20:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025a22:	1c59      	adds	r1, r3, #1
 8025a24:	911d      	str	r1, [sp, #116]	; 0x74
 8025a26:	785b      	ldrb	r3, [r3, #1]
 8025a28:	4610      	mov	r0, r2
 8025a2a:	e7c9      	b.n	80259c0 <_strtod_l+0x1e8>
 8025a2c:	4638      	mov	r0, r7
 8025a2e:	e7d2      	b.n	80259d6 <_strtod_l+0x1fe>
 8025a30:	2a08      	cmp	r2, #8
 8025a32:	dc04      	bgt.n	8025a3e <_strtod_l+0x266>
 8025a34:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8025a36:	434e      	muls	r6, r1
 8025a38:	9609      	str	r6, [sp, #36]	; 0x24
 8025a3a:	3201      	adds	r2, #1
 8025a3c:	e7e2      	b.n	8025a04 <_strtod_l+0x22c>
 8025a3e:	f102 0c01 	add.w	ip, r2, #1
 8025a42:	f1bc 0f10 	cmp.w	ip, #16
 8025a46:	bfd8      	it	le
 8025a48:	fb01 f909 	mulle.w	r9, r1, r9
 8025a4c:	e7f5      	b.n	8025a3a <_strtod_l+0x262>
 8025a4e:	2d10      	cmp	r5, #16
 8025a50:	bfdc      	itt	le
 8025a52:	220a      	movle	r2, #10
 8025a54:	fb02 3909 	mlale	r9, r2, r9, r3
 8025a58:	e7e1      	b.n	8025a1e <_strtod_l+0x246>
 8025a5a:	2300      	movs	r3, #0
 8025a5c:	9307      	str	r3, [sp, #28]
 8025a5e:	2201      	movs	r2, #1
 8025a60:	e77c      	b.n	802595c <_strtod_l+0x184>
 8025a62:	f04f 0c00 	mov.w	ip, #0
 8025a66:	f108 0302 	add.w	r3, r8, #2
 8025a6a:	931d      	str	r3, [sp, #116]	; 0x74
 8025a6c:	f898 3002 	ldrb.w	r3, [r8, #2]
 8025a70:	e785      	b.n	802597e <_strtod_l+0x1a6>
 8025a72:	f04f 0c01 	mov.w	ip, #1
 8025a76:	e7f6      	b.n	8025a66 <_strtod_l+0x28e>
 8025a78:	0802a46c 	.word	0x0802a46c
 8025a7c:	0802a1f8 	.word	0x0802a1f8
 8025a80:	7ff00000 	.word	0x7ff00000
 8025a84:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025a86:	1c59      	adds	r1, r3, #1
 8025a88:	911d      	str	r1, [sp, #116]	; 0x74
 8025a8a:	785b      	ldrb	r3, [r3, #1]
 8025a8c:	2b30      	cmp	r3, #48	; 0x30
 8025a8e:	d0f9      	beq.n	8025a84 <_strtod_l+0x2ac>
 8025a90:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8025a94:	2908      	cmp	r1, #8
 8025a96:	f63f af79 	bhi.w	802598c <_strtod_l+0x1b4>
 8025a9a:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8025a9e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025aa0:	9308      	str	r3, [sp, #32]
 8025aa2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025aa4:	1c59      	adds	r1, r3, #1
 8025aa6:	911d      	str	r1, [sp, #116]	; 0x74
 8025aa8:	785b      	ldrb	r3, [r3, #1]
 8025aaa:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
 8025aae:	2e09      	cmp	r6, #9
 8025ab0:	d937      	bls.n	8025b22 <_strtod_l+0x34a>
 8025ab2:	9e08      	ldr	r6, [sp, #32]
 8025ab4:	1b89      	subs	r1, r1, r6
 8025ab6:	2908      	cmp	r1, #8
 8025ab8:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8025abc:	dc02      	bgt.n	8025ac4 <_strtod_l+0x2ec>
 8025abe:	4576      	cmp	r6, lr
 8025ac0:	bfa8      	it	ge
 8025ac2:	4676      	movge	r6, lr
 8025ac4:	f1bc 0f00 	cmp.w	ip, #0
 8025ac8:	d000      	beq.n	8025acc <_strtod_l+0x2f4>
 8025aca:	4276      	negs	r6, r6
 8025acc:	2d00      	cmp	r5, #0
 8025ace:	d14f      	bne.n	8025b70 <_strtod_l+0x398>
 8025ad0:	9904      	ldr	r1, [sp, #16]
 8025ad2:	4301      	orrs	r1, r0
 8025ad4:	f47f aec2 	bne.w	802585c <_strtod_l+0x84>
 8025ad8:	2a00      	cmp	r2, #0
 8025ada:	f47f aedb 	bne.w	8025894 <_strtod_l+0xbc>
 8025ade:	2b69      	cmp	r3, #105	; 0x69
 8025ae0:	d027      	beq.n	8025b32 <_strtod_l+0x35a>
 8025ae2:	dc24      	bgt.n	8025b2e <_strtod_l+0x356>
 8025ae4:	2b49      	cmp	r3, #73	; 0x49
 8025ae6:	d024      	beq.n	8025b32 <_strtod_l+0x35a>
 8025ae8:	2b4e      	cmp	r3, #78	; 0x4e
 8025aea:	f47f aed3 	bne.w	8025894 <_strtod_l+0xbc>
 8025aee:	499e      	ldr	r1, [pc, #632]	; (8025d68 <_strtod_l+0x590>)
 8025af0:	a81d      	add	r0, sp, #116	; 0x74
 8025af2:	f001 ff79 	bl	80279e8 <__match>
 8025af6:	2800      	cmp	r0, #0
 8025af8:	f43f aecc 	beq.w	8025894 <_strtod_l+0xbc>
 8025afc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025afe:	781b      	ldrb	r3, [r3, #0]
 8025b00:	2b28      	cmp	r3, #40	; 0x28
 8025b02:	d12d      	bne.n	8025b60 <_strtod_l+0x388>
 8025b04:	4999      	ldr	r1, [pc, #612]	; (8025d6c <_strtod_l+0x594>)
 8025b06:	aa20      	add	r2, sp, #128	; 0x80
 8025b08:	a81d      	add	r0, sp, #116	; 0x74
 8025b0a:	f001 ff81 	bl	8027a10 <__hexnan>
 8025b0e:	2805      	cmp	r0, #5
 8025b10:	d126      	bne.n	8025b60 <_strtod_l+0x388>
 8025b12:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025b14:	f8dd a080 	ldr.w	sl, [sp, #128]	; 0x80
 8025b18:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8025b1c:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8025b20:	e69c      	b.n	802585c <_strtod_l+0x84>
 8025b22:	210a      	movs	r1, #10
 8025b24:	fb01 3e0e 	mla	lr, r1, lr, r3
 8025b28:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8025b2c:	e7b9      	b.n	8025aa2 <_strtod_l+0x2ca>
 8025b2e:	2b6e      	cmp	r3, #110	; 0x6e
 8025b30:	e7db      	b.n	8025aea <_strtod_l+0x312>
 8025b32:	498f      	ldr	r1, [pc, #572]	; (8025d70 <_strtod_l+0x598>)
 8025b34:	a81d      	add	r0, sp, #116	; 0x74
 8025b36:	f001 ff57 	bl	80279e8 <__match>
 8025b3a:	2800      	cmp	r0, #0
 8025b3c:	f43f aeaa 	beq.w	8025894 <_strtod_l+0xbc>
 8025b40:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025b42:	498c      	ldr	r1, [pc, #560]	; (8025d74 <_strtod_l+0x59c>)
 8025b44:	3b01      	subs	r3, #1
 8025b46:	a81d      	add	r0, sp, #116	; 0x74
 8025b48:	931d      	str	r3, [sp, #116]	; 0x74
 8025b4a:	f001 ff4d 	bl	80279e8 <__match>
 8025b4e:	b910      	cbnz	r0, 8025b56 <_strtod_l+0x37e>
 8025b50:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025b52:	3301      	adds	r3, #1
 8025b54:	931d      	str	r3, [sp, #116]	; 0x74
 8025b56:	f8df b22c 	ldr.w	fp, [pc, #556]	; 8025d84 <_strtod_l+0x5ac>
 8025b5a:	f04f 0a00 	mov.w	sl, #0
 8025b5e:	e67d      	b.n	802585c <_strtod_l+0x84>
 8025b60:	4885      	ldr	r0, [pc, #532]	; (8025d78 <_strtod_l+0x5a0>)
 8025b62:	f7fe fec1 	bl	80248e8 <nan>
 8025b66:	ed8d 0b04 	vstr	d0, [sp, #16]
 8025b6a:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 8025b6e:	e675      	b.n	802585c <_strtod_l+0x84>
 8025b70:	9b07      	ldr	r3, [sp, #28]
 8025b72:	9809      	ldr	r0, [sp, #36]	; 0x24
 8025b74:	1af3      	subs	r3, r6, r3
 8025b76:	2f00      	cmp	r7, #0
 8025b78:	bf08      	it	eq
 8025b7a:	462f      	moveq	r7, r5
 8025b7c:	2d10      	cmp	r5, #16
 8025b7e:	9308      	str	r3, [sp, #32]
 8025b80:	46a8      	mov	r8, r5
 8025b82:	bfa8      	it	ge
 8025b84:	f04f 0810 	movge.w	r8, #16
 8025b88:	f7da fcdc 	bl	8000544 <__aeabi_ui2d>
 8025b8c:	2d09      	cmp	r5, #9
 8025b8e:	4682      	mov	sl, r0
 8025b90:	468b      	mov	fp, r1
 8025b92:	dd13      	ble.n	8025bbc <_strtod_l+0x3e4>
 8025b94:	4b79      	ldr	r3, [pc, #484]	; (8025d7c <_strtod_l+0x5a4>)
 8025b96:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8025b9a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8025b9e:	f7da fd4b 	bl	8000638 <__aeabi_dmul>
 8025ba2:	4682      	mov	sl, r0
 8025ba4:	4648      	mov	r0, r9
 8025ba6:	468b      	mov	fp, r1
 8025ba8:	f7da fccc 	bl	8000544 <__aeabi_ui2d>
 8025bac:	4602      	mov	r2, r0
 8025bae:	460b      	mov	r3, r1
 8025bb0:	4650      	mov	r0, sl
 8025bb2:	4659      	mov	r1, fp
 8025bb4:	f7da fb8a 	bl	80002cc <__adddf3>
 8025bb8:	4682      	mov	sl, r0
 8025bba:	468b      	mov	fp, r1
 8025bbc:	2d0f      	cmp	r5, #15
 8025bbe:	dc38      	bgt.n	8025c32 <_strtod_l+0x45a>
 8025bc0:	9b08      	ldr	r3, [sp, #32]
 8025bc2:	2b00      	cmp	r3, #0
 8025bc4:	f43f ae4a 	beq.w	802585c <_strtod_l+0x84>
 8025bc8:	dd24      	ble.n	8025c14 <_strtod_l+0x43c>
 8025bca:	2b16      	cmp	r3, #22
 8025bcc:	dc0b      	bgt.n	8025be6 <_strtod_l+0x40e>
 8025bce:	4d6b      	ldr	r5, [pc, #428]	; (8025d7c <_strtod_l+0x5a4>)
 8025bd0:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8025bd4:	e9d5 0100 	ldrd	r0, r1, [r5]
 8025bd8:	4652      	mov	r2, sl
 8025bda:	465b      	mov	r3, fp
 8025bdc:	f7da fd2c 	bl	8000638 <__aeabi_dmul>
 8025be0:	4682      	mov	sl, r0
 8025be2:	468b      	mov	fp, r1
 8025be4:	e63a      	b.n	802585c <_strtod_l+0x84>
 8025be6:	9a08      	ldr	r2, [sp, #32]
 8025be8:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8025bec:	4293      	cmp	r3, r2
 8025bee:	db20      	blt.n	8025c32 <_strtod_l+0x45a>
 8025bf0:	4c62      	ldr	r4, [pc, #392]	; (8025d7c <_strtod_l+0x5a4>)
 8025bf2:	f1c5 050f 	rsb	r5, r5, #15
 8025bf6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8025bfa:	4652      	mov	r2, sl
 8025bfc:	465b      	mov	r3, fp
 8025bfe:	e9d1 0100 	ldrd	r0, r1, [r1]
 8025c02:	f7da fd19 	bl	8000638 <__aeabi_dmul>
 8025c06:	9b08      	ldr	r3, [sp, #32]
 8025c08:	1b5d      	subs	r5, r3, r5
 8025c0a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8025c0e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8025c12:	e7e3      	b.n	8025bdc <_strtod_l+0x404>
 8025c14:	9b08      	ldr	r3, [sp, #32]
 8025c16:	3316      	adds	r3, #22
 8025c18:	db0b      	blt.n	8025c32 <_strtod_l+0x45a>
 8025c1a:	9b07      	ldr	r3, [sp, #28]
 8025c1c:	4a57      	ldr	r2, [pc, #348]	; (8025d7c <_strtod_l+0x5a4>)
 8025c1e:	1b9e      	subs	r6, r3, r6
 8025c20:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 8025c24:	e9d6 2300 	ldrd	r2, r3, [r6]
 8025c28:	4650      	mov	r0, sl
 8025c2a:	4659      	mov	r1, fp
 8025c2c:	f7da fe2e 	bl	800088c <__aeabi_ddiv>
 8025c30:	e7d6      	b.n	8025be0 <_strtod_l+0x408>
 8025c32:	9b08      	ldr	r3, [sp, #32]
 8025c34:	eba5 0808 	sub.w	r8, r5, r8
 8025c38:	4498      	add	r8, r3
 8025c3a:	f1b8 0f00 	cmp.w	r8, #0
 8025c3e:	dd71      	ble.n	8025d24 <_strtod_l+0x54c>
 8025c40:	f018 030f 	ands.w	r3, r8, #15
 8025c44:	d00a      	beq.n	8025c5c <_strtod_l+0x484>
 8025c46:	494d      	ldr	r1, [pc, #308]	; (8025d7c <_strtod_l+0x5a4>)
 8025c48:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8025c4c:	4652      	mov	r2, sl
 8025c4e:	465b      	mov	r3, fp
 8025c50:	e9d1 0100 	ldrd	r0, r1, [r1]
 8025c54:	f7da fcf0 	bl	8000638 <__aeabi_dmul>
 8025c58:	4682      	mov	sl, r0
 8025c5a:	468b      	mov	fp, r1
 8025c5c:	f038 080f 	bics.w	r8, r8, #15
 8025c60:	d04d      	beq.n	8025cfe <_strtod_l+0x526>
 8025c62:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8025c66:	dd22      	ble.n	8025cae <_strtod_l+0x4d6>
 8025c68:	2500      	movs	r5, #0
 8025c6a:	462e      	mov	r6, r5
 8025c6c:	9509      	str	r5, [sp, #36]	; 0x24
 8025c6e:	9507      	str	r5, [sp, #28]
 8025c70:	2322      	movs	r3, #34	; 0x22
 8025c72:	f8df b110 	ldr.w	fp, [pc, #272]	; 8025d84 <_strtod_l+0x5ac>
 8025c76:	6023      	str	r3, [r4, #0]
 8025c78:	f04f 0a00 	mov.w	sl, #0
 8025c7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025c7e:	2b00      	cmp	r3, #0
 8025c80:	f43f adec 	beq.w	802585c <_strtod_l+0x84>
 8025c84:	991e      	ldr	r1, [sp, #120]	; 0x78
 8025c86:	4620      	mov	r0, r4
 8025c88:	f001 ffc4 	bl	8027c14 <_Bfree>
 8025c8c:	9907      	ldr	r1, [sp, #28]
 8025c8e:	4620      	mov	r0, r4
 8025c90:	f001 ffc0 	bl	8027c14 <_Bfree>
 8025c94:	4631      	mov	r1, r6
 8025c96:	4620      	mov	r0, r4
 8025c98:	f001 ffbc 	bl	8027c14 <_Bfree>
 8025c9c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025c9e:	4620      	mov	r0, r4
 8025ca0:	f001 ffb8 	bl	8027c14 <_Bfree>
 8025ca4:	4629      	mov	r1, r5
 8025ca6:	4620      	mov	r0, r4
 8025ca8:	f001 ffb4 	bl	8027c14 <_Bfree>
 8025cac:	e5d6      	b.n	802585c <_strtod_l+0x84>
 8025cae:	2300      	movs	r3, #0
 8025cb0:	ea4f 1828 	mov.w	r8, r8, asr #4
 8025cb4:	4650      	mov	r0, sl
 8025cb6:	4659      	mov	r1, fp
 8025cb8:	4699      	mov	r9, r3
 8025cba:	f1b8 0f01 	cmp.w	r8, #1
 8025cbe:	dc21      	bgt.n	8025d04 <_strtod_l+0x52c>
 8025cc0:	b10b      	cbz	r3, 8025cc6 <_strtod_l+0x4ee>
 8025cc2:	4682      	mov	sl, r0
 8025cc4:	468b      	mov	fp, r1
 8025cc6:	4b2e      	ldr	r3, [pc, #184]	; (8025d80 <_strtod_l+0x5a8>)
 8025cc8:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8025ccc:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8025cd0:	4652      	mov	r2, sl
 8025cd2:	465b      	mov	r3, fp
 8025cd4:	e9d9 0100 	ldrd	r0, r1, [r9]
 8025cd8:	f7da fcae 	bl	8000638 <__aeabi_dmul>
 8025cdc:	4b29      	ldr	r3, [pc, #164]	; (8025d84 <_strtod_l+0x5ac>)
 8025cde:	460a      	mov	r2, r1
 8025ce0:	400b      	ands	r3, r1
 8025ce2:	4929      	ldr	r1, [pc, #164]	; (8025d88 <_strtod_l+0x5b0>)
 8025ce4:	428b      	cmp	r3, r1
 8025ce6:	4682      	mov	sl, r0
 8025ce8:	d8be      	bhi.n	8025c68 <_strtod_l+0x490>
 8025cea:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8025cee:	428b      	cmp	r3, r1
 8025cf0:	bf86      	itte	hi
 8025cf2:	f8df b098 	ldrhi.w	fp, [pc, #152]	; 8025d8c <_strtod_l+0x5b4>
 8025cf6:	f04f 3aff 	movhi.w	sl, #4294967295
 8025cfa:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8025cfe:	2300      	movs	r3, #0
 8025d00:	9304      	str	r3, [sp, #16]
 8025d02:	e081      	b.n	8025e08 <_strtod_l+0x630>
 8025d04:	f018 0f01 	tst.w	r8, #1
 8025d08:	d007      	beq.n	8025d1a <_strtod_l+0x542>
 8025d0a:	4b1d      	ldr	r3, [pc, #116]	; (8025d80 <_strtod_l+0x5a8>)
 8025d0c:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8025d10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025d14:	f7da fc90 	bl	8000638 <__aeabi_dmul>
 8025d18:	2301      	movs	r3, #1
 8025d1a:	f109 0901 	add.w	r9, r9, #1
 8025d1e:	ea4f 0868 	mov.w	r8, r8, asr #1
 8025d22:	e7ca      	b.n	8025cba <_strtod_l+0x4e2>
 8025d24:	d0eb      	beq.n	8025cfe <_strtod_l+0x526>
 8025d26:	f1c8 0800 	rsb	r8, r8, #0
 8025d2a:	f018 020f 	ands.w	r2, r8, #15
 8025d2e:	d00a      	beq.n	8025d46 <_strtod_l+0x56e>
 8025d30:	4b12      	ldr	r3, [pc, #72]	; (8025d7c <_strtod_l+0x5a4>)
 8025d32:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8025d36:	4650      	mov	r0, sl
 8025d38:	4659      	mov	r1, fp
 8025d3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025d3e:	f7da fda5 	bl	800088c <__aeabi_ddiv>
 8025d42:	4682      	mov	sl, r0
 8025d44:	468b      	mov	fp, r1
 8025d46:	ea5f 1828 	movs.w	r8, r8, asr #4
 8025d4a:	d0d8      	beq.n	8025cfe <_strtod_l+0x526>
 8025d4c:	f1b8 0f1f 	cmp.w	r8, #31
 8025d50:	dd1e      	ble.n	8025d90 <_strtod_l+0x5b8>
 8025d52:	2500      	movs	r5, #0
 8025d54:	462e      	mov	r6, r5
 8025d56:	9509      	str	r5, [sp, #36]	; 0x24
 8025d58:	9507      	str	r5, [sp, #28]
 8025d5a:	2322      	movs	r3, #34	; 0x22
 8025d5c:	f04f 0a00 	mov.w	sl, #0
 8025d60:	f04f 0b00 	mov.w	fp, #0
 8025d64:	6023      	str	r3, [r4, #0]
 8025d66:	e789      	b.n	8025c7c <_strtod_l+0x4a4>
 8025d68:	0802a1d1 	.word	0x0802a1d1
 8025d6c:	0802a20c 	.word	0x0802a20c
 8025d70:	0802a1c9 	.word	0x0802a1c9
 8025d74:	0802a371 	.word	0x0802a371
 8025d78:	0802a628 	.word	0x0802a628
 8025d7c:	0802a508 	.word	0x0802a508
 8025d80:	0802a4e0 	.word	0x0802a4e0
 8025d84:	7ff00000 	.word	0x7ff00000
 8025d88:	7ca00000 	.word	0x7ca00000
 8025d8c:	7fefffff 	.word	0x7fefffff
 8025d90:	f018 0310 	ands.w	r3, r8, #16
 8025d94:	bf18      	it	ne
 8025d96:	236a      	movne	r3, #106	; 0x6a
 8025d98:	f8df 93b4 	ldr.w	r9, [pc, #948]	; 8026150 <_strtod_l+0x978>
 8025d9c:	9304      	str	r3, [sp, #16]
 8025d9e:	4650      	mov	r0, sl
 8025da0:	4659      	mov	r1, fp
 8025da2:	2300      	movs	r3, #0
 8025da4:	f018 0f01 	tst.w	r8, #1
 8025da8:	d004      	beq.n	8025db4 <_strtod_l+0x5dc>
 8025daa:	e9d9 2300 	ldrd	r2, r3, [r9]
 8025dae:	f7da fc43 	bl	8000638 <__aeabi_dmul>
 8025db2:	2301      	movs	r3, #1
 8025db4:	ea5f 0868 	movs.w	r8, r8, asr #1
 8025db8:	f109 0908 	add.w	r9, r9, #8
 8025dbc:	d1f2      	bne.n	8025da4 <_strtod_l+0x5cc>
 8025dbe:	b10b      	cbz	r3, 8025dc4 <_strtod_l+0x5ec>
 8025dc0:	4682      	mov	sl, r0
 8025dc2:	468b      	mov	fp, r1
 8025dc4:	9b04      	ldr	r3, [sp, #16]
 8025dc6:	b1bb      	cbz	r3, 8025df8 <_strtod_l+0x620>
 8025dc8:	f3cb 530a 	ubfx	r3, fp, #20, #11
 8025dcc:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8025dd0:	2b00      	cmp	r3, #0
 8025dd2:	4659      	mov	r1, fp
 8025dd4:	dd10      	ble.n	8025df8 <_strtod_l+0x620>
 8025dd6:	2b1f      	cmp	r3, #31
 8025dd8:	f340 8128 	ble.w	802602c <_strtod_l+0x854>
 8025ddc:	2b34      	cmp	r3, #52	; 0x34
 8025dde:	bfde      	ittt	le
 8025de0:	3b20      	suble	r3, #32
 8025de2:	f04f 32ff 	movle.w	r2, #4294967295
 8025de6:	fa02 f303 	lslle.w	r3, r2, r3
 8025dea:	f04f 0a00 	mov.w	sl, #0
 8025dee:	bfcc      	ite	gt
 8025df0:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8025df4:	ea03 0b01 	andle.w	fp, r3, r1
 8025df8:	2200      	movs	r2, #0
 8025dfa:	2300      	movs	r3, #0
 8025dfc:	4650      	mov	r0, sl
 8025dfe:	4659      	mov	r1, fp
 8025e00:	f7da fe82 	bl	8000b08 <__aeabi_dcmpeq>
 8025e04:	2800      	cmp	r0, #0
 8025e06:	d1a4      	bne.n	8025d52 <_strtod_l+0x57a>
 8025e08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e0a:	9300      	str	r3, [sp, #0]
 8025e0c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8025e0e:	462b      	mov	r3, r5
 8025e10:	463a      	mov	r2, r7
 8025e12:	4620      	mov	r0, r4
 8025e14:	f001 ff6a 	bl	8027cec <__s2b>
 8025e18:	9009      	str	r0, [sp, #36]	; 0x24
 8025e1a:	2800      	cmp	r0, #0
 8025e1c:	f43f af24 	beq.w	8025c68 <_strtod_l+0x490>
 8025e20:	9b07      	ldr	r3, [sp, #28]
 8025e22:	1b9e      	subs	r6, r3, r6
 8025e24:	9b08      	ldr	r3, [sp, #32]
 8025e26:	2b00      	cmp	r3, #0
 8025e28:	bfb4      	ite	lt
 8025e2a:	4633      	movlt	r3, r6
 8025e2c:	2300      	movge	r3, #0
 8025e2e:	9310      	str	r3, [sp, #64]	; 0x40
 8025e30:	9b08      	ldr	r3, [sp, #32]
 8025e32:	2500      	movs	r5, #0
 8025e34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8025e38:	9318      	str	r3, [sp, #96]	; 0x60
 8025e3a:	462e      	mov	r6, r5
 8025e3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e3e:	4620      	mov	r0, r4
 8025e40:	6859      	ldr	r1, [r3, #4]
 8025e42:	f001 fea7 	bl	8027b94 <_Balloc>
 8025e46:	9007      	str	r0, [sp, #28]
 8025e48:	2800      	cmp	r0, #0
 8025e4a:	f43f af11 	beq.w	8025c70 <_strtod_l+0x498>
 8025e4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e50:	691a      	ldr	r2, [r3, #16]
 8025e52:	3202      	adds	r2, #2
 8025e54:	f103 010c 	add.w	r1, r3, #12
 8025e58:	0092      	lsls	r2, r2, #2
 8025e5a:	300c      	adds	r0, #12
 8025e5c:	f7fe fee6 	bl	8024c2c <memcpy>
 8025e60:	ec4b ab10 	vmov	d0, sl, fp
 8025e64:	aa20      	add	r2, sp, #128	; 0x80
 8025e66:	a91f      	add	r1, sp, #124	; 0x7c
 8025e68:	4620      	mov	r0, r4
 8025e6a:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 8025e6e:	f002 fa79 	bl	8028364 <__d2b>
 8025e72:	901e      	str	r0, [sp, #120]	; 0x78
 8025e74:	2800      	cmp	r0, #0
 8025e76:	f43f aefb 	beq.w	8025c70 <_strtod_l+0x498>
 8025e7a:	2101      	movs	r1, #1
 8025e7c:	4620      	mov	r0, r4
 8025e7e:	f001 ffcf 	bl	8027e20 <__i2b>
 8025e82:	4606      	mov	r6, r0
 8025e84:	2800      	cmp	r0, #0
 8025e86:	f43f aef3 	beq.w	8025c70 <_strtod_l+0x498>
 8025e8a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025e8c:	9904      	ldr	r1, [sp, #16]
 8025e8e:	2b00      	cmp	r3, #0
 8025e90:	bfab      	itete	ge
 8025e92:	9a10      	ldrge	r2, [sp, #64]	; 0x40
 8025e94:	9a18      	ldrlt	r2, [sp, #96]	; 0x60
 8025e96:	9f18      	ldrge	r7, [sp, #96]	; 0x60
 8025e98:	f8dd 9040 	ldrlt.w	r9, [sp, #64]	; 0x40
 8025e9c:	bfac      	ite	ge
 8025e9e:	eb03 0902 	addge.w	r9, r3, r2
 8025ea2:	1ad7      	sublt	r7, r2, r3
 8025ea4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8025ea6:	eba3 0801 	sub.w	r8, r3, r1
 8025eaa:	4490      	add	r8, r2
 8025eac:	4ba3      	ldr	r3, [pc, #652]	; (802613c <_strtod_l+0x964>)
 8025eae:	f108 38ff 	add.w	r8, r8, #4294967295
 8025eb2:	4598      	cmp	r8, r3
 8025eb4:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8025eb8:	f280 80cc 	bge.w	8026054 <_strtod_l+0x87c>
 8025ebc:	eba3 0308 	sub.w	r3, r3, r8
 8025ec0:	2b1f      	cmp	r3, #31
 8025ec2:	eba2 0203 	sub.w	r2, r2, r3
 8025ec6:	f04f 0101 	mov.w	r1, #1
 8025eca:	f300 80b6 	bgt.w	802603a <_strtod_l+0x862>
 8025ece:	fa01 f303 	lsl.w	r3, r1, r3
 8025ed2:	9311      	str	r3, [sp, #68]	; 0x44
 8025ed4:	2300      	movs	r3, #0
 8025ed6:	930c      	str	r3, [sp, #48]	; 0x30
 8025ed8:	eb09 0802 	add.w	r8, r9, r2
 8025edc:	9b04      	ldr	r3, [sp, #16]
 8025ede:	45c1      	cmp	r9, r8
 8025ee0:	4417      	add	r7, r2
 8025ee2:	441f      	add	r7, r3
 8025ee4:	464b      	mov	r3, r9
 8025ee6:	bfa8      	it	ge
 8025ee8:	4643      	movge	r3, r8
 8025eea:	42bb      	cmp	r3, r7
 8025eec:	bfa8      	it	ge
 8025eee:	463b      	movge	r3, r7
 8025ef0:	2b00      	cmp	r3, #0
 8025ef2:	bfc2      	ittt	gt
 8025ef4:	eba8 0803 	subgt.w	r8, r8, r3
 8025ef8:	1aff      	subgt	r7, r7, r3
 8025efa:	eba9 0903 	subgt.w	r9, r9, r3
 8025efe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025f00:	2b00      	cmp	r3, #0
 8025f02:	dd17      	ble.n	8025f34 <_strtod_l+0x75c>
 8025f04:	4631      	mov	r1, r6
 8025f06:	461a      	mov	r2, r3
 8025f08:	4620      	mov	r0, r4
 8025f0a:	f002 f845 	bl	8027f98 <__pow5mult>
 8025f0e:	4606      	mov	r6, r0
 8025f10:	2800      	cmp	r0, #0
 8025f12:	f43f aead 	beq.w	8025c70 <_strtod_l+0x498>
 8025f16:	4601      	mov	r1, r0
 8025f18:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8025f1a:	4620      	mov	r0, r4
 8025f1c:	f001 ff96 	bl	8027e4c <__multiply>
 8025f20:	900f      	str	r0, [sp, #60]	; 0x3c
 8025f22:	2800      	cmp	r0, #0
 8025f24:	f43f aea4 	beq.w	8025c70 <_strtod_l+0x498>
 8025f28:	991e      	ldr	r1, [sp, #120]	; 0x78
 8025f2a:	4620      	mov	r0, r4
 8025f2c:	f001 fe72 	bl	8027c14 <_Bfree>
 8025f30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025f32:	931e      	str	r3, [sp, #120]	; 0x78
 8025f34:	f1b8 0f00 	cmp.w	r8, #0
 8025f38:	f300 8091 	bgt.w	802605e <_strtod_l+0x886>
 8025f3c:	9b08      	ldr	r3, [sp, #32]
 8025f3e:	2b00      	cmp	r3, #0
 8025f40:	dd08      	ble.n	8025f54 <_strtod_l+0x77c>
 8025f42:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025f44:	9907      	ldr	r1, [sp, #28]
 8025f46:	4620      	mov	r0, r4
 8025f48:	f002 f826 	bl	8027f98 <__pow5mult>
 8025f4c:	9007      	str	r0, [sp, #28]
 8025f4e:	2800      	cmp	r0, #0
 8025f50:	f43f ae8e 	beq.w	8025c70 <_strtod_l+0x498>
 8025f54:	2f00      	cmp	r7, #0
 8025f56:	dd08      	ble.n	8025f6a <_strtod_l+0x792>
 8025f58:	9907      	ldr	r1, [sp, #28]
 8025f5a:	463a      	mov	r2, r7
 8025f5c:	4620      	mov	r0, r4
 8025f5e:	f002 f875 	bl	802804c <__lshift>
 8025f62:	9007      	str	r0, [sp, #28]
 8025f64:	2800      	cmp	r0, #0
 8025f66:	f43f ae83 	beq.w	8025c70 <_strtod_l+0x498>
 8025f6a:	f1b9 0f00 	cmp.w	r9, #0
 8025f6e:	dd08      	ble.n	8025f82 <_strtod_l+0x7aa>
 8025f70:	4631      	mov	r1, r6
 8025f72:	464a      	mov	r2, r9
 8025f74:	4620      	mov	r0, r4
 8025f76:	f002 f869 	bl	802804c <__lshift>
 8025f7a:	4606      	mov	r6, r0
 8025f7c:	2800      	cmp	r0, #0
 8025f7e:	f43f ae77 	beq.w	8025c70 <_strtod_l+0x498>
 8025f82:	9a07      	ldr	r2, [sp, #28]
 8025f84:	991e      	ldr	r1, [sp, #120]	; 0x78
 8025f86:	4620      	mov	r0, r4
 8025f88:	f002 f8e8 	bl	802815c <__mdiff>
 8025f8c:	4605      	mov	r5, r0
 8025f8e:	2800      	cmp	r0, #0
 8025f90:	f43f ae6e 	beq.w	8025c70 <_strtod_l+0x498>
 8025f94:	68c3      	ldr	r3, [r0, #12]
 8025f96:	930f      	str	r3, [sp, #60]	; 0x3c
 8025f98:	2300      	movs	r3, #0
 8025f9a:	60c3      	str	r3, [r0, #12]
 8025f9c:	4631      	mov	r1, r6
 8025f9e:	f002 f8c1 	bl	8028124 <__mcmp>
 8025fa2:	2800      	cmp	r0, #0
 8025fa4:	da65      	bge.n	8026072 <_strtod_l+0x89a>
 8025fa6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025fa8:	ea53 030a 	orrs.w	r3, r3, sl
 8025fac:	f040 8087 	bne.w	80260be <_strtod_l+0x8e6>
 8025fb0:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8025fb4:	2b00      	cmp	r3, #0
 8025fb6:	f040 8082 	bne.w	80260be <_strtod_l+0x8e6>
 8025fba:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8025fbe:	0d1b      	lsrs	r3, r3, #20
 8025fc0:	051b      	lsls	r3, r3, #20
 8025fc2:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8025fc6:	d97a      	bls.n	80260be <_strtod_l+0x8e6>
 8025fc8:	696b      	ldr	r3, [r5, #20]
 8025fca:	b913      	cbnz	r3, 8025fd2 <_strtod_l+0x7fa>
 8025fcc:	692b      	ldr	r3, [r5, #16]
 8025fce:	2b01      	cmp	r3, #1
 8025fd0:	dd75      	ble.n	80260be <_strtod_l+0x8e6>
 8025fd2:	4629      	mov	r1, r5
 8025fd4:	2201      	movs	r2, #1
 8025fd6:	4620      	mov	r0, r4
 8025fd8:	f002 f838 	bl	802804c <__lshift>
 8025fdc:	4631      	mov	r1, r6
 8025fde:	4605      	mov	r5, r0
 8025fe0:	f002 f8a0 	bl	8028124 <__mcmp>
 8025fe4:	2800      	cmp	r0, #0
 8025fe6:	dd6a      	ble.n	80260be <_strtod_l+0x8e6>
 8025fe8:	9904      	ldr	r1, [sp, #16]
 8025fea:	4a55      	ldr	r2, [pc, #340]	; (8026140 <_strtod_l+0x968>)
 8025fec:	465b      	mov	r3, fp
 8025fee:	2900      	cmp	r1, #0
 8025ff0:	f000 8085 	beq.w	80260fe <_strtod_l+0x926>
 8025ff4:	ea02 010b 	and.w	r1, r2, fp
 8025ff8:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8025ffc:	dc7f      	bgt.n	80260fe <_strtod_l+0x926>
 8025ffe:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8026002:	f77f aeaa 	ble.w	8025d5a <_strtod_l+0x582>
 8026006:	4a4f      	ldr	r2, [pc, #316]	; (8026144 <_strtod_l+0x96c>)
 8026008:	2300      	movs	r3, #0
 802600a:	e9cd 3216 	strd	r3, r2, [sp, #88]	; 0x58
 802600e:	4650      	mov	r0, sl
 8026010:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
 8026014:	4659      	mov	r1, fp
 8026016:	f7da fb0f 	bl	8000638 <__aeabi_dmul>
 802601a:	460b      	mov	r3, r1
 802601c:	4303      	orrs	r3, r0
 802601e:	bf08      	it	eq
 8026020:	2322      	moveq	r3, #34	; 0x22
 8026022:	4682      	mov	sl, r0
 8026024:	468b      	mov	fp, r1
 8026026:	bf08      	it	eq
 8026028:	6023      	streq	r3, [r4, #0]
 802602a:	e62b      	b.n	8025c84 <_strtod_l+0x4ac>
 802602c:	f04f 32ff 	mov.w	r2, #4294967295
 8026030:	fa02 f303 	lsl.w	r3, r2, r3
 8026034:	ea03 0a0a 	and.w	sl, r3, sl
 8026038:	e6de      	b.n	8025df8 <_strtod_l+0x620>
 802603a:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 802603e:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 8026042:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 8026046:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 802604a:	fa01 f308 	lsl.w	r3, r1, r8
 802604e:	930c      	str	r3, [sp, #48]	; 0x30
 8026050:	9111      	str	r1, [sp, #68]	; 0x44
 8026052:	e741      	b.n	8025ed8 <_strtod_l+0x700>
 8026054:	2300      	movs	r3, #0
 8026056:	930c      	str	r3, [sp, #48]	; 0x30
 8026058:	2301      	movs	r3, #1
 802605a:	9311      	str	r3, [sp, #68]	; 0x44
 802605c:	e73c      	b.n	8025ed8 <_strtod_l+0x700>
 802605e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8026060:	4642      	mov	r2, r8
 8026062:	4620      	mov	r0, r4
 8026064:	f001 fff2 	bl	802804c <__lshift>
 8026068:	901e      	str	r0, [sp, #120]	; 0x78
 802606a:	2800      	cmp	r0, #0
 802606c:	f47f af66 	bne.w	8025f3c <_strtod_l+0x764>
 8026070:	e5fe      	b.n	8025c70 <_strtod_l+0x498>
 8026072:	465f      	mov	r7, fp
 8026074:	d16e      	bne.n	8026154 <_strtod_l+0x97c>
 8026076:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026078:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802607c:	b342      	cbz	r2, 80260d0 <_strtod_l+0x8f8>
 802607e:	4a32      	ldr	r2, [pc, #200]	; (8026148 <_strtod_l+0x970>)
 8026080:	4293      	cmp	r3, r2
 8026082:	d128      	bne.n	80260d6 <_strtod_l+0x8fe>
 8026084:	9b04      	ldr	r3, [sp, #16]
 8026086:	4650      	mov	r0, sl
 8026088:	b1eb      	cbz	r3, 80260c6 <_strtod_l+0x8ee>
 802608a:	4a2d      	ldr	r2, [pc, #180]	; (8026140 <_strtod_l+0x968>)
 802608c:	403a      	ands	r2, r7
 802608e:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8026092:	f04f 31ff 	mov.w	r1, #4294967295
 8026096:	d819      	bhi.n	80260cc <_strtod_l+0x8f4>
 8026098:	0d12      	lsrs	r2, r2, #20
 802609a:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 802609e:	fa01 f303 	lsl.w	r3, r1, r3
 80260a2:	4298      	cmp	r0, r3
 80260a4:	d117      	bne.n	80260d6 <_strtod_l+0x8fe>
 80260a6:	4b29      	ldr	r3, [pc, #164]	; (802614c <_strtod_l+0x974>)
 80260a8:	429f      	cmp	r7, r3
 80260aa:	d102      	bne.n	80260b2 <_strtod_l+0x8da>
 80260ac:	3001      	adds	r0, #1
 80260ae:	f43f addf 	beq.w	8025c70 <_strtod_l+0x498>
 80260b2:	4b23      	ldr	r3, [pc, #140]	; (8026140 <_strtod_l+0x968>)
 80260b4:	403b      	ands	r3, r7
 80260b6:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 80260ba:	f04f 0a00 	mov.w	sl, #0
 80260be:	9b04      	ldr	r3, [sp, #16]
 80260c0:	2b00      	cmp	r3, #0
 80260c2:	d1a0      	bne.n	8026006 <_strtod_l+0x82e>
 80260c4:	e5de      	b.n	8025c84 <_strtod_l+0x4ac>
 80260c6:	f04f 33ff 	mov.w	r3, #4294967295
 80260ca:	e7ea      	b.n	80260a2 <_strtod_l+0x8ca>
 80260cc:	460b      	mov	r3, r1
 80260ce:	e7e8      	b.n	80260a2 <_strtod_l+0x8ca>
 80260d0:	ea53 030a 	orrs.w	r3, r3, sl
 80260d4:	d088      	beq.n	8025fe8 <_strtod_l+0x810>
 80260d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80260d8:	b1db      	cbz	r3, 8026112 <_strtod_l+0x93a>
 80260da:	423b      	tst	r3, r7
 80260dc:	d0ef      	beq.n	80260be <_strtod_l+0x8e6>
 80260de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80260e0:	9a04      	ldr	r2, [sp, #16]
 80260e2:	4650      	mov	r0, sl
 80260e4:	4659      	mov	r1, fp
 80260e6:	b1c3      	cbz	r3, 802611a <_strtod_l+0x942>
 80260e8:	f7ff fb58 	bl	802579c <sulp>
 80260ec:	4602      	mov	r2, r0
 80260ee:	460b      	mov	r3, r1
 80260f0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80260f4:	f7da f8ea 	bl	80002cc <__adddf3>
 80260f8:	4682      	mov	sl, r0
 80260fa:	468b      	mov	fp, r1
 80260fc:	e7df      	b.n	80260be <_strtod_l+0x8e6>
 80260fe:	4013      	ands	r3, r2
 8026100:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8026104:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8026108:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 802610c:	f04f 3aff 	mov.w	sl, #4294967295
 8026110:	e7d5      	b.n	80260be <_strtod_l+0x8e6>
 8026112:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8026114:	ea13 0f0a 	tst.w	r3, sl
 8026118:	e7e0      	b.n	80260dc <_strtod_l+0x904>
 802611a:	f7ff fb3f 	bl	802579c <sulp>
 802611e:	4602      	mov	r2, r0
 8026120:	460b      	mov	r3, r1
 8026122:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8026126:	f7da f8cf 	bl	80002c8 <__aeabi_dsub>
 802612a:	2200      	movs	r2, #0
 802612c:	2300      	movs	r3, #0
 802612e:	4682      	mov	sl, r0
 8026130:	468b      	mov	fp, r1
 8026132:	f7da fce9 	bl	8000b08 <__aeabi_dcmpeq>
 8026136:	2800      	cmp	r0, #0
 8026138:	d0c1      	beq.n	80260be <_strtod_l+0x8e6>
 802613a:	e60e      	b.n	8025d5a <_strtod_l+0x582>
 802613c:	fffffc02 	.word	0xfffffc02
 8026140:	7ff00000 	.word	0x7ff00000
 8026144:	39500000 	.word	0x39500000
 8026148:	000fffff 	.word	0x000fffff
 802614c:	7fefffff 	.word	0x7fefffff
 8026150:	0802a220 	.word	0x0802a220
 8026154:	4631      	mov	r1, r6
 8026156:	4628      	mov	r0, r5
 8026158:	f002 f960 	bl	802841c <__ratio>
 802615c:	ec59 8b10 	vmov	r8, r9, d0
 8026160:	ee10 0a10 	vmov	r0, s0
 8026164:	2200      	movs	r2, #0
 8026166:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 802616a:	4649      	mov	r1, r9
 802616c:	f7da fce0 	bl	8000b30 <__aeabi_dcmple>
 8026170:	2800      	cmp	r0, #0
 8026172:	d07c      	beq.n	802626e <_strtod_l+0xa96>
 8026174:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026176:	2b00      	cmp	r3, #0
 8026178:	d04c      	beq.n	8026214 <_strtod_l+0xa3c>
 802617a:	4b95      	ldr	r3, [pc, #596]	; (80263d0 <_strtod_l+0xbf8>)
 802617c:	2200      	movs	r2, #0
 802617e:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8026182:	f8df 924c 	ldr.w	r9, [pc, #588]	; 80263d0 <_strtod_l+0xbf8>
 8026186:	f04f 0800 	mov.w	r8, #0
 802618a:	4b92      	ldr	r3, [pc, #584]	; (80263d4 <_strtod_l+0xbfc>)
 802618c:	403b      	ands	r3, r7
 802618e:	9311      	str	r3, [sp, #68]	; 0x44
 8026190:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026192:	4b91      	ldr	r3, [pc, #580]	; (80263d8 <_strtod_l+0xc00>)
 8026194:	429a      	cmp	r2, r3
 8026196:	f040 80b2 	bne.w	80262fe <_strtod_l+0xb26>
 802619a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 802619e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80261a2:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 80261a6:	ec4b ab10 	vmov	d0, sl, fp
 80261aa:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
 80261ae:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 80261b2:	f002 f85b 	bl	802826c <__ulp>
 80261b6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80261ba:	ec53 2b10 	vmov	r2, r3, d0
 80261be:	f7da fa3b 	bl	8000638 <__aeabi_dmul>
 80261c2:	4652      	mov	r2, sl
 80261c4:	465b      	mov	r3, fp
 80261c6:	f7da f881 	bl	80002cc <__adddf3>
 80261ca:	460b      	mov	r3, r1
 80261cc:	4981      	ldr	r1, [pc, #516]	; (80263d4 <_strtod_l+0xbfc>)
 80261ce:	4a83      	ldr	r2, [pc, #524]	; (80263dc <_strtod_l+0xc04>)
 80261d0:	4019      	ands	r1, r3
 80261d2:	4291      	cmp	r1, r2
 80261d4:	4682      	mov	sl, r0
 80261d6:	d95e      	bls.n	8026296 <_strtod_l+0xabe>
 80261d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80261da:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 80261de:	4293      	cmp	r3, r2
 80261e0:	d103      	bne.n	80261ea <_strtod_l+0xa12>
 80261e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80261e4:	3301      	adds	r3, #1
 80261e6:	f43f ad43 	beq.w	8025c70 <_strtod_l+0x498>
 80261ea:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 80263e8 <_strtod_l+0xc10>
 80261ee:	f04f 3aff 	mov.w	sl, #4294967295
 80261f2:	991e      	ldr	r1, [sp, #120]	; 0x78
 80261f4:	4620      	mov	r0, r4
 80261f6:	f001 fd0d 	bl	8027c14 <_Bfree>
 80261fa:	9907      	ldr	r1, [sp, #28]
 80261fc:	4620      	mov	r0, r4
 80261fe:	f001 fd09 	bl	8027c14 <_Bfree>
 8026202:	4631      	mov	r1, r6
 8026204:	4620      	mov	r0, r4
 8026206:	f001 fd05 	bl	8027c14 <_Bfree>
 802620a:	4629      	mov	r1, r5
 802620c:	4620      	mov	r0, r4
 802620e:	f001 fd01 	bl	8027c14 <_Bfree>
 8026212:	e613      	b.n	8025e3c <_strtod_l+0x664>
 8026214:	f1ba 0f00 	cmp.w	sl, #0
 8026218:	d11b      	bne.n	8026252 <_strtod_l+0xa7a>
 802621a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802621e:	b9f3      	cbnz	r3, 802625e <_strtod_l+0xa86>
 8026220:	4b6b      	ldr	r3, [pc, #428]	; (80263d0 <_strtod_l+0xbf8>)
 8026222:	2200      	movs	r2, #0
 8026224:	4640      	mov	r0, r8
 8026226:	4649      	mov	r1, r9
 8026228:	f7da fc78 	bl	8000b1c <__aeabi_dcmplt>
 802622c:	b9d0      	cbnz	r0, 8026264 <_strtod_l+0xa8c>
 802622e:	4640      	mov	r0, r8
 8026230:	4649      	mov	r1, r9
 8026232:	4b6b      	ldr	r3, [pc, #428]	; (80263e0 <_strtod_l+0xc08>)
 8026234:	2200      	movs	r2, #0
 8026236:	f7da f9ff 	bl	8000638 <__aeabi_dmul>
 802623a:	4680      	mov	r8, r0
 802623c:	4689      	mov	r9, r1
 802623e:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8026242:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 8026246:	931b      	str	r3, [sp, #108]	; 0x6c
 8026248:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
 802624c:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8026250:	e79b      	b.n	802618a <_strtod_l+0x9b2>
 8026252:	f1ba 0f01 	cmp.w	sl, #1
 8026256:	d102      	bne.n	802625e <_strtod_l+0xa86>
 8026258:	2f00      	cmp	r7, #0
 802625a:	f43f ad7e 	beq.w	8025d5a <_strtod_l+0x582>
 802625e:	4b61      	ldr	r3, [pc, #388]	; (80263e4 <_strtod_l+0xc0c>)
 8026260:	2200      	movs	r2, #0
 8026262:	e78c      	b.n	802617e <_strtod_l+0x9a6>
 8026264:	f8df 9178 	ldr.w	r9, [pc, #376]	; 80263e0 <_strtod_l+0xc08>
 8026268:	f04f 0800 	mov.w	r8, #0
 802626c:	e7e7      	b.n	802623e <_strtod_l+0xa66>
 802626e:	4b5c      	ldr	r3, [pc, #368]	; (80263e0 <_strtod_l+0xc08>)
 8026270:	4640      	mov	r0, r8
 8026272:	4649      	mov	r1, r9
 8026274:	2200      	movs	r2, #0
 8026276:	f7da f9df 	bl	8000638 <__aeabi_dmul>
 802627a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802627c:	4680      	mov	r8, r0
 802627e:	4689      	mov	r9, r1
 8026280:	b933      	cbnz	r3, 8026290 <_strtod_l+0xab8>
 8026282:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026286:	9012      	str	r0, [sp, #72]	; 0x48
 8026288:	9313      	str	r3, [sp, #76]	; 0x4c
 802628a:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 802628e:	e7dd      	b.n	802624c <_strtod_l+0xa74>
 8026290:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 8026294:	e7f9      	b.n	802628a <_strtod_l+0xab2>
 8026296:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 802629a:	9b04      	ldr	r3, [sp, #16]
 802629c:	2b00      	cmp	r3, #0
 802629e:	d1a8      	bne.n	80261f2 <_strtod_l+0xa1a>
 80262a0:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80262a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80262a6:	0d1b      	lsrs	r3, r3, #20
 80262a8:	051b      	lsls	r3, r3, #20
 80262aa:	429a      	cmp	r2, r3
 80262ac:	d1a1      	bne.n	80261f2 <_strtod_l+0xa1a>
 80262ae:	4640      	mov	r0, r8
 80262b0:	4649      	mov	r1, r9
 80262b2:	f7da fd21 	bl	8000cf8 <__aeabi_d2lz>
 80262b6:	f7da f991 	bl	80005dc <__aeabi_l2d>
 80262ba:	4602      	mov	r2, r0
 80262bc:	460b      	mov	r3, r1
 80262be:	4640      	mov	r0, r8
 80262c0:	4649      	mov	r1, r9
 80262c2:	f7da f801 	bl	80002c8 <__aeabi_dsub>
 80262c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80262c8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80262cc:	ea43 030a 	orr.w	r3, r3, sl
 80262d0:	4313      	orrs	r3, r2
 80262d2:	4680      	mov	r8, r0
 80262d4:	4689      	mov	r9, r1
 80262d6:	d053      	beq.n	8026380 <_strtod_l+0xba8>
 80262d8:	a335      	add	r3, pc, #212	; (adr r3, 80263b0 <_strtod_l+0xbd8>)
 80262da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80262de:	f7da fc1d 	bl	8000b1c <__aeabi_dcmplt>
 80262e2:	2800      	cmp	r0, #0
 80262e4:	f47f acce 	bne.w	8025c84 <_strtod_l+0x4ac>
 80262e8:	a333      	add	r3, pc, #204	; (adr r3, 80263b8 <_strtod_l+0xbe0>)
 80262ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80262ee:	4640      	mov	r0, r8
 80262f0:	4649      	mov	r1, r9
 80262f2:	f7da fc31 	bl	8000b58 <__aeabi_dcmpgt>
 80262f6:	2800      	cmp	r0, #0
 80262f8:	f43f af7b 	beq.w	80261f2 <_strtod_l+0xa1a>
 80262fc:	e4c2      	b.n	8025c84 <_strtod_l+0x4ac>
 80262fe:	9b04      	ldr	r3, [sp, #16]
 8026300:	b333      	cbz	r3, 8026350 <_strtod_l+0xb78>
 8026302:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8026304:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8026308:	d822      	bhi.n	8026350 <_strtod_l+0xb78>
 802630a:	a32d      	add	r3, pc, #180	; (adr r3, 80263c0 <_strtod_l+0xbe8>)
 802630c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026310:	4640      	mov	r0, r8
 8026312:	4649      	mov	r1, r9
 8026314:	f7da fc0c 	bl	8000b30 <__aeabi_dcmple>
 8026318:	b1a0      	cbz	r0, 8026344 <_strtod_l+0xb6c>
 802631a:	4649      	mov	r1, r9
 802631c:	4640      	mov	r0, r8
 802631e:	f7da fc63 	bl	8000be8 <__aeabi_d2uiz>
 8026322:	2801      	cmp	r0, #1
 8026324:	bf38      	it	cc
 8026326:	2001      	movcc	r0, #1
 8026328:	f7da f90c 	bl	8000544 <__aeabi_ui2d>
 802632c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802632e:	4680      	mov	r8, r0
 8026330:	4689      	mov	r9, r1
 8026332:	bb13      	cbnz	r3, 802637a <_strtod_l+0xba2>
 8026334:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026338:	9014      	str	r0, [sp, #80]	; 0x50
 802633a:	9315      	str	r3, [sp, #84]	; 0x54
 802633c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8026340:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8026344:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026346:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026348:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 802634c:	1a9b      	subs	r3, r3, r2
 802634e:	930d      	str	r3, [sp, #52]	; 0x34
 8026350:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8026354:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 8026358:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 802635c:	f001 ff86 	bl	802826c <__ulp>
 8026360:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8026364:	ec53 2b10 	vmov	r2, r3, d0
 8026368:	f7da f966 	bl	8000638 <__aeabi_dmul>
 802636c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8026370:	f7d9 ffac 	bl	80002cc <__adddf3>
 8026374:	4682      	mov	sl, r0
 8026376:	468b      	mov	fp, r1
 8026378:	e78f      	b.n	802629a <_strtod_l+0xac2>
 802637a:	e9cd 8914 	strd	r8, r9, [sp, #80]	; 0x50
 802637e:	e7dd      	b.n	802633c <_strtod_l+0xb64>
 8026380:	a311      	add	r3, pc, #68	; (adr r3, 80263c8 <_strtod_l+0xbf0>)
 8026382:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026386:	f7da fbc9 	bl	8000b1c <__aeabi_dcmplt>
 802638a:	e7b4      	b.n	80262f6 <_strtod_l+0xb1e>
 802638c:	2300      	movs	r3, #0
 802638e:	930e      	str	r3, [sp, #56]	; 0x38
 8026390:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8026392:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026394:	6013      	str	r3, [r2, #0]
 8026396:	f7ff ba65 	b.w	8025864 <_strtod_l+0x8c>
 802639a:	2b65      	cmp	r3, #101	; 0x65
 802639c:	f43f ab5d 	beq.w	8025a5a <_strtod_l+0x282>
 80263a0:	2b45      	cmp	r3, #69	; 0x45
 80263a2:	f43f ab5a 	beq.w	8025a5a <_strtod_l+0x282>
 80263a6:	2201      	movs	r2, #1
 80263a8:	f7ff bb92 	b.w	8025ad0 <_strtod_l+0x2f8>
 80263ac:	f3af 8000 	nop.w
 80263b0:	94a03595 	.word	0x94a03595
 80263b4:	3fdfffff 	.word	0x3fdfffff
 80263b8:	35afe535 	.word	0x35afe535
 80263bc:	3fe00000 	.word	0x3fe00000
 80263c0:	ffc00000 	.word	0xffc00000
 80263c4:	41dfffff 	.word	0x41dfffff
 80263c8:	94a03595 	.word	0x94a03595
 80263cc:	3fcfffff 	.word	0x3fcfffff
 80263d0:	3ff00000 	.word	0x3ff00000
 80263d4:	7ff00000 	.word	0x7ff00000
 80263d8:	7fe00000 	.word	0x7fe00000
 80263dc:	7c9fffff 	.word	0x7c9fffff
 80263e0:	3fe00000 	.word	0x3fe00000
 80263e4:	bff00000 	.word	0xbff00000
 80263e8:	7fefffff 	.word	0x7fefffff

080263ec <strtof>:
 80263ec:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
 80263f0:	4e26      	ldr	r6, [pc, #152]	; (802648c <strtof+0xa0>)
 80263f2:	4b27      	ldr	r3, [pc, #156]	; (8026490 <strtof+0xa4>)
 80263f4:	460a      	mov	r2, r1
 80263f6:	ed2d 8b02 	vpush	{d8}
 80263fa:	4601      	mov	r1, r0
 80263fc:	6830      	ldr	r0, [r6, #0]
 80263fe:	f7ff f9eb 	bl	80257d8 <_strtod_l>
 8026402:	ec55 4b10 	vmov	r4, r5, d0
 8026406:	ee10 2a10 	vmov	r2, s0
 802640a:	ee10 0a10 	vmov	r0, s0
 802640e:	462b      	mov	r3, r5
 8026410:	4629      	mov	r1, r5
 8026412:	f7da fbab 	bl	8000b6c <__aeabi_dcmpun>
 8026416:	b190      	cbz	r0, 802643e <strtof+0x52>
 8026418:	2d00      	cmp	r5, #0
 802641a:	481e      	ldr	r0, [pc, #120]	; (8026494 <strtof+0xa8>)
 802641c:	da09      	bge.n	8026432 <strtof+0x46>
 802641e:	f002 f9df 	bl	80287e0 <nanf>
 8026422:	eeb1 8a40 	vneg.f32	s16, s0
 8026426:	eeb0 0a48 	vmov.f32	s0, s16
 802642a:	ecbd 8b02 	vpop	{d8}
 802642e:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8026432:	ecbd 8b02 	vpop	{d8}
 8026436:	e8bd 4370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, lr}
 802643a:	f002 b9d1 	b.w	80287e0 <nanf>
 802643e:	4620      	mov	r0, r4
 8026440:	4629      	mov	r1, r5
 8026442:	f7da fbf1 	bl	8000c28 <__aeabi_d2f>
 8026446:	ee08 0a10 	vmov	s16, r0
 802644a:	eddf 7a13 	vldr	s15, [pc, #76]	; 8026498 <strtof+0xac>
 802644e:	eeb0 7ac8 	vabs.f32	s14, s16
 8026452:	eeb4 7a67 	vcmp.f32	s14, s15
 8026456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802645a:	dde4      	ble.n	8026426 <strtof+0x3a>
 802645c:	f025 4900 	bic.w	r9, r5, #2147483648	; 0x80000000
 8026460:	4b0e      	ldr	r3, [pc, #56]	; (802649c <strtof+0xb0>)
 8026462:	f04f 32ff 	mov.w	r2, #4294967295
 8026466:	4620      	mov	r0, r4
 8026468:	4649      	mov	r1, r9
 802646a:	f7da fb7f 	bl	8000b6c <__aeabi_dcmpun>
 802646e:	b940      	cbnz	r0, 8026482 <strtof+0x96>
 8026470:	4b0a      	ldr	r3, [pc, #40]	; (802649c <strtof+0xb0>)
 8026472:	f04f 32ff 	mov.w	r2, #4294967295
 8026476:	4620      	mov	r0, r4
 8026478:	4649      	mov	r1, r9
 802647a:	f7da fb59 	bl	8000b30 <__aeabi_dcmple>
 802647e:	2800      	cmp	r0, #0
 8026480:	d0d1      	beq.n	8026426 <strtof+0x3a>
 8026482:	6833      	ldr	r3, [r6, #0]
 8026484:	2222      	movs	r2, #34	; 0x22
 8026486:	601a      	str	r2, [r3, #0]
 8026488:	e7cd      	b.n	8026426 <strtof+0x3a>
 802648a:	bf00      	nop
 802648c:	20000010 	.word	0x20000010
 8026490:	2000007c 	.word	0x2000007c
 8026494:	0802a628 	.word	0x0802a628
 8026498:	7f7fffff 	.word	0x7f7fffff
 802649c:	7fefffff 	.word	0x7fefffff

080264a0 <_strtol_l.isra.0>:
 80264a0:	2b01      	cmp	r3, #1
 80264a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80264a6:	d001      	beq.n	80264ac <_strtol_l.isra.0+0xc>
 80264a8:	2b24      	cmp	r3, #36	; 0x24
 80264aa:	d906      	bls.n	80264ba <_strtol_l.isra.0+0x1a>
 80264ac:	f7fe fb44 	bl	8024b38 <__errno>
 80264b0:	2316      	movs	r3, #22
 80264b2:	6003      	str	r3, [r0, #0]
 80264b4:	2000      	movs	r0, #0
 80264b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80264ba:	4f3a      	ldr	r7, [pc, #232]	; (80265a4 <_strtol_l.isra.0+0x104>)
 80264bc:	468e      	mov	lr, r1
 80264be:	4676      	mov	r6, lr
 80264c0:	f81e 4b01 	ldrb.w	r4, [lr], #1
 80264c4:	5de5      	ldrb	r5, [r4, r7]
 80264c6:	f015 0508 	ands.w	r5, r5, #8
 80264ca:	d1f8      	bne.n	80264be <_strtol_l.isra.0+0x1e>
 80264cc:	2c2d      	cmp	r4, #45	; 0x2d
 80264ce:	d134      	bne.n	802653a <_strtol_l.isra.0+0x9a>
 80264d0:	f89e 4000 	ldrb.w	r4, [lr]
 80264d4:	f04f 0801 	mov.w	r8, #1
 80264d8:	f106 0e02 	add.w	lr, r6, #2
 80264dc:	2b00      	cmp	r3, #0
 80264de:	d05c      	beq.n	802659a <_strtol_l.isra.0+0xfa>
 80264e0:	2b10      	cmp	r3, #16
 80264e2:	d10c      	bne.n	80264fe <_strtol_l.isra.0+0x5e>
 80264e4:	2c30      	cmp	r4, #48	; 0x30
 80264e6:	d10a      	bne.n	80264fe <_strtol_l.isra.0+0x5e>
 80264e8:	f89e 4000 	ldrb.w	r4, [lr]
 80264ec:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80264f0:	2c58      	cmp	r4, #88	; 0x58
 80264f2:	d14d      	bne.n	8026590 <_strtol_l.isra.0+0xf0>
 80264f4:	f89e 4001 	ldrb.w	r4, [lr, #1]
 80264f8:	2310      	movs	r3, #16
 80264fa:	f10e 0e02 	add.w	lr, lr, #2
 80264fe:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 8026502:	f10c 3cff 	add.w	ip, ip, #4294967295
 8026506:	2600      	movs	r6, #0
 8026508:	fbbc f9f3 	udiv	r9, ip, r3
 802650c:	4635      	mov	r5, r6
 802650e:	fb03 ca19 	mls	sl, r3, r9, ip
 8026512:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 8026516:	2f09      	cmp	r7, #9
 8026518:	d818      	bhi.n	802654c <_strtol_l.isra.0+0xac>
 802651a:	463c      	mov	r4, r7
 802651c:	42a3      	cmp	r3, r4
 802651e:	dd24      	ble.n	802656a <_strtol_l.isra.0+0xca>
 8026520:	2e00      	cmp	r6, #0
 8026522:	db1f      	blt.n	8026564 <_strtol_l.isra.0+0xc4>
 8026524:	45a9      	cmp	r9, r5
 8026526:	d31d      	bcc.n	8026564 <_strtol_l.isra.0+0xc4>
 8026528:	d101      	bne.n	802652e <_strtol_l.isra.0+0x8e>
 802652a:	45a2      	cmp	sl, r4
 802652c:	db1a      	blt.n	8026564 <_strtol_l.isra.0+0xc4>
 802652e:	fb05 4503 	mla	r5, r5, r3, r4
 8026532:	2601      	movs	r6, #1
 8026534:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8026538:	e7eb      	b.n	8026512 <_strtol_l.isra.0+0x72>
 802653a:	2c2b      	cmp	r4, #43	; 0x2b
 802653c:	bf08      	it	eq
 802653e:	f89e 4000 	ldrbeq.w	r4, [lr]
 8026542:	46a8      	mov	r8, r5
 8026544:	bf08      	it	eq
 8026546:	f106 0e02 	addeq.w	lr, r6, #2
 802654a:	e7c7      	b.n	80264dc <_strtol_l.isra.0+0x3c>
 802654c:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 8026550:	2f19      	cmp	r7, #25
 8026552:	d801      	bhi.n	8026558 <_strtol_l.isra.0+0xb8>
 8026554:	3c37      	subs	r4, #55	; 0x37
 8026556:	e7e1      	b.n	802651c <_strtol_l.isra.0+0x7c>
 8026558:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 802655c:	2f19      	cmp	r7, #25
 802655e:	d804      	bhi.n	802656a <_strtol_l.isra.0+0xca>
 8026560:	3c57      	subs	r4, #87	; 0x57
 8026562:	e7db      	b.n	802651c <_strtol_l.isra.0+0x7c>
 8026564:	f04f 36ff 	mov.w	r6, #4294967295
 8026568:	e7e4      	b.n	8026534 <_strtol_l.isra.0+0x94>
 802656a:	2e00      	cmp	r6, #0
 802656c:	da05      	bge.n	802657a <_strtol_l.isra.0+0xda>
 802656e:	2322      	movs	r3, #34	; 0x22
 8026570:	6003      	str	r3, [r0, #0]
 8026572:	4665      	mov	r5, ip
 8026574:	b942      	cbnz	r2, 8026588 <_strtol_l.isra.0+0xe8>
 8026576:	4628      	mov	r0, r5
 8026578:	e79d      	b.n	80264b6 <_strtol_l.isra.0+0x16>
 802657a:	f1b8 0f00 	cmp.w	r8, #0
 802657e:	d000      	beq.n	8026582 <_strtol_l.isra.0+0xe2>
 8026580:	426d      	negs	r5, r5
 8026582:	2a00      	cmp	r2, #0
 8026584:	d0f7      	beq.n	8026576 <_strtol_l.isra.0+0xd6>
 8026586:	b10e      	cbz	r6, 802658c <_strtol_l.isra.0+0xec>
 8026588:	f10e 31ff 	add.w	r1, lr, #4294967295
 802658c:	6011      	str	r1, [r2, #0]
 802658e:	e7f2      	b.n	8026576 <_strtol_l.isra.0+0xd6>
 8026590:	2430      	movs	r4, #48	; 0x30
 8026592:	2b00      	cmp	r3, #0
 8026594:	d1b3      	bne.n	80264fe <_strtol_l.isra.0+0x5e>
 8026596:	2308      	movs	r3, #8
 8026598:	e7b1      	b.n	80264fe <_strtol_l.isra.0+0x5e>
 802659a:	2c30      	cmp	r4, #48	; 0x30
 802659c:	d0a4      	beq.n	80264e8 <_strtol_l.isra.0+0x48>
 802659e:	230a      	movs	r3, #10
 80265a0:	e7ad      	b.n	80264fe <_strtol_l.isra.0+0x5e>
 80265a2:	bf00      	nop
 80265a4:	0802a26e 	.word	0x0802a26e

080265a8 <strtol>:
 80265a8:	4613      	mov	r3, r2
 80265aa:	460a      	mov	r2, r1
 80265ac:	4601      	mov	r1, r0
 80265ae:	4802      	ldr	r0, [pc, #8]	; (80265b8 <strtol+0x10>)
 80265b0:	6800      	ldr	r0, [r0, #0]
 80265b2:	f7ff bf75 	b.w	80264a0 <_strtol_l.isra.0>
 80265b6:	bf00      	nop
 80265b8:	20000010 	.word	0x20000010

080265bc <__utoa>:
 80265bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80265be:	4c1f      	ldr	r4, [pc, #124]	; (802663c <__utoa+0x80>)
 80265c0:	b08b      	sub	sp, #44	; 0x2c
 80265c2:	4605      	mov	r5, r0
 80265c4:	460b      	mov	r3, r1
 80265c6:	466e      	mov	r6, sp
 80265c8:	f104 0c20 	add.w	ip, r4, #32
 80265cc:	6820      	ldr	r0, [r4, #0]
 80265ce:	6861      	ldr	r1, [r4, #4]
 80265d0:	4637      	mov	r7, r6
 80265d2:	c703      	stmia	r7!, {r0, r1}
 80265d4:	3408      	adds	r4, #8
 80265d6:	4564      	cmp	r4, ip
 80265d8:	463e      	mov	r6, r7
 80265da:	d1f7      	bne.n	80265cc <__utoa+0x10>
 80265dc:	7921      	ldrb	r1, [r4, #4]
 80265de:	7139      	strb	r1, [r7, #4]
 80265e0:	1e91      	subs	r1, r2, #2
 80265e2:	6820      	ldr	r0, [r4, #0]
 80265e4:	6038      	str	r0, [r7, #0]
 80265e6:	2922      	cmp	r1, #34	; 0x22
 80265e8:	f04f 0100 	mov.w	r1, #0
 80265ec:	d904      	bls.n	80265f8 <__utoa+0x3c>
 80265ee:	7019      	strb	r1, [r3, #0]
 80265f0:	460b      	mov	r3, r1
 80265f2:	4618      	mov	r0, r3
 80265f4:	b00b      	add	sp, #44	; 0x2c
 80265f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80265f8:	1e58      	subs	r0, r3, #1
 80265fa:	4684      	mov	ip, r0
 80265fc:	fbb5 f7f2 	udiv	r7, r5, r2
 8026600:	f10d 0e28 	add.w	lr, sp, #40	; 0x28
 8026604:	fb02 5617 	mls	r6, r2, r7, r5
 8026608:	4476      	add	r6, lr
 802660a:	460c      	mov	r4, r1
 802660c:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8026610:	f80c 6f01 	strb.w	r6, [ip, #1]!
 8026614:	462e      	mov	r6, r5
 8026616:	42b2      	cmp	r2, r6
 8026618:	f101 0101 	add.w	r1, r1, #1
 802661c:	463d      	mov	r5, r7
 802661e:	d9ed      	bls.n	80265fc <__utoa+0x40>
 8026620:	2200      	movs	r2, #0
 8026622:	545a      	strb	r2, [r3, r1]
 8026624:	1919      	adds	r1, r3, r4
 8026626:	1aa5      	subs	r5, r4, r2
 8026628:	42aa      	cmp	r2, r5
 802662a:	dae2      	bge.n	80265f2 <__utoa+0x36>
 802662c:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8026630:	780e      	ldrb	r6, [r1, #0]
 8026632:	7006      	strb	r6, [r0, #0]
 8026634:	3201      	adds	r2, #1
 8026636:	f801 5901 	strb.w	r5, [r1], #-1
 802663a:	e7f4      	b.n	8026626 <__utoa+0x6a>
 802663c:	0802a248 	.word	0x0802a248

08026640 <_vsniprintf_r>:
 8026640:	b530      	push	{r4, r5, lr}
 8026642:	1e14      	subs	r4, r2, #0
 8026644:	4605      	mov	r5, r0
 8026646:	b09b      	sub	sp, #108	; 0x6c
 8026648:	4618      	mov	r0, r3
 802664a:	da05      	bge.n	8026658 <_vsniprintf_r+0x18>
 802664c:	238b      	movs	r3, #139	; 0x8b
 802664e:	602b      	str	r3, [r5, #0]
 8026650:	f04f 30ff 	mov.w	r0, #4294967295
 8026654:	b01b      	add	sp, #108	; 0x6c
 8026656:	bd30      	pop	{r4, r5, pc}
 8026658:	f44f 7302 	mov.w	r3, #520	; 0x208
 802665c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8026660:	bf14      	ite	ne
 8026662:	f104 33ff 	addne.w	r3, r4, #4294967295
 8026666:	4623      	moveq	r3, r4
 8026668:	9302      	str	r3, [sp, #8]
 802666a:	9305      	str	r3, [sp, #20]
 802666c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8026670:	9100      	str	r1, [sp, #0]
 8026672:	9104      	str	r1, [sp, #16]
 8026674:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026678:	4602      	mov	r2, r0
 802667a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802667c:	4669      	mov	r1, sp
 802667e:	4628      	mov	r0, r5
 8026680:	f001 ffae 	bl	80285e0 <_svfiprintf_r>
 8026684:	1c43      	adds	r3, r0, #1
 8026686:	bfbc      	itt	lt
 8026688:	238b      	movlt	r3, #139	; 0x8b
 802668a:	602b      	strlt	r3, [r5, #0]
 802668c:	2c00      	cmp	r4, #0
 802668e:	d0e1      	beq.n	8026654 <_vsniprintf_r+0x14>
 8026690:	9b00      	ldr	r3, [sp, #0]
 8026692:	2200      	movs	r2, #0
 8026694:	701a      	strb	r2, [r3, #0]
 8026696:	e7dd      	b.n	8026654 <_vsniprintf_r+0x14>

08026698 <vsniprintf>:
 8026698:	b507      	push	{r0, r1, r2, lr}
 802669a:	9300      	str	r3, [sp, #0]
 802669c:	4613      	mov	r3, r2
 802669e:	460a      	mov	r2, r1
 80266a0:	4601      	mov	r1, r0
 80266a2:	4803      	ldr	r0, [pc, #12]	; (80266b0 <vsniprintf+0x18>)
 80266a4:	6800      	ldr	r0, [r0, #0]
 80266a6:	f7ff ffcb 	bl	8026640 <_vsniprintf_r>
 80266aa:	b003      	add	sp, #12
 80266ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80266b0:	20000010 	.word	0x20000010

080266b4 <__register_exitproc>:
 80266b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80266b8:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8026774 <__register_exitproc+0xc0>
 80266bc:	4606      	mov	r6, r0
 80266be:	f8d8 0000 	ldr.w	r0, [r8]
 80266c2:	461f      	mov	r7, r3
 80266c4:	460d      	mov	r5, r1
 80266c6:	4691      	mov	r9, r2
 80266c8:	f001 fa43 	bl	8027b52 <__retarget_lock_acquire_recursive>
 80266cc:	4b25      	ldr	r3, [pc, #148]	; (8026764 <__register_exitproc+0xb0>)
 80266ce:	681c      	ldr	r4, [r3, #0]
 80266d0:	b934      	cbnz	r4, 80266e0 <__register_exitproc+0x2c>
 80266d2:	4c25      	ldr	r4, [pc, #148]	; (8026768 <__register_exitproc+0xb4>)
 80266d4:	601c      	str	r4, [r3, #0]
 80266d6:	4b25      	ldr	r3, [pc, #148]	; (802676c <__register_exitproc+0xb8>)
 80266d8:	b113      	cbz	r3, 80266e0 <__register_exitproc+0x2c>
 80266da:	681b      	ldr	r3, [r3, #0]
 80266dc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80266e0:	6863      	ldr	r3, [r4, #4]
 80266e2:	2b1f      	cmp	r3, #31
 80266e4:	dd07      	ble.n	80266f6 <__register_exitproc+0x42>
 80266e6:	f8d8 0000 	ldr.w	r0, [r8]
 80266ea:	f001 fa34 	bl	8027b56 <__retarget_lock_release_recursive>
 80266ee:	f04f 30ff 	mov.w	r0, #4294967295
 80266f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80266f6:	b34e      	cbz	r6, 802674c <__register_exitproc+0x98>
 80266f8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80266fc:	b988      	cbnz	r0, 8026722 <__register_exitproc+0x6e>
 80266fe:	4b1c      	ldr	r3, [pc, #112]	; (8026770 <__register_exitproc+0xbc>)
 8026700:	b923      	cbnz	r3, 802670c <__register_exitproc+0x58>
 8026702:	f8d8 0000 	ldr.w	r0, [r8]
 8026706:	f001 fa25 	bl	8027b54 <__retarget_lock_release>
 802670a:	e7f0      	b.n	80266ee <__register_exitproc+0x3a>
 802670c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8026710:	f7fe fa6e 	bl	8024bf0 <malloc>
 8026714:	2800      	cmp	r0, #0
 8026716:	d0f4      	beq.n	8026702 <__register_exitproc+0x4e>
 8026718:	2300      	movs	r3, #0
 802671a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802671e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8026722:	6863      	ldr	r3, [r4, #4]
 8026724:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8026728:	2201      	movs	r2, #1
 802672a:	409a      	lsls	r2, r3
 802672c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8026730:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8026734:	4313      	orrs	r3, r2
 8026736:	2e02      	cmp	r6, #2
 8026738:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802673c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8026740:	bf02      	ittt	eq
 8026742:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8026746:	431a      	orreq	r2, r3
 8026748:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 802674c:	6863      	ldr	r3, [r4, #4]
 802674e:	f8d8 0000 	ldr.w	r0, [r8]
 8026752:	1c5a      	adds	r2, r3, #1
 8026754:	3302      	adds	r3, #2
 8026756:	6062      	str	r2, [r4, #4]
 8026758:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802675c:	f001 f9fb 	bl	8027b56 <__retarget_lock_release_recursive>
 8026760:	2000      	movs	r0, #0
 8026762:	e7c6      	b.n	80266f2 <__register_exitproc+0x3e>
 8026764:	200008d4 	.word	0x200008d4
 8026768:	20000848 	.word	0x20000848
 802676c:	00000000 	.word	0x00000000
 8026770:	08024bf1 	.word	0x08024bf1
 8026774:	20000074 	.word	0x20000074

08026778 <quorem>:
 8026778:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802677c:	6903      	ldr	r3, [r0, #16]
 802677e:	690c      	ldr	r4, [r1, #16]
 8026780:	42a3      	cmp	r3, r4
 8026782:	4607      	mov	r7, r0
 8026784:	f2c0 8081 	blt.w	802688a <quorem+0x112>
 8026788:	3c01      	subs	r4, #1
 802678a:	f101 0814 	add.w	r8, r1, #20
 802678e:	f100 0514 	add.w	r5, r0, #20
 8026792:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8026796:	9301      	str	r3, [sp, #4]
 8026798:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 802679c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80267a0:	3301      	adds	r3, #1
 80267a2:	429a      	cmp	r2, r3
 80267a4:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80267a8:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80267ac:	fbb2 f6f3 	udiv	r6, r2, r3
 80267b0:	d331      	bcc.n	8026816 <quorem+0x9e>
 80267b2:	f04f 0e00 	mov.w	lr, #0
 80267b6:	4640      	mov	r0, r8
 80267b8:	46ac      	mov	ip, r5
 80267ba:	46f2      	mov	sl, lr
 80267bc:	f850 2b04 	ldr.w	r2, [r0], #4
 80267c0:	b293      	uxth	r3, r2
 80267c2:	fb06 e303 	mla	r3, r6, r3, lr
 80267c6:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80267ca:	b29b      	uxth	r3, r3
 80267cc:	ebaa 0303 	sub.w	r3, sl, r3
 80267d0:	0c12      	lsrs	r2, r2, #16
 80267d2:	f8dc a000 	ldr.w	sl, [ip]
 80267d6:	fb06 e202 	mla	r2, r6, r2, lr
 80267da:	fa13 f38a 	uxtah	r3, r3, sl
 80267de:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80267e2:	fa1f fa82 	uxth.w	sl, r2
 80267e6:	f8dc 2000 	ldr.w	r2, [ip]
 80267ea:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 80267ee:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80267f2:	b29b      	uxth	r3, r3
 80267f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80267f8:	4581      	cmp	r9, r0
 80267fa:	f84c 3b04 	str.w	r3, [ip], #4
 80267fe:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8026802:	d2db      	bcs.n	80267bc <quorem+0x44>
 8026804:	f855 300b 	ldr.w	r3, [r5, fp]
 8026808:	b92b      	cbnz	r3, 8026816 <quorem+0x9e>
 802680a:	9b01      	ldr	r3, [sp, #4]
 802680c:	3b04      	subs	r3, #4
 802680e:	429d      	cmp	r5, r3
 8026810:	461a      	mov	r2, r3
 8026812:	d32e      	bcc.n	8026872 <quorem+0xfa>
 8026814:	613c      	str	r4, [r7, #16]
 8026816:	4638      	mov	r0, r7
 8026818:	f001 fc84 	bl	8028124 <__mcmp>
 802681c:	2800      	cmp	r0, #0
 802681e:	db24      	blt.n	802686a <quorem+0xf2>
 8026820:	3601      	adds	r6, #1
 8026822:	4628      	mov	r0, r5
 8026824:	f04f 0c00 	mov.w	ip, #0
 8026828:	f858 2b04 	ldr.w	r2, [r8], #4
 802682c:	f8d0 e000 	ldr.w	lr, [r0]
 8026830:	b293      	uxth	r3, r2
 8026832:	ebac 0303 	sub.w	r3, ip, r3
 8026836:	0c12      	lsrs	r2, r2, #16
 8026838:	fa13 f38e 	uxtah	r3, r3, lr
 802683c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8026840:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8026844:	b29b      	uxth	r3, r3
 8026846:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 802684a:	45c1      	cmp	r9, r8
 802684c:	f840 3b04 	str.w	r3, [r0], #4
 8026850:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8026854:	d2e8      	bcs.n	8026828 <quorem+0xb0>
 8026856:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802685a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802685e:	b922      	cbnz	r2, 802686a <quorem+0xf2>
 8026860:	3b04      	subs	r3, #4
 8026862:	429d      	cmp	r5, r3
 8026864:	461a      	mov	r2, r3
 8026866:	d30a      	bcc.n	802687e <quorem+0x106>
 8026868:	613c      	str	r4, [r7, #16]
 802686a:	4630      	mov	r0, r6
 802686c:	b003      	add	sp, #12
 802686e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026872:	6812      	ldr	r2, [r2, #0]
 8026874:	3b04      	subs	r3, #4
 8026876:	2a00      	cmp	r2, #0
 8026878:	d1cc      	bne.n	8026814 <quorem+0x9c>
 802687a:	3c01      	subs	r4, #1
 802687c:	e7c7      	b.n	802680e <quorem+0x96>
 802687e:	6812      	ldr	r2, [r2, #0]
 8026880:	3b04      	subs	r3, #4
 8026882:	2a00      	cmp	r2, #0
 8026884:	d1f0      	bne.n	8026868 <quorem+0xf0>
 8026886:	3c01      	subs	r4, #1
 8026888:	e7eb      	b.n	8026862 <quorem+0xea>
 802688a:	2000      	movs	r0, #0
 802688c:	e7ee      	b.n	802686c <quorem+0xf4>
	...

08026890 <_dtoa_r>:
 8026890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026894:	ed2d 8b02 	vpush	{d8}
 8026898:	ec57 6b10 	vmov	r6, r7, d0
 802689c:	b095      	sub	sp, #84	; 0x54
 802689e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80268a0:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80268a4:	9105      	str	r1, [sp, #20]
 80268a6:	e9cd 6702 	strd	r6, r7, [sp, #8]
 80268aa:	4604      	mov	r4, r0
 80268ac:	9209      	str	r2, [sp, #36]	; 0x24
 80268ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80268b0:	b975      	cbnz	r5, 80268d0 <_dtoa_r+0x40>
 80268b2:	2010      	movs	r0, #16
 80268b4:	f7fe f99c 	bl	8024bf0 <malloc>
 80268b8:	4602      	mov	r2, r0
 80268ba:	6260      	str	r0, [r4, #36]	; 0x24
 80268bc:	b920      	cbnz	r0, 80268c8 <_dtoa_r+0x38>
 80268be:	4bb2      	ldr	r3, [pc, #712]	; (8026b88 <_dtoa_r+0x2f8>)
 80268c0:	21ea      	movs	r1, #234	; 0xea
 80268c2:	48b2      	ldr	r0, [pc, #712]	; (8026b8c <_dtoa_r+0x2fc>)
 80268c4:	f001 ffb2 	bl	802882c <__assert_func>
 80268c8:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80268cc:	6005      	str	r5, [r0, #0]
 80268ce:	60c5      	str	r5, [r0, #12]
 80268d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80268d2:	6819      	ldr	r1, [r3, #0]
 80268d4:	b151      	cbz	r1, 80268ec <_dtoa_r+0x5c>
 80268d6:	685a      	ldr	r2, [r3, #4]
 80268d8:	604a      	str	r2, [r1, #4]
 80268da:	2301      	movs	r3, #1
 80268dc:	4093      	lsls	r3, r2
 80268de:	608b      	str	r3, [r1, #8]
 80268e0:	4620      	mov	r0, r4
 80268e2:	f001 f997 	bl	8027c14 <_Bfree>
 80268e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80268e8:	2200      	movs	r2, #0
 80268ea:	601a      	str	r2, [r3, #0]
 80268ec:	1e3b      	subs	r3, r7, #0
 80268ee:	bfb9      	ittee	lt
 80268f0:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80268f4:	9303      	strlt	r3, [sp, #12]
 80268f6:	2300      	movge	r3, #0
 80268f8:	f8c8 3000 	strge.w	r3, [r8]
 80268fc:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8026900:	4ba3      	ldr	r3, [pc, #652]	; (8026b90 <_dtoa_r+0x300>)
 8026902:	bfbc      	itt	lt
 8026904:	2201      	movlt	r2, #1
 8026906:	f8c8 2000 	strlt.w	r2, [r8]
 802690a:	ea33 0309 	bics.w	r3, r3, r9
 802690e:	d11b      	bne.n	8026948 <_dtoa_r+0xb8>
 8026910:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026912:	f242 730f 	movw	r3, #9999	; 0x270f
 8026916:	6013      	str	r3, [r2, #0]
 8026918:	f3c9 0313 	ubfx	r3, r9, #0, #20
 802691c:	4333      	orrs	r3, r6
 802691e:	f000 857a 	beq.w	8027416 <_dtoa_r+0xb86>
 8026922:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026924:	b963      	cbnz	r3, 8026940 <_dtoa_r+0xb0>
 8026926:	4b9b      	ldr	r3, [pc, #620]	; (8026b94 <_dtoa_r+0x304>)
 8026928:	e024      	b.n	8026974 <_dtoa_r+0xe4>
 802692a:	4b9b      	ldr	r3, [pc, #620]	; (8026b98 <_dtoa_r+0x308>)
 802692c:	9300      	str	r3, [sp, #0]
 802692e:	3308      	adds	r3, #8
 8026930:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026932:	6013      	str	r3, [r2, #0]
 8026934:	9800      	ldr	r0, [sp, #0]
 8026936:	b015      	add	sp, #84	; 0x54
 8026938:	ecbd 8b02 	vpop	{d8}
 802693c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026940:	4b94      	ldr	r3, [pc, #592]	; (8026b94 <_dtoa_r+0x304>)
 8026942:	9300      	str	r3, [sp, #0]
 8026944:	3303      	adds	r3, #3
 8026946:	e7f3      	b.n	8026930 <_dtoa_r+0xa0>
 8026948:	ed9d 7b02 	vldr	d7, [sp, #8]
 802694c:	2200      	movs	r2, #0
 802694e:	ec51 0b17 	vmov	r0, r1, d7
 8026952:	2300      	movs	r3, #0
 8026954:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 8026958:	f7da f8d6 	bl	8000b08 <__aeabi_dcmpeq>
 802695c:	4680      	mov	r8, r0
 802695e:	b158      	cbz	r0, 8026978 <_dtoa_r+0xe8>
 8026960:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026962:	2301      	movs	r3, #1
 8026964:	6013      	str	r3, [r2, #0]
 8026966:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026968:	2b00      	cmp	r3, #0
 802696a:	f000 8551 	beq.w	8027410 <_dtoa_r+0xb80>
 802696e:	488b      	ldr	r0, [pc, #556]	; (8026b9c <_dtoa_r+0x30c>)
 8026970:	6018      	str	r0, [r3, #0]
 8026972:	1e43      	subs	r3, r0, #1
 8026974:	9300      	str	r3, [sp, #0]
 8026976:	e7dd      	b.n	8026934 <_dtoa_r+0xa4>
 8026978:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 802697c:	aa12      	add	r2, sp, #72	; 0x48
 802697e:	a913      	add	r1, sp, #76	; 0x4c
 8026980:	4620      	mov	r0, r4
 8026982:	f001 fcef 	bl	8028364 <__d2b>
 8026986:	f3c9 550a 	ubfx	r5, r9, #20, #11
 802698a:	4683      	mov	fp, r0
 802698c:	2d00      	cmp	r5, #0
 802698e:	d07c      	beq.n	8026a8a <_dtoa_r+0x1fa>
 8026990:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026992:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8026996:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802699a:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 802699e:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 80269a2:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 80269a6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80269aa:	4b7d      	ldr	r3, [pc, #500]	; (8026ba0 <_dtoa_r+0x310>)
 80269ac:	2200      	movs	r2, #0
 80269ae:	4630      	mov	r0, r6
 80269b0:	4639      	mov	r1, r7
 80269b2:	f7d9 fc89 	bl	80002c8 <__aeabi_dsub>
 80269b6:	a36e      	add	r3, pc, #440	; (adr r3, 8026b70 <_dtoa_r+0x2e0>)
 80269b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80269bc:	f7d9 fe3c 	bl	8000638 <__aeabi_dmul>
 80269c0:	a36d      	add	r3, pc, #436	; (adr r3, 8026b78 <_dtoa_r+0x2e8>)
 80269c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80269c6:	f7d9 fc81 	bl	80002cc <__adddf3>
 80269ca:	4606      	mov	r6, r0
 80269cc:	4628      	mov	r0, r5
 80269ce:	460f      	mov	r7, r1
 80269d0:	f7d9 fdc8 	bl	8000564 <__aeabi_i2d>
 80269d4:	a36a      	add	r3, pc, #424	; (adr r3, 8026b80 <_dtoa_r+0x2f0>)
 80269d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80269da:	f7d9 fe2d 	bl	8000638 <__aeabi_dmul>
 80269de:	4602      	mov	r2, r0
 80269e0:	460b      	mov	r3, r1
 80269e2:	4630      	mov	r0, r6
 80269e4:	4639      	mov	r1, r7
 80269e6:	f7d9 fc71 	bl	80002cc <__adddf3>
 80269ea:	4606      	mov	r6, r0
 80269ec:	460f      	mov	r7, r1
 80269ee:	f7da f8d3 	bl	8000b98 <__aeabi_d2iz>
 80269f2:	2200      	movs	r2, #0
 80269f4:	4682      	mov	sl, r0
 80269f6:	2300      	movs	r3, #0
 80269f8:	4630      	mov	r0, r6
 80269fa:	4639      	mov	r1, r7
 80269fc:	f7da f88e 	bl	8000b1c <__aeabi_dcmplt>
 8026a00:	b148      	cbz	r0, 8026a16 <_dtoa_r+0x186>
 8026a02:	4650      	mov	r0, sl
 8026a04:	f7d9 fdae 	bl	8000564 <__aeabi_i2d>
 8026a08:	4632      	mov	r2, r6
 8026a0a:	463b      	mov	r3, r7
 8026a0c:	f7da f87c 	bl	8000b08 <__aeabi_dcmpeq>
 8026a10:	b908      	cbnz	r0, 8026a16 <_dtoa_r+0x186>
 8026a12:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026a16:	f1ba 0f16 	cmp.w	sl, #22
 8026a1a:	d854      	bhi.n	8026ac6 <_dtoa_r+0x236>
 8026a1c:	4b61      	ldr	r3, [pc, #388]	; (8026ba4 <_dtoa_r+0x314>)
 8026a1e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8026a22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026a26:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8026a2a:	f7da f877 	bl	8000b1c <__aeabi_dcmplt>
 8026a2e:	2800      	cmp	r0, #0
 8026a30:	d04b      	beq.n	8026aca <_dtoa_r+0x23a>
 8026a32:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026a36:	2300      	movs	r3, #0
 8026a38:	930e      	str	r3, [sp, #56]	; 0x38
 8026a3a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8026a3c:	1b5d      	subs	r5, r3, r5
 8026a3e:	1e6b      	subs	r3, r5, #1
 8026a40:	9304      	str	r3, [sp, #16]
 8026a42:	bf43      	ittte	mi
 8026a44:	2300      	movmi	r3, #0
 8026a46:	f1c5 0801 	rsbmi	r8, r5, #1
 8026a4a:	9304      	strmi	r3, [sp, #16]
 8026a4c:	f04f 0800 	movpl.w	r8, #0
 8026a50:	f1ba 0f00 	cmp.w	sl, #0
 8026a54:	db3b      	blt.n	8026ace <_dtoa_r+0x23e>
 8026a56:	9b04      	ldr	r3, [sp, #16]
 8026a58:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8026a5c:	4453      	add	r3, sl
 8026a5e:	9304      	str	r3, [sp, #16]
 8026a60:	2300      	movs	r3, #0
 8026a62:	9306      	str	r3, [sp, #24]
 8026a64:	9b05      	ldr	r3, [sp, #20]
 8026a66:	2b09      	cmp	r3, #9
 8026a68:	d869      	bhi.n	8026b3e <_dtoa_r+0x2ae>
 8026a6a:	2b05      	cmp	r3, #5
 8026a6c:	bfc4      	itt	gt
 8026a6e:	3b04      	subgt	r3, #4
 8026a70:	9305      	strgt	r3, [sp, #20]
 8026a72:	9b05      	ldr	r3, [sp, #20]
 8026a74:	f1a3 0302 	sub.w	r3, r3, #2
 8026a78:	bfcc      	ite	gt
 8026a7a:	2500      	movgt	r5, #0
 8026a7c:	2501      	movle	r5, #1
 8026a7e:	2b03      	cmp	r3, #3
 8026a80:	d869      	bhi.n	8026b56 <_dtoa_r+0x2c6>
 8026a82:	e8df f003 	tbb	[pc, r3]
 8026a86:	4e2c      	.short	0x4e2c
 8026a88:	5a4c      	.short	0x5a4c
 8026a8a:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8026a8e:	441d      	add	r5, r3
 8026a90:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8026a94:	2b20      	cmp	r3, #32
 8026a96:	bfc1      	itttt	gt
 8026a98:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8026a9c:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8026aa0:	fa09 f303 	lslgt.w	r3, r9, r3
 8026aa4:	fa26 f000 	lsrgt.w	r0, r6, r0
 8026aa8:	bfda      	itte	le
 8026aaa:	f1c3 0320 	rsble	r3, r3, #32
 8026aae:	fa06 f003 	lslle.w	r0, r6, r3
 8026ab2:	4318      	orrgt	r0, r3
 8026ab4:	f7d9 fd46 	bl	8000544 <__aeabi_ui2d>
 8026ab8:	2301      	movs	r3, #1
 8026aba:	4606      	mov	r6, r0
 8026abc:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8026ac0:	3d01      	subs	r5, #1
 8026ac2:	9310      	str	r3, [sp, #64]	; 0x40
 8026ac4:	e771      	b.n	80269aa <_dtoa_r+0x11a>
 8026ac6:	2301      	movs	r3, #1
 8026ac8:	e7b6      	b.n	8026a38 <_dtoa_r+0x1a8>
 8026aca:	900e      	str	r0, [sp, #56]	; 0x38
 8026acc:	e7b5      	b.n	8026a3a <_dtoa_r+0x1aa>
 8026ace:	f1ca 0300 	rsb	r3, sl, #0
 8026ad2:	9306      	str	r3, [sp, #24]
 8026ad4:	2300      	movs	r3, #0
 8026ad6:	eba8 080a 	sub.w	r8, r8, sl
 8026ada:	930d      	str	r3, [sp, #52]	; 0x34
 8026adc:	e7c2      	b.n	8026a64 <_dtoa_r+0x1d4>
 8026ade:	2300      	movs	r3, #0
 8026ae0:	9308      	str	r3, [sp, #32]
 8026ae2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026ae4:	2b00      	cmp	r3, #0
 8026ae6:	dc39      	bgt.n	8026b5c <_dtoa_r+0x2cc>
 8026ae8:	f04f 0901 	mov.w	r9, #1
 8026aec:	f8cd 9004 	str.w	r9, [sp, #4]
 8026af0:	464b      	mov	r3, r9
 8026af2:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8026af6:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8026af8:	2200      	movs	r2, #0
 8026afa:	6042      	str	r2, [r0, #4]
 8026afc:	2204      	movs	r2, #4
 8026afe:	f102 0614 	add.w	r6, r2, #20
 8026b02:	429e      	cmp	r6, r3
 8026b04:	6841      	ldr	r1, [r0, #4]
 8026b06:	d92f      	bls.n	8026b68 <_dtoa_r+0x2d8>
 8026b08:	4620      	mov	r0, r4
 8026b0a:	f001 f843 	bl	8027b94 <_Balloc>
 8026b0e:	9000      	str	r0, [sp, #0]
 8026b10:	2800      	cmp	r0, #0
 8026b12:	d14b      	bne.n	8026bac <_dtoa_r+0x31c>
 8026b14:	4b24      	ldr	r3, [pc, #144]	; (8026ba8 <_dtoa_r+0x318>)
 8026b16:	4602      	mov	r2, r0
 8026b18:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8026b1c:	e6d1      	b.n	80268c2 <_dtoa_r+0x32>
 8026b1e:	2301      	movs	r3, #1
 8026b20:	e7de      	b.n	8026ae0 <_dtoa_r+0x250>
 8026b22:	2300      	movs	r3, #0
 8026b24:	9308      	str	r3, [sp, #32]
 8026b26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b28:	eb0a 0903 	add.w	r9, sl, r3
 8026b2c:	f109 0301 	add.w	r3, r9, #1
 8026b30:	2b01      	cmp	r3, #1
 8026b32:	9301      	str	r3, [sp, #4]
 8026b34:	bfb8      	it	lt
 8026b36:	2301      	movlt	r3, #1
 8026b38:	e7dd      	b.n	8026af6 <_dtoa_r+0x266>
 8026b3a:	2301      	movs	r3, #1
 8026b3c:	e7f2      	b.n	8026b24 <_dtoa_r+0x294>
 8026b3e:	2501      	movs	r5, #1
 8026b40:	2300      	movs	r3, #0
 8026b42:	9305      	str	r3, [sp, #20]
 8026b44:	9508      	str	r5, [sp, #32]
 8026b46:	f04f 39ff 	mov.w	r9, #4294967295
 8026b4a:	2200      	movs	r2, #0
 8026b4c:	f8cd 9004 	str.w	r9, [sp, #4]
 8026b50:	2312      	movs	r3, #18
 8026b52:	9209      	str	r2, [sp, #36]	; 0x24
 8026b54:	e7cf      	b.n	8026af6 <_dtoa_r+0x266>
 8026b56:	2301      	movs	r3, #1
 8026b58:	9308      	str	r3, [sp, #32]
 8026b5a:	e7f4      	b.n	8026b46 <_dtoa_r+0x2b6>
 8026b5c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8026b60:	f8cd 9004 	str.w	r9, [sp, #4]
 8026b64:	464b      	mov	r3, r9
 8026b66:	e7c6      	b.n	8026af6 <_dtoa_r+0x266>
 8026b68:	3101      	adds	r1, #1
 8026b6a:	6041      	str	r1, [r0, #4]
 8026b6c:	0052      	lsls	r2, r2, #1
 8026b6e:	e7c6      	b.n	8026afe <_dtoa_r+0x26e>
 8026b70:	636f4361 	.word	0x636f4361
 8026b74:	3fd287a7 	.word	0x3fd287a7
 8026b78:	8b60c8b3 	.word	0x8b60c8b3
 8026b7c:	3fc68a28 	.word	0x3fc68a28
 8026b80:	509f79fb 	.word	0x509f79fb
 8026b84:	3fd34413 	.word	0x3fd34413
 8026b88:	0802a37b 	.word	0x0802a37b
 8026b8c:	0802a392 	.word	0x0802a392
 8026b90:	7ff00000 	.word	0x7ff00000
 8026b94:	0802a377 	.word	0x0802a377
 8026b98:	0802a36e 	.word	0x0802a36e
 8026b9c:	0802a1d5 	.word	0x0802a1d5
 8026ba0:	3ff80000 	.word	0x3ff80000
 8026ba4:	0802a508 	.word	0x0802a508
 8026ba8:	0802a3f1 	.word	0x0802a3f1
 8026bac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8026bae:	9a00      	ldr	r2, [sp, #0]
 8026bb0:	601a      	str	r2, [r3, #0]
 8026bb2:	9b01      	ldr	r3, [sp, #4]
 8026bb4:	2b0e      	cmp	r3, #14
 8026bb6:	f200 80ad 	bhi.w	8026d14 <_dtoa_r+0x484>
 8026bba:	2d00      	cmp	r5, #0
 8026bbc:	f000 80aa 	beq.w	8026d14 <_dtoa_r+0x484>
 8026bc0:	f1ba 0f00 	cmp.w	sl, #0
 8026bc4:	dd36      	ble.n	8026c34 <_dtoa_r+0x3a4>
 8026bc6:	4ac3      	ldr	r2, [pc, #780]	; (8026ed4 <_dtoa_r+0x644>)
 8026bc8:	f00a 030f 	and.w	r3, sl, #15
 8026bcc:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8026bd0:	ed93 7b00 	vldr	d7, [r3]
 8026bd4:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8026bd8:	ea4f 172a 	mov.w	r7, sl, asr #4
 8026bdc:	eeb0 8a47 	vmov.f32	s16, s14
 8026be0:	eef0 8a67 	vmov.f32	s17, s15
 8026be4:	d016      	beq.n	8026c14 <_dtoa_r+0x384>
 8026be6:	4bbc      	ldr	r3, [pc, #752]	; (8026ed8 <_dtoa_r+0x648>)
 8026be8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8026bec:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8026bf0:	f7d9 fe4c 	bl	800088c <__aeabi_ddiv>
 8026bf4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026bf8:	f007 070f 	and.w	r7, r7, #15
 8026bfc:	2503      	movs	r5, #3
 8026bfe:	4eb6      	ldr	r6, [pc, #728]	; (8026ed8 <_dtoa_r+0x648>)
 8026c00:	b957      	cbnz	r7, 8026c18 <_dtoa_r+0x388>
 8026c02:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8026c06:	ec53 2b18 	vmov	r2, r3, d8
 8026c0a:	f7d9 fe3f 	bl	800088c <__aeabi_ddiv>
 8026c0e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026c12:	e029      	b.n	8026c68 <_dtoa_r+0x3d8>
 8026c14:	2502      	movs	r5, #2
 8026c16:	e7f2      	b.n	8026bfe <_dtoa_r+0x36e>
 8026c18:	07f9      	lsls	r1, r7, #31
 8026c1a:	d508      	bpl.n	8026c2e <_dtoa_r+0x39e>
 8026c1c:	ec51 0b18 	vmov	r0, r1, d8
 8026c20:	e9d6 2300 	ldrd	r2, r3, [r6]
 8026c24:	f7d9 fd08 	bl	8000638 <__aeabi_dmul>
 8026c28:	ec41 0b18 	vmov	d8, r0, r1
 8026c2c:	3501      	adds	r5, #1
 8026c2e:	107f      	asrs	r7, r7, #1
 8026c30:	3608      	adds	r6, #8
 8026c32:	e7e5      	b.n	8026c00 <_dtoa_r+0x370>
 8026c34:	f000 80a6 	beq.w	8026d84 <_dtoa_r+0x4f4>
 8026c38:	f1ca 0600 	rsb	r6, sl, #0
 8026c3c:	4ba5      	ldr	r3, [pc, #660]	; (8026ed4 <_dtoa_r+0x644>)
 8026c3e:	4fa6      	ldr	r7, [pc, #664]	; (8026ed8 <_dtoa_r+0x648>)
 8026c40:	f006 020f 	and.w	r2, r6, #15
 8026c44:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8026c48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8026c4c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8026c50:	f7d9 fcf2 	bl	8000638 <__aeabi_dmul>
 8026c54:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026c58:	1136      	asrs	r6, r6, #4
 8026c5a:	2300      	movs	r3, #0
 8026c5c:	2502      	movs	r5, #2
 8026c5e:	2e00      	cmp	r6, #0
 8026c60:	f040 8085 	bne.w	8026d6e <_dtoa_r+0x4de>
 8026c64:	2b00      	cmp	r3, #0
 8026c66:	d1d2      	bne.n	8026c0e <_dtoa_r+0x37e>
 8026c68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026c6a:	2b00      	cmp	r3, #0
 8026c6c:	f000 808c 	beq.w	8026d88 <_dtoa_r+0x4f8>
 8026c70:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8026c74:	4b99      	ldr	r3, [pc, #612]	; (8026edc <_dtoa_r+0x64c>)
 8026c76:	2200      	movs	r2, #0
 8026c78:	4630      	mov	r0, r6
 8026c7a:	4639      	mov	r1, r7
 8026c7c:	f7d9 ff4e 	bl	8000b1c <__aeabi_dcmplt>
 8026c80:	2800      	cmp	r0, #0
 8026c82:	f000 8081 	beq.w	8026d88 <_dtoa_r+0x4f8>
 8026c86:	9b01      	ldr	r3, [sp, #4]
 8026c88:	2b00      	cmp	r3, #0
 8026c8a:	d07d      	beq.n	8026d88 <_dtoa_r+0x4f8>
 8026c8c:	f1b9 0f00 	cmp.w	r9, #0
 8026c90:	dd3c      	ble.n	8026d0c <_dtoa_r+0x47c>
 8026c92:	f10a 33ff 	add.w	r3, sl, #4294967295
 8026c96:	9307      	str	r3, [sp, #28]
 8026c98:	2200      	movs	r2, #0
 8026c9a:	4b91      	ldr	r3, [pc, #580]	; (8026ee0 <_dtoa_r+0x650>)
 8026c9c:	4630      	mov	r0, r6
 8026c9e:	4639      	mov	r1, r7
 8026ca0:	f7d9 fcca 	bl	8000638 <__aeabi_dmul>
 8026ca4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026ca8:	3501      	adds	r5, #1
 8026caa:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 8026cae:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8026cb2:	4628      	mov	r0, r5
 8026cb4:	f7d9 fc56 	bl	8000564 <__aeabi_i2d>
 8026cb8:	4632      	mov	r2, r6
 8026cba:	463b      	mov	r3, r7
 8026cbc:	f7d9 fcbc 	bl	8000638 <__aeabi_dmul>
 8026cc0:	4b88      	ldr	r3, [pc, #544]	; (8026ee4 <_dtoa_r+0x654>)
 8026cc2:	2200      	movs	r2, #0
 8026cc4:	f7d9 fb02 	bl	80002cc <__adddf3>
 8026cc8:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8026ccc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8026cd0:	9303      	str	r3, [sp, #12]
 8026cd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026cd4:	2b00      	cmp	r3, #0
 8026cd6:	d15c      	bne.n	8026d92 <_dtoa_r+0x502>
 8026cd8:	4b83      	ldr	r3, [pc, #524]	; (8026ee8 <_dtoa_r+0x658>)
 8026cda:	2200      	movs	r2, #0
 8026cdc:	4630      	mov	r0, r6
 8026cde:	4639      	mov	r1, r7
 8026ce0:	f7d9 faf2 	bl	80002c8 <__aeabi_dsub>
 8026ce4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8026ce8:	4606      	mov	r6, r0
 8026cea:	460f      	mov	r7, r1
 8026cec:	f7d9 ff34 	bl	8000b58 <__aeabi_dcmpgt>
 8026cf0:	2800      	cmp	r0, #0
 8026cf2:	f040 8296 	bne.w	8027222 <_dtoa_r+0x992>
 8026cf6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8026cfa:	4630      	mov	r0, r6
 8026cfc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8026d00:	4639      	mov	r1, r7
 8026d02:	f7d9 ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8026d06:	2800      	cmp	r0, #0
 8026d08:	f040 8288 	bne.w	802721c <_dtoa_r+0x98c>
 8026d0c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8026d10:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8026d14:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8026d16:	2b00      	cmp	r3, #0
 8026d18:	f2c0 8158 	blt.w	8026fcc <_dtoa_r+0x73c>
 8026d1c:	f1ba 0f0e 	cmp.w	sl, #14
 8026d20:	f300 8154 	bgt.w	8026fcc <_dtoa_r+0x73c>
 8026d24:	4b6b      	ldr	r3, [pc, #428]	; (8026ed4 <_dtoa_r+0x644>)
 8026d26:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8026d2a:	e9d3 8900 	ldrd	r8, r9, [r3]
 8026d2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d30:	2b00      	cmp	r3, #0
 8026d32:	f280 80e3 	bge.w	8026efc <_dtoa_r+0x66c>
 8026d36:	9b01      	ldr	r3, [sp, #4]
 8026d38:	2b00      	cmp	r3, #0
 8026d3a:	f300 80df 	bgt.w	8026efc <_dtoa_r+0x66c>
 8026d3e:	f040 826d 	bne.w	802721c <_dtoa_r+0x98c>
 8026d42:	4b69      	ldr	r3, [pc, #420]	; (8026ee8 <_dtoa_r+0x658>)
 8026d44:	2200      	movs	r2, #0
 8026d46:	4640      	mov	r0, r8
 8026d48:	4649      	mov	r1, r9
 8026d4a:	f7d9 fc75 	bl	8000638 <__aeabi_dmul>
 8026d4e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8026d52:	f7d9 fef7 	bl	8000b44 <__aeabi_dcmpge>
 8026d56:	9e01      	ldr	r6, [sp, #4]
 8026d58:	4637      	mov	r7, r6
 8026d5a:	2800      	cmp	r0, #0
 8026d5c:	f040 8243 	bne.w	80271e6 <_dtoa_r+0x956>
 8026d60:	9d00      	ldr	r5, [sp, #0]
 8026d62:	2331      	movs	r3, #49	; 0x31
 8026d64:	f805 3b01 	strb.w	r3, [r5], #1
 8026d68:	f10a 0a01 	add.w	sl, sl, #1
 8026d6c:	e23f      	b.n	80271ee <_dtoa_r+0x95e>
 8026d6e:	07f2      	lsls	r2, r6, #31
 8026d70:	d505      	bpl.n	8026d7e <_dtoa_r+0x4ee>
 8026d72:	e9d7 2300 	ldrd	r2, r3, [r7]
 8026d76:	f7d9 fc5f 	bl	8000638 <__aeabi_dmul>
 8026d7a:	3501      	adds	r5, #1
 8026d7c:	2301      	movs	r3, #1
 8026d7e:	1076      	asrs	r6, r6, #1
 8026d80:	3708      	adds	r7, #8
 8026d82:	e76c      	b.n	8026c5e <_dtoa_r+0x3ce>
 8026d84:	2502      	movs	r5, #2
 8026d86:	e76f      	b.n	8026c68 <_dtoa_r+0x3d8>
 8026d88:	9b01      	ldr	r3, [sp, #4]
 8026d8a:	f8cd a01c 	str.w	sl, [sp, #28]
 8026d8e:	930c      	str	r3, [sp, #48]	; 0x30
 8026d90:	e78d      	b.n	8026cae <_dtoa_r+0x41e>
 8026d92:	9900      	ldr	r1, [sp, #0]
 8026d94:	980c      	ldr	r0, [sp, #48]	; 0x30
 8026d96:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026d98:	4b4e      	ldr	r3, [pc, #312]	; (8026ed4 <_dtoa_r+0x644>)
 8026d9a:	ed9d 7b02 	vldr	d7, [sp, #8]
 8026d9e:	4401      	add	r1, r0
 8026da0:	9102      	str	r1, [sp, #8]
 8026da2:	9908      	ldr	r1, [sp, #32]
 8026da4:	eeb0 8a47 	vmov.f32	s16, s14
 8026da8:	eef0 8a67 	vmov.f32	s17, s15
 8026dac:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8026db0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8026db4:	2900      	cmp	r1, #0
 8026db6:	d045      	beq.n	8026e44 <_dtoa_r+0x5b4>
 8026db8:	494c      	ldr	r1, [pc, #304]	; (8026eec <_dtoa_r+0x65c>)
 8026dba:	2000      	movs	r0, #0
 8026dbc:	f7d9 fd66 	bl	800088c <__aeabi_ddiv>
 8026dc0:	ec53 2b18 	vmov	r2, r3, d8
 8026dc4:	f7d9 fa80 	bl	80002c8 <__aeabi_dsub>
 8026dc8:	9d00      	ldr	r5, [sp, #0]
 8026dca:	ec41 0b18 	vmov	d8, r0, r1
 8026dce:	4639      	mov	r1, r7
 8026dd0:	4630      	mov	r0, r6
 8026dd2:	f7d9 fee1 	bl	8000b98 <__aeabi_d2iz>
 8026dd6:	900c      	str	r0, [sp, #48]	; 0x30
 8026dd8:	f7d9 fbc4 	bl	8000564 <__aeabi_i2d>
 8026ddc:	4602      	mov	r2, r0
 8026dde:	460b      	mov	r3, r1
 8026de0:	4630      	mov	r0, r6
 8026de2:	4639      	mov	r1, r7
 8026de4:	f7d9 fa70 	bl	80002c8 <__aeabi_dsub>
 8026de8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026dea:	3330      	adds	r3, #48	; 0x30
 8026dec:	f805 3b01 	strb.w	r3, [r5], #1
 8026df0:	ec53 2b18 	vmov	r2, r3, d8
 8026df4:	4606      	mov	r6, r0
 8026df6:	460f      	mov	r7, r1
 8026df8:	f7d9 fe90 	bl	8000b1c <__aeabi_dcmplt>
 8026dfc:	2800      	cmp	r0, #0
 8026dfe:	d165      	bne.n	8026ecc <_dtoa_r+0x63c>
 8026e00:	4632      	mov	r2, r6
 8026e02:	463b      	mov	r3, r7
 8026e04:	4935      	ldr	r1, [pc, #212]	; (8026edc <_dtoa_r+0x64c>)
 8026e06:	2000      	movs	r0, #0
 8026e08:	f7d9 fa5e 	bl	80002c8 <__aeabi_dsub>
 8026e0c:	ec53 2b18 	vmov	r2, r3, d8
 8026e10:	f7d9 fe84 	bl	8000b1c <__aeabi_dcmplt>
 8026e14:	2800      	cmp	r0, #0
 8026e16:	f040 80b9 	bne.w	8026f8c <_dtoa_r+0x6fc>
 8026e1a:	9b02      	ldr	r3, [sp, #8]
 8026e1c:	429d      	cmp	r5, r3
 8026e1e:	f43f af75 	beq.w	8026d0c <_dtoa_r+0x47c>
 8026e22:	4b2f      	ldr	r3, [pc, #188]	; (8026ee0 <_dtoa_r+0x650>)
 8026e24:	ec51 0b18 	vmov	r0, r1, d8
 8026e28:	2200      	movs	r2, #0
 8026e2a:	f7d9 fc05 	bl	8000638 <__aeabi_dmul>
 8026e2e:	4b2c      	ldr	r3, [pc, #176]	; (8026ee0 <_dtoa_r+0x650>)
 8026e30:	ec41 0b18 	vmov	d8, r0, r1
 8026e34:	2200      	movs	r2, #0
 8026e36:	4630      	mov	r0, r6
 8026e38:	4639      	mov	r1, r7
 8026e3a:	f7d9 fbfd 	bl	8000638 <__aeabi_dmul>
 8026e3e:	4606      	mov	r6, r0
 8026e40:	460f      	mov	r7, r1
 8026e42:	e7c4      	b.n	8026dce <_dtoa_r+0x53e>
 8026e44:	ec51 0b17 	vmov	r0, r1, d7
 8026e48:	f7d9 fbf6 	bl	8000638 <__aeabi_dmul>
 8026e4c:	9b02      	ldr	r3, [sp, #8]
 8026e4e:	9d00      	ldr	r5, [sp, #0]
 8026e50:	930c      	str	r3, [sp, #48]	; 0x30
 8026e52:	ec41 0b18 	vmov	d8, r0, r1
 8026e56:	4639      	mov	r1, r7
 8026e58:	4630      	mov	r0, r6
 8026e5a:	f7d9 fe9d 	bl	8000b98 <__aeabi_d2iz>
 8026e5e:	9011      	str	r0, [sp, #68]	; 0x44
 8026e60:	f7d9 fb80 	bl	8000564 <__aeabi_i2d>
 8026e64:	4602      	mov	r2, r0
 8026e66:	460b      	mov	r3, r1
 8026e68:	4630      	mov	r0, r6
 8026e6a:	4639      	mov	r1, r7
 8026e6c:	f7d9 fa2c 	bl	80002c8 <__aeabi_dsub>
 8026e70:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8026e72:	3330      	adds	r3, #48	; 0x30
 8026e74:	f805 3b01 	strb.w	r3, [r5], #1
 8026e78:	9b02      	ldr	r3, [sp, #8]
 8026e7a:	429d      	cmp	r5, r3
 8026e7c:	4606      	mov	r6, r0
 8026e7e:	460f      	mov	r7, r1
 8026e80:	f04f 0200 	mov.w	r2, #0
 8026e84:	d134      	bne.n	8026ef0 <_dtoa_r+0x660>
 8026e86:	4b19      	ldr	r3, [pc, #100]	; (8026eec <_dtoa_r+0x65c>)
 8026e88:	ec51 0b18 	vmov	r0, r1, d8
 8026e8c:	f7d9 fa1e 	bl	80002cc <__adddf3>
 8026e90:	4602      	mov	r2, r0
 8026e92:	460b      	mov	r3, r1
 8026e94:	4630      	mov	r0, r6
 8026e96:	4639      	mov	r1, r7
 8026e98:	f7d9 fe5e 	bl	8000b58 <__aeabi_dcmpgt>
 8026e9c:	2800      	cmp	r0, #0
 8026e9e:	d175      	bne.n	8026f8c <_dtoa_r+0x6fc>
 8026ea0:	ec53 2b18 	vmov	r2, r3, d8
 8026ea4:	4911      	ldr	r1, [pc, #68]	; (8026eec <_dtoa_r+0x65c>)
 8026ea6:	2000      	movs	r0, #0
 8026ea8:	f7d9 fa0e 	bl	80002c8 <__aeabi_dsub>
 8026eac:	4602      	mov	r2, r0
 8026eae:	460b      	mov	r3, r1
 8026eb0:	4630      	mov	r0, r6
 8026eb2:	4639      	mov	r1, r7
 8026eb4:	f7d9 fe32 	bl	8000b1c <__aeabi_dcmplt>
 8026eb8:	2800      	cmp	r0, #0
 8026eba:	f43f af27 	beq.w	8026d0c <_dtoa_r+0x47c>
 8026ebe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026ec0:	1e6b      	subs	r3, r5, #1
 8026ec2:	930c      	str	r3, [sp, #48]	; 0x30
 8026ec4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8026ec8:	2b30      	cmp	r3, #48	; 0x30
 8026eca:	d0f8      	beq.n	8026ebe <_dtoa_r+0x62e>
 8026ecc:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8026ed0:	e04a      	b.n	8026f68 <_dtoa_r+0x6d8>
 8026ed2:	bf00      	nop
 8026ed4:	0802a508 	.word	0x0802a508
 8026ed8:	0802a4e0 	.word	0x0802a4e0
 8026edc:	3ff00000 	.word	0x3ff00000
 8026ee0:	40240000 	.word	0x40240000
 8026ee4:	401c0000 	.word	0x401c0000
 8026ee8:	40140000 	.word	0x40140000
 8026eec:	3fe00000 	.word	0x3fe00000
 8026ef0:	4baf      	ldr	r3, [pc, #700]	; (80271b0 <_dtoa_r+0x920>)
 8026ef2:	f7d9 fba1 	bl	8000638 <__aeabi_dmul>
 8026ef6:	4606      	mov	r6, r0
 8026ef8:	460f      	mov	r7, r1
 8026efa:	e7ac      	b.n	8026e56 <_dtoa_r+0x5c6>
 8026efc:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8026f00:	9d00      	ldr	r5, [sp, #0]
 8026f02:	4642      	mov	r2, r8
 8026f04:	464b      	mov	r3, r9
 8026f06:	4630      	mov	r0, r6
 8026f08:	4639      	mov	r1, r7
 8026f0a:	f7d9 fcbf 	bl	800088c <__aeabi_ddiv>
 8026f0e:	f7d9 fe43 	bl	8000b98 <__aeabi_d2iz>
 8026f12:	9002      	str	r0, [sp, #8]
 8026f14:	f7d9 fb26 	bl	8000564 <__aeabi_i2d>
 8026f18:	4642      	mov	r2, r8
 8026f1a:	464b      	mov	r3, r9
 8026f1c:	f7d9 fb8c 	bl	8000638 <__aeabi_dmul>
 8026f20:	4602      	mov	r2, r0
 8026f22:	460b      	mov	r3, r1
 8026f24:	4630      	mov	r0, r6
 8026f26:	4639      	mov	r1, r7
 8026f28:	f7d9 f9ce 	bl	80002c8 <__aeabi_dsub>
 8026f2c:	9e02      	ldr	r6, [sp, #8]
 8026f2e:	9f01      	ldr	r7, [sp, #4]
 8026f30:	3630      	adds	r6, #48	; 0x30
 8026f32:	f805 6b01 	strb.w	r6, [r5], #1
 8026f36:	9e00      	ldr	r6, [sp, #0]
 8026f38:	1bae      	subs	r6, r5, r6
 8026f3a:	42b7      	cmp	r7, r6
 8026f3c:	4602      	mov	r2, r0
 8026f3e:	460b      	mov	r3, r1
 8026f40:	d137      	bne.n	8026fb2 <_dtoa_r+0x722>
 8026f42:	f7d9 f9c3 	bl	80002cc <__adddf3>
 8026f46:	4642      	mov	r2, r8
 8026f48:	464b      	mov	r3, r9
 8026f4a:	4606      	mov	r6, r0
 8026f4c:	460f      	mov	r7, r1
 8026f4e:	f7d9 fe03 	bl	8000b58 <__aeabi_dcmpgt>
 8026f52:	b9c8      	cbnz	r0, 8026f88 <_dtoa_r+0x6f8>
 8026f54:	4642      	mov	r2, r8
 8026f56:	464b      	mov	r3, r9
 8026f58:	4630      	mov	r0, r6
 8026f5a:	4639      	mov	r1, r7
 8026f5c:	f7d9 fdd4 	bl	8000b08 <__aeabi_dcmpeq>
 8026f60:	b110      	cbz	r0, 8026f68 <_dtoa_r+0x6d8>
 8026f62:	9b02      	ldr	r3, [sp, #8]
 8026f64:	07d9      	lsls	r1, r3, #31
 8026f66:	d40f      	bmi.n	8026f88 <_dtoa_r+0x6f8>
 8026f68:	4620      	mov	r0, r4
 8026f6a:	4659      	mov	r1, fp
 8026f6c:	f000 fe52 	bl	8027c14 <_Bfree>
 8026f70:	2300      	movs	r3, #0
 8026f72:	702b      	strb	r3, [r5, #0]
 8026f74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026f76:	f10a 0001 	add.w	r0, sl, #1
 8026f7a:	6018      	str	r0, [r3, #0]
 8026f7c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026f7e:	2b00      	cmp	r3, #0
 8026f80:	f43f acd8 	beq.w	8026934 <_dtoa_r+0xa4>
 8026f84:	601d      	str	r5, [r3, #0]
 8026f86:	e4d5      	b.n	8026934 <_dtoa_r+0xa4>
 8026f88:	f8cd a01c 	str.w	sl, [sp, #28]
 8026f8c:	462b      	mov	r3, r5
 8026f8e:	461d      	mov	r5, r3
 8026f90:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8026f94:	2a39      	cmp	r2, #57	; 0x39
 8026f96:	d108      	bne.n	8026faa <_dtoa_r+0x71a>
 8026f98:	9a00      	ldr	r2, [sp, #0]
 8026f9a:	429a      	cmp	r2, r3
 8026f9c:	d1f7      	bne.n	8026f8e <_dtoa_r+0x6fe>
 8026f9e:	9a07      	ldr	r2, [sp, #28]
 8026fa0:	9900      	ldr	r1, [sp, #0]
 8026fa2:	3201      	adds	r2, #1
 8026fa4:	9207      	str	r2, [sp, #28]
 8026fa6:	2230      	movs	r2, #48	; 0x30
 8026fa8:	700a      	strb	r2, [r1, #0]
 8026faa:	781a      	ldrb	r2, [r3, #0]
 8026fac:	3201      	adds	r2, #1
 8026fae:	701a      	strb	r2, [r3, #0]
 8026fb0:	e78c      	b.n	8026ecc <_dtoa_r+0x63c>
 8026fb2:	4b7f      	ldr	r3, [pc, #508]	; (80271b0 <_dtoa_r+0x920>)
 8026fb4:	2200      	movs	r2, #0
 8026fb6:	f7d9 fb3f 	bl	8000638 <__aeabi_dmul>
 8026fba:	2200      	movs	r2, #0
 8026fbc:	2300      	movs	r3, #0
 8026fbe:	4606      	mov	r6, r0
 8026fc0:	460f      	mov	r7, r1
 8026fc2:	f7d9 fda1 	bl	8000b08 <__aeabi_dcmpeq>
 8026fc6:	2800      	cmp	r0, #0
 8026fc8:	d09b      	beq.n	8026f02 <_dtoa_r+0x672>
 8026fca:	e7cd      	b.n	8026f68 <_dtoa_r+0x6d8>
 8026fcc:	9a08      	ldr	r2, [sp, #32]
 8026fce:	2a00      	cmp	r2, #0
 8026fd0:	f000 80c4 	beq.w	802715c <_dtoa_r+0x8cc>
 8026fd4:	9a05      	ldr	r2, [sp, #20]
 8026fd6:	2a01      	cmp	r2, #1
 8026fd8:	f300 80a8 	bgt.w	802712c <_dtoa_r+0x89c>
 8026fdc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026fde:	2a00      	cmp	r2, #0
 8026fe0:	f000 80a0 	beq.w	8027124 <_dtoa_r+0x894>
 8026fe4:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8026fe8:	9e06      	ldr	r6, [sp, #24]
 8026fea:	4645      	mov	r5, r8
 8026fec:	9a04      	ldr	r2, [sp, #16]
 8026fee:	2101      	movs	r1, #1
 8026ff0:	441a      	add	r2, r3
 8026ff2:	4620      	mov	r0, r4
 8026ff4:	4498      	add	r8, r3
 8026ff6:	9204      	str	r2, [sp, #16]
 8026ff8:	f000 ff12 	bl	8027e20 <__i2b>
 8026ffc:	4607      	mov	r7, r0
 8026ffe:	2d00      	cmp	r5, #0
 8027000:	dd0b      	ble.n	802701a <_dtoa_r+0x78a>
 8027002:	9b04      	ldr	r3, [sp, #16]
 8027004:	2b00      	cmp	r3, #0
 8027006:	dd08      	ble.n	802701a <_dtoa_r+0x78a>
 8027008:	42ab      	cmp	r3, r5
 802700a:	9a04      	ldr	r2, [sp, #16]
 802700c:	bfa8      	it	ge
 802700e:	462b      	movge	r3, r5
 8027010:	eba8 0803 	sub.w	r8, r8, r3
 8027014:	1aed      	subs	r5, r5, r3
 8027016:	1ad3      	subs	r3, r2, r3
 8027018:	9304      	str	r3, [sp, #16]
 802701a:	9b06      	ldr	r3, [sp, #24]
 802701c:	b1fb      	cbz	r3, 802705e <_dtoa_r+0x7ce>
 802701e:	9b08      	ldr	r3, [sp, #32]
 8027020:	2b00      	cmp	r3, #0
 8027022:	f000 809f 	beq.w	8027164 <_dtoa_r+0x8d4>
 8027026:	2e00      	cmp	r6, #0
 8027028:	dd11      	ble.n	802704e <_dtoa_r+0x7be>
 802702a:	4639      	mov	r1, r7
 802702c:	4632      	mov	r2, r6
 802702e:	4620      	mov	r0, r4
 8027030:	f000 ffb2 	bl	8027f98 <__pow5mult>
 8027034:	465a      	mov	r2, fp
 8027036:	4601      	mov	r1, r0
 8027038:	4607      	mov	r7, r0
 802703a:	4620      	mov	r0, r4
 802703c:	f000 ff06 	bl	8027e4c <__multiply>
 8027040:	4659      	mov	r1, fp
 8027042:	9007      	str	r0, [sp, #28]
 8027044:	4620      	mov	r0, r4
 8027046:	f000 fde5 	bl	8027c14 <_Bfree>
 802704a:	9b07      	ldr	r3, [sp, #28]
 802704c:	469b      	mov	fp, r3
 802704e:	9b06      	ldr	r3, [sp, #24]
 8027050:	1b9a      	subs	r2, r3, r6
 8027052:	d004      	beq.n	802705e <_dtoa_r+0x7ce>
 8027054:	4659      	mov	r1, fp
 8027056:	4620      	mov	r0, r4
 8027058:	f000 ff9e 	bl	8027f98 <__pow5mult>
 802705c:	4683      	mov	fp, r0
 802705e:	2101      	movs	r1, #1
 8027060:	4620      	mov	r0, r4
 8027062:	f000 fedd 	bl	8027e20 <__i2b>
 8027066:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027068:	2b00      	cmp	r3, #0
 802706a:	4606      	mov	r6, r0
 802706c:	dd7c      	ble.n	8027168 <_dtoa_r+0x8d8>
 802706e:	461a      	mov	r2, r3
 8027070:	4601      	mov	r1, r0
 8027072:	4620      	mov	r0, r4
 8027074:	f000 ff90 	bl	8027f98 <__pow5mult>
 8027078:	9b05      	ldr	r3, [sp, #20]
 802707a:	2b01      	cmp	r3, #1
 802707c:	4606      	mov	r6, r0
 802707e:	dd76      	ble.n	802716e <_dtoa_r+0x8de>
 8027080:	2300      	movs	r3, #0
 8027082:	9306      	str	r3, [sp, #24]
 8027084:	6933      	ldr	r3, [r6, #16]
 8027086:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 802708a:	6918      	ldr	r0, [r3, #16]
 802708c:	f000 fe78 	bl	8027d80 <__hi0bits>
 8027090:	f1c0 0020 	rsb	r0, r0, #32
 8027094:	9b04      	ldr	r3, [sp, #16]
 8027096:	4418      	add	r0, r3
 8027098:	f010 001f 	ands.w	r0, r0, #31
 802709c:	f000 8086 	beq.w	80271ac <_dtoa_r+0x91c>
 80270a0:	f1c0 0320 	rsb	r3, r0, #32
 80270a4:	2b04      	cmp	r3, #4
 80270a6:	dd7f      	ble.n	80271a8 <_dtoa_r+0x918>
 80270a8:	f1c0 001c 	rsb	r0, r0, #28
 80270ac:	9b04      	ldr	r3, [sp, #16]
 80270ae:	4403      	add	r3, r0
 80270b0:	4480      	add	r8, r0
 80270b2:	4405      	add	r5, r0
 80270b4:	9304      	str	r3, [sp, #16]
 80270b6:	f1b8 0f00 	cmp.w	r8, #0
 80270ba:	dd05      	ble.n	80270c8 <_dtoa_r+0x838>
 80270bc:	4659      	mov	r1, fp
 80270be:	4642      	mov	r2, r8
 80270c0:	4620      	mov	r0, r4
 80270c2:	f000 ffc3 	bl	802804c <__lshift>
 80270c6:	4683      	mov	fp, r0
 80270c8:	9b04      	ldr	r3, [sp, #16]
 80270ca:	2b00      	cmp	r3, #0
 80270cc:	dd05      	ble.n	80270da <_dtoa_r+0x84a>
 80270ce:	4631      	mov	r1, r6
 80270d0:	461a      	mov	r2, r3
 80270d2:	4620      	mov	r0, r4
 80270d4:	f000 ffba 	bl	802804c <__lshift>
 80270d8:	4606      	mov	r6, r0
 80270da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80270dc:	2b00      	cmp	r3, #0
 80270de:	d069      	beq.n	80271b4 <_dtoa_r+0x924>
 80270e0:	4631      	mov	r1, r6
 80270e2:	4658      	mov	r0, fp
 80270e4:	f001 f81e 	bl	8028124 <__mcmp>
 80270e8:	2800      	cmp	r0, #0
 80270ea:	da63      	bge.n	80271b4 <_dtoa_r+0x924>
 80270ec:	2300      	movs	r3, #0
 80270ee:	4659      	mov	r1, fp
 80270f0:	220a      	movs	r2, #10
 80270f2:	4620      	mov	r0, r4
 80270f4:	f000 fdb0 	bl	8027c58 <__multadd>
 80270f8:	9b08      	ldr	r3, [sp, #32]
 80270fa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80270fe:	4683      	mov	fp, r0
 8027100:	2b00      	cmp	r3, #0
 8027102:	f000 818f 	beq.w	8027424 <_dtoa_r+0xb94>
 8027106:	4639      	mov	r1, r7
 8027108:	2300      	movs	r3, #0
 802710a:	220a      	movs	r2, #10
 802710c:	4620      	mov	r0, r4
 802710e:	f000 fda3 	bl	8027c58 <__multadd>
 8027112:	f1b9 0f00 	cmp.w	r9, #0
 8027116:	4607      	mov	r7, r0
 8027118:	f300 808e 	bgt.w	8027238 <_dtoa_r+0x9a8>
 802711c:	9b05      	ldr	r3, [sp, #20]
 802711e:	2b02      	cmp	r3, #2
 8027120:	dc50      	bgt.n	80271c4 <_dtoa_r+0x934>
 8027122:	e089      	b.n	8027238 <_dtoa_r+0x9a8>
 8027124:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027126:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 802712a:	e75d      	b.n	8026fe8 <_dtoa_r+0x758>
 802712c:	9b01      	ldr	r3, [sp, #4]
 802712e:	1e5e      	subs	r6, r3, #1
 8027130:	9b06      	ldr	r3, [sp, #24]
 8027132:	42b3      	cmp	r3, r6
 8027134:	bfbf      	itttt	lt
 8027136:	9b06      	ldrlt	r3, [sp, #24]
 8027138:	9606      	strlt	r6, [sp, #24]
 802713a:	1af2      	sublt	r2, r6, r3
 802713c:	9b0d      	ldrlt	r3, [sp, #52]	; 0x34
 802713e:	bfb6      	itet	lt
 8027140:	189b      	addlt	r3, r3, r2
 8027142:	1b9e      	subge	r6, r3, r6
 8027144:	930d      	strlt	r3, [sp, #52]	; 0x34
 8027146:	9b01      	ldr	r3, [sp, #4]
 8027148:	bfb8      	it	lt
 802714a:	2600      	movlt	r6, #0
 802714c:	2b00      	cmp	r3, #0
 802714e:	bfb5      	itete	lt
 8027150:	eba8 0503 	sublt.w	r5, r8, r3
 8027154:	9b01      	ldrge	r3, [sp, #4]
 8027156:	2300      	movlt	r3, #0
 8027158:	4645      	movge	r5, r8
 802715a:	e747      	b.n	8026fec <_dtoa_r+0x75c>
 802715c:	9e06      	ldr	r6, [sp, #24]
 802715e:	9f08      	ldr	r7, [sp, #32]
 8027160:	4645      	mov	r5, r8
 8027162:	e74c      	b.n	8026ffe <_dtoa_r+0x76e>
 8027164:	9a06      	ldr	r2, [sp, #24]
 8027166:	e775      	b.n	8027054 <_dtoa_r+0x7c4>
 8027168:	9b05      	ldr	r3, [sp, #20]
 802716a:	2b01      	cmp	r3, #1
 802716c:	dc18      	bgt.n	80271a0 <_dtoa_r+0x910>
 802716e:	9b02      	ldr	r3, [sp, #8]
 8027170:	b9b3      	cbnz	r3, 80271a0 <_dtoa_r+0x910>
 8027172:	9b03      	ldr	r3, [sp, #12]
 8027174:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8027178:	b9a3      	cbnz	r3, 80271a4 <_dtoa_r+0x914>
 802717a:	9b03      	ldr	r3, [sp, #12]
 802717c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8027180:	0d1b      	lsrs	r3, r3, #20
 8027182:	051b      	lsls	r3, r3, #20
 8027184:	b12b      	cbz	r3, 8027192 <_dtoa_r+0x902>
 8027186:	9b04      	ldr	r3, [sp, #16]
 8027188:	3301      	adds	r3, #1
 802718a:	9304      	str	r3, [sp, #16]
 802718c:	f108 0801 	add.w	r8, r8, #1
 8027190:	2301      	movs	r3, #1
 8027192:	9306      	str	r3, [sp, #24]
 8027194:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027196:	2b00      	cmp	r3, #0
 8027198:	f47f af74 	bne.w	8027084 <_dtoa_r+0x7f4>
 802719c:	2001      	movs	r0, #1
 802719e:	e779      	b.n	8027094 <_dtoa_r+0x804>
 80271a0:	2300      	movs	r3, #0
 80271a2:	e7f6      	b.n	8027192 <_dtoa_r+0x902>
 80271a4:	9b02      	ldr	r3, [sp, #8]
 80271a6:	e7f4      	b.n	8027192 <_dtoa_r+0x902>
 80271a8:	d085      	beq.n	80270b6 <_dtoa_r+0x826>
 80271aa:	4618      	mov	r0, r3
 80271ac:	301c      	adds	r0, #28
 80271ae:	e77d      	b.n	80270ac <_dtoa_r+0x81c>
 80271b0:	40240000 	.word	0x40240000
 80271b4:	9b01      	ldr	r3, [sp, #4]
 80271b6:	2b00      	cmp	r3, #0
 80271b8:	dc38      	bgt.n	802722c <_dtoa_r+0x99c>
 80271ba:	9b05      	ldr	r3, [sp, #20]
 80271bc:	2b02      	cmp	r3, #2
 80271be:	dd35      	ble.n	802722c <_dtoa_r+0x99c>
 80271c0:	f8dd 9004 	ldr.w	r9, [sp, #4]
 80271c4:	f1b9 0f00 	cmp.w	r9, #0
 80271c8:	d10d      	bne.n	80271e6 <_dtoa_r+0x956>
 80271ca:	4631      	mov	r1, r6
 80271cc:	464b      	mov	r3, r9
 80271ce:	2205      	movs	r2, #5
 80271d0:	4620      	mov	r0, r4
 80271d2:	f000 fd41 	bl	8027c58 <__multadd>
 80271d6:	4601      	mov	r1, r0
 80271d8:	4606      	mov	r6, r0
 80271da:	4658      	mov	r0, fp
 80271dc:	f000 ffa2 	bl	8028124 <__mcmp>
 80271e0:	2800      	cmp	r0, #0
 80271e2:	f73f adbd 	bgt.w	8026d60 <_dtoa_r+0x4d0>
 80271e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80271e8:	9d00      	ldr	r5, [sp, #0]
 80271ea:	ea6f 0a03 	mvn.w	sl, r3
 80271ee:	f04f 0800 	mov.w	r8, #0
 80271f2:	4631      	mov	r1, r6
 80271f4:	4620      	mov	r0, r4
 80271f6:	f000 fd0d 	bl	8027c14 <_Bfree>
 80271fa:	2f00      	cmp	r7, #0
 80271fc:	f43f aeb4 	beq.w	8026f68 <_dtoa_r+0x6d8>
 8027200:	f1b8 0f00 	cmp.w	r8, #0
 8027204:	d005      	beq.n	8027212 <_dtoa_r+0x982>
 8027206:	45b8      	cmp	r8, r7
 8027208:	d003      	beq.n	8027212 <_dtoa_r+0x982>
 802720a:	4641      	mov	r1, r8
 802720c:	4620      	mov	r0, r4
 802720e:	f000 fd01 	bl	8027c14 <_Bfree>
 8027212:	4639      	mov	r1, r7
 8027214:	4620      	mov	r0, r4
 8027216:	f000 fcfd 	bl	8027c14 <_Bfree>
 802721a:	e6a5      	b.n	8026f68 <_dtoa_r+0x6d8>
 802721c:	2600      	movs	r6, #0
 802721e:	4637      	mov	r7, r6
 8027220:	e7e1      	b.n	80271e6 <_dtoa_r+0x956>
 8027222:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8027224:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8027228:	4637      	mov	r7, r6
 802722a:	e599      	b.n	8026d60 <_dtoa_r+0x4d0>
 802722c:	9b08      	ldr	r3, [sp, #32]
 802722e:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8027232:	2b00      	cmp	r3, #0
 8027234:	f000 80fd 	beq.w	8027432 <_dtoa_r+0xba2>
 8027238:	2d00      	cmp	r5, #0
 802723a:	dd05      	ble.n	8027248 <_dtoa_r+0x9b8>
 802723c:	4639      	mov	r1, r7
 802723e:	462a      	mov	r2, r5
 8027240:	4620      	mov	r0, r4
 8027242:	f000 ff03 	bl	802804c <__lshift>
 8027246:	4607      	mov	r7, r0
 8027248:	9b06      	ldr	r3, [sp, #24]
 802724a:	2b00      	cmp	r3, #0
 802724c:	d05c      	beq.n	8027308 <_dtoa_r+0xa78>
 802724e:	6879      	ldr	r1, [r7, #4]
 8027250:	4620      	mov	r0, r4
 8027252:	f000 fc9f 	bl	8027b94 <_Balloc>
 8027256:	4605      	mov	r5, r0
 8027258:	b928      	cbnz	r0, 8027266 <_dtoa_r+0x9d6>
 802725a:	4b80      	ldr	r3, [pc, #512]	; (802745c <_dtoa_r+0xbcc>)
 802725c:	4602      	mov	r2, r0
 802725e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8027262:	f7ff bb2e 	b.w	80268c2 <_dtoa_r+0x32>
 8027266:	693a      	ldr	r2, [r7, #16]
 8027268:	3202      	adds	r2, #2
 802726a:	0092      	lsls	r2, r2, #2
 802726c:	f107 010c 	add.w	r1, r7, #12
 8027270:	300c      	adds	r0, #12
 8027272:	f7fd fcdb 	bl	8024c2c <memcpy>
 8027276:	2201      	movs	r2, #1
 8027278:	4629      	mov	r1, r5
 802727a:	4620      	mov	r0, r4
 802727c:	f000 fee6 	bl	802804c <__lshift>
 8027280:	9b00      	ldr	r3, [sp, #0]
 8027282:	3301      	adds	r3, #1
 8027284:	9301      	str	r3, [sp, #4]
 8027286:	9b00      	ldr	r3, [sp, #0]
 8027288:	444b      	add	r3, r9
 802728a:	9307      	str	r3, [sp, #28]
 802728c:	9b02      	ldr	r3, [sp, #8]
 802728e:	f003 0301 	and.w	r3, r3, #1
 8027292:	46b8      	mov	r8, r7
 8027294:	9306      	str	r3, [sp, #24]
 8027296:	4607      	mov	r7, r0
 8027298:	9b01      	ldr	r3, [sp, #4]
 802729a:	4631      	mov	r1, r6
 802729c:	3b01      	subs	r3, #1
 802729e:	4658      	mov	r0, fp
 80272a0:	9302      	str	r3, [sp, #8]
 80272a2:	f7ff fa69 	bl	8026778 <quorem>
 80272a6:	4603      	mov	r3, r0
 80272a8:	3330      	adds	r3, #48	; 0x30
 80272aa:	9004      	str	r0, [sp, #16]
 80272ac:	4641      	mov	r1, r8
 80272ae:	4658      	mov	r0, fp
 80272b0:	9308      	str	r3, [sp, #32]
 80272b2:	f000 ff37 	bl	8028124 <__mcmp>
 80272b6:	463a      	mov	r2, r7
 80272b8:	4681      	mov	r9, r0
 80272ba:	4631      	mov	r1, r6
 80272bc:	4620      	mov	r0, r4
 80272be:	f000 ff4d 	bl	802815c <__mdiff>
 80272c2:	68c2      	ldr	r2, [r0, #12]
 80272c4:	9b08      	ldr	r3, [sp, #32]
 80272c6:	4605      	mov	r5, r0
 80272c8:	bb02      	cbnz	r2, 802730c <_dtoa_r+0xa7c>
 80272ca:	4601      	mov	r1, r0
 80272cc:	4658      	mov	r0, fp
 80272ce:	f000 ff29 	bl	8028124 <__mcmp>
 80272d2:	9b08      	ldr	r3, [sp, #32]
 80272d4:	4602      	mov	r2, r0
 80272d6:	4629      	mov	r1, r5
 80272d8:	4620      	mov	r0, r4
 80272da:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80272de:	f000 fc99 	bl	8027c14 <_Bfree>
 80272e2:	9b05      	ldr	r3, [sp, #20]
 80272e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80272e6:	9d01      	ldr	r5, [sp, #4]
 80272e8:	ea43 0102 	orr.w	r1, r3, r2
 80272ec:	9b06      	ldr	r3, [sp, #24]
 80272ee:	430b      	orrs	r3, r1
 80272f0:	9b08      	ldr	r3, [sp, #32]
 80272f2:	d10d      	bne.n	8027310 <_dtoa_r+0xa80>
 80272f4:	2b39      	cmp	r3, #57	; 0x39
 80272f6:	d029      	beq.n	802734c <_dtoa_r+0xabc>
 80272f8:	f1b9 0f00 	cmp.w	r9, #0
 80272fc:	dd01      	ble.n	8027302 <_dtoa_r+0xa72>
 80272fe:	9b04      	ldr	r3, [sp, #16]
 8027300:	3331      	adds	r3, #49	; 0x31
 8027302:	9a02      	ldr	r2, [sp, #8]
 8027304:	7013      	strb	r3, [r2, #0]
 8027306:	e774      	b.n	80271f2 <_dtoa_r+0x962>
 8027308:	4638      	mov	r0, r7
 802730a:	e7b9      	b.n	8027280 <_dtoa_r+0x9f0>
 802730c:	2201      	movs	r2, #1
 802730e:	e7e2      	b.n	80272d6 <_dtoa_r+0xa46>
 8027310:	f1b9 0f00 	cmp.w	r9, #0
 8027314:	db06      	blt.n	8027324 <_dtoa_r+0xa94>
 8027316:	9905      	ldr	r1, [sp, #20]
 8027318:	ea41 0909 	orr.w	r9, r1, r9
 802731c:	9906      	ldr	r1, [sp, #24]
 802731e:	ea59 0101 	orrs.w	r1, r9, r1
 8027322:	d120      	bne.n	8027366 <_dtoa_r+0xad6>
 8027324:	2a00      	cmp	r2, #0
 8027326:	ddec      	ble.n	8027302 <_dtoa_r+0xa72>
 8027328:	4659      	mov	r1, fp
 802732a:	2201      	movs	r2, #1
 802732c:	4620      	mov	r0, r4
 802732e:	9301      	str	r3, [sp, #4]
 8027330:	f000 fe8c 	bl	802804c <__lshift>
 8027334:	4631      	mov	r1, r6
 8027336:	4683      	mov	fp, r0
 8027338:	f000 fef4 	bl	8028124 <__mcmp>
 802733c:	2800      	cmp	r0, #0
 802733e:	9b01      	ldr	r3, [sp, #4]
 8027340:	dc02      	bgt.n	8027348 <_dtoa_r+0xab8>
 8027342:	d1de      	bne.n	8027302 <_dtoa_r+0xa72>
 8027344:	07da      	lsls	r2, r3, #31
 8027346:	d5dc      	bpl.n	8027302 <_dtoa_r+0xa72>
 8027348:	2b39      	cmp	r3, #57	; 0x39
 802734a:	d1d8      	bne.n	80272fe <_dtoa_r+0xa6e>
 802734c:	9a02      	ldr	r2, [sp, #8]
 802734e:	2339      	movs	r3, #57	; 0x39
 8027350:	7013      	strb	r3, [r2, #0]
 8027352:	462b      	mov	r3, r5
 8027354:	461d      	mov	r5, r3
 8027356:	3b01      	subs	r3, #1
 8027358:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 802735c:	2a39      	cmp	r2, #57	; 0x39
 802735e:	d050      	beq.n	8027402 <_dtoa_r+0xb72>
 8027360:	3201      	adds	r2, #1
 8027362:	701a      	strb	r2, [r3, #0]
 8027364:	e745      	b.n	80271f2 <_dtoa_r+0x962>
 8027366:	2a00      	cmp	r2, #0
 8027368:	dd03      	ble.n	8027372 <_dtoa_r+0xae2>
 802736a:	2b39      	cmp	r3, #57	; 0x39
 802736c:	d0ee      	beq.n	802734c <_dtoa_r+0xabc>
 802736e:	3301      	adds	r3, #1
 8027370:	e7c7      	b.n	8027302 <_dtoa_r+0xa72>
 8027372:	9a01      	ldr	r2, [sp, #4]
 8027374:	9907      	ldr	r1, [sp, #28]
 8027376:	f802 3c01 	strb.w	r3, [r2, #-1]
 802737a:	428a      	cmp	r2, r1
 802737c:	d02a      	beq.n	80273d4 <_dtoa_r+0xb44>
 802737e:	4659      	mov	r1, fp
 8027380:	2300      	movs	r3, #0
 8027382:	220a      	movs	r2, #10
 8027384:	4620      	mov	r0, r4
 8027386:	f000 fc67 	bl	8027c58 <__multadd>
 802738a:	45b8      	cmp	r8, r7
 802738c:	4683      	mov	fp, r0
 802738e:	f04f 0300 	mov.w	r3, #0
 8027392:	f04f 020a 	mov.w	r2, #10
 8027396:	4641      	mov	r1, r8
 8027398:	4620      	mov	r0, r4
 802739a:	d107      	bne.n	80273ac <_dtoa_r+0xb1c>
 802739c:	f000 fc5c 	bl	8027c58 <__multadd>
 80273a0:	4680      	mov	r8, r0
 80273a2:	4607      	mov	r7, r0
 80273a4:	9b01      	ldr	r3, [sp, #4]
 80273a6:	3301      	adds	r3, #1
 80273a8:	9301      	str	r3, [sp, #4]
 80273aa:	e775      	b.n	8027298 <_dtoa_r+0xa08>
 80273ac:	f000 fc54 	bl	8027c58 <__multadd>
 80273b0:	4639      	mov	r1, r7
 80273b2:	4680      	mov	r8, r0
 80273b4:	2300      	movs	r3, #0
 80273b6:	220a      	movs	r2, #10
 80273b8:	4620      	mov	r0, r4
 80273ba:	f000 fc4d 	bl	8027c58 <__multadd>
 80273be:	4607      	mov	r7, r0
 80273c0:	e7f0      	b.n	80273a4 <_dtoa_r+0xb14>
 80273c2:	f1b9 0f00 	cmp.w	r9, #0
 80273c6:	9a00      	ldr	r2, [sp, #0]
 80273c8:	bfcc      	ite	gt
 80273ca:	464d      	movgt	r5, r9
 80273cc:	2501      	movle	r5, #1
 80273ce:	4415      	add	r5, r2
 80273d0:	f04f 0800 	mov.w	r8, #0
 80273d4:	4659      	mov	r1, fp
 80273d6:	2201      	movs	r2, #1
 80273d8:	4620      	mov	r0, r4
 80273da:	9301      	str	r3, [sp, #4]
 80273dc:	f000 fe36 	bl	802804c <__lshift>
 80273e0:	4631      	mov	r1, r6
 80273e2:	4683      	mov	fp, r0
 80273e4:	f000 fe9e 	bl	8028124 <__mcmp>
 80273e8:	2800      	cmp	r0, #0
 80273ea:	dcb2      	bgt.n	8027352 <_dtoa_r+0xac2>
 80273ec:	d102      	bne.n	80273f4 <_dtoa_r+0xb64>
 80273ee:	9b01      	ldr	r3, [sp, #4]
 80273f0:	07db      	lsls	r3, r3, #31
 80273f2:	d4ae      	bmi.n	8027352 <_dtoa_r+0xac2>
 80273f4:	462b      	mov	r3, r5
 80273f6:	461d      	mov	r5, r3
 80273f8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80273fc:	2a30      	cmp	r2, #48	; 0x30
 80273fe:	d0fa      	beq.n	80273f6 <_dtoa_r+0xb66>
 8027400:	e6f7      	b.n	80271f2 <_dtoa_r+0x962>
 8027402:	9a00      	ldr	r2, [sp, #0]
 8027404:	429a      	cmp	r2, r3
 8027406:	d1a5      	bne.n	8027354 <_dtoa_r+0xac4>
 8027408:	f10a 0a01 	add.w	sl, sl, #1
 802740c:	2331      	movs	r3, #49	; 0x31
 802740e:	e779      	b.n	8027304 <_dtoa_r+0xa74>
 8027410:	4b13      	ldr	r3, [pc, #76]	; (8027460 <_dtoa_r+0xbd0>)
 8027412:	f7ff baaf 	b.w	8026974 <_dtoa_r+0xe4>
 8027416:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8027418:	2b00      	cmp	r3, #0
 802741a:	f47f aa86 	bne.w	802692a <_dtoa_r+0x9a>
 802741e:	4b11      	ldr	r3, [pc, #68]	; (8027464 <_dtoa_r+0xbd4>)
 8027420:	f7ff baa8 	b.w	8026974 <_dtoa_r+0xe4>
 8027424:	f1b9 0f00 	cmp.w	r9, #0
 8027428:	dc03      	bgt.n	8027432 <_dtoa_r+0xba2>
 802742a:	9b05      	ldr	r3, [sp, #20]
 802742c:	2b02      	cmp	r3, #2
 802742e:	f73f aec9 	bgt.w	80271c4 <_dtoa_r+0x934>
 8027432:	9d00      	ldr	r5, [sp, #0]
 8027434:	4631      	mov	r1, r6
 8027436:	4658      	mov	r0, fp
 8027438:	f7ff f99e 	bl	8026778 <quorem>
 802743c:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8027440:	f805 3b01 	strb.w	r3, [r5], #1
 8027444:	9a00      	ldr	r2, [sp, #0]
 8027446:	1aaa      	subs	r2, r5, r2
 8027448:	4591      	cmp	r9, r2
 802744a:	ddba      	ble.n	80273c2 <_dtoa_r+0xb32>
 802744c:	4659      	mov	r1, fp
 802744e:	2300      	movs	r3, #0
 8027450:	220a      	movs	r2, #10
 8027452:	4620      	mov	r0, r4
 8027454:	f000 fc00 	bl	8027c58 <__multadd>
 8027458:	4683      	mov	fp, r0
 802745a:	e7eb      	b.n	8027434 <_dtoa_r+0xba4>
 802745c:	0802a3f1 	.word	0x0802a3f1
 8027460:	0802a1d4 	.word	0x0802a1d4
 8027464:	0802a36e 	.word	0x0802a36e

08027468 <rshift>:
 8027468:	6903      	ldr	r3, [r0, #16]
 802746a:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 802746e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8027472:	ea4f 1261 	mov.w	r2, r1, asr #5
 8027476:	f100 0414 	add.w	r4, r0, #20
 802747a:	dd45      	ble.n	8027508 <rshift+0xa0>
 802747c:	f011 011f 	ands.w	r1, r1, #31
 8027480:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8027484:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8027488:	d10c      	bne.n	80274a4 <rshift+0x3c>
 802748a:	f100 0710 	add.w	r7, r0, #16
 802748e:	4629      	mov	r1, r5
 8027490:	42b1      	cmp	r1, r6
 8027492:	d334      	bcc.n	80274fe <rshift+0x96>
 8027494:	1a9b      	subs	r3, r3, r2
 8027496:	009b      	lsls	r3, r3, #2
 8027498:	1eea      	subs	r2, r5, #3
 802749a:	4296      	cmp	r6, r2
 802749c:	bf38      	it	cc
 802749e:	2300      	movcc	r3, #0
 80274a0:	4423      	add	r3, r4
 80274a2:	e015      	b.n	80274d0 <rshift+0x68>
 80274a4:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80274a8:	f1c1 0820 	rsb	r8, r1, #32
 80274ac:	40cf      	lsrs	r7, r1
 80274ae:	f105 0e04 	add.w	lr, r5, #4
 80274b2:	46a1      	mov	r9, r4
 80274b4:	4576      	cmp	r6, lr
 80274b6:	46f4      	mov	ip, lr
 80274b8:	d815      	bhi.n	80274e6 <rshift+0x7e>
 80274ba:	1a9b      	subs	r3, r3, r2
 80274bc:	009a      	lsls	r2, r3, #2
 80274be:	3a04      	subs	r2, #4
 80274c0:	3501      	adds	r5, #1
 80274c2:	42ae      	cmp	r6, r5
 80274c4:	bf38      	it	cc
 80274c6:	2200      	movcc	r2, #0
 80274c8:	18a3      	adds	r3, r4, r2
 80274ca:	50a7      	str	r7, [r4, r2]
 80274cc:	b107      	cbz	r7, 80274d0 <rshift+0x68>
 80274ce:	3304      	adds	r3, #4
 80274d0:	1b1a      	subs	r2, r3, r4
 80274d2:	42a3      	cmp	r3, r4
 80274d4:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80274d8:	bf08      	it	eq
 80274da:	2300      	moveq	r3, #0
 80274dc:	6102      	str	r2, [r0, #16]
 80274de:	bf08      	it	eq
 80274e0:	6143      	streq	r3, [r0, #20]
 80274e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80274e6:	f8dc c000 	ldr.w	ip, [ip]
 80274ea:	fa0c fc08 	lsl.w	ip, ip, r8
 80274ee:	ea4c 0707 	orr.w	r7, ip, r7
 80274f2:	f849 7b04 	str.w	r7, [r9], #4
 80274f6:	f85e 7b04 	ldr.w	r7, [lr], #4
 80274fa:	40cf      	lsrs	r7, r1
 80274fc:	e7da      	b.n	80274b4 <rshift+0x4c>
 80274fe:	f851 cb04 	ldr.w	ip, [r1], #4
 8027502:	f847 cf04 	str.w	ip, [r7, #4]!
 8027506:	e7c3      	b.n	8027490 <rshift+0x28>
 8027508:	4623      	mov	r3, r4
 802750a:	e7e1      	b.n	80274d0 <rshift+0x68>

0802750c <__hexdig_fun>:
 802750c:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8027510:	2b09      	cmp	r3, #9
 8027512:	d802      	bhi.n	802751a <__hexdig_fun+0xe>
 8027514:	3820      	subs	r0, #32
 8027516:	b2c0      	uxtb	r0, r0
 8027518:	4770      	bx	lr
 802751a:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 802751e:	2b05      	cmp	r3, #5
 8027520:	d801      	bhi.n	8027526 <__hexdig_fun+0x1a>
 8027522:	3847      	subs	r0, #71	; 0x47
 8027524:	e7f7      	b.n	8027516 <__hexdig_fun+0xa>
 8027526:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 802752a:	2b05      	cmp	r3, #5
 802752c:	d801      	bhi.n	8027532 <__hexdig_fun+0x26>
 802752e:	3827      	subs	r0, #39	; 0x27
 8027530:	e7f1      	b.n	8027516 <__hexdig_fun+0xa>
 8027532:	2000      	movs	r0, #0
 8027534:	4770      	bx	lr
	...

08027538 <__gethex>:
 8027538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802753c:	ed2d 8b02 	vpush	{d8}
 8027540:	b089      	sub	sp, #36	; 0x24
 8027542:	ee08 0a10 	vmov	s16, r0
 8027546:	9304      	str	r3, [sp, #16]
 8027548:	4bbc      	ldr	r3, [pc, #752]	; (802783c <__gethex+0x304>)
 802754a:	681b      	ldr	r3, [r3, #0]
 802754c:	9301      	str	r3, [sp, #4]
 802754e:	4618      	mov	r0, r3
 8027550:	468b      	mov	fp, r1
 8027552:	4690      	mov	r8, r2
 8027554:	f7d8 feac 	bl	80002b0 <strlen>
 8027558:	9b01      	ldr	r3, [sp, #4]
 802755a:	f8db 2000 	ldr.w	r2, [fp]
 802755e:	4403      	add	r3, r0
 8027560:	4682      	mov	sl, r0
 8027562:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8027566:	9305      	str	r3, [sp, #20]
 8027568:	1c93      	adds	r3, r2, #2
 802756a:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 802756e:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8027572:	32fe      	adds	r2, #254	; 0xfe
 8027574:	18d1      	adds	r1, r2, r3
 8027576:	461f      	mov	r7, r3
 8027578:	f813 0b01 	ldrb.w	r0, [r3], #1
 802757c:	9100      	str	r1, [sp, #0]
 802757e:	2830      	cmp	r0, #48	; 0x30
 8027580:	d0f8      	beq.n	8027574 <__gethex+0x3c>
 8027582:	f7ff ffc3 	bl	802750c <__hexdig_fun>
 8027586:	4604      	mov	r4, r0
 8027588:	2800      	cmp	r0, #0
 802758a:	d13a      	bne.n	8027602 <__gethex+0xca>
 802758c:	9901      	ldr	r1, [sp, #4]
 802758e:	4652      	mov	r2, sl
 8027590:	4638      	mov	r0, r7
 8027592:	f001 f92b 	bl	80287ec <strncmp>
 8027596:	4605      	mov	r5, r0
 8027598:	2800      	cmp	r0, #0
 802759a:	d168      	bne.n	802766e <__gethex+0x136>
 802759c:	f817 000a 	ldrb.w	r0, [r7, sl]
 80275a0:	eb07 060a 	add.w	r6, r7, sl
 80275a4:	f7ff ffb2 	bl	802750c <__hexdig_fun>
 80275a8:	2800      	cmp	r0, #0
 80275aa:	d062      	beq.n	8027672 <__gethex+0x13a>
 80275ac:	4633      	mov	r3, r6
 80275ae:	7818      	ldrb	r0, [r3, #0]
 80275b0:	2830      	cmp	r0, #48	; 0x30
 80275b2:	461f      	mov	r7, r3
 80275b4:	f103 0301 	add.w	r3, r3, #1
 80275b8:	d0f9      	beq.n	80275ae <__gethex+0x76>
 80275ba:	f7ff ffa7 	bl	802750c <__hexdig_fun>
 80275be:	2301      	movs	r3, #1
 80275c0:	fab0 f480 	clz	r4, r0
 80275c4:	0964      	lsrs	r4, r4, #5
 80275c6:	4635      	mov	r5, r6
 80275c8:	9300      	str	r3, [sp, #0]
 80275ca:	463a      	mov	r2, r7
 80275cc:	4616      	mov	r6, r2
 80275ce:	3201      	adds	r2, #1
 80275d0:	7830      	ldrb	r0, [r6, #0]
 80275d2:	f7ff ff9b 	bl	802750c <__hexdig_fun>
 80275d6:	2800      	cmp	r0, #0
 80275d8:	d1f8      	bne.n	80275cc <__gethex+0x94>
 80275da:	9901      	ldr	r1, [sp, #4]
 80275dc:	4652      	mov	r2, sl
 80275de:	4630      	mov	r0, r6
 80275e0:	f001 f904 	bl	80287ec <strncmp>
 80275e4:	b980      	cbnz	r0, 8027608 <__gethex+0xd0>
 80275e6:	b94d      	cbnz	r5, 80275fc <__gethex+0xc4>
 80275e8:	eb06 050a 	add.w	r5, r6, sl
 80275ec:	462a      	mov	r2, r5
 80275ee:	4616      	mov	r6, r2
 80275f0:	3201      	adds	r2, #1
 80275f2:	7830      	ldrb	r0, [r6, #0]
 80275f4:	f7ff ff8a 	bl	802750c <__hexdig_fun>
 80275f8:	2800      	cmp	r0, #0
 80275fa:	d1f8      	bne.n	80275ee <__gethex+0xb6>
 80275fc:	1bad      	subs	r5, r5, r6
 80275fe:	00ad      	lsls	r5, r5, #2
 8027600:	e004      	b.n	802760c <__gethex+0xd4>
 8027602:	2400      	movs	r4, #0
 8027604:	4625      	mov	r5, r4
 8027606:	e7e0      	b.n	80275ca <__gethex+0x92>
 8027608:	2d00      	cmp	r5, #0
 802760a:	d1f7      	bne.n	80275fc <__gethex+0xc4>
 802760c:	7833      	ldrb	r3, [r6, #0]
 802760e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8027612:	2b50      	cmp	r3, #80	; 0x50
 8027614:	d13b      	bne.n	802768e <__gethex+0x156>
 8027616:	7873      	ldrb	r3, [r6, #1]
 8027618:	2b2b      	cmp	r3, #43	; 0x2b
 802761a:	d02c      	beq.n	8027676 <__gethex+0x13e>
 802761c:	2b2d      	cmp	r3, #45	; 0x2d
 802761e:	d02e      	beq.n	802767e <__gethex+0x146>
 8027620:	1c71      	adds	r1, r6, #1
 8027622:	f04f 0900 	mov.w	r9, #0
 8027626:	7808      	ldrb	r0, [r1, #0]
 8027628:	f7ff ff70 	bl	802750c <__hexdig_fun>
 802762c:	1e43      	subs	r3, r0, #1
 802762e:	b2db      	uxtb	r3, r3
 8027630:	2b18      	cmp	r3, #24
 8027632:	d82c      	bhi.n	802768e <__gethex+0x156>
 8027634:	f1a0 0210 	sub.w	r2, r0, #16
 8027638:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 802763c:	f7ff ff66 	bl	802750c <__hexdig_fun>
 8027640:	1e43      	subs	r3, r0, #1
 8027642:	b2db      	uxtb	r3, r3
 8027644:	2b18      	cmp	r3, #24
 8027646:	d91d      	bls.n	8027684 <__gethex+0x14c>
 8027648:	f1b9 0f00 	cmp.w	r9, #0
 802764c:	d000      	beq.n	8027650 <__gethex+0x118>
 802764e:	4252      	negs	r2, r2
 8027650:	4415      	add	r5, r2
 8027652:	f8cb 1000 	str.w	r1, [fp]
 8027656:	b1e4      	cbz	r4, 8027692 <__gethex+0x15a>
 8027658:	9b00      	ldr	r3, [sp, #0]
 802765a:	2b00      	cmp	r3, #0
 802765c:	bf14      	ite	ne
 802765e:	2700      	movne	r7, #0
 8027660:	2706      	moveq	r7, #6
 8027662:	4638      	mov	r0, r7
 8027664:	b009      	add	sp, #36	; 0x24
 8027666:	ecbd 8b02 	vpop	{d8}
 802766a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802766e:	463e      	mov	r6, r7
 8027670:	4625      	mov	r5, r4
 8027672:	2401      	movs	r4, #1
 8027674:	e7ca      	b.n	802760c <__gethex+0xd4>
 8027676:	f04f 0900 	mov.w	r9, #0
 802767a:	1cb1      	adds	r1, r6, #2
 802767c:	e7d3      	b.n	8027626 <__gethex+0xee>
 802767e:	f04f 0901 	mov.w	r9, #1
 8027682:	e7fa      	b.n	802767a <__gethex+0x142>
 8027684:	230a      	movs	r3, #10
 8027686:	fb03 0202 	mla	r2, r3, r2, r0
 802768a:	3a10      	subs	r2, #16
 802768c:	e7d4      	b.n	8027638 <__gethex+0x100>
 802768e:	4631      	mov	r1, r6
 8027690:	e7df      	b.n	8027652 <__gethex+0x11a>
 8027692:	1bf3      	subs	r3, r6, r7
 8027694:	3b01      	subs	r3, #1
 8027696:	4621      	mov	r1, r4
 8027698:	2b07      	cmp	r3, #7
 802769a:	dc0b      	bgt.n	80276b4 <__gethex+0x17c>
 802769c:	ee18 0a10 	vmov	r0, s16
 80276a0:	f000 fa78 	bl	8027b94 <_Balloc>
 80276a4:	4604      	mov	r4, r0
 80276a6:	b940      	cbnz	r0, 80276ba <__gethex+0x182>
 80276a8:	4b65      	ldr	r3, [pc, #404]	; (8027840 <__gethex+0x308>)
 80276aa:	4602      	mov	r2, r0
 80276ac:	21de      	movs	r1, #222	; 0xde
 80276ae:	4865      	ldr	r0, [pc, #404]	; (8027844 <__gethex+0x30c>)
 80276b0:	f001 f8bc 	bl	802882c <__assert_func>
 80276b4:	3101      	adds	r1, #1
 80276b6:	105b      	asrs	r3, r3, #1
 80276b8:	e7ee      	b.n	8027698 <__gethex+0x160>
 80276ba:	f100 0914 	add.w	r9, r0, #20
 80276be:	f04f 0b00 	mov.w	fp, #0
 80276c2:	f1ca 0301 	rsb	r3, sl, #1
 80276c6:	f8cd 9008 	str.w	r9, [sp, #8]
 80276ca:	f8cd b000 	str.w	fp, [sp]
 80276ce:	9306      	str	r3, [sp, #24]
 80276d0:	42b7      	cmp	r7, r6
 80276d2:	d340      	bcc.n	8027756 <__gethex+0x21e>
 80276d4:	9802      	ldr	r0, [sp, #8]
 80276d6:	9b00      	ldr	r3, [sp, #0]
 80276d8:	f840 3b04 	str.w	r3, [r0], #4
 80276dc:	eba0 0009 	sub.w	r0, r0, r9
 80276e0:	1080      	asrs	r0, r0, #2
 80276e2:	0146      	lsls	r6, r0, #5
 80276e4:	6120      	str	r0, [r4, #16]
 80276e6:	4618      	mov	r0, r3
 80276e8:	f000 fb4a 	bl	8027d80 <__hi0bits>
 80276ec:	1a30      	subs	r0, r6, r0
 80276ee:	f8d8 6000 	ldr.w	r6, [r8]
 80276f2:	42b0      	cmp	r0, r6
 80276f4:	dd63      	ble.n	80277be <__gethex+0x286>
 80276f6:	1b87      	subs	r7, r0, r6
 80276f8:	4639      	mov	r1, r7
 80276fa:	4620      	mov	r0, r4
 80276fc:	f000 fee4 	bl	80284c8 <__any_on>
 8027700:	4682      	mov	sl, r0
 8027702:	b1a8      	cbz	r0, 8027730 <__gethex+0x1f8>
 8027704:	1e7b      	subs	r3, r7, #1
 8027706:	1159      	asrs	r1, r3, #5
 8027708:	f003 021f 	and.w	r2, r3, #31
 802770c:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8027710:	f04f 0a01 	mov.w	sl, #1
 8027714:	fa0a f202 	lsl.w	r2, sl, r2
 8027718:	420a      	tst	r2, r1
 802771a:	d009      	beq.n	8027730 <__gethex+0x1f8>
 802771c:	4553      	cmp	r3, sl
 802771e:	dd05      	ble.n	802772c <__gethex+0x1f4>
 8027720:	1eb9      	subs	r1, r7, #2
 8027722:	4620      	mov	r0, r4
 8027724:	f000 fed0 	bl	80284c8 <__any_on>
 8027728:	2800      	cmp	r0, #0
 802772a:	d145      	bne.n	80277b8 <__gethex+0x280>
 802772c:	f04f 0a02 	mov.w	sl, #2
 8027730:	4639      	mov	r1, r7
 8027732:	4620      	mov	r0, r4
 8027734:	f7ff fe98 	bl	8027468 <rshift>
 8027738:	443d      	add	r5, r7
 802773a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802773e:	42ab      	cmp	r3, r5
 8027740:	da4c      	bge.n	80277dc <__gethex+0x2a4>
 8027742:	ee18 0a10 	vmov	r0, s16
 8027746:	4621      	mov	r1, r4
 8027748:	f000 fa64 	bl	8027c14 <_Bfree>
 802774c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802774e:	2300      	movs	r3, #0
 8027750:	6013      	str	r3, [r2, #0]
 8027752:	27a3      	movs	r7, #163	; 0xa3
 8027754:	e785      	b.n	8027662 <__gethex+0x12a>
 8027756:	1e73      	subs	r3, r6, #1
 8027758:	9a05      	ldr	r2, [sp, #20]
 802775a:	9303      	str	r3, [sp, #12]
 802775c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8027760:	4293      	cmp	r3, r2
 8027762:	d019      	beq.n	8027798 <__gethex+0x260>
 8027764:	f1bb 0f20 	cmp.w	fp, #32
 8027768:	d107      	bne.n	802777a <__gethex+0x242>
 802776a:	9b02      	ldr	r3, [sp, #8]
 802776c:	9a00      	ldr	r2, [sp, #0]
 802776e:	f843 2b04 	str.w	r2, [r3], #4
 8027772:	9302      	str	r3, [sp, #8]
 8027774:	2300      	movs	r3, #0
 8027776:	9300      	str	r3, [sp, #0]
 8027778:	469b      	mov	fp, r3
 802777a:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 802777e:	f7ff fec5 	bl	802750c <__hexdig_fun>
 8027782:	9b00      	ldr	r3, [sp, #0]
 8027784:	f000 000f 	and.w	r0, r0, #15
 8027788:	fa00 f00b 	lsl.w	r0, r0, fp
 802778c:	4303      	orrs	r3, r0
 802778e:	9300      	str	r3, [sp, #0]
 8027790:	f10b 0b04 	add.w	fp, fp, #4
 8027794:	9b03      	ldr	r3, [sp, #12]
 8027796:	e00d      	b.n	80277b4 <__gethex+0x27c>
 8027798:	9b03      	ldr	r3, [sp, #12]
 802779a:	9a06      	ldr	r2, [sp, #24]
 802779c:	4413      	add	r3, r2
 802779e:	42bb      	cmp	r3, r7
 80277a0:	d3e0      	bcc.n	8027764 <__gethex+0x22c>
 80277a2:	4618      	mov	r0, r3
 80277a4:	9901      	ldr	r1, [sp, #4]
 80277a6:	9307      	str	r3, [sp, #28]
 80277a8:	4652      	mov	r2, sl
 80277aa:	f001 f81f 	bl	80287ec <strncmp>
 80277ae:	9b07      	ldr	r3, [sp, #28]
 80277b0:	2800      	cmp	r0, #0
 80277b2:	d1d7      	bne.n	8027764 <__gethex+0x22c>
 80277b4:	461e      	mov	r6, r3
 80277b6:	e78b      	b.n	80276d0 <__gethex+0x198>
 80277b8:	f04f 0a03 	mov.w	sl, #3
 80277bc:	e7b8      	b.n	8027730 <__gethex+0x1f8>
 80277be:	da0a      	bge.n	80277d6 <__gethex+0x29e>
 80277c0:	1a37      	subs	r7, r6, r0
 80277c2:	4621      	mov	r1, r4
 80277c4:	ee18 0a10 	vmov	r0, s16
 80277c8:	463a      	mov	r2, r7
 80277ca:	f000 fc3f 	bl	802804c <__lshift>
 80277ce:	1bed      	subs	r5, r5, r7
 80277d0:	4604      	mov	r4, r0
 80277d2:	f100 0914 	add.w	r9, r0, #20
 80277d6:	f04f 0a00 	mov.w	sl, #0
 80277da:	e7ae      	b.n	802773a <__gethex+0x202>
 80277dc:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80277e0:	42a8      	cmp	r0, r5
 80277e2:	dd72      	ble.n	80278ca <__gethex+0x392>
 80277e4:	1b45      	subs	r5, r0, r5
 80277e6:	42ae      	cmp	r6, r5
 80277e8:	dc36      	bgt.n	8027858 <__gethex+0x320>
 80277ea:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80277ee:	2b02      	cmp	r3, #2
 80277f0:	d02a      	beq.n	8027848 <__gethex+0x310>
 80277f2:	2b03      	cmp	r3, #3
 80277f4:	d02c      	beq.n	8027850 <__gethex+0x318>
 80277f6:	2b01      	cmp	r3, #1
 80277f8:	d115      	bne.n	8027826 <__gethex+0x2ee>
 80277fa:	42ae      	cmp	r6, r5
 80277fc:	d113      	bne.n	8027826 <__gethex+0x2ee>
 80277fe:	2e01      	cmp	r6, #1
 8027800:	d10b      	bne.n	802781a <__gethex+0x2e2>
 8027802:	9a04      	ldr	r2, [sp, #16]
 8027804:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8027808:	6013      	str	r3, [r2, #0]
 802780a:	2301      	movs	r3, #1
 802780c:	6123      	str	r3, [r4, #16]
 802780e:	f8c9 3000 	str.w	r3, [r9]
 8027812:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8027814:	2762      	movs	r7, #98	; 0x62
 8027816:	601c      	str	r4, [r3, #0]
 8027818:	e723      	b.n	8027662 <__gethex+0x12a>
 802781a:	1e71      	subs	r1, r6, #1
 802781c:	4620      	mov	r0, r4
 802781e:	f000 fe53 	bl	80284c8 <__any_on>
 8027822:	2800      	cmp	r0, #0
 8027824:	d1ed      	bne.n	8027802 <__gethex+0x2ca>
 8027826:	ee18 0a10 	vmov	r0, s16
 802782a:	4621      	mov	r1, r4
 802782c:	f000 f9f2 	bl	8027c14 <_Bfree>
 8027830:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8027832:	2300      	movs	r3, #0
 8027834:	6013      	str	r3, [r2, #0]
 8027836:	2750      	movs	r7, #80	; 0x50
 8027838:	e713      	b.n	8027662 <__gethex+0x12a>
 802783a:	bf00      	nop
 802783c:	0802a46c 	.word	0x0802a46c
 8027840:	0802a3f1 	.word	0x0802a3f1
 8027844:	0802a402 	.word	0x0802a402
 8027848:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802784a:	2b00      	cmp	r3, #0
 802784c:	d1eb      	bne.n	8027826 <__gethex+0x2ee>
 802784e:	e7d8      	b.n	8027802 <__gethex+0x2ca>
 8027850:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8027852:	2b00      	cmp	r3, #0
 8027854:	d1d5      	bne.n	8027802 <__gethex+0x2ca>
 8027856:	e7e6      	b.n	8027826 <__gethex+0x2ee>
 8027858:	1e6f      	subs	r7, r5, #1
 802785a:	f1ba 0f00 	cmp.w	sl, #0
 802785e:	d131      	bne.n	80278c4 <__gethex+0x38c>
 8027860:	b127      	cbz	r7, 802786c <__gethex+0x334>
 8027862:	4639      	mov	r1, r7
 8027864:	4620      	mov	r0, r4
 8027866:	f000 fe2f 	bl	80284c8 <__any_on>
 802786a:	4682      	mov	sl, r0
 802786c:	117b      	asrs	r3, r7, #5
 802786e:	2101      	movs	r1, #1
 8027870:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8027874:	f007 071f 	and.w	r7, r7, #31
 8027878:	fa01 f707 	lsl.w	r7, r1, r7
 802787c:	421f      	tst	r7, r3
 802787e:	4629      	mov	r1, r5
 8027880:	4620      	mov	r0, r4
 8027882:	bf18      	it	ne
 8027884:	f04a 0a02 	orrne.w	sl, sl, #2
 8027888:	1b76      	subs	r6, r6, r5
 802788a:	f7ff fded 	bl	8027468 <rshift>
 802788e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027892:	2702      	movs	r7, #2
 8027894:	f1ba 0f00 	cmp.w	sl, #0
 8027898:	d048      	beq.n	802792c <__gethex+0x3f4>
 802789a:	f8d8 300c 	ldr.w	r3, [r8, #12]
 802789e:	2b02      	cmp	r3, #2
 80278a0:	d015      	beq.n	80278ce <__gethex+0x396>
 80278a2:	2b03      	cmp	r3, #3
 80278a4:	d017      	beq.n	80278d6 <__gethex+0x39e>
 80278a6:	2b01      	cmp	r3, #1
 80278a8:	d109      	bne.n	80278be <__gethex+0x386>
 80278aa:	f01a 0f02 	tst.w	sl, #2
 80278ae:	d006      	beq.n	80278be <__gethex+0x386>
 80278b0:	f8d9 0000 	ldr.w	r0, [r9]
 80278b4:	ea4a 0a00 	orr.w	sl, sl, r0
 80278b8:	f01a 0f01 	tst.w	sl, #1
 80278bc:	d10e      	bne.n	80278dc <__gethex+0x3a4>
 80278be:	f047 0710 	orr.w	r7, r7, #16
 80278c2:	e033      	b.n	802792c <__gethex+0x3f4>
 80278c4:	f04f 0a01 	mov.w	sl, #1
 80278c8:	e7d0      	b.n	802786c <__gethex+0x334>
 80278ca:	2701      	movs	r7, #1
 80278cc:	e7e2      	b.n	8027894 <__gethex+0x35c>
 80278ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80278d0:	f1c3 0301 	rsb	r3, r3, #1
 80278d4:	9315      	str	r3, [sp, #84]	; 0x54
 80278d6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80278d8:	2b00      	cmp	r3, #0
 80278da:	d0f0      	beq.n	80278be <__gethex+0x386>
 80278dc:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80278e0:	f104 0314 	add.w	r3, r4, #20
 80278e4:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80278e8:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80278ec:	f04f 0c00 	mov.w	ip, #0
 80278f0:	4618      	mov	r0, r3
 80278f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80278f6:	f1b2 3fff 	cmp.w	r2, #4294967295
 80278fa:	d01c      	beq.n	8027936 <__gethex+0x3fe>
 80278fc:	3201      	adds	r2, #1
 80278fe:	6002      	str	r2, [r0, #0]
 8027900:	2f02      	cmp	r7, #2
 8027902:	f104 0314 	add.w	r3, r4, #20
 8027906:	d13f      	bne.n	8027988 <__gethex+0x450>
 8027908:	f8d8 2000 	ldr.w	r2, [r8]
 802790c:	3a01      	subs	r2, #1
 802790e:	42b2      	cmp	r2, r6
 8027910:	d10a      	bne.n	8027928 <__gethex+0x3f0>
 8027912:	1171      	asrs	r1, r6, #5
 8027914:	2201      	movs	r2, #1
 8027916:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 802791a:	f006 061f 	and.w	r6, r6, #31
 802791e:	fa02 f606 	lsl.w	r6, r2, r6
 8027922:	421e      	tst	r6, r3
 8027924:	bf18      	it	ne
 8027926:	4617      	movne	r7, r2
 8027928:	f047 0720 	orr.w	r7, r7, #32
 802792c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802792e:	601c      	str	r4, [r3, #0]
 8027930:	9b04      	ldr	r3, [sp, #16]
 8027932:	601d      	str	r5, [r3, #0]
 8027934:	e695      	b.n	8027662 <__gethex+0x12a>
 8027936:	4299      	cmp	r1, r3
 8027938:	f843 cc04 	str.w	ip, [r3, #-4]
 802793c:	d8d8      	bhi.n	80278f0 <__gethex+0x3b8>
 802793e:	68a3      	ldr	r3, [r4, #8]
 8027940:	459b      	cmp	fp, r3
 8027942:	db19      	blt.n	8027978 <__gethex+0x440>
 8027944:	6861      	ldr	r1, [r4, #4]
 8027946:	ee18 0a10 	vmov	r0, s16
 802794a:	3101      	adds	r1, #1
 802794c:	f000 f922 	bl	8027b94 <_Balloc>
 8027950:	4681      	mov	r9, r0
 8027952:	b918      	cbnz	r0, 802795c <__gethex+0x424>
 8027954:	4b1a      	ldr	r3, [pc, #104]	; (80279c0 <__gethex+0x488>)
 8027956:	4602      	mov	r2, r0
 8027958:	2184      	movs	r1, #132	; 0x84
 802795a:	e6a8      	b.n	80276ae <__gethex+0x176>
 802795c:	6922      	ldr	r2, [r4, #16]
 802795e:	3202      	adds	r2, #2
 8027960:	f104 010c 	add.w	r1, r4, #12
 8027964:	0092      	lsls	r2, r2, #2
 8027966:	300c      	adds	r0, #12
 8027968:	f7fd f960 	bl	8024c2c <memcpy>
 802796c:	4621      	mov	r1, r4
 802796e:	ee18 0a10 	vmov	r0, s16
 8027972:	f000 f94f 	bl	8027c14 <_Bfree>
 8027976:	464c      	mov	r4, r9
 8027978:	6923      	ldr	r3, [r4, #16]
 802797a:	1c5a      	adds	r2, r3, #1
 802797c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8027980:	6122      	str	r2, [r4, #16]
 8027982:	2201      	movs	r2, #1
 8027984:	615a      	str	r2, [r3, #20]
 8027986:	e7bb      	b.n	8027900 <__gethex+0x3c8>
 8027988:	6922      	ldr	r2, [r4, #16]
 802798a:	455a      	cmp	r2, fp
 802798c:	dd0b      	ble.n	80279a6 <__gethex+0x46e>
 802798e:	2101      	movs	r1, #1
 8027990:	4620      	mov	r0, r4
 8027992:	f7ff fd69 	bl	8027468 <rshift>
 8027996:	f8d8 3008 	ldr.w	r3, [r8, #8]
 802799a:	3501      	adds	r5, #1
 802799c:	42ab      	cmp	r3, r5
 802799e:	f6ff aed0 	blt.w	8027742 <__gethex+0x20a>
 80279a2:	2701      	movs	r7, #1
 80279a4:	e7c0      	b.n	8027928 <__gethex+0x3f0>
 80279a6:	f016 061f 	ands.w	r6, r6, #31
 80279aa:	d0fa      	beq.n	80279a2 <__gethex+0x46a>
 80279ac:	449a      	add	sl, r3
 80279ae:	f1c6 0620 	rsb	r6, r6, #32
 80279b2:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 80279b6:	f000 f9e3 	bl	8027d80 <__hi0bits>
 80279ba:	42b0      	cmp	r0, r6
 80279bc:	dbe7      	blt.n	802798e <__gethex+0x456>
 80279be:	e7f0      	b.n	80279a2 <__gethex+0x46a>
 80279c0:	0802a3f1 	.word	0x0802a3f1

080279c4 <L_shift>:
 80279c4:	f1c2 0208 	rsb	r2, r2, #8
 80279c8:	0092      	lsls	r2, r2, #2
 80279ca:	b570      	push	{r4, r5, r6, lr}
 80279cc:	f1c2 0620 	rsb	r6, r2, #32
 80279d0:	6843      	ldr	r3, [r0, #4]
 80279d2:	6804      	ldr	r4, [r0, #0]
 80279d4:	fa03 f506 	lsl.w	r5, r3, r6
 80279d8:	432c      	orrs	r4, r5
 80279da:	40d3      	lsrs	r3, r2
 80279dc:	6004      	str	r4, [r0, #0]
 80279de:	f840 3f04 	str.w	r3, [r0, #4]!
 80279e2:	4288      	cmp	r0, r1
 80279e4:	d3f4      	bcc.n	80279d0 <L_shift+0xc>
 80279e6:	bd70      	pop	{r4, r5, r6, pc}

080279e8 <__match>:
 80279e8:	b530      	push	{r4, r5, lr}
 80279ea:	6803      	ldr	r3, [r0, #0]
 80279ec:	3301      	adds	r3, #1
 80279ee:	f811 4b01 	ldrb.w	r4, [r1], #1
 80279f2:	b914      	cbnz	r4, 80279fa <__match+0x12>
 80279f4:	6003      	str	r3, [r0, #0]
 80279f6:	2001      	movs	r0, #1
 80279f8:	bd30      	pop	{r4, r5, pc}
 80279fa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80279fe:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8027a02:	2d19      	cmp	r5, #25
 8027a04:	bf98      	it	ls
 8027a06:	3220      	addls	r2, #32
 8027a08:	42a2      	cmp	r2, r4
 8027a0a:	d0f0      	beq.n	80279ee <__match+0x6>
 8027a0c:	2000      	movs	r0, #0
 8027a0e:	e7f3      	b.n	80279f8 <__match+0x10>

08027a10 <__hexnan>:
 8027a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a14:	680b      	ldr	r3, [r1, #0]
 8027a16:	6801      	ldr	r1, [r0, #0]
 8027a18:	115e      	asrs	r6, r3, #5
 8027a1a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8027a1e:	f013 031f 	ands.w	r3, r3, #31
 8027a22:	b087      	sub	sp, #28
 8027a24:	bf18      	it	ne
 8027a26:	3604      	addne	r6, #4
 8027a28:	2500      	movs	r5, #0
 8027a2a:	1f37      	subs	r7, r6, #4
 8027a2c:	4682      	mov	sl, r0
 8027a2e:	4690      	mov	r8, r2
 8027a30:	9301      	str	r3, [sp, #4]
 8027a32:	f846 5c04 	str.w	r5, [r6, #-4]
 8027a36:	46b9      	mov	r9, r7
 8027a38:	463c      	mov	r4, r7
 8027a3a:	9502      	str	r5, [sp, #8]
 8027a3c:	46ab      	mov	fp, r5
 8027a3e:	784a      	ldrb	r2, [r1, #1]
 8027a40:	1c4b      	adds	r3, r1, #1
 8027a42:	9303      	str	r3, [sp, #12]
 8027a44:	b342      	cbz	r2, 8027a98 <__hexnan+0x88>
 8027a46:	4610      	mov	r0, r2
 8027a48:	9105      	str	r1, [sp, #20]
 8027a4a:	9204      	str	r2, [sp, #16]
 8027a4c:	f7ff fd5e 	bl	802750c <__hexdig_fun>
 8027a50:	2800      	cmp	r0, #0
 8027a52:	d14f      	bne.n	8027af4 <__hexnan+0xe4>
 8027a54:	9a04      	ldr	r2, [sp, #16]
 8027a56:	9905      	ldr	r1, [sp, #20]
 8027a58:	2a20      	cmp	r2, #32
 8027a5a:	d818      	bhi.n	8027a8e <__hexnan+0x7e>
 8027a5c:	9b02      	ldr	r3, [sp, #8]
 8027a5e:	459b      	cmp	fp, r3
 8027a60:	dd13      	ble.n	8027a8a <__hexnan+0x7a>
 8027a62:	454c      	cmp	r4, r9
 8027a64:	d206      	bcs.n	8027a74 <__hexnan+0x64>
 8027a66:	2d07      	cmp	r5, #7
 8027a68:	dc04      	bgt.n	8027a74 <__hexnan+0x64>
 8027a6a:	462a      	mov	r2, r5
 8027a6c:	4649      	mov	r1, r9
 8027a6e:	4620      	mov	r0, r4
 8027a70:	f7ff ffa8 	bl	80279c4 <L_shift>
 8027a74:	4544      	cmp	r4, r8
 8027a76:	d950      	bls.n	8027b1a <__hexnan+0x10a>
 8027a78:	2300      	movs	r3, #0
 8027a7a:	f1a4 0904 	sub.w	r9, r4, #4
 8027a7e:	f844 3c04 	str.w	r3, [r4, #-4]
 8027a82:	f8cd b008 	str.w	fp, [sp, #8]
 8027a86:	464c      	mov	r4, r9
 8027a88:	461d      	mov	r5, r3
 8027a8a:	9903      	ldr	r1, [sp, #12]
 8027a8c:	e7d7      	b.n	8027a3e <__hexnan+0x2e>
 8027a8e:	2a29      	cmp	r2, #41	; 0x29
 8027a90:	d156      	bne.n	8027b40 <__hexnan+0x130>
 8027a92:	3102      	adds	r1, #2
 8027a94:	f8ca 1000 	str.w	r1, [sl]
 8027a98:	f1bb 0f00 	cmp.w	fp, #0
 8027a9c:	d050      	beq.n	8027b40 <__hexnan+0x130>
 8027a9e:	454c      	cmp	r4, r9
 8027aa0:	d206      	bcs.n	8027ab0 <__hexnan+0xa0>
 8027aa2:	2d07      	cmp	r5, #7
 8027aa4:	dc04      	bgt.n	8027ab0 <__hexnan+0xa0>
 8027aa6:	462a      	mov	r2, r5
 8027aa8:	4649      	mov	r1, r9
 8027aaa:	4620      	mov	r0, r4
 8027aac:	f7ff ff8a 	bl	80279c4 <L_shift>
 8027ab0:	4544      	cmp	r4, r8
 8027ab2:	d934      	bls.n	8027b1e <__hexnan+0x10e>
 8027ab4:	f1a8 0204 	sub.w	r2, r8, #4
 8027ab8:	4623      	mov	r3, r4
 8027aba:	f853 1b04 	ldr.w	r1, [r3], #4
 8027abe:	f842 1f04 	str.w	r1, [r2, #4]!
 8027ac2:	429f      	cmp	r7, r3
 8027ac4:	d2f9      	bcs.n	8027aba <__hexnan+0xaa>
 8027ac6:	1b3b      	subs	r3, r7, r4
 8027ac8:	f023 0303 	bic.w	r3, r3, #3
 8027acc:	3304      	adds	r3, #4
 8027ace:	3401      	adds	r4, #1
 8027ad0:	3e03      	subs	r6, #3
 8027ad2:	42b4      	cmp	r4, r6
 8027ad4:	bf88      	it	hi
 8027ad6:	2304      	movhi	r3, #4
 8027ad8:	4443      	add	r3, r8
 8027ada:	2200      	movs	r2, #0
 8027adc:	f843 2b04 	str.w	r2, [r3], #4
 8027ae0:	429f      	cmp	r7, r3
 8027ae2:	d2fb      	bcs.n	8027adc <__hexnan+0xcc>
 8027ae4:	683b      	ldr	r3, [r7, #0]
 8027ae6:	b91b      	cbnz	r3, 8027af0 <__hexnan+0xe0>
 8027ae8:	4547      	cmp	r7, r8
 8027aea:	d127      	bne.n	8027b3c <__hexnan+0x12c>
 8027aec:	2301      	movs	r3, #1
 8027aee:	603b      	str	r3, [r7, #0]
 8027af0:	2005      	movs	r0, #5
 8027af2:	e026      	b.n	8027b42 <__hexnan+0x132>
 8027af4:	3501      	adds	r5, #1
 8027af6:	2d08      	cmp	r5, #8
 8027af8:	f10b 0b01 	add.w	fp, fp, #1
 8027afc:	dd06      	ble.n	8027b0c <__hexnan+0xfc>
 8027afe:	4544      	cmp	r4, r8
 8027b00:	d9c3      	bls.n	8027a8a <__hexnan+0x7a>
 8027b02:	2300      	movs	r3, #0
 8027b04:	f844 3c04 	str.w	r3, [r4, #-4]
 8027b08:	2501      	movs	r5, #1
 8027b0a:	3c04      	subs	r4, #4
 8027b0c:	6822      	ldr	r2, [r4, #0]
 8027b0e:	f000 000f 	and.w	r0, r0, #15
 8027b12:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8027b16:	6022      	str	r2, [r4, #0]
 8027b18:	e7b7      	b.n	8027a8a <__hexnan+0x7a>
 8027b1a:	2508      	movs	r5, #8
 8027b1c:	e7b5      	b.n	8027a8a <__hexnan+0x7a>
 8027b1e:	9b01      	ldr	r3, [sp, #4]
 8027b20:	2b00      	cmp	r3, #0
 8027b22:	d0df      	beq.n	8027ae4 <__hexnan+0xd4>
 8027b24:	f04f 32ff 	mov.w	r2, #4294967295
 8027b28:	f1c3 0320 	rsb	r3, r3, #32
 8027b2c:	fa22 f303 	lsr.w	r3, r2, r3
 8027b30:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8027b34:	401a      	ands	r2, r3
 8027b36:	f846 2c04 	str.w	r2, [r6, #-4]
 8027b3a:	e7d3      	b.n	8027ae4 <__hexnan+0xd4>
 8027b3c:	3f04      	subs	r7, #4
 8027b3e:	e7d1      	b.n	8027ae4 <__hexnan+0xd4>
 8027b40:	2004      	movs	r0, #4
 8027b42:	b007      	add	sp, #28
 8027b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027b48 <_localeconv_r>:
 8027b48:	4800      	ldr	r0, [pc, #0]	; (8027b4c <_localeconv_r+0x4>)
 8027b4a:	4770      	bx	lr
 8027b4c:	2000016c 	.word	0x2000016c

08027b50 <__retarget_lock_init_recursive>:
 8027b50:	4770      	bx	lr

08027b52 <__retarget_lock_acquire_recursive>:
 8027b52:	4770      	bx	lr

08027b54 <__retarget_lock_release>:
 8027b54:	4770      	bx	lr

08027b56 <__retarget_lock_release_recursive>:
 8027b56:	4770      	bx	lr

08027b58 <__ascii_mbtowc>:
 8027b58:	b082      	sub	sp, #8
 8027b5a:	b901      	cbnz	r1, 8027b5e <__ascii_mbtowc+0x6>
 8027b5c:	a901      	add	r1, sp, #4
 8027b5e:	b142      	cbz	r2, 8027b72 <__ascii_mbtowc+0x1a>
 8027b60:	b14b      	cbz	r3, 8027b76 <__ascii_mbtowc+0x1e>
 8027b62:	7813      	ldrb	r3, [r2, #0]
 8027b64:	600b      	str	r3, [r1, #0]
 8027b66:	7812      	ldrb	r2, [r2, #0]
 8027b68:	1e10      	subs	r0, r2, #0
 8027b6a:	bf18      	it	ne
 8027b6c:	2001      	movne	r0, #1
 8027b6e:	b002      	add	sp, #8
 8027b70:	4770      	bx	lr
 8027b72:	4610      	mov	r0, r2
 8027b74:	e7fb      	b.n	8027b6e <__ascii_mbtowc+0x16>
 8027b76:	f06f 0001 	mvn.w	r0, #1
 8027b7a:	e7f8      	b.n	8027b6e <__ascii_mbtowc+0x16>

08027b7c <__malloc_lock>:
 8027b7c:	4801      	ldr	r0, [pc, #4]	; (8027b84 <__malloc_lock+0x8>)
 8027b7e:	f7ff bfe8 	b.w	8027b52 <__retarget_lock_acquire_recursive>
 8027b82:	bf00      	nop
 8027b84:	200008dc 	.word	0x200008dc

08027b88 <__malloc_unlock>:
 8027b88:	4801      	ldr	r0, [pc, #4]	; (8027b90 <__malloc_unlock+0x8>)
 8027b8a:	f7ff bfe4 	b.w	8027b56 <__retarget_lock_release_recursive>
 8027b8e:	bf00      	nop
 8027b90:	200008dc 	.word	0x200008dc

08027b94 <_Balloc>:
 8027b94:	b570      	push	{r4, r5, r6, lr}
 8027b96:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8027b98:	4604      	mov	r4, r0
 8027b9a:	460d      	mov	r5, r1
 8027b9c:	b976      	cbnz	r6, 8027bbc <_Balloc+0x28>
 8027b9e:	2010      	movs	r0, #16
 8027ba0:	f7fd f826 	bl	8024bf0 <malloc>
 8027ba4:	4602      	mov	r2, r0
 8027ba6:	6260      	str	r0, [r4, #36]	; 0x24
 8027ba8:	b920      	cbnz	r0, 8027bb4 <_Balloc+0x20>
 8027baa:	4b18      	ldr	r3, [pc, #96]	; (8027c0c <_Balloc+0x78>)
 8027bac:	4818      	ldr	r0, [pc, #96]	; (8027c10 <_Balloc+0x7c>)
 8027bae:	2166      	movs	r1, #102	; 0x66
 8027bb0:	f000 fe3c 	bl	802882c <__assert_func>
 8027bb4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8027bb8:	6006      	str	r6, [r0, #0]
 8027bba:	60c6      	str	r6, [r0, #12]
 8027bbc:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8027bbe:	68f3      	ldr	r3, [r6, #12]
 8027bc0:	b183      	cbz	r3, 8027be4 <_Balloc+0x50>
 8027bc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8027bc4:	68db      	ldr	r3, [r3, #12]
 8027bc6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8027bca:	b9b8      	cbnz	r0, 8027bfc <_Balloc+0x68>
 8027bcc:	2101      	movs	r1, #1
 8027bce:	fa01 f605 	lsl.w	r6, r1, r5
 8027bd2:	1d72      	adds	r2, r6, #5
 8027bd4:	0092      	lsls	r2, r2, #2
 8027bd6:	4620      	mov	r0, r4
 8027bd8:	f000 fc97 	bl	802850a <_calloc_r>
 8027bdc:	b160      	cbz	r0, 8027bf8 <_Balloc+0x64>
 8027bde:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8027be2:	e00e      	b.n	8027c02 <_Balloc+0x6e>
 8027be4:	2221      	movs	r2, #33	; 0x21
 8027be6:	2104      	movs	r1, #4
 8027be8:	4620      	mov	r0, r4
 8027bea:	f000 fc8e 	bl	802850a <_calloc_r>
 8027bee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8027bf0:	60f0      	str	r0, [r6, #12]
 8027bf2:	68db      	ldr	r3, [r3, #12]
 8027bf4:	2b00      	cmp	r3, #0
 8027bf6:	d1e4      	bne.n	8027bc2 <_Balloc+0x2e>
 8027bf8:	2000      	movs	r0, #0
 8027bfa:	bd70      	pop	{r4, r5, r6, pc}
 8027bfc:	6802      	ldr	r2, [r0, #0]
 8027bfe:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8027c02:	2300      	movs	r3, #0
 8027c04:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8027c08:	e7f7      	b.n	8027bfa <_Balloc+0x66>
 8027c0a:	bf00      	nop
 8027c0c:	0802a37b 	.word	0x0802a37b
 8027c10:	0802a480 	.word	0x0802a480

08027c14 <_Bfree>:
 8027c14:	b570      	push	{r4, r5, r6, lr}
 8027c16:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8027c18:	4605      	mov	r5, r0
 8027c1a:	460c      	mov	r4, r1
 8027c1c:	b976      	cbnz	r6, 8027c3c <_Bfree+0x28>
 8027c1e:	2010      	movs	r0, #16
 8027c20:	f7fc ffe6 	bl	8024bf0 <malloc>
 8027c24:	4602      	mov	r2, r0
 8027c26:	6268      	str	r0, [r5, #36]	; 0x24
 8027c28:	b920      	cbnz	r0, 8027c34 <_Bfree+0x20>
 8027c2a:	4b09      	ldr	r3, [pc, #36]	; (8027c50 <_Bfree+0x3c>)
 8027c2c:	4809      	ldr	r0, [pc, #36]	; (8027c54 <_Bfree+0x40>)
 8027c2e:	218a      	movs	r1, #138	; 0x8a
 8027c30:	f000 fdfc 	bl	802882c <__assert_func>
 8027c34:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8027c38:	6006      	str	r6, [r0, #0]
 8027c3a:	60c6      	str	r6, [r0, #12]
 8027c3c:	b13c      	cbz	r4, 8027c4e <_Bfree+0x3a>
 8027c3e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8027c40:	6862      	ldr	r2, [r4, #4]
 8027c42:	68db      	ldr	r3, [r3, #12]
 8027c44:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8027c48:	6021      	str	r1, [r4, #0]
 8027c4a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8027c4e:	bd70      	pop	{r4, r5, r6, pc}
 8027c50:	0802a37b 	.word	0x0802a37b
 8027c54:	0802a480 	.word	0x0802a480

08027c58 <__multadd>:
 8027c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027c5c:	690e      	ldr	r6, [r1, #16]
 8027c5e:	4607      	mov	r7, r0
 8027c60:	4698      	mov	r8, r3
 8027c62:	460c      	mov	r4, r1
 8027c64:	f101 0014 	add.w	r0, r1, #20
 8027c68:	2300      	movs	r3, #0
 8027c6a:	6805      	ldr	r5, [r0, #0]
 8027c6c:	b2a9      	uxth	r1, r5
 8027c6e:	fb02 8101 	mla	r1, r2, r1, r8
 8027c72:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8027c76:	0c2d      	lsrs	r5, r5, #16
 8027c78:	fb02 c505 	mla	r5, r2, r5, ip
 8027c7c:	b289      	uxth	r1, r1
 8027c7e:	3301      	adds	r3, #1
 8027c80:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8027c84:	429e      	cmp	r6, r3
 8027c86:	f840 1b04 	str.w	r1, [r0], #4
 8027c8a:	ea4f 4815 	mov.w	r8, r5, lsr #16
 8027c8e:	dcec      	bgt.n	8027c6a <__multadd+0x12>
 8027c90:	f1b8 0f00 	cmp.w	r8, #0
 8027c94:	d022      	beq.n	8027cdc <__multadd+0x84>
 8027c96:	68a3      	ldr	r3, [r4, #8]
 8027c98:	42b3      	cmp	r3, r6
 8027c9a:	dc19      	bgt.n	8027cd0 <__multadd+0x78>
 8027c9c:	6861      	ldr	r1, [r4, #4]
 8027c9e:	4638      	mov	r0, r7
 8027ca0:	3101      	adds	r1, #1
 8027ca2:	f7ff ff77 	bl	8027b94 <_Balloc>
 8027ca6:	4605      	mov	r5, r0
 8027ca8:	b928      	cbnz	r0, 8027cb6 <__multadd+0x5e>
 8027caa:	4602      	mov	r2, r0
 8027cac:	4b0d      	ldr	r3, [pc, #52]	; (8027ce4 <__multadd+0x8c>)
 8027cae:	480e      	ldr	r0, [pc, #56]	; (8027ce8 <__multadd+0x90>)
 8027cb0:	21b5      	movs	r1, #181	; 0xb5
 8027cb2:	f000 fdbb 	bl	802882c <__assert_func>
 8027cb6:	6922      	ldr	r2, [r4, #16]
 8027cb8:	3202      	adds	r2, #2
 8027cba:	f104 010c 	add.w	r1, r4, #12
 8027cbe:	0092      	lsls	r2, r2, #2
 8027cc0:	300c      	adds	r0, #12
 8027cc2:	f7fc ffb3 	bl	8024c2c <memcpy>
 8027cc6:	4621      	mov	r1, r4
 8027cc8:	4638      	mov	r0, r7
 8027cca:	f7ff ffa3 	bl	8027c14 <_Bfree>
 8027cce:	462c      	mov	r4, r5
 8027cd0:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8027cd4:	3601      	adds	r6, #1
 8027cd6:	f8c3 8014 	str.w	r8, [r3, #20]
 8027cda:	6126      	str	r6, [r4, #16]
 8027cdc:	4620      	mov	r0, r4
 8027cde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027ce2:	bf00      	nop
 8027ce4:	0802a3f1 	.word	0x0802a3f1
 8027ce8:	0802a480 	.word	0x0802a480

08027cec <__s2b>:
 8027cec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027cf0:	460c      	mov	r4, r1
 8027cf2:	4615      	mov	r5, r2
 8027cf4:	461f      	mov	r7, r3
 8027cf6:	2209      	movs	r2, #9
 8027cf8:	3308      	adds	r3, #8
 8027cfa:	4606      	mov	r6, r0
 8027cfc:	fb93 f3f2 	sdiv	r3, r3, r2
 8027d00:	2100      	movs	r1, #0
 8027d02:	2201      	movs	r2, #1
 8027d04:	429a      	cmp	r2, r3
 8027d06:	db09      	blt.n	8027d1c <__s2b+0x30>
 8027d08:	4630      	mov	r0, r6
 8027d0a:	f7ff ff43 	bl	8027b94 <_Balloc>
 8027d0e:	b940      	cbnz	r0, 8027d22 <__s2b+0x36>
 8027d10:	4602      	mov	r2, r0
 8027d12:	4b19      	ldr	r3, [pc, #100]	; (8027d78 <__s2b+0x8c>)
 8027d14:	4819      	ldr	r0, [pc, #100]	; (8027d7c <__s2b+0x90>)
 8027d16:	21ce      	movs	r1, #206	; 0xce
 8027d18:	f000 fd88 	bl	802882c <__assert_func>
 8027d1c:	0052      	lsls	r2, r2, #1
 8027d1e:	3101      	adds	r1, #1
 8027d20:	e7f0      	b.n	8027d04 <__s2b+0x18>
 8027d22:	9b08      	ldr	r3, [sp, #32]
 8027d24:	6143      	str	r3, [r0, #20]
 8027d26:	2d09      	cmp	r5, #9
 8027d28:	f04f 0301 	mov.w	r3, #1
 8027d2c:	6103      	str	r3, [r0, #16]
 8027d2e:	dd16      	ble.n	8027d5e <__s2b+0x72>
 8027d30:	f104 0909 	add.w	r9, r4, #9
 8027d34:	46c8      	mov	r8, r9
 8027d36:	442c      	add	r4, r5
 8027d38:	f818 3b01 	ldrb.w	r3, [r8], #1
 8027d3c:	4601      	mov	r1, r0
 8027d3e:	3b30      	subs	r3, #48	; 0x30
 8027d40:	220a      	movs	r2, #10
 8027d42:	4630      	mov	r0, r6
 8027d44:	f7ff ff88 	bl	8027c58 <__multadd>
 8027d48:	45a0      	cmp	r8, r4
 8027d4a:	d1f5      	bne.n	8027d38 <__s2b+0x4c>
 8027d4c:	f1a5 0408 	sub.w	r4, r5, #8
 8027d50:	444c      	add	r4, r9
 8027d52:	1b2d      	subs	r5, r5, r4
 8027d54:	1963      	adds	r3, r4, r5
 8027d56:	42bb      	cmp	r3, r7
 8027d58:	db04      	blt.n	8027d64 <__s2b+0x78>
 8027d5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027d5e:	340a      	adds	r4, #10
 8027d60:	2509      	movs	r5, #9
 8027d62:	e7f6      	b.n	8027d52 <__s2b+0x66>
 8027d64:	f814 3b01 	ldrb.w	r3, [r4], #1
 8027d68:	4601      	mov	r1, r0
 8027d6a:	3b30      	subs	r3, #48	; 0x30
 8027d6c:	220a      	movs	r2, #10
 8027d6e:	4630      	mov	r0, r6
 8027d70:	f7ff ff72 	bl	8027c58 <__multadd>
 8027d74:	e7ee      	b.n	8027d54 <__s2b+0x68>
 8027d76:	bf00      	nop
 8027d78:	0802a3f1 	.word	0x0802a3f1
 8027d7c:	0802a480 	.word	0x0802a480

08027d80 <__hi0bits>:
 8027d80:	0c03      	lsrs	r3, r0, #16
 8027d82:	041b      	lsls	r3, r3, #16
 8027d84:	b9d3      	cbnz	r3, 8027dbc <__hi0bits+0x3c>
 8027d86:	0400      	lsls	r0, r0, #16
 8027d88:	2310      	movs	r3, #16
 8027d8a:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8027d8e:	bf04      	itt	eq
 8027d90:	0200      	lsleq	r0, r0, #8
 8027d92:	3308      	addeq	r3, #8
 8027d94:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8027d98:	bf04      	itt	eq
 8027d9a:	0100      	lsleq	r0, r0, #4
 8027d9c:	3304      	addeq	r3, #4
 8027d9e:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8027da2:	bf04      	itt	eq
 8027da4:	0080      	lsleq	r0, r0, #2
 8027da6:	3302      	addeq	r3, #2
 8027da8:	2800      	cmp	r0, #0
 8027daa:	db05      	blt.n	8027db8 <__hi0bits+0x38>
 8027dac:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8027db0:	f103 0301 	add.w	r3, r3, #1
 8027db4:	bf08      	it	eq
 8027db6:	2320      	moveq	r3, #32
 8027db8:	4618      	mov	r0, r3
 8027dba:	4770      	bx	lr
 8027dbc:	2300      	movs	r3, #0
 8027dbe:	e7e4      	b.n	8027d8a <__hi0bits+0xa>

08027dc0 <__lo0bits>:
 8027dc0:	6803      	ldr	r3, [r0, #0]
 8027dc2:	f013 0207 	ands.w	r2, r3, #7
 8027dc6:	4601      	mov	r1, r0
 8027dc8:	d00b      	beq.n	8027de2 <__lo0bits+0x22>
 8027dca:	07da      	lsls	r2, r3, #31
 8027dcc:	d424      	bmi.n	8027e18 <__lo0bits+0x58>
 8027dce:	0798      	lsls	r0, r3, #30
 8027dd0:	bf49      	itett	mi
 8027dd2:	085b      	lsrmi	r3, r3, #1
 8027dd4:	089b      	lsrpl	r3, r3, #2
 8027dd6:	2001      	movmi	r0, #1
 8027dd8:	600b      	strmi	r3, [r1, #0]
 8027dda:	bf5c      	itt	pl
 8027ddc:	600b      	strpl	r3, [r1, #0]
 8027dde:	2002      	movpl	r0, #2
 8027de0:	4770      	bx	lr
 8027de2:	b298      	uxth	r0, r3
 8027de4:	b9b0      	cbnz	r0, 8027e14 <__lo0bits+0x54>
 8027de6:	0c1b      	lsrs	r3, r3, #16
 8027de8:	2010      	movs	r0, #16
 8027dea:	f013 0fff 	tst.w	r3, #255	; 0xff
 8027dee:	bf04      	itt	eq
 8027df0:	0a1b      	lsreq	r3, r3, #8
 8027df2:	3008      	addeq	r0, #8
 8027df4:	071a      	lsls	r2, r3, #28
 8027df6:	bf04      	itt	eq
 8027df8:	091b      	lsreq	r3, r3, #4
 8027dfa:	3004      	addeq	r0, #4
 8027dfc:	079a      	lsls	r2, r3, #30
 8027dfe:	bf04      	itt	eq
 8027e00:	089b      	lsreq	r3, r3, #2
 8027e02:	3002      	addeq	r0, #2
 8027e04:	07da      	lsls	r2, r3, #31
 8027e06:	d403      	bmi.n	8027e10 <__lo0bits+0x50>
 8027e08:	085b      	lsrs	r3, r3, #1
 8027e0a:	f100 0001 	add.w	r0, r0, #1
 8027e0e:	d005      	beq.n	8027e1c <__lo0bits+0x5c>
 8027e10:	600b      	str	r3, [r1, #0]
 8027e12:	4770      	bx	lr
 8027e14:	4610      	mov	r0, r2
 8027e16:	e7e8      	b.n	8027dea <__lo0bits+0x2a>
 8027e18:	2000      	movs	r0, #0
 8027e1a:	4770      	bx	lr
 8027e1c:	2020      	movs	r0, #32
 8027e1e:	4770      	bx	lr

08027e20 <__i2b>:
 8027e20:	b510      	push	{r4, lr}
 8027e22:	460c      	mov	r4, r1
 8027e24:	2101      	movs	r1, #1
 8027e26:	f7ff feb5 	bl	8027b94 <_Balloc>
 8027e2a:	4602      	mov	r2, r0
 8027e2c:	b928      	cbnz	r0, 8027e3a <__i2b+0x1a>
 8027e2e:	4b05      	ldr	r3, [pc, #20]	; (8027e44 <__i2b+0x24>)
 8027e30:	4805      	ldr	r0, [pc, #20]	; (8027e48 <__i2b+0x28>)
 8027e32:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8027e36:	f000 fcf9 	bl	802882c <__assert_func>
 8027e3a:	2301      	movs	r3, #1
 8027e3c:	6144      	str	r4, [r0, #20]
 8027e3e:	6103      	str	r3, [r0, #16]
 8027e40:	bd10      	pop	{r4, pc}
 8027e42:	bf00      	nop
 8027e44:	0802a3f1 	.word	0x0802a3f1
 8027e48:	0802a480 	.word	0x0802a480

08027e4c <__multiply>:
 8027e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027e50:	4614      	mov	r4, r2
 8027e52:	690a      	ldr	r2, [r1, #16]
 8027e54:	6923      	ldr	r3, [r4, #16]
 8027e56:	429a      	cmp	r2, r3
 8027e58:	bfb8      	it	lt
 8027e5a:	460b      	movlt	r3, r1
 8027e5c:	460d      	mov	r5, r1
 8027e5e:	bfbc      	itt	lt
 8027e60:	4625      	movlt	r5, r4
 8027e62:	461c      	movlt	r4, r3
 8027e64:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8027e68:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8027e6c:	68ab      	ldr	r3, [r5, #8]
 8027e6e:	6869      	ldr	r1, [r5, #4]
 8027e70:	eb0a 0709 	add.w	r7, sl, r9
 8027e74:	42bb      	cmp	r3, r7
 8027e76:	b085      	sub	sp, #20
 8027e78:	bfb8      	it	lt
 8027e7a:	3101      	addlt	r1, #1
 8027e7c:	f7ff fe8a 	bl	8027b94 <_Balloc>
 8027e80:	b930      	cbnz	r0, 8027e90 <__multiply+0x44>
 8027e82:	4602      	mov	r2, r0
 8027e84:	4b42      	ldr	r3, [pc, #264]	; (8027f90 <__multiply+0x144>)
 8027e86:	4843      	ldr	r0, [pc, #268]	; (8027f94 <__multiply+0x148>)
 8027e88:	f240 115d 	movw	r1, #349	; 0x15d
 8027e8c:	f000 fcce 	bl	802882c <__assert_func>
 8027e90:	f100 0614 	add.w	r6, r0, #20
 8027e94:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 8027e98:	4633      	mov	r3, r6
 8027e9a:	2200      	movs	r2, #0
 8027e9c:	4543      	cmp	r3, r8
 8027e9e:	d31e      	bcc.n	8027ede <__multiply+0x92>
 8027ea0:	f105 0c14 	add.w	ip, r5, #20
 8027ea4:	f104 0314 	add.w	r3, r4, #20
 8027ea8:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8027eac:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8027eb0:	9202      	str	r2, [sp, #8]
 8027eb2:	ebac 0205 	sub.w	r2, ip, r5
 8027eb6:	3a15      	subs	r2, #21
 8027eb8:	f022 0203 	bic.w	r2, r2, #3
 8027ebc:	3204      	adds	r2, #4
 8027ebe:	f105 0115 	add.w	r1, r5, #21
 8027ec2:	458c      	cmp	ip, r1
 8027ec4:	bf38      	it	cc
 8027ec6:	2204      	movcc	r2, #4
 8027ec8:	9201      	str	r2, [sp, #4]
 8027eca:	9a02      	ldr	r2, [sp, #8]
 8027ecc:	9303      	str	r3, [sp, #12]
 8027ece:	429a      	cmp	r2, r3
 8027ed0:	d808      	bhi.n	8027ee4 <__multiply+0x98>
 8027ed2:	2f00      	cmp	r7, #0
 8027ed4:	dc55      	bgt.n	8027f82 <__multiply+0x136>
 8027ed6:	6107      	str	r7, [r0, #16]
 8027ed8:	b005      	add	sp, #20
 8027eda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027ede:	f843 2b04 	str.w	r2, [r3], #4
 8027ee2:	e7db      	b.n	8027e9c <__multiply+0x50>
 8027ee4:	f8b3 a000 	ldrh.w	sl, [r3]
 8027ee8:	f1ba 0f00 	cmp.w	sl, #0
 8027eec:	d020      	beq.n	8027f30 <__multiply+0xe4>
 8027eee:	f105 0e14 	add.w	lr, r5, #20
 8027ef2:	46b1      	mov	r9, r6
 8027ef4:	2200      	movs	r2, #0
 8027ef6:	f85e 4b04 	ldr.w	r4, [lr], #4
 8027efa:	f8d9 b000 	ldr.w	fp, [r9]
 8027efe:	b2a1      	uxth	r1, r4
 8027f00:	fa1f fb8b 	uxth.w	fp, fp
 8027f04:	fb0a b101 	mla	r1, sl, r1, fp
 8027f08:	4411      	add	r1, r2
 8027f0a:	f8d9 2000 	ldr.w	r2, [r9]
 8027f0e:	0c24      	lsrs	r4, r4, #16
 8027f10:	0c12      	lsrs	r2, r2, #16
 8027f12:	fb0a 2404 	mla	r4, sl, r4, r2
 8027f16:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8027f1a:	b289      	uxth	r1, r1
 8027f1c:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8027f20:	45f4      	cmp	ip, lr
 8027f22:	f849 1b04 	str.w	r1, [r9], #4
 8027f26:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8027f2a:	d8e4      	bhi.n	8027ef6 <__multiply+0xaa>
 8027f2c:	9901      	ldr	r1, [sp, #4]
 8027f2e:	5072      	str	r2, [r6, r1]
 8027f30:	9a03      	ldr	r2, [sp, #12]
 8027f32:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8027f36:	3304      	adds	r3, #4
 8027f38:	f1b9 0f00 	cmp.w	r9, #0
 8027f3c:	d01f      	beq.n	8027f7e <__multiply+0x132>
 8027f3e:	6834      	ldr	r4, [r6, #0]
 8027f40:	f105 0114 	add.w	r1, r5, #20
 8027f44:	46b6      	mov	lr, r6
 8027f46:	f04f 0a00 	mov.w	sl, #0
 8027f4a:	880a      	ldrh	r2, [r1, #0]
 8027f4c:	f8be b002 	ldrh.w	fp, [lr, #2]
 8027f50:	fb09 b202 	mla	r2, r9, r2, fp
 8027f54:	4492      	add	sl, r2
 8027f56:	b2a4      	uxth	r4, r4
 8027f58:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8027f5c:	f84e 4b04 	str.w	r4, [lr], #4
 8027f60:	f851 4b04 	ldr.w	r4, [r1], #4
 8027f64:	f8be 2000 	ldrh.w	r2, [lr]
 8027f68:	0c24      	lsrs	r4, r4, #16
 8027f6a:	fb09 2404 	mla	r4, r9, r4, r2
 8027f6e:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8027f72:	458c      	cmp	ip, r1
 8027f74:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8027f78:	d8e7      	bhi.n	8027f4a <__multiply+0xfe>
 8027f7a:	9a01      	ldr	r2, [sp, #4]
 8027f7c:	50b4      	str	r4, [r6, r2]
 8027f7e:	3604      	adds	r6, #4
 8027f80:	e7a3      	b.n	8027eca <__multiply+0x7e>
 8027f82:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8027f86:	2b00      	cmp	r3, #0
 8027f88:	d1a5      	bne.n	8027ed6 <__multiply+0x8a>
 8027f8a:	3f01      	subs	r7, #1
 8027f8c:	e7a1      	b.n	8027ed2 <__multiply+0x86>
 8027f8e:	bf00      	nop
 8027f90:	0802a3f1 	.word	0x0802a3f1
 8027f94:	0802a480 	.word	0x0802a480

08027f98 <__pow5mult>:
 8027f98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027f9c:	4615      	mov	r5, r2
 8027f9e:	f012 0203 	ands.w	r2, r2, #3
 8027fa2:	4606      	mov	r6, r0
 8027fa4:	460f      	mov	r7, r1
 8027fa6:	d007      	beq.n	8027fb8 <__pow5mult+0x20>
 8027fa8:	4c25      	ldr	r4, [pc, #148]	; (8028040 <__pow5mult+0xa8>)
 8027faa:	3a01      	subs	r2, #1
 8027fac:	2300      	movs	r3, #0
 8027fae:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8027fb2:	f7ff fe51 	bl	8027c58 <__multadd>
 8027fb6:	4607      	mov	r7, r0
 8027fb8:	10ad      	asrs	r5, r5, #2
 8027fba:	d03d      	beq.n	8028038 <__pow5mult+0xa0>
 8027fbc:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8027fbe:	b97c      	cbnz	r4, 8027fe0 <__pow5mult+0x48>
 8027fc0:	2010      	movs	r0, #16
 8027fc2:	f7fc fe15 	bl	8024bf0 <malloc>
 8027fc6:	4602      	mov	r2, r0
 8027fc8:	6270      	str	r0, [r6, #36]	; 0x24
 8027fca:	b928      	cbnz	r0, 8027fd8 <__pow5mult+0x40>
 8027fcc:	4b1d      	ldr	r3, [pc, #116]	; (8028044 <__pow5mult+0xac>)
 8027fce:	481e      	ldr	r0, [pc, #120]	; (8028048 <__pow5mult+0xb0>)
 8027fd0:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8027fd4:	f000 fc2a 	bl	802882c <__assert_func>
 8027fd8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8027fdc:	6004      	str	r4, [r0, #0]
 8027fde:	60c4      	str	r4, [r0, #12]
 8027fe0:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8027fe4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8027fe8:	b94c      	cbnz	r4, 8027ffe <__pow5mult+0x66>
 8027fea:	f240 2171 	movw	r1, #625	; 0x271
 8027fee:	4630      	mov	r0, r6
 8027ff0:	f7ff ff16 	bl	8027e20 <__i2b>
 8027ff4:	2300      	movs	r3, #0
 8027ff6:	f8c8 0008 	str.w	r0, [r8, #8]
 8027ffa:	4604      	mov	r4, r0
 8027ffc:	6003      	str	r3, [r0, #0]
 8027ffe:	f04f 0900 	mov.w	r9, #0
 8028002:	07eb      	lsls	r3, r5, #31
 8028004:	d50a      	bpl.n	802801c <__pow5mult+0x84>
 8028006:	4639      	mov	r1, r7
 8028008:	4622      	mov	r2, r4
 802800a:	4630      	mov	r0, r6
 802800c:	f7ff ff1e 	bl	8027e4c <__multiply>
 8028010:	4639      	mov	r1, r7
 8028012:	4680      	mov	r8, r0
 8028014:	4630      	mov	r0, r6
 8028016:	f7ff fdfd 	bl	8027c14 <_Bfree>
 802801a:	4647      	mov	r7, r8
 802801c:	106d      	asrs	r5, r5, #1
 802801e:	d00b      	beq.n	8028038 <__pow5mult+0xa0>
 8028020:	6820      	ldr	r0, [r4, #0]
 8028022:	b938      	cbnz	r0, 8028034 <__pow5mult+0x9c>
 8028024:	4622      	mov	r2, r4
 8028026:	4621      	mov	r1, r4
 8028028:	4630      	mov	r0, r6
 802802a:	f7ff ff0f 	bl	8027e4c <__multiply>
 802802e:	6020      	str	r0, [r4, #0]
 8028030:	f8c0 9000 	str.w	r9, [r0]
 8028034:	4604      	mov	r4, r0
 8028036:	e7e4      	b.n	8028002 <__pow5mult+0x6a>
 8028038:	4638      	mov	r0, r7
 802803a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802803e:	bf00      	nop
 8028040:	0802a5d0 	.word	0x0802a5d0
 8028044:	0802a37b 	.word	0x0802a37b
 8028048:	0802a480 	.word	0x0802a480

0802804c <__lshift>:
 802804c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028050:	460c      	mov	r4, r1
 8028052:	6849      	ldr	r1, [r1, #4]
 8028054:	6923      	ldr	r3, [r4, #16]
 8028056:	eb03 1862 	add.w	r8, r3, r2, asr #5
 802805a:	68a3      	ldr	r3, [r4, #8]
 802805c:	4607      	mov	r7, r0
 802805e:	4691      	mov	r9, r2
 8028060:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8028064:	f108 0601 	add.w	r6, r8, #1
 8028068:	42b3      	cmp	r3, r6
 802806a:	db0b      	blt.n	8028084 <__lshift+0x38>
 802806c:	4638      	mov	r0, r7
 802806e:	f7ff fd91 	bl	8027b94 <_Balloc>
 8028072:	4605      	mov	r5, r0
 8028074:	b948      	cbnz	r0, 802808a <__lshift+0x3e>
 8028076:	4602      	mov	r2, r0
 8028078:	4b28      	ldr	r3, [pc, #160]	; (802811c <__lshift+0xd0>)
 802807a:	4829      	ldr	r0, [pc, #164]	; (8028120 <__lshift+0xd4>)
 802807c:	f240 11d9 	movw	r1, #473	; 0x1d9
 8028080:	f000 fbd4 	bl	802882c <__assert_func>
 8028084:	3101      	adds	r1, #1
 8028086:	005b      	lsls	r3, r3, #1
 8028088:	e7ee      	b.n	8028068 <__lshift+0x1c>
 802808a:	2300      	movs	r3, #0
 802808c:	f100 0114 	add.w	r1, r0, #20
 8028090:	f100 0210 	add.w	r2, r0, #16
 8028094:	4618      	mov	r0, r3
 8028096:	4553      	cmp	r3, sl
 8028098:	db33      	blt.n	8028102 <__lshift+0xb6>
 802809a:	6920      	ldr	r0, [r4, #16]
 802809c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80280a0:	f104 0314 	add.w	r3, r4, #20
 80280a4:	f019 091f 	ands.w	r9, r9, #31
 80280a8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80280ac:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80280b0:	d02b      	beq.n	802810a <__lshift+0xbe>
 80280b2:	f1c9 0e20 	rsb	lr, r9, #32
 80280b6:	468a      	mov	sl, r1
 80280b8:	2200      	movs	r2, #0
 80280ba:	6818      	ldr	r0, [r3, #0]
 80280bc:	fa00 f009 	lsl.w	r0, r0, r9
 80280c0:	4302      	orrs	r2, r0
 80280c2:	f84a 2b04 	str.w	r2, [sl], #4
 80280c6:	f853 2b04 	ldr.w	r2, [r3], #4
 80280ca:	459c      	cmp	ip, r3
 80280cc:	fa22 f20e 	lsr.w	r2, r2, lr
 80280d0:	d8f3      	bhi.n	80280ba <__lshift+0x6e>
 80280d2:	ebac 0304 	sub.w	r3, ip, r4
 80280d6:	3b15      	subs	r3, #21
 80280d8:	f023 0303 	bic.w	r3, r3, #3
 80280dc:	3304      	adds	r3, #4
 80280de:	f104 0015 	add.w	r0, r4, #21
 80280e2:	4584      	cmp	ip, r0
 80280e4:	bf38      	it	cc
 80280e6:	2304      	movcc	r3, #4
 80280e8:	50ca      	str	r2, [r1, r3]
 80280ea:	b10a      	cbz	r2, 80280f0 <__lshift+0xa4>
 80280ec:	f108 0602 	add.w	r6, r8, #2
 80280f0:	3e01      	subs	r6, #1
 80280f2:	4638      	mov	r0, r7
 80280f4:	612e      	str	r6, [r5, #16]
 80280f6:	4621      	mov	r1, r4
 80280f8:	f7ff fd8c 	bl	8027c14 <_Bfree>
 80280fc:	4628      	mov	r0, r5
 80280fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028102:	f842 0f04 	str.w	r0, [r2, #4]!
 8028106:	3301      	adds	r3, #1
 8028108:	e7c5      	b.n	8028096 <__lshift+0x4a>
 802810a:	3904      	subs	r1, #4
 802810c:	f853 2b04 	ldr.w	r2, [r3], #4
 8028110:	f841 2f04 	str.w	r2, [r1, #4]!
 8028114:	459c      	cmp	ip, r3
 8028116:	d8f9      	bhi.n	802810c <__lshift+0xc0>
 8028118:	e7ea      	b.n	80280f0 <__lshift+0xa4>
 802811a:	bf00      	nop
 802811c:	0802a3f1 	.word	0x0802a3f1
 8028120:	0802a480 	.word	0x0802a480

08028124 <__mcmp>:
 8028124:	b530      	push	{r4, r5, lr}
 8028126:	6902      	ldr	r2, [r0, #16]
 8028128:	690c      	ldr	r4, [r1, #16]
 802812a:	1b12      	subs	r2, r2, r4
 802812c:	d10e      	bne.n	802814c <__mcmp+0x28>
 802812e:	f100 0314 	add.w	r3, r0, #20
 8028132:	3114      	adds	r1, #20
 8028134:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8028138:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 802813c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8028140:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8028144:	42a5      	cmp	r5, r4
 8028146:	d003      	beq.n	8028150 <__mcmp+0x2c>
 8028148:	d305      	bcc.n	8028156 <__mcmp+0x32>
 802814a:	2201      	movs	r2, #1
 802814c:	4610      	mov	r0, r2
 802814e:	bd30      	pop	{r4, r5, pc}
 8028150:	4283      	cmp	r3, r0
 8028152:	d3f3      	bcc.n	802813c <__mcmp+0x18>
 8028154:	e7fa      	b.n	802814c <__mcmp+0x28>
 8028156:	f04f 32ff 	mov.w	r2, #4294967295
 802815a:	e7f7      	b.n	802814c <__mcmp+0x28>

0802815c <__mdiff>:
 802815c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028160:	460c      	mov	r4, r1
 8028162:	4606      	mov	r6, r0
 8028164:	4611      	mov	r1, r2
 8028166:	4620      	mov	r0, r4
 8028168:	4617      	mov	r7, r2
 802816a:	f7ff ffdb 	bl	8028124 <__mcmp>
 802816e:	1e05      	subs	r5, r0, #0
 8028170:	d110      	bne.n	8028194 <__mdiff+0x38>
 8028172:	4629      	mov	r1, r5
 8028174:	4630      	mov	r0, r6
 8028176:	f7ff fd0d 	bl	8027b94 <_Balloc>
 802817a:	b930      	cbnz	r0, 802818a <__mdiff+0x2e>
 802817c:	4b39      	ldr	r3, [pc, #228]	; (8028264 <__mdiff+0x108>)
 802817e:	4602      	mov	r2, r0
 8028180:	f240 2132 	movw	r1, #562	; 0x232
 8028184:	4838      	ldr	r0, [pc, #224]	; (8028268 <__mdiff+0x10c>)
 8028186:	f000 fb51 	bl	802882c <__assert_func>
 802818a:	2301      	movs	r3, #1
 802818c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8028190:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028194:	bfa4      	itt	ge
 8028196:	463b      	movge	r3, r7
 8028198:	4627      	movge	r7, r4
 802819a:	4630      	mov	r0, r6
 802819c:	6879      	ldr	r1, [r7, #4]
 802819e:	bfa6      	itte	ge
 80281a0:	461c      	movge	r4, r3
 80281a2:	2500      	movge	r5, #0
 80281a4:	2501      	movlt	r5, #1
 80281a6:	f7ff fcf5 	bl	8027b94 <_Balloc>
 80281aa:	b920      	cbnz	r0, 80281b6 <__mdiff+0x5a>
 80281ac:	4b2d      	ldr	r3, [pc, #180]	; (8028264 <__mdiff+0x108>)
 80281ae:	4602      	mov	r2, r0
 80281b0:	f44f 7110 	mov.w	r1, #576	; 0x240
 80281b4:	e7e6      	b.n	8028184 <__mdiff+0x28>
 80281b6:	693e      	ldr	r6, [r7, #16]
 80281b8:	60c5      	str	r5, [r0, #12]
 80281ba:	6925      	ldr	r5, [r4, #16]
 80281bc:	f107 0114 	add.w	r1, r7, #20
 80281c0:	f104 0914 	add.w	r9, r4, #20
 80281c4:	f100 0e14 	add.w	lr, r0, #20
 80281c8:	f107 0210 	add.w	r2, r7, #16
 80281cc:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 80281d0:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 80281d4:	46f2      	mov	sl, lr
 80281d6:	2700      	movs	r7, #0
 80281d8:	f859 3b04 	ldr.w	r3, [r9], #4
 80281dc:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80281e0:	fa1f f883 	uxth.w	r8, r3
 80281e4:	fa17 f78b 	uxtah	r7, r7, fp
 80281e8:	0c1b      	lsrs	r3, r3, #16
 80281ea:	eba7 0808 	sub.w	r8, r7, r8
 80281ee:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80281f2:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80281f6:	fa1f f888 	uxth.w	r8, r8
 80281fa:	141f      	asrs	r7, r3, #16
 80281fc:	454d      	cmp	r5, r9
 80281fe:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8028202:	f84a 3b04 	str.w	r3, [sl], #4
 8028206:	d8e7      	bhi.n	80281d8 <__mdiff+0x7c>
 8028208:	1b2b      	subs	r3, r5, r4
 802820a:	3b15      	subs	r3, #21
 802820c:	f023 0303 	bic.w	r3, r3, #3
 8028210:	3304      	adds	r3, #4
 8028212:	3415      	adds	r4, #21
 8028214:	42a5      	cmp	r5, r4
 8028216:	bf38      	it	cc
 8028218:	2304      	movcc	r3, #4
 802821a:	4419      	add	r1, r3
 802821c:	4473      	add	r3, lr
 802821e:	469e      	mov	lr, r3
 8028220:	460d      	mov	r5, r1
 8028222:	4565      	cmp	r5, ip
 8028224:	d30e      	bcc.n	8028244 <__mdiff+0xe8>
 8028226:	f10c 0203 	add.w	r2, ip, #3
 802822a:	1a52      	subs	r2, r2, r1
 802822c:	f022 0203 	bic.w	r2, r2, #3
 8028230:	3903      	subs	r1, #3
 8028232:	458c      	cmp	ip, r1
 8028234:	bf38      	it	cc
 8028236:	2200      	movcc	r2, #0
 8028238:	441a      	add	r2, r3
 802823a:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 802823e:	b17b      	cbz	r3, 8028260 <__mdiff+0x104>
 8028240:	6106      	str	r6, [r0, #16]
 8028242:	e7a5      	b.n	8028190 <__mdiff+0x34>
 8028244:	f855 8b04 	ldr.w	r8, [r5], #4
 8028248:	fa17 f488 	uxtah	r4, r7, r8
 802824c:	1422      	asrs	r2, r4, #16
 802824e:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 8028252:	b2a4      	uxth	r4, r4
 8028254:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8028258:	f84e 4b04 	str.w	r4, [lr], #4
 802825c:	1417      	asrs	r7, r2, #16
 802825e:	e7e0      	b.n	8028222 <__mdiff+0xc6>
 8028260:	3e01      	subs	r6, #1
 8028262:	e7ea      	b.n	802823a <__mdiff+0xde>
 8028264:	0802a3f1 	.word	0x0802a3f1
 8028268:	0802a480 	.word	0x0802a480

0802826c <__ulp>:
 802826c:	b082      	sub	sp, #8
 802826e:	ed8d 0b00 	vstr	d0, [sp]
 8028272:	9b01      	ldr	r3, [sp, #4]
 8028274:	4912      	ldr	r1, [pc, #72]	; (80282c0 <__ulp+0x54>)
 8028276:	4019      	ands	r1, r3
 8028278:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 802827c:	2900      	cmp	r1, #0
 802827e:	dd05      	ble.n	802828c <__ulp+0x20>
 8028280:	2200      	movs	r2, #0
 8028282:	460b      	mov	r3, r1
 8028284:	ec43 2b10 	vmov	d0, r2, r3
 8028288:	b002      	add	sp, #8
 802828a:	4770      	bx	lr
 802828c:	4249      	negs	r1, r1
 802828e:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8028292:	ea4f 5021 	mov.w	r0, r1, asr #20
 8028296:	f04f 0200 	mov.w	r2, #0
 802829a:	f04f 0300 	mov.w	r3, #0
 802829e:	da04      	bge.n	80282aa <__ulp+0x3e>
 80282a0:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 80282a4:	fa41 f300 	asr.w	r3, r1, r0
 80282a8:	e7ec      	b.n	8028284 <__ulp+0x18>
 80282aa:	f1a0 0114 	sub.w	r1, r0, #20
 80282ae:	291e      	cmp	r1, #30
 80282b0:	bfda      	itte	le
 80282b2:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 80282b6:	fa20 f101 	lsrle.w	r1, r0, r1
 80282ba:	2101      	movgt	r1, #1
 80282bc:	460a      	mov	r2, r1
 80282be:	e7e1      	b.n	8028284 <__ulp+0x18>
 80282c0:	7ff00000 	.word	0x7ff00000

080282c4 <__b2d>:
 80282c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80282c6:	6905      	ldr	r5, [r0, #16]
 80282c8:	f100 0714 	add.w	r7, r0, #20
 80282cc:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 80282d0:	1f2e      	subs	r6, r5, #4
 80282d2:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80282d6:	4620      	mov	r0, r4
 80282d8:	f7ff fd52 	bl	8027d80 <__hi0bits>
 80282dc:	f1c0 0320 	rsb	r3, r0, #32
 80282e0:	280a      	cmp	r0, #10
 80282e2:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8028360 <__b2d+0x9c>
 80282e6:	600b      	str	r3, [r1, #0]
 80282e8:	dc14      	bgt.n	8028314 <__b2d+0x50>
 80282ea:	f1c0 0e0b 	rsb	lr, r0, #11
 80282ee:	fa24 f10e 	lsr.w	r1, r4, lr
 80282f2:	42b7      	cmp	r7, r6
 80282f4:	ea41 030c 	orr.w	r3, r1, ip
 80282f8:	bf34      	ite	cc
 80282fa:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 80282fe:	2100      	movcs	r1, #0
 8028300:	3015      	adds	r0, #21
 8028302:	fa04 f000 	lsl.w	r0, r4, r0
 8028306:	fa21 f10e 	lsr.w	r1, r1, lr
 802830a:	ea40 0201 	orr.w	r2, r0, r1
 802830e:	ec43 2b10 	vmov	d0, r2, r3
 8028312:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028314:	42b7      	cmp	r7, r6
 8028316:	bf3a      	itte	cc
 8028318:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 802831c:	f1a5 0608 	subcc.w	r6, r5, #8
 8028320:	2100      	movcs	r1, #0
 8028322:	380b      	subs	r0, #11
 8028324:	d017      	beq.n	8028356 <__b2d+0x92>
 8028326:	f1c0 0c20 	rsb	ip, r0, #32
 802832a:	fa04 f500 	lsl.w	r5, r4, r0
 802832e:	42be      	cmp	r6, r7
 8028330:	fa21 f40c 	lsr.w	r4, r1, ip
 8028334:	ea45 0504 	orr.w	r5, r5, r4
 8028338:	bf8c      	ite	hi
 802833a:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 802833e:	2400      	movls	r4, #0
 8028340:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8028344:	fa01 f000 	lsl.w	r0, r1, r0
 8028348:	fa24 f40c 	lsr.w	r4, r4, ip
 802834c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8028350:	ea40 0204 	orr.w	r2, r0, r4
 8028354:	e7db      	b.n	802830e <__b2d+0x4a>
 8028356:	ea44 030c 	orr.w	r3, r4, ip
 802835a:	460a      	mov	r2, r1
 802835c:	e7d7      	b.n	802830e <__b2d+0x4a>
 802835e:	bf00      	nop
 8028360:	3ff00000 	.word	0x3ff00000

08028364 <__d2b>:
 8028364:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8028368:	4689      	mov	r9, r1
 802836a:	2101      	movs	r1, #1
 802836c:	ec57 6b10 	vmov	r6, r7, d0
 8028370:	4690      	mov	r8, r2
 8028372:	f7ff fc0f 	bl	8027b94 <_Balloc>
 8028376:	4604      	mov	r4, r0
 8028378:	b930      	cbnz	r0, 8028388 <__d2b+0x24>
 802837a:	4602      	mov	r2, r0
 802837c:	4b25      	ldr	r3, [pc, #148]	; (8028414 <__d2b+0xb0>)
 802837e:	4826      	ldr	r0, [pc, #152]	; (8028418 <__d2b+0xb4>)
 8028380:	f240 310a 	movw	r1, #778	; 0x30a
 8028384:	f000 fa52 	bl	802882c <__assert_func>
 8028388:	f3c7 550a 	ubfx	r5, r7, #20, #11
 802838c:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8028390:	bb35      	cbnz	r5, 80283e0 <__d2b+0x7c>
 8028392:	2e00      	cmp	r6, #0
 8028394:	9301      	str	r3, [sp, #4]
 8028396:	d028      	beq.n	80283ea <__d2b+0x86>
 8028398:	4668      	mov	r0, sp
 802839a:	9600      	str	r6, [sp, #0]
 802839c:	f7ff fd10 	bl	8027dc0 <__lo0bits>
 80283a0:	9900      	ldr	r1, [sp, #0]
 80283a2:	b300      	cbz	r0, 80283e6 <__d2b+0x82>
 80283a4:	9a01      	ldr	r2, [sp, #4]
 80283a6:	f1c0 0320 	rsb	r3, r0, #32
 80283aa:	fa02 f303 	lsl.w	r3, r2, r3
 80283ae:	430b      	orrs	r3, r1
 80283b0:	40c2      	lsrs	r2, r0
 80283b2:	6163      	str	r3, [r4, #20]
 80283b4:	9201      	str	r2, [sp, #4]
 80283b6:	9b01      	ldr	r3, [sp, #4]
 80283b8:	61a3      	str	r3, [r4, #24]
 80283ba:	2b00      	cmp	r3, #0
 80283bc:	bf14      	ite	ne
 80283be:	2202      	movne	r2, #2
 80283c0:	2201      	moveq	r2, #1
 80283c2:	6122      	str	r2, [r4, #16]
 80283c4:	b1d5      	cbz	r5, 80283fc <__d2b+0x98>
 80283c6:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80283ca:	4405      	add	r5, r0
 80283cc:	f8c9 5000 	str.w	r5, [r9]
 80283d0:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80283d4:	f8c8 0000 	str.w	r0, [r8]
 80283d8:	4620      	mov	r0, r4
 80283da:	b003      	add	sp, #12
 80283dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80283e0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80283e4:	e7d5      	b.n	8028392 <__d2b+0x2e>
 80283e6:	6161      	str	r1, [r4, #20]
 80283e8:	e7e5      	b.n	80283b6 <__d2b+0x52>
 80283ea:	a801      	add	r0, sp, #4
 80283ec:	f7ff fce8 	bl	8027dc0 <__lo0bits>
 80283f0:	9b01      	ldr	r3, [sp, #4]
 80283f2:	6163      	str	r3, [r4, #20]
 80283f4:	2201      	movs	r2, #1
 80283f6:	6122      	str	r2, [r4, #16]
 80283f8:	3020      	adds	r0, #32
 80283fa:	e7e3      	b.n	80283c4 <__d2b+0x60>
 80283fc:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8028400:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8028404:	f8c9 0000 	str.w	r0, [r9]
 8028408:	6918      	ldr	r0, [r3, #16]
 802840a:	f7ff fcb9 	bl	8027d80 <__hi0bits>
 802840e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8028412:	e7df      	b.n	80283d4 <__d2b+0x70>
 8028414:	0802a3f1 	.word	0x0802a3f1
 8028418:	0802a480 	.word	0x0802a480

0802841c <__ratio>:
 802841c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028420:	4688      	mov	r8, r1
 8028422:	4669      	mov	r1, sp
 8028424:	4681      	mov	r9, r0
 8028426:	f7ff ff4d 	bl	80282c4 <__b2d>
 802842a:	a901      	add	r1, sp, #4
 802842c:	4640      	mov	r0, r8
 802842e:	ec55 4b10 	vmov	r4, r5, d0
 8028432:	f7ff ff47 	bl	80282c4 <__b2d>
 8028436:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802843a:	f8d8 2010 	ldr.w	r2, [r8, #16]
 802843e:	eba3 0c02 	sub.w	ip, r3, r2
 8028442:	e9dd 3200 	ldrd	r3, r2, [sp]
 8028446:	1a9b      	subs	r3, r3, r2
 8028448:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 802844c:	ec51 0b10 	vmov	r0, r1, d0
 8028450:	2b00      	cmp	r3, #0
 8028452:	bfd6      	itet	le
 8028454:	460a      	movle	r2, r1
 8028456:	462a      	movgt	r2, r5
 8028458:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 802845c:	468b      	mov	fp, r1
 802845e:	462f      	mov	r7, r5
 8028460:	bfd4      	ite	le
 8028462:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8028466:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 802846a:	4620      	mov	r0, r4
 802846c:	ee10 2a10 	vmov	r2, s0
 8028470:	465b      	mov	r3, fp
 8028472:	4639      	mov	r1, r7
 8028474:	f7d8 fa0a 	bl	800088c <__aeabi_ddiv>
 8028478:	ec41 0b10 	vmov	d0, r0, r1
 802847c:	b003      	add	sp, #12
 802847e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028482 <__copybits>:
 8028482:	3901      	subs	r1, #1
 8028484:	b570      	push	{r4, r5, r6, lr}
 8028486:	1149      	asrs	r1, r1, #5
 8028488:	6914      	ldr	r4, [r2, #16]
 802848a:	3101      	adds	r1, #1
 802848c:	f102 0314 	add.w	r3, r2, #20
 8028490:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8028494:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8028498:	1f05      	subs	r5, r0, #4
 802849a:	42a3      	cmp	r3, r4
 802849c:	d30c      	bcc.n	80284b8 <__copybits+0x36>
 802849e:	1aa3      	subs	r3, r4, r2
 80284a0:	3b11      	subs	r3, #17
 80284a2:	f023 0303 	bic.w	r3, r3, #3
 80284a6:	3211      	adds	r2, #17
 80284a8:	42a2      	cmp	r2, r4
 80284aa:	bf88      	it	hi
 80284ac:	2300      	movhi	r3, #0
 80284ae:	4418      	add	r0, r3
 80284b0:	2300      	movs	r3, #0
 80284b2:	4288      	cmp	r0, r1
 80284b4:	d305      	bcc.n	80284c2 <__copybits+0x40>
 80284b6:	bd70      	pop	{r4, r5, r6, pc}
 80284b8:	f853 6b04 	ldr.w	r6, [r3], #4
 80284bc:	f845 6f04 	str.w	r6, [r5, #4]!
 80284c0:	e7eb      	b.n	802849a <__copybits+0x18>
 80284c2:	f840 3b04 	str.w	r3, [r0], #4
 80284c6:	e7f4      	b.n	80284b2 <__copybits+0x30>

080284c8 <__any_on>:
 80284c8:	f100 0214 	add.w	r2, r0, #20
 80284cc:	6900      	ldr	r0, [r0, #16]
 80284ce:	114b      	asrs	r3, r1, #5
 80284d0:	4298      	cmp	r0, r3
 80284d2:	b510      	push	{r4, lr}
 80284d4:	db11      	blt.n	80284fa <__any_on+0x32>
 80284d6:	dd0a      	ble.n	80284ee <__any_on+0x26>
 80284d8:	f011 011f 	ands.w	r1, r1, #31
 80284dc:	d007      	beq.n	80284ee <__any_on+0x26>
 80284de:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80284e2:	fa24 f001 	lsr.w	r0, r4, r1
 80284e6:	fa00 f101 	lsl.w	r1, r0, r1
 80284ea:	428c      	cmp	r4, r1
 80284ec:	d10b      	bne.n	8028506 <__any_on+0x3e>
 80284ee:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80284f2:	4293      	cmp	r3, r2
 80284f4:	d803      	bhi.n	80284fe <__any_on+0x36>
 80284f6:	2000      	movs	r0, #0
 80284f8:	bd10      	pop	{r4, pc}
 80284fa:	4603      	mov	r3, r0
 80284fc:	e7f7      	b.n	80284ee <__any_on+0x26>
 80284fe:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8028502:	2900      	cmp	r1, #0
 8028504:	d0f5      	beq.n	80284f2 <__any_on+0x2a>
 8028506:	2001      	movs	r0, #1
 8028508:	e7f6      	b.n	80284f8 <__any_on+0x30>

0802850a <_calloc_r>:
 802850a:	b513      	push	{r0, r1, r4, lr}
 802850c:	434a      	muls	r2, r1
 802850e:	4611      	mov	r1, r2
 8028510:	9201      	str	r2, [sp, #4]
 8028512:	f7fc fc0b 	bl	8024d2c <_malloc_r>
 8028516:	4604      	mov	r4, r0
 8028518:	b118      	cbz	r0, 8028522 <_calloc_r+0x18>
 802851a:	9a01      	ldr	r2, [sp, #4]
 802851c:	2100      	movs	r1, #0
 802851e:	f7fc fbad 	bl	8024c7c <memset>
 8028522:	4620      	mov	r0, r4
 8028524:	b002      	add	sp, #8
 8028526:	bd10      	pop	{r4, pc}

08028528 <__ssputs_r>:
 8028528:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802852c:	688e      	ldr	r6, [r1, #8]
 802852e:	429e      	cmp	r6, r3
 8028530:	4682      	mov	sl, r0
 8028532:	460c      	mov	r4, r1
 8028534:	4690      	mov	r8, r2
 8028536:	461f      	mov	r7, r3
 8028538:	d838      	bhi.n	80285ac <__ssputs_r+0x84>
 802853a:	898a      	ldrh	r2, [r1, #12]
 802853c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8028540:	d032      	beq.n	80285a8 <__ssputs_r+0x80>
 8028542:	6825      	ldr	r5, [r4, #0]
 8028544:	6909      	ldr	r1, [r1, #16]
 8028546:	eba5 0901 	sub.w	r9, r5, r1
 802854a:	6965      	ldr	r5, [r4, #20]
 802854c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8028550:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8028554:	3301      	adds	r3, #1
 8028556:	444b      	add	r3, r9
 8028558:	106d      	asrs	r5, r5, #1
 802855a:	429d      	cmp	r5, r3
 802855c:	bf38      	it	cc
 802855e:	461d      	movcc	r5, r3
 8028560:	0553      	lsls	r3, r2, #21
 8028562:	d531      	bpl.n	80285c8 <__ssputs_r+0xa0>
 8028564:	4629      	mov	r1, r5
 8028566:	f7fc fbe1 	bl	8024d2c <_malloc_r>
 802856a:	4606      	mov	r6, r0
 802856c:	b950      	cbnz	r0, 8028584 <__ssputs_r+0x5c>
 802856e:	230c      	movs	r3, #12
 8028570:	f8ca 3000 	str.w	r3, [sl]
 8028574:	89a3      	ldrh	r3, [r4, #12]
 8028576:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802857a:	81a3      	strh	r3, [r4, #12]
 802857c:	f04f 30ff 	mov.w	r0, #4294967295
 8028580:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028584:	6921      	ldr	r1, [r4, #16]
 8028586:	464a      	mov	r2, r9
 8028588:	f7fc fb50 	bl	8024c2c <memcpy>
 802858c:	89a3      	ldrh	r3, [r4, #12]
 802858e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8028592:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8028596:	81a3      	strh	r3, [r4, #12]
 8028598:	6126      	str	r6, [r4, #16]
 802859a:	6165      	str	r5, [r4, #20]
 802859c:	444e      	add	r6, r9
 802859e:	eba5 0509 	sub.w	r5, r5, r9
 80285a2:	6026      	str	r6, [r4, #0]
 80285a4:	60a5      	str	r5, [r4, #8]
 80285a6:	463e      	mov	r6, r7
 80285a8:	42be      	cmp	r6, r7
 80285aa:	d900      	bls.n	80285ae <__ssputs_r+0x86>
 80285ac:	463e      	mov	r6, r7
 80285ae:	4632      	mov	r2, r6
 80285b0:	6820      	ldr	r0, [r4, #0]
 80285b2:	4641      	mov	r1, r8
 80285b4:	f7fc fb48 	bl	8024c48 <memmove>
 80285b8:	68a3      	ldr	r3, [r4, #8]
 80285ba:	6822      	ldr	r2, [r4, #0]
 80285bc:	1b9b      	subs	r3, r3, r6
 80285be:	4432      	add	r2, r6
 80285c0:	60a3      	str	r3, [r4, #8]
 80285c2:	6022      	str	r2, [r4, #0]
 80285c4:	2000      	movs	r0, #0
 80285c6:	e7db      	b.n	8028580 <__ssputs_r+0x58>
 80285c8:	462a      	mov	r2, r5
 80285ca:	f000 f95f 	bl	802888c <_realloc_r>
 80285ce:	4606      	mov	r6, r0
 80285d0:	2800      	cmp	r0, #0
 80285d2:	d1e1      	bne.n	8028598 <__ssputs_r+0x70>
 80285d4:	6921      	ldr	r1, [r4, #16]
 80285d6:	4650      	mov	r0, sl
 80285d8:	f7fc fb58 	bl	8024c8c <_free_r>
 80285dc:	e7c7      	b.n	802856e <__ssputs_r+0x46>
	...

080285e0 <_svfiprintf_r>:
 80285e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80285e4:	4698      	mov	r8, r3
 80285e6:	898b      	ldrh	r3, [r1, #12]
 80285e8:	061b      	lsls	r3, r3, #24
 80285ea:	b09d      	sub	sp, #116	; 0x74
 80285ec:	4607      	mov	r7, r0
 80285ee:	460d      	mov	r5, r1
 80285f0:	4614      	mov	r4, r2
 80285f2:	d50e      	bpl.n	8028612 <_svfiprintf_r+0x32>
 80285f4:	690b      	ldr	r3, [r1, #16]
 80285f6:	b963      	cbnz	r3, 8028612 <_svfiprintf_r+0x32>
 80285f8:	2140      	movs	r1, #64	; 0x40
 80285fa:	f7fc fb97 	bl	8024d2c <_malloc_r>
 80285fe:	6028      	str	r0, [r5, #0]
 8028600:	6128      	str	r0, [r5, #16]
 8028602:	b920      	cbnz	r0, 802860e <_svfiprintf_r+0x2e>
 8028604:	230c      	movs	r3, #12
 8028606:	603b      	str	r3, [r7, #0]
 8028608:	f04f 30ff 	mov.w	r0, #4294967295
 802860c:	e0d1      	b.n	80287b2 <_svfiprintf_r+0x1d2>
 802860e:	2340      	movs	r3, #64	; 0x40
 8028610:	616b      	str	r3, [r5, #20]
 8028612:	2300      	movs	r3, #0
 8028614:	9309      	str	r3, [sp, #36]	; 0x24
 8028616:	2320      	movs	r3, #32
 8028618:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802861c:	f8cd 800c 	str.w	r8, [sp, #12]
 8028620:	2330      	movs	r3, #48	; 0x30
 8028622:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 80287cc <_svfiprintf_r+0x1ec>
 8028626:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802862a:	f04f 0901 	mov.w	r9, #1
 802862e:	4623      	mov	r3, r4
 8028630:	469a      	mov	sl, r3
 8028632:	f813 2b01 	ldrb.w	r2, [r3], #1
 8028636:	b10a      	cbz	r2, 802863c <_svfiprintf_r+0x5c>
 8028638:	2a25      	cmp	r2, #37	; 0x25
 802863a:	d1f9      	bne.n	8028630 <_svfiprintf_r+0x50>
 802863c:	ebba 0b04 	subs.w	fp, sl, r4
 8028640:	d00b      	beq.n	802865a <_svfiprintf_r+0x7a>
 8028642:	465b      	mov	r3, fp
 8028644:	4622      	mov	r2, r4
 8028646:	4629      	mov	r1, r5
 8028648:	4638      	mov	r0, r7
 802864a:	f7ff ff6d 	bl	8028528 <__ssputs_r>
 802864e:	3001      	adds	r0, #1
 8028650:	f000 80aa 	beq.w	80287a8 <_svfiprintf_r+0x1c8>
 8028654:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028656:	445a      	add	r2, fp
 8028658:	9209      	str	r2, [sp, #36]	; 0x24
 802865a:	f89a 3000 	ldrb.w	r3, [sl]
 802865e:	2b00      	cmp	r3, #0
 8028660:	f000 80a2 	beq.w	80287a8 <_svfiprintf_r+0x1c8>
 8028664:	2300      	movs	r3, #0
 8028666:	f04f 32ff 	mov.w	r2, #4294967295
 802866a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802866e:	f10a 0a01 	add.w	sl, sl, #1
 8028672:	9304      	str	r3, [sp, #16]
 8028674:	9307      	str	r3, [sp, #28]
 8028676:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802867a:	931a      	str	r3, [sp, #104]	; 0x68
 802867c:	4654      	mov	r4, sl
 802867e:	2205      	movs	r2, #5
 8028680:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028684:	4851      	ldr	r0, [pc, #324]	; (80287cc <_svfiprintf_r+0x1ec>)
 8028686:	f7d7 fdc3 	bl	8000210 <memchr>
 802868a:	9a04      	ldr	r2, [sp, #16]
 802868c:	b9d8      	cbnz	r0, 80286c6 <_svfiprintf_r+0xe6>
 802868e:	06d0      	lsls	r0, r2, #27
 8028690:	bf44      	itt	mi
 8028692:	2320      	movmi	r3, #32
 8028694:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028698:	0711      	lsls	r1, r2, #28
 802869a:	bf44      	itt	mi
 802869c:	232b      	movmi	r3, #43	; 0x2b
 802869e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80286a2:	f89a 3000 	ldrb.w	r3, [sl]
 80286a6:	2b2a      	cmp	r3, #42	; 0x2a
 80286a8:	d015      	beq.n	80286d6 <_svfiprintf_r+0xf6>
 80286aa:	9a07      	ldr	r2, [sp, #28]
 80286ac:	4654      	mov	r4, sl
 80286ae:	2000      	movs	r0, #0
 80286b0:	f04f 0c0a 	mov.w	ip, #10
 80286b4:	4621      	mov	r1, r4
 80286b6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80286ba:	3b30      	subs	r3, #48	; 0x30
 80286bc:	2b09      	cmp	r3, #9
 80286be:	d94e      	bls.n	802875e <_svfiprintf_r+0x17e>
 80286c0:	b1b0      	cbz	r0, 80286f0 <_svfiprintf_r+0x110>
 80286c2:	9207      	str	r2, [sp, #28]
 80286c4:	e014      	b.n	80286f0 <_svfiprintf_r+0x110>
 80286c6:	eba0 0308 	sub.w	r3, r0, r8
 80286ca:	fa09 f303 	lsl.w	r3, r9, r3
 80286ce:	4313      	orrs	r3, r2
 80286d0:	9304      	str	r3, [sp, #16]
 80286d2:	46a2      	mov	sl, r4
 80286d4:	e7d2      	b.n	802867c <_svfiprintf_r+0x9c>
 80286d6:	9b03      	ldr	r3, [sp, #12]
 80286d8:	1d19      	adds	r1, r3, #4
 80286da:	681b      	ldr	r3, [r3, #0]
 80286dc:	9103      	str	r1, [sp, #12]
 80286de:	2b00      	cmp	r3, #0
 80286e0:	bfbb      	ittet	lt
 80286e2:	425b      	neglt	r3, r3
 80286e4:	f042 0202 	orrlt.w	r2, r2, #2
 80286e8:	9307      	strge	r3, [sp, #28]
 80286ea:	9307      	strlt	r3, [sp, #28]
 80286ec:	bfb8      	it	lt
 80286ee:	9204      	strlt	r2, [sp, #16]
 80286f0:	7823      	ldrb	r3, [r4, #0]
 80286f2:	2b2e      	cmp	r3, #46	; 0x2e
 80286f4:	d10c      	bne.n	8028710 <_svfiprintf_r+0x130>
 80286f6:	7863      	ldrb	r3, [r4, #1]
 80286f8:	2b2a      	cmp	r3, #42	; 0x2a
 80286fa:	d135      	bne.n	8028768 <_svfiprintf_r+0x188>
 80286fc:	9b03      	ldr	r3, [sp, #12]
 80286fe:	1d1a      	adds	r2, r3, #4
 8028700:	681b      	ldr	r3, [r3, #0]
 8028702:	9203      	str	r2, [sp, #12]
 8028704:	2b00      	cmp	r3, #0
 8028706:	bfb8      	it	lt
 8028708:	f04f 33ff 	movlt.w	r3, #4294967295
 802870c:	3402      	adds	r4, #2
 802870e:	9305      	str	r3, [sp, #20]
 8028710:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 80287dc <_svfiprintf_r+0x1fc>
 8028714:	7821      	ldrb	r1, [r4, #0]
 8028716:	2203      	movs	r2, #3
 8028718:	4650      	mov	r0, sl
 802871a:	f7d7 fd79 	bl	8000210 <memchr>
 802871e:	b140      	cbz	r0, 8028732 <_svfiprintf_r+0x152>
 8028720:	2340      	movs	r3, #64	; 0x40
 8028722:	eba0 000a 	sub.w	r0, r0, sl
 8028726:	fa03 f000 	lsl.w	r0, r3, r0
 802872a:	9b04      	ldr	r3, [sp, #16]
 802872c:	4303      	orrs	r3, r0
 802872e:	3401      	adds	r4, #1
 8028730:	9304      	str	r3, [sp, #16]
 8028732:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028736:	4826      	ldr	r0, [pc, #152]	; (80287d0 <_svfiprintf_r+0x1f0>)
 8028738:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802873c:	2206      	movs	r2, #6
 802873e:	f7d7 fd67 	bl	8000210 <memchr>
 8028742:	2800      	cmp	r0, #0
 8028744:	d038      	beq.n	80287b8 <_svfiprintf_r+0x1d8>
 8028746:	4b23      	ldr	r3, [pc, #140]	; (80287d4 <_svfiprintf_r+0x1f4>)
 8028748:	bb1b      	cbnz	r3, 8028792 <_svfiprintf_r+0x1b2>
 802874a:	9b03      	ldr	r3, [sp, #12]
 802874c:	3307      	adds	r3, #7
 802874e:	f023 0307 	bic.w	r3, r3, #7
 8028752:	3308      	adds	r3, #8
 8028754:	9303      	str	r3, [sp, #12]
 8028756:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028758:	4433      	add	r3, r6
 802875a:	9309      	str	r3, [sp, #36]	; 0x24
 802875c:	e767      	b.n	802862e <_svfiprintf_r+0x4e>
 802875e:	fb0c 3202 	mla	r2, ip, r2, r3
 8028762:	460c      	mov	r4, r1
 8028764:	2001      	movs	r0, #1
 8028766:	e7a5      	b.n	80286b4 <_svfiprintf_r+0xd4>
 8028768:	2300      	movs	r3, #0
 802876a:	3401      	adds	r4, #1
 802876c:	9305      	str	r3, [sp, #20]
 802876e:	4619      	mov	r1, r3
 8028770:	f04f 0c0a 	mov.w	ip, #10
 8028774:	4620      	mov	r0, r4
 8028776:	f810 2b01 	ldrb.w	r2, [r0], #1
 802877a:	3a30      	subs	r2, #48	; 0x30
 802877c:	2a09      	cmp	r2, #9
 802877e:	d903      	bls.n	8028788 <_svfiprintf_r+0x1a8>
 8028780:	2b00      	cmp	r3, #0
 8028782:	d0c5      	beq.n	8028710 <_svfiprintf_r+0x130>
 8028784:	9105      	str	r1, [sp, #20]
 8028786:	e7c3      	b.n	8028710 <_svfiprintf_r+0x130>
 8028788:	fb0c 2101 	mla	r1, ip, r1, r2
 802878c:	4604      	mov	r4, r0
 802878e:	2301      	movs	r3, #1
 8028790:	e7f0      	b.n	8028774 <_svfiprintf_r+0x194>
 8028792:	ab03      	add	r3, sp, #12
 8028794:	9300      	str	r3, [sp, #0]
 8028796:	462a      	mov	r2, r5
 8028798:	4b0f      	ldr	r3, [pc, #60]	; (80287d8 <_svfiprintf_r+0x1f8>)
 802879a:	a904      	add	r1, sp, #16
 802879c:	4638      	mov	r0, r7
 802879e:	f7fc fbbf 	bl	8024f20 <_printf_float>
 80287a2:	1c42      	adds	r2, r0, #1
 80287a4:	4606      	mov	r6, r0
 80287a6:	d1d6      	bne.n	8028756 <_svfiprintf_r+0x176>
 80287a8:	89ab      	ldrh	r3, [r5, #12]
 80287aa:	065b      	lsls	r3, r3, #25
 80287ac:	f53f af2c 	bmi.w	8028608 <_svfiprintf_r+0x28>
 80287b0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80287b2:	b01d      	add	sp, #116	; 0x74
 80287b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80287b8:	ab03      	add	r3, sp, #12
 80287ba:	9300      	str	r3, [sp, #0]
 80287bc:	462a      	mov	r2, r5
 80287be:	4b06      	ldr	r3, [pc, #24]	; (80287d8 <_svfiprintf_r+0x1f8>)
 80287c0:	a904      	add	r1, sp, #16
 80287c2:	4638      	mov	r0, r7
 80287c4:	f7fc fe50 	bl	8025468 <_printf_i>
 80287c8:	e7eb      	b.n	80287a2 <_svfiprintf_r+0x1c2>
 80287ca:	bf00      	nop
 80287cc:	0802a5dc 	.word	0x0802a5dc
 80287d0:	0802a5e6 	.word	0x0802a5e6
 80287d4:	08024f21 	.word	0x08024f21
 80287d8:	08028529 	.word	0x08028529
 80287dc:	0802a5e2 	.word	0x0802a5e2

080287e0 <nanf>:
 80287e0:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80287e8 <nanf+0x8>
 80287e4:	4770      	bx	lr
 80287e6:	bf00      	nop
 80287e8:	7fc00000 	.word	0x7fc00000

080287ec <strncmp>:
 80287ec:	b510      	push	{r4, lr}
 80287ee:	b16a      	cbz	r2, 802880c <strncmp+0x20>
 80287f0:	3901      	subs	r1, #1
 80287f2:	1884      	adds	r4, r0, r2
 80287f4:	f810 3b01 	ldrb.w	r3, [r0], #1
 80287f8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80287fc:	4293      	cmp	r3, r2
 80287fe:	d103      	bne.n	8028808 <strncmp+0x1c>
 8028800:	42a0      	cmp	r0, r4
 8028802:	d001      	beq.n	8028808 <strncmp+0x1c>
 8028804:	2b00      	cmp	r3, #0
 8028806:	d1f5      	bne.n	80287f4 <strncmp+0x8>
 8028808:	1a98      	subs	r0, r3, r2
 802880a:	bd10      	pop	{r4, pc}
 802880c:	4610      	mov	r0, r2
 802880e:	e7fc      	b.n	802880a <strncmp+0x1e>

08028810 <__ascii_wctomb>:
 8028810:	b149      	cbz	r1, 8028826 <__ascii_wctomb+0x16>
 8028812:	2aff      	cmp	r2, #255	; 0xff
 8028814:	bf85      	ittet	hi
 8028816:	238a      	movhi	r3, #138	; 0x8a
 8028818:	6003      	strhi	r3, [r0, #0]
 802881a:	700a      	strbls	r2, [r1, #0]
 802881c:	f04f 30ff 	movhi.w	r0, #4294967295
 8028820:	bf98      	it	ls
 8028822:	2001      	movls	r0, #1
 8028824:	4770      	bx	lr
 8028826:	4608      	mov	r0, r1
 8028828:	4770      	bx	lr
	...

0802882c <__assert_func>:
 802882c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802882e:	4614      	mov	r4, r2
 8028830:	461a      	mov	r2, r3
 8028832:	4b09      	ldr	r3, [pc, #36]	; (8028858 <__assert_func+0x2c>)
 8028834:	681b      	ldr	r3, [r3, #0]
 8028836:	4605      	mov	r5, r0
 8028838:	68d8      	ldr	r0, [r3, #12]
 802883a:	b14c      	cbz	r4, 8028850 <__assert_func+0x24>
 802883c:	4b07      	ldr	r3, [pc, #28]	; (802885c <__assert_func+0x30>)
 802883e:	9100      	str	r1, [sp, #0]
 8028840:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8028844:	4906      	ldr	r1, [pc, #24]	; (8028860 <__assert_func+0x34>)
 8028846:	462b      	mov	r3, r5
 8028848:	f000 f80e 	bl	8028868 <fiprintf>
 802884c:	f7fc f966 	bl	8024b1c <abort>
 8028850:	4b04      	ldr	r3, [pc, #16]	; (8028864 <__assert_func+0x38>)
 8028852:	461c      	mov	r4, r3
 8028854:	e7f3      	b.n	802883e <__assert_func+0x12>
 8028856:	bf00      	nop
 8028858:	20000010 	.word	0x20000010
 802885c:	0802a5ed 	.word	0x0802a5ed
 8028860:	0802a5fa 	.word	0x0802a5fa
 8028864:	0802a628 	.word	0x0802a628

08028868 <fiprintf>:
 8028868:	b40e      	push	{r1, r2, r3}
 802886a:	b503      	push	{r0, r1, lr}
 802886c:	4601      	mov	r1, r0
 802886e:	ab03      	add	r3, sp, #12
 8028870:	4805      	ldr	r0, [pc, #20]	; (8028888 <fiprintf+0x20>)
 8028872:	f853 2b04 	ldr.w	r2, [r3], #4
 8028876:	6800      	ldr	r0, [r0, #0]
 8028878:	9301      	str	r3, [sp, #4]
 802887a:	f000 f857 	bl	802892c <_vfiprintf_r>
 802887e:	b002      	add	sp, #8
 8028880:	f85d eb04 	ldr.w	lr, [sp], #4
 8028884:	b003      	add	sp, #12
 8028886:	4770      	bx	lr
 8028888:	20000010 	.word	0x20000010

0802888c <_realloc_r>:
 802888c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802888e:	4607      	mov	r7, r0
 8028890:	4614      	mov	r4, r2
 8028892:	460e      	mov	r6, r1
 8028894:	b921      	cbnz	r1, 80288a0 <_realloc_r+0x14>
 8028896:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 802889a:	4611      	mov	r1, r2
 802889c:	f7fc ba46 	b.w	8024d2c <_malloc_r>
 80288a0:	b922      	cbnz	r2, 80288ac <_realloc_r+0x20>
 80288a2:	f7fc f9f3 	bl	8024c8c <_free_r>
 80288a6:	4625      	mov	r5, r4
 80288a8:	4628      	mov	r0, r5
 80288aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80288ac:	f000 fc4a 	bl	8029144 <_malloc_usable_size_r>
 80288b0:	42a0      	cmp	r0, r4
 80288b2:	d20f      	bcs.n	80288d4 <_realloc_r+0x48>
 80288b4:	4621      	mov	r1, r4
 80288b6:	4638      	mov	r0, r7
 80288b8:	f7fc fa38 	bl	8024d2c <_malloc_r>
 80288bc:	4605      	mov	r5, r0
 80288be:	2800      	cmp	r0, #0
 80288c0:	d0f2      	beq.n	80288a8 <_realloc_r+0x1c>
 80288c2:	4631      	mov	r1, r6
 80288c4:	4622      	mov	r2, r4
 80288c6:	f7fc f9b1 	bl	8024c2c <memcpy>
 80288ca:	4631      	mov	r1, r6
 80288cc:	4638      	mov	r0, r7
 80288ce:	f7fc f9dd 	bl	8024c8c <_free_r>
 80288d2:	e7e9      	b.n	80288a8 <_realloc_r+0x1c>
 80288d4:	4635      	mov	r5, r6
 80288d6:	e7e7      	b.n	80288a8 <_realloc_r+0x1c>

080288d8 <__sfputc_r>:
 80288d8:	6893      	ldr	r3, [r2, #8]
 80288da:	3b01      	subs	r3, #1
 80288dc:	2b00      	cmp	r3, #0
 80288de:	b410      	push	{r4}
 80288e0:	6093      	str	r3, [r2, #8]
 80288e2:	da08      	bge.n	80288f6 <__sfputc_r+0x1e>
 80288e4:	6994      	ldr	r4, [r2, #24]
 80288e6:	42a3      	cmp	r3, r4
 80288e8:	db01      	blt.n	80288ee <__sfputc_r+0x16>
 80288ea:	290a      	cmp	r1, #10
 80288ec:	d103      	bne.n	80288f6 <__sfputc_r+0x1e>
 80288ee:	f85d 4b04 	ldr.w	r4, [sp], #4
 80288f2:	f000 b94b 	b.w	8028b8c <__swbuf_r>
 80288f6:	6813      	ldr	r3, [r2, #0]
 80288f8:	1c58      	adds	r0, r3, #1
 80288fa:	6010      	str	r0, [r2, #0]
 80288fc:	7019      	strb	r1, [r3, #0]
 80288fe:	4608      	mov	r0, r1
 8028900:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028904:	4770      	bx	lr

08028906 <__sfputs_r>:
 8028906:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028908:	4606      	mov	r6, r0
 802890a:	460f      	mov	r7, r1
 802890c:	4614      	mov	r4, r2
 802890e:	18d5      	adds	r5, r2, r3
 8028910:	42ac      	cmp	r4, r5
 8028912:	d101      	bne.n	8028918 <__sfputs_r+0x12>
 8028914:	2000      	movs	r0, #0
 8028916:	e007      	b.n	8028928 <__sfputs_r+0x22>
 8028918:	f814 1b01 	ldrb.w	r1, [r4], #1
 802891c:	463a      	mov	r2, r7
 802891e:	4630      	mov	r0, r6
 8028920:	f7ff ffda 	bl	80288d8 <__sfputc_r>
 8028924:	1c43      	adds	r3, r0, #1
 8028926:	d1f3      	bne.n	8028910 <__sfputs_r+0xa>
 8028928:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802892c <_vfiprintf_r>:
 802892c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028930:	460d      	mov	r5, r1
 8028932:	b09d      	sub	sp, #116	; 0x74
 8028934:	4614      	mov	r4, r2
 8028936:	4698      	mov	r8, r3
 8028938:	4606      	mov	r6, r0
 802893a:	b118      	cbz	r0, 8028944 <_vfiprintf_r+0x18>
 802893c:	6983      	ldr	r3, [r0, #24]
 802893e:	b90b      	cbnz	r3, 8028944 <_vfiprintf_r+0x18>
 8028940:	f000 fafe 	bl	8028f40 <__sinit>
 8028944:	4b89      	ldr	r3, [pc, #548]	; (8028b6c <_vfiprintf_r+0x240>)
 8028946:	429d      	cmp	r5, r3
 8028948:	d11b      	bne.n	8028982 <_vfiprintf_r+0x56>
 802894a:	6875      	ldr	r5, [r6, #4]
 802894c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802894e:	07d9      	lsls	r1, r3, #31
 8028950:	d405      	bmi.n	802895e <_vfiprintf_r+0x32>
 8028952:	89ab      	ldrh	r3, [r5, #12]
 8028954:	059a      	lsls	r2, r3, #22
 8028956:	d402      	bmi.n	802895e <_vfiprintf_r+0x32>
 8028958:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802895a:	f7ff f8fa 	bl	8027b52 <__retarget_lock_acquire_recursive>
 802895e:	89ab      	ldrh	r3, [r5, #12]
 8028960:	071b      	lsls	r3, r3, #28
 8028962:	d501      	bpl.n	8028968 <_vfiprintf_r+0x3c>
 8028964:	692b      	ldr	r3, [r5, #16]
 8028966:	b9eb      	cbnz	r3, 80289a4 <_vfiprintf_r+0x78>
 8028968:	4629      	mov	r1, r5
 802896a:	4630      	mov	r0, r6
 802896c:	f000 f960 	bl	8028c30 <__swsetup_r>
 8028970:	b1c0      	cbz	r0, 80289a4 <_vfiprintf_r+0x78>
 8028972:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028974:	07dc      	lsls	r4, r3, #31
 8028976:	d50e      	bpl.n	8028996 <_vfiprintf_r+0x6a>
 8028978:	f04f 30ff 	mov.w	r0, #4294967295
 802897c:	b01d      	add	sp, #116	; 0x74
 802897e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028982:	4b7b      	ldr	r3, [pc, #492]	; (8028b70 <_vfiprintf_r+0x244>)
 8028984:	429d      	cmp	r5, r3
 8028986:	d101      	bne.n	802898c <_vfiprintf_r+0x60>
 8028988:	68b5      	ldr	r5, [r6, #8]
 802898a:	e7df      	b.n	802894c <_vfiprintf_r+0x20>
 802898c:	4b79      	ldr	r3, [pc, #484]	; (8028b74 <_vfiprintf_r+0x248>)
 802898e:	429d      	cmp	r5, r3
 8028990:	bf08      	it	eq
 8028992:	68f5      	ldreq	r5, [r6, #12]
 8028994:	e7da      	b.n	802894c <_vfiprintf_r+0x20>
 8028996:	89ab      	ldrh	r3, [r5, #12]
 8028998:	0598      	lsls	r0, r3, #22
 802899a:	d4ed      	bmi.n	8028978 <_vfiprintf_r+0x4c>
 802899c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802899e:	f7ff f8da 	bl	8027b56 <__retarget_lock_release_recursive>
 80289a2:	e7e9      	b.n	8028978 <_vfiprintf_r+0x4c>
 80289a4:	2300      	movs	r3, #0
 80289a6:	9309      	str	r3, [sp, #36]	; 0x24
 80289a8:	2320      	movs	r3, #32
 80289aa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80289ae:	f8cd 800c 	str.w	r8, [sp, #12]
 80289b2:	2330      	movs	r3, #48	; 0x30
 80289b4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8028b78 <_vfiprintf_r+0x24c>
 80289b8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80289bc:	f04f 0901 	mov.w	r9, #1
 80289c0:	4623      	mov	r3, r4
 80289c2:	469a      	mov	sl, r3
 80289c4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80289c8:	b10a      	cbz	r2, 80289ce <_vfiprintf_r+0xa2>
 80289ca:	2a25      	cmp	r2, #37	; 0x25
 80289cc:	d1f9      	bne.n	80289c2 <_vfiprintf_r+0x96>
 80289ce:	ebba 0b04 	subs.w	fp, sl, r4
 80289d2:	d00b      	beq.n	80289ec <_vfiprintf_r+0xc0>
 80289d4:	465b      	mov	r3, fp
 80289d6:	4622      	mov	r2, r4
 80289d8:	4629      	mov	r1, r5
 80289da:	4630      	mov	r0, r6
 80289dc:	f7ff ff93 	bl	8028906 <__sfputs_r>
 80289e0:	3001      	adds	r0, #1
 80289e2:	f000 80aa 	beq.w	8028b3a <_vfiprintf_r+0x20e>
 80289e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80289e8:	445a      	add	r2, fp
 80289ea:	9209      	str	r2, [sp, #36]	; 0x24
 80289ec:	f89a 3000 	ldrb.w	r3, [sl]
 80289f0:	2b00      	cmp	r3, #0
 80289f2:	f000 80a2 	beq.w	8028b3a <_vfiprintf_r+0x20e>
 80289f6:	2300      	movs	r3, #0
 80289f8:	f04f 32ff 	mov.w	r2, #4294967295
 80289fc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8028a00:	f10a 0a01 	add.w	sl, sl, #1
 8028a04:	9304      	str	r3, [sp, #16]
 8028a06:	9307      	str	r3, [sp, #28]
 8028a08:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8028a0c:	931a      	str	r3, [sp, #104]	; 0x68
 8028a0e:	4654      	mov	r4, sl
 8028a10:	2205      	movs	r2, #5
 8028a12:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028a16:	4858      	ldr	r0, [pc, #352]	; (8028b78 <_vfiprintf_r+0x24c>)
 8028a18:	f7d7 fbfa 	bl	8000210 <memchr>
 8028a1c:	9a04      	ldr	r2, [sp, #16]
 8028a1e:	b9d8      	cbnz	r0, 8028a58 <_vfiprintf_r+0x12c>
 8028a20:	06d1      	lsls	r1, r2, #27
 8028a22:	bf44      	itt	mi
 8028a24:	2320      	movmi	r3, #32
 8028a26:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028a2a:	0713      	lsls	r3, r2, #28
 8028a2c:	bf44      	itt	mi
 8028a2e:	232b      	movmi	r3, #43	; 0x2b
 8028a30:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8028a34:	f89a 3000 	ldrb.w	r3, [sl]
 8028a38:	2b2a      	cmp	r3, #42	; 0x2a
 8028a3a:	d015      	beq.n	8028a68 <_vfiprintf_r+0x13c>
 8028a3c:	9a07      	ldr	r2, [sp, #28]
 8028a3e:	4654      	mov	r4, sl
 8028a40:	2000      	movs	r0, #0
 8028a42:	f04f 0c0a 	mov.w	ip, #10
 8028a46:	4621      	mov	r1, r4
 8028a48:	f811 3b01 	ldrb.w	r3, [r1], #1
 8028a4c:	3b30      	subs	r3, #48	; 0x30
 8028a4e:	2b09      	cmp	r3, #9
 8028a50:	d94e      	bls.n	8028af0 <_vfiprintf_r+0x1c4>
 8028a52:	b1b0      	cbz	r0, 8028a82 <_vfiprintf_r+0x156>
 8028a54:	9207      	str	r2, [sp, #28]
 8028a56:	e014      	b.n	8028a82 <_vfiprintf_r+0x156>
 8028a58:	eba0 0308 	sub.w	r3, r0, r8
 8028a5c:	fa09 f303 	lsl.w	r3, r9, r3
 8028a60:	4313      	orrs	r3, r2
 8028a62:	9304      	str	r3, [sp, #16]
 8028a64:	46a2      	mov	sl, r4
 8028a66:	e7d2      	b.n	8028a0e <_vfiprintf_r+0xe2>
 8028a68:	9b03      	ldr	r3, [sp, #12]
 8028a6a:	1d19      	adds	r1, r3, #4
 8028a6c:	681b      	ldr	r3, [r3, #0]
 8028a6e:	9103      	str	r1, [sp, #12]
 8028a70:	2b00      	cmp	r3, #0
 8028a72:	bfbb      	ittet	lt
 8028a74:	425b      	neglt	r3, r3
 8028a76:	f042 0202 	orrlt.w	r2, r2, #2
 8028a7a:	9307      	strge	r3, [sp, #28]
 8028a7c:	9307      	strlt	r3, [sp, #28]
 8028a7e:	bfb8      	it	lt
 8028a80:	9204      	strlt	r2, [sp, #16]
 8028a82:	7823      	ldrb	r3, [r4, #0]
 8028a84:	2b2e      	cmp	r3, #46	; 0x2e
 8028a86:	d10c      	bne.n	8028aa2 <_vfiprintf_r+0x176>
 8028a88:	7863      	ldrb	r3, [r4, #1]
 8028a8a:	2b2a      	cmp	r3, #42	; 0x2a
 8028a8c:	d135      	bne.n	8028afa <_vfiprintf_r+0x1ce>
 8028a8e:	9b03      	ldr	r3, [sp, #12]
 8028a90:	1d1a      	adds	r2, r3, #4
 8028a92:	681b      	ldr	r3, [r3, #0]
 8028a94:	9203      	str	r2, [sp, #12]
 8028a96:	2b00      	cmp	r3, #0
 8028a98:	bfb8      	it	lt
 8028a9a:	f04f 33ff 	movlt.w	r3, #4294967295
 8028a9e:	3402      	adds	r4, #2
 8028aa0:	9305      	str	r3, [sp, #20]
 8028aa2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8028b88 <_vfiprintf_r+0x25c>
 8028aa6:	7821      	ldrb	r1, [r4, #0]
 8028aa8:	2203      	movs	r2, #3
 8028aaa:	4650      	mov	r0, sl
 8028aac:	f7d7 fbb0 	bl	8000210 <memchr>
 8028ab0:	b140      	cbz	r0, 8028ac4 <_vfiprintf_r+0x198>
 8028ab2:	2340      	movs	r3, #64	; 0x40
 8028ab4:	eba0 000a 	sub.w	r0, r0, sl
 8028ab8:	fa03 f000 	lsl.w	r0, r3, r0
 8028abc:	9b04      	ldr	r3, [sp, #16]
 8028abe:	4303      	orrs	r3, r0
 8028ac0:	3401      	adds	r4, #1
 8028ac2:	9304      	str	r3, [sp, #16]
 8028ac4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028ac8:	482c      	ldr	r0, [pc, #176]	; (8028b7c <_vfiprintf_r+0x250>)
 8028aca:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8028ace:	2206      	movs	r2, #6
 8028ad0:	f7d7 fb9e 	bl	8000210 <memchr>
 8028ad4:	2800      	cmp	r0, #0
 8028ad6:	d03f      	beq.n	8028b58 <_vfiprintf_r+0x22c>
 8028ad8:	4b29      	ldr	r3, [pc, #164]	; (8028b80 <_vfiprintf_r+0x254>)
 8028ada:	bb1b      	cbnz	r3, 8028b24 <_vfiprintf_r+0x1f8>
 8028adc:	9b03      	ldr	r3, [sp, #12]
 8028ade:	3307      	adds	r3, #7
 8028ae0:	f023 0307 	bic.w	r3, r3, #7
 8028ae4:	3308      	adds	r3, #8
 8028ae6:	9303      	str	r3, [sp, #12]
 8028ae8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028aea:	443b      	add	r3, r7
 8028aec:	9309      	str	r3, [sp, #36]	; 0x24
 8028aee:	e767      	b.n	80289c0 <_vfiprintf_r+0x94>
 8028af0:	fb0c 3202 	mla	r2, ip, r2, r3
 8028af4:	460c      	mov	r4, r1
 8028af6:	2001      	movs	r0, #1
 8028af8:	e7a5      	b.n	8028a46 <_vfiprintf_r+0x11a>
 8028afa:	2300      	movs	r3, #0
 8028afc:	3401      	adds	r4, #1
 8028afe:	9305      	str	r3, [sp, #20]
 8028b00:	4619      	mov	r1, r3
 8028b02:	f04f 0c0a 	mov.w	ip, #10
 8028b06:	4620      	mov	r0, r4
 8028b08:	f810 2b01 	ldrb.w	r2, [r0], #1
 8028b0c:	3a30      	subs	r2, #48	; 0x30
 8028b0e:	2a09      	cmp	r2, #9
 8028b10:	d903      	bls.n	8028b1a <_vfiprintf_r+0x1ee>
 8028b12:	2b00      	cmp	r3, #0
 8028b14:	d0c5      	beq.n	8028aa2 <_vfiprintf_r+0x176>
 8028b16:	9105      	str	r1, [sp, #20]
 8028b18:	e7c3      	b.n	8028aa2 <_vfiprintf_r+0x176>
 8028b1a:	fb0c 2101 	mla	r1, ip, r1, r2
 8028b1e:	4604      	mov	r4, r0
 8028b20:	2301      	movs	r3, #1
 8028b22:	e7f0      	b.n	8028b06 <_vfiprintf_r+0x1da>
 8028b24:	ab03      	add	r3, sp, #12
 8028b26:	9300      	str	r3, [sp, #0]
 8028b28:	462a      	mov	r2, r5
 8028b2a:	4b16      	ldr	r3, [pc, #88]	; (8028b84 <_vfiprintf_r+0x258>)
 8028b2c:	a904      	add	r1, sp, #16
 8028b2e:	4630      	mov	r0, r6
 8028b30:	f7fc f9f6 	bl	8024f20 <_printf_float>
 8028b34:	4607      	mov	r7, r0
 8028b36:	1c78      	adds	r0, r7, #1
 8028b38:	d1d6      	bne.n	8028ae8 <_vfiprintf_r+0x1bc>
 8028b3a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8028b3c:	07d9      	lsls	r1, r3, #31
 8028b3e:	d405      	bmi.n	8028b4c <_vfiprintf_r+0x220>
 8028b40:	89ab      	ldrh	r3, [r5, #12]
 8028b42:	059a      	lsls	r2, r3, #22
 8028b44:	d402      	bmi.n	8028b4c <_vfiprintf_r+0x220>
 8028b46:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8028b48:	f7ff f805 	bl	8027b56 <__retarget_lock_release_recursive>
 8028b4c:	89ab      	ldrh	r3, [r5, #12]
 8028b4e:	065b      	lsls	r3, r3, #25
 8028b50:	f53f af12 	bmi.w	8028978 <_vfiprintf_r+0x4c>
 8028b54:	9809      	ldr	r0, [sp, #36]	; 0x24
 8028b56:	e711      	b.n	802897c <_vfiprintf_r+0x50>
 8028b58:	ab03      	add	r3, sp, #12
 8028b5a:	9300      	str	r3, [sp, #0]
 8028b5c:	462a      	mov	r2, r5
 8028b5e:	4b09      	ldr	r3, [pc, #36]	; (8028b84 <_vfiprintf_r+0x258>)
 8028b60:	a904      	add	r1, sp, #16
 8028b62:	4630      	mov	r0, r6
 8028b64:	f7fc fc80 	bl	8025468 <_printf_i>
 8028b68:	e7e4      	b.n	8028b34 <_vfiprintf_r+0x208>
 8028b6a:	bf00      	nop
 8028b6c:	0802a64c 	.word	0x0802a64c
 8028b70:	0802a66c 	.word	0x0802a66c
 8028b74:	0802a62c 	.word	0x0802a62c
 8028b78:	0802a5dc 	.word	0x0802a5dc
 8028b7c:	0802a5e6 	.word	0x0802a5e6
 8028b80:	08024f21 	.word	0x08024f21
 8028b84:	08028907 	.word	0x08028907
 8028b88:	0802a5e2 	.word	0x0802a5e2

08028b8c <__swbuf_r>:
 8028b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028b8e:	460e      	mov	r6, r1
 8028b90:	4614      	mov	r4, r2
 8028b92:	4605      	mov	r5, r0
 8028b94:	b118      	cbz	r0, 8028b9e <__swbuf_r+0x12>
 8028b96:	6983      	ldr	r3, [r0, #24]
 8028b98:	b90b      	cbnz	r3, 8028b9e <__swbuf_r+0x12>
 8028b9a:	f000 f9d1 	bl	8028f40 <__sinit>
 8028b9e:	4b21      	ldr	r3, [pc, #132]	; (8028c24 <__swbuf_r+0x98>)
 8028ba0:	429c      	cmp	r4, r3
 8028ba2:	d12b      	bne.n	8028bfc <__swbuf_r+0x70>
 8028ba4:	686c      	ldr	r4, [r5, #4]
 8028ba6:	69a3      	ldr	r3, [r4, #24]
 8028ba8:	60a3      	str	r3, [r4, #8]
 8028baa:	89a3      	ldrh	r3, [r4, #12]
 8028bac:	071a      	lsls	r2, r3, #28
 8028bae:	d52f      	bpl.n	8028c10 <__swbuf_r+0x84>
 8028bb0:	6923      	ldr	r3, [r4, #16]
 8028bb2:	b36b      	cbz	r3, 8028c10 <__swbuf_r+0x84>
 8028bb4:	6923      	ldr	r3, [r4, #16]
 8028bb6:	6820      	ldr	r0, [r4, #0]
 8028bb8:	1ac0      	subs	r0, r0, r3
 8028bba:	6963      	ldr	r3, [r4, #20]
 8028bbc:	b2f6      	uxtb	r6, r6
 8028bbe:	4283      	cmp	r3, r0
 8028bc0:	4637      	mov	r7, r6
 8028bc2:	dc04      	bgt.n	8028bce <__swbuf_r+0x42>
 8028bc4:	4621      	mov	r1, r4
 8028bc6:	4628      	mov	r0, r5
 8028bc8:	f000 f926 	bl	8028e18 <_fflush_r>
 8028bcc:	bb30      	cbnz	r0, 8028c1c <__swbuf_r+0x90>
 8028bce:	68a3      	ldr	r3, [r4, #8]
 8028bd0:	3b01      	subs	r3, #1
 8028bd2:	60a3      	str	r3, [r4, #8]
 8028bd4:	6823      	ldr	r3, [r4, #0]
 8028bd6:	1c5a      	adds	r2, r3, #1
 8028bd8:	6022      	str	r2, [r4, #0]
 8028bda:	701e      	strb	r6, [r3, #0]
 8028bdc:	6963      	ldr	r3, [r4, #20]
 8028bde:	3001      	adds	r0, #1
 8028be0:	4283      	cmp	r3, r0
 8028be2:	d004      	beq.n	8028bee <__swbuf_r+0x62>
 8028be4:	89a3      	ldrh	r3, [r4, #12]
 8028be6:	07db      	lsls	r3, r3, #31
 8028be8:	d506      	bpl.n	8028bf8 <__swbuf_r+0x6c>
 8028bea:	2e0a      	cmp	r6, #10
 8028bec:	d104      	bne.n	8028bf8 <__swbuf_r+0x6c>
 8028bee:	4621      	mov	r1, r4
 8028bf0:	4628      	mov	r0, r5
 8028bf2:	f000 f911 	bl	8028e18 <_fflush_r>
 8028bf6:	b988      	cbnz	r0, 8028c1c <__swbuf_r+0x90>
 8028bf8:	4638      	mov	r0, r7
 8028bfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028bfc:	4b0a      	ldr	r3, [pc, #40]	; (8028c28 <__swbuf_r+0x9c>)
 8028bfe:	429c      	cmp	r4, r3
 8028c00:	d101      	bne.n	8028c06 <__swbuf_r+0x7a>
 8028c02:	68ac      	ldr	r4, [r5, #8]
 8028c04:	e7cf      	b.n	8028ba6 <__swbuf_r+0x1a>
 8028c06:	4b09      	ldr	r3, [pc, #36]	; (8028c2c <__swbuf_r+0xa0>)
 8028c08:	429c      	cmp	r4, r3
 8028c0a:	bf08      	it	eq
 8028c0c:	68ec      	ldreq	r4, [r5, #12]
 8028c0e:	e7ca      	b.n	8028ba6 <__swbuf_r+0x1a>
 8028c10:	4621      	mov	r1, r4
 8028c12:	4628      	mov	r0, r5
 8028c14:	f000 f80c 	bl	8028c30 <__swsetup_r>
 8028c18:	2800      	cmp	r0, #0
 8028c1a:	d0cb      	beq.n	8028bb4 <__swbuf_r+0x28>
 8028c1c:	f04f 37ff 	mov.w	r7, #4294967295
 8028c20:	e7ea      	b.n	8028bf8 <__swbuf_r+0x6c>
 8028c22:	bf00      	nop
 8028c24:	0802a64c 	.word	0x0802a64c
 8028c28:	0802a66c 	.word	0x0802a66c
 8028c2c:	0802a62c 	.word	0x0802a62c

08028c30 <__swsetup_r>:
 8028c30:	4b32      	ldr	r3, [pc, #200]	; (8028cfc <__swsetup_r+0xcc>)
 8028c32:	b570      	push	{r4, r5, r6, lr}
 8028c34:	681d      	ldr	r5, [r3, #0]
 8028c36:	4606      	mov	r6, r0
 8028c38:	460c      	mov	r4, r1
 8028c3a:	b125      	cbz	r5, 8028c46 <__swsetup_r+0x16>
 8028c3c:	69ab      	ldr	r3, [r5, #24]
 8028c3e:	b913      	cbnz	r3, 8028c46 <__swsetup_r+0x16>
 8028c40:	4628      	mov	r0, r5
 8028c42:	f000 f97d 	bl	8028f40 <__sinit>
 8028c46:	4b2e      	ldr	r3, [pc, #184]	; (8028d00 <__swsetup_r+0xd0>)
 8028c48:	429c      	cmp	r4, r3
 8028c4a:	d10f      	bne.n	8028c6c <__swsetup_r+0x3c>
 8028c4c:	686c      	ldr	r4, [r5, #4]
 8028c4e:	89a3      	ldrh	r3, [r4, #12]
 8028c50:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028c54:	0719      	lsls	r1, r3, #28
 8028c56:	d42c      	bmi.n	8028cb2 <__swsetup_r+0x82>
 8028c58:	06dd      	lsls	r5, r3, #27
 8028c5a:	d411      	bmi.n	8028c80 <__swsetup_r+0x50>
 8028c5c:	2309      	movs	r3, #9
 8028c5e:	6033      	str	r3, [r6, #0]
 8028c60:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8028c64:	81a3      	strh	r3, [r4, #12]
 8028c66:	f04f 30ff 	mov.w	r0, #4294967295
 8028c6a:	e03e      	b.n	8028cea <__swsetup_r+0xba>
 8028c6c:	4b25      	ldr	r3, [pc, #148]	; (8028d04 <__swsetup_r+0xd4>)
 8028c6e:	429c      	cmp	r4, r3
 8028c70:	d101      	bne.n	8028c76 <__swsetup_r+0x46>
 8028c72:	68ac      	ldr	r4, [r5, #8]
 8028c74:	e7eb      	b.n	8028c4e <__swsetup_r+0x1e>
 8028c76:	4b24      	ldr	r3, [pc, #144]	; (8028d08 <__swsetup_r+0xd8>)
 8028c78:	429c      	cmp	r4, r3
 8028c7a:	bf08      	it	eq
 8028c7c:	68ec      	ldreq	r4, [r5, #12]
 8028c7e:	e7e6      	b.n	8028c4e <__swsetup_r+0x1e>
 8028c80:	0758      	lsls	r0, r3, #29
 8028c82:	d512      	bpl.n	8028caa <__swsetup_r+0x7a>
 8028c84:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028c86:	b141      	cbz	r1, 8028c9a <__swsetup_r+0x6a>
 8028c88:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028c8c:	4299      	cmp	r1, r3
 8028c8e:	d002      	beq.n	8028c96 <__swsetup_r+0x66>
 8028c90:	4630      	mov	r0, r6
 8028c92:	f7fb fffb 	bl	8024c8c <_free_r>
 8028c96:	2300      	movs	r3, #0
 8028c98:	6363      	str	r3, [r4, #52]	; 0x34
 8028c9a:	89a3      	ldrh	r3, [r4, #12]
 8028c9c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8028ca0:	81a3      	strh	r3, [r4, #12]
 8028ca2:	2300      	movs	r3, #0
 8028ca4:	6063      	str	r3, [r4, #4]
 8028ca6:	6923      	ldr	r3, [r4, #16]
 8028ca8:	6023      	str	r3, [r4, #0]
 8028caa:	89a3      	ldrh	r3, [r4, #12]
 8028cac:	f043 0308 	orr.w	r3, r3, #8
 8028cb0:	81a3      	strh	r3, [r4, #12]
 8028cb2:	6923      	ldr	r3, [r4, #16]
 8028cb4:	b94b      	cbnz	r3, 8028cca <__swsetup_r+0x9a>
 8028cb6:	89a3      	ldrh	r3, [r4, #12]
 8028cb8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8028cbc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028cc0:	d003      	beq.n	8028cca <__swsetup_r+0x9a>
 8028cc2:	4621      	mov	r1, r4
 8028cc4:	4630      	mov	r0, r6
 8028cc6:	f000 f9fd 	bl	80290c4 <__smakebuf_r>
 8028cca:	89a0      	ldrh	r0, [r4, #12]
 8028ccc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028cd0:	f010 0301 	ands.w	r3, r0, #1
 8028cd4:	d00a      	beq.n	8028cec <__swsetup_r+0xbc>
 8028cd6:	2300      	movs	r3, #0
 8028cd8:	60a3      	str	r3, [r4, #8]
 8028cda:	6963      	ldr	r3, [r4, #20]
 8028cdc:	425b      	negs	r3, r3
 8028cde:	61a3      	str	r3, [r4, #24]
 8028ce0:	6923      	ldr	r3, [r4, #16]
 8028ce2:	b943      	cbnz	r3, 8028cf6 <__swsetup_r+0xc6>
 8028ce4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8028ce8:	d1ba      	bne.n	8028c60 <__swsetup_r+0x30>
 8028cea:	bd70      	pop	{r4, r5, r6, pc}
 8028cec:	0781      	lsls	r1, r0, #30
 8028cee:	bf58      	it	pl
 8028cf0:	6963      	ldrpl	r3, [r4, #20]
 8028cf2:	60a3      	str	r3, [r4, #8]
 8028cf4:	e7f4      	b.n	8028ce0 <__swsetup_r+0xb0>
 8028cf6:	2000      	movs	r0, #0
 8028cf8:	e7f7      	b.n	8028cea <__swsetup_r+0xba>
 8028cfa:	bf00      	nop
 8028cfc:	20000010 	.word	0x20000010
 8028d00:	0802a64c 	.word	0x0802a64c
 8028d04:	0802a66c 	.word	0x0802a66c
 8028d08:	0802a62c 	.word	0x0802a62c

08028d0c <__sflush_r>:
 8028d0c:	898a      	ldrh	r2, [r1, #12]
 8028d0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028d12:	4605      	mov	r5, r0
 8028d14:	0710      	lsls	r0, r2, #28
 8028d16:	460c      	mov	r4, r1
 8028d18:	d458      	bmi.n	8028dcc <__sflush_r+0xc0>
 8028d1a:	684b      	ldr	r3, [r1, #4]
 8028d1c:	2b00      	cmp	r3, #0
 8028d1e:	dc05      	bgt.n	8028d2c <__sflush_r+0x20>
 8028d20:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8028d22:	2b00      	cmp	r3, #0
 8028d24:	dc02      	bgt.n	8028d2c <__sflush_r+0x20>
 8028d26:	2000      	movs	r0, #0
 8028d28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028d2c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028d2e:	2e00      	cmp	r6, #0
 8028d30:	d0f9      	beq.n	8028d26 <__sflush_r+0x1a>
 8028d32:	2300      	movs	r3, #0
 8028d34:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8028d38:	682f      	ldr	r7, [r5, #0]
 8028d3a:	602b      	str	r3, [r5, #0]
 8028d3c:	d032      	beq.n	8028da4 <__sflush_r+0x98>
 8028d3e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8028d40:	89a3      	ldrh	r3, [r4, #12]
 8028d42:	075a      	lsls	r2, r3, #29
 8028d44:	d505      	bpl.n	8028d52 <__sflush_r+0x46>
 8028d46:	6863      	ldr	r3, [r4, #4]
 8028d48:	1ac0      	subs	r0, r0, r3
 8028d4a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8028d4c:	b10b      	cbz	r3, 8028d52 <__sflush_r+0x46>
 8028d4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028d50:	1ac0      	subs	r0, r0, r3
 8028d52:	2300      	movs	r3, #0
 8028d54:	4602      	mov	r2, r0
 8028d56:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028d58:	6a21      	ldr	r1, [r4, #32]
 8028d5a:	4628      	mov	r0, r5
 8028d5c:	47b0      	blx	r6
 8028d5e:	1c43      	adds	r3, r0, #1
 8028d60:	89a3      	ldrh	r3, [r4, #12]
 8028d62:	d106      	bne.n	8028d72 <__sflush_r+0x66>
 8028d64:	6829      	ldr	r1, [r5, #0]
 8028d66:	291d      	cmp	r1, #29
 8028d68:	d82c      	bhi.n	8028dc4 <__sflush_r+0xb8>
 8028d6a:	4a2a      	ldr	r2, [pc, #168]	; (8028e14 <__sflush_r+0x108>)
 8028d6c:	40ca      	lsrs	r2, r1
 8028d6e:	07d6      	lsls	r6, r2, #31
 8028d70:	d528      	bpl.n	8028dc4 <__sflush_r+0xb8>
 8028d72:	2200      	movs	r2, #0
 8028d74:	6062      	str	r2, [r4, #4]
 8028d76:	04d9      	lsls	r1, r3, #19
 8028d78:	6922      	ldr	r2, [r4, #16]
 8028d7a:	6022      	str	r2, [r4, #0]
 8028d7c:	d504      	bpl.n	8028d88 <__sflush_r+0x7c>
 8028d7e:	1c42      	adds	r2, r0, #1
 8028d80:	d101      	bne.n	8028d86 <__sflush_r+0x7a>
 8028d82:	682b      	ldr	r3, [r5, #0]
 8028d84:	b903      	cbnz	r3, 8028d88 <__sflush_r+0x7c>
 8028d86:	6560      	str	r0, [r4, #84]	; 0x54
 8028d88:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028d8a:	602f      	str	r7, [r5, #0]
 8028d8c:	2900      	cmp	r1, #0
 8028d8e:	d0ca      	beq.n	8028d26 <__sflush_r+0x1a>
 8028d90:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028d94:	4299      	cmp	r1, r3
 8028d96:	d002      	beq.n	8028d9e <__sflush_r+0x92>
 8028d98:	4628      	mov	r0, r5
 8028d9a:	f7fb ff77 	bl	8024c8c <_free_r>
 8028d9e:	2000      	movs	r0, #0
 8028da0:	6360      	str	r0, [r4, #52]	; 0x34
 8028da2:	e7c1      	b.n	8028d28 <__sflush_r+0x1c>
 8028da4:	6a21      	ldr	r1, [r4, #32]
 8028da6:	2301      	movs	r3, #1
 8028da8:	4628      	mov	r0, r5
 8028daa:	47b0      	blx	r6
 8028dac:	1c41      	adds	r1, r0, #1
 8028dae:	d1c7      	bne.n	8028d40 <__sflush_r+0x34>
 8028db0:	682b      	ldr	r3, [r5, #0]
 8028db2:	2b00      	cmp	r3, #0
 8028db4:	d0c4      	beq.n	8028d40 <__sflush_r+0x34>
 8028db6:	2b1d      	cmp	r3, #29
 8028db8:	d001      	beq.n	8028dbe <__sflush_r+0xb2>
 8028dba:	2b16      	cmp	r3, #22
 8028dbc:	d101      	bne.n	8028dc2 <__sflush_r+0xb6>
 8028dbe:	602f      	str	r7, [r5, #0]
 8028dc0:	e7b1      	b.n	8028d26 <__sflush_r+0x1a>
 8028dc2:	89a3      	ldrh	r3, [r4, #12]
 8028dc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028dc8:	81a3      	strh	r3, [r4, #12]
 8028dca:	e7ad      	b.n	8028d28 <__sflush_r+0x1c>
 8028dcc:	690f      	ldr	r7, [r1, #16]
 8028dce:	2f00      	cmp	r7, #0
 8028dd0:	d0a9      	beq.n	8028d26 <__sflush_r+0x1a>
 8028dd2:	0793      	lsls	r3, r2, #30
 8028dd4:	680e      	ldr	r6, [r1, #0]
 8028dd6:	bf08      	it	eq
 8028dd8:	694b      	ldreq	r3, [r1, #20]
 8028dda:	600f      	str	r7, [r1, #0]
 8028ddc:	bf18      	it	ne
 8028dde:	2300      	movne	r3, #0
 8028de0:	eba6 0807 	sub.w	r8, r6, r7
 8028de4:	608b      	str	r3, [r1, #8]
 8028de6:	f1b8 0f00 	cmp.w	r8, #0
 8028dea:	dd9c      	ble.n	8028d26 <__sflush_r+0x1a>
 8028dec:	6a21      	ldr	r1, [r4, #32]
 8028dee:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8028df0:	4643      	mov	r3, r8
 8028df2:	463a      	mov	r2, r7
 8028df4:	4628      	mov	r0, r5
 8028df6:	47b0      	blx	r6
 8028df8:	2800      	cmp	r0, #0
 8028dfa:	dc06      	bgt.n	8028e0a <__sflush_r+0xfe>
 8028dfc:	89a3      	ldrh	r3, [r4, #12]
 8028dfe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028e02:	81a3      	strh	r3, [r4, #12]
 8028e04:	f04f 30ff 	mov.w	r0, #4294967295
 8028e08:	e78e      	b.n	8028d28 <__sflush_r+0x1c>
 8028e0a:	4407      	add	r7, r0
 8028e0c:	eba8 0800 	sub.w	r8, r8, r0
 8028e10:	e7e9      	b.n	8028de6 <__sflush_r+0xda>
 8028e12:	bf00      	nop
 8028e14:	20400001 	.word	0x20400001

08028e18 <_fflush_r>:
 8028e18:	b538      	push	{r3, r4, r5, lr}
 8028e1a:	690b      	ldr	r3, [r1, #16]
 8028e1c:	4605      	mov	r5, r0
 8028e1e:	460c      	mov	r4, r1
 8028e20:	b913      	cbnz	r3, 8028e28 <_fflush_r+0x10>
 8028e22:	2500      	movs	r5, #0
 8028e24:	4628      	mov	r0, r5
 8028e26:	bd38      	pop	{r3, r4, r5, pc}
 8028e28:	b118      	cbz	r0, 8028e32 <_fflush_r+0x1a>
 8028e2a:	6983      	ldr	r3, [r0, #24]
 8028e2c:	b90b      	cbnz	r3, 8028e32 <_fflush_r+0x1a>
 8028e2e:	f000 f887 	bl	8028f40 <__sinit>
 8028e32:	4b14      	ldr	r3, [pc, #80]	; (8028e84 <_fflush_r+0x6c>)
 8028e34:	429c      	cmp	r4, r3
 8028e36:	d11b      	bne.n	8028e70 <_fflush_r+0x58>
 8028e38:	686c      	ldr	r4, [r5, #4]
 8028e3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028e3e:	2b00      	cmp	r3, #0
 8028e40:	d0ef      	beq.n	8028e22 <_fflush_r+0xa>
 8028e42:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8028e44:	07d0      	lsls	r0, r2, #31
 8028e46:	d404      	bmi.n	8028e52 <_fflush_r+0x3a>
 8028e48:	0599      	lsls	r1, r3, #22
 8028e4a:	d402      	bmi.n	8028e52 <_fflush_r+0x3a>
 8028e4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028e4e:	f7fe fe80 	bl	8027b52 <__retarget_lock_acquire_recursive>
 8028e52:	4628      	mov	r0, r5
 8028e54:	4621      	mov	r1, r4
 8028e56:	f7ff ff59 	bl	8028d0c <__sflush_r>
 8028e5a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028e5c:	07da      	lsls	r2, r3, #31
 8028e5e:	4605      	mov	r5, r0
 8028e60:	d4e0      	bmi.n	8028e24 <_fflush_r+0xc>
 8028e62:	89a3      	ldrh	r3, [r4, #12]
 8028e64:	059b      	lsls	r3, r3, #22
 8028e66:	d4dd      	bmi.n	8028e24 <_fflush_r+0xc>
 8028e68:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028e6a:	f7fe fe74 	bl	8027b56 <__retarget_lock_release_recursive>
 8028e6e:	e7d9      	b.n	8028e24 <_fflush_r+0xc>
 8028e70:	4b05      	ldr	r3, [pc, #20]	; (8028e88 <_fflush_r+0x70>)
 8028e72:	429c      	cmp	r4, r3
 8028e74:	d101      	bne.n	8028e7a <_fflush_r+0x62>
 8028e76:	68ac      	ldr	r4, [r5, #8]
 8028e78:	e7df      	b.n	8028e3a <_fflush_r+0x22>
 8028e7a:	4b04      	ldr	r3, [pc, #16]	; (8028e8c <_fflush_r+0x74>)
 8028e7c:	429c      	cmp	r4, r3
 8028e7e:	bf08      	it	eq
 8028e80:	68ec      	ldreq	r4, [r5, #12]
 8028e82:	e7da      	b.n	8028e3a <_fflush_r+0x22>
 8028e84:	0802a64c 	.word	0x0802a64c
 8028e88:	0802a66c 	.word	0x0802a66c
 8028e8c:	0802a62c 	.word	0x0802a62c

08028e90 <std>:
 8028e90:	2300      	movs	r3, #0
 8028e92:	b510      	push	{r4, lr}
 8028e94:	4604      	mov	r4, r0
 8028e96:	e9c0 3300 	strd	r3, r3, [r0]
 8028e9a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8028e9e:	6083      	str	r3, [r0, #8]
 8028ea0:	8181      	strh	r1, [r0, #12]
 8028ea2:	6643      	str	r3, [r0, #100]	; 0x64
 8028ea4:	81c2      	strh	r2, [r0, #14]
 8028ea6:	6183      	str	r3, [r0, #24]
 8028ea8:	4619      	mov	r1, r3
 8028eaa:	2208      	movs	r2, #8
 8028eac:	305c      	adds	r0, #92	; 0x5c
 8028eae:	f7fb fee5 	bl	8024c7c <memset>
 8028eb2:	4b05      	ldr	r3, [pc, #20]	; (8028ec8 <std+0x38>)
 8028eb4:	6263      	str	r3, [r4, #36]	; 0x24
 8028eb6:	4b05      	ldr	r3, [pc, #20]	; (8028ecc <std+0x3c>)
 8028eb8:	62a3      	str	r3, [r4, #40]	; 0x28
 8028eba:	4b05      	ldr	r3, [pc, #20]	; (8028ed0 <std+0x40>)
 8028ebc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8028ebe:	4b05      	ldr	r3, [pc, #20]	; (8028ed4 <std+0x44>)
 8028ec0:	6224      	str	r4, [r4, #32]
 8028ec2:	6323      	str	r3, [r4, #48]	; 0x30
 8028ec4:	bd10      	pop	{r4, pc}
 8028ec6:	bf00      	nop
 8028ec8:	08029155 	.word	0x08029155
 8028ecc:	08029177 	.word	0x08029177
 8028ed0:	080291af 	.word	0x080291af
 8028ed4:	080291d3 	.word	0x080291d3

08028ed8 <_cleanup_r>:
 8028ed8:	4901      	ldr	r1, [pc, #4]	; (8028ee0 <_cleanup_r+0x8>)
 8028eda:	f000 b8af 	b.w	802903c <_fwalk_reent>
 8028ede:	bf00      	nop
 8028ee0:	08028e19 	.word	0x08028e19

08028ee4 <__sfmoreglue>:
 8028ee4:	b570      	push	{r4, r5, r6, lr}
 8028ee6:	1e4a      	subs	r2, r1, #1
 8028ee8:	2568      	movs	r5, #104	; 0x68
 8028eea:	4355      	muls	r5, r2
 8028eec:	460e      	mov	r6, r1
 8028eee:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8028ef2:	f7fb ff1b 	bl	8024d2c <_malloc_r>
 8028ef6:	4604      	mov	r4, r0
 8028ef8:	b140      	cbz	r0, 8028f0c <__sfmoreglue+0x28>
 8028efa:	2100      	movs	r1, #0
 8028efc:	e9c0 1600 	strd	r1, r6, [r0]
 8028f00:	300c      	adds	r0, #12
 8028f02:	60a0      	str	r0, [r4, #8]
 8028f04:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8028f08:	f7fb feb8 	bl	8024c7c <memset>
 8028f0c:	4620      	mov	r0, r4
 8028f0e:	bd70      	pop	{r4, r5, r6, pc}

08028f10 <__sfp_lock_acquire>:
 8028f10:	4801      	ldr	r0, [pc, #4]	; (8028f18 <__sfp_lock_acquire+0x8>)
 8028f12:	f7fe be1e 	b.w	8027b52 <__retarget_lock_acquire_recursive>
 8028f16:	bf00      	nop
 8028f18:	200008e0 	.word	0x200008e0

08028f1c <__sfp_lock_release>:
 8028f1c:	4801      	ldr	r0, [pc, #4]	; (8028f24 <__sfp_lock_release+0x8>)
 8028f1e:	f7fe be1a 	b.w	8027b56 <__retarget_lock_release_recursive>
 8028f22:	bf00      	nop
 8028f24:	200008e0 	.word	0x200008e0

08028f28 <__sinit_lock_acquire>:
 8028f28:	4801      	ldr	r0, [pc, #4]	; (8028f30 <__sinit_lock_acquire+0x8>)
 8028f2a:	f7fe be12 	b.w	8027b52 <__retarget_lock_acquire_recursive>
 8028f2e:	bf00      	nop
 8028f30:	200008df 	.word	0x200008df

08028f34 <__sinit_lock_release>:
 8028f34:	4801      	ldr	r0, [pc, #4]	; (8028f3c <__sinit_lock_release+0x8>)
 8028f36:	f7fe be0e 	b.w	8027b56 <__retarget_lock_release_recursive>
 8028f3a:	bf00      	nop
 8028f3c:	200008df 	.word	0x200008df

08028f40 <__sinit>:
 8028f40:	b510      	push	{r4, lr}
 8028f42:	4604      	mov	r4, r0
 8028f44:	f7ff fff0 	bl	8028f28 <__sinit_lock_acquire>
 8028f48:	69a3      	ldr	r3, [r4, #24]
 8028f4a:	b11b      	cbz	r3, 8028f54 <__sinit+0x14>
 8028f4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028f50:	f7ff bff0 	b.w	8028f34 <__sinit_lock_release>
 8028f54:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8028f58:	6523      	str	r3, [r4, #80]	; 0x50
 8028f5a:	4b13      	ldr	r3, [pc, #76]	; (8028fa8 <__sinit+0x68>)
 8028f5c:	4a13      	ldr	r2, [pc, #76]	; (8028fac <__sinit+0x6c>)
 8028f5e:	681b      	ldr	r3, [r3, #0]
 8028f60:	62a2      	str	r2, [r4, #40]	; 0x28
 8028f62:	42a3      	cmp	r3, r4
 8028f64:	bf04      	itt	eq
 8028f66:	2301      	moveq	r3, #1
 8028f68:	61a3      	streq	r3, [r4, #24]
 8028f6a:	4620      	mov	r0, r4
 8028f6c:	f000 f820 	bl	8028fb0 <__sfp>
 8028f70:	6060      	str	r0, [r4, #4]
 8028f72:	4620      	mov	r0, r4
 8028f74:	f000 f81c 	bl	8028fb0 <__sfp>
 8028f78:	60a0      	str	r0, [r4, #8]
 8028f7a:	4620      	mov	r0, r4
 8028f7c:	f000 f818 	bl	8028fb0 <__sfp>
 8028f80:	2200      	movs	r2, #0
 8028f82:	60e0      	str	r0, [r4, #12]
 8028f84:	2104      	movs	r1, #4
 8028f86:	6860      	ldr	r0, [r4, #4]
 8028f88:	f7ff ff82 	bl	8028e90 <std>
 8028f8c:	68a0      	ldr	r0, [r4, #8]
 8028f8e:	2201      	movs	r2, #1
 8028f90:	2109      	movs	r1, #9
 8028f92:	f7ff ff7d 	bl	8028e90 <std>
 8028f96:	68e0      	ldr	r0, [r4, #12]
 8028f98:	2202      	movs	r2, #2
 8028f9a:	2112      	movs	r1, #18
 8028f9c:	f7ff ff78 	bl	8028e90 <std>
 8028fa0:	2301      	movs	r3, #1
 8028fa2:	61a3      	str	r3, [r4, #24]
 8028fa4:	e7d2      	b.n	8028f4c <__sinit+0xc>
 8028fa6:	bf00      	nop
 8028fa8:	0802a1c0 	.word	0x0802a1c0
 8028fac:	08028ed9 	.word	0x08028ed9

08028fb0 <__sfp>:
 8028fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028fb2:	4607      	mov	r7, r0
 8028fb4:	f7ff ffac 	bl	8028f10 <__sfp_lock_acquire>
 8028fb8:	4b1e      	ldr	r3, [pc, #120]	; (8029034 <__sfp+0x84>)
 8028fba:	681e      	ldr	r6, [r3, #0]
 8028fbc:	69b3      	ldr	r3, [r6, #24]
 8028fbe:	b913      	cbnz	r3, 8028fc6 <__sfp+0x16>
 8028fc0:	4630      	mov	r0, r6
 8028fc2:	f7ff ffbd 	bl	8028f40 <__sinit>
 8028fc6:	3648      	adds	r6, #72	; 0x48
 8028fc8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8028fcc:	3b01      	subs	r3, #1
 8028fce:	d503      	bpl.n	8028fd8 <__sfp+0x28>
 8028fd0:	6833      	ldr	r3, [r6, #0]
 8028fd2:	b30b      	cbz	r3, 8029018 <__sfp+0x68>
 8028fd4:	6836      	ldr	r6, [r6, #0]
 8028fd6:	e7f7      	b.n	8028fc8 <__sfp+0x18>
 8028fd8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8028fdc:	b9d5      	cbnz	r5, 8029014 <__sfp+0x64>
 8028fde:	4b16      	ldr	r3, [pc, #88]	; (8029038 <__sfp+0x88>)
 8028fe0:	60e3      	str	r3, [r4, #12]
 8028fe2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8028fe6:	6665      	str	r5, [r4, #100]	; 0x64
 8028fe8:	f7fe fdb2 	bl	8027b50 <__retarget_lock_init_recursive>
 8028fec:	f7ff ff96 	bl	8028f1c <__sfp_lock_release>
 8028ff0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8028ff4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8028ff8:	6025      	str	r5, [r4, #0]
 8028ffa:	61a5      	str	r5, [r4, #24]
 8028ffc:	2208      	movs	r2, #8
 8028ffe:	4629      	mov	r1, r5
 8029000:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8029004:	f7fb fe3a 	bl	8024c7c <memset>
 8029008:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802900c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8029010:	4620      	mov	r0, r4
 8029012:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8029014:	3468      	adds	r4, #104	; 0x68
 8029016:	e7d9      	b.n	8028fcc <__sfp+0x1c>
 8029018:	2104      	movs	r1, #4
 802901a:	4638      	mov	r0, r7
 802901c:	f7ff ff62 	bl	8028ee4 <__sfmoreglue>
 8029020:	4604      	mov	r4, r0
 8029022:	6030      	str	r0, [r6, #0]
 8029024:	2800      	cmp	r0, #0
 8029026:	d1d5      	bne.n	8028fd4 <__sfp+0x24>
 8029028:	f7ff ff78 	bl	8028f1c <__sfp_lock_release>
 802902c:	230c      	movs	r3, #12
 802902e:	603b      	str	r3, [r7, #0]
 8029030:	e7ee      	b.n	8029010 <__sfp+0x60>
 8029032:	bf00      	nop
 8029034:	0802a1c0 	.word	0x0802a1c0
 8029038:	ffff0001 	.word	0xffff0001

0802903c <_fwalk_reent>:
 802903c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029040:	4606      	mov	r6, r0
 8029042:	4688      	mov	r8, r1
 8029044:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8029048:	2700      	movs	r7, #0
 802904a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802904e:	f1b9 0901 	subs.w	r9, r9, #1
 8029052:	d505      	bpl.n	8029060 <_fwalk_reent+0x24>
 8029054:	6824      	ldr	r4, [r4, #0]
 8029056:	2c00      	cmp	r4, #0
 8029058:	d1f7      	bne.n	802904a <_fwalk_reent+0xe>
 802905a:	4638      	mov	r0, r7
 802905c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029060:	89ab      	ldrh	r3, [r5, #12]
 8029062:	2b01      	cmp	r3, #1
 8029064:	d907      	bls.n	8029076 <_fwalk_reent+0x3a>
 8029066:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802906a:	3301      	adds	r3, #1
 802906c:	d003      	beq.n	8029076 <_fwalk_reent+0x3a>
 802906e:	4629      	mov	r1, r5
 8029070:	4630      	mov	r0, r6
 8029072:	47c0      	blx	r8
 8029074:	4307      	orrs	r7, r0
 8029076:	3568      	adds	r5, #104	; 0x68
 8029078:	e7e9      	b.n	802904e <_fwalk_reent+0x12>

0802907a <__swhatbuf_r>:
 802907a:	b570      	push	{r4, r5, r6, lr}
 802907c:	460e      	mov	r6, r1
 802907e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029082:	2900      	cmp	r1, #0
 8029084:	b096      	sub	sp, #88	; 0x58
 8029086:	4614      	mov	r4, r2
 8029088:	461d      	mov	r5, r3
 802908a:	da07      	bge.n	802909c <__swhatbuf_r+0x22>
 802908c:	2300      	movs	r3, #0
 802908e:	602b      	str	r3, [r5, #0]
 8029090:	89b3      	ldrh	r3, [r6, #12]
 8029092:	061a      	lsls	r2, r3, #24
 8029094:	d410      	bmi.n	80290b8 <__swhatbuf_r+0x3e>
 8029096:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802909a:	e00e      	b.n	80290ba <__swhatbuf_r+0x40>
 802909c:	466a      	mov	r2, sp
 802909e:	f000 f8bf 	bl	8029220 <_fstat_r>
 80290a2:	2800      	cmp	r0, #0
 80290a4:	dbf2      	blt.n	802908c <__swhatbuf_r+0x12>
 80290a6:	9a01      	ldr	r2, [sp, #4]
 80290a8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80290ac:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80290b0:	425a      	negs	r2, r3
 80290b2:	415a      	adcs	r2, r3
 80290b4:	602a      	str	r2, [r5, #0]
 80290b6:	e7ee      	b.n	8029096 <__swhatbuf_r+0x1c>
 80290b8:	2340      	movs	r3, #64	; 0x40
 80290ba:	2000      	movs	r0, #0
 80290bc:	6023      	str	r3, [r4, #0]
 80290be:	b016      	add	sp, #88	; 0x58
 80290c0:	bd70      	pop	{r4, r5, r6, pc}
	...

080290c4 <__smakebuf_r>:
 80290c4:	898b      	ldrh	r3, [r1, #12]
 80290c6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80290c8:	079d      	lsls	r5, r3, #30
 80290ca:	4606      	mov	r6, r0
 80290cc:	460c      	mov	r4, r1
 80290ce:	d507      	bpl.n	80290e0 <__smakebuf_r+0x1c>
 80290d0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80290d4:	6023      	str	r3, [r4, #0]
 80290d6:	6123      	str	r3, [r4, #16]
 80290d8:	2301      	movs	r3, #1
 80290da:	6163      	str	r3, [r4, #20]
 80290dc:	b002      	add	sp, #8
 80290de:	bd70      	pop	{r4, r5, r6, pc}
 80290e0:	ab01      	add	r3, sp, #4
 80290e2:	466a      	mov	r2, sp
 80290e4:	f7ff ffc9 	bl	802907a <__swhatbuf_r>
 80290e8:	9900      	ldr	r1, [sp, #0]
 80290ea:	4605      	mov	r5, r0
 80290ec:	4630      	mov	r0, r6
 80290ee:	f7fb fe1d 	bl	8024d2c <_malloc_r>
 80290f2:	b948      	cbnz	r0, 8029108 <__smakebuf_r+0x44>
 80290f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80290f8:	059a      	lsls	r2, r3, #22
 80290fa:	d4ef      	bmi.n	80290dc <__smakebuf_r+0x18>
 80290fc:	f023 0303 	bic.w	r3, r3, #3
 8029100:	f043 0302 	orr.w	r3, r3, #2
 8029104:	81a3      	strh	r3, [r4, #12]
 8029106:	e7e3      	b.n	80290d0 <__smakebuf_r+0xc>
 8029108:	4b0d      	ldr	r3, [pc, #52]	; (8029140 <__smakebuf_r+0x7c>)
 802910a:	62b3      	str	r3, [r6, #40]	; 0x28
 802910c:	89a3      	ldrh	r3, [r4, #12]
 802910e:	6020      	str	r0, [r4, #0]
 8029110:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8029114:	81a3      	strh	r3, [r4, #12]
 8029116:	9b00      	ldr	r3, [sp, #0]
 8029118:	6163      	str	r3, [r4, #20]
 802911a:	9b01      	ldr	r3, [sp, #4]
 802911c:	6120      	str	r0, [r4, #16]
 802911e:	b15b      	cbz	r3, 8029138 <__smakebuf_r+0x74>
 8029120:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029124:	4630      	mov	r0, r6
 8029126:	f000 f88d 	bl	8029244 <_isatty_r>
 802912a:	b128      	cbz	r0, 8029138 <__smakebuf_r+0x74>
 802912c:	89a3      	ldrh	r3, [r4, #12]
 802912e:	f023 0303 	bic.w	r3, r3, #3
 8029132:	f043 0301 	orr.w	r3, r3, #1
 8029136:	81a3      	strh	r3, [r4, #12]
 8029138:	89a0      	ldrh	r0, [r4, #12]
 802913a:	4305      	orrs	r5, r0
 802913c:	81a5      	strh	r5, [r4, #12]
 802913e:	e7cd      	b.n	80290dc <__smakebuf_r+0x18>
 8029140:	08028ed9 	.word	0x08028ed9

08029144 <_malloc_usable_size_r>:
 8029144:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8029148:	1f18      	subs	r0, r3, #4
 802914a:	2b00      	cmp	r3, #0
 802914c:	bfbc      	itt	lt
 802914e:	580b      	ldrlt	r3, [r1, r0]
 8029150:	18c0      	addlt	r0, r0, r3
 8029152:	4770      	bx	lr

08029154 <__sread>:
 8029154:	b510      	push	{r4, lr}
 8029156:	460c      	mov	r4, r1
 8029158:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802915c:	f000 f894 	bl	8029288 <_read_r>
 8029160:	2800      	cmp	r0, #0
 8029162:	bfab      	itete	ge
 8029164:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8029166:	89a3      	ldrhlt	r3, [r4, #12]
 8029168:	181b      	addge	r3, r3, r0
 802916a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802916e:	bfac      	ite	ge
 8029170:	6563      	strge	r3, [r4, #84]	; 0x54
 8029172:	81a3      	strhlt	r3, [r4, #12]
 8029174:	bd10      	pop	{r4, pc}

08029176 <__swrite>:
 8029176:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802917a:	461f      	mov	r7, r3
 802917c:	898b      	ldrh	r3, [r1, #12]
 802917e:	05db      	lsls	r3, r3, #23
 8029180:	4605      	mov	r5, r0
 8029182:	460c      	mov	r4, r1
 8029184:	4616      	mov	r6, r2
 8029186:	d505      	bpl.n	8029194 <__swrite+0x1e>
 8029188:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802918c:	2302      	movs	r3, #2
 802918e:	2200      	movs	r2, #0
 8029190:	f000 f868 	bl	8029264 <_lseek_r>
 8029194:	89a3      	ldrh	r3, [r4, #12]
 8029196:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802919a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802919e:	81a3      	strh	r3, [r4, #12]
 80291a0:	4632      	mov	r2, r6
 80291a2:	463b      	mov	r3, r7
 80291a4:	4628      	mov	r0, r5
 80291a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80291aa:	f000 b817 	b.w	80291dc <_write_r>

080291ae <__sseek>:
 80291ae:	b510      	push	{r4, lr}
 80291b0:	460c      	mov	r4, r1
 80291b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80291b6:	f000 f855 	bl	8029264 <_lseek_r>
 80291ba:	1c43      	adds	r3, r0, #1
 80291bc:	89a3      	ldrh	r3, [r4, #12]
 80291be:	bf15      	itete	ne
 80291c0:	6560      	strne	r0, [r4, #84]	; 0x54
 80291c2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80291c6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80291ca:	81a3      	strheq	r3, [r4, #12]
 80291cc:	bf18      	it	ne
 80291ce:	81a3      	strhne	r3, [r4, #12]
 80291d0:	bd10      	pop	{r4, pc}

080291d2 <__sclose>:
 80291d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80291d6:	f000 b813 	b.w	8029200 <_close_r>
	...

080291dc <_write_r>:
 80291dc:	b538      	push	{r3, r4, r5, lr}
 80291de:	4d07      	ldr	r5, [pc, #28]	; (80291fc <_write_r+0x20>)
 80291e0:	4604      	mov	r4, r0
 80291e2:	4608      	mov	r0, r1
 80291e4:	4611      	mov	r1, r2
 80291e6:	2200      	movs	r2, #0
 80291e8:	602a      	str	r2, [r5, #0]
 80291ea:	461a      	mov	r2, r3
 80291ec:	f7f5 fd1f 	bl	801ec2e <_write>
 80291f0:	1c43      	adds	r3, r0, #1
 80291f2:	d102      	bne.n	80291fa <_write_r+0x1e>
 80291f4:	682b      	ldr	r3, [r5, #0]
 80291f6:	b103      	cbz	r3, 80291fa <_write_r+0x1e>
 80291f8:	6023      	str	r3, [r4, #0]
 80291fa:	bd38      	pop	{r3, r4, r5, pc}
 80291fc:	200008e8 	.word	0x200008e8

08029200 <_close_r>:
 8029200:	b538      	push	{r3, r4, r5, lr}
 8029202:	4d06      	ldr	r5, [pc, #24]	; (802921c <_close_r+0x1c>)
 8029204:	2300      	movs	r3, #0
 8029206:	4604      	mov	r4, r0
 8029208:	4608      	mov	r0, r1
 802920a:	602b      	str	r3, [r5, #0]
 802920c:	f7f5 fd2b 	bl	801ec66 <_close>
 8029210:	1c43      	adds	r3, r0, #1
 8029212:	d102      	bne.n	802921a <_close_r+0x1a>
 8029214:	682b      	ldr	r3, [r5, #0]
 8029216:	b103      	cbz	r3, 802921a <_close_r+0x1a>
 8029218:	6023      	str	r3, [r4, #0]
 802921a:	bd38      	pop	{r3, r4, r5, pc}
 802921c:	200008e8 	.word	0x200008e8

08029220 <_fstat_r>:
 8029220:	b538      	push	{r3, r4, r5, lr}
 8029222:	4d07      	ldr	r5, [pc, #28]	; (8029240 <_fstat_r+0x20>)
 8029224:	2300      	movs	r3, #0
 8029226:	4604      	mov	r4, r0
 8029228:	4608      	mov	r0, r1
 802922a:	4611      	mov	r1, r2
 802922c:	602b      	str	r3, [r5, #0]
 802922e:	f7f5 fd26 	bl	801ec7e <_fstat>
 8029232:	1c43      	adds	r3, r0, #1
 8029234:	d102      	bne.n	802923c <_fstat_r+0x1c>
 8029236:	682b      	ldr	r3, [r5, #0]
 8029238:	b103      	cbz	r3, 802923c <_fstat_r+0x1c>
 802923a:	6023      	str	r3, [r4, #0]
 802923c:	bd38      	pop	{r3, r4, r5, pc}
 802923e:	bf00      	nop
 8029240:	200008e8 	.word	0x200008e8

08029244 <_isatty_r>:
 8029244:	b538      	push	{r3, r4, r5, lr}
 8029246:	4d06      	ldr	r5, [pc, #24]	; (8029260 <_isatty_r+0x1c>)
 8029248:	2300      	movs	r3, #0
 802924a:	4604      	mov	r4, r0
 802924c:	4608      	mov	r0, r1
 802924e:	602b      	str	r3, [r5, #0]
 8029250:	f7f5 fd25 	bl	801ec9e <_isatty>
 8029254:	1c43      	adds	r3, r0, #1
 8029256:	d102      	bne.n	802925e <_isatty_r+0x1a>
 8029258:	682b      	ldr	r3, [r5, #0]
 802925a:	b103      	cbz	r3, 802925e <_isatty_r+0x1a>
 802925c:	6023      	str	r3, [r4, #0]
 802925e:	bd38      	pop	{r3, r4, r5, pc}
 8029260:	200008e8 	.word	0x200008e8

08029264 <_lseek_r>:
 8029264:	b538      	push	{r3, r4, r5, lr}
 8029266:	4d07      	ldr	r5, [pc, #28]	; (8029284 <_lseek_r+0x20>)
 8029268:	4604      	mov	r4, r0
 802926a:	4608      	mov	r0, r1
 802926c:	4611      	mov	r1, r2
 802926e:	2200      	movs	r2, #0
 8029270:	602a      	str	r2, [r5, #0]
 8029272:	461a      	mov	r2, r3
 8029274:	f7f5 fd1e 	bl	801ecb4 <_lseek>
 8029278:	1c43      	adds	r3, r0, #1
 802927a:	d102      	bne.n	8029282 <_lseek_r+0x1e>
 802927c:	682b      	ldr	r3, [r5, #0]
 802927e:	b103      	cbz	r3, 8029282 <_lseek_r+0x1e>
 8029280:	6023      	str	r3, [r4, #0]
 8029282:	bd38      	pop	{r3, r4, r5, pc}
 8029284:	200008e8 	.word	0x200008e8

08029288 <_read_r>:
 8029288:	b538      	push	{r3, r4, r5, lr}
 802928a:	4d07      	ldr	r5, [pc, #28]	; (80292a8 <_read_r+0x20>)
 802928c:	4604      	mov	r4, r0
 802928e:	4608      	mov	r0, r1
 8029290:	4611      	mov	r1, r2
 8029292:	2200      	movs	r2, #0
 8029294:	602a      	str	r2, [r5, #0]
 8029296:	461a      	mov	r2, r3
 8029298:	f7f5 fcac 	bl	801ebf4 <_read>
 802929c:	1c43      	adds	r3, r0, #1
 802929e:	d102      	bne.n	80292a6 <_read_r+0x1e>
 80292a0:	682b      	ldr	r3, [r5, #0]
 80292a2:	b103      	cbz	r3, 80292a6 <_read_r+0x1e>
 80292a4:	6023      	str	r3, [r4, #0]
 80292a6:	bd38      	pop	{r3, r4, r5, pc}
 80292a8:	200008e8 	.word	0x200008e8

080292ac <_init>:
 80292ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80292ae:	bf00      	nop
 80292b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80292b2:	bc08      	pop	{r3}
 80292b4:	469e      	mov	lr, r3
 80292b6:	4770      	bx	lr

080292b8 <_fini>:
 80292b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80292ba:	bf00      	nop
 80292bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80292be:	bc08      	pop	{r3}
 80292c0:	469e      	mov	lr, r3
 80292c2:	4770      	bx	lr
