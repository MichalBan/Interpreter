
Interpreter746.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00024714  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000ecc  080248e8  080248e8  000348e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080257b4  080257b4  000401e4  2**0
                  CONTENTS
  4 .ARM          00000008  080257b4  080257b4  000357b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080257bc  080257bc  000401e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000034  080257bc  080257bc  000357bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000034  080257f0  080257f0  000357f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e4  20000000  08025824  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000055c  200001e4  08025a08  000401e4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000740  08025a08  00040740  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000401e4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0028c04b  00000000  00000000  00040214  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000f1a2  00000000  00000000  002cc25f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 0000cbb0  00000000  00000000  002db408  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 0000ca28  00000000  00000000  002e7fb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00030c64  00000000  00000000  002f49e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0005121f  00000000  00000000  00325644  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    002178e1  00000000  00000000  00376863  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0058e144  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0003eefc  00000000  00000000  0058e198  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001e4 	.word	0x200001e4
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080248cc 	.word	0x080248cc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001e8 	.word	0x200001e8
 800020c:	080248cc 	.word	0x080248cc

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2uiz>:
 8000be8:	004a      	lsls	r2, r1, #1
 8000bea:	d211      	bcs.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bf0:	d211      	bcs.n	8000c16 <__aeabi_d2uiz+0x2e>
 8000bf2:	d50d      	bpl.n	8000c10 <__aeabi_d2uiz+0x28>
 8000bf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bfc:	d40e      	bmi.n	8000c1c <__aeabi_d2uiz+0x34>
 8000bfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c0a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c0e:	4770      	bx	lr
 8000c10:	f04f 0000 	mov.w	r0, #0
 8000c14:	4770      	bx	lr
 8000c16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c1a:	d102      	bne.n	8000c22 <__aeabi_d2uiz+0x3a>
 8000c1c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c20:	4770      	bx	lr
 8000c22:	f04f 0000 	mov.w	r0, #0
 8000c26:	4770      	bx	lr

08000c28 <__aeabi_d2f>:
 8000c28:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c2c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c30:	bf24      	itt	cs
 8000c32:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c36:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c3a:	d90d      	bls.n	8000c58 <__aeabi_d2f+0x30>
 8000c3c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c40:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c44:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c48:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c4c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c50:	bf08      	it	eq
 8000c52:	f020 0001 	biceq.w	r0, r0, #1
 8000c56:	4770      	bx	lr
 8000c58:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c5c:	d121      	bne.n	8000ca2 <__aeabi_d2f+0x7a>
 8000c5e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c62:	bfbc      	itt	lt
 8000c64:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c68:	4770      	bxlt	lr
 8000c6a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c6e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c72:	f1c2 0218 	rsb	r2, r2, #24
 8000c76:	f1c2 0c20 	rsb	ip, r2, #32
 8000c7a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c7e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c82:	bf18      	it	ne
 8000c84:	f040 0001 	orrne.w	r0, r0, #1
 8000c88:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c8c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c90:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c94:	ea40 000c 	orr.w	r0, r0, ip
 8000c98:	fa23 f302 	lsr.w	r3, r3, r2
 8000c9c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ca0:	e7cc      	b.n	8000c3c <__aeabi_d2f+0x14>
 8000ca2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000ca6:	d107      	bne.n	8000cb8 <__aeabi_d2f+0x90>
 8000ca8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cac:	bf1e      	ittt	ne
 8000cae:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000cb2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000cb6:	4770      	bxne	lr
 8000cb8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000cbc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000cc0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop

08000cc8 <__aeabi_uldivmod>:
 8000cc8:	b953      	cbnz	r3, 8000ce0 <__aeabi_uldivmod+0x18>
 8000cca:	b94a      	cbnz	r2, 8000ce0 <__aeabi_uldivmod+0x18>
 8000ccc:	2900      	cmp	r1, #0
 8000cce:	bf08      	it	eq
 8000cd0:	2800      	cmpeq	r0, #0
 8000cd2:	bf1c      	itt	ne
 8000cd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cdc:	f000 b9a4 	b.w	8001028 <__aeabi_idiv0>
 8000ce0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ce4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ce8:	f000 f83c 	bl	8000d64 <__udivmoddi4>
 8000cec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf4:	b004      	add	sp, #16
 8000cf6:	4770      	bx	lr

08000cf8 <__aeabi_d2lz>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	2200      	movs	r2, #0
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4604      	mov	r4, r0
 8000d00:	460d      	mov	r5, r1
 8000d02:	f7ff ff0b 	bl	8000b1c <__aeabi_dcmplt>
 8000d06:	b928      	cbnz	r0, 8000d14 <__aeabi_d2lz+0x1c>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	4629      	mov	r1, r5
 8000d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d10:	f000 b80a 	b.w	8000d28 <__aeabi_d2ulz>
 8000d14:	4620      	mov	r0, r4
 8000d16:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000d1a:	f000 f805 	bl	8000d28 <__aeabi_d2ulz>
 8000d1e:	4240      	negs	r0, r0
 8000d20:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d24:	bd38      	pop	{r3, r4, r5, pc}
 8000d26:	bf00      	nop

08000d28 <__aeabi_d2ulz>:
 8000d28:	b5d0      	push	{r4, r6, r7, lr}
 8000d2a:	4b0c      	ldr	r3, [pc, #48]	; (8000d5c <__aeabi_d2ulz+0x34>)
 8000d2c:	2200      	movs	r2, #0
 8000d2e:	4606      	mov	r6, r0
 8000d30:	460f      	mov	r7, r1
 8000d32:	f7ff fc81 	bl	8000638 <__aeabi_dmul>
 8000d36:	f7ff ff57 	bl	8000be8 <__aeabi_d2uiz>
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f7ff fc02 	bl	8000544 <__aeabi_ui2d>
 8000d40:	4b07      	ldr	r3, [pc, #28]	; (8000d60 <__aeabi_d2ulz+0x38>)
 8000d42:	2200      	movs	r2, #0
 8000d44:	f7ff fc78 	bl	8000638 <__aeabi_dmul>
 8000d48:	4602      	mov	r2, r0
 8000d4a:	460b      	mov	r3, r1
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	4639      	mov	r1, r7
 8000d50:	f7ff faba 	bl	80002c8 <__aeabi_dsub>
 8000d54:	f7ff ff48 	bl	8000be8 <__aeabi_d2uiz>
 8000d58:	4621      	mov	r1, r4
 8000d5a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d5c:	3df00000 	.word	0x3df00000
 8000d60:	41f00000 	.word	0x41f00000

08000d64 <__udivmoddi4>:
 8000d64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d68:	9d08      	ldr	r5, [sp, #32]
 8000d6a:	4604      	mov	r4, r0
 8000d6c:	468c      	mov	ip, r1
 8000d6e:	2b00      	cmp	r3, #0
 8000d70:	f040 8083 	bne.w	8000e7a <__udivmoddi4+0x116>
 8000d74:	428a      	cmp	r2, r1
 8000d76:	4617      	mov	r7, r2
 8000d78:	d947      	bls.n	8000e0a <__udivmoddi4+0xa6>
 8000d7a:	fab2 f282 	clz	r2, r2
 8000d7e:	b142      	cbz	r2, 8000d92 <__udivmoddi4+0x2e>
 8000d80:	f1c2 0020 	rsb	r0, r2, #32
 8000d84:	fa24 f000 	lsr.w	r0, r4, r0
 8000d88:	4091      	lsls	r1, r2
 8000d8a:	4097      	lsls	r7, r2
 8000d8c:	ea40 0c01 	orr.w	ip, r0, r1
 8000d90:	4094      	lsls	r4, r2
 8000d92:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000d96:	0c23      	lsrs	r3, r4, #16
 8000d98:	fbbc f6f8 	udiv	r6, ip, r8
 8000d9c:	fa1f fe87 	uxth.w	lr, r7
 8000da0:	fb08 c116 	mls	r1, r8, r6, ip
 8000da4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000da8:	fb06 f10e 	mul.w	r1, r6, lr
 8000dac:	4299      	cmp	r1, r3
 8000dae:	d909      	bls.n	8000dc4 <__udivmoddi4+0x60>
 8000db0:	18fb      	adds	r3, r7, r3
 8000db2:	f106 30ff 	add.w	r0, r6, #4294967295
 8000db6:	f080 8119 	bcs.w	8000fec <__udivmoddi4+0x288>
 8000dba:	4299      	cmp	r1, r3
 8000dbc:	f240 8116 	bls.w	8000fec <__udivmoddi4+0x288>
 8000dc0:	3e02      	subs	r6, #2
 8000dc2:	443b      	add	r3, r7
 8000dc4:	1a5b      	subs	r3, r3, r1
 8000dc6:	b2a4      	uxth	r4, r4
 8000dc8:	fbb3 f0f8 	udiv	r0, r3, r8
 8000dcc:	fb08 3310 	mls	r3, r8, r0, r3
 8000dd0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000dd4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000dd8:	45a6      	cmp	lr, r4
 8000dda:	d909      	bls.n	8000df0 <__udivmoddi4+0x8c>
 8000ddc:	193c      	adds	r4, r7, r4
 8000dde:	f100 33ff 	add.w	r3, r0, #4294967295
 8000de2:	f080 8105 	bcs.w	8000ff0 <__udivmoddi4+0x28c>
 8000de6:	45a6      	cmp	lr, r4
 8000de8:	f240 8102 	bls.w	8000ff0 <__udivmoddi4+0x28c>
 8000dec:	3802      	subs	r0, #2
 8000dee:	443c      	add	r4, r7
 8000df0:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000df4:	eba4 040e 	sub.w	r4, r4, lr
 8000df8:	2600      	movs	r6, #0
 8000dfa:	b11d      	cbz	r5, 8000e04 <__udivmoddi4+0xa0>
 8000dfc:	40d4      	lsrs	r4, r2
 8000dfe:	2300      	movs	r3, #0
 8000e00:	e9c5 4300 	strd	r4, r3, [r5]
 8000e04:	4631      	mov	r1, r6
 8000e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e0a:	b902      	cbnz	r2, 8000e0e <__udivmoddi4+0xaa>
 8000e0c:	deff      	udf	#255	; 0xff
 8000e0e:	fab2 f282 	clz	r2, r2
 8000e12:	2a00      	cmp	r2, #0
 8000e14:	d150      	bne.n	8000eb8 <__udivmoddi4+0x154>
 8000e16:	1bcb      	subs	r3, r1, r7
 8000e18:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e1c:	fa1f f887 	uxth.w	r8, r7
 8000e20:	2601      	movs	r6, #1
 8000e22:	fbb3 fcfe 	udiv	ip, r3, lr
 8000e26:	0c21      	lsrs	r1, r4, #16
 8000e28:	fb0e 331c 	mls	r3, lr, ip, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb08 f30c 	mul.w	r3, r8, ip
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d907      	bls.n	8000e48 <__udivmoddi4+0xe4>
 8000e38:	1879      	adds	r1, r7, r1
 8000e3a:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000e3e:	d202      	bcs.n	8000e46 <__udivmoddi4+0xe2>
 8000e40:	428b      	cmp	r3, r1
 8000e42:	f200 80e9 	bhi.w	8001018 <__udivmoddi4+0x2b4>
 8000e46:	4684      	mov	ip, r0
 8000e48:	1ac9      	subs	r1, r1, r3
 8000e4a:	b2a3      	uxth	r3, r4
 8000e4c:	fbb1 f0fe 	udiv	r0, r1, lr
 8000e50:	fb0e 1110 	mls	r1, lr, r0, r1
 8000e54:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000e58:	fb08 f800 	mul.w	r8, r8, r0
 8000e5c:	45a0      	cmp	r8, r4
 8000e5e:	d907      	bls.n	8000e70 <__udivmoddi4+0x10c>
 8000e60:	193c      	adds	r4, r7, r4
 8000e62:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e66:	d202      	bcs.n	8000e6e <__udivmoddi4+0x10a>
 8000e68:	45a0      	cmp	r8, r4
 8000e6a:	f200 80d9 	bhi.w	8001020 <__udivmoddi4+0x2bc>
 8000e6e:	4618      	mov	r0, r3
 8000e70:	eba4 0408 	sub.w	r4, r4, r8
 8000e74:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000e78:	e7bf      	b.n	8000dfa <__udivmoddi4+0x96>
 8000e7a:	428b      	cmp	r3, r1
 8000e7c:	d909      	bls.n	8000e92 <__udivmoddi4+0x12e>
 8000e7e:	2d00      	cmp	r5, #0
 8000e80:	f000 80b1 	beq.w	8000fe6 <__udivmoddi4+0x282>
 8000e84:	2600      	movs	r6, #0
 8000e86:	e9c5 0100 	strd	r0, r1, [r5]
 8000e8a:	4630      	mov	r0, r6
 8000e8c:	4631      	mov	r1, r6
 8000e8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e92:	fab3 f683 	clz	r6, r3
 8000e96:	2e00      	cmp	r6, #0
 8000e98:	d14a      	bne.n	8000f30 <__udivmoddi4+0x1cc>
 8000e9a:	428b      	cmp	r3, r1
 8000e9c:	d302      	bcc.n	8000ea4 <__udivmoddi4+0x140>
 8000e9e:	4282      	cmp	r2, r0
 8000ea0:	f200 80b8 	bhi.w	8001014 <__udivmoddi4+0x2b0>
 8000ea4:	1a84      	subs	r4, r0, r2
 8000ea6:	eb61 0103 	sbc.w	r1, r1, r3
 8000eaa:	2001      	movs	r0, #1
 8000eac:	468c      	mov	ip, r1
 8000eae:	2d00      	cmp	r5, #0
 8000eb0:	d0a8      	beq.n	8000e04 <__udivmoddi4+0xa0>
 8000eb2:	e9c5 4c00 	strd	r4, ip, [r5]
 8000eb6:	e7a5      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000eb8:	f1c2 0320 	rsb	r3, r2, #32
 8000ebc:	fa20 f603 	lsr.w	r6, r0, r3
 8000ec0:	4097      	lsls	r7, r2
 8000ec2:	fa01 f002 	lsl.w	r0, r1, r2
 8000ec6:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000eca:	40d9      	lsrs	r1, r3
 8000ecc:	4330      	orrs	r0, r6
 8000ece:	0c03      	lsrs	r3, r0, #16
 8000ed0:	fbb1 f6fe 	udiv	r6, r1, lr
 8000ed4:	fa1f f887 	uxth.w	r8, r7
 8000ed8:	fb0e 1116 	mls	r1, lr, r6, r1
 8000edc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ee0:	fb06 f108 	mul.w	r1, r6, r8
 8000ee4:	4299      	cmp	r1, r3
 8000ee6:	fa04 f402 	lsl.w	r4, r4, r2
 8000eea:	d909      	bls.n	8000f00 <__udivmoddi4+0x19c>
 8000eec:	18fb      	adds	r3, r7, r3
 8000eee:	f106 3cff 	add.w	ip, r6, #4294967295
 8000ef2:	f080 808d 	bcs.w	8001010 <__udivmoddi4+0x2ac>
 8000ef6:	4299      	cmp	r1, r3
 8000ef8:	f240 808a 	bls.w	8001010 <__udivmoddi4+0x2ac>
 8000efc:	3e02      	subs	r6, #2
 8000efe:	443b      	add	r3, r7
 8000f00:	1a5b      	subs	r3, r3, r1
 8000f02:	b281      	uxth	r1, r0
 8000f04:	fbb3 f0fe 	udiv	r0, r3, lr
 8000f08:	fb0e 3310 	mls	r3, lr, r0, r3
 8000f0c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000f10:	fb00 f308 	mul.w	r3, r0, r8
 8000f14:	428b      	cmp	r3, r1
 8000f16:	d907      	bls.n	8000f28 <__udivmoddi4+0x1c4>
 8000f18:	1879      	adds	r1, r7, r1
 8000f1a:	f100 3cff 	add.w	ip, r0, #4294967295
 8000f1e:	d273      	bcs.n	8001008 <__udivmoddi4+0x2a4>
 8000f20:	428b      	cmp	r3, r1
 8000f22:	d971      	bls.n	8001008 <__udivmoddi4+0x2a4>
 8000f24:	3802      	subs	r0, #2
 8000f26:	4439      	add	r1, r7
 8000f28:	1acb      	subs	r3, r1, r3
 8000f2a:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000f2e:	e778      	b.n	8000e22 <__udivmoddi4+0xbe>
 8000f30:	f1c6 0c20 	rsb	ip, r6, #32
 8000f34:	fa03 f406 	lsl.w	r4, r3, r6
 8000f38:	fa22 f30c 	lsr.w	r3, r2, ip
 8000f3c:	431c      	orrs	r4, r3
 8000f3e:	fa20 f70c 	lsr.w	r7, r0, ip
 8000f42:	fa01 f306 	lsl.w	r3, r1, r6
 8000f46:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000f4a:	fa21 f10c 	lsr.w	r1, r1, ip
 8000f4e:	431f      	orrs	r7, r3
 8000f50:	0c3b      	lsrs	r3, r7, #16
 8000f52:	fbb1 f9fe 	udiv	r9, r1, lr
 8000f56:	fa1f f884 	uxth.w	r8, r4
 8000f5a:	fb0e 1119 	mls	r1, lr, r9, r1
 8000f5e:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000f62:	fb09 fa08 	mul.w	sl, r9, r8
 8000f66:	458a      	cmp	sl, r1
 8000f68:	fa02 f206 	lsl.w	r2, r2, r6
 8000f6c:	fa00 f306 	lsl.w	r3, r0, r6
 8000f70:	d908      	bls.n	8000f84 <__udivmoddi4+0x220>
 8000f72:	1861      	adds	r1, r4, r1
 8000f74:	f109 30ff 	add.w	r0, r9, #4294967295
 8000f78:	d248      	bcs.n	800100c <__udivmoddi4+0x2a8>
 8000f7a:	458a      	cmp	sl, r1
 8000f7c:	d946      	bls.n	800100c <__udivmoddi4+0x2a8>
 8000f7e:	f1a9 0902 	sub.w	r9, r9, #2
 8000f82:	4421      	add	r1, r4
 8000f84:	eba1 010a 	sub.w	r1, r1, sl
 8000f88:	b2bf      	uxth	r7, r7
 8000f8a:	fbb1 f0fe 	udiv	r0, r1, lr
 8000f8e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000f92:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000f96:	fb00 f808 	mul.w	r8, r0, r8
 8000f9a:	45b8      	cmp	r8, r7
 8000f9c:	d907      	bls.n	8000fae <__udivmoddi4+0x24a>
 8000f9e:	19e7      	adds	r7, r4, r7
 8000fa0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000fa4:	d22e      	bcs.n	8001004 <__udivmoddi4+0x2a0>
 8000fa6:	45b8      	cmp	r8, r7
 8000fa8:	d92c      	bls.n	8001004 <__udivmoddi4+0x2a0>
 8000faa:	3802      	subs	r0, #2
 8000fac:	4427      	add	r7, r4
 8000fae:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000fb2:	eba7 0708 	sub.w	r7, r7, r8
 8000fb6:	fba0 8902 	umull	r8, r9, r0, r2
 8000fba:	454f      	cmp	r7, r9
 8000fbc:	46c6      	mov	lr, r8
 8000fbe:	4649      	mov	r1, r9
 8000fc0:	d31a      	bcc.n	8000ff8 <__udivmoddi4+0x294>
 8000fc2:	d017      	beq.n	8000ff4 <__udivmoddi4+0x290>
 8000fc4:	b15d      	cbz	r5, 8000fde <__udivmoddi4+0x27a>
 8000fc6:	ebb3 020e 	subs.w	r2, r3, lr
 8000fca:	eb67 0701 	sbc.w	r7, r7, r1
 8000fce:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000fd2:	40f2      	lsrs	r2, r6
 8000fd4:	ea4c 0202 	orr.w	r2, ip, r2
 8000fd8:	40f7      	lsrs	r7, r6
 8000fda:	e9c5 2700 	strd	r2, r7, [r5]
 8000fde:	2600      	movs	r6, #0
 8000fe0:	4631      	mov	r1, r6
 8000fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fe6:	462e      	mov	r6, r5
 8000fe8:	4628      	mov	r0, r5
 8000fea:	e70b      	b.n	8000e04 <__udivmoddi4+0xa0>
 8000fec:	4606      	mov	r6, r0
 8000fee:	e6e9      	b.n	8000dc4 <__udivmoddi4+0x60>
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	e6fd      	b.n	8000df0 <__udivmoddi4+0x8c>
 8000ff4:	4543      	cmp	r3, r8
 8000ff6:	d2e5      	bcs.n	8000fc4 <__udivmoddi4+0x260>
 8000ff8:	ebb8 0e02 	subs.w	lr, r8, r2
 8000ffc:	eb69 0104 	sbc.w	r1, r9, r4
 8001000:	3801      	subs	r0, #1
 8001002:	e7df      	b.n	8000fc4 <__udivmoddi4+0x260>
 8001004:	4608      	mov	r0, r1
 8001006:	e7d2      	b.n	8000fae <__udivmoddi4+0x24a>
 8001008:	4660      	mov	r0, ip
 800100a:	e78d      	b.n	8000f28 <__udivmoddi4+0x1c4>
 800100c:	4681      	mov	r9, r0
 800100e:	e7b9      	b.n	8000f84 <__udivmoddi4+0x220>
 8001010:	4666      	mov	r6, ip
 8001012:	e775      	b.n	8000f00 <__udivmoddi4+0x19c>
 8001014:	4630      	mov	r0, r6
 8001016:	e74a      	b.n	8000eae <__udivmoddi4+0x14a>
 8001018:	f1ac 0c02 	sub.w	ip, ip, #2
 800101c:	4439      	add	r1, r7
 800101e:	e713      	b.n	8000e48 <__udivmoddi4+0xe4>
 8001020:	3802      	subs	r0, #2
 8001022:	443c      	add	r4, r7
 8001024:	e724      	b.n	8000e70 <__udivmoddi4+0x10c>
 8001026:	bf00      	nop

08001028 <__aeabi_idiv0>:
 8001028:	4770      	bx	lr
 800102a:	bf00      	nop

0800102c <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800102c:	b480      	push	{r7}
 800102e:	b083      	sub	sp, #12
 8001030:	af00      	add	r7, sp, #0
 8001032:	6078      	str	r0, [r7, #4]
 8001034:	6039      	str	r1, [r7, #0]
 8001036:	683b      	ldr	r3, [r7, #0]
 8001038:	4618      	mov	r0, r3
 800103a:	370c      	adds	r7, #12
 800103c:	46bd      	mov	sp, r7
 800103e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001042:	4770      	bx	lr

08001044 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
 8001044:	b580      	push	{r7, lr}
 8001046:	b084      	sub	sp, #16
 8001048:	af00      	add	r7, sp, #0
 800104a:	6078      	str	r0, [r7, #4]
 800104c:	687b      	ldr	r3, [r7, #4]
 800104e:	60fb      	str	r3, [r7, #12]
      return __builtin_is_constant_evaluated();
 8001050:	2300      	movs	r3, #0
      {
#if __cplusplus >= 201703L
	if (__constant_string_p(__s))
 8001052:	2b00      	cmp	r3, #0
 8001054:	d004      	beq.n	8001060 <_ZNSt11char_traitsIcE6lengthEPKc+0x1c>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
 8001056:	6878      	ldr	r0, [r7, #4]
 8001058:	f000 f924 	bl	80012a4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
 800105c:	4603      	mov	r3, r0
 800105e:	e004      	b.n	800106a <_ZNSt11char_traitsIcE6lengthEPKc+0x26>
#endif
	return __builtin_strlen(__s);
 8001060:	6878      	ldr	r0, [r7, #4]
 8001062:	f7ff f925 	bl	80002b0 <strlen>
 8001066:	4603      	mov	r3, r0
 8001068:	bf00      	nop
      }
 800106a:	4618      	mov	r0, r3
 800106c:	3710      	adds	r7, #16
 800106e:	46bd      	mov	sp, r7
 8001070:	bd80      	pop	{r7, pc}

08001072 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
 8001072:	b580      	push	{r7, lr}
 8001074:	b082      	sub	sp, #8
 8001076:	af00      	add	r7, sp, #0
 8001078:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_color = _S_red;
 800107a:	687b      	ldr	r3, [r7, #4]
 800107c:	2200      	movs	r2, #0
 800107e:	701a      	strb	r2, [r3, #0]
      _M_reset();
 8001080:	6878      	ldr	r0, [r7, #4]
 8001082:	f000 f805 	bl	8001090 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	4618      	mov	r0, r3
 800108a:	3708      	adds	r7, #8
 800108c:	46bd      	mov	sp, r7
 800108e:	bd80      	pop	{r7, pc}

08001090 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
 8001090:	b480      	push	{r7}
 8001092:	b083      	sub	sp, #12
 8001094:	af00      	add	r7, sp, #0
 8001096:	6078      	str	r0, [r7, #4]
    {
      _M_header._M_parent = 0;
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	2200      	movs	r2, #0
 800109c:	605a      	str	r2, [r3, #4]
      _M_header._M_left = &_M_header;
 800109e:	687a      	ldr	r2, [r7, #4]
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	609a      	str	r2, [r3, #8]
      _M_header._M_right = &_M_header;
 80010a4:	687a      	ldr	r2, [r7, #4]
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	60da      	str	r2, [r3, #12]
      _M_node_count = 0;
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	2200      	movs	r2, #0
 80010ae:	611a      	str	r2, [r3, #16]
    }
 80010b0:	bf00      	nop
 80010b2:	370c      	adds	r7, #12
 80010b4:	46bd      	mov	sp, r7
 80010b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ba:	4770      	bx	lr

080010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80010bc:	b480      	push	{r7}
 80010be:	b083      	sub	sp, #12
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80010c4:	687b      	ldr	r3, [r7, #4]
 80010c6:	4618      	mov	r0, r3
 80010c8:	370c      	adds	r7, #12
 80010ca:	46bd      	mov	sp, r7
 80010cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010d0:	4770      	bx	lr

080010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>:
   *
   *  @tparam _T1  Type of first object.
   *  @tparam _T2  Type of second object.
   */
  template<typename _T1, typename _T2>
    struct pair
 80010d2:	b580      	push	{r7, lr}
 80010d4:	b082      	sub	sp, #8
 80010d6:	af00      	add	r7, sp, #0
 80010d8:	6078      	str	r0, [r7, #4]
 80010da:	687b      	ldr	r3, [r7, #4]
 80010dc:	4618      	mov	r0, r3
 80010de:	f01f fa6a 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	4618      	mov	r0, r3
 80010e6:	3708      	adds	r7, #8
 80010e8:	46bd      	mov	sp, r7
 80010ea:	bd80      	pop	{r7, pc}

080010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
 80010ec:	b5b0      	push	{r4, r5, r7, lr}
 80010ee:	b086      	sub	sp, #24
 80010f0:	af00      	add	r7, sp, #0
 80010f2:	60f8      	str	r0, [r7, #12]
 80010f4:	60b9      	str	r1, [r7, #8]
 80010f6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80010f8:	68fc      	ldr	r4, [r7, #12]
 80010fa:	68b8      	ldr	r0, [r7, #8]
 80010fc:	f000 f93a 	bl	8001374 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8001100:	4605      	mov	r5, r0
 8001102:	f107 0314 	add.w	r3, r7, #20
 8001106:	4618      	mov	r0, r3
 8001108:	f01f f88f 	bl	802022a <_ZNSaIcEC1Ev>
 800110c:	f107 0314 	add.w	r3, r7, #20
 8001110:	461a      	mov	r2, r3
 8001112:	4629      	mov	r1, r5
 8001114:	4620      	mov	r0, r4
 8001116:	f000 f938 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800111a:	f107 0314 	add.w	r3, r7, #20
 800111e:	4618      	mov	r0, r3
 8001120:	f01f f884 	bl	802022c <_ZNSaIcED1Ev>
 8001124:	6878      	ldr	r0, [r7, #4]
 8001126:	f7ff ffc9 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 800112a:	4603      	mov	r3, r0
 800112c:	781a      	ldrb	r2, [r3, #0]
 800112e:	68fb      	ldr	r3, [r7, #12]
 8001130:	761a      	strb	r2, [r3, #24]
 8001132:	68fb      	ldr	r3, [r7, #12]
 8001134:	4618      	mov	r0, r3
 8001136:	3718      	adds	r7, #24
 8001138:	46bd      	mov	sp, r7
 800113a:	bdb0      	pop	{r4, r5, r7, pc}

0800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800113c:	b5b0      	push	{r4, r5, r7, lr}
 800113e:	b086      	sub	sp, #24
 8001140:	af00      	add	r7, sp, #0
 8001142:	60f8      	str	r0, [r7, #12]
 8001144:	60b9      	str	r1, [r7, #8]
 8001146:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001148:	68fc      	ldr	r4, [r7, #12]
 800114a:	68b8      	ldr	r0, [r7, #8]
 800114c:	f000 f943 	bl	80013d6 <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8001150:	4605      	mov	r5, r0
 8001152:	f107 0314 	add.w	r3, r7, #20
 8001156:	4618      	mov	r0, r3
 8001158:	f01f f867 	bl	802022a <_ZNSaIcEC1Ev>
 800115c:	f107 0314 	add.w	r3, r7, #20
 8001160:	461a      	mov	r2, r3
 8001162:	4629      	mov	r1, r5
 8001164:	4620      	mov	r0, r4
 8001166:	f000 f910 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800116a:	f107 0314 	add.w	r3, r7, #20
 800116e:	4618      	mov	r0, r3
 8001170:	f01f f85c 	bl	802022c <_ZNSaIcED1Ev>
 8001174:	6878      	ldr	r0, [r7, #4]
 8001176:	f7ff ffa1 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 800117a:	4603      	mov	r3, r0
 800117c:	781a      	ldrb	r2, [r3, #0]
 800117e:	68fb      	ldr	r3, [r7, #12]
 8001180:	761a      	strb	r2, [r3, #24]
 8001182:	68fb      	ldr	r3, [r7, #12]
 8001184:	4618      	mov	r0, r3
 8001186:	3718      	adds	r7, #24
 8001188:	46bd      	mov	sp, r7
 800118a:	bdb0      	pop	{r4, r5, r7, pc}

0800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800118c:	b5b0      	push	{r4, r5, r7, lr}
 800118e:	b086      	sub	sp, #24
 8001190:	af00      	add	r7, sp, #0
 8001192:	60f8      	str	r0, [r7, #12]
 8001194:	60b9      	str	r1, [r7, #8]
 8001196:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001198:	68fc      	ldr	r4, [r7, #12]
 800119a:	68b8      	ldr	r0, [r7, #8]
 800119c:	f000 f926 	bl	80013ec <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011a0:	4605      	mov	r5, r0
 80011a2:	f107 0314 	add.w	r3, r7, #20
 80011a6:	4618      	mov	r0, r3
 80011a8:	f01f f83f 	bl	802022a <_ZNSaIcEC1Ev>
 80011ac:	f107 0314 	add.w	r3, r7, #20
 80011b0:	461a      	mov	r2, r3
 80011b2:	4629      	mov	r1, r5
 80011b4:	4620      	mov	r0, r4
 80011b6:	f000 f8e8 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80011ba:	f107 0314 	add.w	r3, r7, #20
 80011be:	4618      	mov	r0, r3
 80011c0:	f01f f834 	bl	802022c <_ZNSaIcED1Ev>
 80011c4:	6878      	ldr	r0, [r7, #4]
 80011c6:	f7ff ff79 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 80011ca:	4603      	mov	r3, r0
 80011cc:	781a      	ldrb	r2, [r3, #0]
 80011ce:	68fb      	ldr	r3, [r7, #12]
 80011d0:	761a      	strb	r2, [r3, #24]
 80011d2:	68fb      	ldr	r3, [r7, #12]
 80011d4:	4618      	mov	r0, r3
 80011d6:	3718      	adds	r7, #24
 80011d8:	46bd      	mov	sp, r7
 80011da:	bdb0      	pop	{r4, r5, r7, pc}

080011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80011dc:	b5b0      	push	{r4, r5, r7, lr}
 80011de:	b086      	sub	sp, #24
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	60f8      	str	r0, [r7, #12]
 80011e4:	60b9      	str	r1, [r7, #8]
 80011e6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80011e8:	68fc      	ldr	r4, [r7, #12]
 80011ea:	68b8      	ldr	r0, [r7, #8]
 80011ec:	f000 f909 	bl	8001402 <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80011f0:	4605      	mov	r5, r0
 80011f2:	f107 0314 	add.w	r3, r7, #20
 80011f6:	4618      	mov	r0, r3
 80011f8:	f01f f817 	bl	802022a <_ZNSaIcEC1Ev>
 80011fc:	f107 0314 	add.w	r3, r7, #20
 8001200:	461a      	mov	r2, r3
 8001202:	4629      	mov	r1, r5
 8001204:	4620      	mov	r0, r4
 8001206:	f000 f8c0 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800120a:	f107 0314 	add.w	r3, r7, #20
 800120e:	4618      	mov	r0, r3
 8001210:	f01f f80c 	bl	802022c <_ZNSaIcED1Ev>
 8001214:	6878      	ldr	r0, [r7, #4]
 8001216:	f7ff ff51 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 800121a:	4603      	mov	r3, r0
 800121c:	781a      	ldrb	r2, [r3, #0]
 800121e:	68fb      	ldr	r3, [r7, #12]
 8001220:	761a      	strb	r2, [r3, #24]
 8001222:	68fb      	ldr	r3, [r7, #12]
 8001224:	4618      	mov	r0, r3
 8001226:	3718      	adds	r7, #24
 8001228:	46bd      	mov	sp, r7
 800122a:	bdb0      	pop	{r4, r5, r7, pc}

0800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800122c:	b5b0      	push	{r4, r5, r7, lr}
 800122e:	b086      	sub	sp, #24
 8001230:	af00      	add	r7, sp, #0
 8001232:	60f8      	str	r0, [r7, #12]
 8001234:	60b9      	str	r1, [r7, #8]
 8001236:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8001238:	68fc      	ldr	r4, [r7, #12]
 800123a:	68b8      	ldr	r0, [r7, #8]
 800123c:	f000 f8ec 	bl	8001418 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8001240:	4605      	mov	r5, r0
 8001242:	f107 0314 	add.w	r3, r7, #20
 8001246:	4618      	mov	r0, r3
 8001248:	f01e ffef 	bl	802022a <_ZNSaIcEC1Ev>
 800124c:	f107 0314 	add.w	r3, r7, #20
 8001250:	461a      	mov	r2, r3
 8001252:	4629      	mov	r1, r5
 8001254:	4620      	mov	r0, r4
 8001256:	f000 f898 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800125a:	f107 0314 	add.w	r3, r7, #20
 800125e:	4618      	mov	r0, r3
 8001260:	f01e ffe4 	bl	802022c <_ZNSaIcED1Ev>
 8001264:	6878      	ldr	r0, [r7, #4]
 8001266:	f7ff ff29 	bl	80010bc <_ZSt7forwardI10token_typeEOT_RNSt16remove_referenceIS1_E4typeE>
 800126a:	4603      	mov	r3, r0
 800126c:	781a      	ldrb	r2, [r3, #0]
 800126e:	68fb      	ldr	r3, [r7, #12]
 8001270:	761a      	strb	r2, [r3, #24]
 8001272:	68fb      	ldr	r3, [r7, #12]
 8001274:	4618      	mov	r0, r3
 8001276:	3718      	adds	r7, #24
 8001278:	46bd      	mov	sp, r7
 800127a:	bdb0      	pop	{r4, r5, r7, pc}

0800127c <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
 800127c:	b480      	push	{r7}
 800127e:	b083      	sub	sp, #12
 8001280:	af00      	add	r7, sp, #0
 8001282:	6078      	str	r0, [r7, #4]
 8001284:	6039      	str	r1, [r7, #0]
      { return __c1 == __c2; }
 8001286:	687b      	ldr	r3, [r7, #4]
 8001288:	781a      	ldrb	r2, [r3, #0]
 800128a:	683b      	ldr	r3, [r7, #0]
 800128c:	781b      	ldrb	r3, [r3, #0]
 800128e:	429a      	cmp	r2, r3
 8001290:	bf0c      	ite	eq
 8001292:	2301      	moveq	r3, #1
 8001294:	2300      	movne	r3, #0
 8001296:	b2db      	uxtb	r3, r3
 8001298:	4618      	mov	r0, r3
 800129a:	370c      	adds	r7, #12
 800129c:	46bd      	mov	sp, r7
 800129e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012a2:	4770      	bx	lr

080012a4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
 80012a4:	b580      	push	{r7, lr}
 80012a6:	b084      	sub	sp, #16
 80012a8:	af00      	add	r7, sp, #0
 80012aa:	6078      	str	r0, [r7, #4]
      std::size_t __i = 0;
 80012ac:	2300      	movs	r3, #0
 80012ae:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 80012b0:	687a      	ldr	r2, [r7, #4]
 80012b2:	68fb      	ldr	r3, [r7, #12]
 80012b4:	4413      	add	r3, r2
 80012b6:	2200      	movs	r2, #0
 80012b8:	72fa      	strb	r2, [r7, #11]
 80012ba:	f107 020b 	add.w	r2, r7, #11
 80012be:	4611      	mov	r1, r2
 80012c0:	4618      	mov	r0, r3
 80012c2:	f7ff ffdb 	bl	800127c <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
 80012c6:	4603      	mov	r3, r0
 80012c8:	f083 0301 	eor.w	r3, r3, #1
 80012cc:	b2db      	uxtb	r3, r3
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	d003      	beq.n	80012da <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x36>
        ++__i;
 80012d2:	68fb      	ldr	r3, [r7, #12]
 80012d4:	3301      	adds	r3, #1
 80012d6:	60fb      	str	r3, [r7, #12]
      while (!eq(__p[__i], char_type()))
 80012d8:	e7ea      	b.n	80012b0 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0xc>
      return __i;
 80012da:	68fb      	ldr	r3, [r7, #12]
    }
 80012dc:	4618      	mov	r0, r3
 80012de:	3710      	adds	r7, #16
 80012e0:	46bd      	mov	sp, r7
 80012e2:	bd80      	pop	{r7, pc}

080012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
 80012e4:	b580      	push	{r7, lr}
 80012e6:	b082      	sub	sp, #8
 80012e8:	af00      	add	r7, sp, #0
 80012ea:	6078      	str	r0, [r7, #4]
 80012ec:	6878      	ldr	r0, [r7, #4]
 80012ee:	f000 f93d 	bl	800156c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	4618      	mov	r0, r3
 80012f6:	3708      	adds	r7, #8
 80012f8:	46bd      	mov	sp, r7
 80012fa:	bd80      	pop	{r7, pc}

080012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

      ~allocator() _GLIBCXX_NOTHROW { }
 80012fc:	b580      	push	{r7, lr}
 80012fe:	b082      	sub	sp, #8
 8001300:	af00      	add	r7, sp, #0
 8001302:	6078      	str	r0, [r7, #4]
 8001304:	6878      	ldr	r0, [r7, #4]
 8001306:	f000 f93c 	bl	8001582 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	4618      	mov	r0, r3
 800130e:	3708      	adds	r7, #8
 8001310:	46bd      	mov	sp, r7
 8001312:	bd80      	pop	{r7, pc}

08001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
       *  Create a %map consisting of copies of the elements in the
       *  initializer_list @a __l.
       *  This is linear in N if the range is already sorted, and NlogN
       *  otherwise (where N is @a __l.size()).
       */
      map(initializer_list<value_type> __l,
 8001314:	b5b0      	push	{r4, r5, r7, lr}
 8001316:	b086      	sub	sp, #24
 8001318:	af00      	add	r7, sp, #0
 800131a:	60f8      	str	r0, [r7, #12]
 800131c:	1d38      	adds	r0, r7, #4
 800131e:	e880 0006 	stmia.w	r0, {r1, r2}
 8001322:	603b      	str	r3, [r7, #0]
	  const _Compare& __comp = _Compare(),
	  const allocator_type& __a = allocator_type())
      : _M_t(__comp, _Pair_alloc_type(__a))
 8001324:	68fc      	ldr	r4, [r7, #12]
 8001326:	f107 0314 	add.w	r3, r7, #20
 800132a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800132c:	4618      	mov	r0, r3
 800132e:	f000 f933 	bl	8001598 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>
 8001332:	f107 0314 	add.w	r3, r7, #20
 8001336:	461a      	mov	r2, r3
 8001338:	6839      	ldr	r1, [r7, #0]
 800133a:	4620      	mov	r0, r4
 800133c:	f000 f946 	bl	80015cc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 8001340:	f107 0314 	add.w	r3, r7, #20
 8001344:	4618      	mov	r0, r3
 8001346:	f7ff ffd9 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 800134a:	68fc      	ldr	r4, [r7, #12]
 800134c:	1d3b      	adds	r3, r7, #4
 800134e:	4618      	mov	r0, r3
 8001350:	f000 f96f 	bl	8001632 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8001354:	4605      	mov	r5, r0
 8001356:	1d3b      	adds	r3, r7, #4
 8001358:	4618      	mov	r0, r3
 800135a:	f000 f976 	bl	800164a <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>
 800135e:	4603      	mov	r3, r0
 8001360:	461a      	mov	r2, r3
 8001362:	4629      	mov	r1, r5
 8001364:	4620      	mov	r0, r4
 8001366:	f000 f982 	bl	800166e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 800136a:	68fb      	ldr	r3, [r7, #12]
 800136c:	4618      	mov	r0, r3
 800136e:	3718      	adds	r7, #24
 8001370:	46bd      	mov	sp, r7
 8001372:	bdb0      	pop	{r4, r5, r7, pc}

08001374 <_ZSt7forwardIRA5_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001374:	b480      	push	{r7}
 8001376:	b083      	sub	sp, #12
 8001378:	af00      	add	r7, sp, #0
 800137a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	4618      	mov	r0, r3
 8001380:	370c      	adds	r7, #12
 8001382:	46bd      	mov	sp, r7
 8001384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001388:	4770      	bx	lr

0800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
#if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 800138a:	b590      	push	{r4, r7, lr}
 800138c:	b085      	sub	sp, #20
 800138e:	af00      	add	r7, sp, #0
 8001390:	60f8      	str	r0, [r7, #12]
 8001392:	60b9      	str	r1, [r7, #8]
 8001394:	607a      	str	r2, [r7, #4]
      : _M_dataplus(_M_local_data(), __a)
 8001396:	68fc      	ldr	r4, [r7, #12]
 8001398:	68f8      	ldr	r0, [r7, #12]
 800139a:	f01f f816 	bl	80203ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
 800139e:	4603      	mov	r3, r0
 80013a0:	687a      	ldr	r2, [r7, #4]
 80013a2:	4619      	mov	r1, r3
 80013a4:	4620      	mov	r0, r4
 80013a6:	f01f fa0d 	bl	80207c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
      { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 80013aa:	68bb      	ldr	r3, [r7, #8]
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d006      	beq.n	80013be <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x34>
 80013b0:	68b8      	ldr	r0, [r7, #8]
 80013b2:	f7ff fe47 	bl	8001044 <_ZNSt11char_traitsIcE6lengthEPKc>
 80013b6:	4602      	mov	r2, r0
 80013b8:	68bb      	ldr	r3, [r7, #8]
 80013ba:	4413      	add	r3, r2
 80013bc:	e001      	b.n	80013c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x38>
 80013be:	68bb      	ldr	r3, [r7, #8]
 80013c0:	3b01      	subs	r3, #1
 80013c2:	461a      	mov	r2, r3
 80013c4:	68b9      	ldr	r1, [r7, #8]
 80013c6:	68f8      	ldr	r0, [r7, #12]
 80013c8:	f000 f8c1 	bl	800154e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>
 80013cc:	68fb      	ldr	r3, [r7, #12]
 80013ce:	4618      	mov	r0, r3
 80013d0:	3714      	adds	r7, #20
 80013d2:	46bd      	mov	sp, r7
 80013d4:	bd90      	pop	{r4, r7, pc}

080013d6 <_ZSt7forwardIRA6_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80013d6:	b480      	push	{r7}
 80013d8:	b083      	sub	sp, #12
 80013da:	af00      	add	r7, sp, #0
 80013dc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	4618      	mov	r0, r3
 80013e2:	370c      	adds	r7, #12
 80013e4:	46bd      	mov	sp, r7
 80013e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ea:	4770      	bx	lr

080013ec <_ZSt7forwardIRA7_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80013ec:	b480      	push	{r7}
 80013ee:	b083      	sub	sp, #12
 80013f0:	af00      	add	r7, sp, #0
 80013f2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80013f4:	687b      	ldr	r3, [r7, #4]
 80013f6:	4618      	mov	r0, r3
 80013f8:	370c      	adds	r7, #12
 80013fa:	46bd      	mov	sp, r7
 80013fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001400:	4770      	bx	lr

08001402 <_ZSt7forwardIRA3_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001402:	b480      	push	{r7}
 8001404:	b083      	sub	sp, #12
 8001406:	af00      	add	r7, sp, #0
 8001408:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800140a:	687b      	ldr	r3, [r7, #4]
 800140c:	4618      	mov	r0, r3
 800140e:	370c      	adds	r7, #12
 8001410:	46bd      	mov	sp, r7
 8001412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001416:	4770      	bx	lr

08001418 <_ZSt7forwardIRA4_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8001418:	b480      	push	{r7}
 800141a:	b083      	sub	sp, #12
 800141c:	af00      	add	r7, sp, #0
 800141e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8001420:	687b      	ldr	r3, [r7, #4]
 8001422:	4618      	mov	r0, r3
 8001424:	370c      	adds	r7, #12
 8001426:	46bd      	mov	sp, r7
 8001428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800142c:	4770      	bx	lr

0800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 800142e:	b580      	push	{r7, lr}
 8001430:	b082      	sub	sp, #8
 8001432:	af00      	add	r7, sp, #0
 8001434:	6078      	str	r0, [r7, #4]
 8001436:	6878      	ldr	r0, [r7, #4]
 8001438:	f000 f945 	bl	80016c6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	4618      	mov	r0, r3
 8001440:	3708      	adds	r7, #8
 8001442:	46bd      	mov	sp, r7
 8001444:	bd80      	pop	{r7, pc}

08001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001446:	b580      	push	{r7, lr}
 8001448:	b082      	sub	sp, #8
 800144a:	af00      	add	r7, sp, #0
 800144c:	6078      	str	r0, [r7, #4]
 800144e:	6878      	ldr	r0, [r7, #4]
 8001450:	f000 f944 	bl	80016dc <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	4618      	mov	r0, r3
 8001458:	3708      	adds	r7, #8
 800145a:	46bd      	mov	sp, r7
 800145c:	bd80      	pop	{r7, pc}

0800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>:
      map(initializer_list<value_type> __l,
 800145e:	b5b0      	push	{r4, r5, r7, lr}
 8001460:	b086      	sub	sp, #24
 8001462:	af00      	add	r7, sp, #0
 8001464:	60f8      	str	r0, [r7, #12]
 8001466:	1d38      	adds	r0, r7, #4
 8001468:	e880 0006 	stmia.w	r0, {r1, r2}
 800146c:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 800146e:	68fc      	ldr	r4, [r7, #12]
 8001470:	f107 0314 	add.w	r3, r7, #20
 8001474:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001476:	4618      	mov	r0, r3
 8001478:	f000 f93b 	bl	80016f2 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>
 800147c:	f107 0314 	add.w	r3, r7, #20
 8001480:	461a      	mov	r2, r3
 8001482:	6839      	ldr	r1, [r7, #0]
 8001484:	4620      	mov	r0, r4
 8001486:	f000 f94e 	bl	8001726 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>
 800148a:	f107 0314 	add.w	r3, r7, #20
 800148e:	4618      	mov	r0, r3
 8001490:	f7ff ffd9 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001494:	68fc      	ldr	r4, [r7, #12]
 8001496:	1d3b      	adds	r3, r7, #4
 8001498:	4618      	mov	r0, r3
 800149a:	f000 f977 	bl	800178c <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 800149e:	4605      	mov	r5, r0
 80014a0:	1d3b      	adds	r3, r7, #4
 80014a2:	4618      	mov	r0, r3
 80014a4:	f000 f97e 	bl	80017a4 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>
 80014a8:	4603      	mov	r3, r0
 80014aa:	461a      	mov	r2, r3
 80014ac:	4629      	mov	r1, r5
 80014ae:	4620      	mov	r0, r4
 80014b0:	f000 f98d 	bl	80017ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>
 80014b4:	68fb      	ldr	r3, [r7, #12]
 80014b6:	4618      	mov	r0, r3
 80014b8:	3718      	adds	r7, #24
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bdb0      	pop	{r4, r5, r7, pc}

080014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 80014be:	b580      	push	{r7, lr}
 80014c0:	b082      	sub	sp, #8
 80014c2:	af00      	add	r7, sp, #0
 80014c4:	6078      	str	r0, [r7, #4]
 80014c6:	6878      	ldr	r0, [r7, #4]
 80014c8:	f000 f9ad 	bl	8001826 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	4618      	mov	r0, r3
 80014d0:	3708      	adds	r7, #8
 80014d2:	46bd      	mov	sp, r7
 80014d4:	bd80      	pop	{r7, pc}

080014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80014d6:	b580      	push	{r7, lr}
 80014d8:	b082      	sub	sp, #8
 80014da:	af00      	add	r7, sp, #0
 80014dc:	6078      	str	r0, [r7, #4]
 80014de:	6878      	ldr	r0, [r7, #4]
 80014e0:	f000 f9ac 	bl	800183c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	4618      	mov	r0, r3
 80014e8:	3708      	adds	r7, #8
 80014ea:	46bd      	mov	sp, r7
 80014ec:	bd80      	pop	{r7, pc}

080014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>:
      map(initializer_list<value_type> __l,
 80014ee:	b5b0      	push	{r4, r5, r7, lr}
 80014f0:	b086      	sub	sp, #24
 80014f2:	af00      	add	r7, sp, #0
 80014f4:	60f8      	str	r0, [r7, #12]
 80014f6:	1d38      	adds	r0, r7, #4
 80014f8:	e880 0006 	stmia.w	r0, {r1, r2}
 80014fc:	603b      	str	r3, [r7, #0]
      : _M_t(__comp, _Pair_alloc_type(__a))
 80014fe:	68fc      	ldr	r4, [r7, #12]
 8001500:	f107 0314 	add.w	r3, r7, #20
 8001504:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8001506:	4618      	mov	r0, r3
 8001508:	f000 f9a3 	bl	8001852 <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>
 800150c:	f107 0314 	add.w	r3, r7, #20
 8001510:	461a      	mov	r2, r3
 8001512:	6839      	ldr	r1, [r7, #0]
 8001514:	4620      	mov	r0, r4
 8001516:	f000 f9b6 	bl	8001886 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>
 800151a:	f107 0314 	add.w	r3, r7, #20
 800151e:	4618      	mov	r0, r3
 8001520:	f7ff ffd9 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
 8001524:	68fc      	ldr	r4, [r7, #12]
 8001526:	1d3b      	adds	r3, r7, #4
 8001528:	4618      	mov	r0, r3
 800152a:	f000 f9df 	bl	80018ec <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 800152e:	4605      	mov	r5, r0
 8001530:	1d3b      	adds	r3, r7, #4
 8001532:	4618      	mov	r0, r3
 8001534:	f000 f9e6 	bl	8001904 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>
 8001538:	4603      	mov	r3, r0
 800153a:	461a      	mov	r2, r3
 800153c:	4629      	mov	r1, r5
 800153e:	4620      	mov	r0, r4
 8001540:	f000 f9f4 	bl	800192c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	4618      	mov	r0, r3
 8001548:	3718      	adds	r7, #24
 800154a:	46bd      	mov	sp, r7
 800154c:	bdb0      	pop	{r4, r5, r7, pc}

0800154e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_>:
        _M_construct(_InIterator __beg, _InIterator __end)
 800154e:	b580      	push	{r7, lr}
 8001550:	b084      	sub	sp, #16
 8001552:	af00      	add	r7, sp, #0
 8001554:	60f8      	str	r0, [r7, #12]
 8001556:	60b9      	str	r1, [r7, #8]
 8001558:	607a      	str	r2, [r7, #4]
	  _M_construct_aux(__beg, __end, _Integral());
 800155a:	687a      	ldr	r2, [r7, #4]
 800155c:	68b9      	ldr	r1, [r7, #8]
 800155e:	68f8      	ldr	r0, [r7, #12]
 8001560:	f000 fa10 	bl	8001984 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>
        }
 8001564:	bf00      	nop
 8001566:	3710      	adds	r7, #16
 8001568:	46bd      	mov	sp, r7
 800156a:	bd80      	pop	{r7, pc}

0800156c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800156c:	b480      	push	{r7}
 800156e:	b083      	sub	sp, #12
 8001570:	af00      	add	r7, sp, #0
 8001572:	6078      	str	r0, [r7, #4]
 8001574:	687b      	ldr	r3, [r7, #4]
 8001576:	4618      	mov	r0, r3
 8001578:	370c      	adds	r7, #12
 800157a:	46bd      	mov	sp, r7
 800157c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001580:	4770      	bx	lr

08001582 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEED1Ev>:

      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8001582:	b480      	push	{r7}
 8001584:	b083      	sub	sp, #12
 8001586:	af00      	add	r7, sp, #0
 8001588:	6078      	str	r0, [r7, #4]
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	4618      	mov	r0, r3
 800158e:	370c      	adds	r7, #12
 8001590:	46bd      	mov	sp, r7
 8001592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001596:	4770      	bx	lr

08001598 <_ZNSaISt4pairIKc10token_typeEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8001598:	b580      	push	{r7, lr}
 800159a:	b082      	sub	sp, #8
 800159c:	af00      	add	r7, sp, #0
 800159e:	6078      	str	r0, [r7, #4]
 80015a0:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80015a2:	6839      	ldr	r1, [r7, #0]
 80015a4:	6878      	ldr	r0, [r7, #4]
 80015a6:	f000 f9fe 	bl	80019a6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	4618      	mov	r0, r3
 80015ae:	3708      	adds	r7, #8
 80015b0:	46bd      	mov	sp, r7
 80015b2:	bd80      	pop	{r7, pc}

080015b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
 80015b4:	b580      	push	{r7, lr}
 80015b6:	b082      	sub	sp, #8
 80015b8:	af00      	add	r7, sp, #0
 80015ba:	6078      	str	r0, [r7, #4]
 80015bc:	6878      	ldr	r0, [r7, #4]
 80015be:	f000 fa0b 	bl	80019d8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80015c2:	687b      	ldr	r3, [r7, #4]
 80015c4:	4618      	mov	r0, r3
 80015c6:	3708      	adds	r7, #8
 80015c8:	46bd      	mov	sp, r7
 80015ca:	bd80      	pop	{r7, pc}

080015cc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree() { }
#else
      _Rb_tree() = default;
#endif

      _Rb_tree(const _Compare& __comp,
 80015cc:	b590      	push	{r4, r7, lr}
 80015ce:	b087      	sub	sp, #28
 80015d0:	af00      	add	r7, sp, #0
 80015d2:	60f8      	str	r0, [r7, #12]
 80015d4:	60b9      	str	r1, [r7, #8]
 80015d6:	607a      	str	r2, [r7, #4]
	       const allocator_type& __a = allocator_type())
      : _M_impl(__comp, _Node_allocator(__a)) { }
 80015d8:	68fc      	ldr	r4, [r7, #12]
 80015da:	f107 0314 	add.w	r3, r7, #20
 80015de:	6879      	ldr	r1, [r7, #4]
 80015e0:	4618      	mov	r0, r3
 80015e2:	f000 f9ec 	bl	80019be <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>
 80015e6:	f107 0314 	add.w	r3, r7, #20
 80015ea:	461a      	mov	r2, r3
 80015ec:	68b9      	ldr	r1, [r7, #8]
 80015ee:	4620      	mov	r0, r4
 80015f0:	f000 f9fe 	bl	80019f0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 80015f4:	f107 0314 	add.w	r3, r7, #20
 80015f8:	4618      	mov	r0, r3
 80015fa:	f000 f9ed 	bl	80019d8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80015fe:	68fb      	ldr	r3, [r7, #12]
 8001600:	4618      	mov	r0, r3
 8001602:	371c      	adds	r7, #28
 8001604:	46bd      	mov	sp, r7
 8001606:	bd90      	pop	{r4, r7, pc}

08001608 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8001608:	b580      	push	{r7, lr}
 800160a:	b082      	sub	sp, #8
 800160c:	af00      	add	r7, sp, #0
 800160e:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8001610:	6878      	ldr	r0, [r7, #4]
 8001612:	f000 fa29 	bl	8001a68 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8001616:	4603      	mov	r3, r0
 8001618:	4619      	mov	r1, r3
 800161a:	6878      	ldr	r0, [r7, #4]
 800161c:	f000 fa05 	bl	8001a2a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	4618      	mov	r0, r3
 8001624:	f7ff ffc6 	bl	80015b4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	4618      	mov	r0, r3
 800162c:	3708      	adds	r7, #8
 800162e:	46bd      	mov	sp, r7
 8001630:	bd80      	pop	{r7, pc}

08001632 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
 8001632:	b480      	push	{r7}
 8001634:	b083      	sub	sp, #12
 8001636:	af00      	add	r7, sp, #0
 8001638:	6078      	str	r0, [r7, #4]
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	681b      	ldr	r3, [r3, #0]
 800163e:	4618      	mov	r0, r3
 8001640:	370c      	adds	r7, #12
 8001642:	46bd      	mov	sp, r7
 8001644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001648:	4770      	bx	lr

0800164a <_ZNKSt16initializer_listISt4pairIKc10token_typeEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
 800164a:	b590      	push	{r4, r7, lr}
 800164c:	b083      	sub	sp, #12
 800164e:	af00      	add	r7, sp, #0
 8001650:	6078      	str	r0, [r7, #4]
 8001652:	6878      	ldr	r0, [r7, #4]
 8001654:	f7ff ffed 	bl	8001632 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE5beginEv>
 8001658:	4604      	mov	r4, r0
 800165a:	6878      	ldr	r0, [r7, #4]
 800165c:	f000 fa10 	bl	8001a80 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>
 8001660:	4603      	mov	r3, r0
 8001662:	005b      	lsls	r3, r3, #1
 8001664:	4423      	add	r3, r4
 8001666:	4618      	mov	r0, r3
 8001668:	370c      	adds	r7, #12
 800166a:	46bd      	mov	sp, r7
 800166c:	bd90      	pop	{r4, r7, pc}

0800166e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	using __same_value_type
	  = is_same<value_type, typename iterator_traits<_Iter>::value_type>;

      template<typename _InputIterator>
	__enable_if_t<__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 800166e:	b580      	push	{r7, lr}
 8001670:	b088      	sub	sp, #32
 8001672:	af00      	add	r7, sp, #0
 8001674:	60f8      	str	r0, [r7, #12]
 8001676:	60b9      	str	r1, [r7, #8]
 8001678:	607a      	str	r2, [r7, #4]
	{
	  _Alloc_node __an(*this);
 800167a:	f107 0314 	add.w	r3, r7, #20
 800167e:	68f9      	ldr	r1, [r7, #12]
 8001680:	4618      	mov	r0, r3
 8001682:	f000 fa09 	bl	8001a98 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 8001686:	68ba      	ldr	r2, [r7, #8]
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	429a      	cmp	r2, r3
 800168c:	d017      	beq.n	80016be <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 800168e:	68f8      	ldr	r0, [r7, #12]
 8001690:	f000 fa11 	bl	8001ab6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8001694:	4603      	mov	r3, r0
 8001696:	61fb      	str	r3, [r7, #28]
 8001698:	f107 021c 	add.w	r2, r7, #28
 800169c:	f107 0318 	add.w	r3, r7, #24
 80016a0:	4611      	mov	r1, r2
 80016a2:	4618      	mov	r0, r3
 80016a4:	f000 fa18 	bl	8001ad8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 80016a8:	f107 0314 	add.w	r3, r7, #20
 80016ac:	68ba      	ldr	r2, [r7, #8]
 80016ae:	69b9      	ldr	r1, [r7, #24]
 80016b0:	68f8      	ldr	r0, [r7, #12]
 80016b2:	f000 fa21 	bl	8001af8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 80016b6:	68bb      	ldr	r3, [r7, #8]
 80016b8:	3302      	adds	r3, #2
 80016ba:	60bb      	str	r3, [r7, #8]
 80016bc:	e7e3      	b.n	8001686 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 80016be:	bf00      	nop
 80016c0:	3720      	adds	r7, #32
 80016c2:	46bd      	mov	sp, r7
 80016c4:	bd80      	pop	{r7, pc}

080016c6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80016c6:	b480      	push	{r7}
 80016c8:	b083      	sub	sp, #12
 80016ca:	af00      	add	r7, sp, #0
 80016cc:	6078      	str	r0, [r7, #4]
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	4618      	mov	r0, r3
 80016d2:	370c      	adds	r7, #12
 80016d4:	46bd      	mov	sp, r7
 80016d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016da:	4770      	bx	lr

080016dc <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 80016dc:	b480      	push	{r7}
 80016de:	b083      	sub	sp, #12
 80016e0:	af00      	add	r7, sp, #0
 80016e2:	6078      	str	r0, [r7, #4]
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	4618      	mov	r0, r3
 80016e8:	370c      	adds	r7, #12
 80016ea:	46bd      	mov	sp, r7
 80016ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016f0:	4770      	bx	lr

080016f2 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKS9_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80016f2:	b580      	push	{r7, lr}
 80016f4:	b082      	sub	sp, #8
 80016f6:	af00      	add	r7, sp, #0
 80016f8:	6078      	str	r0, [r7, #4]
 80016fa:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80016fc:	6839      	ldr	r1, [r7, #0]
 80016fe:	6878      	ldr	r0, [r7, #4]
 8001700:	f000 fa2d 	bl	8001b5e <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>
 8001704:	687b      	ldr	r3, [r7, #4]
 8001706:	4618      	mov	r0, r3
 8001708:	3708      	adds	r7, #8
 800170a:	46bd      	mov	sp, r7
 800170c:	bd80      	pop	{r7, pc}

0800170e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800170e:	b580      	push	{r7, lr}
 8001710:	b082      	sub	sp, #8
 8001712:	af00      	add	r7, sp, #0
 8001714:	6078      	str	r0, [r7, #4]
 8001716:	6878      	ldr	r0, [r7, #4]
 8001718:	f000 fa3a 	bl	8001b90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 800171c:	687b      	ldr	r3, [r7, #4]
 800171e:	4618      	mov	r0, r3
 8001720:	3708      	adds	r7, #8
 8001722:	46bd      	mov	sp, r7
 8001724:	bd80      	pop	{r7, pc}

08001726 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1ERKSD_RKSE_>:
      _Rb_tree(const _Compare& __comp,
 8001726:	b590      	push	{r4, r7, lr}
 8001728:	b087      	sub	sp, #28
 800172a:	af00      	add	r7, sp, #0
 800172c:	60f8      	str	r0, [r7, #12]
 800172e:	60b9      	str	r1, [r7, #8]
 8001730:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 8001732:	68fc      	ldr	r4, [r7, #12]
 8001734:	f107 0314 	add.w	r3, r7, #20
 8001738:	6879      	ldr	r1, [r7, #4]
 800173a:	4618      	mov	r0, r3
 800173c:	f000 fa1b 	bl	8001b76 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>
 8001740:	f107 0314 	add.w	r3, r7, #20
 8001744:	461a      	mov	r2, r3
 8001746:	68b9      	ldr	r1, [r7, #8]
 8001748:	4620      	mov	r0, r4
 800174a:	f000 fa2d 	bl	8001ba8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>
 800174e:	f107 0314 	add.w	r3, r7, #20
 8001752:	4618      	mov	r0, r3
 8001754:	f000 fa1c 	bl	8001b90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8001758:	68fb      	ldr	r3, [r7, #12]
 800175a:	4618      	mov	r0, r3
 800175c:	371c      	adds	r7, #28
 800175e:	46bd      	mov	sp, r7
 8001760:	bd90      	pop	{r4, r7, pc}

08001762 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8001762:	b580      	push	{r7, lr}
 8001764:	b082      	sub	sp, #8
 8001766:	af00      	add	r7, sp, #0
 8001768:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800176a:	6878      	ldr	r0, [r7, #4]
 800176c:	f000 fa58 	bl	8001c20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8001770:	4603      	mov	r3, r0
 8001772:	4619      	mov	r1, r3
 8001774:	6878      	ldr	r0, [r7, #4]
 8001776:	f000 fa34 	bl	8001be2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	4618      	mov	r0, r3
 800177e:	f7ff ffc6 	bl	800170e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 8001782:	687b      	ldr	r3, [r7, #4]
 8001784:	4618      	mov	r0, r3
 8001786:	3708      	adds	r7, #8
 8001788:	46bd      	mov	sp, r7
 800178a:	bd80      	pop	{r7, pc}

0800178c <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>:
      begin() const noexcept { return _M_array; }
 800178c:	b480      	push	{r7}
 800178e:	b083      	sub	sp, #12
 8001790:	af00      	add	r7, sp, #0
 8001792:	6078      	str	r0, [r7, #4]
 8001794:	687b      	ldr	r3, [r7, #4]
 8001796:	681b      	ldr	r3, [r3, #0]
 8001798:	4618      	mov	r0, r3
 800179a:	370c      	adds	r7, #12
 800179c:	46bd      	mov	sp, r7
 800179e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a2:	4770      	bx	lr

080017a4 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE3endEv>:
      end() const noexcept { return begin() + size(); }
 80017a4:	b590      	push	{r4, r7, lr}
 80017a6:	b083      	sub	sp, #12
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
 80017ac:	6878      	ldr	r0, [r7, #4]
 80017ae:	f7ff ffed 	bl	800178c <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE5beginEv>
 80017b2:	4604      	mov	r4, r0
 80017b4:	6878      	ldr	r0, [r7, #4]
 80017b6:	f000 fa3f 	bl	8001c38 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>
 80017ba:	4602      	mov	r2, r0
 80017bc:	4613      	mov	r3, r2
 80017be:	00db      	lsls	r3, r3, #3
 80017c0:	1a9b      	subs	r3, r3, r2
 80017c2:	009b      	lsls	r3, r3, #2
 80017c4:	4423      	add	r3, r4
 80017c6:	4618      	mov	r0, r3
 80017c8:	370c      	adds	r7, #12
 80017ca:	46bd      	mov	sp, r7
 80017cc:	bd90      	pop	{r4, r7, pc}

080017ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 80017ce:	b580      	push	{r7, lr}
 80017d0:	b088      	sub	sp, #32
 80017d2:	af00      	add	r7, sp, #0
 80017d4:	60f8      	str	r0, [r7, #12]
 80017d6:	60b9      	str	r1, [r7, #8]
 80017d8:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 80017da:	f107 0314 	add.w	r3, r7, #20
 80017de:	68f9      	ldr	r1, [r7, #12]
 80017e0:	4618      	mov	r0, r3
 80017e2:	f000 fa35 	bl	8001c50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  for (; __first != __last; ++__first)
 80017e6:	68ba      	ldr	r2, [r7, #8]
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	429a      	cmp	r2, r3
 80017ec:	d017      	beq.n	800181e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 80017ee:	68f8      	ldr	r0, [r7, #12]
 80017f0:	f000 fa3d 	bl	8001c6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 80017f4:	4603      	mov	r3, r0
 80017f6:	61fb      	str	r3, [r7, #28]
 80017f8:	f107 021c 	add.w	r2, r7, #28
 80017fc:	f107 0318 	add.w	r3, r7, #24
 8001800:	4611      	mov	r1, r2
 8001802:	4618      	mov	r0, r3
 8001804:	f000 fa44 	bl	8001c90 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 8001808:	f107 0314 	add.w	r3, r7, #20
 800180c:	68ba      	ldr	r2, [r7, #8]
 800180e:	69b9      	ldr	r1, [r7, #24]
 8001810:	68f8      	ldr	r0, [r7, #12]
 8001812:	f000 fa4d 	bl	8001cb0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>
	  for (; __first != __last; ++__first)
 8001816:	68bb      	ldr	r3, [r7, #8]
 8001818:	331c      	adds	r3, #28
 800181a:	60bb      	str	r3, [r7, #8]
 800181c:	e7e3      	b.n	80017e6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_insert_range_uniqueIPKS9_EENSt9enable_ifIXsrSt7is_sameIS9_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESM_SM_+0x18>
	}
 800181e:	bf00      	nop
 8001820:	3720      	adds	r7, #32
 8001822:	46bd      	mov	sp, r7
 8001824:	bd80      	pop	{r7, pc}

08001826 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8001826:	b480      	push	{r7}
 8001828:	b083      	sub	sp, #12
 800182a:	af00      	add	r7, sp, #0
 800182c:	6078      	str	r0, [r7, #4]
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	4618      	mov	r0, r3
 8001832:	370c      	adds	r7, #12
 8001834:	46bd      	mov	sp, r7
 8001836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800183a:	4770      	bx	lr

0800183c <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800183c:	b480      	push	{r7}
 800183e:	b083      	sub	sp, #12
 8001840:	af00      	add	r7, sp, #0
 8001842:	6078      	str	r0, [r7, #4]
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	4618      	mov	r0, r3
 8001848:	370c      	adds	r7, #12
 800184a:	46bd      	mov	sp, r7
 800184c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001850:	4770      	bx	lr

08001852 <_ZNSaISt4pairIKc12double_tokenEEC1ERKS3_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8001852:	b580      	push	{r7, lr}
 8001854:	b082      	sub	sp, #8
 8001856:	af00      	add	r7, sp, #0
 8001858:	6078      	str	r0, [r7, #4]
 800185a:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 800185c:	6839      	ldr	r1, [r7, #0]
 800185e:	6878      	ldr	r0, [r7, #4]
 8001860:	f000 fa59 	bl	8001d16 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	4618      	mov	r0, r3
 8001868:	3708      	adds	r7, #8
 800186a:	46bd      	mov	sp, r7
 800186c:	bd80      	pop	{r7, pc}

0800186e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800186e:	b580      	push	{r7, lr}
 8001870:	b082      	sub	sp, #8
 8001872:	af00      	add	r7, sp, #0
 8001874:	6078      	str	r0, [r7, #4]
 8001876:	6878      	ldr	r0, [r7, #4]
 8001878:	f000 fa66 	bl	8001d48 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	4618      	mov	r0, r3
 8001880:	3708      	adds	r7, #8
 8001882:	46bd      	mov	sp, r7
 8001884:	bd80      	pop	{r7, pc}

08001886 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EEC1ERKS7_RKS8_>:
      _Rb_tree(const _Compare& __comp,
 8001886:	b590      	push	{r4, r7, lr}
 8001888:	b087      	sub	sp, #28
 800188a:	af00      	add	r7, sp, #0
 800188c:	60f8      	str	r0, [r7, #12]
 800188e:	60b9      	str	r1, [r7, #8]
 8001890:	607a      	str	r2, [r7, #4]
      : _M_impl(__comp, _Node_allocator(__a)) { }
 8001892:	68fc      	ldr	r4, [r7, #12]
 8001894:	f107 0314 	add.w	r3, r7, #20
 8001898:	6879      	ldr	r1, [r7, #4]
 800189a:	4618      	mov	r0, r3
 800189c:	f000 fa47 	bl	8001d2e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>
 80018a0:	f107 0314 	add.w	r3, r7, #20
 80018a4:	461a      	mov	r2, r3
 80018a6:	68b9      	ldr	r1, [r7, #8]
 80018a8:	4620      	mov	r0, r4
 80018aa:	f000 fa59 	bl	8001d60 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>
 80018ae:	f107 0314 	add.w	r3, r7, #20
 80018b2:	4618      	mov	r0, r3
 80018b4:	f000 fa48 	bl	8001d48 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 80018b8:	68fb      	ldr	r3, [r7, #12]
 80018ba:	4618      	mov	r0, r3
 80018bc:	371c      	adds	r7, #28
 80018be:	46bd      	mov	sp, r7
 80018c0:	bd90      	pop	{r4, r7, pc}

080018c2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 80018c2:	b580      	push	{r7, lr}
 80018c4:	b082      	sub	sp, #8
 80018c6:	af00      	add	r7, sp, #0
 80018c8:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 80018ca:	6878      	ldr	r0, [r7, #4]
 80018cc:	f000 fa84 	bl	8001dd8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 80018d0:	4603      	mov	r3, r0
 80018d2:	4619      	mov	r1, r3
 80018d4:	6878      	ldr	r0, [r7, #4]
 80018d6:	f000 fa60 	bl	8001d9a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	4618      	mov	r0, r3
 80018de:	f7ff ffc6 	bl	800186e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EED1Ev>
 80018e2:	687b      	ldr	r3, [r7, #4]
 80018e4:	4618      	mov	r0, r3
 80018e6:	3708      	adds	r7, #8
 80018e8:	46bd      	mov	sp, r7
 80018ea:	bd80      	pop	{r7, pc}

080018ec <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>:
      begin() const noexcept { return _M_array; }
 80018ec:	b480      	push	{r7}
 80018ee:	b083      	sub	sp, #12
 80018f0:	af00      	add	r7, sp, #0
 80018f2:	6078      	str	r0, [r7, #4]
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	4618      	mov	r0, r3
 80018fa:	370c      	adds	r7, #12
 80018fc:	46bd      	mov	sp, r7
 80018fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001902:	4770      	bx	lr

08001904 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE3endEv>:
      end() const noexcept { return begin() + size(); }
 8001904:	b590      	push	{r4, r7, lr}
 8001906:	b083      	sub	sp, #12
 8001908:	af00      	add	r7, sp, #0
 800190a:	6078      	str	r0, [r7, #4]
 800190c:	6878      	ldr	r0, [r7, #4]
 800190e:	f7ff ffed 	bl	80018ec <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE5beginEv>
 8001912:	4604      	mov	r4, r0
 8001914:	6878      	ldr	r0, [r7, #4]
 8001916:	f000 fa6b 	bl	8001df0 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>
 800191a:	4602      	mov	r2, r0
 800191c:	4613      	mov	r3, r2
 800191e:	005b      	lsls	r3, r3, #1
 8001920:	4413      	add	r3, r2
 8001922:	4423      	add	r3, r4
 8001924:	4618      	mov	r0, r3
 8001926:	370c      	adds	r7, #12
 8001928:	46bd      	mov	sp, r7
 800192a:	bd90      	pop	{r4, r7, pc}

0800192c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
 800192c:	b580      	push	{r7, lr}
 800192e:	b088      	sub	sp, #32
 8001930:	af00      	add	r7, sp, #0
 8001932:	60f8      	str	r0, [r7, #12]
 8001934:	60b9      	str	r1, [r7, #8]
 8001936:	607a      	str	r2, [r7, #4]
	  _Alloc_node __an(*this);
 8001938:	f107 0314 	add.w	r3, r7, #20
 800193c:	68f9      	ldr	r1, [r7, #12]
 800193e:	4618      	mov	r0, r3
 8001940:	f000 fa62 	bl	8001e08 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>
	  for (; __first != __last; ++__first)
 8001944:	68ba      	ldr	r2, [r7, #8]
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	429a      	cmp	r2, r3
 800194a:	d017      	beq.n	800197c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x50>
	    _M_insert_unique_(end(), *__first, __an);
 800194c:	68f8      	ldr	r0, [r7, #12]
 800194e:	f000 fa6a 	bl	8001e26 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8001952:	4603      	mov	r3, r0
 8001954:	61fb      	str	r3, [r7, #28]
 8001956:	f107 021c 	add.w	r2, r7, #28
 800195a:	f107 0318 	add.w	r3, r7, #24
 800195e:	4611      	mov	r1, r2
 8001960:	4618      	mov	r0, r3
 8001962:	f000 fa71 	bl	8001e48 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>
 8001966:	f107 0314 	add.w	r3, r7, #20
 800196a:	68ba      	ldr	r2, [r7, #8]
 800196c:	69b9      	ldr	r1, [r7, #24]
 800196e:	68f8      	ldr	r0, [r7, #12]
 8001970:	f000 fa7a 	bl	8001e68 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>
	  for (; __first != __last; ++__first)
 8001974:	68bb      	ldr	r3, [r7, #8]
 8001976:	3303      	adds	r3, #3
 8001978:	60bb      	str	r3, [r7, #8]
 800197a:	e7e3      	b.n	8001944 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE22_M_insert_range_uniqueIPKS3_EENSt9enable_ifIXsrSt7is_sameIS3_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESG_SG_+0x18>
	}
 800197c:	bf00      	nop
 800197e:	3720      	adds	r7, #32
 8001980:	46bd      	mov	sp, r7
 8001982:	bd80      	pop	{r7, pc}

08001984 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type>:
        _M_construct_aux(_InIterator __beg, _InIterator __end,
 8001984:	b590      	push	{r4, r7, lr}
 8001986:	b087      	sub	sp, #28
 8001988:	af00      	add	r7, sp, #0
 800198a:	60f8      	str	r0, [r7, #12]
 800198c:	60b9      	str	r1, [r7, #8]
 800198e:	607a      	str	r2, [r7, #4]
 8001990:	703b      	strb	r3, [r7, #0]
          _M_construct(__beg, __end, _Tag());
 8001992:	4623      	mov	r3, r4
 8001994:	687a      	ldr	r2, [r7, #4]
 8001996:	68b9      	ldr	r1, [r7, #8]
 8001998:	68f8      	ldr	r0, [r7, #12]
 800199a:	f000 faad 	bl	8001ef8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
	}
 800199e:	bf00      	nop
 80019a0:	371c      	adds	r7, #28
 80019a2:	46bd      	mov	sp, r7
 80019a4:	bd90      	pop	{r4, r7, pc}

080019a6 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc10token_typeEEC1ERKS5_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 80019a6:	b480      	push	{r7}
 80019a8:	b083      	sub	sp, #12
 80019aa:	af00      	add	r7, sp, #0
 80019ac:	6078      	str	r0, [r7, #4]
 80019ae:	6039      	str	r1, [r7, #0]
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	4618      	mov	r0, r3
 80019b4:	370c      	adds	r7, #12
 80019b6:	46bd      	mov	sp, r7
 80019b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019bc:	4770      	bx	lr

080019be <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 80019be:	b580      	push	{r7, lr}
 80019c0:	b082      	sub	sp, #8
 80019c2:	af00      	add	r7, sp, #0
 80019c4:	6078      	str	r0, [r7, #4]
 80019c6:	6039      	str	r1, [r7, #0]
 80019c8:	6878      	ldr	r0, [r7, #4]
 80019ca:	f000 fadd 	bl	8001f88 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	4618      	mov	r0, r3
 80019d2:	3708      	adds	r7, #8
 80019d4:	46bd      	mov	sp, r7
 80019d6:	bd80      	pop	{r7, pc}

080019d8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80019d8:	b580      	push	{r7, lr}
 80019da:	b082      	sub	sp, #8
 80019dc:	af00      	add	r7, sp, #0
 80019de:	6078      	str	r0, [r7, #4]
 80019e0:	6878      	ldr	r0, [r7, #4]
 80019e2:	f000 fadc 	bl	8001f9e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>
 80019e6:	687b      	ldr	r3, [r7, #4]
 80019e8:	4618      	mov	r0, r3
 80019ea:	3708      	adds	r7, #8
 80019ec:	46bd      	mov	sp, r7
 80019ee:	bd80      	pop	{r7, pc}

080019f0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 80019f0:	b580      	push	{r7, lr}
 80019f2:	b084      	sub	sp, #16
 80019f4:	af00      	add	r7, sp, #0
 80019f6:	60f8      	str	r0, [r7, #12]
 80019f8:	60b9      	str	r1, [r7, #8]
 80019fa:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 80019fc:	6878      	ldr	r0, [r7, #4]
 80019fe:	f000 fad9 	bl	8001fb4 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>
 8001a02:	4603      	mov	r3, r0
 8001a04:	4619      	mov	r1, r3
 8001a06:	68f8      	ldr	r0, [r7, #12]
 8001a08:	f000 fadf 	bl	8001fca <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>
 8001a0c:	68fb      	ldr	r3, [r7, #12]
 8001a0e:	68b9      	ldr	r1, [r7, #8]
 8001a10:	4618      	mov	r0, r3
 8001a12:	f000 fae8 	bl	8001fe6 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 8001a16:	68fb      	ldr	r3, [r7, #12]
 8001a18:	3304      	adds	r3, #4
 8001a1a:	4618      	mov	r0, r3
 8001a1c:	f7ff fb29 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8001a20:	68fb      	ldr	r3, [r7, #12]
 8001a22:	4618      	mov	r0, r3
 8001a24:	3710      	adds	r7, #16
 8001a26:	46bd      	mov	sp, r7
 8001a28:	bd80      	pop	{r7, pc}

08001a2a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001a2a:	b580      	push	{r7, lr}
 8001a2c:	b084      	sub	sp, #16
 8001a2e:	af00      	add	r7, sp, #0
 8001a30:	6078      	str	r0, [r7, #4]
 8001a32:	6039      	str	r1, [r7, #0]
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
 8001a34:	683b      	ldr	r3, [r7, #0]
 8001a36:	2b00      	cmp	r3, #0
 8001a38:	d012      	beq.n	8001a60 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	{
	  _M_erase(_S_right(__x));
 8001a3a:	6838      	ldr	r0, [r7, #0]
 8001a3c:	f000 fadf 	bl	8001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8001a40:	4603      	mov	r3, r0
 8001a42:	4619      	mov	r1, r3
 8001a44:	6878      	ldr	r0, [r7, #4]
 8001a46:	f7ff fff0 	bl	8001a2a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 8001a4a:	6838      	ldr	r0, [r7, #0]
 8001a4c:	f000 fae3 	bl	8002016 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8001a50:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8001a52:	6839      	ldr	r1, [r7, #0]
 8001a54:	6878      	ldr	r0, [r7, #4]
 8001a56:	f000 faea 	bl	800202e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 8001a5a:	68fb      	ldr	r3, [r7, #12]
 8001a5c:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8001a5e:	e7e9      	b.n	8001a34 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
	}
    }
 8001a60:	bf00      	nop
 8001a62:	3710      	adds	r7, #16
 8001a64:	46bd      	mov	sp, r7
 8001a66:	bd80      	pop	{r7, pc}

08001a68 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8001a68:	b480      	push	{r7}
 8001a6a:	b083      	sub	sp, #12
 8001a6c:	af00      	add	r7, sp, #0
 8001a6e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8001a70:	687b      	ldr	r3, [r7, #4]
 8001a72:	689b      	ldr	r3, [r3, #8]
 8001a74:	4618      	mov	r0, r3
 8001a76:	370c      	adds	r7, #12
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a7e:	4770      	bx	lr

08001a80 <_ZNKSt16initializer_listISt4pairIKc10token_typeEE4sizeEv>:
      size() const noexcept { return _M_len; }
 8001a80:	b480      	push	{r7}
 8001a82:	b083      	sub	sp, #12
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	6078      	str	r0, [r7, #4]
 8001a88:	687b      	ldr	r3, [r7, #4]
 8001a8a:	685b      	ldr	r3, [r3, #4]
 8001a8c:	4618      	mov	r0, r3
 8001a8e:	370c      	adds	r7, #12
 8001a90:	46bd      	mov	sp, r7
 8001a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a96:	4770      	bx	lr

08001a98 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 8001a98:	b480      	push	{r7}
 8001a9a:	b083      	sub	sp, #12
 8001a9c:	af00      	add	r7, sp, #0
 8001a9e:	6078      	str	r0, [r7, #4]
 8001aa0:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	683a      	ldr	r2, [r7, #0]
 8001aa6:	601a      	str	r2, [r3, #0]
 8001aa8:	687b      	ldr	r3, [r7, #4]
 8001aaa:	4618      	mov	r0, r3
 8001aac:	370c      	adds	r7, #12
 8001aae:	46bd      	mov	sp, r7
 8001ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ab4:	4770      	bx	lr

08001ab6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8001ab6:	b580      	push	{r7, lr}
 8001ab8:	b084      	sub	sp, #16
 8001aba:	af00      	add	r7, sp, #0
 8001abc:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	1d1a      	adds	r2, r3, #4
 8001ac2:	f107 030c 	add.w	r3, r7, #12
 8001ac6:	4611      	mov	r1, r2
 8001ac8:	4618      	mov	r0, r3
 8001aca:	f000 fac1 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8001ace:	68fb      	ldr	r3, [r7, #12]
 8001ad0:	4618      	mov	r0, r3
 8001ad2:	3710      	adds	r7, #16
 8001ad4:	46bd      	mov	sp, r7
 8001ad6:	bd80      	pop	{r7, pc}

08001ad8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8001ad8:	b480      	push	{r7}
 8001ada:	b083      	sub	sp, #12
 8001adc:	af00      	add	r7, sp, #0
 8001ade:	6078      	str	r0, [r7, #4]
 8001ae0:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8001ae2:	683b      	ldr	r3, [r7, #0]
 8001ae4:	681a      	ldr	r2, [r3, #0]
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	601a      	str	r2, [r3, #0]
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	4618      	mov	r0, r3
 8001aee:	370c      	adds	r7, #12
 8001af0:	46bd      	mov	sp, r7
 8001af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001af6:	4770      	bx	lr

08001af8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
    template<typename _Arg, typename _NodeGen>
#else
    template<typename _NodeGen>
#endif
      typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001af8:	b5b0      	push	{r4, r5, r7, lr}
 8001afa:	b08a      	sub	sp, #40	; 0x28
 8001afc:	af02      	add	r7, sp, #8
 8001afe:	60f8      	str	r0, [r7, #12]
 8001b00:	60b9      	str	r1, [r7, #8]
 8001b02:	607a      	str	r2, [r7, #4]
 8001b04:	603b      	str	r3, [r7, #0]
			const _Val& __v,
#endif
			_NodeGen& __node_gen)
    {
      pair<_Base_ptr, _Base_ptr> __res
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8001b06:	f107 0318 	add.w	r3, r7, #24
 8001b0a:	6879      	ldr	r1, [r7, #4]
 8001b0c:	4618      	mov	r0, r3
 8001b0e:	f000 fbd1 	bl	80022b4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8001b12:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8001b14:	f107 0010 	add.w	r0, r7, #16
 8001b18:	68ba      	ldr	r2, [r7, #8]
 8001b1a:	68f9      	ldr	r1, [r7, #12]
 8001b1c:	f000 faa7 	bl	800206e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>

      if (__res.second)
 8001b20:	697b      	ldr	r3, [r7, #20]
 8001b22:	2b00      	cmp	r3, #0
 8001b24:	d00f      	beq.n	8001b46 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
	return _M_insert_(__res.first, __res.second,
			  _GLIBCXX_FORWARD(_Arg, __v),
			  __node_gen);
 8001b26:	693c      	ldr	r4, [r7, #16]
 8001b28:	697d      	ldr	r5, [r7, #20]
 8001b2a:	6878      	ldr	r0, [r7, #4]
 8001b2c:	f000 fbce 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8001b30:	4602      	mov	r2, r0
 8001b32:	683b      	ldr	r3, [r7, #0]
 8001b34:	9300      	str	r3, [sp, #0]
 8001b36:	4613      	mov	r3, r2
 8001b38:	462a      	mov	r2, r5
 8001b3a:	4621      	mov	r1, r4
 8001b3c:	68f8      	ldr	r0, [r7, #12]
 8001b3e:	f000 fbd0 	bl	80022e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 8001b42:	4603      	mov	r3, r0
 8001b44:	e007      	b.n	8001b56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8001b46:	693a      	ldr	r2, [r7, #16]
 8001b48:	f107 031c 	add.w	r3, r7, #28
 8001b4c:	4611      	mov	r1, r2
 8001b4e:	4618      	mov	r0, r3
 8001b50:	f000 fa7e 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8001b54:	69fb      	ldr	r3, [r7, #28]
    }
 8001b56:	4618      	mov	r0, r3
 8001b58:	3720      	adds	r7, #32
 8001b5a:	46bd      	mov	sp, r7
 8001b5c:	bdb0      	pop	{r4, r5, r7, pc}

08001b5e <_ZN9__gnu_cxx13new_allocatorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSB_>:
 8001b5e:	b480      	push	{r7}
 8001b60:	b083      	sub	sp, #12
 8001b62:	af00      	add	r7, sp, #0
 8001b64:	6078      	str	r0, [r7, #4]
 8001b66:	6039      	str	r1, [r7, #0]
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	4618      	mov	r0, r3
 8001b6c:	370c      	adds	r7, #12
 8001b6e:	46bd      	mov	sp, r7
 8001b70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b74:	4770      	bx	lr

08001b76 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1IS9_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 8001b76:	b580      	push	{r7, lr}
 8001b78:	b082      	sub	sp, #8
 8001b7a:	af00      	add	r7, sp, #0
 8001b7c:	6078      	str	r0, [r7, #4]
 8001b7e:	6039      	str	r1, [r7, #0]
 8001b80:	6878      	ldr	r0, [r7, #4]
 8001b82:	f000 fbf7 	bl	8002374 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	4618      	mov	r0, r3
 8001b8a:	3708      	adds	r7, #8
 8001b8c:	46bd      	mov	sp, r7
 8001b8e:	bd80      	pop	{r7, pc}

08001b90 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001b90:	b580      	push	{r7, lr}
 8001b92:	b082      	sub	sp, #8
 8001b94:	af00      	add	r7, sp, #0
 8001b96:	6078      	str	r0, [r7, #4]
 8001b98:	6878      	ldr	r0, [r7, #4]
 8001b9a:	f000 fbf6 	bl	800238a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	4618      	mov	r0, r3
 8001ba2:	3708      	adds	r7, #8
 8001ba4:	46bd      	mov	sp, r7
 8001ba6:	bd80      	pop	{r7, pc}

08001ba8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1ERKSD_OSaISt13_Rb_tree_nodeIS9_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	b084      	sub	sp, #16
 8001bac:	af00      	add	r7, sp, #0
 8001bae:	60f8      	str	r0, [r7, #12]
 8001bb0:	60b9      	str	r1, [r7, #8]
 8001bb2:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 8001bb4:	6878      	ldr	r0, [r7, #4]
 8001bb6:	f000 fbf3 	bl	80023a0 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>
 8001bba:	4603      	mov	r3, r0
 8001bbc:	4619      	mov	r1, r3
 8001bbe:	68f8      	ldr	r0, [r7, #12]
 8001bc0:	f000 fbf9 	bl	80023b6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>
 8001bc4:	68fb      	ldr	r3, [r7, #12]
 8001bc6:	68b9      	ldr	r1, [r7, #8]
 8001bc8:	4618      	mov	r0, r3
 8001bca:	f000 fc02 	bl	80023d2 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>
 8001bce:	68fb      	ldr	r3, [r7, #12]
 8001bd0:	3304      	adds	r3, #4
 8001bd2:	4618      	mov	r0, r3
 8001bd4:	f7ff fa4d 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8001bd8:	68fb      	ldr	r3, [r7, #12]
 8001bda:	4618      	mov	r0, r3
 8001bdc:	3710      	adds	r7, #16
 8001bde:	46bd      	mov	sp, r7
 8001be0:	bd80      	pop	{r7, pc}

08001be2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001be2:	b580      	push	{r7, lr}
 8001be4:	b084      	sub	sp, #16
 8001be6:	af00      	add	r7, sp, #0
 8001be8:	6078      	str	r0, [r7, #4]
 8001bea:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8001bec:	683b      	ldr	r3, [r7, #0]
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d012      	beq.n	8001c18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 8001bf2:	6838      	ldr	r0, [r7, #0]
 8001bf4:	f000 fbf9 	bl	80023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8001bf8:	4603      	mov	r3, r0
 8001bfa:	4619      	mov	r1, r3
 8001bfc:	6878      	ldr	r0, [r7, #4]
 8001bfe:	f7ff fff0 	bl	8001be2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 8001c02:	6838      	ldr	r0, [r7, #0]
 8001c04:	f000 fbfd 	bl	8002402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8001c08:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8001c0a:	6839      	ldr	r1, [r7, #0]
 8001c0c:	6878      	ldr	r0, [r7, #4]
 8001c0e:	f000 fc04 	bl	800241a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 8001c12:	68fb      	ldr	r3, [r7, #12]
 8001c14:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8001c16:	e7e9      	b.n	8001bec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 8001c18:	bf00      	nop
 8001c1a:	3710      	adds	r7, #16
 8001c1c:	46bd      	mov	sp, r7
 8001c1e:	bd80      	pop	{r7, pc}

08001c20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8001c20:	b480      	push	{r7}
 8001c22:	b083      	sub	sp, #12
 8001c24:	af00      	add	r7, sp, #0
 8001c26:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	689b      	ldr	r3, [r3, #8]
 8001c2c:	4618      	mov	r0, r3
 8001c2e:	370c      	adds	r7, #12
 8001c30:	46bd      	mov	sp, r7
 8001c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c36:	4770      	bx	lr

08001c38 <_ZNKSt16initializer_listISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE4sizeEv>:
 8001c38:	b480      	push	{r7}
 8001c3a:	b083      	sub	sp, #12
 8001c3c:	af00      	add	r7, sp, #0
 8001c3e:	6078      	str	r0, [r7, #4]
 8001c40:	687b      	ldr	r3, [r7, #4]
 8001c42:	685b      	ldr	r3, [r3, #4]
 8001c44:	4618      	mov	r0, r3
 8001c46:	370c      	adds	r7, #12
 8001c48:	46bd      	mov	sp, r7
 8001c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c4e:	4770      	bx	lr

08001c50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 8001c50:	b480      	push	{r7}
 8001c52:	b083      	sub	sp, #12
 8001c54:	af00      	add	r7, sp, #0
 8001c56:	6078      	str	r0, [r7, #4]
 8001c58:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	683a      	ldr	r2, [r7, #0]
 8001c5e:	601a      	str	r2, [r3, #0]
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	4618      	mov	r0, r3
 8001c64:	370c      	adds	r7, #12
 8001c66:	46bd      	mov	sp, r7
 8001c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c6c:	4770      	bx	lr

08001c6e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8001c6e:	b580      	push	{r7, lr}
 8001c70:	b084      	sub	sp, #16
 8001c72:	af00      	add	r7, sp, #0
 8001c74:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	1d1a      	adds	r2, r3, #4
 8001c7a:	f107 030c 	add.w	r3, r7, #12
 8001c7e:	4611      	mov	r1, r2
 8001c80:	4618      	mov	r0, r3
 8001c82:	f000 fbdb 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8001c86:	68fb      	ldr	r3, [r7, #12]
 8001c88:	4618      	mov	r0, r3
 8001c8a:	3710      	adds	r7, #16
 8001c8c:	46bd      	mov	sp, r7
 8001c8e:	bd80      	pop	{r7, pc}

08001c90 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8001c90:	b480      	push	{r7}
 8001c92:	b083      	sub	sp, #12
 8001c94:	af00      	add	r7, sp, #0
 8001c96:	6078      	str	r0, [r7, #4]
 8001c98:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8001c9a:	683b      	ldr	r3, [r7, #0]
 8001c9c:	681a      	ldr	r2, [r3, #0]
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	601a      	str	r2, [r3, #0]
 8001ca2:	687b      	ldr	r3, [r7, #4]
 8001ca4:	4618      	mov	r0, r3
 8001ca6:	370c      	adds	r7, #12
 8001ca8:	46bd      	mov	sp, r7
 8001caa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cae:	4770      	bx	lr

08001cb0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001cb0:	b5b0      	push	{r4, r5, r7, lr}
 8001cb2:	b08a      	sub	sp, #40	; 0x28
 8001cb4:	af02      	add	r7, sp, #8
 8001cb6:	60f8      	str	r0, [r7, #12]
 8001cb8:	60b9      	str	r1, [r7, #8]
 8001cba:	607a      	str	r2, [r7, #4]
 8001cbc:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8001cbe:	f107 0318 	add.w	r3, r7, #24
 8001cc2:	6879      	ldr	r1, [r7, #4]
 8001cc4:	4618      	mov	r0, r3
 8001cc6:	f000 fceb 	bl	80026a0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 8001cca:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8001ccc:	f107 0010 	add.w	r0, r7, #16
 8001cd0:	68ba      	ldr	r2, [r7, #8]
 8001cd2:	68f9      	ldr	r1, [r7, #12]
 8001cd4:	f000 fbc1 	bl	800245a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
      if (__res.second)
 8001cd8:	697b      	ldr	r3, [r7, #20]
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d00f      	beq.n	8001cfe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x4e>
			  __node_gen);
 8001cde:	693c      	ldr	r4, [r7, #16]
 8001ce0:	697d      	ldr	r5, [r7, #20]
 8001ce2:	6878      	ldr	r0, [r7, #4]
 8001ce4:	f000 fce8 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8001ce8:	4602      	mov	r2, r0
 8001cea:	683b      	ldr	r3, [r7, #0]
 8001cec:	9300      	str	r3, [sp, #0]
 8001cee:	4613      	mov	r3, r2
 8001cf0:	462a      	mov	r2, r5
 8001cf2:	4621      	mov	r1, r4
 8001cf4:	68f8      	ldr	r0, [r7, #12]
 8001cf6:	f000 fcea 	bl	80026ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>
 8001cfa:	4603      	mov	r3, r0
 8001cfc:	e007      	b.n	8001d0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_insert_unique_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8001cfe:	693a      	ldr	r2, [r7, #16]
 8001d00:	f107 031c 	add.w	r3, r7, #28
 8001d04:	4611      	mov	r1, r2
 8001d06:	4618      	mov	r0, r3
 8001d08:	f000 fb98 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8001d0c:	69fb      	ldr	r3, [r7, #28]
    }
 8001d0e:	4618      	mov	r0, r3
 8001d10:	3720      	adds	r7, #32
 8001d12:	46bd      	mov	sp, r7
 8001d14:	bdb0      	pop	{r4, r5, r7, pc}

08001d16 <_ZN9__gnu_cxx13new_allocatorISt4pairIKc12double_tokenEEC1ERKS5_>:
 8001d16:	b480      	push	{r7}
 8001d18:	b083      	sub	sp, #12
 8001d1a:	af00      	add	r7, sp, #0
 8001d1c:	6078      	str	r0, [r7, #4]
 8001d1e:	6039      	str	r1, [r7, #0]
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	4618      	mov	r0, r3
 8001d24:	370c      	adds	r7, #12
 8001d26:	46bd      	mov	sp, r7
 8001d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d2c:	4770      	bx	lr

08001d2e <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1IS3_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 8001d2e:	b580      	push	{r7, lr}
 8001d30:	b082      	sub	sp, #8
 8001d32:	af00      	add	r7, sp, #0
 8001d34:	6078      	str	r0, [r7, #4]
 8001d36:	6039      	str	r1, [r7, #0]
 8001d38:	6878      	ldr	r0, [r7, #4]
 8001d3a:	f000 fd11 	bl	8002760 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	4618      	mov	r0, r3
 8001d42:	3708      	adds	r7, #8
 8001d44:	46bd      	mov	sp, r7
 8001d46:	bd80      	pop	{r7, pc}

08001d48 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8001d48:	b580      	push	{r7, lr}
 8001d4a:	b082      	sub	sp, #8
 8001d4c:	af00      	add	r7, sp, #0
 8001d4e:	6078      	str	r0, [r7, #4]
 8001d50:	6878      	ldr	r0, [r7, #4]
 8001d52:	f000 fd10 	bl	8002776 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>
 8001d56:	687b      	ldr	r3, [r7, #4]
 8001d58:	4618      	mov	r0, r3
 8001d5a:	3708      	adds	r7, #8
 8001d5c:	46bd      	mov	sp, r7
 8001d5e:	bd80      	pop	{r7, pc}

08001d60 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE13_Rb_tree_implIS7_Lb1EEC1ERKS7_OSaISt13_Rb_tree_nodeIS3_EE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
 8001d60:	b580      	push	{r7, lr}
 8001d62:	b084      	sub	sp, #16
 8001d64:	af00      	add	r7, sp, #0
 8001d66:	60f8      	str	r0, [r7, #12]
 8001d68:	60b9      	str	r1, [r7, #8]
 8001d6a:	607a      	str	r2, [r7, #4]
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
 8001d6c:	6878      	ldr	r0, [r7, #4]
 8001d6e:	f000 fd0d 	bl	800278c <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>
 8001d72:	4603      	mov	r3, r0
 8001d74:	4619      	mov	r1, r3
 8001d76:	68f8      	ldr	r0, [r7, #12]
 8001d78:	f000 fd13 	bl	80027a2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>
 8001d7c:	68fb      	ldr	r3, [r7, #12]
 8001d7e:	68b9      	ldr	r1, [r7, #8]
 8001d80:	4618      	mov	r0, r3
 8001d82:	f000 f930 	bl	8001fe6 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>
 8001d86:	68fb      	ldr	r3, [r7, #12]
 8001d88:	3304      	adds	r3, #4
 8001d8a:	4618      	mov	r0, r3
 8001d8c:	f7ff f971 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8001d90:	68fb      	ldr	r3, [r7, #12]
 8001d92:	4618      	mov	r0, r3
 8001d94:	3710      	adds	r7, #16
 8001d96:	46bd      	mov	sp, r7
 8001d98:	bd80      	pop	{r7, pc}

08001d9a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001d9a:	b580      	push	{r7, lr}
 8001d9c:	b084      	sub	sp, #16
 8001d9e:	af00      	add	r7, sp, #0
 8001da0:	6078      	str	r0, [r7, #4]
 8001da2:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8001da4:	683b      	ldr	r3, [r7, #0]
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d012      	beq.n	8001dd0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x36>
	  _M_erase(_S_right(__x));
 8001daa:	6838      	ldr	r0, [r7, #0]
 8001dac:	f000 fd07 	bl	80027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8001db0:	4603      	mov	r3, r0
 8001db2:	4619      	mov	r1, r3
 8001db4:	6878      	ldr	r0, [r7, #4]
 8001db6:	f7ff fff0 	bl	8001d9a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
	  _Link_type __y = _S_left(__x);
 8001dba:	6838      	ldr	r0, [r7, #0]
 8001dbc:	f000 fd0b 	bl	80027d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8001dc0:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8001dc2:	6839      	ldr	r1, [r7, #0]
 8001dc4:	6878      	ldr	r0, [r7, #4]
 8001dc6:	f000 fd12 	bl	80027ee <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>
	  __x = __y;
 8001dca:	68fb      	ldr	r3, [r7, #12]
 8001dcc:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8001dce:	e7e9      	b.n	8001da4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0xa>
    }
 8001dd0:	bf00      	nop
 8001dd2:	3710      	adds	r7, #16
 8001dd4:	46bd      	mov	sp, r7
 8001dd6:	bd80      	pop	{r7, pc}

08001dd8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8001dd8:	b480      	push	{r7}
 8001dda:	b083      	sub	sp, #12
 8001ddc:	af00      	add	r7, sp, #0
 8001dde:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	689b      	ldr	r3, [r3, #8]
 8001de4:	4618      	mov	r0, r3
 8001de6:	370c      	adds	r7, #12
 8001de8:	46bd      	mov	sp, r7
 8001dea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dee:	4770      	bx	lr

08001df0 <_ZNKSt16initializer_listISt4pairIKc12double_tokenEE4sizeEv>:
 8001df0:	b480      	push	{r7}
 8001df2:	b083      	sub	sp, #12
 8001df4:	af00      	add	r7, sp, #0
 8001df6:	6078      	str	r0, [r7, #4]
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	685b      	ldr	r3, [r3, #4]
 8001dfc:	4618      	mov	r0, r3
 8001dfe:	370c      	adds	r7, #12
 8001e00:	46bd      	mov	sp, r7
 8001e02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e06:	4770      	bx	lr

08001e08 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeC1ERS9_>:
	_Alloc_node(_Rb_tree& __t)
 8001e08:	b480      	push	{r7}
 8001e0a:	b083      	sub	sp, #12
 8001e0c:	af00      	add	r7, sp, #0
 8001e0e:	6078      	str	r0, [r7, #4]
 8001e10:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	683a      	ldr	r2, [r7, #0]
 8001e16:	601a      	str	r2, [r3, #0]
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	4618      	mov	r0, r3
 8001e1c:	370c      	adds	r7, #12
 8001e1e:	46bd      	mov	sp, r7
 8001e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e24:	4770      	bx	lr

08001e26 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8001e26:	b580      	push	{r7, lr}
 8001e28:	b084      	sub	sp, #16
 8001e2a:	af00      	add	r7, sp, #0
 8001e2c:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	1d1a      	adds	r2, r3, #4
 8001e32:	f107 030c 	add.w	r3, r7, #12
 8001e36:	4611      	mov	r1, r2
 8001e38:	4618      	mov	r0, r3
 8001e3a:	f000 fce9 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8001e3e:	68fb      	ldr	r3, [r7, #12]
 8001e40:	4618      	mov	r0, r3
 8001e42:	3710      	adds	r7, #16
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bd80      	pop	{r7, pc}

08001e48 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1ERKSt17_Rb_tree_iteratorIS3_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 8001e48:	b480      	push	{r7}
 8001e4a:	b083      	sub	sp, #12
 8001e4c:	af00      	add	r7, sp, #0
 8001e4e:	6078      	str	r0, [r7, #4]
 8001e50:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 8001e52:	683b      	ldr	r3, [r7, #0]
 8001e54:	681a      	ldr	r2, [r3, #0]
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	601a      	str	r2, [r3, #0]
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	4618      	mov	r0, r3
 8001e5e:	370c      	adds	r7, #12
 8001e60:	46bd      	mov	sp, r7
 8001e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e66:	4770      	bx	lr

08001e68 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8001e68:	b5b0      	push	{r4, r5, r7, lr}
 8001e6a:	b08a      	sub	sp, #40	; 0x28
 8001e6c:	af02      	add	r7, sp, #8
 8001e6e:	60f8      	str	r0, [r7, #12]
 8001e70:	60b9      	str	r1, [r7, #8]
 8001e72:	607a      	str	r2, [r7, #4]
 8001e74:	603b      	str	r3, [r7, #0]
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
 8001e76:	f107 0318 	add.w	r3, r7, #24
 8001e7a:	6879      	ldr	r1, [r7, #4]
 8001e7c:	4618      	mov	r0, r3
 8001e7e:	f000 fdf9 	bl	8002a74 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8001e82:	4603      	mov	r3, r0
      pair<_Base_ptr, _Base_ptr> __res
 8001e84:	f107 0010 	add.w	r0, r7, #16
 8001e88:	68ba      	ldr	r2, [r7, #8]
 8001e8a:	68f9      	ldr	r1, [r7, #12]
 8001e8c:	f000 fccf 	bl	800282e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>
      if (__res.second)
 8001e90:	697b      	ldr	r3, [r7, #20]
 8001e92:	2b00      	cmp	r3, #0
 8001e94:	d00f      	beq.n	8001eb6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x4e>
			  __node_gen);
 8001e96:	693c      	ldr	r4, [r7, #16]
 8001e98:	697d      	ldr	r5, [r7, #20]
 8001e9a:	6878      	ldr	r0, [r7, #4]
 8001e9c:	f000 fdf6 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8001ea0:	4602      	mov	r2, r0
 8001ea2:	683b      	ldr	r3, [r7, #0]
 8001ea4:	9300      	str	r3, [sp, #0]
 8001ea6:	4613      	mov	r3, r2
 8001ea8:	462a      	mov	r2, r5
 8001eaa:	4621      	mov	r1, r4
 8001eac:	68f8      	ldr	r0, [r7, #12]
 8001eae:	f000 fdf8 	bl	8002aa2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>
 8001eb2:	4603      	mov	r3, r0
 8001eb4:	e007      	b.n	8001ec6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_insert_unique_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_ESt23_Rb_tree_const_iteratorIS3_EOT_RT0_+0x5e>
      return iterator(__res.first);
 8001eb6:	693a      	ldr	r2, [r7, #16]
 8001eb8:	f107 031c 	add.w	r3, r7, #28
 8001ebc:	4611      	mov	r1, r2
 8001ebe:	4618      	mov	r0, r3
 8001ec0:	f000 fca6 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8001ec4:	69fb      	ldr	r3, [r7, #28]
    }
 8001ec6:	4618      	mov	r0, r3
 8001ec8:	3720      	adds	r7, #32
 8001eca:	46bd      	mov	sp, r7
 8001ecc:	bdb0      	pop	{r4, r5, r7, pc}

08001ece <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
   *  and are constant time.  For other %iterator classes they are linear time.
  */
  template<typename _InputIterator>
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
 8001ece:	b5b0      	push	{r4, r5, r7, lr}
 8001ed0:	b082      	sub	sp, #8
 8001ed2:	af00      	add	r7, sp, #0
 8001ed4:	6078      	str	r0, [r7, #4]
 8001ed6:	6039      	str	r1, [r7, #0]
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
 8001ed8:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 8001eda:	1d3b      	adds	r3, r7, #4
 8001edc:	4618      	mov	r0, r3
 8001ede:	f000 fe39 	bl	8002b54 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
 8001ee2:	462a      	mov	r2, r5
 8001ee4:	6839      	ldr	r1, [r7, #0]
 8001ee6:	4620      	mov	r0, r4
 8001ee8:	f000 fe3e 	bl	8002b68 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
 8001eec:	4603      	mov	r3, r0
    }
 8001eee:	4618      	mov	r0, r3
 8001ef0:	3708      	adds	r7, #8
 8001ef2:	46bd      	mov	sp, r7
 8001ef4:	bdb0      	pop	{r4, r5, r7, pc}
	...

08001ef8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      }

  template<typename _CharT, typename _Traits, typename _Alloc>
    template<typename _InIterator>
      void
      basic_string<_CharT, _Traits, _Alloc>::
 8001ef8:	b580      	push	{r7, lr}
 8001efa:	b086      	sub	sp, #24
 8001efc:	af00      	add	r7, sp, #0
 8001efe:	60f8      	str	r0, [r7, #12]
 8001f00:	60b9      	str	r1, [r7, #8]
 8001f02:	607a      	str	r2, [r7, #4]
 8001f04:	703b      	strb	r3, [r7, #0]
      _M_construct(_InIterator __beg, _InIterator __end,
		   std::forward_iterator_tag)
      {
	// NB: Not required, but considered best practice.
	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 8001f06:	68b8      	ldr	r0, [r7, #8]
 8001f08:	f000 fe14 	bl	8002b34 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>
 8001f0c:	4603      	mov	r3, r0
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d005      	beq.n	8001f1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 8001f12:	68ba      	ldr	r2, [r7, #8]
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	429a      	cmp	r2, r3
 8001f18:	d001      	beq.n	8001f1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x26>
 8001f1a:	2301      	movs	r3, #1
 8001f1c:	e000      	b.n	8001f20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x28>
 8001f1e:	2300      	movs	r3, #0
 8001f20:	2b00      	cmp	r3, #0
 8001f22:	d002      	beq.n	8001f2a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x32>
	  std::__throw_logic_error(__N("basic_string::"
 8001f24:	4817      	ldr	r0, [pc, #92]	; (8001f84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>)
 8001f26:	f01e fa37 	bl	8020398 <_ZSt19__throw_logic_errorPKc>
				       "_M_construct null not valid"));

	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 8001f2a:	6879      	ldr	r1, [r7, #4]
 8001f2c:	68b8      	ldr	r0, [r7, #8]
 8001f2e:	f7ff ffce 	bl	8001ece <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
 8001f32:	4603      	mov	r3, r0
 8001f34:	617b      	str	r3, [r7, #20]

	if (__dnew > size_type(_S_local_capacity))
 8001f36:	697b      	ldr	r3, [r7, #20]
 8001f38:	2b0f      	cmp	r3, #15
 8001f3a:	d910      	bls.n	8001f5e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x66>
	  {
	    _M_data(_M_create(__dnew, size_type(0)));
 8001f3c:	f107 0314 	add.w	r3, r7, #20
 8001f40:	2200      	movs	r2, #0
 8001f42:	4619      	mov	r1, r3
 8001f44:	68f8      	ldr	r0, [r7, #12]
 8001f46:	f01e fa49 	bl	80203dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8001f4a:	4603      	mov	r3, r0
 8001f4c:	4619      	mov	r1, r3
 8001f4e:	68f8      	ldr	r0, [r7, #12]
 8001f50:	f01e fa37 	bl	80203c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
 8001f54:	697b      	ldr	r3, [r7, #20]
 8001f56:	4619      	mov	r1, r3
 8001f58:	68f8      	ldr	r0, [r7, #12]
 8001f5a:	f01e fa38 	bl	80203ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>
	  }

	// Check for out_of_range and length_error exceptions.
	__try
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 8001f5e:	68f8      	ldr	r0, [r7, #12]
 8001f60:	f01e fa31 	bl	80203c6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
 8001f64:	4603      	mov	r3, r0
 8001f66:	687a      	ldr	r2, [r7, #4]
 8001f68:	68b9      	ldr	r1, [r7, #8]
 8001f6a:	4618      	mov	r0, r3
 8001f6c:	f01e fa86 	bl	802047c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
	  {
	    _M_dispose();
	    __throw_exception_again;
	  }

	_M_set_length(__dnew);
 8001f70:	697b      	ldr	r3, [r7, #20]
 8001f72:	4619      	mov	r1, r3
 8001f74:	68f8      	ldr	r0, [r7, #12]
 8001f76:	f01e fa2c 	bl	80203d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>
      }
 8001f7a:	bf00      	nop
 8001f7c:	3718      	adds	r7, #24
 8001f7e:	46bd      	mov	sp, r7
 8001f80:	bd80      	pop	{r7, pc}
 8001f82:	bf00      	nop
 8001f84:	080248e8 	.word	0x080248e8

08001f88 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8001f88:	b480      	push	{r7}
 8001f8a:	b083      	sub	sp, #12
 8001f8c:	af00      	add	r7, sp, #0
 8001f8e:	6078      	str	r0, [r7, #4]
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	4618      	mov	r0, r3
 8001f94:	370c      	adds	r7, #12
 8001f96:	46bd      	mov	sp, r7
 8001f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f9c:	4770      	bx	lr

08001f9e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8001f9e:	b480      	push	{r7}
 8001fa0:	b083      	sub	sp, #12
 8001fa2:	af00      	add	r7, sp, #0
 8001fa4:	6078      	str	r0, [r7, #4]
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	4618      	mov	r0, r3
 8001faa:	370c      	adds	r7, #12
 8001fac:	46bd      	mov	sp, r7
 8001fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb2:	4770      	bx	lr

08001fb4 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEEONSt16remove_referenceIT_E4typeEOS9_>:
   *  @param  __t  A thing of arbitrary type.
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
 8001fb4:	b480      	push	{r7}
 8001fb6:	b083      	sub	sp, #12
 8001fb8:	af00      	add	r7, sp, #0
 8001fba:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	4618      	mov	r0, r3
 8001fc0:	370c      	adds	r7, #12
 8001fc2:	46bd      	mov	sp, r7
 8001fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fc8:	4770      	bx	lr

08001fca <_ZNSaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 8001fca:	b580      	push	{r7, lr}
 8001fcc:	b082      	sub	sp, #8
 8001fce:	af00      	add	r7, sp, #0
 8001fd0:	6078      	str	r0, [r7, #4]
 8001fd2:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 8001fd4:	6839      	ldr	r1, [r7, #0]
 8001fd6:	6878      	ldr	r0, [r7, #4]
 8001fd8:	f000 fdd5 	bl	8002b86 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	4618      	mov	r0, r3
 8001fe0:	3708      	adds	r7, #8
 8001fe2:	46bd      	mov	sp, r7
 8001fe4:	bd80      	pop	{r7, pc}

08001fe6 <_ZNSt20_Rb_tree_key_compareISt4lessIcEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 8001fe6:	b480      	push	{r7}
 8001fe8:	b083      	sub	sp, #12
 8001fea:	af00      	add	r7, sp, #0
 8001fec:	6078      	str	r0, [r7, #4]
 8001fee:	6039      	str	r1, [r7, #0]
      { }
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	4618      	mov	r0, r3
 8001ff4:	370c      	adds	r7, #12
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ffc:	4770      	bx	lr

08001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8001ffe:	b480      	push	{r7}
 8002000:	b083      	sub	sp, #12
 8002002:	af00      	add	r7, sp, #0
 8002004:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	68db      	ldr	r3, [r3, #12]
 800200a:	4618      	mov	r0, r3
 800200c:	370c      	adds	r7, #12
 800200e:	46bd      	mov	sp, r7
 8002010:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002014:	4770      	bx	lr

08002016 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8002016:	b480      	push	{r7}
 8002018:	b083      	sub	sp, #12
 800201a:	af00      	add	r7, sp, #0
 800201c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800201e:	687b      	ldr	r3, [r7, #4]
 8002020:	689b      	ldr	r3, [r3, #8]
 8002022:	4618      	mov	r0, r3
 8002024:	370c      	adds	r7, #12
 8002026:	46bd      	mov	sp, r7
 8002028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800202c:	4770      	bx	lr

0800202e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800202e:	b580      	push	{r7, lr}
 8002030:	b082      	sub	sp, #8
 8002032:	af00      	add	r7, sp, #0
 8002034:	6078      	str	r0, [r7, #4]
 8002036:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8002038:	6839      	ldr	r1, [r7, #0]
 800203a:	6878      	ldr	r0, [r7, #4]
 800203c:	f000 fdaf 	bl	8002b9e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 8002040:	6839      	ldr	r1, [r7, #0]
 8002042:	6878      	ldr	r0, [r7, #4]
 8002044:	f000 fdc0 	bl	8002bc8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 8002048:	bf00      	nop
 800204a:	3708      	adds	r7, #8
 800204c:	46bd      	mov	sp, r7
 800204e:	bd80      	pop	{r7, pc}

08002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8002050:	b480      	push	{r7}
 8002052:	b083      	sub	sp, #12
 8002054:	af00      	add	r7, sp, #0
 8002056:	6078      	str	r0, [r7, #4]
 8002058:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	683a      	ldr	r2, [r7, #0]
 800205e:	601a      	str	r2, [r3, #0]
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	4618      	mov	r0, r3
 8002064:	370c      	adds	r7, #12
 8002066:	46bd      	mov	sp, r7
 8002068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800206c:	4770      	bx	lr

0800206e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800206e:	b590      	push	{r4, r7, lr}
 8002070:	b08d      	sub	sp, #52	; 0x34
 8002072:	af00      	add	r7, sp, #0
 8002074:	60f8      	str	r0, [r7, #12]
 8002076:	60b9      	str	r1, [r7, #8]
 8002078:	607a      	str	r2, [r7, #4]
 800207a:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 800207c:	1d3b      	adds	r3, r7, #4
 800207e:	4618      	mov	r0, r3
 8002080:	f000 fdb4 	bl	8002bec <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>
 8002084:	4603      	mov	r3, r0
 8002086:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8002088:	69bc      	ldr	r4, [r7, #24]
 800208a:	68b8      	ldr	r0, [r7, #8]
 800208c:	f000 fdbf 	bl	8002c0e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8002090:	4603      	mov	r3, r0
 8002092:	429c      	cmp	r4, r3
 8002094:	bf0c      	ite	eq
 8002096:	2301      	moveq	r3, #1
 8002098:	2300      	movne	r3, #0
 800209a:	b2db      	uxtb	r3, r3
 800209c:	2b00      	cmp	r3, #0
 800209e:	d030      	beq.n	8002102 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 80020a0:	68b8      	ldr	r0, [r7, #8]
 80020a2:	f000 fdc0 	bl	8002c26 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 80020a6:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 80020a8:	2b00      	cmp	r3, #0
 80020aa:	d013      	beq.n	80020d4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 80020ac:	68bc      	ldr	r4, [r7, #8]
 80020ae:	68b8      	ldr	r0, [r7, #8]
 80020b0:	f000 fdc5 	bl	8002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80020b4:	4603      	mov	r3, r0
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	4618      	mov	r0, r3
 80020ba:	f000 fdcc 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80020be:	4603      	mov	r3, r0
 80020c0:	683a      	ldr	r2, [r7, #0]
 80020c2:	4619      	mov	r1, r3
 80020c4:	4620      	mov	r0, r4
 80020c6:	f000 fdd2 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80020ca:	4603      	mov	r3, r0
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d001      	beq.n	80020d4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 80020d0:	2301      	movs	r3, #1
 80020d2:	e000      	b.n	80020d6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 80020d4:	2300      	movs	r3, #0
	  if (size() > 0
 80020d6:	2b00      	cmp	r3, #0
 80020d8:	d00c      	beq.n	80020f4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 80020da:	2300      	movs	r3, #0
 80020dc:	61fb      	str	r3, [r7, #28]
 80020de:	68b8      	ldr	r0, [r7, #8]
 80020e0:	f000 fdad 	bl	8002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80020e4:	4602      	mov	r2, r0
 80020e6:	f107 031c 	add.w	r3, r7, #28
 80020ea:	4619      	mov	r1, r3
 80020ec:	68f8      	ldr	r0, [r7, #12]
 80020ee:	f000 fdd3 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80020f2:	e0db      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80020f4:	68fb      	ldr	r3, [r7, #12]
 80020f6:	683a      	ldr	r2, [r7, #0]
 80020f8:	68b9      	ldr	r1, [r7, #8]
 80020fa:	4618      	mov	r0, r3
 80020fc:	f000 fde2 	bl	8002cc4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8002100:	e0d4      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8002102:	68bc      	ldr	r4, [r7, #8]
 8002104:	69bb      	ldr	r3, [r7, #24]
 8002106:	4618      	mov	r0, r3
 8002108:	f000 fda5 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800210c:	4603      	mov	r3, r0
 800210e:	461a      	mov	r2, r3
 8002110:	6839      	ldr	r1, [r7, #0]
 8002112:	4620      	mov	r0, r4
 8002114:	f000 fdab 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002118:	4603      	mov	r3, r0
 800211a:	2b00      	cmp	r3, #0
 800211c:	d057      	beq.n	80021ce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 800211e:	69bb      	ldr	r3, [r7, #24]
 8002120:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8002122:	69bc      	ldr	r4, [r7, #24]
 8002124:	68b8      	ldr	r0, [r7, #8]
 8002126:	f000 fe52 	bl	8002dce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800212a:	4603      	mov	r3, r0
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	429c      	cmp	r4, r3
 8002130:	bf0c      	ite	eq
 8002132:	2301      	moveq	r3, #1
 8002134:	2300      	movne	r3, #0
 8002136:	b2db      	uxtb	r3, r3
 8002138:	2b00      	cmp	r3, #0
 800213a:	d00d      	beq.n	8002158 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 800213c:	68b8      	ldr	r0, [r7, #8]
 800213e:	f000 fe46 	bl	8002dce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8002142:	4604      	mov	r4, r0
 8002144:	68b8      	ldr	r0, [r7, #8]
 8002146:	f000 fe42 	bl	8002dce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800214a:	4603      	mov	r3, r0
 800214c:	461a      	mov	r2, r3
 800214e:	4621      	mov	r1, r4
 8002150:	68f8      	ldr	r0, [r7, #12]
 8002152:	f000 fe48 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002156:	e0a9      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8002158:	68bc      	ldr	r4, [r7, #8]
 800215a:	f107 0314 	add.w	r3, r7, #20
 800215e:	4618      	mov	r0, r3
 8002160:	f000 fe5a 	bl	8002e18 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
 8002164:	4603      	mov	r3, r0
 8002166:	681b      	ldr	r3, [r3, #0]
 8002168:	4618      	mov	r0, r3
 800216a:	f000 fd74 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800216e:	4603      	mov	r3, r0
 8002170:	683a      	ldr	r2, [r7, #0]
 8002172:	4619      	mov	r1, r3
 8002174:	4620      	mov	r0, r4
 8002176:	f000 fd7a 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 800217a:	4603      	mov	r3, r0
 800217c:	2b00      	cmp	r3, #0
 800217e:	d01f      	beq.n	80021c0 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8002180:	697b      	ldr	r3, [r7, #20]
 8002182:	4618      	mov	r0, r3
 8002184:	f7ff ff3b 	bl	8001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002188:	4603      	mov	r3, r0
 800218a:	2b00      	cmp	r3, #0
 800218c:	bf0c      	ite	eq
 800218e:	2301      	moveq	r3, #1
 8002190:	2300      	movne	r3, #0
 8002192:	b2db      	uxtb	r3, r3
 8002194:	2b00      	cmp	r3, #0
 8002196:	d00a      	beq.n	80021ae <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 8002198:	2300      	movs	r3, #0
 800219a:	623b      	str	r3, [r7, #32]
 800219c:	f107 0214 	add.w	r2, r7, #20
 80021a0:	f107 0320 	add.w	r3, r7, #32
 80021a4:	4619      	mov	r1, r3
 80021a6:	68f8      	ldr	r0, [r7, #12]
 80021a8:	f000 fd76 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80021ac:	e07e      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 80021ae:	f107 0218 	add.w	r2, r7, #24
 80021b2:	f107 0318 	add.w	r3, r7, #24
 80021b6:	4619      	mov	r1, r3
 80021b8:	68f8      	ldr	r0, [r7, #12]
 80021ba:	f000 fe14 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80021be:	e075      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80021c0:	68fb      	ldr	r3, [r7, #12]
 80021c2:	683a      	ldr	r2, [r7, #0]
 80021c4:	68b9      	ldr	r1, [r7, #8]
 80021c6:	4618      	mov	r0, r3
 80021c8:	f000 fd7c 	bl	8002cc4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 80021cc:	e06e      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 80021ce:	68bc      	ldr	r4, [r7, #8]
 80021d0:	69bb      	ldr	r3, [r7, #24]
 80021d2:	4618      	mov	r0, r3
 80021d4:	f000 fd3f 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80021d8:	4603      	mov	r3, r0
 80021da:	683a      	ldr	r2, [r7, #0]
 80021dc:	4619      	mov	r1, r3
 80021de:	4620      	mov	r0, r4
 80021e0:	f000 fd45 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80021e4:	4603      	mov	r3, r0
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	d056      	beq.n	8002298 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 80021ea:	69bb      	ldr	r3, [r7, #24]
 80021ec:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 80021ee:	69bc      	ldr	r4, [r7, #24]
 80021f0:	68b8      	ldr	r0, [r7, #8]
 80021f2:	f000 fd24 	bl	8002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80021f6:	4603      	mov	r3, r0
 80021f8:	681b      	ldr	r3, [r3, #0]
 80021fa:	429c      	cmp	r4, r3
 80021fc:	bf0c      	ite	eq
 80021fe:	2301      	moveq	r3, #1
 8002200:	2300      	movne	r3, #0
 8002202:	b2db      	uxtb	r3, r3
 8002204:	2b00      	cmp	r3, #0
 8002206:	d00c      	beq.n	8002222 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 8002208:	2300      	movs	r3, #0
 800220a:	627b      	str	r3, [r7, #36]	; 0x24
 800220c:	68b8      	ldr	r0, [r7, #8]
 800220e:	f000 fd16 	bl	8002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8002212:	4602      	mov	r2, r0
 8002214:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002218:	4619      	mov	r1, r3
 800221a:	68f8      	ldr	r0, [r7, #12]
 800221c:	f000 fd3c 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002220:	e044      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8002222:	68bc      	ldr	r4, [r7, #8]
 8002224:	f107 0310 	add.w	r3, r7, #16
 8002228:	4618      	mov	r0, r3
 800222a:	f000 fe06 	bl	8002e3a <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>
 800222e:	4603      	mov	r3, r0
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	4618      	mov	r0, r3
 8002234:	f000 fd0f 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002238:	4603      	mov	r3, r0
 800223a:	461a      	mov	r2, r3
 800223c:	6839      	ldr	r1, [r7, #0]
 800223e:	4620      	mov	r0, r4
 8002240:	f000 fd15 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002244:	4603      	mov	r3, r0
 8002246:	2b00      	cmp	r3, #0
 8002248:	d01f      	beq.n	800228a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 800224a:	69bb      	ldr	r3, [r7, #24]
 800224c:	4618      	mov	r0, r3
 800224e:	f7ff fed6 	bl	8001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002252:	4603      	mov	r3, r0
 8002254:	2b00      	cmp	r3, #0
 8002256:	bf0c      	ite	eq
 8002258:	2301      	moveq	r3, #1
 800225a:	2300      	movne	r3, #0
 800225c:	b2db      	uxtb	r3, r3
 800225e:	2b00      	cmp	r3, #0
 8002260:	d00a      	beq.n	8002278 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 8002262:	2300      	movs	r3, #0
 8002264:	62bb      	str	r3, [r7, #40]	; 0x28
 8002266:	f107 0218 	add.w	r2, r7, #24
 800226a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800226e:	4619      	mov	r1, r3
 8002270:	68f8      	ldr	r0, [r7, #12]
 8002272:	f000 fd11 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002276:	e019      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8002278:	f107 0210 	add.w	r2, r7, #16
 800227c:	f107 0310 	add.w	r3, r7, #16
 8002280:	4619      	mov	r1, r3
 8002282:	68f8      	ldr	r0, [r7, #12]
 8002284:	f000 fdaf 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002288:	e010      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 800228a:	68fb      	ldr	r3, [r7, #12]
 800228c:	683a      	ldr	r2, [r7, #0]
 800228e:	68b9      	ldr	r1, [r7, #8]
 8002290:	4618      	mov	r0, r3
 8002292:	f000 fd17 	bl	8002cc4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8002296:	e009      	b.n	80022ac <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 8002298:	2300      	movs	r3, #0
 800229a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800229c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 80022a0:	f107 0318 	add.w	r3, r7, #24
 80022a4:	4619      	mov	r1, r3
 80022a6:	68f8      	ldr	r0, [r7, #12]
 80022a8:	f000 fdd8 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80022ac:	68f8      	ldr	r0, [r7, #12]
 80022ae:	3734      	adds	r7, #52	; 0x34
 80022b0:	46bd      	mov	sp, r7
 80022b2:	bd90      	pop	{r4, r7, pc}

080022b4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
 80022b4:	b480      	push	{r7}
 80022b6:	b083      	sub	sp, #12
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	6078      	str	r0, [r7, #4]
 80022bc:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80022be:	683b      	ldr	r3, [r7, #0]
 80022c0:	4618      	mov	r0, r3
 80022c2:	370c      	adds	r7, #12
 80022c4:	46bd      	mov	sp, r7
 80022c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ca:	4770      	bx	lr

080022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80022cc:	b480      	push	{r7}
 80022ce:	b083      	sub	sp, #12
 80022d0:	af00      	add	r7, sp, #0
 80022d2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80022d4:	687b      	ldr	r3, [r7, #4]
 80022d6:	4618      	mov	r0, r3
 80022d8:	370c      	adds	r7, #12
 80022da:	46bd      	mov	sp, r7
 80022dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022e0:	4770      	bx	lr

080022e2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80022e2:	b5b0      	push	{r4, r5, r7, lr}
 80022e4:	b088      	sub	sp, #32
 80022e6:	af00      	add	r7, sp, #0
 80022e8:	60f8      	str	r0, [r7, #12]
 80022ea:	60b9      	str	r1, [r7, #8]
 80022ec:	607a      	str	r2, [r7, #4]
 80022ee:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80022f0:	68bb      	ldr	r3, [r7, #8]
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d11a      	bne.n	800232c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 80022f6:	68f8      	ldr	r0, [r7, #12]
 80022f8:	f000 fc89 	bl	8002c0e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 80022fc:	4602      	mov	r2, r0
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	4293      	cmp	r3, r2
 8002302:	d013      	beq.n	800232c <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8002304:	68fc      	ldr	r4, [r7, #12]
 8002306:	f107 0310 	add.w	r3, r7, #16
 800230a:	6839      	ldr	r1, [r7, #0]
 800230c:	4618      	mov	r0, r3
 800230e:	f7ff ffd1 	bl	80022b4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8002312:	4605      	mov	r5, r0
 8002314:	6878      	ldr	r0, [r7, #4]
 8002316:	f000 fc9e 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800231a:	4603      	mov	r3, r0
 800231c:	461a      	mov	r2, r3
 800231e:	4629      	mov	r1, r5
 8002320:	4620      	mov	r0, r4
 8002322:	f000 fca4 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002326:	4603      	mov	r3, r0
 8002328:	2b00      	cmp	r3, #0
 800232a:	d001      	beq.n	8002330 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 800232c:	2301      	movs	r3, #1
 800232e:	e000      	b.n	8002332 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8002330:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8002332:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8002334:	6838      	ldr	r0, [r7, #0]
 8002336:	f7ff ffc9 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 800233a:	4603      	mov	r3, r0
 800233c:	4619      	mov	r1, r3
 800233e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8002340:	f000 fda2 	bl	8002e88 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8002344:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8002346:	68fb      	ldr	r3, [r7, #12]
 8002348:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 800234a:	7ff8      	ldrb	r0, [r7, #31]
 800234c:	687a      	ldr	r2, [r7, #4]
 800234e:	69b9      	ldr	r1, [r7, #24]
 8002350:	f01d ffc3 	bl	80202da <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	695b      	ldr	r3, [r3, #20]
 8002358:	1c5a      	adds	r2, r3, #1
 800235a:	68fb      	ldr	r3, [r7, #12]
 800235c:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 800235e:	f107 0314 	add.w	r3, r7, #20
 8002362:	69b9      	ldr	r1, [r7, #24]
 8002364:	4618      	mov	r0, r3
 8002366:	f7ff fe73 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 800236a:	697b      	ldr	r3, [r7, #20]
      }
 800236c:	4618      	mov	r0, r3
 800236e:	3720      	adds	r7, #32
 8002370:	46bd      	mov	sp, r7
 8002372:	bdb0      	pop	{r4, r5, r7, pc}

08002374 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002374:	b480      	push	{r7}
 8002376:	b083      	sub	sp, #12
 8002378:	af00      	add	r7, sp, #0
 800237a:	6078      	str	r0, [r7, #4]
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	4618      	mov	r0, r3
 8002380:	370c      	adds	r7, #12
 8002382:	46bd      	mov	sp, r7
 8002384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002388:	4770      	bx	lr

0800238a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800238a:	b480      	push	{r7}
 800238c:	b083      	sub	sp, #12
 800238e:	af00      	add	r7, sp, #0
 8002390:	6078      	str	r0, [r7, #4]
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	4618      	mov	r0, r3
 8002396:	370c      	adds	r7, #12
 8002398:	46bd      	mov	sp, r7
 800239a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239e:	4770      	bx	lr

080023a0 <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEEONSt16remove_referenceIT_E4typeEOSF_>:
    move(_Tp&& __t) noexcept
 80023a0:	b480      	push	{r7}
 80023a2:	b083      	sub	sp, #12
 80023a4:	af00      	add	r7, sp, #0
 80023a6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	4618      	mov	r0, r3
 80023ac:	370c      	adds	r7, #12
 80023ae:	46bd      	mov	sp, r7
 80023b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023b4:	4770      	bx	lr

080023b6 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSB_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80023b6:	b580      	push	{r7, lr}
 80023b8:	b082      	sub	sp, #8
 80023ba:	af00      	add	r7, sp, #0
 80023bc:	6078      	str	r0, [r7, #4]
 80023be:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80023c0:	6839      	ldr	r1, [r7, #0]
 80023c2:	6878      	ldr	r0, [r7, #4]
 80023c4:	f000 fd74 	bl	8002eb0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	4618      	mov	r0, r3
 80023cc:	3708      	adds	r7, #8
 80023ce:	46bd      	mov	sp, r7
 80023d0:	bd80      	pop	{r7, pc}

080023d2 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ERKS7_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
 80023d2:	b480      	push	{r7}
 80023d4:	b083      	sub	sp, #12
 80023d6:	af00      	add	r7, sp, #0
 80023d8:	6078      	str	r0, [r7, #4]
 80023da:	6039      	str	r1, [r7, #0]
      { }
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	4618      	mov	r0, r3
 80023e0:	370c      	adds	r7, #12
 80023e2:	46bd      	mov	sp, r7
 80023e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023e8:	4770      	bx	lr

080023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80023ea:	b480      	push	{r7}
 80023ec:	b083      	sub	sp, #12
 80023ee:	af00      	add	r7, sp, #0
 80023f0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	68db      	ldr	r3, [r3, #12]
 80023f6:	4618      	mov	r0, r3
 80023f8:	370c      	adds	r7, #12
 80023fa:	46bd      	mov	sp, r7
 80023fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002400:	4770      	bx	lr

08002402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8002402:	b480      	push	{r7}
 8002404:	b083      	sub	sp, #12
 8002406:	af00      	add	r7, sp, #0
 8002408:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	689b      	ldr	r3, [r3, #8]
 800240e:	4618      	mov	r0, r3
 8002410:	370c      	adds	r7, #12
 8002412:	46bd      	mov	sp, r7
 8002414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002418:	4770      	bx	lr

0800241a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800241a:	b580      	push	{r7, lr}
 800241c:	b082      	sub	sp, #8
 800241e:	af00      	add	r7, sp, #0
 8002420:	6078      	str	r0, [r7, #4]
 8002422:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 8002424:	6839      	ldr	r1, [r7, #0]
 8002426:	6878      	ldr	r0, [r7, #4]
 8002428:	f000 fd4e 	bl	8002ec8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 800242c:	6839      	ldr	r1, [r7, #0]
 800242e:	6878      	ldr	r0, [r7, #4]
 8002430:	f000 fd5f 	bl	8002ef2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 8002434:	bf00      	nop
 8002436:	3708      	adds	r7, #8
 8002438:	46bd      	mov	sp, r7
 800243a:	bd80      	pop	{r7, pc}

0800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800243c:	b480      	push	{r7}
 800243e:	b083      	sub	sp, #12
 8002440:	af00      	add	r7, sp, #0
 8002442:	6078      	str	r0, [r7, #4]
 8002444:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8002446:	687b      	ldr	r3, [r7, #4]
 8002448:	683a      	ldr	r2, [r7, #0]
 800244a:	601a      	str	r2, [r3, #0]
 800244c:	687b      	ldr	r3, [r7, #4]
 800244e:	4618      	mov	r0, r3
 8002450:	370c      	adds	r7, #12
 8002452:	46bd      	mov	sp, r7
 8002454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002458:	4770      	bx	lr

0800245a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800245a:	b590      	push	{r4, r7, lr}
 800245c:	b08d      	sub	sp, #52	; 0x34
 800245e:	af00      	add	r7, sp, #0
 8002460:	60f8      	str	r0, [r7, #12]
 8002462:	60b9      	str	r1, [r7, #8]
 8002464:	607a      	str	r2, [r7, #4]
 8002466:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 8002468:	1d3b      	adds	r3, r7, #4
 800246a:	4618      	mov	r0, r3
 800246c:	f000 fd53 	bl	8002f16 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>
 8002470:	4603      	mov	r3, r0
 8002472:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8002474:	69bc      	ldr	r4, [r7, #24]
 8002476:	68b8      	ldr	r0, [r7, #8]
 8002478:	f000 fd5e 	bl	8002f38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 800247c:	4603      	mov	r3, r0
 800247e:	429c      	cmp	r4, r3
 8002480:	bf0c      	ite	eq
 8002482:	2301      	moveq	r3, #1
 8002484:	2300      	movne	r3, #0
 8002486:	b2db      	uxtb	r3, r3
 8002488:	2b00      	cmp	r3, #0
 800248a:	d030      	beq.n	80024ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 800248c:	68b8      	ldr	r0, [r7, #8]
 800248e:	f000 fd5f 	bl	8002f50 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 8002492:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8002494:	2b00      	cmp	r3, #0
 8002496:	d013      	beq.n	80024c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8002498:	68bc      	ldr	r4, [r7, #8]
 800249a:	68b8      	ldr	r0, [r7, #8]
 800249c:	f000 fd64 	bl	8002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80024a0:	4603      	mov	r3, r0
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	4618      	mov	r0, r3
 80024a6:	f000 fd6b 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80024aa:	4603      	mov	r3, r0
 80024ac:	683a      	ldr	r2, [r7, #0]
 80024ae:	4619      	mov	r1, r3
 80024b0:	4620      	mov	r0, r4
 80024b2:	f000 fd71 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80024b6:	4603      	mov	r3, r0
 80024b8:	2b00      	cmp	r3, #0
 80024ba:	d001      	beq.n	80024c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 80024bc:	2301      	movs	r3, #1
 80024be:	e000      	b.n	80024c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 80024c0:	2300      	movs	r3, #0
	  if (size() > 0
 80024c2:	2b00      	cmp	r3, #0
 80024c4:	d00c      	beq.n	80024e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 80024c6:	2300      	movs	r3, #0
 80024c8:	61fb      	str	r3, [r7, #28]
 80024ca:	68b8      	ldr	r0, [r7, #8]
 80024cc:	f000 fd4c 	bl	8002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80024d0:	4602      	mov	r2, r0
 80024d2:	f107 031c 	add.w	r3, r7, #28
 80024d6:	4619      	mov	r1, r3
 80024d8:	68f8      	ldr	r0, [r7, #12]
 80024da:	f000 fbdd 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80024de:	e0db      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80024e0:	68fb      	ldr	r3, [r7, #12]
 80024e2:	683a      	ldr	r2, [r7, #0]
 80024e4:	68b9      	ldr	r1, [r7, #8]
 80024e6:	4618      	mov	r0, r3
 80024e8:	f000 fd65 	bl	8002fb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80024ec:	e0d4      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 80024ee:	68bc      	ldr	r4, [r7, #8]
 80024f0:	69bb      	ldr	r3, [r7, #24]
 80024f2:	4618      	mov	r0, r3
 80024f4:	f000 fd44 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80024f8:	4603      	mov	r3, r0
 80024fa:	461a      	mov	r2, r3
 80024fc:	6839      	ldr	r1, [r7, #0]
 80024fe:	4620      	mov	r0, r4
 8002500:	f000 fd4a 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002504:	4603      	mov	r3, r0
 8002506:	2b00      	cmp	r3, #0
 8002508:	d057      	beq.n	80025ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 800250a:	69bb      	ldr	r3, [r7, #24]
 800250c:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 800250e:	69bc      	ldr	r4, [r7, #24]
 8002510:	68b8      	ldr	r0, [r7, #8]
 8002512:	f000 fdd5 	bl	80030c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8002516:	4603      	mov	r3, r0
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	429c      	cmp	r4, r3
 800251c:	bf0c      	ite	eq
 800251e:	2301      	moveq	r3, #1
 8002520:	2300      	movne	r3, #0
 8002522:	b2db      	uxtb	r3, r3
 8002524:	2b00      	cmp	r3, #0
 8002526:	d00d      	beq.n	8002544 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 8002528:	68b8      	ldr	r0, [r7, #8]
 800252a:	f000 fdc9 	bl	80030c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 800252e:	4604      	mov	r4, r0
 8002530:	68b8      	ldr	r0, [r7, #8]
 8002532:	f000 fdc5 	bl	80030c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8002536:	4603      	mov	r3, r0
 8002538:	461a      	mov	r2, r3
 800253a:	4621      	mov	r1, r4
 800253c:	68f8      	ldr	r0, [r7, #12]
 800253e:	f000 fc52 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002542:	e0a9      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8002544:	68bc      	ldr	r4, [r7, #8]
 8002546:	f107 0314 	add.w	r3, r7, #20
 800254a:	4618      	mov	r0, r3
 800254c:	f000 fdc4 	bl	80030d8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
 8002550:	4603      	mov	r3, r0
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	4618      	mov	r0, r3
 8002556:	f000 fd13 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800255a:	4603      	mov	r3, r0
 800255c:	683a      	ldr	r2, [r7, #0]
 800255e:	4619      	mov	r1, r3
 8002560:	4620      	mov	r0, r4
 8002562:	f000 fd19 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002566:	4603      	mov	r3, r0
 8002568:	2b00      	cmp	r3, #0
 800256a:	d01f      	beq.n	80025ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 800256c:	697b      	ldr	r3, [r7, #20]
 800256e:	4618      	mov	r0, r3
 8002570:	f7ff ff3b 	bl	80023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002574:	4603      	mov	r3, r0
 8002576:	2b00      	cmp	r3, #0
 8002578:	bf0c      	ite	eq
 800257a:	2301      	moveq	r3, #1
 800257c:	2300      	movne	r3, #0
 800257e:	b2db      	uxtb	r3, r3
 8002580:	2b00      	cmp	r3, #0
 8002582:	d00a      	beq.n	800259a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 8002584:	2300      	movs	r3, #0
 8002586:	623b      	str	r3, [r7, #32]
 8002588:	f107 0214 	add.w	r2, r7, #20
 800258c:	f107 0320 	add.w	r3, r7, #32
 8002590:	4619      	mov	r1, r3
 8002592:	68f8      	ldr	r0, [r7, #12]
 8002594:	f000 fb80 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002598:	e07e      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 800259a:	f107 0218 	add.w	r2, r7, #24
 800259e:	f107 0318 	add.w	r3, r7, #24
 80025a2:	4619      	mov	r1, r3
 80025a4:	68f8      	ldr	r0, [r7, #12]
 80025a6:	f000 fc1e 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80025aa:	e075      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80025ac:	68fb      	ldr	r3, [r7, #12]
 80025ae:	683a      	ldr	r2, [r7, #0]
 80025b0:	68b9      	ldr	r1, [r7, #8]
 80025b2:	4618      	mov	r0, r3
 80025b4:	f000 fcff 	bl	8002fb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80025b8:	e06e      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 80025ba:	68bc      	ldr	r4, [r7, #8]
 80025bc:	69bb      	ldr	r3, [r7, #24]
 80025be:	4618      	mov	r0, r3
 80025c0:	f000 fcde 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80025c4:	4603      	mov	r3, r0
 80025c6:	683a      	ldr	r2, [r7, #0]
 80025c8:	4619      	mov	r1, r3
 80025ca:	4620      	mov	r0, r4
 80025cc:	f000 fce4 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80025d0:	4603      	mov	r3, r0
 80025d2:	2b00      	cmp	r3, #0
 80025d4:	d056      	beq.n	8002684 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 80025d6:	69bb      	ldr	r3, [r7, #24]
 80025d8:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 80025da:	69bc      	ldr	r4, [r7, #24]
 80025dc:	68b8      	ldr	r0, [r7, #8]
 80025de:	f000 fcc3 	bl	8002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80025e2:	4603      	mov	r3, r0
 80025e4:	681b      	ldr	r3, [r3, #0]
 80025e6:	429c      	cmp	r4, r3
 80025e8:	bf0c      	ite	eq
 80025ea:	2301      	moveq	r3, #1
 80025ec:	2300      	movne	r3, #0
 80025ee:	b2db      	uxtb	r3, r3
 80025f0:	2b00      	cmp	r3, #0
 80025f2:	d00c      	beq.n	800260e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 80025f4:	2300      	movs	r3, #0
 80025f6:	627b      	str	r3, [r7, #36]	; 0x24
 80025f8:	68b8      	ldr	r0, [r7, #8]
 80025fa:	f000 fcb5 	bl	8002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 80025fe:	4602      	mov	r2, r0
 8002600:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002604:	4619      	mov	r1, r3
 8002606:	68f8      	ldr	r0, [r7, #12]
 8002608:	f000 fb46 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800260c:	e044      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 800260e:	68bc      	ldr	r4, [r7, #8]
 8002610:	f107 0310 	add.w	r3, r7, #16
 8002614:	4618      	mov	r0, r3
 8002616:	f000 fd70 	bl	80030fa <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>
 800261a:	4603      	mov	r3, r0
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	4618      	mov	r0, r3
 8002620:	f000 fcae 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002624:	4603      	mov	r3, r0
 8002626:	461a      	mov	r2, r3
 8002628:	6839      	ldr	r1, [r7, #0]
 800262a:	4620      	mov	r0, r4
 800262c:	f000 fcb4 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002630:	4603      	mov	r3, r0
 8002632:	2b00      	cmp	r3, #0
 8002634:	d01f      	beq.n	8002676 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8002636:	69bb      	ldr	r3, [r7, #24]
 8002638:	4618      	mov	r0, r3
 800263a:	f7ff fed6 	bl	80023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 800263e:	4603      	mov	r3, r0
 8002640:	2b00      	cmp	r3, #0
 8002642:	bf0c      	ite	eq
 8002644:	2301      	moveq	r3, #1
 8002646:	2300      	movne	r3, #0
 8002648:	b2db      	uxtb	r3, r3
 800264a:	2b00      	cmp	r3, #0
 800264c:	d00a      	beq.n	8002664 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 800264e:	2300      	movs	r3, #0
 8002650:	62bb      	str	r3, [r7, #40]	; 0x28
 8002652:	f107 0218 	add.w	r2, r7, #24
 8002656:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800265a:	4619      	mov	r1, r3
 800265c:	68f8      	ldr	r0, [r7, #12]
 800265e:	f000 fb1b 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002662:	e019      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8002664:	f107 0210 	add.w	r2, r7, #16
 8002668:	f107 0310 	add.w	r3, r7, #16
 800266c:	4619      	mov	r1, r3
 800266e:	68f8      	ldr	r0, [r7, #12]
 8002670:	f000 fbb9 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002674:	e010      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8002676:	68fb      	ldr	r3, [r7, #12]
 8002678:	683a      	ldr	r2, [r7, #0]
 800267a:	68b9      	ldr	r1, [r7, #8]
 800267c:	4618      	mov	r0, r3
 800267e:	f000 fc9a 	bl	8002fb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8002682:	e009      	b.n	8002698 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 8002684:	2300      	movs	r3, #0
 8002686:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002688:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800268c:	f107 0318 	add.w	r3, r7, #24
 8002690:	4619      	mov	r1, r3
 8002692:	68f8      	ldr	r0, [r7, #12]
 8002694:	f000 fbe2 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8002698:	68f8      	ldr	r0, [r7, #12]
 800269a:	3734      	adds	r7, #52	; 0x34
 800269c:	46bd      	mov	sp, r7
 800269e:	bd90      	pop	{r4, r7, pc}

080026a0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>:
      operator()(const _Pair& __x) const
 80026a0:	b480      	push	{r7}
 80026a2:	b083      	sub	sp, #12
 80026a4:	af00      	add	r7, sp, #0
 80026a6:	6078      	str	r0, [r7, #4]
 80026a8:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80026aa:	683b      	ldr	r3, [r7, #0]
 80026ac:	4618      	mov	r0, r3
 80026ae:	370c      	adds	r7, #12
 80026b0:	46bd      	mov	sp, r7
 80026b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026b6:	4770      	bx	lr

080026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80026b8:	b480      	push	{r7}
 80026ba:	b083      	sub	sp, #12
 80026bc:	af00      	add	r7, sp, #0
 80026be:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	4618      	mov	r0, r3
 80026c4:	370c      	adds	r7, #12
 80026c6:	46bd      	mov	sp, r7
 80026c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026cc:	4770      	bx	lr

080026ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80026ce:	b5b0      	push	{r4, r5, r7, lr}
 80026d0:	b088      	sub	sp, #32
 80026d2:	af00      	add	r7, sp, #0
 80026d4:	60f8      	str	r0, [r7, #12]
 80026d6:	60b9      	str	r1, [r7, #8]
 80026d8:	607a      	str	r2, [r7, #4]
 80026da:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80026dc:	68bb      	ldr	r3, [r7, #8]
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d11a      	bne.n	8002718 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 80026e2:	68f8      	ldr	r0, [r7, #12]
 80026e4:	f000 fc28 	bl	8002f38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80026e8:	4602      	mov	r2, r0
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	4293      	cmp	r3, r2
 80026ee:	d013      	beq.n	8002718 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80026f0:	68fc      	ldr	r4, [r7, #12]
 80026f2:	f107 0310 	add.w	r3, r7, #16
 80026f6:	6839      	ldr	r1, [r7, #0]
 80026f8:	4618      	mov	r0, r3
 80026fa:	f7ff ffd1 	bl	80026a0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 80026fe:	4605      	mov	r5, r0
 8002700:	6878      	ldr	r0, [r7, #4]
 8002702:	f000 fc3d 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002706:	4603      	mov	r3, r0
 8002708:	461a      	mov	r2, r3
 800270a:	4629      	mov	r1, r5
 800270c:	4620      	mov	r0, r4
 800270e:	f000 fc43 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002712:	4603      	mov	r3, r0
 8002714:	2b00      	cmp	r3, #0
 8002716:	d001      	beq.n	800271c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x4e>
 8002718:	2301      	movs	r3, #1
 800271a:	e000      	b.n	800271e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IRKS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSN_OT_RT0_+0x50>
 800271c:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 800271e:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8002720:	6838      	ldr	r0, [r7, #0]
 8002722:	f7ff ffc9 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8002726:	4603      	mov	r3, r0
 8002728:	4619      	mov	r1, r3
 800272a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800272c:	f000 fcf6 	bl	800311c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 8002730:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8002732:	68fb      	ldr	r3, [r7, #12]
 8002734:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8002736:	7ff8      	ldrb	r0, [r7, #31]
 8002738:	687a      	ldr	r2, [r7, #4]
 800273a:	69b9      	ldr	r1, [r7, #24]
 800273c:	f01d fdcd 	bl	80202da <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	695b      	ldr	r3, [r3, #20]
 8002744:	1c5a      	adds	r2, r3, #1
 8002746:	68fb      	ldr	r3, [r7, #12]
 8002748:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 800274a:	f107 0314 	add.w	r3, r7, #20
 800274e:	69b9      	ldr	r1, [r7, #24]
 8002750:	4618      	mov	r0, r3
 8002752:	f7ff fe73 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8002756:	697b      	ldr	r3, [r7, #20]
      }
 8002758:	4618      	mov	r0, r3
 800275a:	3720      	adds	r7, #32
 800275c:	46bd      	mov	sp, r7
 800275e:	bdb0      	pop	{r4, r5, r7, pc}

08002760 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002760:	b480      	push	{r7}
 8002762:	b083      	sub	sp, #12
 8002764:	af00      	add	r7, sp, #0
 8002766:	6078      	str	r0, [r7, #4]
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	4618      	mov	r0, r3
 800276c:	370c      	adds	r7, #12
 800276e:	46bd      	mov	sp, r7
 8002770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002774:	4770      	bx	lr

08002776 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8002776:	b480      	push	{r7}
 8002778:	b083      	sub	sp, #12
 800277a:	af00      	add	r7, sp, #0
 800277c:	6078      	str	r0, [r7, #4]
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	4618      	mov	r0, r3
 8002782:	370c      	adds	r7, #12
 8002784:	46bd      	mov	sp, r7
 8002786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800278a:	4770      	bx	lr

0800278c <_ZSt4moveIRSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
 800278c:	b480      	push	{r7}
 800278e:	b083      	sub	sp, #12
 8002790:	af00      	add	r7, sp, #0
 8002792:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	4618      	mov	r0, r3
 8002798:	370c      	adds	r7, #12
 800279a:	46bd      	mov	sp, r7
 800279c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027a0:	4770      	bx	lr

080027a2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80027a2:	b580      	push	{r7, lr}
 80027a4:	b082      	sub	sp, #8
 80027a6:	af00      	add	r7, sp, #0
 80027a8:	6078      	str	r0, [r7, #4]
 80027aa:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80027ac:	6839      	ldr	r1, [r7, #0]
 80027ae:	6878      	ldr	r0, [r7, #4]
 80027b0:	f000 fcc8 	bl	8003144 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	4618      	mov	r0, r3
 80027b8:	3708      	adds	r7, #8
 80027ba:	46bd      	mov	sp, r7
 80027bc:	bd80      	pop	{r7, pc}

080027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80027be:	b480      	push	{r7}
 80027c0:	b083      	sub	sp, #12
 80027c2:	af00      	add	r7, sp, #0
 80027c4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	68db      	ldr	r3, [r3, #12]
 80027ca:	4618      	mov	r0, r3
 80027cc:	370c      	adds	r7, #12
 80027ce:	46bd      	mov	sp, r7
 80027d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027d4:	4770      	bx	lr

080027d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80027d6:	b480      	push	{r7}
 80027d8:	b083      	sub	sp, #12
 80027da:	af00      	add	r7, sp, #0
 80027dc:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	689b      	ldr	r3, [r3, #8]
 80027e2:	4618      	mov	r0, r3
 80027e4:	370c      	adds	r7, #12
 80027e6:	46bd      	mov	sp, r7
 80027e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027ec:	4770      	bx	lr

080027ee <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80027ee:	b580      	push	{r7, lr}
 80027f0:	b082      	sub	sp, #8
 80027f2:	af00      	add	r7, sp, #0
 80027f4:	6078      	str	r0, [r7, #4]
 80027f6:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 80027f8:	6839      	ldr	r1, [r7, #0]
 80027fa:	6878      	ldr	r0, [r7, #4]
 80027fc:	f000 fcae 	bl	800315c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>
	_M_put_node(__p);
 8002800:	6839      	ldr	r1, [r7, #0]
 8002802:	6878      	ldr	r0, [r7, #4]
 8002804:	f000 fcbf 	bl	8003186 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>
      }
 8002808:	bf00      	nop
 800280a:	3708      	adds	r7, #8
 800280c:	46bd      	mov	sp, r7
 800280e:	bd80      	pop	{r7, pc}

08002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8002810:	b480      	push	{r7}
 8002812:	b083      	sub	sp, #12
 8002814:	af00      	add	r7, sp, #0
 8002816:	6078      	str	r0, [r7, #4]
 8002818:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	683a      	ldr	r2, [r7, #0]
 800281e:	601a      	str	r2, [r3, #0]
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	4618      	mov	r0, r3
 8002824:	370c      	adds	r7, #12
 8002826:	46bd      	mov	sp, r7
 8002828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282c:	4770      	bx	lr

0800282e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800282e:	b590      	push	{r4, r7, lr}
 8002830:	b08d      	sub	sp, #52	; 0x34
 8002832:	af00      	add	r7, sp, #0
 8002834:	60f8      	str	r0, [r7, #12]
 8002836:	60b9      	str	r1, [r7, #8]
 8002838:	607a      	str	r2, [r7, #4]
 800283a:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 800283c:	1d3b      	adds	r3, r7, #4
 800283e:	4618      	mov	r0, r3
 8002840:	f000 fcb3 	bl	80031aa <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>
 8002844:	4603      	mov	r3, r0
 8002846:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 8002848:	69bc      	ldr	r4, [r7, #24]
 800284a:	68b8      	ldr	r0, [r7, #8]
 800284c:	f000 fcbe 	bl	80031cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8002850:	4603      	mov	r3, r0
 8002852:	429c      	cmp	r4, r3
 8002854:	bf0c      	ite	eq
 8002856:	2301      	moveq	r3, #1
 8002858:	2300      	movne	r3, #0
 800285a:	b2db      	uxtb	r3, r3
 800285c:	2b00      	cmp	r3, #0
 800285e:	d030      	beq.n	80028c2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x94>
	  if (size() > 0
 8002860:	68b8      	ldr	r0, [r7, #8]
 8002862:	f000 fcbf 	bl	80031e4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>
 8002866:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 8002868:	2b00      	cmp	r3, #0
 800286a:	d013      	beq.n	8002894 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 800286c:	68bc      	ldr	r4, [r7, #8]
 800286e:	68b8      	ldr	r0, [r7, #8]
 8002870:	f000 fcc4 	bl	80031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 8002874:	4603      	mov	r3, r0
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	4618      	mov	r0, r3
 800287a:	f000 fccb 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800287e:	4603      	mov	r3, r0
 8002880:	683a      	ldr	r2, [r7, #0]
 8002882:	4619      	mov	r1, r3
 8002884:	4620      	mov	r0, r4
 8002886:	f000 f9f2 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 800288a:	4603      	mov	r3, r0
 800288c:	2b00      	cmp	r3, #0
 800288e:	d001      	beq.n	8002894 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x66>
 8002890:	2301      	movs	r3, #1
 8002892:	e000      	b.n	8002896 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x68>
 8002894:	2300      	movs	r3, #0
	  if (size() > 0
 8002896:	2b00      	cmp	r3, #0
 8002898:	d00c      	beq.n	80028b4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x86>
	    return _Res(0, _M_rightmost());
 800289a:	2300      	movs	r3, #0
 800289c:	61fb      	str	r3, [r7, #28]
 800289e:	68b8      	ldr	r0, [r7, #8]
 80028a0:	f000 fcac 	bl	80031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80028a4:	4602      	mov	r2, r0
 80028a6:	f107 031c 	add.w	r3, r7, #28
 80028aa:	4619      	mov	r1, r3
 80028ac:	68f8      	ldr	r0, [r7, #12]
 80028ae:	f000 f9f3 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80028b2:	e0db      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	683a      	ldr	r2, [r7, #0]
 80028b8:	68b9      	ldr	r1, [r7, #8]
 80028ba:	4618      	mov	r0, r3
 80028bc:	f000 fcb6 	bl	800322c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 80028c0:	e0d4      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 80028c2:	68bc      	ldr	r4, [r7, #8]
 80028c4:	69bb      	ldr	r3, [r7, #24]
 80028c6:	4618      	mov	r0, r3
 80028c8:	f000 fca4 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80028cc:	4603      	mov	r3, r0
 80028ce:	461a      	mov	r2, r3
 80028d0:	6839      	ldr	r1, [r7, #0]
 80028d2:	4620      	mov	r0, r4
 80028d4:	f000 f9cb 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80028d8:	4603      	mov	r3, r0
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d057      	beq.n	800298e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x160>
	  iterator __before = __pos;
 80028de:	69bb      	ldr	r3, [r7, #24]
 80028e0:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 80028e2:	69bc      	ldr	r4, [r7, #24]
 80028e4:	68b8      	ldr	r0, [r7, #8]
 80028e6:	f000 fd26 	bl	8003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 80028ea:	4603      	mov	r3, r0
 80028ec:	681b      	ldr	r3, [r3, #0]
 80028ee:	429c      	cmp	r4, r3
 80028f0:	bf0c      	ite	eq
 80028f2:	2301      	moveq	r3, #1
 80028f4:	2300      	movne	r3, #0
 80028f6:	b2db      	uxtb	r3, r3
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	d00d      	beq.n	8002918 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 80028fc:	68b8      	ldr	r0, [r7, #8]
 80028fe:	f000 fd1a 	bl	8003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 8002902:	4604      	mov	r4, r0
 8002904:	68b8      	ldr	r0, [r7, #8]
 8002906:	f000 fd16 	bl	8003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>
 800290a:	4603      	mov	r3, r0
 800290c:	461a      	mov	r2, r3
 800290e:	4621      	mov	r1, r4
 8002910:	68f8      	ldr	r0, [r7, #12]
 8002912:	f000 fa68 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002916:	e0a9      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 8002918:	68bc      	ldr	r4, [r7, #8]
 800291a:	f107 0314 	add.w	r3, r7, #20
 800291e:	4618      	mov	r0, r3
 8002920:	f000 fd15 	bl	800334e <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
 8002924:	4603      	mov	r3, r0
 8002926:	681b      	ldr	r3, [r3, #0]
 8002928:	4618      	mov	r0, r3
 800292a:	f000 fc73 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 800292e:	4603      	mov	r3, r0
 8002930:	683a      	ldr	r2, [r7, #0]
 8002932:	4619      	mov	r1, r3
 8002934:	4620      	mov	r0, r4
 8002936:	f000 f99a 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 800293a:	4603      	mov	r3, r0
 800293c:	2b00      	cmp	r3, #0
 800293e:	d01f      	beq.n	8002980 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x152>
	      if (_S_right(__before._M_node) == 0)
 8002940:	697b      	ldr	r3, [r7, #20]
 8002942:	4618      	mov	r0, r3
 8002944:	f7ff ff3b 	bl	80027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002948:	4603      	mov	r3, r0
 800294a:	2b00      	cmp	r3, #0
 800294c:	bf0c      	ite	eq
 800294e:	2301      	moveq	r3, #1
 8002950:	2300      	movne	r3, #0
 8002952:	b2db      	uxtb	r3, r3
 8002954:	2b00      	cmp	r3, #0
 8002956:	d00a      	beq.n	800296e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x140>
		return _Res(0, __before._M_node);
 8002958:	2300      	movs	r3, #0
 800295a:	623b      	str	r3, [r7, #32]
 800295c:	f107 0214 	add.w	r2, r7, #20
 8002960:	f107 0320 	add.w	r3, r7, #32
 8002964:	4619      	mov	r1, r3
 8002966:	68f8      	ldr	r0, [r7, #12]
 8002968:	f000 f996 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 800296c:	e07e      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 800296e:	f107 0218 	add.w	r2, r7, #24
 8002972:	f107 0318 	add.w	r3, r7, #24
 8002976:	4619      	mov	r1, r3
 8002978:	68f8      	ldr	r0, [r7, #12]
 800297a:	f000 fa34 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 800297e:	e075      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8002980:	68fb      	ldr	r3, [r7, #12]
 8002982:	683a      	ldr	r2, [r7, #0]
 8002984:	68b9      	ldr	r1, [r7, #8]
 8002986:	4618      	mov	r0, r3
 8002988:	f000 fc50 	bl	800322c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 800298c:	e06e      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 800298e:	68bc      	ldr	r4, [r7, #8]
 8002990:	69bb      	ldr	r3, [r7, #24]
 8002992:	4618      	mov	r0, r3
 8002994:	f000 fc3e 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002998:	4603      	mov	r3, r0
 800299a:	683a      	ldr	r2, [r7, #0]
 800299c:	4619      	mov	r1, r3
 800299e:	4620      	mov	r0, r4
 80029a0:	f000 f965 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 80029a4:	4603      	mov	r3, r0
 80029a6:	2b00      	cmp	r3, #0
 80029a8:	d056      	beq.n	8002a58 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x22a>
	  iterator __after = __pos;
 80029aa:	69bb      	ldr	r3, [r7, #24]
 80029ac:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 80029ae:	69bc      	ldr	r4, [r7, #24]
 80029b0:	68b8      	ldr	r0, [r7, #8]
 80029b2:	f000 fc23 	bl	80031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80029b6:	4603      	mov	r3, r0
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	429c      	cmp	r4, r3
 80029bc:	bf0c      	ite	eq
 80029be:	2301      	moveq	r3, #1
 80029c0:	2300      	movne	r3, #0
 80029c2:	b2db      	uxtb	r3, r3
 80029c4:	2b00      	cmp	r3, #0
 80029c6:	d00c      	beq.n	80029e2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x1b4>
	    return _Res(0, _M_rightmost());
 80029c8:	2300      	movs	r3, #0
 80029ca:	627b      	str	r3, [r7, #36]	; 0x24
 80029cc:	68b8      	ldr	r0, [r7, #8]
 80029ce:	f000 fc15 	bl	80031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>
 80029d2:	4602      	mov	r2, r0
 80029d4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80029d8:	4619      	mov	r1, r3
 80029da:	68f8      	ldr	r0, [r7, #12]
 80029dc:	f000 f95c 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80029e0:	e044      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 80029e2:	68bc      	ldr	r4, [r7, #8]
 80029e4:	f107 0310 	add.w	r3, r7, #16
 80029e8:	4618      	mov	r0, r3
 80029ea:	f000 fcc1 	bl	8003370 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>
 80029ee:	4603      	mov	r3, r0
 80029f0:	681b      	ldr	r3, [r3, #0]
 80029f2:	4618      	mov	r0, r3
 80029f4:	f000 fc0e 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80029f8:	4603      	mov	r3, r0
 80029fa:	461a      	mov	r2, r3
 80029fc:	6839      	ldr	r1, [r7, #0]
 80029fe:	4620      	mov	r0, r4
 8002a00:	f000 f935 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002a04:	4603      	mov	r3, r0
 8002a06:	2b00      	cmp	r3, #0
 8002a08:	d01f      	beq.n	8002a4a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 8002a0a:	69bb      	ldr	r3, [r7, #24]
 8002a0c:	4618      	mov	r0, r3
 8002a0e:	f7ff fed6 	bl	80027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002a12:	4603      	mov	r3, r0
 8002a14:	2b00      	cmp	r3, #0
 8002a16:	bf0c      	ite	eq
 8002a18:	2301      	moveq	r3, #1
 8002a1a:	2300      	movne	r3, #0
 8002a1c:	b2db      	uxtb	r3, r3
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d00a      	beq.n	8002a38 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x20a>
		return _Res(0, __pos._M_node);
 8002a22:	2300      	movs	r3, #0
 8002a24:	62bb      	str	r3, [r7, #40]	; 0x28
 8002a26:	f107 0218 	add.w	r2, r7, #24
 8002a2a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8002a2e:	4619      	mov	r1, r3
 8002a30:	68f8      	ldr	r0, [r7, #12]
 8002a32:	f000 f931 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8002a36:	e019      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 8002a38:	f107 0210 	add.w	r2, r7, #16
 8002a3c:	f107 0310 	add.w	r3, r7, #16
 8002a40:	4619      	mov	r1, r3
 8002a42:	68f8      	ldr	r0, [r7, #12]
 8002a44:	f000 f9cf 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8002a48:	e010      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8002a4a:	68fb      	ldr	r3, [r7, #12]
 8002a4c:	683a      	ldr	r2, [r7, #0]
 8002a4e:	68b9      	ldr	r1, [r7, #8]
 8002a50:	4618      	mov	r0, r3
 8002a52:	f000 fbeb 	bl	800322c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>
 8002a56:	e009      	b.n	8002a6c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS3_ERS1_+0x23e>
	return _Res(__pos._M_node, 0);
 8002a58:	2300      	movs	r3, #0
 8002a5a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002a5c:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8002a60:	f107 0318 	add.w	r3, r7, #24
 8002a64:	4619      	mov	r1, r3
 8002a66:	68f8      	ldr	r0, [r7, #12]
 8002a68:	f000 f9f8 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8002a6c:	68f8      	ldr	r0, [r7, #12]
 8002a6e:	3734      	adds	r7, #52	; 0x34
 8002a70:	46bd      	mov	sp, r7
 8002a72:	bd90      	pop	{r4, r7, pc}

08002a74 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>:
      operator()(const _Pair& __x) const
 8002a74:	b480      	push	{r7}
 8002a76:	b083      	sub	sp, #12
 8002a78:	af00      	add	r7, sp, #0
 8002a7a:	6078      	str	r0, [r7, #4]
 8002a7c:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8002a7e:	683b      	ldr	r3, [r7, #0]
 8002a80:	4618      	mov	r0, r3
 8002a82:	370c      	adds	r7, #12
 8002a84:	46bd      	mov	sp, r7
 8002a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a8a:	4770      	bx	lr

08002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8002a8c:	b480      	push	{r7}
 8002a8e:	b083      	sub	sp, #12
 8002a90:	af00      	add	r7, sp, #0
 8002a92:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	4618      	mov	r0, r3
 8002a98:	370c      	adds	r7, #12
 8002a9a:	46bd      	mov	sp, r7
 8002a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002aa0:	4770      	bx	lr

08002aa2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8002aa2:	b5b0      	push	{r4, r5, r7, lr}
 8002aa4:	b088      	sub	sp, #32
 8002aa6:	af00      	add	r7, sp, #0
 8002aa8:	60f8      	str	r0, [r7, #12]
 8002aaa:	60b9      	str	r1, [r7, #8]
 8002aac:	607a      	str	r2, [r7, #4]
 8002aae:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8002ab0:	68bb      	ldr	r3, [r7, #8]
 8002ab2:	2b00      	cmp	r3, #0
 8002ab4:	d11a      	bne.n	8002aec <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 8002ab6:	68f8      	ldr	r0, [r7, #12]
 8002ab8:	f000 fb88 	bl	80031cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8002abc:	4602      	mov	r2, r0
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	4293      	cmp	r3, r2
 8002ac2:	d013      	beq.n	8002aec <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8002ac4:	68fc      	ldr	r4, [r7, #12]
 8002ac6:	f107 0310 	add.w	r3, r7, #16
 8002aca:	6839      	ldr	r1, [r7, #0]
 8002acc:	4618      	mov	r0, r3
 8002ace:	f7ff ffd1 	bl	8002a74 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 8002ad2:	4605      	mov	r5, r0
 8002ad4:	6878      	ldr	r0, [r7, #4]
 8002ad6:	f000 fb9d 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002ada:	4603      	mov	r3, r0
 8002adc:	461a      	mov	r2, r3
 8002ade:	4629      	mov	r1, r5
 8002ae0:	4620      	mov	r0, r4
 8002ae2:	f000 f8c4 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002ae6:	4603      	mov	r3, r0
 8002ae8:	2b00      	cmp	r3, #0
 8002aea:	d001      	beq.n	8002af0 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x4e>
 8002aec:	2301      	movs	r3, #1
 8002aee:	e000      	b.n	8002af2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE10_M_insert_IRKS3_NS9_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS3_EPSt18_Rb_tree_node_baseSH_OT_RT0_+0x50>
 8002af0:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 8002af2:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 8002af4:	6838      	ldr	r0, [r7, #0]
 8002af6:	f7ff ffc9 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8002afa:	4603      	mov	r3, r0
 8002afc:	4619      	mov	r1, r3
 8002afe:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8002b00:	f000 fc47 	bl	8003392 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>
 8002b04:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 8002b06:	68fb      	ldr	r3, [r7, #12]
 8002b08:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8002b0a:	7ff8      	ldrb	r0, [r7, #31]
 8002b0c:	687a      	ldr	r2, [r7, #4]
 8002b0e:	69b9      	ldr	r1, [r7, #24]
 8002b10:	f01d fbe3 	bl	80202da <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 8002b14:	68fb      	ldr	r3, [r7, #12]
 8002b16:	695b      	ldr	r3, [r3, #20]
 8002b18:	1c5a      	adds	r2, r3, #1
 8002b1a:	68fb      	ldr	r3, [r7, #12]
 8002b1c:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8002b1e:	f107 0314 	add.w	r3, r7, #20
 8002b22:	69b9      	ldr	r1, [r7, #24]
 8002b24:	4618      	mov	r0, r3
 8002b26:	f7ff fe73 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 8002b2a:	697b      	ldr	r3, [r7, #20]
      }
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	3720      	adds	r7, #32
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bdb0      	pop	{r4, r5, r7, pc}

08002b34 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_>:


  // For use in string and vstring.
  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
 8002b34:	b480      	push	{r7}
 8002b36:	b083      	sub	sp, #12
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	6078      	str	r0, [r7, #4]
    { return __ptr == 0; }
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	bf0c      	ite	eq
 8002b42:	2301      	moveq	r3, #1
 8002b44:	2300      	movne	r3, #0
 8002b46:	b2db      	uxtb	r3, r3
 8002b48:	4618      	mov	r0, r3
 8002b4a:	370c      	adds	r7, #12
 8002b4c:	46bd      	mov	sp, r7
 8002b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b52:	4770      	bx	lr

08002b54 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
 8002b54:	b480      	push	{r7}
 8002b56:	b083      	sub	sp, #12
 8002b58:	af00      	add	r7, sp, #0
 8002b5a:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8002b5c:	4618      	mov	r0, r3
 8002b5e:	370c      	adds	r7, #12
 8002b60:	46bd      	mov	sp, r7
 8002b62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b66:	4770      	bx	lr

08002b68 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8002b68:	b480      	push	{r7}
 8002b6a:	b085      	sub	sp, #20
 8002b6c:	af00      	add	r7, sp, #0
 8002b6e:	60f8      	str	r0, [r7, #12]
 8002b70:	60b9      	str	r1, [r7, #8]
 8002b72:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8002b74:	68ba      	ldr	r2, [r7, #8]
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	1ad3      	subs	r3, r2, r3
    }
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	3714      	adds	r7, #20
 8002b7e:	46bd      	mov	sp, r7
 8002b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b84:	4770      	bx	lr

08002b86 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEC1ERKS7_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 8002b86:	b480      	push	{r7}
 8002b88:	b083      	sub	sp, #12
 8002b8a:	af00      	add	r7, sp, #0
 8002b8c:	6078      	str	r0, [r7, #4]
 8002b8e:	6039      	str	r1, [r7, #0]
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	4618      	mov	r0, r3
 8002b94:	370c      	adds	r7, #12
 8002b96:	46bd      	mov	sp, r7
 8002b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b9c:	4770      	bx	lr

08002b9e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8002b9e:	b590      	push	{r4, r7, lr}
 8002ba0:	b083      	sub	sp, #12
 8002ba2:	af00      	add	r7, sp, #0
 8002ba4:	6078      	str	r0, [r7, #4]
 8002ba6:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8002ba8:	6878      	ldr	r0, [r7, #4]
 8002baa:	f000 fc06 	bl	80033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8002bae:	4604      	mov	r4, r0
 8002bb0:	6838      	ldr	r0, [r7, #0]
 8002bb2:	f000 fc0d 	bl	80033d0 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8002bb6:	4603      	mov	r3, r0
 8002bb8:	4619      	mov	r1, r3
 8002bba:	4620      	mov	r0, r4
 8002bbc:	f000 fc16 	bl	80033ec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>
      }
 8002bc0:	bf00      	nop
 8002bc2:	370c      	adds	r7, #12
 8002bc4:	46bd      	mov	sp, r7
 8002bc6:	bd90      	pop	{r4, r7, pc}

08002bc8 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8002bc8:	b580      	push	{r7, lr}
 8002bca:	b082      	sub	sp, #8
 8002bcc:	af00      	add	r7, sp, #0
 8002bce:	6078      	str	r0, [r7, #4]
 8002bd0:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8002bd2:	6878      	ldr	r0, [r7, #4]
 8002bd4:	f000 fbf1 	bl	80033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8002bd8:	4603      	mov	r3, r0
 8002bda:	2201      	movs	r2, #1
 8002bdc:	6839      	ldr	r1, [r7, #0]
 8002bde:	4618      	mov	r0, r3
 8002be0:	f000 fc11 	bl	8003406 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>
 8002be4:	bf00      	nop
 8002be6:	3708      	adds	r7, #8
 8002be8:	46bd      	mov	sp, r7
 8002bea:	bd80      	pop	{r7, pc}

08002bec <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8002bec:	b580      	push	{r7, lr}
 8002bee:	b084      	sub	sp, #16
 8002bf0:	af00      	add	r7, sp, #0
 8002bf2:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	681a      	ldr	r2, [r3, #0]
 8002bf8:	f107 030c 	add.w	r3, r7, #12
 8002bfc:	4611      	mov	r1, r2
 8002bfe:	4618      	mov	r0, r3
 8002c00:	f7ff fa26 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8002c04:	68fb      	ldr	r3, [r7, #12]
 8002c06:	4618      	mov	r0, r3
 8002c08:	3710      	adds	r7, #16
 8002c0a:	46bd      	mov	sp, r7
 8002c0c:	bd80      	pop	{r7, pc}

08002c0e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8002c0e:	b480      	push	{r7}
 8002c10:	b083      	sub	sp, #12
 8002c12:	af00      	add	r7, sp, #0
 8002c14:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	3304      	adds	r3, #4
 8002c1a:	4618      	mov	r0, r3
 8002c1c:	370c      	adds	r7, #12
 8002c1e:	46bd      	mov	sp, r7
 8002c20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c24:	4770      	bx	lr

08002c26 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8002c26:	b480      	push	{r7}
 8002c28:	b083      	sub	sp, #12
 8002c2a:	af00      	add	r7, sp, #0
 8002c2c:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	695b      	ldr	r3, [r3, #20]
 8002c32:	4618      	mov	r0, r3
 8002c34:	370c      	adds	r7, #12
 8002c36:	46bd      	mov	sp, r7
 8002c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c3c:	4770      	bx	lr

08002c3e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8002c3e:	b480      	push	{r7}
 8002c40:	b083      	sub	sp, #12
 8002c42:	af00      	add	r7, sp, #0
 8002c44:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	3310      	adds	r3, #16
 8002c4a:	4618      	mov	r0, r3
 8002c4c:	370c      	adds	r7, #12
 8002c4e:	46bd      	mov	sp, r7
 8002c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c54:	4770      	bx	lr

08002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8002c56:	b580      	push	{r7, lr}
 8002c58:	b082      	sub	sp, #8
 8002c5a:	af00      	add	r7, sp, #0
 8002c5c:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8002c5e:	6878      	ldr	r0, [r7, #4]
 8002c60:	f000 fbe0 	bl	8003424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8002c64:	4603      	mov	r3, r0
 8002c66:	4618      	mov	r0, r3
 8002c68:	3708      	adds	r7, #8
 8002c6a:	46bd      	mov	sp, r7
 8002c6c:	bd80      	pop	{r7, pc}

08002c6e <_ZNKSt4lessIcEclERKcS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 8002c6e:	b480      	push	{r7}
 8002c70:	b085      	sub	sp, #20
 8002c72:	af00      	add	r7, sp, #0
 8002c74:	60f8      	str	r0, [r7, #12]
 8002c76:	60b9      	str	r1, [r7, #8]
 8002c78:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 8002c7a:	68bb      	ldr	r3, [r7, #8]
 8002c7c:	781a      	ldrb	r2, [r3, #0]
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	781b      	ldrb	r3, [r3, #0]
 8002c82:	429a      	cmp	r2, r3
 8002c84:	bf34      	ite	cc
 8002c86:	2301      	movcc	r3, #1
 8002c88:	2300      	movcs	r3, #0
 8002c8a:	b2db      	uxtb	r3, r3
 8002c8c:	4618      	mov	r0, r3
 8002c8e:	3714      	adds	r7, #20
 8002c90:	46bd      	mov	sp, r7
 8002c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c96:	4770      	bx	lr

08002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>:
       constexpr pair(const _T1& __x, _U2&& __y)
 8002c98:	b580      	push	{r7, lr}
 8002c9a:	b084      	sub	sp, #16
 8002c9c:	af00      	add	r7, sp, #0
 8002c9e:	60f8      	str	r0, [r7, #12]
 8002ca0:	60b9      	str	r1, [r7, #8]
 8002ca2:	607a      	str	r2, [r7, #4]
       : first(__x), second(std::forward<_U2>(__y)) { }
 8002ca4:	68bb      	ldr	r3, [r7, #8]
 8002ca6:	681a      	ldr	r2, [r3, #0]
 8002ca8:	68fb      	ldr	r3, [r7, #12]
 8002caa:	601a      	str	r2, [r3, #0]
 8002cac:	6878      	ldr	r0, [r7, #4]
 8002cae:	f000 fbcc 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8002cb2:	4603      	mov	r3, r0
 8002cb4:	681a      	ldr	r2, [r3, #0]
 8002cb6:	68fb      	ldr	r3, [r7, #12]
 8002cb8:	605a      	str	r2, [r3, #4]
 8002cba:	68fb      	ldr	r3, [r7, #12]
 8002cbc:	4618      	mov	r0, r3
 8002cbe:	3710      	adds	r7, #16
 8002cc0:	46bd      	mov	sp, r7
 8002cc2:	bd80      	pop	{r7, pc}

08002cc4 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8002cc4:	b590      	push	{r4, r7, lr}
 8002cc6:	b08b      	sub	sp, #44	; 0x2c
 8002cc8:	af00      	add	r7, sp, #0
 8002cca:	60f8      	str	r0, [r7, #12]
 8002ccc:	60b9      	str	r1, [r7, #8]
 8002cce:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8002cd0:	68b8      	ldr	r0, [r7, #8]
 8002cd2:	f7fe fec9 	bl	8001a68 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8002cd6:	4603      	mov	r3, r0
 8002cd8:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8002cda:	68b8      	ldr	r0, [r7, #8]
 8002cdc:	f7ff ff97 	bl	8002c0e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8002ce0:	4603      	mov	r3, r0
 8002ce2:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8002ce4:	2301      	movs	r3, #1
 8002ce6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8002cea:	69bb      	ldr	r3, [r7, #24]
 8002cec:	2b00      	cmp	r3, #0
 8002cee:	d020      	beq.n	8002d32 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 8002cf0:	69bb      	ldr	r3, [r7, #24]
 8002cf2:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8002cf4:	68bc      	ldr	r4, [r7, #8]
 8002cf6:	69bb      	ldr	r3, [r7, #24]
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	f000 fb93 	bl	8003424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8002cfe:	4603      	mov	r3, r0
 8002d00:	461a      	mov	r2, r3
 8002d02:	6879      	ldr	r1, [r7, #4]
 8002d04:	4620      	mov	r0, r4
 8002d06:	f7ff ffb2 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002d0a:	4603      	mov	r3, r0
 8002d0c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8002d10:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d005      	beq.n	8002d24 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 8002d18:	69bb      	ldr	r3, [r7, #24]
 8002d1a:	4618      	mov	r0, r3
 8002d1c:	f7ff f97b 	bl	8002016 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8002d20:	4603      	mov	r3, r0
 8002d22:	e004      	b.n	8002d2e <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 8002d24:	69bb      	ldr	r3, [r7, #24]
 8002d26:	4618      	mov	r0, r3
 8002d28:	f7ff f969 	bl	8001ffe <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8002d2c:	4603      	mov	r3, r0
 8002d2e:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8002d30:	e7db      	b.n	8002cea <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 8002d32:	697a      	ldr	r2, [r7, #20]
 8002d34:	f107 0310 	add.w	r3, r7, #16
 8002d38:	4611      	mov	r1, r2
 8002d3a:	4618      	mov	r0, r3
 8002d3c:	f7ff f988 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8002d40:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002d44:	2b00      	cmp	r3, #0
 8002d46:	d01d      	beq.n	8002d84 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 8002d48:	68b8      	ldr	r0, [r7, #8]
 8002d4a:	f000 fb89 	bl	8003460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 8002d4e:	4603      	mov	r3, r0
 8002d50:	61fb      	str	r3, [r7, #28]
 8002d52:	f107 021c 	add.w	r2, r7, #28
 8002d56:	f107 0310 	add.w	r3, r7, #16
 8002d5a:	4611      	mov	r1, r2
 8002d5c:	4618      	mov	r0, r3
 8002d5e:	f000 fb90 	bl	8003482 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>
 8002d62:	4603      	mov	r3, r0
 8002d64:	2b00      	cmp	r3, #0
 8002d66:	d008      	beq.n	8002d7a <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 8002d68:	f107 0214 	add.w	r2, r7, #20
 8002d6c:	f107 0318 	add.w	r3, r7, #24
 8002d70:	4619      	mov	r1, r3
 8002d72:	68f8      	ldr	r0, [r7, #12]
 8002d74:	f000 fb99 	bl	80034aa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 8002d78:	e025      	b.n	8002dc6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 8002d7a:	f107 0310 	add.w	r3, r7, #16
 8002d7e:	4618      	mov	r0, r3
 8002d80:	f000 f84a 	bl	8002e18 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8002d84:	68bc      	ldr	r4, [r7, #8]
 8002d86:	693b      	ldr	r3, [r7, #16]
 8002d88:	4618      	mov	r0, r3
 8002d8a:	f7ff ff64 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8002d8e:	4603      	mov	r3, r0
 8002d90:	687a      	ldr	r2, [r7, #4]
 8002d92:	4619      	mov	r1, r3
 8002d94:	4620      	mov	r0, r4
 8002d96:	f7ff ff6a 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8002d9a:	4603      	mov	r3, r0
 8002d9c:	2b00      	cmp	r3, #0
 8002d9e:	d008      	beq.n	8002db2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 8002da0:	f107 0214 	add.w	r2, r7, #20
 8002da4:	f107 0318 	add.w	r3, r7, #24
 8002da8:	4619      	mov	r1, r3
 8002daa:	68f8      	ldr	r0, [r7, #12]
 8002dac:	f000 fb7d 	bl	80034aa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>
 8002db0:	e009      	b.n	8002dc6 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 8002db2:	2300      	movs	r3, #0
 8002db4:	623b      	str	r3, [r7, #32]
 8002db6:	f107 0220 	add.w	r2, r7, #32
 8002dba:	f107 0310 	add.w	r3, r7, #16
 8002dbe:	4619      	mov	r1, r3
 8002dc0:	68f8      	ldr	r0, [r7, #12]
 8002dc2:	f000 f84b 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8002dc6:	68f8      	ldr	r0, [r7, #12]
 8002dc8:	372c      	adds	r7, #44	; 0x2c
 8002dca:	46bd      	mov	sp, r7
 8002dcc:	bd90      	pop	{r4, r7, pc}

08002dce <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8002dce:	b480      	push	{r7}
 8002dd0:	b083      	sub	sp, #12
 8002dd2:	af00      	add	r7, sp, #0
 8002dd4:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	330c      	adds	r3, #12
 8002dda:	4618      	mov	r0, r3
 8002ddc:	370c      	adds	r7, #12
 8002dde:	46bd      	mov	sp, r7
 8002de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002de4:	4770      	bx	lr

08002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8002de6:	b580      	push	{r7, lr}
 8002de8:	b084      	sub	sp, #16
 8002dea:	af00      	add	r7, sp, #0
 8002dec:	60f8      	str	r0, [r7, #12]
 8002dee:	60b9      	str	r1, [r7, #8]
 8002df0:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8002df2:	68b8      	ldr	r0, [r7, #8]
 8002df4:	f000 fb29 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8002df8:	4603      	mov	r3, r0
 8002dfa:	681a      	ldr	r2, [r3, #0]
 8002dfc:	68fb      	ldr	r3, [r7, #12]
 8002dfe:	601a      	str	r2, [r3, #0]
 8002e00:	6878      	ldr	r0, [r7, #4]
 8002e02:	f000 fb22 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8002e06:	4603      	mov	r3, r0
 8002e08:	681a      	ldr	r2, [r3, #0]
 8002e0a:	68fb      	ldr	r3, [r7, #12]
 8002e0c:	605a      	str	r2, [r3, #4]
 8002e0e:	68fb      	ldr	r3, [r7, #12]
 8002e10:	4618      	mov	r0, r3
 8002e12:	3710      	adds	r7, #16
 8002e14:	46bd      	mov	sp, r7
 8002e16:	bd80      	pop	{r7, pc}

08002e18 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8002e18:	b580      	push	{r7, lr}
 8002e1a:	b082      	sub	sp, #8
 8002e1c:	af00      	add	r7, sp, #0
 8002e1e:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	4618      	mov	r0, r3
 8002e26:	f01d fa56 	bl	80202d6 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8002e2a:	4602      	mov	r2, r0
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	601a      	str	r2, [r3, #0]
	return *this;
 8002e30:	687b      	ldr	r3, [r7, #4]
      }
 8002e32:	4618      	mov	r0, r3
 8002e34:	3708      	adds	r7, #8
 8002e36:	46bd      	mov	sp, r7
 8002e38:	bd80      	pop	{r7, pc}

08002e3a <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8002e3a:	b580      	push	{r7, lr}
 8002e3c:	b082      	sub	sp, #8
 8002e3e:	af00      	add	r7, sp, #0
 8002e40:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	681b      	ldr	r3, [r3, #0]
 8002e46:	4618      	mov	r0, r3
 8002e48:	f01d fa32 	bl	80202b0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8002e4c:	4602      	mov	r2, r0
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	601a      	str	r2, [r3, #0]
	return *this;
 8002e52:	687b      	ldr	r3, [r7, #4]
      }
 8002e54:	4618      	mov	r0, r3
 8002e56:	3708      	adds	r7, #8
 8002e58:	46bd      	mov	sp, r7
 8002e5a:	bd80      	pop	{r7, pc}

08002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 8002e5c:	b580      	push	{r7, lr}
 8002e5e:	b084      	sub	sp, #16
 8002e60:	af00      	add	r7, sp, #0
 8002e62:	60f8      	str	r0, [r7, #12]
 8002e64:	60b9      	str	r1, [r7, #8]
 8002e66:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 8002e68:	68b8      	ldr	r0, [r7, #8]
 8002e6a:	f000 faee 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8002e6e:	4603      	mov	r3, r0
 8002e70:	681a      	ldr	r2, [r3, #0]
 8002e72:	68fb      	ldr	r3, [r7, #12]
 8002e74:	601a      	str	r2, [r3, #0]
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	681a      	ldr	r2, [r3, #0]
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	605a      	str	r2, [r3, #4]
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	4618      	mov	r0, r3
 8002e82:	3710      	adds	r7, #16
 8002e84:	46bd      	mov	sp, r7
 8002e86:	bd80      	pop	{r7, pc}

08002e88 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 8002e88:	b590      	push	{r4, r7, lr}
 8002e8a:	b083      	sub	sp, #12
 8002e8c:	af00      	add	r7, sp, #0
 8002e8e:	6078      	str	r0, [r7, #4]
 8002e90:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	681c      	ldr	r4, [r3, #0]
 8002e96:	6838      	ldr	r0, [r7, #0]
 8002e98:	f7ff fa18 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8002e9c:	4603      	mov	r3, r0
 8002e9e:	4619      	mov	r1, r3
 8002ea0:	4620      	mov	r0, r4
 8002ea2:	f000 fb1b 	bl	80034dc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 8002ea6:	4603      	mov	r3, r0
 8002ea8:	4618      	mov	r0, r3
 8002eaa:	370c      	adds	r7, #12
 8002eac:	46bd      	mov	sp, r7
 8002eae:	bd90      	pop	{r4, r7, pc}

08002eb0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEC1ERKSD_>:
 8002eb0:	b480      	push	{r7}
 8002eb2:	b083      	sub	sp, #12
 8002eb4:	af00      	add	r7, sp, #0
 8002eb6:	6078      	str	r0, [r7, #4]
 8002eb8:	6039      	str	r1, [r7, #0]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	4618      	mov	r0, r3
 8002ebe:	370c      	adds	r7, #12
 8002ec0:	46bd      	mov	sp, r7
 8002ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ec6:	4770      	bx	lr

08002ec8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8002ec8:	b590      	push	{r4, r7, lr}
 8002eca:	b083      	sub	sp, #12
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	6078      	str	r0, [r7, #4]
 8002ed0:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8002ed2:	6878      	ldr	r0, [r7, #4]
 8002ed4:	f000 fb19 	bl	800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8002ed8:	4604      	mov	r4, r0
 8002eda:	6838      	ldr	r0, [r7, #0]
 8002edc:	f000 fb20 	bl	8003520 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8002ee0:	4603      	mov	r3, r0
 8002ee2:	4619      	mov	r1, r3
 8002ee4:	4620      	mov	r0, r4
 8002ee6:	f000 fb29 	bl	800353c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>
      }
 8002eea:	bf00      	nop
 8002eec:	370c      	adds	r7, #12
 8002eee:	46bd      	mov	sp, r7
 8002ef0:	bd90      	pop	{r4, r7, pc}

08002ef2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8002ef2:	b580      	push	{r7, lr}
 8002ef4:	b082      	sub	sp, #8
 8002ef6:	af00      	add	r7, sp, #0
 8002ef8:	6078      	str	r0, [r7, #4]
 8002efa:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8002efc:	6878      	ldr	r0, [r7, #4]
 8002efe:	f000 fb04 	bl	800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8002f02:	4603      	mov	r3, r0
 8002f04:	2201      	movs	r2, #1
 8002f06:	6839      	ldr	r1, [r7, #0]
 8002f08:	4618      	mov	r0, r3
 8002f0a:	f000 fb24 	bl	8003556 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>
 8002f0e:	bf00      	nop
 8002f10:	3708      	adds	r7, #8
 8002f12:	46bd      	mov	sp, r7
 8002f14:	bd80      	pop	{r7, pc}

08002f16 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8002f16:	b580      	push	{r7, lr}
 8002f18:	b084      	sub	sp, #16
 8002f1a:	af00      	add	r7, sp, #0
 8002f1c:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	681a      	ldr	r2, [r3, #0]
 8002f22:	f107 030c 	add.w	r3, r7, #12
 8002f26:	4611      	mov	r1, r2
 8002f28:	4618      	mov	r0, r3
 8002f2a:	f7ff fa87 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 8002f2e:	68fb      	ldr	r3, [r7, #12]
 8002f30:	4618      	mov	r0, r3
 8002f32:	3710      	adds	r7, #16
 8002f34:	46bd      	mov	sp, r7
 8002f36:	bd80      	pop	{r7, pc}

08002f38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8002f38:	b480      	push	{r7}
 8002f3a:	b083      	sub	sp, #12
 8002f3c:	af00      	add	r7, sp, #0
 8002f3e:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	3304      	adds	r3, #4
 8002f44:	4618      	mov	r0, r3
 8002f46:	370c      	adds	r7, #12
 8002f48:	46bd      	mov	sp, r7
 8002f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f4e:	4770      	bx	lr

08002f50 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8002f50:	b480      	push	{r7}
 8002f52:	b083      	sub	sp, #12
 8002f54:	af00      	add	r7, sp, #0
 8002f56:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 8002f58:	687b      	ldr	r3, [r7, #4]
 8002f5a:	695b      	ldr	r3, [r3, #20]
 8002f5c:	4618      	mov	r0, r3
 8002f5e:	370c      	adds	r7, #12
 8002f60:	46bd      	mov	sp, r7
 8002f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f66:	4770      	bx	lr

08002f68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 8002f68:	b480      	push	{r7}
 8002f6a:	b083      	sub	sp, #12
 8002f6c:	af00      	add	r7, sp, #0
 8002f6e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8002f70:	687b      	ldr	r3, [r7, #4]
 8002f72:	3310      	adds	r3, #16
 8002f74:	4618      	mov	r0, r3
 8002f76:	370c      	adds	r7, #12
 8002f78:	46bd      	mov	sp, r7
 8002f7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f7e:	4770      	bx	lr

08002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8002f80:	b580      	push	{r7, lr}
 8002f82:	b082      	sub	sp, #8
 8002f84:	af00      	add	r7, sp, #0
 8002f86:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 8002f88:	6878      	ldr	r0, [r7, #4]
 8002f8a:	f000 faf3 	bl	8003574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8002f8e:	4603      	mov	r3, r0
 8002f90:	4618      	mov	r0, r3
 8002f92:	3708      	adds	r7, #8
 8002f94:	46bd      	mov	sp, r7
 8002f96:	bd80      	pop	{r7, pc}

08002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
 8002f98:	b580      	push	{r7, lr}
 8002f9a:	b084      	sub	sp, #16
 8002f9c:	af00      	add	r7, sp, #0
 8002f9e:	60f8      	str	r0, [r7, #12]
 8002fa0:	60b9      	str	r1, [r7, #8]
 8002fa2:	607a      	str	r2, [r7, #4]
      { return __x < __y; }
 8002fa4:	6879      	ldr	r1, [r7, #4]
 8002fa6:	68b8      	ldr	r0, [r7, #8]
 8002fa8:	f000 faf7 	bl	800359a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
 8002fac:	4603      	mov	r3, r0
 8002fae:	4618      	mov	r0, r3
 8002fb0:	3710      	adds	r7, #16
 8002fb2:	46bd      	mov	sp, r7
 8002fb4:	bd80      	pop	{r7, pc}

08002fb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8002fb6:	b590      	push	{r4, r7, lr}
 8002fb8:	b08b      	sub	sp, #44	; 0x2c
 8002fba:	af00      	add	r7, sp, #0
 8002fbc:	60f8      	str	r0, [r7, #12]
 8002fbe:	60b9      	str	r1, [r7, #8]
 8002fc0:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8002fc2:	68b8      	ldr	r0, [r7, #8]
 8002fc4:	f7fe fe2c 	bl	8001c20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8002fc8:	4603      	mov	r3, r0
 8002fca:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8002fcc:	68b8      	ldr	r0, [r7, #8]
 8002fce:	f7ff ffb3 	bl	8002f38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8002fd2:	4603      	mov	r3, r0
 8002fd4:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8002fd6:	2301      	movs	r3, #1
 8002fd8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8002fdc:	69bb      	ldr	r3, [r7, #24]
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d020      	beq.n	8003024 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 8002fe2:	69bb      	ldr	r3, [r7, #24]
 8002fe4:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8002fe6:	68bc      	ldr	r4, [r7, #8]
 8002fe8:	69bb      	ldr	r3, [r7, #24]
 8002fea:	4618      	mov	r0, r3
 8002fec:	f000 fac2 	bl	8003574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 8002ff0:	4603      	mov	r3, r0
 8002ff2:	461a      	mov	r2, r3
 8002ff4:	6879      	ldr	r1, [r7, #4]
 8002ff6:	4620      	mov	r0, r4
 8002ff8:	f7ff ffce 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8002ffc:	4603      	mov	r3, r0
 8002ffe:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8003002:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003006:	2b00      	cmp	r3, #0
 8003008:	d005      	beq.n	8003016 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 800300a:	69bb      	ldr	r3, [r7, #24]
 800300c:	4618      	mov	r0, r3
 800300e:	f7ff f9f8 	bl	8002402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8003012:	4603      	mov	r3, r0
 8003014:	e004      	b.n	8003020 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 8003016:	69bb      	ldr	r3, [r7, #24]
 8003018:	4618      	mov	r0, r3
 800301a:	f7ff f9e6 	bl	80023ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 800301e:	4603      	mov	r3, r0
 8003020:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8003022:	e7db      	b.n	8002fdc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8003024:	697a      	ldr	r2, [r7, #20]
 8003026:	f107 0310 	add.w	r3, r7, #16
 800302a:	4611      	mov	r1, r2
 800302c:	4618      	mov	r0, r3
 800302e:	f7ff fa05 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8003032:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003036:	2b00      	cmp	r3, #0
 8003038:	d01d      	beq.n	8003076 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 800303a:	68b8      	ldr	r0, [r7, #8]
 800303c:	f000 fabd 	bl	80035ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 8003040:	4603      	mov	r3, r0
 8003042:	61fb      	str	r3, [r7, #28]
 8003044:	f107 021c 	add.w	r2, r7, #28
 8003048:	f107 0310 	add.w	r3, r7, #16
 800304c:	4611      	mov	r1, r2
 800304e:	4618      	mov	r0, r3
 8003050:	f000 fac4 	bl	80035dc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 8003054:	4603      	mov	r3, r0
 8003056:	2b00      	cmp	r3, #0
 8003058:	d008      	beq.n	800306c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 800305a:	f107 0214 	add.w	r2, r7, #20
 800305e:	f107 0318 	add.w	r3, r7, #24
 8003062:	4619      	mov	r1, r3
 8003064:	68f8      	ldr	r0, [r7, #12]
 8003066:	f000 facd 	bl	8003604 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 800306a:	e025      	b.n	80030b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 800306c:	f107 0310 	add.w	r3, r7, #16
 8003070:	4618      	mov	r0, r3
 8003072:	f000 f831 	bl	80030d8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 8003076:	68bc      	ldr	r4, [r7, #8]
 8003078:	693b      	ldr	r3, [r7, #16]
 800307a:	4618      	mov	r0, r3
 800307c:	f7ff ff80 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8003080:	4603      	mov	r3, r0
 8003082:	687a      	ldr	r2, [r7, #4]
 8003084:	4619      	mov	r1, r3
 8003086:	4620      	mov	r0, r4
 8003088:	f7ff ff86 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800308c:	4603      	mov	r3, r0
 800308e:	2b00      	cmp	r3, #0
 8003090:	d008      	beq.n	80030a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8003092:	f107 0214 	add.w	r2, r7, #20
 8003096:	f107 0318 	add.w	r3, r7, #24
 800309a:	4619      	mov	r1, r3
 800309c:	68f8      	ldr	r0, [r7, #12]
 800309e:	f000 fab1 	bl	8003604 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>
 80030a2:	e009      	b.n	80030b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 80030a4:	2300      	movs	r3, #0
 80030a6:	623b      	str	r3, [r7, #32]
 80030a8:	f107 0220 	add.w	r2, r7, #32
 80030ac:	f107 0310 	add.w	r3, r7, #16
 80030b0:	4619      	mov	r1, r3
 80030b2:	68f8      	ldr	r0, [r7, #12]
 80030b4:	f7ff fed2 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80030b8:	68f8      	ldr	r0, [r7, #12]
 80030ba:	372c      	adds	r7, #44	; 0x2c
 80030bc:	46bd      	mov	sp, r7
 80030be:	bd90      	pop	{r4, r7, pc}

080030c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 80030c0:	b480      	push	{r7}
 80030c2:	b083      	sub	sp, #12
 80030c4:	af00      	add	r7, sp, #0
 80030c6:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	330c      	adds	r3, #12
 80030cc:	4618      	mov	r0, r3
 80030ce:	370c      	adds	r7, #12
 80030d0:	46bd      	mov	sp, r7
 80030d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030d6:	4770      	bx	lr

080030d8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 80030d8:	b580      	push	{r7, lr}
 80030da:	b082      	sub	sp, #8
 80030dc:	af00      	add	r7, sp, #0
 80030de:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 80030e0:	687b      	ldr	r3, [r7, #4]
 80030e2:	681b      	ldr	r3, [r3, #0]
 80030e4:	4618      	mov	r0, r3
 80030e6:	f01d f8f6 	bl	80202d6 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 80030ea:	4602      	mov	r2, r0
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	601a      	str	r2, [r3, #0]
	return *this;
 80030f0:	687b      	ldr	r3, [r7, #4]
      }
 80030f2:	4618      	mov	r0, r3
 80030f4:	3708      	adds	r7, #8
 80030f6:	46bd      	mov	sp, r7
 80030f8:	bd80      	pop	{r7, pc}

080030fa <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 80030fa:	b580      	push	{r7, lr}
 80030fc:	b082      	sub	sp, #8
 80030fe:	af00      	add	r7, sp, #0
 8003100:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	4618      	mov	r0, r3
 8003108:	f01d f8d2 	bl	80202b0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 800310c:	4602      	mov	r2, r0
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	601a      	str	r2, [r3, #0]
	return *this;
 8003112:	687b      	ldr	r3, [r7, #4]
      }
 8003114:	4618      	mov	r0, r3
 8003116:	3708      	adds	r7, #8
 8003118:	46bd      	mov	sp, r7
 800311a:	bd80      	pop	{r7, pc}

0800311c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIRKS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 800311c:	b590      	push	{r4, r7, lr}
 800311e:	b083      	sub	sp, #12
 8003120:	af00      	add	r7, sp, #0
 8003122:	6078      	str	r0, [r7, #4]
 8003124:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681c      	ldr	r4, [r3, #0]
 800312a:	6838      	ldr	r0, [r7, #0]
 800312c:	f7ff fac4 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8003130:	4603      	mov	r3, r0
 8003132:	4619      	mov	r1, r3
 8003134:	4620      	mov	r0, r4
 8003136:	f000 fa7e 	bl	8003636 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 800313a:	4603      	mov	r3, r0
 800313c:	4618      	mov	r0, r3
 800313e:	370c      	adds	r7, #12
 8003140:	46bd      	mov	sp, r7
 8003142:	bd90      	pop	{r4, r7, pc}

08003144 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEC1ERKS7_>:
 8003144:	b480      	push	{r7}
 8003146:	b083      	sub	sp, #12
 8003148:	af00      	add	r7, sp, #0
 800314a:	6078      	str	r0, [r7, #4]
 800314c:	6039      	str	r1, [r7, #0]
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	4618      	mov	r0, r3
 8003152:	370c      	adds	r7, #12
 8003154:	46bd      	mov	sp, r7
 8003156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800315a:	4770      	bx	lr

0800315c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800315c:	b590      	push	{r4, r7, lr}
 800315e:	b083      	sub	sp, #12
 8003160:	af00      	add	r7, sp, #0
 8003162:	6078      	str	r0, [r7, #4]
 8003164:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8003166:	6878      	ldr	r0, [r7, #4]
 8003168:	f000 fa7c 	bl	8003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 800316c:	4604      	mov	r4, r0
 800316e:	6838      	ldr	r0, [r7, #0]
 8003170:	f000 fa83 	bl	800367a <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8003174:	4603      	mov	r3, r0
 8003176:	4619      	mov	r1, r3
 8003178:	4620      	mov	r0, r4
 800317a:	f000 fa8c 	bl	8003696 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>
      }
 800317e:	bf00      	nop
 8003180:	370c      	adds	r7, #12
 8003182:	46bd      	mov	sp, r7
 8003184:	bd90      	pop	{r4, r7, pc}

08003186 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS3_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8003186:	b580      	push	{r7, lr}
 8003188:	b082      	sub	sp, #8
 800318a:	af00      	add	r7, sp, #0
 800318c:	6078      	str	r0, [r7, #4]
 800318e:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 8003190:	6878      	ldr	r0, [r7, #4]
 8003192:	f000 fa67 	bl	8003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8003196:	4603      	mov	r3, r0
 8003198:	2201      	movs	r2, #1
 800319a:	6839      	ldr	r1, [r7, #0]
 800319c:	4618      	mov	r0, r3
 800319e:	f000 fa87 	bl	80036b0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>
 80031a2:	bf00      	nop
 80031a4:	3708      	adds	r7, #8
 80031a6:	46bd      	mov	sp, r7
 80031a8:	bd80      	pop	{r7, pc}

080031aa <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 80031aa:	b580      	push	{r7, lr}
 80031ac:	b084      	sub	sp, #16
 80031ae:	af00      	add	r7, sp, #0
 80031b0:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 80031b2:	687b      	ldr	r3, [r7, #4]
 80031b4:	681a      	ldr	r2, [r3, #0]
 80031b6:	f107 030c 	add.w	r3, r7, #12
 80031ba:	4611      	mov	r1, r2
 80031bc:	4618      	mov	r0, r3
 80031be:	f7ff fb27 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 80031c2:	68fb      	ldr	r3, [r7, #12]
 80031c4:	4618      	mov	r0, r3
 80031c6:	3710      	adds	r7, #16
 80031c8:	46bd      	mov	sp, r7
 80031ca:	bd80      	pop	{r7, pc}

080031cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 80031cc:	b480      	push	{r7}
 80031ce:	b083      	sub	sp, #12
 80031d0:	af00      	add	r7, sp, #0
 80031d2:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	3304      	adds	r3, #4
 80031d8:	4618      	mov	r0, r3
 80031da:	370c      	adds	r7, #12
 80031dc:	46bd      	mov	sp, r7
 80031de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031e2:	4770      	bx	lr

080031e4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 80031e4:	b480      	push	{r7}
 80031e6:	b083      	sub	sp, #12
 80031e8:	af00      	add	r7, sp, #0
 80031ea:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 80031ec:	687b      	ldr	r3, [r7, #4]
 80031ee:	695b      	ldr	r3, [r3, #20]
 80031f0:	4618      	mov	r0, r3
 80031f2:	370c      	adds	r7, #12
 80031f4:	46bd      	mov	sp, r7
 80031f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031fa:	4770      	bx	lr

080031fc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 80031fc:	b480      	push	{r7}
 80031fe:	b083      	sub	sp, #12
 8003200:	af00      	add	r7, sp, #0
 8003202:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	3310      	adds	r3, #16
 8003208:	4618      	mov	r0, r3
 800320a:	370c      	adds	r7, #12
 800320c:	46bd      	mov	sp, r7
 800320e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003212:	4770      	bx	lr

08003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8003214:	b580      	push	{r7, lr}
 8003216:	b082      	sub	sp, #8
 8003218:	af00      	add	r7, sp, #0
 800321a:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 800321c:	6878      	ldr	r0, [r7, #4]
 800321e:	f000 fa56 	bl	80036ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8003222:	4603      	mov	r3, r0
 8003224:	4618      	mov	r0, r3
 8003226:	3708      	adds	r7, #8
 8003228:	46bd      	mov	sp, r7
 800322a:	bd80      	pop	{r7, pc}

0800322c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800322c:	b590      	push	{r4, r7, lr}
 800322e:	b08b      	sub	sp, #44	; 0x2c
 8003230:	af00      	add	r7, sp, #0
 8003232:	60f8      	str	r0, [r7, #12]
 8003234:	60b9      	str	r1, [r7, #8]
 8003236:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8003238:	68b8      	ldr	r0, [r7, #8]
 800323a:	f7fe fdcd 	bl	8001dd8 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 800323e:	4603      	mov	r3, r0
 8003240:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 8003242:	68b8      	ldr	r0, [r7, #8]
 8003244:	f7ff ffc2 	bl	80031cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8003248:	4603      	mov	r3, r0
 800324a:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 800324c:	2301      	movs	r3, #1
 800324e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 8003252:	69bb      	ldr	r3, [r7, #24]
 8003254:	2b00      	cmp	r3, #0
 8003256:	d020      	beq.n	800329a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6e>
	  __y = __x;
 8003258:	69bb      	ldr	r3, [r7, #24]
 800325a:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 800325c:	68bc      	ldr	r4, [r7, #8]
 800325e:	69bb      	ldr	r3, [r7, #24]
 8003260:	4618      	mov	r0, r3
 8003262:	f000 fa34 	bl	80036ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 8003266:	4603      	mov	r3, r0
 8003268:	461a      	mov	r2, r3
 800326a:	6879      	ldr	r1, [r7, #4]
 800326c:	4620      	mov	r0, r4
 800326e:	f7ff fcfe 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8003272:	4603      	mov	r3, r0
 8003274:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8003278:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800327c:	2b00      	cmp	r3, #0
 800327e:	d005      	beq.n	800328c <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x60>
 8003280:	69bb      	ldr	r3, [r7, #24]
 8003282:	4618      	mov	r0, r3
 8003284:	f7ff faa7 	bl	80027d6 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPSt18_Rb_tree_node_base>
 8003288:	4603      	mov	r3, r0
 800328a:	e004      	b.n	8003296 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x6a>
 800328c:	69bb      	ldr	r3, [r7, #24]
 800328e:	4618      	mov	r0, r3
 8003290:	f7ff fa95 	bl	80027be <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPSt18_Rb_tree_node_base>
 8003294:	4603      	mov	r3, r0
 8003296:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8003298:	e7db      	b.n	8003252 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x26>
      iterator __j = iterator(__y);
 800329a:	697a      	ldr	r2, [r7, #20]
 800329c:	f107 0310 	add.w	r3, r7, #16
 80032a0:	4611      	mov	r1, r2
 80032a2:	4618      	mov	r0, r3
 80032a4:	f7ff fab4 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 80032a8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80032ac:	2b00      	cmp	r3, #0
 80032ae:	d01d      	beq.n	80032ec <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xc0>
	  if (__j == begin())
 80032b0:	68b8      	ldr	r0, [r7, #8]
 80032b2:	f000 fa1f 	bl	80036f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>
 80032b6:	4603      	mov	r3, r0
 80032b8:	61fb      	str	r3, [r7, #28]
 80032ba:	f107 021c 	add.w	r2, r7, #28
 80032be:	f107 0310 	add.w	r3, r7, #16
 80032c2:	4611      	mov	r1, r2
 80032c4:	4618      	mov	r0, r3
 80032c6:	f000 fa26 	bl	8003716 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>
 80032ca:	4603      	mov	r3, r0
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d008      	beq.n	80032e2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xb6>
	    return _Res(__x, __y);
 80032d0:	f107 0214 	add.w	r2, r7, #20
 80032d4:	f107 0318 	add.w	r3, r7, #24
 80032d8:	4619      	mov	r1, r3
 80032da:	68f8      	ldr	r0, [r7, #12]
 80032dc:	f000 fa2f 	bl	800373e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 80032e0:	e025      	b.n	800332e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
	    --__j;
 80032e2:	f107 0310 	add.w	r3, r7, #16
 80032e6:	4618      	mov	r0, r3
 80032e8:	f000 f831 	bl	800334e <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 80032ec:	68bc      	ldr	r4, [r7, #8]
 80032ee:	693b      	ldr	r3, [r7, #16]
 80032f0:	4618      	mov	r0, r3
 80032f2:	f7ff ff8f 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80032f6:	4603      	mov	r3, r0
 80032f8:	687a      	ldr	r2, [r7, #4]
 80032fa:	4619      	mov	r1, r3
 80032fc:	4620      	mov	r0, r4
 80032fe:	f7ff fcb6 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8003302:	4603      	mov	r3, r0
 8003304:	2b00      	cmp	r3, #0
 8003306:	d008      	beq.n	800331a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0xee>
	return _Res(__x, __y);
 8003308:	f107 0214 	add.w	r2, r7, #20
 800330c:	f107 0318 	add.w	r3, r7, #24
 8003310:	4619      	mov	r1, r3
 8003312:	68f8      	ldr	r0, [r7, #12]
 8003314:	f000 fa13 	bl	800373e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>
 8003318:	e009      	b.n	800332e <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE24_M_get_insert_unique_posERS1_+0x102>
      return _Res(__j._M_node, 0);
 800331a:	2300      	movs	r3, #0
 800331c:	623b      	str	r3, [r7, #32]
 800331e:	f107 0220 	add.w	r2, r7, #32
 8003322:	f107 0310 	add.w	r3, r7, #16
 8003326:	4619      	mov	r1, r3
 8003328:	68f8      	ldr	r0, [r7, #12]
 800332a:	f7ff fd97 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 800332e:	68f8      	ldr	r0, [r7, #12]
 8003330:	372c      	adds	r7, #44	; 0x2c
 8003332:	46bd      	mov	sp, r7
 8003334:	bd90      	pop	{r4, r7, pc}

08003336 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 8003336:	b480      	push	{r7}
 8003338:	b083      	sub	sp, #12
 800333a:	af00      	add	r7, sp, #0
 800333c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	330c      	adds	r3, #12
 8003342:	4618      	mov	r0, r3
 8003344:	370c      	adds	r7, #12
 8003346:	46bd      	mov	sp, r7
 8003348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800334c:	4770      	bx	lr

0800334e <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 800334e:	b580      	push	{r7, lr}
 8003350:	b082      	sub	sp, #8
 8003352:	af00      	add	r7, sp, #0
 8003354:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	4618      	mov	r0, r3
 800335c:	f01c ffbb 	bl	80202d6 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 8003360:	4602      	mov	r2, r0
 8003362:	687b      	ldr	r3, [r7, #4]
 8003364:	601a      	str	r2, [r3, #0]
	return *this;
 8003366:	687b      	ldr	r3, [r7, #4]
      }
 8003368:	4618      	mov	r0, r3
 800336a:	3708      	adds	r7, #8
 800336c:	46bd      	mov	sp, r7
 800336e:	bd80      	pop	{r7, pc}

08003370 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8003370:	b580      	push	{r7, lr}
 8003372:	b082      	sub	sp, #8
 8003374:	af00      	add	r7, sp, #0
 8003376:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	4618      	mov	r0, r3
 800337e:	f01c ff97 	bl	80202b0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8003382:	4602      	mov	r2, r0
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	601a      	str	r2, [r3, #0]
	return *this;
 8003388:	687b      	ldr	r3, [r7, #4]
      }
 800338a:	4618      	mov	r0, r3
 800338c:	3708      	adds	r7, #8
 800338e:	46bd      	mov	sp, r7
 8003390:	bd80      	pop	{r7, pc}

08003392 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_Alloc_nodeclIRKS3_EEPSt13_Rb_tree_nodeIS3_EOT_>:
	  operator()(_Arg&& __arg) const
 8003392:	b590      	push	{r4, r7, lr}
 8003394:	b083      	sub	sp, #12
 8003396:	af00      	add	r7, sp, #0
 8003398:	6078      	str	r0, [r7, #4]
 800339a:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 800339c:	687b      	ldr	r3, [r7, #4]
 800339e:	681c      	ldr	r4, [r3, #0]
 80033a0:	6838      	ldr	r0, [r7, #0]
 80033a2:	f7ff fb73 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 80033a6:	4603      	mov	r3, r0
 80033a8:	4619      	mov	r1, r3
 80033aa:	4620      	mov	r0, r4
 80033ac:	f000 f9e0 	bl	8003770 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>
 80033b0:	4603      	mov	r3, r0
 80033b2:	4618      	mov	r0, r3
 80033b4:	370c      	adds	r7, #12
 80033b6:	46bd      	mov	sp, r7
 80033b8:	bd90      	pop	{r4, r7, pc}

080033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 80033ba:	b480      	push	{r7}
 80033bc:	b083      	sub	sp, #12
 80033be:	af00      	add	r7, sp, #0
 80033c0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80033c2:	687b      	ldr	r3, [r7, #4]
 80033c4:	4618      	mov	r0, r3
 80033c6:	370c      	adds	r7, #12
 80033c8:	46bd      	mov	sp, r7
 80033ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ce:	4770      	bx	lr

080033d0 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr()
 80033d0:	b580      	push	{r7, lr}
 80033d2:	b082      	sub	sp, #8
 80033d4:	af00      	add	r7, sp, #0
 80033d6:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	3310      	adds	r3, #16
 80033dc:	4618      	mov	r0, r3
 80033de:	f000 f9de 	bl	800379e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 80033e2:	4603      	mov	r3, r0
 80033e4:	4618      	mov	r0, r3
 80033e6:	3708      	adds	r7, #8
 80033e8:	46bd      	mov	sp, r7
 80033ea:	bd80      	pop	{r7, pc}

080033ec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE7destroyIS4_EEvRS6_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static void
	destroy(allocator_type& __a, _Up* __p)
 80033ec:	b580      	push	{r7, lr}
 80033ee:	b082      	sub	sp, #8
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	6078      	str	r0, [r7, #4]
 80033f4:	6039      	str	r1, [r7, #0]
	noexcept(noexcept(__a.destroy(__p)))
	{ __a.destroy(__p); }
 80033f6:	6839      	ldr	r1, [r7, #0]
 80033f8:	6878      	ldr	r0, [r7, #4]
 80033fa:	f000 f9dc 	bl	80037b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>
 80033fe:	bf00      	nop
 8003400:	3708      	adds	r7, #8
 8003402:	46bd      	mov	sp, r7
 8003404:	bd80      	pop	{r7, pc}

08003406 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8003406:	b580      	push	{r7, lr}
 8003408:	b084      	sub	sp, #16
 800340a:	af00      	add	r7, sp, #0
 800340c:	60f8      	str	r0, [r7, #12]
 800340e:	60b9      	str	r1, [r7, #8]
 8003410:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8003412:	687a      	ldr	r2, [r7, #4]
 8003414:	68b9      	ldr	r1, [r7, #8]
 8003416:	68f8      	ldr	r0, [r7, #12]
 8003418:	f000 f9d8 	bl	80037cc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>
 800341c:	bf00      	nop
 800341e:	3710      	adds	r7, #16
 8003420:	46bd      	mov	sp, r7
 8003422:	bd80      	pop	{r7, pc}

08003424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 8003424:	b580      	push	{r7, lr}
 8003426:	b084      	sub	sp, #16
 8003428:	af00      	add	r7, sp, #0
 800342a:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800342c:	6878      	ldr	r0, [r7, #4]
 800342e:	f000 f9d9 	bl	80037e4 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8003432:	4602      	mov	r2, r0
 8003434:	f107 030c 	add.w	r3, r7, #12
 8003438:	4611      	mov	r1, r2
 800343a:	4618      	mov	r0, r3
 800343c:	f7fe ff3a 	bl	80022b4 <_ZNKSt10_Select1stISt4pairIKc10token_typeEEclERKS3_>
 8003440:	4603      	mov	r3, r0
      }
 8003442:	4618      	mov	r0, r3
 8003444:	3710      	adds	r7, #16
 8003446:	46bd      	mov	sp, r7
 8003448:	bd80      	pop	{r7, pc}

0800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800344a:	b480      	push	{r7}
 800344c:	b083      	sub	sp, #12
 800344e:	af00      	add	r7, sp, #0
 8003450:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	4618      	mov	r0, r3
 8003456:	370c      	adds	r7, #12
 8003458:	46bd      	mov	sp, r7
 800345a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800345e:	4770      	bx	lr

08003460 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8003460:	b580      	push	{r7, lr}
 8003462:	b084      	sub	sp, #16
 8003464:	af00      	add	r7, sp, #0
 8003466:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	68da      	ldr	r2, [r3, #12]
 800346c:	f107 030c 	add.w	r3, r7, #12
 8003470:	4611      	mov	r1, r2
 8003472:	4618      	mov	r0, r3
 8003474:	f7fe fdec 	bl	8002050 <_ZNSt17_Rb_tree_iteratorISt4pairIKc10token_typeEEC1EPSt18_Rb_tree_node_base>
 8003478:	68fb      	ldr	r3, [r7, #12]
 800347a:	4618      	mov	r0, r3
 800347c:	3710      	adds	r7, #16
 800347e:	46bd      	mov	sp, r7
 8003480:	bd80      	pop	{r7, pc}

08003482 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8003482:	b480      	push	{r7}
 8003484:	b083      	sub	sp, #12
 8003486:	af00      	add	r7, sp, #0
 8003488:	6078      	str	r0, [r7, #4]
 800348a:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681a      	ldr	r2, [r3, #0]
 8003490:	683b      	ldr	r3, [r7, #0]
 8003492:	681b      	ldr	r3, [r3, #0]
 8003494:	429a      	cmp	r2, r3
 8003496:	bf0c      	ite	eq
 8003498:	2301      	moveq	r3, #1
 800349a:	2300      	movne	r3, #0
 800349c:	b2db      	uxtb	r3, r3
 800349e:	4618      	mov	r0, r3
 80034a0:	370c      	adds	r7, #12
 80034a2:	46bd      	mov	sp, r7
 80034a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034a8:	4770      	bx	lr

080034aa <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80034aa:	b580      	push	{r7, lr}
 80034ac:	b084      	sub	sp, #16
 80034ae:	af00      	add	r7, sp, #0
 80034b0:	60f8      	str	r0, [r7, #12]
 80034b2:	60b9      	str	r1, [r7, #8]
 80034b4:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80034b6:	68b8      	ldr	r0, [r7, #8]
 80034b8:	f000 f9a2 	bl	8003800 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>
 80034bc:	4603      	mov	r3, r0
 80034be:	681a      	ldr	r2, [r3, #0]
 80034c0:	68fb      	ldr	r3, [r7, #12]
 80034c2:	601a      	str	r2, [r3, #0]
 80034c4:	6878      	ldr	r0, [r7, #4]
 80034c6:	f7ff ffc0 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 80034ca:	4603      	mov	r3, r0
 80034cc:	681a      	ldr	r2, [r3, #0]
 80034ce:	68fb      	ldr	r3, [r7, #12]
 80034d0:	605a      	str	r2, [r3, #4]
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	4618      	mov	r0, r3
 80034d6:	3710      	adds	r7, #16
 80034d8:	46bd      	mov	sp, r7
 80034da:	bd80      	pop	{r7, pc}

080034dc <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 80034dc:	b580      	push	{r7, lr}
 80034de:	b084      	sub	sp, #16
 80034e0:	af00      	add	r7, sp, #0
 80034e2:	6078      	str	r0, [r7, #4]
 80034e4:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 80034e6:	6878      	ldr	r0, [r7, #4]
 80034e8:	f000 f995 	bl	8003816 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 80034ec:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 80034ee:	6838      	ldr	r0, [r7, #0]
 80034f0:	f7fe feec 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 80034f4:	4603      	mov	r3, r0
 80034f6:	461a      	mov	r2, r3
 80034f8:	68f9      	ldr	r1, [r7, #12]
 80034fa:	6878      	ldr	r0, [r7, #4]
 80034fc:	f000 f99c 	bl	8003838 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 8003500:	68fb      	ldr	r3, [r7, #12]
	}
 8003502:	4618      	mov	r0, r3
 8003504:	3710      	adds	r7, #16
 8003506:	46bd      	mov	sp, r7
 8003508:	bd80      	pop	{r7, pc}

0800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 800350a:	b480      	push	{r7}
 800350c:	b083      	sub	sp, #12
 800350e:	af00      	add	r7, sp, #0
 8003510:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	4618      	mov	r0, r3
 8003516:	370c      	adds	r7, #12
 8003518:	46bd      	mov	sp, r7
 800351a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800351e:	4770      	bx	lr

08003520 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr()
 8003520:	b580      	push	{r7, lr}
 8003522:	b082      	sub	sp, #8
 8003524:	af00      	add	r7, sp, #0
 8003526:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	3310      	adds	r3, #16
 800352c:	4618      	mov	r0, r3
 800352e:	f000 f9a3 	bl	8003878 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 8003532:	4603      	mov	r3, r0
 8003534:	4618      	mov	r0, r3
 8003536:	3708      	adds	r7, #8
 8003538:	46bd      	mov	sp, r7
 800353a:	bd80      	pop	{r7, pc}

0800353c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800353c:	b580      	push	{r7, lr}
 800353e:	b082      	sub	sp, #8
 8003540:	af00      	add	r7, sp, #0
 8003542:	6078      	str	r0, [r7, #4]
 8003544:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8003546:	6839      	ldr	r1, [r7, #0]
 8003548:	6878      	ldr	r0, [r7, #4]
 800354a:	f000 f9a1 	bl	8003890 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>
 800354e:	bf00      	nop
 8003550:	3708      	adds	r7, #8
 8003552:	46bd      	mov	sp, r7
 8003554:	bd80      	pop	{r7, pc}

08003556 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8003556:	b580      	push	{r7, lr}
 8003558:	b084      	sub	sp, #16
 800355a:	af00      	add	r7, sp, #0
 800355c:	60f8      	str	r0, [r7, #12]
 800355e:	60b9      	str	r1, [r7, #8]
 8003560:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8003562:	687a      	ldr	r2, [r7, #4]
 8003564:	68b9      	ldr	r1, [r7, #8]
 8003566:	68f8      	ldr	r0, [r7, #12]
 8003568:	f000 f99e 	bl	80038a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>
 800356c:	bf00      	nop
 800356e:	3710      	adds	r7, #16
 8003570:	46bd      	mov	sp, r7
 8003572:	bd80      	pop	{r7, pc}

08003574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 8003574:	b580      	push	{r7, lr}
 8003576:	b084      	sub	sp, #16
 8003578:	af00      	add	r7, sp, #0
 800357a:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 800357c:	6878      	ldr	r0, [r7, #4]
 800357e:	f000 f99f 	bl	80038c0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8003582:	4602      	mov	r2, r0
 8003584:	f107 030c 	add.w	r3, r7, #12
 8003588:	4611      	mov	r1, r2
 800358a:	4618      	mov	r0, r3
 800358c:	f7ff f888 	bl	80026a0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEclERKS9_>
 8003590:	4603      	mov	r3, r0
      }
 8003592:	4618      	mov	r0, r3
 8003594:	3710      	adds	r7, #16
 8003596:	46bd      	mov	sp, r7
 8003598:	bd80      	pop	{r7, pc}

0800359a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 800359a:	b580      	push	{r7, lr}
 800359c:	b082      	sub	sp, #8
 800359e:	af00      	add	r7, sp, #0
 80035a0:	6078      	str	r0, [r7, #4]
 80035a2:	6039      	str	r1, [r7, #0]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
 80035a4:	6839      	ldr	r1, [r7, #0]
 80035a6:	6878      	ldr	r0, [r7, #4]
 80035a8:	f01d f8ea 	bl	8020780 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
 80035ac:	4603      	mov	r3, r0
 80035ae:	0fdb      	lsrs	r3, r3, #31
 80035b0:	b2db      	uxtb	r3, r3
 80035b2:	4618      	mov	r0, r3
 80035b4:	3708      	adds	r7, #8
 80035b6:	46bd      	mov	sp, r7
 80035b8:	bd80      	pop	{r7, pc}

080035ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80035ba:	b580      	push	{r7, lr}
 80035bc:	b084      	sub	sp, #16
 80035be:	af00      	add	r7, sp, #0
 80035c0:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	68da      	ldr	r2, [r3, #12]
 80035c6:	f107 030c 	add.w	r3, r7, #12
 80035ca:	4611      	mov	r1, r2
 80035cc:	4618      	mov	r0, r3
 80035ce:	f7fe ff35 	bl	800243c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPSt18_Rb_tree_node_base>
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	4618      	mov	r0, r3
 80035d6:	3710      	adds	r7, #16
 80035d8:	46bd      	mov	sp, r7
 80035da:	bd80      	pop	{r7, pc}

080035dc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80035dc:	b480      	push	{r7}
 80035de:	b083      	sub	sp, #12
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	6078      	str	r0, [r7, #4]
 80035e4:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	681a      	ldr	r2, [r3, #0]
 80035ea:	683b      	ldr	r3, [r7, #0]
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	429a      	cmp	r2, r3
 80035f0:	bf0c      	ite	eq
 80035f2:	2301      	moveq	r3, #1
 80035f4:	2300      	movne	r3, #0
 80035f6:	b2db      	uxtb	r3, r3
 80035f8:	4618      	mov	r0, r3
 80035fa:	370c      	adds	r7, #12
 80035fc:	46bd      	mov	sp, r7
 80035fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003602:	4770      	bx	lr

08003604 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8003604:	b580      	push	{r7, lr}
 8003606:	b084      	sub	sp, #16
 8003608:	af00      	add	r7, sp, #0
 800360a:	60f8      	str	r0, [r7, #12]
 800360c:	60b9      	str	r1, [r7, #8]
 800360e:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8003610:	68b8      	ldr	r0, [r7, #8]
 8003612:	f000 f963 	bl	80038dc <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>
 8003616:	4603      	mov	r3, r0
 8003618:	681a      	ldr	r2, [r3, #0]
 800361a:	68fb      	ldr	r3, [r7, #12]
 800361c:	601a      	str	r2, [r3, #0]
 800361e:	6878      	ldr	r0, [r7, #4]
 8003620:	f7ff ff13 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8003624:	4603      	mov	r3, r0
 8003626:	681a      	ldr	r2, [r3, #0]
 8003628:	68fb      	ldr	r3, [r7, #12]
 800362a:	605a      	str	r2, [r3, #4]
 800362c:	68fb      	ldr	r3, [r7, #12]
 800362e:	4618      	mov	r0, r3
 8003630:	3710      	adds	r7, #16
 8003632:	46bd      	mov	sp, r7
 8003634:	bd80      	pop	{r7, pc}

08003636 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8003636:	b580      	push	{r7, lr}
 8003638:	b084      	sub	sp, #16
 800363a:	af00      	add	r7, sp, #0
 800363c:	6078      	str	r0, [r7, #4]
 800363e:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8003640:	6878      	ldr	r0, [r7, #4]
 8003642:	f000 f956 	bl	80038f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 8003646:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8003648:	6838      	ldr	r0, [r7, #0]
 800364a:	f7ff f835 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 800364e:	4603      	mov	r3, r0
 8003650:	461a      	mov	r2, r3
 8003652:	68f9      	ldr	r1, [r7, #12]
 8003654:	6878      	ldr	r0, [r7, #4]
 8003656:	f000 f95d 	bl	8003914 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 800365a:	68fb      	ldr	r3, [r7, #12]
	}
 800365c:	4618      	mov	r0, r3
 800365e:	3710      	adds	r7, #16
 8003660:	46bd      	mov	sp, r7
 8003662:	bd80      	pop	{r7, pc}

08003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8003664:	b480      	push	{r7}
 8003666:	b083      	sub	sp, #12
 8003668:	af00      	add	r7, sp, #0
 800366a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	4618      	mov	r0, r3
 8003670:	370c      	adds	r7, #12
 8003672:	46bd      	mov	sp, r7
 8003674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003678:	4770      	bx	lr

0800367a <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr()
 800367a:	b580      	push	{r7, lr}
 800367c:	b082      	sub	sp, #8
 800367e:	af00      	add	r7, sp, #0
 8003680:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	3310      	adds	r3, #16
 8003686:	4618      	mov	r0, r3
 8003688:	f000 f964 	bl	8003954 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 800368c:	4603      	mov	r3, r0
 800368e:	4618      	mov	r0, r3
 8003690:	3708      	adds	r7, #8
 8003692:	46bd      	mov	sp, r7
 8003694:	bd80      	pop	{r7, pc}

08003696 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE7destroyIS4_EEvRS6_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 8003696:	b580      	push	{r7, lr}
 8003698:	b082      	sub	sp, #8
 800369a:	af00      	add	r7, sp, #0
 800369c:	6078      	str	r0, [r7, #4]
 800369e:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 80036a0:	6839      	ldr	r1, [r7, #0]
 80036a2:	6878      	ldr	r0, [r7, #4]
 80036a4:	f000 f962 	bl	800396c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>
 80036a8:	bf00      	nop
 80036aa:	3708      	adds	r7, #8
 80036ac:	46bd      	mov	sp, r7
 80036ae:	bd80      	pop	{r7, pc}

080036b0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80036b0:	b580      	push	{r7, lr}
 80036b2:	b084      	sub	sp, #16
 80036b4:	af00      	add	r7, sp, #0
 80036b6:	60f8      	str	r0, [r7, #12]
 80036b8:	60b9      	str	r1, [r7, #8]
 80036ba:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80036bc:	687a      	ldr	r2, [r7, #4]
 80036be:	68b9      	ldr	r1, [r7, #8]
 80036c0:	68f8      	ldr	r0, [r7, #12]
 80036c2:	f000 f95e 	bl	8003982 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>
 80036c6:	bf00      	nop
 80036c8:	3710      	adds	r7, #16
 80036ca:	46bd      	mov	sp, r7
 80036cc:	bd80      	pop	{r7, pc}

080036ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>:
      _S_key(_Const_Link_type __x)
 80036ce:	b580      	push	{r7, lr}
 80036d0:	b084      	sub	sp, #16
 80036d2:	af00      	add	r7, sp, #0
 80036d4:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 80036d6:	6878      	ldr	r0, [r7, #4]
 80036d8:	f000 f95f 	bl	800399a <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 80036dc:	4602      	mov	r2, r0
 80036de:	f107 030c 	add.w	r3, r7, #12
 80036e2:	4611      	mov	r1, r2
 80036e4:	4618      	mov	r0, r3
 80036e6:	f7ff f9c5 	bl	8002a74 <_ZNKSt10_Select1stISt4pairIKc12double_tokenEEclERKS3_>
 80036ea:	4603      	mov	r3, r0
      }
 80036ec:	4618      	mov	r0, r3
 80036ee:	3710      	adds	r7, #16
 80036f0:	46bd      	mov	sp, r7
 80036f2:	bd80      	pop	{r7, pc}

080036f4 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80036f4:	b580      	push	{r7, lr}
 80036f6:	b084      	sub	sp, #16
 80036f8:	af00      	add	r7, sp, #0
 80036fa:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	68da      	ldr	r2, [r3, #12]
 8003700:	f107 030c 	add.w	r3, r7, #12
 8003704:	4611      	mov	r1, r2
 8003706:	4618      	mov	r0, r3
 8003708:	f7ff f882 	bl	8002810 <_ZNSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEEC1EPSt18_Rb_tree_node_base>
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	4618      	mov	r0, r3
 8003710:	3710      	adds	r7, #16
 8003712:	46bd      	mov	sp, r7
 8003714:	bd80      	pop	{r7, pc}

08003716 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8003716:	b480      	push	{r7}
 8003718:	b083      	sub	sp, #12
 800371a:	af00      	add	r7, sp, #0
 800371c:	6078      	str	r0, [r7, #4]
 800371e:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	681a      	ldr	r2, [r3, #0]
 8003724:	683b      	ldr	r3, [r7, #0]
 8003726:	681b      	ldr	r3, [r3, #0]
 8003728:	429a      	cmp	r2, r3
 800372a:	bf0c      	ite	eq
 800372c:	2301      	moveq	r3, #1
 800372e:	2300      	movne	r3, #0
 8003730:	b2db      	uxtb	r3, r3
 8003732:	4618      	mov	r0, r3
 8003734:	370c      	adds	r7, #12
 8003736:	46bd      	mov	sp, r7
 8003738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800373c:	4770      	bx	lr

0800373e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKc12double_tokenEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 800373e:	b580      	push	{r7, lr}
 8003740:	b084      	sub	sp, #16
 8003742:	af00      	add	r7, sp, #0
 8003744:	60f8      	str	r0, [r7, #12]
 8003746:	60b9      	str	r1, [r7, #8]
 8003748:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 800374a:	68b8      	ldr	r0, [r7, #8]
 800374c:	f000 f933 	bl	80039b6 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8003750:	4603      	mov	r3, r0
 8003752:	681a      	ldr	r2, [r3, #0]
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	601a      	str	r2, [r3, #0]
 8003758:	6878      	ldr	r0, [r7, #4]
 800375a:	f7ff fe76 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 800375e:	4603      	mov	r3, r0
 8003760:	681a      	ldr	r2, [r3, #0]
 8003762:	68fb      	ldr	r3, [r7, #12]
 8003764:	605a      	str	r2, [r3, #4]
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	4618      	mov	r0, r3
 800376a:	3710      	adds	r7, #16
 800376c:	46bd      	mov	sp, r7
 800376e:	bd80      	pop	{r7, pc}

08003770 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_create_nodeIJRKS3_EEEPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8003770:	b580      	push	{r7, lr}
 8003772:	b084      	sub	sp, #16
 8003774:	af00      	add	r7, sp, #0
 8003776:	6078      	str	r0, [r7, #4]
 8003778:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 800377a:	6878      	ldr	r0, [r7, #4]
 800377c:	f000 f926 	bl	80039cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>
 8003780:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8003782:	6838      	ldr	r0, [r7, #0]
 8003784:	f7ff f982 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003788:	4603      	mov	r3, r0
 800378a:	461a      	mov	r2, r3
 800378c:	68f9      	ldr	r1, [r7, #12]
 800378e:	6878      	ldr	r0, [r7, #4]
 8003790:	f000 f92d 	bl	80039ee <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>
	  return __tmp;
 8003794:	68fb      	ldr	r3, [r7, #12]
	}
 8003796:	4618      	mov	r0, r3
 8003798:	3710      	adds	r7, #16
 800379a:	46bd      	mov	sp, r7
 800379c:	bd80      	pop	{r7, pc}

0800379e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
 800379e:	b580      	push	{r7, lr}
 80037a0:	b082      	sub	sp, #8
 80037a2:	af00      	add	r7, sp, #0
 80037a4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 80037a6:	6878      	ldr	r0, [r7, #4]
 80037a8:	f000 f941 	bl	8003a2e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 80037ac:	4603      	mov	r3, r0
 80037ae:	4618      	mov	r0, r3
 80037b0:	3708      	adds	r7, #8
 80037b2:	46bd      	mov	sp, r7
 80037b4:	bd80      	pop	{r7, pc}

080037b6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE7destroyIS5_EEvPT_>:
			    _Up(std::forward<_Args>(__args)...)))
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p)
 80037b6:	b480      	push	{r7}
 80037b8:	b083      	sub	sp, #12
 80037ba:	af00      	add	r7, sp, #0
 80037bc:	6078      	str	r0, [r7, #4]
 80037be:	6039      	str	r1, [r7, #0]
	noexcept(noexcept( __p->~_Up()))
	{ __p->~_Up(); }
 80037c0:	bf00      	nop
 80037c2:	370c      	adds	r7, #12
 80037c4:	46bd      	mov	sp, r7
 80037c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037ca:	4770      	bx	lr

080037cc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 80037cc:	b580      	push	{r7, lr}
 80037ce:	b084      	sub	sp, #16
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	60f8      	str	r0, [r7, #12]
 80037d4:	60b9      	str	r1, [r7, #8]
 80037d6:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80037d8:	68b8      	ldr	r0, [r7, #8]
 80037da:	f01c fd02 	bl	80201e2 <_ZdlPv>
      }
 80037de:	3710      	adds	r7, #16
 80037e0:	46bd      	mov	sp, r7
 80037e2:	bd80      	pop	{r7, pc}

080037e4 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 80037e4:	b580      	push	{r7, lr}
 80037e6:	b082      	sub	sp, #8
 80037e8:	af00      	add	r7, sp, #0
 80037ea:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	3310      	adds	r3, #16
 80037f0:	4618      	mov	r0, r3
 80037f2:	f000 f927 	bl	8003a44 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>
 80037f6:	4603      	mov	r3, r0
 80037f8:	4618      	mov	r0, r3
 80037fa:	3708      	adds	r7, #8
 80037fc:	46bd      	mov	sp, r7
 80037fe:	bd80      	pop	{r7, pc}

08003800 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc10token_typeEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8003800:	b480      	push	{r7}
 8003802:	b083      	sub	sp, #12
 8003804:	af00      	add	r7, sp, #0
 8003806:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	4618      	mov	r0, r3
 800380c:	370c      	adds	r7, #12
 800380e:	46bd      	mov	sp, r7
 8003810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003814:	4770      	bx	lr

08003816 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 8003816:	b580      	push	{r7, lr}
 8003818:	b082      	sub	sp, #8
 800381a:	af00      	add	r7, sp, #0
 800381c:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 800381e:	6878      	ldr	r0, [r7, #4]
 8003820:	f7ff fdcb 	bl	80033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8003824:	4603      	mov	r3, r0
 8003826:	2101      	movs	r1, #1
 8003828:	4618      	mov	r0, r3
 800382a:	f000 f917 	bl	8003a5c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>
 800382e:	4603      	mov	r3, r0
 8003830:	4618      	mov	r0, r3
 8003832:	3708      	adds	r7, #8
 8003834:	46bd      	mov	sp, r7
 8003836:	bd80      	pop	{r7, pc}

08003838 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8003838:	b5b0      	push	{r4, r5, r7, lr}
 800383a:	b084      	sub	sp, #16
 800383c:	af00      	add	r7, sp, #0
 800383e:	60f8      	str	r0, [r7, #12]
 8003840:	60b9      	str	r1, [r7, #8]
 8003842:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8003844:	68bb      	ldr	r3, [r7, #8]
 8003846:	4619      	mov	r1, r3
 8003848:	2014      	movs	r0, #20
 800384a:	f7fd fbef 	bl	800102c <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 800384e:	68f8      	ldr	r0, [r7, #12]
 8003850:	f7ff fdb3 	bl	80033ba <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8003854:	4604      	mov	r4, r0
 8003856:	68b8      	ldr	r0, [r7, #8]
 8003858:	f7ff fdba 	bl	80033d0 <_ZNSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 800385c:	4605      	mov	r5, r0
 800385e:	6878      	ldr	r0, [r7, #4]
 8003860:	f7fe fd34 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003864:	4603      	mov	r3, r0
 8003866:	461a      	mov	r2, r3
 8003868:	4629      	mov	r1, r5
 800386a:	4620      	mov	r0, r4
 800386c:	f000 f905 	bl	8003a7a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 8003870:	bf00      	nop
 8003872:	3710      	adds	r7, #16
 8003874:	46bd      	mov	sp, r7
 8003876:	bdb0      	pop	{r4, r5, r7, pc}

08003878 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() noexcept
 8003878:	b580      	push	{r7, lr}
 800387a:	b082      	sub	sp, #8
 800387c:	af00      	add	r7, sp, #0
 800387e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8003880:	6878      	ldr	r0, [r7, #4]
 8003882:	f000 f90d 	bl	8003aa0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8003886:	4603      	mov	r3, r0
 8003888:	4618      	mov	r0, r3
 800388a:	3708      	adds	r7, #8
 800388c:	46bd      	mov	sp, r7
 800388e:	bd80      	pop	{r7, pc}

08003890 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 8003890:	b580      	push	{r7, lr}
 8003892:	b082      	sub	sp, #8
 8003894:	af00      	add	r7, sp, #0
 8003896:	6078      	str	r0, [r7, #4]
 8003898:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 800389a:	6838      	ldr	r0, [r7, #0]
 800389c:	f7fd fc19 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80038a0:	bf00      	nop
 80038a2:	3708      	adds	r7, #8
 80038a4:	46bd      	mov	sp, r7
 80038a6:	bd80      	pop	{r7, pc}

080038a8 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 80038a8:	b580      	push	{r7, lr}
 80038aa:	b084      	sub	sp, #16
 80038ac:	af00      	add	r7, sp, #0
 80038ae:	60f8      	str	r0, [r7, #12]
 80038b0:	60b9      	str	r1, [r7, #8]
 80038b2:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80038b4:	68b8      	ldr	r0, [r7, #8]
 80038b6:	f01c fc94 	bl	80201e2 <_ZdlPv>
      }
 80038ba:	3710      	adds	r7, #16
 80038bc:	46bd      	mov	sp, r7
 80038be:	bd80      	pop	{r7, pc}

080038c0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>:
      _M_valptr() const
 80038c0:	b580      	push	{r7, lr}
 80038c2:	b082      	sub	sp, #8
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	3310      	adds	r3, #16
 80038cc:	4618      	mov	r0, r3
 80038ce:	f000 f8f2 	bl	8003ab6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>
 80038d2:	4603      	mov	r3, r0
 80038d4:	4618      	mov	r0, r3
 80038d6:	3708      	adds	r7, #8
 80038d8:	46bd      	mov	sp, r7
 80038da:	bd80      	pop	{r7, pc}

080038dc <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80038dc:	b480      	push	{r7}
 80038de:	b083      	sub	sp, #12
 80038e0:	af00      	add	r7, sp, #0
 80038e2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	4618      	mov	r0, r3
 80038e8:	370c      	adds	r7, #12
 80038ea:	46bd      	mov	sp, r7
 80038ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038f0:	4770      	bx	lr

080038f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 80038f2:	b580      	push	{r7, lr}
 80038f4:	b082      	sub	sp, #8
 80038f6:	af00      	add	r7, sp, #0
 80038f8:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80038fa:	6878      	ldr	r0, [r7, #4]
 80038fc:	f7ff fe05 	bl	800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8003900:	4603      	mov	r3, r0
 8003902:	2101      	movs	r1, #1
 8003904:	4618      	mov	r0, r3
 8003906:	f000 f8e2 	bl	8003ace <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>
 800390a:	4603      	mov	r3, r0
 800390c:	4618      	mov	r0, r3
 800390e:	3708      	adds	r7, #8
 8003910:	46bd      	mov	sp, r7
 8003912:	bd80      	pop	{r7, pc}

08003914 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 8003914:	b5b0      	push	{r4, r5, r7, lr}
 8003916:	b084      	sub	sp, #16
 8003918:	af00      	add	r7, sp, #0
 800391a:	60f8      	str	r0, [r7, #12]
 800391c:	60b9      	str	r1, [r7, #8]
 800391e:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 8003920:	68bb      	ldr	r3, [r7, #8]
 8003922:	4619      	mov	r1, r3
 8003924:	202c      	movs	r0, #44	; 0x2c
 8003926:	f7fd fb81 	bl	800102c <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 800392a:	68f8      	ldr	r0, [r7, #12]
 800392c:	f7ff fded 	bl	800350a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8003930:	4604      	mov	r4, r0
 8003932:	68b8      	ldr	r0, [r7, #8]
 8003934:	f7ff fdf4 	bl	8003520 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8003938:	4605      	mov	r5, r0
 800393a:	6878      	ldr	r0, [r7, #4]
 800393c:	f7fe febc 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8003940:	4603      	mov	r3, r0
 8003942:	461a      	mov	r2, r3
 8003944:	4629      	mov	r1, r5
 8003946:	4620      	mov	r0, r4
 8003948:	f000 f8d0 	bl	8003aec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>
	}
 800394c:	bf00      	nop
 800394e:	3710      	adds	r7, #16
 8003950:	46bd      	mov	sp, r7
 8003952:	bdb0      	pop	{r4, r5, r7, pc}

08003954 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() noexcept
 8003954:	b580      	push	{r7, lr}
 8003956:	b082      	sub	sp, #8
 8003958:	af00      	add	r7, sp, #0
 800395a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800395c:	6878      	ldr	r0, [r7, #4]
 800395e:	f000 f8d8 	bl	8003b12 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8003962:	4603      	mov	r3, r0
 8003964:	4618      	mov	r0, r3
 8003966:	3708      	adds	r7, #8
 8003968:	46bd      	mov	sp, r7
 800396a:	bd80      	pop	{r7, pc}

0800396c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
 800396c:	b480      	push	{r7}
 800396e:	b083      	sub	sp, #12
 8003970:	af00      	add	r7, sp, #0
 8003972:	6078      	str	r0, [r7, #4]
 8003974:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8003976:	bf00      	nop
 8003978:	370c      	adds	r7, #12
 800397a:	46bd      	mov	sp, r7
 800397c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003980:	4770      	bx	lr

08003982 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 8003982:	b580      	push	{r7, lr}
 8003984:	b084      	sub	sp, #16
 8003986:	af00      	add	r7, sp, #0
 8003988:	60f8      	str	r0, [r7, #12]
 800398a:	60b9      	str	r1, [r7, #8]
 800398c:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800398e:	68b8      	ldr	r0, [r7, #8]
 8003990:	f01c fc27 	bl	80201e2 <_ZdlPv>
      }
 8003994:	3710      	adds	r7, #16
 8003996:	46bd      	mov	sp, r7
 8003998:	bd80      	pop	{r7, pc}

0800399a <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>:
      _M_valptr() const
 800399a:	b580      	push	{r7, lr}
 800399c:	b082      	sub	sp, #8
 800399e:	af00      	add	r7, sp, #0
 80039a0:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	3310      	adds	r3, #16
 80039a6:	4618      	mov	r0, r3
 80039a8:	f000 f8be 	bl	8003b28 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>
 80039ac:	4603      	mov	r3, r0
 80039ae:	4618      	mov	r0, r3
 80039b0:	3708      	adds	r7, #8
 80039b2:	46bd      	mov	sp, r7
 80039b4:	bd80      	pop	{r7, pc}

080039b6 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80039b6:	b480      	push	{r7}
 80039b8:	b083      	sub	sp, #12
 80039ba:	af00      	add	r7, sp, #0
 80039bc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80039be:	687b      	ldr	r3, [r7, #4]
 80039c0:	4618      	mov	r0, r3
 80039c2:	370c      	adds	r7, #12
 80039c4:	46bd      	mov	sp, r7
 80039c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ca:	4770      	bx	lr

080039cc <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE11_M_get_nodeEv>:
      _M_get_node()
 80039cc:	b580      	push	{r7, lr}
 80039ce:	b082      	sub	sp, #8
 80039d0:	af00      	add	r7, sp, #0
 80039d2:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80039d4:	6878      	ldr	r0, [r7, #4]
 80039d6:	f7ff fe45 	bl	8003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 80039da:	4603      	mov	r3, r0
 80039dc:	2101      	movs	r1, #1
 80039de:	4618      	mov	r0, r3
 80039e0:	f000 f8ae 	bl	8003b40 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>
 80039e4:	4603      	mov	r3, r0
 80039e6:	4618      	mov	r0, r3
 80039e8:	3708      	adds	r7, #8
 80039ea:	46bd      	mov	sp, r7
 80039ec:	bd80      	pop	{r7, pc}

080039ee <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE17_M_construct_nodeIJRKS3_EEEvPSt13_Rb_tree_nodeIS3_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80039ee:	b5b0      	push	{r4, r5, r7, lr}
 80039f0:	b084      	sub	sp, #16
 80039f2:	af00      	add	r7, sp, #0
 80039f4:	60f8      	str	r0, [r7, #12]
 80039f6:	60b9      	str	r1, [r7, #8]
 80039f8:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 80039fa:	68bb      	ldr	r3, [r7, #8]
 80039fc:	4619      	mov	r1, r3
 80039fe:	2014      	movs	r0, #20
 8003a00:	f7fd fb14 	bl	800102c <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8003a04:	68f8      	ldr	r0, [r7, #12]
 8003a06:	f7ff fe2d 	bl	8003664 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE21_M_get_Node_allocatorEv>
 8003a0a:	4604      	mov	r4, r0
 8003a0c:	68b8      	ldr	r0, [r7, #8]
 8003a0e:	f7ff fe34 	bl	800367a <_ZNSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8003a12:	4605      	mov	r5, r0
 8003a14:	6878      	ldr	r0, [r7, #4]
 8003a16:	f7ff f839 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003a1a:	4603      	mov	r3, r0
 8003a1c:	461a      	mov	r2, r3
 8003a1e:	4629      	mov	r1, r5
 8003a20:	4620      	mov	r0, r4
 8003a22:	f000 f89c 	bl	8003b5e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>
	}
 8003a26:	bf00      	nop
 8003a28:	3710      	adds	r7, #16
 8003a2a:	46bd      	mov	sp, r7
 8003a2c:	bdb0      	pop	{r4, r5, r7, pc}

08003a2e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8003a2e:	b480      	push	{r7}
 8003a30:	b083      	sub	sp, #12
 8003a32:	af00      	add	r7, sp, #0
 8003a34:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8003a36:	687b      	ldr	r3, [r7, #4]
 8003a38:	4618      	mov	r0, r3
 8003a3a:	370c      	adds	r7, #12
 8003a3c:	46bd      	mov	sp, r7
 8003a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a42:	4770      	bx	lr

08003a44 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
 8003a44:	b580      	push	{r7, lr}
 8003a46:	b082      	sub	sp, #8
 8003a48:	af00      	add	r7, sp, #0
 8003a4a:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8003a4c:	6878      	ldr	r0, [r7, #4]
 8003a4e:	f000 f899 	bl	8003b84 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>
 8003a52:	4603      	mov	r3, r0
 8003a54:	4618      	mov	r0, r3
 8003a56:	3708      	adds	r7, #8
 8003a58:	46bd      	mov	sp, r7
 8003a5a:	bd80      	pop	{r7, pc}

08003a5c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8003a5c:	b580      	push	{r7, lr}
 8003a5e:	b082      	sub	sp, #8
 8003a60:	af00      	add	r7, sp, #0
 8003a62:	6078      	str	r0, [r7, #4]
 8003a64:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8003a66:	2200      	movs	r2, #0
 8003a68:	6839      	ldr	r1, [r7, #0]
 8003a6a:	6878      	ldr	r0, [r7, #4]
 8003a6c:	f000 f895 	bl	8003b9a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>
 8003a70:	4603      	mov	r3, r0
 8003a72:	4618      	mov	r0, r3
 8003a74:	3708      	adds	r7, #8
 8003a76:	46bd      	mov	sp, r7
 8003a78:	bd80      	pop	{r7, pc}

08003a7a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc10token_typeEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8003a7a:	b580      	push	{r7, lr}
 8003a7c:	b084      	sub	sp, #16
 8003a7e:	af00      	add	r7, sp, #0
 8003a80:	60f8      	str	r0, [r7, #12]
 8003a82:	60b9      	str	r1, [r7, #8]
 8003a84:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8003a86:	6878      	ldr	r0, [r7, #4]
 8003a88:	f7fe fc20 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003a8c:	4603      	mov	r3, r0
 8003a8e:	461a      	mov	r2, r3
 8003a90:	68b9      	ldr	r1, [r7, #8]
 8003a92:	68f8      	ldr	r0, [r7, #12]
 8003a94:	f000 f8a3 	bl	8003bde <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 8003a98:	bf00      	nop
 8003a9a:	3710      	adds	r7, #16
 8003a9c:	46bd      	mov	sp, r7
 8003a9e:	bd80      	pop	{r7, pc}

08003aa0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() noexcept
 8003aa0:	b480      	push	{r7}
 8003aa2:	b083      	sub	sp, #12
 8003aa4:	af00      	add	r7, sp, #0
 8003aa6:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	4618      	mov	r0, r3
 8003aac:	370c      	adds	r7, #12
 8003aae:	46bd      	mov	sp, r7
 8003ab0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ab4:	4770      	bx	lr

08003ab6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8003ab6:	b580      	push	{r7, lr}
 8003ab8:	b082      	sub	sp, #8
 8003aba:	af00      	add	r7, sp, #0
 8003abc:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8003abe:	6878      	ldr	r0, [r7, #4]
 8003ac0:	f000 f8a5 	bl	8003c0e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>
 8003ac4:	4603      	mov	r3, r0
 8003ac6:	4618      	mov	r0, r3
 8003ac8:	3708      	adds	r7, #8
 8003aca:	46bd      	mov	sp, r7
 8003acc:	bd80      	pop	{r7, pc}

08003ace <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 8003ace:	b580      	push	{r7, lr}
 8003ad0:	b082      	sub	sp, #8
 8003ad2:	af00      	add	r7, sp, #0
 8003ad4:	6078      	str	r0, [r7, #4]
 8003ad6:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8003ad8:	2200      	movs	r2, #0
 8003ada:	6839      	ldr	r1, [r7, #0]
 8003adc:	6878      	ldr	r0, [r7, #4]
 8003ade:	f000 f8a1 	bl	8003c24 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>
 8003ae2:	4603      	mov	r3, r0
 8003ae4:	4618      	mov	r0, r3
 8003ae6:	3708      	adds	r7, #8
 8003ae8:	46bd      	mov	sp, r7
 8003aea:	bd80      	pop	{r7, pc}

08003aec <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEEE9constructISA_JRKSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8003aec:	b580      	push	{r7, lr}
 8003aee:	b084      	sub	sp, #16
 8003af0:	af00      	add	r7, sp, #0
 8003af2:	60f8      	str	r0, [r7, #12]
 8003af4:	60b9      	str	r1, [r7, #8]
 8003af6:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8003af8:	6878      	ldr	r0, [r7, #4]
 8003afa:	f7fe fddd 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8003afe:	4603      	mov	r3, r0
 8003b00:	461a      	mov	r2, r3
 8003b02:	68b9      	ldr	r1, [r7, #8]
 8003b04:	68f8      	ldr	r0, [r7, #12]
 8003b06:	f000 f8c2 	bl	8003c8e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>
 8003b0a:	bf00      	nop
 8003b0c:	3710      	adds	r7, #16
 8003b0e:	46bd      	mov	sp, r7
 8003b10:	bd80      	pop	{r7, pc}

08003b12 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() noexcept
 8003b12:	b480      	push	{r7}
 8003b14:	b083      	sub	sp, #12
 8003b16:	af00      	add	r7, sp, #0
 8003b18:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	4618      	mov	r0, r3
 8003b1e:	370c      	adds	r7, #12
 8003b20:	46bd      	mov	sp, r7
 8003b22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b26:	4770      	bx	lr

08003b28 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8003b28:	b580      	push	{r7, lr}
 8003b2a:	b082      	sub	sp, #8
 8003b2c:	af00      	add	r7, sp, #0
 8003b2e:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8003b30:	6878      	ldr	r0, [r7, #4]
 8003b32:	f000 f8c4 	bl	8003cbe <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>
 8003b36:	4603      	mov	r3, r0
 8003b38:	4618      	mov	r0, r3
 8003b3a:	3708      	adds	r7, #8
 8003b3c:	46bd      	mov	sp, r7
 8003b3e:	bd80      	pop	{r7, pc}

08003b40 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 8003b40:	b580      	push	{r7, lr}
 8003b42:	b082      	sub	sp, #8
 8003b44:	af00      	add	r7, sp, #0
 8003b46:	6078      	str	r0, [r7, #4]
 8003b48:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8003b4a:	2200      	movs	r2, #0
 8003b4c:	6839      	ldr	r1, [r7, #0]
 8003b4e:	6878      	ldr	r0, [r7, #4]
 8003b50:	f000 f8c0 	bl	8003cd4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>
 8003b54:	4603      	mov	r3, r0
 8003b56:	4618      	mov	r0, r3
 8003b58:	3708      	adds	r7, #8
 8003b5a:	46bd      	mov	sp, r7
 8003b5c:	bd80      	pop	{r7, pc}

08003b5e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEEE9constructIS4_JRKS4_EEEvRS6_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8003b5e:	b580      	push	{r7, lr}
 8003b60:	b084      	sub	sp, #16
 8003b62:	af00      	add	r7, sp, #0
 8003b64:	60f8      	str	r0, [r7, #12]
 8003b66:	60b9      	str	r1, [r7, #8]
 8003b68:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8003b6a:	6878      	ldr	r0, [r7, #4]
 8003b6c:	f7fe ff8e 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003b70:	4603      	mov	r3, r0
 8003b72:	461a      	mov	r2, r3
 8003b74:	68b9      	ldr	r1, [r7, #8]
 8003b76:	68f8      	ldr	r0, [r7, #12]
 8003b78:	f000 f8ce 	bl	8003d18 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>
 8003b7c:	bf00      	nop
 8003b7e:	3710      	adds	r7, #16
 8003b80:	46bd      	mov	sp, r7
 8003b82:	bd80      	pop	{r7, pc}

08003b84 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8003b84:	b480      	push	{r7}
 8003b86:	b083      	sub	sp, #12
 8003b88:	af00      	add	r7, sp, #0
 8003b8a:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	4618      	mov	r0, r3
 8003b90:	370c      	adds	r7, #12
 8003b92:	46bd      	mov	sp, r7
 8003b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b98:	4770      	bx	lr

08003b9a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8003b9a:	b580      	push	{r7, lr}
 8003b9c:	b084      	sub	sp, #16
 8003b9e:	af00      	add	r7, sp, #0
 8003ba0:	60f8      	str	r0, [r7, #12]
 8003ba2:	60b9      	str	r1, [r7, #8]
 8003ba4:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8003ba6:	68f8      	ldr	r0, [r7, #12]
 8003ba8:	f000 f8d0 	bl	8003d4c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>
 8003bac:	4602      	mov	r2, r0
 8003bae:	68bb      	ldr	r3, [r7, #8]
 8003bb0:	4293      	cmp	r3, r2
 8003bb2:	bf8c      	ite	hi
 8003bb4:	2301      	movhi	r3, #1
 8003bb6:	2300      	movls	r3, #0
 8003bb8:	b2db      	uxtb	r3, r3
 8003bba:	2b00      	cmp	r3, #0
 8003bbc:	d001      	beq.n	8003bc2 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8003bbe:	f01c fbe8 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8003bc2:	68ba      	ldr	r2, [r7, #8]
 8003bc4:	4613      	mov	r3, r2
 8003bc6:	009b      	lsls	r3, r3, #2
 8003bc8:	4413      	add	r3, r2
 8003bca:	009b      	lsls	r3, r3, #2
 8003bcc:	4618      	mov	r0, r3
 8003bce:	f01c fb1b 	bl	8020208 <_Znwj>
 8003bd2:	4603      	mov	r3, r0
 8003bd4:	bf00      	nop
      }
 8003bd6:	4618      	mov	r0, r3
 8003bd8:	3710      	adds	r7, #16
 8003bda:	46bd      	mov	sp, r7
 8003bdc:	bd80      	pop	{r7, pc}

08003bde <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8003bde:	b590      	push	{r4, r7, lr}
 8003be0:	b085      	sub	sp, #20
 8003be2:	af00      	add	r7, sp, #0
 8003be4:	60f8      	str	r0, [r7, #12]
 8003be6:	60b9      	str	r1, [r7, #8]
 8003be8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8003bea:	6878      	ldr	r0, [r7, #4]
 8003bec:	f7fe fb6e 	bl	80022cc <_ZSt7forwardIRKSt4pairIKc10token_typeEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003bf0:	4604      	mov	r4, r0
 8003bf2:	68bb      	ldr	r3, [r7, #8]
 8003bf4:	4619      	mov	r1, r3
 8003bf6:	2002      	movs	r0, #2
 8003bf8:	f7fd fa18 	bl	800102c <_ZnwjPv>
 8003bfc:	4603      	mov	r3, r0
 8003bfe:	461a      	mov	r2, r3
 8003c00:	4623      	mov	r3, r4
 8003c02:	881b      	ldrh	r3, [r3, #0]
 8003c04:	8013      	strh	r3, [r2, #0]
 8003c06:	bf00      	nop
 8003c08:	3714      	adds	r7, #20
 8003c0a:	46bd      	mov	sp, r7
 8003c0c:	bd90      	pop	{r4, r7, pc}

08003c0e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE7_M_addrEv>:
      _M_addr() const noexcept
 8003c0e:	b480      	push	{r7}
 8003c10:	b083      	sub	sp, #12
 8003c12:	af00      	add	r7, sp, #0
 8003c14:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	4618      	mov	r0, r3
 8003c1a:	370c      	adds	r7, #12
 8003c1c:	46bd      	mov	sp, r7
 8003c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c22:	4770      	bx	lr

08003c24 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8003c24:	b580      	push	{r7, lr}
 8003c26:	b084      	sub	sp, #16
 8003c28:	af00      	add	r7, sp, #0
 8003c2a:	60f8      	str	r0, [r7, #12]
 8003c2c:	60b9      	str	r1, [r7, #8]
 8003c2e:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8003c30:	68f8      	ldr	r0, [r7, #12]
 8003c32:	f000 f899 	bl	8003d68 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>
 8003c36:	4602      	mov	r2, r0
 8003c38:	68bb      	ldr	r3, [r7, #8]
 8003c3a:	4293      	cmp	r3, r2
 8003c3c:	bf8c      	ite	hi
 8003c3e:	2301      	movhi	r3, #1
 8003c40:	2300      	movls	r3, #0
 8003c42:	b2db      	uxtb	r3, r3
 8003c44:	2b00      	cmp	r3, #0
 8003c46:	d001      	beq.n	8003c4c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8003c48:	f01c fba3 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8003c4c:	68bb      	ldr	r3, [r7, #8]
 8003c4e:	222c      	movs	r2, #44	; 0x2c
 8003c50:	fb02 f303 	mul.w	r3, r2, r3
 8003c54:	4618      	mov	r0, r3
 8003c56:	f01c fad7 	bl	8020208 <_Znwj>
 8003c5a:	4603      	mov	r3, r0
 8003c5c:	bf00      	nop
      }
 8003c5e:	4618      	mov	r0, r3
 8003c60:	3710      	adds	r7, #16
 8003c62:	46bd      	mov	sp, r7
 8003c64:	bd80      	pop	{r7, pc}

08003c66 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>:
      constexpr pair(const pair&) = default;
 8003c66:	b580      	push	{r7, lr}
 8003c68:	b082      	sub	sp, #8
 8003c6a:	af00      	add	r7, sp, #0
 8003c6c:	6078      	str	r0, [r7, #4]
 8003c6e:	6039      	str	r1, [r7, #0]
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	683a      	ldr	r2, [r7, #0]
 8003c74:	4611      	mov	r1, r2
 8003c76:	4618      	mov	r0, r3
 8003c78:	f01c fdca 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8003c7c:	683b      	ldr	r3, [r7, #0]
 8003c7e:	7e1a      	ldrb	r2, [r3, #24]
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	761a      	strb	r2, [r3, #24]
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	4618      	mov	r0, r3
 8003c88:	3708      	adds	r7, #8
 8003c8a:	46bd      	mov	sp, r7
 8003c8c:	bd80      	pop	{r7, pc}

08003c8e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE9constructISB_JRKSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8003c8e:	b590      	push	{r4, r7, lr}
 8003c90:	b085      	sub	sp, #20
 8003c92:	af00      	add	r7, sp, #0
 8003c94:	60f8      	str	r0, [r7, #12]
 8003c96:	60b9      	str	r1, [r7, #8]
 8003c98:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8003c9a:	6878      	ldr	r0, [r7, #4]
 8003c9c:	f7fe fd0c 	bl	80026b8 <_ZSt7forwardIRKSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEOT_RNSt16remove_referenceISC_E4typeE>
 8003ca0:	4604      	mov	r4, r0
 8003ca2:	68bb      	ldr	r3, [r7, #8]
 8003ca4:	4619      	mov	r1, r3
 8003ca6:	201c      	movs	r0, #28
 8003ca8:	f7fd f9c0 	bl	800102c <_ZnwjPv>
 8003cac:	4603      	mov	r3, r0
 8003cae:	4621      	mov	r1, r4
 8003cb0:	4618      	mov	r0, r3
 8003cb2:	f7ff ffd8 	bl	8003c66 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1ERKS8_>
 8003cb6:	bf00      	nop
 8003cb8:	3714      	adds	r7, #20
 8003cba:	46bd      	mov	sp, r7
 8003cbc:	bd90      	pop	{r4, r7, pc}

08003cbe <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKc12double_tokenEE7_M_addrEv>:
      _M_addr() const noexcept
 8003cbe:	b480      	push	{r7}
 8003cc0:	b083      	sub	sp, #12
 8003cc2:	af00      	add	r7, sp, #0
 8003cc4:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	4618      	mov	r0, r3
 8003cca:	370c      	adds	r7, #12
 8003ccc:	46bd      	mov	sp, r7
 8003cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cd2:	4770      	bx	lr

08003cd4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8003cd4:	b580      	push	{r7, lr}
 8003cd6:	b084      	sub	sp, #16
 8003cd8:	af00      	add	r7, sp, #0
 8003cda:	60f8      	str	r0, [r7, #12]
 8003cdc:	60b9      	str	r1, [r7, #8]
 8003cde:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8003ce0:	68f8      	ldr	r0, [r7, #12]
 8003ce2:	f000 f84f 	bl	8003d84 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>
 8003ce6:	4602      	mov	r2, r0
 8003ce8:	68bb      	ldr	r3, [r7, #8]
 8003cea:	4293      	cmp	r3, r2
 8003cec:	bf8c      	ite	hi
 8003cee:	2301      	movhi	r3, #1
 8003cf0:	2300      	movls	r3, #0
 8003cf2:	b2db      	uxtb	r3, r3
 8003cf4:	2b00      	cmp	r3, #0
 8003cf6:	d001      	beq.n	8003cfc <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8003cf8:	f01c fb4b 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8003cfc:	68ba      	ldr	r2, [r7, #8]
 8003cfe:	4613      	mov	r3, r2
 8003d00:	009b      	lsls	r3, r3, #2
 8003d02:	4413      	add	r3, r2
 8003d04:	009b      	lsls	r3, r3, #2
 8003d06:	4618      	mov	r0, r3
 8003d08:	f01c fa7e 	bl	8020208 <_Znwj>
 8003d0c:	4603      	mov	r3, r0
 8003d0e:	bf00      	nop
      }
 8003d10:	4618      	mov	r0, r3
 8003d12:	3710      	adds	r7, #16
 8003d14:	46bd      	mov	sp, r7
 8003d16:	bd80      	pop	{r7, pc}

08003d18 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE9constructIS5_JRKS5_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8003d18:	b590      	push	{r4, r7, lr}
 8003d1a:	b085      	sub	sp, #20
 8003d1c:	af00      	add	r7, sp, #0
 8003d1e:	60f8      	str	r0, [r7, #12]
 8003d20:	60b9      	str	r1, [r7, #8]
 8003d22:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8003d24:	6878      	ldr	r0, [r7, #4]
 8003d26:	f7fe feb1 	bl	8002a8c <_ZSt7forwardIRKSt4pairIKc12double_tokenEEOT_RNSt16remove_referenceIS6_E4typeE>
 8003d2a:	4604      	mov	r4, r0
 8003d2c:	68bb      	ldr	r3, [r7, #8]
 8003d2e:	4619      	mov	r1, r3
 8003d30:	2003      	movs	r0, #3
 8003d32:	f7fd f97b 	bl	800102c <_ZnwjPv>
 8003d36:	4603      	mov	r3, r0
 8003d38:	4622      	mov	r2, r4
 8003d3a:	8811      	ldrh	r1, [r2, #0]
 8003d3c:	7892      	ldrb	r2, [r2, #2]
 8003d3e:	8019      	strh	r1, [r3, #0]
 8003d40:	709a      	strb	r2, [r3, #2]
 8003d42:	bf00      	nop
 8003d44:	3714      	adds	r7, #20
 8003d46:	46bd      	mov	sp, r7
 8003d48:	bd90      	pop	{r4, r7, pc}
	...

08003d4c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8003d4c:	b480      	push	{r7}
 8003d4e:	b083      	sub	sp, #12
 8003d50:	af00      	add	r7, sp, #0
 8003d52:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8003d54:	4b03      	ldr	r3, [pc, #12]	; (8003d64 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc10token_typeEEE8max_sizeEv+0x18>)
      }
 8003d56:	4618      	mov	r0, r3
 8003d58:	370c      	adds	r7, #12
 8003d5a:	46bd      	mov	sp, r7
 8003d5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d60:	4770      	bx	lr
 8003d62:	bf00      	nop
 8003d64:	06666666 	.word	0x06666666

08003d68 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8003d68:	b480      	push	{r7}
 8003d6a:	b083      	sub	sp, #12
 8003d6c:	af00      	add	r7, sp, #0
 8003d6e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8003d70:	4b03      	ldr	r3, [pc, #12]	; (8003d80 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEE8max_sizeEv+0x18>)
      }
 8003d72:	4618      	mov	r0, r3
 8003d74:	370c      	adds	r7, #12
 8003d76:	46bd      	mov	sp, r7
 8003d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d7c:	4770      	bx	lr
 8003d7e:	bf00      	nop
 8003d80:	02e8ba2e 	.word	0x02e8ba2e

08003d84 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8003d84:	b480      	push	{r7}
 8003d86:	b083      	sub	sp, #12
 8003d88:	af00      	add	r7, sp, #0
 8003d8a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8003d8c:	4b03      	ldr	r3, [pc, #12]	; (8003d9c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKc12double_tokenEEE8max_sizeEv+0x18>)
      }
 8003d8e:	4618      	mov	r0, r3
 8003d90:	370c      	adds	r7, #12
 8003d92:	46bd      	mov	sp, r7
 8003d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d98:	4770      	bx	lr
 8003d9a:	bf00      	nop
 8003d9c:	06666666 	.word	0x06666666

08003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
 8003da0:	b580      	push	{r7, lr}
 8003da2:	b082      	sub	sp, #8
 8003da4:	af00      	add	r7, sp, #0
 8003da6:	6078      	str	r0, [r7, #4]
 8003da8:	687b      	ldr	r3, [r7, #4]
 8003daa:	4618      	mov	r0, r3
 8003dac:	f7fd fd89 	bl	80018c2 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	4618      	mov	r0, r3
 8003db4:	3708      	adds	r7, #8
 8003db6:	46bd      	mov	sp, r7
 8003db8:	bd80      	pop	{r7, pc}

08003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
 8003dba:	b580      	push	{r7, lr}
 8003dbc:	b082      	sub	sp, #8
 8003dbe:	af00      	add	r7, sp, #0
 8003dc0:	6078      	str	r0, [r7, #4]
 8003dc2:	687b      	ldr	r3, [r7, #4]
 8003dc4:	4618      	mov	r0, r3
 8003dc6:	f7fd fccc 	bl	8001762 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	4618      	mov	r0, r3
 8003dce:	3708      	adds	r7, #8
 8003dd0:	46bd      	mov	sp, r7
 8003dd2:	bd80      	pop	{r7, pc}

08003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>:
 8003dd4:	b580      	push	{r7, lr}
 8003dd6:	b082      	sub	sp, #8
 8003dd8:	af00      	add	r7, sp, #0
 8003dda:	6078      	str	r0, [r7, #4]
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	4618      	mov	r0, r3
 8003de0:	f7fd fc12 	bl	8001608 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EED1Ev>
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	4618      	mov	r0, r3
 8003de8:	3708      	adds	r7, #8
 8003dea:	46bd      	mov	sp, r7
 8003dec:	bd80      	pop	{r7, pc}
	...

08003df0 <_Z41__static_initialization_and_destruction_0ii>:
#include <Executor.h>

void Executor::execute(Program p)
{

}
 8003df0:	b590      	push	{r4, r7, lr}
 8003df2:	b0e7      	sub	sp, #412	; 0x19c
 8003df4:	af02      	add	r7, sp, #8
 8003df6:	1d3b      	adds	r3, r7, #4
 8003df8:	6018      	str	r0, [r3, #0]
 8003dfa:	463b      	mov	r3, r7
 8003dfc:	6019      	str	r1, [r3, #0]
 8003dfe:	1d3b      	adds	r3, r7, #4
 8003e00:	681b      	ldr	r3, [r3, #0]
 8003e02:	2b01      	cmp	r3, #1
 8003e04:	f040 819d 	bne.w	8004142 <_Z41__static_initialization_and_destruction_0ii+0x352>
 8003e08:	463b      	mov	r3, r7
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003e10:	4293      	cmp	r3, r2
 8003e12:	f040 8196 	bne.w	8004142 <_Z41__static_initialization_and_destruction_0ii+0x352>
	{'^', TOKEN_POWER},
	{'%', TOKEN_MODULO},
	{'(', TOKEN_LEFT_BRACKET},
	{')', TOKEN_RIGHT_BRACKET},
	{'\0', TOKEN_END_OF_FILE},
};
 8003e16:	f107 0314 	add.w	r3, r7, #20
 8003e1a:	4618      	mov	r0, r3
 8003e1c:	2322      	movs	r3, #34	; 0x22
 8003e1e:	461a      	mov	r2, r3
 8003e20:	2100      	movs	r1, #0
 8003e22:	f01d fd73 	bl	802190c <memset>
 8003e26:	f107 0314 	add.w	r3, r7, #20
 8003e2a:	223a      	movs	r2, #58	; 0x3a
 8003e2c:	701a      	strb	r2, [r3, #0]
 8003e2e:	f107 0314 	add.w	r3, r7, #20
 8003e32:	2201      	movs	r2, #1
 8003e34:	705a      	strb	r2, [r3, #1]
 8003e36:	f107 0314 	add.w	r3, r7, #20
 8003e3a:	220a      	movs	r2, #10
 8003e3c:	709a      	strb	r2, [r3, #2]
 8003e3e:	f107 0314 	add.w	r3, r7, #20
 8003e42:	220a      	movs	r2, #10
 8003e44:	70da      	strb	r2, [r3, #3]
 8003e46:	f107 0314 	add.w	r3, r7, #20
 8003e4a:	222c      	movs	r2, #44	; 0x2c
 8003e4c:	711a      	strb	r2, [r3, #4]
 8003e4e:	f107 0314 	add.w	r3, r7, #20
 8003e52:	220c      	movs	r2, #12
 8003e54:	715a      	strb	r2, [r3, #5]
 8003e56:	f107 0314 	add.w	r3, r7, #20
 8003e5a:	222e      	movs	r2, #46	; 0x2e
 8003e5c:	719a      	strb	r2, [r3, #6]
 8003e5e:	f107 0314 	add.w	r3, r7, #20
 8003e62:	220b      	movs	r2, #11
 8003e64:	71da      	strb	r2, [r3, #7]
 8003e66:	f107 0314 	add.w	r3, r7, #20
 8003e6a:	225b      	movs	r2, #91	; 0x5b
 8003e6c:	721a      	strb	r2, [r3, #8]
 8003e6e:	f107 0314 	add.w	r3, r7, #20
 8003e72:	220d      	movs	r2, #13
 8003e74:	725a      	strb	r2, [r3, #9]
 8003e76:	f107 0314 	add.w	r3, r7, #20
 8003e7a:	225d      	movs	r2, #93	; 0x5d
 8003e7c:	729a      	strb	r2, [r3, #10]
 8003e7e:	f107 0314 	add.w	r3, r7, #20
 8003e82:	220e      	movs	r2, #14
 8003e84:	72da      	strb	r2, [r3, #11]
 8003e86:	f107 0314 	add.w	r3, r7, #20
 8003e8a:	227c      	movs	r2, #124	; 0x7c
 8003e8c:	731a      	strb	r2, [r3, #12]
 8003e8e:	f107 0314 	add.w	r3, r7, #20
 8003e92:	2215      	movs	r2, #21
 8003e94:	735a      	strb	r2, [r3, #13]
 8003e96:	f107 0314 	add.w	r3, r7, #20
 8003e9a:	2226      	movs	r2, #38	; 0x26
 8003e9c:	739a      	strb	r2, [r3, #14]
 8003e9e:	f107 0314 	add.w	r3, r7, #20
 8003ea2:	2216      	movs	r2, #22
 8003ea4:	73da      	strb	r2, [r3, #15]
 8003ea6:	f107 0314 	add.w	r3, r7, #20
 8003eaa:	222b      	movs	r2, #43	; 0x2b
 8003eac:	741a      	strb	r2, [r3, #16]
 8003eae:	f107 0314 	add.w	r3, r7, #20
 8003eb2:	221f      	movs	r2, #31
 8003eb4:	745a      	strb	r2, [r3, #17]
 8003eb6:	f107 0314 	add.w	r3, r7, #20
 8003eba:	222d      	movs	r2, #45	; 0x2d
 8003ebc:	749a      	strb	r2, [r3, #18]
 8003ebe:	f107 0314 	add.w	r3, r7, #20
 8003ec2:	2220      	movs	r2, #32
 8003ec4:	74da      	strb	r2, [r3, #19]
 8003ec6:	f107 0314 	add.w	r3, r7, #20
 8003eca:	222a      	movs	r2, #42	; 0x2a
 8003ecc:	751a      	strb	r2, [r3, #20]
 8003ece:	f107 0314 	add.w	r3, r7, #20
 8003ed2:	2221      	movs	r2, #33	; 0x21
 8003ed4:	755a      	strb	r2, [r3, #21]
 8003ed6:	f107 0314 	add.w	r3, r7, #20
 8003eda:	222f      	movs	r2, #47	; 0x2f
 8003edc:	759a      	strb	r2, [r3, #22]
 8003ede:	f107 0314 	add.w	r3, r7, #20
 8003ee2:	2222      	movs	r2, #34	; 0x22
 8003ee4:	75da      	strb	r2, [r3, #23]
 8003ee6:	f107 0314 	add.w	r3, r7, #20
 8003eea:	225e      	movs	r2, #94	; 0x5e
 8003eec:	761a      	strb	r2, [r3, #24]
 8003eee:	f107 0314 	add.w	r3, r7, #20
 8003ef2:	2223      	movs	r2, #35	; 0x23
 8003ef4:	765a      	strb	r2, [r3, #25]
 8003ef6:	f107 0314 	add.w	r3, r7, #20
 8003efa:	2225      	movs	r2, #37	; 0x25
 8003efc:	769a      	strb	r2, [r3, #26]
 8003efe:	f107 0314 	add.w	r3, r7, #20
 8003f02:	2224      	movs	r2, #36	; 0x24
 8003f04:	76da      	strb	r2, [r3, #27]
 8003f06:	f107 0314 	add.w	r3, r7, #20
 8003f0a:	2228      	movs	r2, #40	; 0x28
 8003f0c:	771a      	strb	r2, [r3, #28]
 8003f0e:	f107 0314 	add.w	r3, r7, #20
 8003f12:	2226      	movs	r2, #38	; 0x26
 8003f14:	775a      	strb	r2, [r3, #29]
 8003f16:	f107 0314 	add.w	r3, r7, #20
 8003f1a:	2229      	movs	r2, #41	; 0x29
 8003f1c:	779a      	strb	r2, [r3, #30]
 8003f1e:	f107 0314 	add.w	r3, r7, #20
 8003f22:	2227      	movs	r2, #39	; 0x27
 8003f24:	77da      	strb	r2, [r3, #31]
 8003f26:	f107 0314 	add.w	r3, r7, #20
 8003f2a:	2225      	movs	r2, #37	; 0x25
 8003f2c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8003f30:	f107 030c 	add.w	r3, r7, #12
 8003f34:	f107 0214 	add.w	r2, r7, #20
 8003f38:	601a      	str	r2, [r3, #0]
 8003f3a:	f107 030c 	add.w	r3, r7, #12
 8003f3e:	2211      	movs	r2, #17
 8003f40:	605a      	str	r2, [r3, #4]
 8003f42:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8003f46:	4618      	mov	r0, r3
 8003f48:	f7fd f9cc 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8003f4c:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8003f50:	f107 020c 	add.w	r2, r7, #12
 8003f54:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8003f58:	9300      	str	r3, [sp, #0]
 8003f5a:	460b      	mov	r3, r1
 8003f5c:	ca06      	ldmia	r2, {r1, r2}
 8003f5e:	4885      	ldr	r0, [pc, #532]	; (8004174 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8003f60:	f7fd f9d8 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8003f64:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8003f68:	4618      	mov	r0, r3
 8003f6a:	f7fd f9c7 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>

static const std::map<std::string, token_type> token_strings
{
	{"true", TOKEN_TRUE},
 8003f6e:	2305      	movs	r3, #5
 8003f70:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
	{"if", TOKEN_IF},
	{"elseif", TOKEN_ELSEIF},
	{"else", TOKEN_ELSE},
	{"while", TOKEN_WHILE},
	{"end", TOKEN_END},
};
 8003f74:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8003f78:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003f7c:	497e      	ldr	r1, [pc, #504]	; (8004178 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8003f7e:	4618      	mov	r0, r3
 8003f80:	f7fd f8b4 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8003f84:	2306      	movs	r3, #6
 8003f86:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8003f8a:	f207 1263 	addw	r2, r7, #355	; 0x163
 8003f8e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003f92:	331c      	adds	r3, #28
 8003f94:	4979      	ldr	r1, [pc, #484]	; (800417c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8003f96:	4618      	mov	r0, r3
 8003f98:	f7fd f8d0 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8003f9c:	2307      	movs	r3, #7
 8003f9e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8003fa2:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8003fa6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003faa:	3338      	adds	r3, #56	; 0x38
 8003fac:	4974      	ldr	r1, [pc, #464]	; (8004180 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8003fae:	4618      	mov	r0, r3
 8003fb0:	f7fd f8c4 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8003fb4:	2308      	movs	r3, #8
 8003fb6:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8003fba:	f207 1265 	addw	r2, r7, #357	; 0x165
 8003fbe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003fc2:	3354      	adds	r3, #84	; 0x54
 8003fc4:	496f      	ldr	r1, [pc, #444]	; (8004184 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8003fc6:	4618      	mov	r0, r3
 8003fc8:	f7fd f890 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8003fcc:	2309      	movs	r3, #9
 8003fce:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8003fd2:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8003fd6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003fda:	3370      	adds	r3, #112	; 0x70
 8003fdc:	496a      	ldr	r1, [pc, #424]	; (8004188 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8003fde:	4618      	mov	r0, r3
 8003fe0:	f7fd f8d4 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8003fe4:	2310      	movs	r3, #16
 8003fe6:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8003fea:	f207 1267 	addw	r2, r7, #359	; 0x167
 8003fee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003ff2:	338c      	adds	r3, #140	; 0x8c
 8003ff4:	4965      	ldr	r1, [pc, #404]	; (800418c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8003ff6:	4618      	mov	r0, r3
 8003ff8:	f7fd f8f0 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8003ffc:	2311      	movs	r3, #17
 8003ffe:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8004002:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8004006:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800400a:	33a8      	adds	r3, #168	; 0xa8
 800400c:	4960      	ldr	r1, [pc, #384]	; (8004190 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800400e:	4618      	mov	r0, r3
 8004010:	f7fd f8bc 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8004014:	2312      	movs	r3, #18
 8004016:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800401a:	f207 1269 	addw	r2, r7, #361	; 0x169
 800401e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8004022:	33c4      	adds	r3, #196	; 0xc4
 8004024:	495b      	ldr	r1, [pc, #364]	; (8004194 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8004026:	4618      	mov	r0, r3
 8004028:	f7fd f860 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800402c:	2313      	movs	r3, #19
 800402e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8004032:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8004036:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800403a:	33e0      	adds	r3, #224	; 0xe0
 800403c:	4956      	ldr	r1, [pc, #344]	; (8004198 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800403e:	4618      	mov	r0, r3
 8004040:	f7fd f87c 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8004044:	2314      	movs	r3, #20
 8004046:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800404a:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800404e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8004052:	33fc      	adds	r3, #252	; 0xfc
 8004054:	4951      	ldr	r1, [pc, #324]	; (800419c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8004056:	4618      	mov	r0, r3
 8004058:	f7fd f8e8 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800405c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8004060:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8004064:	601a      	str	r2, [r3, #0]
 8004066:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800406a:	220a      	movs	r2, #10
 800406c:	605a      	str	r2, [r3, #4]
 800406e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8004072:	4618      	mov	r0, r3
 8004074:	f7fd f9db 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8004078:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800407c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8004080:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8004084:	9300      	str	r3, [sp, #0]
 8004086:	460b      	mov	r3, r1
 8004088:	ca06      	ldmia	r2, {r1, r2}
 800408a:	4845      	ldr	r0, [pc, #276]	; (80041a0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800408c:	f7fd f9e7 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8004090:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8004094:	4618      	mov	r0, r3
 8004096:	f7fd f9d6 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800409a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800409e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80040a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80040a6:	429c      	cmp	r4, r3
 80040a8:	d004      	beq.n	80040b4 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80040aa:	3c1c      	subs	r4, #28
 80040ac:	4620      	mov	r0, r4
 80040ae:	f7fd f810 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80040b2:	e7f6      	b.n	80040a2 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
{
	{'<', {TOKEN_SMALLER_THAN, TOKEN_SMALLER_OR_EQUAL}},
	{'>', {TOKEN_GREATER_THAN, TOKEN_GREATER_OR_EQUAL}},
	{'=', {TOKEN_ASSIGN, TOKEN_EQUALS}},
	{'!', {TOKEN_EXCLAMATION, TOKEN_NOT_EQUAL}},
};
 80040b4:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80040b8:	2200      	movs	r2, #0
 80040ba:	601a      	str	r2, [r3, #0]
 80040bc:	605a      	str	r2, [r3, #4]
 80040be:	609a      	str	r2, [r3, #8]
 80040c0:	233c      	movs	r3, #60	; 0x3c
 80040c2:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 80040c6:	231b      	movs	r3, #27
 80040c8:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80040cc:	231c      	movs	r3, #28
 80040ce:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80040d2:	233e      	movs	r3, #62	; 0x3e
 80040d4:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80040d8:	2319      	movs	r3, #25
 80040da:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80040de:	231a      	movs	r3, #26
 80040e0:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80040e4:	233d      	movs	r3, #61	; 0x3d
 80040e6:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80040ea:	2318      	movs	r3, #24
 80040ec:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80040f0:	231d      	movs	r3, #29
 80040f2:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80040f6:	2321      	movs	r3, #33	; 0x21
 80040f8:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 80040fc:	2317      	movs	r3, #23
 80040fe:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8004102:	231e      	movs	r3, #30
 8004104:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8004108:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800410c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8004110:	2304      	movs	r3, #4
 8004112:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8004116:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800411a:	4618      	mov	r0, r3
 800411c:	f7fd f9cf 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8004120:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8004124:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8004128:	9300      	str	r3, [sp, #0]
 800412a:	4613      	mov	r3, r2
 800412c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8004130:	ca06      	ldmia	r2, {r1, r2}
 8004132:	481c      	ldr	r0, [pc, #112]	; (80041a4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8004134:	f7fd f9db 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8004138:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800413c:	4618      	mov	r0, r3
 800413e:	f7fd f9ca 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8004142:	1d3b      	adds	r3, r7, #4
 8004144:	681b      	ldr	r3, [r3, #0]
 8004146:	2b00      	cmp	r3, #0
 8004148:	d10e      	bne.n	8004168 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800414a:	463b      	mov	r3, r7
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004152:	4293      	cmp	r3, r2
 8004154:	d108      	bne.n	8004168 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8004156:	4813      	ldr	r0, [pc, #76]	; (80041a4 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8004158:	f7ff fe22 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800415c:	4810      	ldr	r0, [pc, #64]	; (80041a0 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800415e:	f7ff fe2c 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8004162:	4804      	ldr	r0, [pc, #16]	; (8004174 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8004164:	f7ff fe36 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8004168:	bf00      	nop
 800416a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800416e:	46bd      	mov	sp, r7
 8004170:	bd90      	pop	{r4, r7, pc}
 8004172:	bf00      	nop
 8004174:	20000200 	.word	0x20000200
 8004178:	08024914 	.word	0x08024914
 800417c:	0802491c 	.word	0x0802491c
 8004180:	08024924 	.word	0x08024924
 8004184:	0802492c 	.word	0x0802492c
 8004188:	08024934 	.word	0x08024934
 800418c:	0802493c 	.word	0x0802493c
 8004190:	08024940 	.word	0x08024940
 8004194:	08024948 	.word	0x08024948
 8004198:	08024950 	.word	0x08024950
 800419c:	08024958 	.word	0x08024958
 80041a0:	20000218 	.word	0x20000218
 80041a4:	20000230 	.word	0x20000230

080041a8 <_GLOBAL__sub_I__ZN8Executor7executeE7Program>:
 80041a8:	b580      	push	{r7, lr}
 80041aa:	af00      	add	r7, sp, #0
 80041ac:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80041b0:	2001      	movs	r0, #1
 80041b2:	f7ff fe1d 	bl	8003df0 <_Z41__static_initialization_and_destruction_0ii>
 80041b6:	bd80      	pop	{r7, pc}

080041b8 <_GLOBAL__sub_D__ZN8Executor7executeE7Program>:
 80041b8:	b580      	push	{r7, lr}
 80041ba:	af00      	add	r7, sp, #0
 80041bc:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80041c0:	2000      	movs	r0, #0
 80041c2:	f7ff fe15 	bl	8003df0 <_Z41__static_initialization_and_destruction_0ii>
 80041c6:	bd80      	pop	{r7, pc}

080041c8 <_ZSt26__throw_bad_variant_accessPKc>:
    friend void __throw_bad_variant_access(const char* __what);
  };

  inline void
  __throw_bad_variant_access(const char* __what)
  { _GLIBCXX_THROW_OR_ABORT(bad_variant_access(__what)); }
 80041c8:	b580      	push	{r7, lr}
 80041ca:	b082      	sub	sp, #8
 80041cc:	af00      	add	r7, sp, #0
 80041ce:	6078      	str	r0, [r7, #4]
 80041d0:	f01d faec 	bl	80217ac <abort>

080041d4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 80041d4:	b580      	push	{r7, lr}
 80041d6:	b082      	sub	sp, #8
 80041d8:	af00      	add	r7, sp, #0
 80041da:	6078      	str	r0, [r7, #4]
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	4618      	mov	r0, r3
 80041e0:	f000 fa21 	bl	8004626 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	4618      	mov	r0, r3
 80041e8:	3708      	adds	r7, #8
 80041ea:	46bd      	mov	sp, r7
 80041ec:	bd80      	pop	{r7, pc}

080041ee <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 80041ee:	b580      	push	{r7, lr}
 80041f0:	b082      	sub	sp, #8
 80041f2:	af00      	add	r7, sp, #0
 80041f4:	6078      	str	r0, [r7, #4]
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	4618      	mov	r0, r3
 80041fa:	f7ff ffeb 	bl	80041d4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	4618      	mov	r0, r3
 8004202:	3708      	adds	r7, #8
 8004204:	46bd      	mov	sp, r7
 8004206:	bd80      	pop	{r7, pc}

08004208 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8004208:	b580      	push	{r7, lr}
 800420a:	b082      	sub	sp, #8
 800420c:	af00      	add	r7, sp, #0
 800420e:	6078      	str	r0, [r7, #4]
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	4618      	mov	r0, r3
 8004214:	f7ff ffeb 	bl	80041ee <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	4618      	mov	r0, r3
 800421c:	3708      	adds	r7, #8
 800421e:	46bd      	mov	sp, r7
 8004220:	bd80      	pop	{r7, pc}

08004222 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 8004222:	b580      	push	{r7, lr}
 8004224:	b082      	sub	sp, #8
 8004226:	af00      	add	r7, sp, #0
 8004228:	6078      	str	r0, [r7, #4]
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	4618      	mov	r0, r3
 800422e:	f7ff ffeb 	bl	8004208 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8004232:	687b      	ldr	r3, [r7, #4]
 8004234:	4618      	mov	r0, r3
 8004236:	3708      	adds	r7, #8
 8004238:	46bd      	mov	sp, r7
 800423a:	bd80      	pop	{r7, pc}

0800423c <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 800423c:	b580      	push	{r7, lr}
 800423e:	b082      	sub	sp, #8
 8004240:	af00      	add	r7, sp, #0
 8004242:	6078      	str	r0, [r7, #4]
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	4618      	mov	r0, r3
 8004248:	f7ff ffeb 	bl	8004222 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	4618      	mov	r0, r3
 8004250:	3708      	adds	r7, #8
 8004252:	46bd      	mov	sp, r7
 8004254:	bd80      	pop	{r7, pc}

08004256 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      variant() = default;
      variant(const variant& __rhs) = default;
      variant(variant&&) = default;
      variant& operator=(const variant&) = default;
      variant& operator=(variant&&) = default;
      ~variant() = default;
 8004256:	b580      	push	{r7, lr}
 8004258:	b082      	sub	sp, #8
 800425a:	af00      	add	r7, sp, #0
 800425c:	6078      	str	r0, [r7, #4]
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	4618      	mov	r0, r3
 8004262:	f7ff ffeb 	bl	800423c <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
 8004266:	687b      	ldr	r3, [r7, #4]
 8004268:	4618      	mov	r0, r3
 800426a:	3708      	adds	r7, #8
 800426c:	46bd      	mov	sp, r7
 800426e:	bd80      	pop	{r7, pc}

08004270 <_ZN17Primal_expressionD1Ev>:
#include <Expression.h>

Primal_expression::~Primal_expression()
 8004270:	b590      	push	{r4, r7, lr}
 8004272:	b083      	sub	sp, #12
 8004274:	af00      	add	r7, sp, #0
 8004276:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Variable*>(content))
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	3304      	adds	r3, #4
 800427c:	4618      	mov	r0, r3
 800427e:	f000 f9f1 	bl	8004664 <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>
 8004282:	4603      	mov	r3, r0
 8004284:	2b00      	cmp	r3, #0
 8004286:	d010      	beq.n	80042aa <_ZN17Primal_expressionD1Ev+0x3a>
	{
		delete std::get<Variable*>(content);
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	3304      	adds	r3, #4
 800428c:	4618      	mov	r0, r3
 800428e:	f000 f9fa 	bl	8004686 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>
 8004292:	4603      	mov	r3, r0
 8004294:	681c      	ldr	r4, [r3, #0]
 8004296:	2c00      	cmp	r4, #0
 8004298:	d01f      	beq.n	80042da <_ZN17Primal_expressionD1Ev+0x6a>
 800429a:	4620      	mov	r0, r4
 800429c:	f00b f839 	bl	800f312 <_ZN8VariableD1Ev>
 80042a0:	2120      	movs	r1, #32
 80042a2:	4620      	mov	r0, r4
 80042a4:	f01b ff9f 	bl	80201e6 <_ZdlPvj>
 80042a8:	e017      	b.n	80042da <_ZN17Primal_expressionD1Ev+0x6a>
	}
	else if(std::holds_alternative<Function_call*>(content))
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	3304      	adds	r3, #4
 80042ae:	4618      	mov	r0, r3
 80042b0:	f000 f9f5 	bl	800469e <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>
 80042b4:	4603      	mov	r3, r0
 80042b6:	2b00      	cmp	r3, #0
 80042b8:	d00f      	beq.n	80042da <_ZN17Primal_expressionD1Ev+0x6a>
	{
		delete std::get<Function_call*>(content);
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	3304      	adds	r3, #4
 80042be:	4618      	mov	r0, r3
 80042c0:	f000 f9fe 	bl	80046c0 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 80042c4:	4603      	mov	r3, r0
 80042c6:	681c      	ldr	r4, [r3, #0]
 80042c8:	2c00      	cmp	r4, #0
 80042ca:	d006      	beq.n	80042da <_ZN17Primal_expressionD1Ev+0x6a>
 80042cc:	4620      	mov	r0, r4
 80042ce:	f00a ffa5 	bl	800f21c <_ZN13Function_callD1Ev>
 80042d2:	212c      	movs	r1, #44	; 0x2c
 80042d4:	4620      	mov	r0, r4
 80042d6:	f01b ff86 	bl	80201e6 <_ZdlPvj>
Primal_expression::~Primal_expression()
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	3304      	adds	r3, #4
 80042de:	4618      	mov	r0, r3
 80042e0:	f7ff ffb9 	bl	8004256 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>
	}
}
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	4618      	mov	r0, r3
 80042e8:	370c      	adds	r7, #12
 80042ea:	46bd      	mov	sp, r7
 80042ec:	bd90      	pop	{r4, r7, pc}

080042ee <_ZN19Priority_expressionD1Ev>:

Priority_expression::~Priority_expression()
 80042ee:	b590      	push	{r4, r7, lr}
 80042f0:	b083      	sub	sp, #12
 80042f2:	af00      	add	r7, sp, #0
 80042f4:	6078      	str	r0, [r7, #4]
{
	if(std::holds_alternative<Expression*>(exp))
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	4618      	mov	r0, r3
 80042fa:	f000 fa00 	bl	80046fe <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 80042fe:	4603      	mov	r3, r0
 8004300:	2b00      	cmp	r3, #0
 8004302:	d00f      	beq.n	8004324 <_ZN19Priority_expressionD1Ev+0x36>
	{
		delete std::get<Expression*>(exp);
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	4618      	mov	r0, r3
 8004308:	f000 fa0a 	bl	8004720 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 800430c:	4603      	mov	r3, r0
 800430e:	681c      	ldr	r4, [r3, #0]
 8004310:	2c00      	cmp	r4, #0
 8004312:	d016      	beq.n	8004342 <_ZN19Priority_expressionD1Ev+0x54>
 8004314:	4620      	mov	r0, r4
 8004316:	f000 f948 	bl	80045aa <_ZN10ExpressionD1Ev>
 800431a:	2114      	movs	r1, #20
 800431c:	4620      	mov	r0, r4
 800431e:	f01b ff62 	bl	80201e6 <_ZdlPvj>
 8004322:	e00e      	b.n	8004342 <_ZN19Priority_expressionD1Ev+0x54>
	}
	else
	{
		delete std::get<Primal_expression*>(exp);
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	4618      	mov	r0, r3
 8004328:	f000 fa06 	bl	8004738 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 800432c:	4603      	mov	r3, r0
 800432e:	681c      	ldr	r4, [r3, #0]
 8004330:	2c00      	cmp	r4, #0
 8004332:	d006      	beq.n	8004342 <_ZN19Priority_expressionD1Ev+0x54>
 8004334:	4620      	mov	r0, r4
 8004336:	f7ff ff9b 	bl	8004270 <_ZN17Primal_expressionD1Ev>
 800433a:	2120      	movs	r1, #32
 800433c:	4620      	mov	r0, r4
 800433e:	f01b ff52 	bl	80201e6 <_ZdlPvj>
	}
}
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	4618      	mov	r0, r3
 8004346:	370c      	adds	r7, #12
 8004348:	46bd      	mov	sp, r7
 800434a:	bd90      	pop	{r4, r7, pc}

0800434c <_ZN16Unary_expressionD1Ev>:

Unary_expression::~Unary_expression()
 800434c:	b590      	push	{r4, r7, lr}
 800434e:	b083      	sub	sp, #12
 8004350:	af00      	add	r7, sp, #0
 8004352:	6078      	str	r0, [r7, #4]
{
	delete prior_exp;
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	681c      	ldr	r4, [r3, #0]
 8004358:	2c00      	cmp	r4, #0
 800435a:	d006      	beq.n	800436a <_ZN16Unary_expressionD1Ev+0x1e>
 800435c:	4620      	mov	r0, r4
 800435e:	f7ff ffc6 	bl	80042ee <_ZN19Priority_expressionD1Ev>
 8004362:	2108      	movs	r1, #8
 8004364:	4620      	mov	r0, r4
 8004366:	f01b ff3e 	bl	80201e6 <_ZdlPvj>
}
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	4618      	mov	r0, r3
 800436e:	370c      	adds	r7, #12
 8004370:	46bd      	mov	sp, r7
 8004372:	bd90      	pop	{r4, r7, pc}

08004374 <_ZN16Power_expressionD1Ev>:

Power_expression::~Power_expression()
 8004374:	b590      	push	{r4, r7, lr}
 8004376:	b083      	sub	sp, #12
 8004378:	af00      	add	r7, sp, #0
 800437a:	6078      	str	r0, [r7, #4]
{
	delete left_un_exp;
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	681c      	ldr	r4, [r3, #0]
 8004380:	2c00      	cmp	r4, #0
 8004382:	d006      	beq.n	8004392 <_ZN16Power_expressionD1Ev+0x1e>
 8004384:	4620      	mov	r0, r4
 8004386:	f7ff ffe1 	bl	800434c <_ZN16Unary_expressionD1Ev>
 800438a:	2108      	movs	r1, #8
 800438c:	4620      	mov	r0, r4
 800438e:	f01b ff2a 	bl	80201e6 <_ZdlPvj>
	delete right_un_exp;
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	685c      	ldr	r4, [r3, #4]
 8004396:	2c00      	cmp	r4, #0
 8004398:	d006      	beq.n	80043a8 <_ZN16Power_expressionD1Ev+0x34>
 800439a:	4620      	mov	r0, r4
 800439c:	f7ff ffd6 	bl	800434c <_ZN16Unary_expressionD1Ev>
 80043a0:	2108      	movs	r1, #8
 80043a2:	4620      	mov	r0, r4
 80043a4:	f01b ff1f 	bl	80201e6 <_ZdlPvj>
}
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	4618      	mov	r0, r3
 80043ac:	370c      	adds	r7, #12
 80043ae:	46bd      	mov	sp, r7
 80043b0:	bd90      	pop	{r4, r7, pc}

080043b2 <_ZN19Multiply_expressionD1Ev>:

Multiply_expression::~Multiply_expression()
 80043b2:	b590      	push	{r4, r7, lr}
 80043b4:	b087      	sub	sp, #28
 80043b6:	af00      	add	r7, sp, #0
 80043b8:	6078      	str	r0, [r7, #4]
{
	for(Power_expression* exp : pow_exps)
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	617b      	str	r3, [r7, #20]
 80043be:	6978      	ldr	r0, [r7, #20]
 80043c0:	f000 f9fc 	bl	80047bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 80043c4:	4603      	mov	r3, r0
 80043c6:	60fb      	str	r3, [r7, #12]
 80043c8:	6978      	ldr	r0, [r7, #20]
 80043ca:	f000 fa07 	bl	80047dc <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 80043ce:	4603      	mov	r3, r0
 80043d0:	60bb      	str	r3, [r7, #8]
 80043d2:	f107 0208 	add.w	r2, r7, #8
 80043d6:	f107 030c 	add.w	r3, r7, #12
 80043da:	4611      	mov	r1, r2
 80043dc:	4618      	mov	r0, r3
 80043de:	f000 fa0e 	bl	80047fe <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 80043e2:	4603      	mov	r3, r0
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d017      	beq.n	8004418 <_ZN19Multiply_expressionD1Ev+0x66>
 80043e8:	f107 030c 	add.w	r3, r7, #12
 80043ec:	4618      	mov	r0, r3
 80043ee:	f000 fa2e 	bl	800484e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 80043f2:	4603      	mov	r3, r0
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 80043f8:	693c      	ldr	r4, [r7, #16]
 80043fa:	2c00      	cmp	r4, #0
 80043fc:	d006      	beq.n	800440c <_ZN19Multiply_expressionD1Ev+0x5a>
 80043fe:	4620      	mov	r0, r4
 8004400:	f7ff ffb8 	bl	8004374 <_ZN16Power_expressionD1Ev>
 8004404:	2108      	movs	r1, #8
 8004406:	4620      	mov	r0, r4
 8004408:	f01b feed 	bl	80201e6 <_ZdlPvj>
	for(Power_expression* exp : pow_exps)
 800440c:	f107 030c 	add.w	r3, r7, #12
 8004410:	4618      	mov	r0, r3
 8004412:	f000 fa0c 	bl	800482e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8004416:	e7dc      	b.n	80043d2 <_ZN19Multiply_expressionD1Ev+0x20>
Multiply_expression::~Multiply_expression()
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	330c      	adds	r3, #12
 800441c:	4618      	mov	r0, r3
 800441e:	f000 f9b2 	bl	8004786 <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	4618      	mov	r0, r3
 8004426:	f000 f993 	bl	8004750 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>
	}
}
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	4618      	mov	r0, r3
 800442e:	371c      	adds	r7, #28
 8004430:	46bd      	mov	sp, r7
 8004432:	bd90      	pop	{r4, r7, pc}

08004434 <_ZN14Sum_expressionD1Ev>:

Sum_expression::~Sum_expression()
 8004434:	b590      	push	{r4, r7, lr}
 8004436:	b087      	sub	sp, #28
 8004438:	af00      	add	r7, sp, #0
 800443a:	6078      	str	r0, [r7, #4]
{
	for(Multiply_expression* exp : mult_exps)
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	617b      	str	r3, [r7, #20]
 8004440:	6978      	ldr	r0, [r7, #20]
 8004442:	f000 fa46 	bl	80048d2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 8004446:	4603      	mov	r3, r0
 8004448:	60fb      	str	r3, [r7, #12]
 800444a:	6978      	ldr	r0, [r7, #20]
 800444c:	f000 fa51 	bl	80048f2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 8004450:	4603      	mov	r3, r0
 8004452:	60bb      	str	r3, [r7, #8]
 8004454:	f107 0208 	add.w	r2, r7, #8
 8004458:	f107 030c 	add.w	r3, r7, #12
 800445c:	4611      	mov	r1, r2
 800445e:	4618      	mov	r0, r3
 8004460:	f000 fa58 	bl	8004914 <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8004464:	4603      	mov	r3, r0
 8004466:	2b00      	cmp	r3, #0
 8004468:	d017      	beq.n	800449a <_ZN14Sum_expressionD1Ev+0x66>
 800446a:	f107 030c 	add.w	r3, r7, #12
 800446e:	4618      	mov	r0, r3
 8004470:	f000 fa78 	bl	8004964 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8004474:	4603      	mov	r3, r0
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 800447a:	693c      	ldr	r4, [r7, #16]
 800447c:	2c00      	cmp	r4, #0
 800447e:	d006      	beq.n	800448e <_ZN14Sum_expressionD1Ev+0x5a>
 8004480:	4620      	mov	r0, r4
 8004482:	f7ff ff96 	bl	80043b2 <_ZN19Multiply_expressionD1Ev>
 8004486:	2118      	movs	r1, #24
 8004488:	4620      	mov	r0, r4
 800448a:	f01b feac 	bl	80201e6 <_ZdlPvj>
	for(Multiply_expression* exp : mult_exps)
 800448e:	f107 030c 	add.w	r3, r7, #12
 8004492:	4618      	mov	r0, r3
 8004494:	f000 fa56 	bl	8004944 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8004498:	e7dc      	b.n	8004454 <_ZN14Sum_expressionD1Ev+0x20>
Sum_expression::~Sum_expression()
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	330c      	adds	r3, #12
 800449e:	4618      	mov	r0, r3
 80044a0:	f000 f9fc 	bl	800489c <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	4618      	mov	r0, r3
 80044a8:	f000 f9dd 	bl	8004866 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>
	}
}
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	4618      	mov	r0, r3
 80044b0:	371c      	adds	r7, #28
 80044b2:	46bd      	mov	sp, r7
 80044b4:	bd90      	pop	{r4, r7, pc}

080044b6 <_ZN19Relation_expressionD1Ev>:

Relation_expression::~Relation_expression()
 80044b6:	b590      	push	{r4, r7, lr}
 80044b8:	b083      	sub	sp, #12
 80044ba:	af00      	add	r7, sp, #0
 80044bc:	6078      	str	r0, [r7, #4]
{
	delete left_sum_exp;
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	681c      	ldr	r4, [r3, #0]
 80044c2:	2c00      	cmp	r4, #0
 80044c4:	d006      	beq.n	80044d4 <_ZN19Relation_expressionD1Ev+0x1e>
 80044c6:	4620      	mov	r0, r4
 80044c8:	f7ff ffb4 	bl	8004434 <_ZN14Sum_expressionD1Ev>
 80044cc:	2118      	movs	r1, #24
 80044ce:	4620      	mov	r0, r4
 80044d0:	f01b fe89 	bl	80201e6 <_ZdlPvj>
	delete right_sum_exp;
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	685c      	ldr	r4, [r3, #4]
 80044d8:	2c00      	cmp	r4, #0
 80044da:	d006      	beq.n	80044ea <_ZN19Relation_expressionD1Ev+0x34>
 80044dc:	4620      	mov	r0, r4
 80044de:	f7ff ffa9 	bl	8004434 <_ZN14Sum_expressionD1Ev>
 80044e2:	2118      	movs	r1, #24
 80044e4:	4620      	mov	r0, r4
 80044e6:	f01b fe7e 	bl	80201e6 <_ZdlPvj>
}
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	4618      	mov	r0, r3
 80044ee:	370c      	adds	r7, #12
 80044f0:	46bd      	mov	sp, r7
 80044f2:	bd90      	pop	{r4, r7, pc}

080044f4 <_ZN18Compare_expressionD1Ev>:

Compare_expression::~Compare_expression()
 80044f4:	b590      	push	{r4, r7, lr}
 80044f6:	b083      	sub	sp, #12
 80044f8:	af00      	add	r7, sp, #0
 80044fa:	6078      	str	r0, [r7, #4]
{
	delete left_rel_exp;
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	681c      	ldr	r4, [r3, #0]
 8004500:	2c00      	cmp	r4, #0
 8004502:	d006      	beq.n	8004512 <_ZN18Compare_expressionD1Ev+0x1e>
 8004504:	4620      	mov	r0, r4
 8004506:	f7ff ffd6 	bl	80044b6 <_ZN19Relation_expressionD1Ev>
 800450a:	210c      	movs	r1, #12
 800450c:	4620      	mov	r0, r4
 800450e:	f01b fe6a 	bl	80201e6 <_ZdlPvj>
	delete right_rel_exp;
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	685c      	ldr	r4, [r3, #4]
 8004516:	2c00      	cmp	r4, #0
 8004518:	d006      	beq.n	8004528 <_ZN18Compare_expressionD1Ev+0x34>
 800451a:	4620      	mov	r0, r4
 800451c:	f7ff ffcb 	bl	80044b6 <_ZN19Relation_expressionD1Ev>
 8004520:	210c      	movs	r1, #12
 8004522:	4620      	mov	r0, r4
 8004524:	f01b fe5f 	bl	80201e6 <_ZdlPvj>
}
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	4618      	mov	r0, r3
 800452c:	370c      	adds	r7, #12
 800452e:	46bd      	mov	sp, r7
 8004530:	bd90      	pop	{r4, r7, pc}

08004532 <_ZN14And_expressionD1Ev>:

And_expression::~And_expression()
 8004532:	b590      	push	{r4, r7, lr}
 8004534:	b087      	sub	sp, #28
 8004536:	af00      	add	r7, sp, #0
 8004538:	6078      	str	r0, [r7, #4]
{
	for(Compare_expression* exp : comp_exps)
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	617b      	str	r3, [r7, #20]
 800453e:	6978      	ldr	r0, [r7, #20]
 8004540:	f000 fa37 	bl	80049b2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 8004544:	4603      	mov	r3, r0
 8004546:	60fb      	str	r3, [r7, #12]
 8004548:	6978      	ldr	r0, [r7, #20]
 800454a:	f000 fa42 	bl	80049d2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 800454e:	4603      	mov	r3, r0
 8004550:	60bb      	str	r3, [r7, #8]
 8004552:	f107 0208 	add.w	r2, r7, #8
 8004556:	f107 030c 	add.w	r3, r7, #12
 800455a:	4611      	mov	r1, r2
 800455c:	4618      	mov	r0, r3
 800455e:	f000 fa49 	bl	80049f4 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8004562:	4603      	mov	r3, r0
 8004564:	2b00      	cmp	r3, #0
 8004566:	d017      	beq.n	8004598 <_ZN14And_expressionD1Ev+0x66>
 8004568:	f107 030c 	add.w	r3, r7, #12
 800456c:	4618      	mov	r0, r3
 800456e:	f000 fa69 	bl	8004a44 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8004572:	4603      	mov	r3, r0
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 8004578:	693c      	ldr	r4, [r7, #16]
 800457a:	2c00      	cmp	r4, #0
 800457c:	d006      	beq.n	800458c <_ZN14And_expressionD1Ev+0x5a>
 800457e:	4620      	mov	r0, r4
 8004580:	f7ff ffb8 	bl	80044f4 <_ZN18Compare_expressionD1Ev>
 8004584:	210c      	movs	r1, #12
 8004586:	4620      	mov	r0, r4
 8004588:	f01b fe2d 	bl	80201e6 <_ZdlPvj>
	for(Compare_expression* exp : comp_exps)
 800458c:	f107 030c 	add.w	r3, r7, #12
 8004590:	4618      	mov	r0, r3
 8004592:	f000 fa47 	bl	8004a24 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8004596:	e7dc      	b.n	8004552 <_ZN14And_expressionD1Ev+0x20>
And_expression::~And_expression()
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	4618      	mov	r0, r3
 800459c:	f000 f9ee 	bl	800497c <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>
	}
}
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	4618      	mov	r0, r3
 80045a4:	371c      	adds	r7, #28
 80045a6:	46bd      	mov	sp, r7
 80045a8:	bd90      	pop	{r4, r7, pc}

080045aa <_ZN10ExpressionD1Ev>:

Expression::~Expression()
 80045aa:	b590      	push	{r4, r7, lr}
 80045ac:	b087      	sub	sp, #28
 80045ae:	af00      	add	r7, sp, #0
 80045b0:	6078      	str	r0, [r7, #4]
{
	for(And_expression* exp : and_exps)
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	3308      	adds	r3, #8
 80045b6:	617b      	str	r3, [r7, #20]
 80045b8:	6978      	ldr	r0, [r7, #20]
 80045ba:	f000 fa6a 	bl	8004a92 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 80045be:	4603      	mov	r3, r0
 80045c0:	60fb      	str	r3, [r7, #12]
 80045c2:	6978      	ldr	r0, [r7, #20]
 80045c4:	f000 fa75 	bl	8004ab2 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 80045c8:	4603      	mov	r3, r0
 80045ca:	60bb      	str	r3, [r7, #8]
 80045cc:	f107 0208 	add.w	r2, r7, #8
 80045d0:	f107 030c 	add.w	r3, r7, #12
 80045d4:	4611      	mov	r1, r2
 80045d6:	4618      	mov	r0, r3
 80045d8:	f000 fa7c 	bl	8004ad4 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 80045dc:	4603      	mov	r3, r0
 80045de:	2b00      	cmp	r3, #0
 80045e0:	d017      	beq.n	8004612 <_ZN10ExpressionD1Ev+0x68>
 80045e2:	f107 030c 	add.w	r3, r7, #12
 80045e6:	4618      	mov	r0, r3
 80045e8:	f000 fa9c 	bl	8004b24 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 80045ec:	4603      	mov	r3, r0
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	613b      	str	r3, [r7, #16]
	{
		delete exp;
 80045f2:	693c      	ldr	r4, [r7, #16]
 80045f4:	2c00      	cmp	r4, #0
 80045f6:	d006      	beq.n	8004606 <_ZN10ExpressionD1Ev+0x5c>
 80045f8:	4620      	mov	r0, r4
 80045fa:	f7ff ff9a 	bl	8004532 <_ZN14And_expressionD1Ev>
 80045fe:	210c      	movs	r1, #12
 8004600:	4620      	mov	r0, r4
 8004602:	f01b fdf0 	bl	80201e6 <_ZdlPvj>
	for(And_expression* exp : and_exps)
 8004606:	f107 030c 	add.w	r3, r7, #12
 800460a:	4618      	mov	r0, r3
 800460c:	f000 fa7a 	bl	8004b04 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8004610:	e7dc      	b.n	80045cc <_ZN10ExpressionD1Ev+0x22>
Expression::~Expression()
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	3308      	adds	r3, #8
 8004616:	4618      	mov	r0, r3
 8004618:	f000 fa20 	bl	8004a5c <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>
	}
}
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	4618      	mov	r0, r3
 8004620:	371c      	adds	r7, #28
 8004622:	46bd      	mov	sp, r7
 8004624:	bd90      	pop	{r4, r7, pc}

08004626 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEED1Ev>:
      ~_Variant_storage()
 8004626:	b580      	push	{r7, lr}
 8004628:	b082      	sub	sp, #8
 800462a:	af00      	add	r7, sp, #0
 800462c:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 800462e:	6878      	ldr	r0, [r7, #4]
 8004630:	f000 fa84 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	4618      	mov	r0, r3
 8004638:	3708      	adds	r7, #8
 800463a:	46bd      	mov	sp, r7
 800463c:	bd80      	pop	{r7, pc}

0800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>:
	}

      constexpr bool valueless_by_exception() const noexcept
      { return !this->_M_valid(); }

      constexpr size_t index() const noexcept
 800463e:	b480      	push	{r7}
 8004640:	b083      	sub	sp, #12
 8004642:	af00      	add	r7, sp, #0
 8004644:	6078      	str	r0, [r7, #4]
      {
	if (this->_M_index ==
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	7e1b      	ldrb	r3, [r3, #24]
 800464a:	2bff      	cmp	r3, #255	; 0xff
 800464c:	d102      	bne.n	8004654 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x16>
	    typename _Base::__index_type(variant_npos))
	  return variant_npos;
 800464e:	f04f 33ff 	mov.w	r3, #4294967295
 8004652:	e001      	b.n	8004658 <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv+0x1a>
	return this->_M_index;
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	7e1b      	ldrb	r3, [r3, #24]
      }
 8004658:	4618      	mov	r0, r3
 800465a:	370c      	adds	r7, #12
 800465c:	46bd      	mov	sp, r7
 800465e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004662:	4770      	bx	lr

08004664 <_ZSt17holds_alternativeIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 8004664:	b580      	push	{r7, lr}
 8004666:	b082      	sub	sp, #8
 8004668:	af00      	add	r7, sp, #0
 800466a:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 800466c:	6878      	ldr	r0, [r7, #4]
 800466e:	f7ff ffe6 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8004672:	4603      	mov	r3, r0
 8004674:	2b04      	cmp	r3, #4
 8004676:	bf0c      	ite	eq
 8004678:	2301      	moveq	r3, #1
 800467a:	2300      	movne	r3, #0
 800467c:	b2db      	uxtb	r3, r3
    }
 800467e:	4618      	mov	r0, r3
 8004680:	3708      	adds	r7, #8
 8004682:	46bd      	mov	sp, r7
 8004684:	bd80      	pop	{r7, pc}

08004686 <_ZSt3getIP8VariableJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_P13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8004686:	b580      	push	{r7, lr}
 8004688:	b082      	sub	sp, #8
 800468a:	af00      	add	r7, sp, #0
 800468c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800468e:	6878      	ldr	r0, [r7, #4]
 8004690:	f000 facc 	bl	8004c2c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8004694:	4603      	mov	r3, r0
    }
 8004696:	4618      	mov	r0, r3
 8004698:	3708      	adds	r7, #8
 800469a:	46bd      	mov	sp, r7
 800469c:	bd80      	pop	{r7, pc}

0800469e <_ZSt17holds_alternativeIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 800469e:	b580      	push	{r7, lr}
 80046a0:	b082      	sub	sp, #8
 80046a2:	af00      	add	r7, sp, #0
 80046a4:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 80046a6:	6878      	ldr	r0, [r7, #4]
 80046a8:	f7ff ffc9 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 80046ac:	4603      	mov	r3, r0
 80046ae:	2b05      	cmp	r3, #5
 80046b0:	bf0c      	ite	eq
 80046b2:	2301      	moveq	r3, #1
 80046b4:	2300      	movne	r3, #0
 80046b6:	b2db      	uxtb	r3, r3
    }
 80046b8:	4618      	mov	r0, r3
 80046ba:	3708      	adds	r7, #8
 80046bc:	46bd      	mov	sp, r7
 80046be:	bd80      	pop	{r7, pc}

080046c0 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 80046c0:	b580      	push	{r7, lr}
 80046c2:	b082      	sub	sp, #8
 80046c4:	af00      	add	r7, sp, #0
 80046c6:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 80046c8:	6878      	ldr	r0, [r7, #4]
 80046ca:	f000 fb47 	bl	8004d5c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80046ce:	4603      	mov	r3, r0
    }
 80046d0:	4618      	mov	r0, r3
 80046d2:	3708      	adds	r7, #8
 80046d4:	46bd      	mov	sp, r7
 80046d6:	bd80      	pop	{r7, pc}

080046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>:
      constexpr size_t index() const noexcept
 80046d8:	b480      	push	{r7}
 80046da:	b083      	sub	sp, #12
 80046dc:	af00      	add	r7, sp, #0
 80046de:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	791b      	ldrb	r3, [r3, #4]
 80046e4:	2bff      	cmp	r3, #255	; 0xff
 80046e6:	d102      	bne.n	80046ee <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x16>
	  return variant_npos;
 80046e8:	f04f 33ff 	mov.w	r3, #4294967295
 80046ec:	e001      	b.n	80046f2 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv+0x1a>
	return this->_M_index;
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	791b      	ldrb	r3, [r3, #4]
      }
 80046f2:	4618      	mov	r0, r3
 80046f4:	370c      	adds	r7, #12
 80046f6:	46bd      	mov	sp, r7
 80046f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046fc:	4770      	bx	lr

080046fe <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>:
    holds_alternative(const variant<_Types...>& __v) noexcept
 80046fe:	b580      	push	{r7, lr}
 8004700:	b082      	sub	sp, #8
 8004702:	af00      	add	r7, sp, #0
 8004704:	6078      	str	r0, [r7, #4]
      return __v.index() == __detail::__variant::__index_of_v<_Tp, _Types...>;
 8004706:	6878      	ldr	r0, [r7, #4]
 8004708:	f7ff ffe6 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 800470c:	4603      	mov	r3, r0
 800470e:	2b01      	cmp	r3, #1
 8004710:	bf0c      	ite	eq
 8004712:	2301      	moveq	r3, #1
 8004714:	2300      	movne	r3, #0
 8004716:	b2db      	uxtb	r3, r3
    }
 8004718:	4618      	mov	r0, r3
 800471a:	3708      	adds	r7, #8
 800471c:	46bd      	mov	sp, r7
 800471e:	bd80      	pop	{r7, pc}

08004720 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8004720:	b580      	push	{r7, lr}
 8004722:	b082      	sub	sp, #8
 8004724:	af00      	add	r7, sp, #0
 8004726:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8004728:	6878      	ldr	r0, [r7, #4]
 800472a:	f000 fb67 	bl	8004dfc <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 800472e:	4603      	mov	r3, r0
    }
 8004730:	4618      	mov	r0, r3
 8004732:	3708      	adds	r7, #8
 8004734:	46bd      	mov	sp, r7
 8004736:	bd80      	pop	{r7, pc}

08004738 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8004738:	b580      	push	{r7, lr}
 800473a:	b082      	sub	sp, #8
 800473c:	af00      	add	r7, sp, #0
 800473e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8004740:	6878      	ldr	r0, [r7, #4]
 8004742:	f000 fb99 	bl	8004e78 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 8004746:	4603      	mov	r3, r0
    }
 8004748:	4618      	mov	r0, r3
 800474a:	3708      	adds	r7, #8
 800474c:	46bd      	mov	sp, r7
 800474e:	bd80      	pop	{r7, pc}

08004750 <_ZNSt6vectorIP16Power_expressionSaIS1_EED1Ev>:
       *  The dtor only erases the elements, and note that if the
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      ~vector() _GLIBCXX_NOEXCEPT
 8004750:	b5b0      	push	{r4, r5, r7, lr}
 8004752:	b082      	sub	sp, #8
 8004754:	af00      	add	r7, sp, #0
 8004756:	6078      	str	r0, [r7, #4]
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	681c      	ldr	r4, [r3, #0]
 800475c:	687b      	ldr	r3, [r7, #4]
 800475e:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	4618      	mov	r0, r3
 8004764:	f000 fbc9 	bl	8004efa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8004768:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800476a:	461a      	mov	r2, r3
 800476c:	4629      	mov	r1, r5
 800476e:	4620      	mov	r0, r4
 8004770:	f000 fbce 	bl	8004f10 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	4618      	mov	r0, r3
 8004778:	f000 fba6 	bl	8004ec8 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	4618      	mov	r0, r3
 8004780:	3708      	adds	r7, #8
 8004782:	46bd      	mov	sp, r7
 8004784:	bdb0      	pop	{r4, r5, r7, pc}

08004786 <_ZNSt6vectorI13mult_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8004786:	b5b0      	push	{r4, r5, r7, lr}
 8004788:	b082      	sub	sp, #8
 800478a:	af00      	add	r7, sp, #0
 800478c:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800478e:	687b      	ldr	r3, [r7, #4]
 8004790:	681c      	ldr	r4, [r3, #0]
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	4618      	mov	r0, r3
 800479a:	f000 fbeb 	bl	8004f74 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 800479e:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80047a0:	461a      	mov	r2, r3
 80047a2:	4629      	mov	r1, r5
 80047a4:	4620      	mov	r0, r4
 80047a6:	f000 fbf0 	bl	8004f8a <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>
      }
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	4618      	mov	r0, r3
 80047ae:	f000 fbc9 	bl	8004f44 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	4618      	mov	r0, r3
 80047b6:	3708      	adds	r7, #8
 80047b8:	46bd      	mov	sp, r7
 80047ba:	bdb0      	pop	{r4, r5, r7, pc}

080047bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>:
       *  Returns a read/write iterator that points to the first
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      begin() _GLIBCXX_NOEXCEPT
 80047bc:	b580      	push	{r7, lr}
 80047be:	b084      	sub	sp, #16
 80047c0:	af00      	add	r7, sp, #0
 80047c2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80047c4:	687a      	ldr	r2, [r7, #4]
 80047c6:	f107 030c 	add.w	r3, r7, #12
 80047ca:	4611      	mov	r1, r2
 80047cc:	4618      	mov	r0, r3
 80047ce:	f000 fbea 	bl	8004fa6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	4618      	mov	r0, r3
 80047d6:	3710      	adds	r7, #16
 80047d8:	46bd      	mov	sp, r7
 80047da:	bd80      	pop	{r7, pc}

080047dc <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      end() _GLIBCXX_NOEXCEPT
 80047dc:	b580      	push	{r7, lr}
 80047de:	b084      	sub	sp, #16
 80047e0:	af00      	add	r7, sp, #0
 80047e2:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	1d1a      	adds	r2, r3, #4
 80047e8:	f107 030c 	add.w	r3, r7, #12
 80047ec:	4611      	mov	r1, r2
 80047ee:	4618      	mov	r0, r3
 80047f0:	f000 fbd9 	bl	8004fa6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	4618      	mov	r0, r3
 80047f8:	3710      	adds	r7, #16
 80047fa:	46bd      	mov	sp, r7
 80047fc:	bd80      	pop	{r7, pc}

080047fe <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80047fe:	b590      	push	{r4, r7, lr}
 8004800:	b083      	sub	sp, #12
 8004802:	af00      	add	r7, sp, #0
 8004804:	6078      	str	r0, [r7, #4]
 8004806:	6039      	str	r1, [r7, #0]
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
 8004808:	6878      	ldr	r0, [r7, #4]
 800480a:	f000 fbdc 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800480e:	4603      	mov	r3, r0
 8004810:	681c      	ldr	r4, [r3, #0]
 8004812:	6838      	ldr	r0, [r7, #0]
 8004814:	f000 fbd7 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004818:	4603      	mov	r3, r0
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	429c      	cmp	r4, r3
 800481e:	bf14      	ite	ne
 8004820:	2301      	movne	r3, #1
 8004822:	2300      	moveq	r3, #0
 8004824:	b2db      	uxtb	r3, r3
 8004826:	4618      	mov	r0, r3
 8004828:	370c      	adds	r7, #12
 800482a:	46bd      	mov	sp, r7
 800482c:	bd90      	pop	{r4, r7, pc}

0800482e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800482e:	b480      	push	{r7}
 8004830:	b083      	sub	sp, #12
 8004832:	af00      	add	r7, sp, #0
 8004834:	6078      	str	r0, [r7, #4]
	++_M_current;
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	1d1a      	adds	r2, r3, #4
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	601a      	str	r2, [r3, #0]
	return *this;
 8004840:	687b      	ldr	r3, [r7, #4]
      }
 8004842:	4618      	mov	r0, r3
 8004844:	370c      	adds	r7, #12
 8004846:	46bd      	mov	sp, r7
 8004848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800484c:	4770      	bx	lr

0800484e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800484e:	b480      	push	{r7}
 8004850:	b083      	sub	sp, #12
 8004852:	af00      	add	r7, sp, #0
 8004854:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	4618      	mov	r0, r3
 800485c:	370c      	adds	r7, #12
 800485e:	46bd      	mov	sp, r7
 8004860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004864:	4770      	bx	lr

08004866 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8004866:	b5b0      	push	{r4, r5, r7, lr}
 8004868:	b082      	sub	sp, #8
 800486a:	af00      	add	r7, sp, #0
 800486c:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	681c      	ldr	r4, [r3, #0]
 8004872:	687b      	ldr	r3, [r7, #4]
 8004874:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	4618      	mov	r0, r3
 800487a:	f000 fbd4 	bl	8005026 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800487e:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004880:	461a      	mov	r2, r3
 8004882:	4629      	mov	r1, r5
 8004884:	4620      	mov	r0, r4
 8004886:	f000 fbd9 	bl	800503c <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>
      }
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	4618      	mov	r0, r3
 800488e:	f000 fbb1 	bl	8004ff4 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	4618      	mov	r0, r3
 8004896:	3708      	adds	r7, #8
 8004898:	46bd      	mov	sp, r7
 800489a:	bdb0      	pop	{r4, r5, r7, pc}

0800489c <_ZNSt6vectorI12sum_operatorSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800489c:	b5b0      	push	{r4, r5, r7, lr}
 800489e:	b082      	sub	sp, #8
 80048a0:	af00      	add	r7, sp, #0
 80048a2:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	681c      	ldr	r4, [r3, #0]
 80048a8:	687b      	ldr	r3, [r7, #4]
 80048aa:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	4618      	mov	r0, r3
 80048b0:	f000 fbf6 	bl	80050a0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 80048b4:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80048b6:	461a      	mov	r2, r3
 80048b8:	4629      	mov	r1, r5
 80048ba:	4620      	mov	r0, r4
 80048bc:	f000 fbfb 	bl	80050b6 <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>
      }
 80048c0:	687b      	ldr	r3, [r7, #4]
 80048c2:	4618      	mov	r0, r3
 80048c4:	f000 fbd4 	bl	8005070 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	4618      	mov	r0, r3
 80048cc:	3708      	adds	r7, #8
 80048ce:	46bd      	mov	sp, r7
 80048d0:	bdb0      	pop	{r4, r5, r7, pc}

080048d2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80048d2:	b580      	push	{r7, lr}
 80048d4:	b084      	sub	sp, #16
 80048d6:	af00      	add	r7, sp, #0
 80048d8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80048da:	687a      	ldr	r2, [r7, #4]
 80048dc:	f107 030c 	add.w	r3, r7, #12
 80048e0:	4611      	mov	r1, r2
 80048e2:	4618      	mov	r0, r3
 80048e4:	f000 fbf5 	bl	80050d2 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	4618      	mov	r0, r3
 80048ec:	3710      	adds	r7, #16
 80048ee:	46bd      	mov	sp, r7
 80048f0:	bd80      	pop	{r7, pc}

080048f2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80048f2:	b580      	push	{r7, lr}
 80048f4:	b084      	sub	sp, #16
 80048f6:	af00      	add	r7, sp, #0
 80048f8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	1d1a      	adds	r2, r3, #4
 80048fe:	f107 030c 	add.w	r3, r7, #12
 8004902:	4611      	mov	r1, r2
 8004904:	4618      	mov	r0, r3
 8004906:	f000 fbe4 	bl	80050d2 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800490a:	68fb      	ldr	r3, [r7, #12]
 800490c:	4618      	mov	r0, r3
 800490e:	3710      	adds	r7, #16
 8004910:	46bd      	mov	sp, r7
 8004912:	bd80      	pop	{r7, pc}

08004914 <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8004914:	b590      	push	{r4, r7, lr}
 8004916:	b083      	sub	sp, #12
 8004918:	af00      	add	r7, sp, #0
 800491a:	6078      	str	r0, [r7, #4]
 800491c:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800491e:	6878      	ldr	r0, [r7, #4]
 8004920:	f000 fbe7 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004924:	4603      	mov	r3, r0
 8004926:	681c      	ldr	r4, [r3, #0]
 8004928:	6838      	ldr	r0, [r7, #0]
 800492a:	f000 fbe2 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800492e:	4603      	mov	r3, r0
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	429c      	cmp	r4, r3
 8004934:	bf14      	ite	ne
 8004936:	2301      	movne	r3, #1
 8004938:	2300      	moveq	r3, #0
 800493a:	b2db      	uxtb	r3, r3
 800493c:	4618      	mov	r0, r3
 800493e:	370c      	adds	r7, #12
 8004940:	46bd      	mov	sp, r7
 8004942:	bd90      	pop	{r4, r7, pc}

08004944 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8004944:	b480      	push	{r7}
 8004946:	b083      	sub	sp, #12
 8004948:	af00      	add	r7, sp, #0
 800494a:	6078      	str	r0, [r7, #4]
	++_M_current;
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	681b      	ldr	r3, [r3, #0]
 8004950:	1d1a      	adds	r2, r3, #4
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	601a      	str	r2, [r3, #0]
	return *this;
 8004956:	687b      	ldr	r3, [r7, #4]
      }
 8004958:	4618      	mov	r0, r3
 800495a:	370c      	adds	r7, #12
 800495c:	46bd      	mov	sp, r7
 800495e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004962:	4770      	bx	lr

08004964 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8004964:	b480      	push	{r7}
 8004966:	b083      	sub	sp, #12
 8004968:	af00      	add	r7, sp, #0
 800496a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800496c:	687b      	ldr	r3, [r7, #4]
 800496e:	681b      	ldr	r3, [r3, #0]
 8004970:	4618      	mov	r0, r3
 8004972:	370c      	adds	r7, #12
 8004974:	46bd      	mov	sp, r7
 8004976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800497a:	4770      	bx	lr

0800497c <_ZNSt6vectorIP18Compare_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800497c:	b5b0      	push	{r4, r5, r7, lr}
 800497e:	b082      	sub	sp, #8
 8004980:	af00      	add	r7, sp, #0
 8004982:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	681c      	ldr	r4, [r3, #0]
 8004988:	687b      	ldr	r3, [r7, #4]
 800498a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	4618      	mov	r0, r3
 8004990:	f000 fbdf 	bl	8005152 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8004994:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004996:	461a      	mov	r2, r3
 8004998:	4629      	mov	r1, r5
 800499a:	4620      	mov	r0, r4
 800499c:	f000 fbe4 	bl	8005168 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>
      }
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	4618      	mov	r0, r3
 80049a4:	f000 fbbc 	bl	8005120 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	4618      	mov	r0, r3
 80049ac:	3708      	adds	r7, #8
 80049ae:	46bd      	mov	sp, r7
 80049b0:	bdb0      	pop	{r4, r5, r7, pc}

080049b2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80049b2:	b580      	push	{r7, lr}
 80049b4:	b084      	sub	sp, #16
 80049b6:	af00      	add	r7, sp, #0
 80049b8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80049ba:	687a      	ldr	r2, [r7, #4]
 80049bc:	f107 030c 	add.w	r3, r7, #12
 80049c0:	4611      	mov	r1, r2
 80049c2:	4618      	mov	r0, r3
 80049c4:	f000 fbde 	bl	8005184 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	4618      	mov	r0, r3
 80049cc:	3710      	adds	r7, #16
 80049ce:	46bd      	mov	sp, r7
 80049d0:	bd80      	pop	{r7, pc}

080049d2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 80049d2:	b580      	push	{r7, lr}
 80049d4:	b084      	sub	sp, #16
 80049d6:	af00      	add	r7, sp, #0
 80049d8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 80049da:	687b      	ldr	r3, [r7, #4]
 80049dc:	1d1a      	adds	r2, r3, #4
 80049de:	f107 030c 	add.w	r3, r7, #12
 80049e2:	4611      	mov	r1, r2
 80049e4:	4618      	mov	r0, r3
 80049e6:	f000 fbcd 	bl	8005184 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	4618      	mov	r0, r3
 80049ee:	3710      	adds	r7, #16
 80049f0:	46bd      	mov	sp, r7
 80049f2:	bd80      	pop	{r7, pc}

080049f4 <_ZN9__gnu_cxxneIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 80049f4:	b590      	push	{r4, r7, lr}
 80049f6:	b083      	sub	sp, #12
 80049f8:	af00      	add	r7, sp, #0
 80049fa:	6078      	str	r0, [r7, #4]
 80049fc:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 80049fe:	6878      	ldr	r0, [r7, #4]
 8004a00:	f000 fbd0 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004a04:	4603      	mov	r3, r0
 8004a06:	681c      	ldr	r4, [r3, #0]
 8004a08:	6838      	ldr	r0, [r7, #0]
 8004a0a:	f000 fbcb 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004a0e:	4603      	mov	r3, r0
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	429c      	cmp	r4, r3
 8004a14:	bf14      	ite	ne
 8004a16:	2301      	movne	r3, #1
 8004a18:	2300      	moveq	r3, #0
 8004a1a:	b2db      	uxtb	r3, r3
 8004a1c:	4618      	mov	r0, r3
 8004a1e:	370c      	adds	r7, #12
 8004a20:	46bd      	mov	sp, r7
 8004a22:	bd90      	pop	{r4, r7, pc}

08004a24 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8004a24:	b480      	push	{r7}
 8004a26:	b083      	sub	sp, #12
 8004a28:	af00      	add	r7, sp, #0
 8004a2a:	6078      	str	r0, [r7, #4]
	++_M_current;
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	1d1a      	adds	r2, r3, #4
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	601a      	str	r2, [r3, #0]
	return *this;
 8004a36:	687b      	ldr	r3, [r7, #4]
      }
 8004a38:	4618      	mov	r0, r3
 8004a3a:	370c      	adds	r7, #12
 8004a3c:	46bd      	mov	sp, r7
 8004a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a42:	4770      	bx	lr

08004a44 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8004a44:	b480      	push	{r7}
 8004a46:	b083      	sub	sp, #12
 8004a48:	af00      	add	r7, sp, #0
 8004a4a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	4618      	mov	r0, r3
 8004a52:	370c      	adds	r7, #12
 8004a54:	46bd      	mov	sp, r7
 8004a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a5a:	4770      	bx	lr

08004a5c <_ZNSt6vectorIP14And_expressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8004a5c:	b5b0      	push	{r4, r5, r7, lr}
 8004a5e:	b082      	sub	sp, #8
 8004a60:	af00      	add	r7, sp, #0
 8004a62:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004a64:	687b      	ldr	r3, [r7, #4]
 8004a66:	681c      	ldr	r4, [r3, #0]
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	4618      	mov	r0, r3
 8004a70:	f000 fbc8 	bl	8005204 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8004a74:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8004a76:	461a      	mov	r2, r3
 8004a78:	4629      	mov	r1, r5
 8004a7a:	4620      	mov	r0, r4
 8004a7c:	f000 fbcd 	bl	800521a <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>
      }
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	4618      	mov	r0, r3
 8004a84:	f000 fba5 	bl	80051d2 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	4618      	mov	r0, r3
 8004a8c:	3708      	adds	r7, #8
 8004a8e:	46bd      	mov	sp, r7
 8004a90:	bdb0      	pop	{r4, r5, r7, pc}

08004a92 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8004a92:	b580      	push	{r7, lr}
 8004a94:	b084      	sub	sp, #16
 8004a96:	af00      	add	r7, sp, #0
 8004a98:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8004a9a:	687a      	ldr	r2, [r7, #4]
 8004a9c:	f107 030c 	add.w	r3, r7, #12
 8004aa0:	4611      	mov	r1, r2
 8004aa2:	4618      	mov	r0, r3
 8004aa4:	f000 fbc7 	bl	8005236 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	4618      	mov	r0, r3
 8004aac:	3710      	adds	r7, #16
 8004aae:	46bd      	mov	sp, r7
 8004ab0:	bd80      	pop	{r7, pc}

08004ab2 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8004ab2:	b580      	push	{r7, lr}
 8004ab4:	b084      	sub	sp, #16
 8004ab6:	af00      	add	r7, sp, #0
 8004ab8:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	1d1a      	adds	r2, r3, #4
 8004abe:	f107 030c 	add.w	r3, r7, #12
 8004ac2:	4611      	mov	r1, r2
 8004ac4:	4618      	mov	r0, r3
 8004ac6:	f000 fbb6 	bl	8005236 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8004aca:	68fb      	ldr	r3, [r7, #12]
 8004acc:	4618      	mov	r0, r3
 8004ace:	3710      	adds	r7, #16
 8004ad0:	46bd      	mov	sp, r7
 8004ad2:	bd80      	pop	{r7, pc}

08004ad4 <_ZN9__gnu_cxxneIPP14And_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 8004ad4:	b590      	push	{r4, r7, lr}
 8004ad6:	b083      	sub	sp, #12
 8004ad8:	af00      	add	r7, sp, #0
 8004ada:	6078      	str	r0, [r7, #4]
 8004adc:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 8004ade:	6878      	ldr	r0, [r7, #4]
 8004ae0:	f000 fbb9 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004ae4:	4603      	mov	r3, r0
 8004ae6:	681c      	ldr	r4, [r3, #0]
 8004ae8:	6838      	ldr	r0, [r7, #0]
 8004aea:	f000 fbb4 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8004aee:	4603      	mov	r3, r0
 8004af0:	681b      	ldr	r3, [r3, #0]
 8004af2:	429c      	cmp	r4, r3
 8004af4:	bf14      	ite	ne
 8004af6:	2301      	movne	r3, #1
 8004af8:	2300      	moveq	r3, #0
 8004afa:	b2db      	uxtb	r3, r3
 8004afc:	4618      	mov	r0, r3
 8004afe:	370c      	adds	r7, #12
 8004b00:	46bd      	mov	sp, r7
 8004b02:	bd90      	pop	{r4, r7, pc}

08004b04 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8004b04:	b480      	push	{r7}
 8004b06:	b083      	sub	sp, #12
 8004b08:	af00      	add	r7, sp, #0
 8004b0a:	6078      	str	r0, [r7, #4]
	++_M_current;
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	1d1a      	adds	r2, r3, #4
 8004b12:	687b      	ldr	r3, [r7, #4]
 8004b14:	601a      	str	r2, [r3, #0]
	return *this;
 8004b16:	687b      	ldr	r3, [r7, #4]
      }
 8004b18:	4618      	mov	r0, r3
 8004b1a:	370c      	adds	r7, #12
 8004b1c:	46bd      	mov	sp, r7
 8004b1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b22:	4770      	bx	lr

08004b24 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8004b24:	b480      	push	{r7}
 8004b26:	b083      	sub	sp, #12
 8004b28:	af00      	add	r7, sp, #0
 8004b2a:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	4618      	mov	r0, r3
 8004b32:	370c      	adds	r7, #12
 8004b34:	46bd      	mov	sp, r7
 8004b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b3a:	4770      	bx	lr

08004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>:
      void _M_reset()
 8004b3c:	b580      	push	{r7, lr}
 8004b3e:	b082      	sub	sp, #8
 8004b40:	af00      	add	r7, sp, #0
 8004b42:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 8004b44:	6878      	ldr	r0, [r7, #4]
 8004b46:	f000 fecb 	bl	80058e0 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>
	_M_index = variant_npos;
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	22ff      	movs	r2, #255	; 0xff
 8004b4e:	761a      	strb	r2, [r3, #24]
      }
 8004b50:	bf00      	nop
 8004b52:	3708      	adds	r7, #8
 8004b54:	46bd      	mov	sp, r7
 8004b56:	bd80      	pop	{r7, pc}

08004b58 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8004b58:	b580      	push	{r7, lr}
 8004b5a:	b082      	sub	sp, #8
 8004b5c:	af00      	add	r7, sp, #0
 8004b5e:	7138      	strb	r0, [r7, #4]
 8004b60:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8004b62:	6838      	ldr	r0, [r7, #0]
 8004b64:	f000 ff05 	bl	8005972 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8004b68:	4603      	mov	r3, r0
 8004b6a:	4618      	mov	r0, r3
 8004b6c:	f000 ff0c 	bl	8005988 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>
 8004b70:	4603      	mov	r3, r0
 8004b72:	4618      	mov	r0, r3
 8004b74:	3708      	adds	r7, #8
 8004b76:	46bd      	mov	sp, r7
 8004b78:	bd80      	pop	{r7, pc}

08004b7a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004b7a:	b590      	push	{r4, r7, lr}
 8004b7c:	b083      	sub	sp, #12
 8004b7e:	af00      	add	r7, sp, #0
 8004b80:	7138      	strb	r0, [r7, #4]
 8004b82:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004b84:	6838      	ldr	r0, [r7, #0]
 8004b86:	f000 fee9 	bl	800595c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004b8a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004b8c:	4619      	mov	r1, r3
 8004b8e:	4620      	mov	r0, r4
 8004b90:	f7ff ffe2 	bl	8004b58 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004b94:	4603      	mov	r3, r0
    }
 8004b96:	4618      	mov	r0, r3
 8004b98:	370c      	adds	r7, #12
 8004b9a:	46bd      	mov	sp, r7
 8004b9c:	bd90      	pop	{r4, r7, pc}

08004b9e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004b9e:	b590      	push	{r4, r7, lr}
 8004ba0:	b083      	sub	sp, #12
 8004ba2:	af00      	add	r7, sp, #0
 8004ba4:	7138      	strb	r0, [r7, #4]
 8004ba6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004ba8:	6838      	ldr	r0, [r7, #0]
 8004baa:	f000 fecc 	bl	8005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004bae:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004bb0:	4619      	mov	r1, r3
 8004bb2:	4620      	mov	r0, r4
 8004bb4:	f7ff ffe1 	bl	8004b7a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004bb8:	4603      	mov	r3, r0
    }
 8004bba:	4618      	mov	r0, r3
 8004bbc:	370c      	adds	r7, #12
 8004bbe:	46bd      	mov	sp, r7
 8004bc0:	bd90      	pop	{r4, r7, pc}

08004bc2 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004bc2:	b590      	push	{r4, r7, lr}
 8004bc4:	b083      	sub	sp, #12
 8004bc6:	af00      	add	r7, sp, #0
 8004bc8:	7138      	strb	r0, [r7, #4]
 8004bca:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004bcc:	6838      	ldr	r0, [r7, #0]
 8004bce:	f000 feaf 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004bd2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004bd4:	4619      	mov	r1, r3
 8004bd6:	4620      	mov	r0, r4
 8004bd8:	f7ff ffe1 	bl	8004b9e <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004bdc:	4603      	mov	r3, r0
    }
 8004bde:	4618      	mov	r0, r3
 8004be0:	370c      	adds	r7, #12
 8004be2:	46bd      	mov	sp, r7
 8004be4:	bd90      	pop	{r4, r7, pc}

08004be6 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004be6:	b590      	push	{r4, r7, lr}
 8004be8:	b083      	sub	sp, #12
 8004bea:	af00      	add	r7, sp, #0
 8004bec:	7138      	strb	r0, [r7, #4]
 8004bee:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004bf0:	6838      	ldr	r0, [r7, #0]
 8004bf2:	f000 fe92 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004bf6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004bf8:	4619      	mov	r1, r3
 8004bfa:	4620      	mov	r0, r4
 8004bfc:	f7ff ffe1 	bl	8004bc2 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004c00:	4603      	mov	r3, r0
    }
 8004c02:	4618      	mov	r0, r3
 8004c04:	370c      	adds	r7, #12
 8004c06:	46bd      	mov	sp, r7
 8004c08:	bd90      	pop	{r4, r7, pc}

08004c0a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004c0a:	b590      	push	{r4, r7, lr}
 8004c0c:	b083      	sub	sp, #12
 8004c0e:	af00      	add	r7, sp, #0
 8004c10:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004c12:	6878      	ldr	r0, [r7, #4]
 8004c14:	f000 fe76 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004c18:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004c1a:	4619      	mov	r1, r3
 8004c1c:	4620      	mov	r0, r4
 8004c1e:	f7ff ffe2 	bl	8004be6 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004c22:	4603      	mov	r3, r0
    }
 8004c24:	4618      	mov	r0, r3
 8004c26:	370c      	adds	r7, #12
 8004c28:	46bd      	mov	sp, r7
 8004c2a:	bd90      	pop	{r4, r7, pc}

08004c2c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
#undef _VARIANT_RELATION_FUNCTION_TEMPLATE
    };

  template<size_t _Np, typename... _Types>
    constexpr variant_alternative_t<_Np, variant<_Types...>>&
    get(variant<_Types...>& __v)
 8004c2c:	b580      	push	{r7, lr}
 8004c2e:	b082      	sub	sp, #8
 8004c30:	af00      	add	r7, sp, #0
 8004c32:	6078      	str	r0, [r7, #4]
    {
      static_assert(_Np < sizeof...(_Types),
		    "The index should be in [0, number of alternatives)");
      if (__v.index() != _Np)
 8004c34:	6878      	ldr	r0, [r7, #4]
 8004c36:	f7ff fd02 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8004c3a:	4603      	mov	r3, r0
 8004c3c:	2b04      	cmp	r3, #4
 8004c3e:	bf14      	ite	ne
 8004c40:	2301      	movne	r3, #1
 8004c42:	2300      	moveq	r3, #0
 8004c44:	b2db      	uxtb	r3, r3
 8004c46:	2b00      	cmp	r3, #0
 8004c48:	d002      	beq.n	8004c50 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8004c4a:	4805      	ldr	r0, [pc, #20]	; (8004c60 <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8004c4c:	f7ff fabc 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8004c50:	6878      	ldr	r0, [r7, #4]
 8004c52:	f7ff ffda 	bl	8004c0a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8004c56:	4603      	mov	r3, r0
    }
 8004c58:	4618      	mov	r0, r3
 8004c5a:	3708      	adds	r7, #8
 8004c5c:	46bd      	mov	sp, r7
 8004c5e:	bd80      	pop	{r7, pc}
 8004c60:	0802495c 	.word	0x0802495c

08004c64 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8004c64:	b580      	push	{r7, lr}
 8004c66:	b082      	sub	sp, #8
 8004c68:	af00      	add	r7, sp, #0
 8004c6a:	7138      	strb	r0, [r7, #4]
 8004c6c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8004c6e:	6838      	ldr	r0, [r7, #0]
 8004c70:	f000 fe95 	bl	800599e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004c74:	4603      	mov	r3, r0
 8004c76:	4618      	mov	r0, r3
 8004c78:	f000 fe9c 	bl	80059b4 <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 8004c7c:	4603      	mov	r3, r0
 8004c7e:	4618      	mov	r0, r3
 8004c80:	3708      	adds	r7, #8
 8004c82:	46bd      	mov	sp, r7
 8004c84:	bd80      	pop	{r7, pc}

08004c86 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004c86:	b590      	push	{r4, r7, lr}
 8004c88:	b083      	sub	sp, #12
 8004c8a:	af00      	add	r7, sp, #0
 8004c8c:	7138      	strb	r0, [r7, #4]
 8004c8e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004c90:	6838      	ldr	r0, [r7, #0]
 8004c92:	f000 fe6e 	bl	8005972 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8004c96:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004c98:	4619      	mov	r1, r3
 8004c9a:	4620      	mov	r0, r4
 8004c9c:	f7ff ffe2 	bl	8004c64 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004ca0:	4603      	mov	r3, r0
    }
 8004ca2:	4618      	mov	r0, r3
 8004ca4:	370c      	adds	r7, #12
 8004ca6:	46bd      	mov	sp, r7
 8004ca8:	bd90      	pop	{r4, r7, pc}

08004caa <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004caa:	b590      	push	{r4, r7, lr}
 8004cac:	b083      	sub	sp, #12
 8004cae:	af00      	add	r7, sp, #0
 8004cb0:	7138      	strb	r0, [r7, #4]
 8004cb2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004cb4:	6838      	ldr	r0, [r7, #0]
 8004cb6:	f000 fe51 	bl	800595c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004cba:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004cbc:	4619      	mov	r1, r3
 8004cbe:	4620      	mov	r0, r4
 8004cc0:	f7ff ffe1 	bl	8004c86 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004cc4:	4603      	mov	r3, r0
    }
 8004cc6:	4618      	mov	r0, r3
 8004cc8:	370c      	adds	r7, #12
 8004cca:	46bd      	mov	sp, r7
 8004ccc:	bd90      	pop	{r4, r7, pc}

08004cce <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004cce:	b590      	push	{r4, r7, lr}
 8004cd0:	b083      	sub	sp, #12
 8004cd2:	af00      	add	r7, sp, #0
 8004cd4:	7138      	strb	r0, [r7, #4]
 8004cd6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004cd8:	6838      	ldr	r0, [r7, #0]
 8004cda:	f000 fe34 	bl	8005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004cde:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004ce0:	4619      	mov	r1, r3
 8004ce2:	4620      	mov	r0, r4
 8004ce4:	f7ff ffe1 	bl	8004caa <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004ce8:	4603      	mov	r3, r0
    }
 8004cea:	4618      	mov	r0, r3
 8004cec:	370c      	adds	r7, #12
 8004cee:	46bd      	mov	sp, r7
 8004cf0:	bd90      	pop	{r4, r7, pc}

08004cf2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004cf2:	b590      	push	{r4, r7, lr}
 8004cf4:	b083      	sub	sp, #12
 8004cf6:	af00      	add	r7, sp, #0
 8004cf8:	7138      	strb	r0, [r7, #4]
 8004cfa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004cfc:	6838      	ldr	r0, [r7, #0]
 8004cfe:	f000 fe17 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004d02:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004d04:	4619      	mov	r1, r3
 8004d06:	4620      	mov	r0, r4
 8004d08:	f7ff ffe1 	bl	8004cce <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004d0c:	4603      	mov	r3, r0
    }
 8004d0e:	4618      	mov	r0, r3
 8004d10:	370c      	adds	r7, #12
 8004d12:	46bd      	mov	sp, r7
 8004d14:	bd90      	pop	{r4, r7, pc}

08004d16 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004d16:	b590      	push	{r4, r7, lr}
 8004d18:	b083      	sub	sp, #12
 8004d1a:	af00      	add	r7, sp, #0
 8004d1c:	7138      	strb	r0, [r7, #4]
 8004d1e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004d20:	6838      	ldr	r0, [r7, #0]
 8004d22:	f000 fdfa 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8004d26:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004d28:	4619      	mov	r1, r3
 8004d2a:	4620      	mov	r0, r4
 8004d2c:	f7ff ffe1 	bl	8004cf2 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004d30:	4603      	mov	r3, r0
    }
 8004d32:	4618      	mov	r0, r3
 8004d34:	370c      	adds	r7, #12
 8004d36:	46bd      	mov	sp, r7
 8004d38:	bd90      	pop	{r4, r7, pc}

08004d3a <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004d3a:	b590      	push	{r4, r7, lr}
 8004d3c:	b083      	sub	sp, #12
 8004d3e:	af00      	add	r7, sp, #0
 8004d40:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004d42:	6878      	ldr	r0, [r7, #4]
 8004d44:	f000 fdde 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8004d48:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004d4a:	4619      	mov	r1, r3
 8004d4c:	4620      	mov	r0, r4
 8004d4e:	f7ff ffe2 	bl	8004d16 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004d52:	4603      	mov	r3, r0
    }
 8004d54:	4618      	mov	r0, r3
 8004d56:	370c      	adds	r7, #12
 8004d58:	46bd      	mov	sp, r7
 8004d5a:	bd90      	pop	{r4, r7, pc}

08004d5c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8004d5c:	b580      	push	{r7, lr}
 8004d5e:	b082      	sub	sp, #8
 8004d60:	af00      	add	r7, sp, #0
 8004d62:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8004d64:	6878      	ldr	r0, [r7, #4]
 8004d66:	f7ff fc6a 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8004d6a:	4603      	mov	r3, r0
 8004d6c:	2b05      	cmp	r3, #5
 8004d6e:	bf14      	ite	ne
 8004d70:	2301      	movne	r3, #1
 8004d72:	2300      	moveq	r3, #0
 8004d74:	b2db      	uxtb	r3, r3
 8004d76:	2b00      	cmp	r3, #0
 8004d78:	d002      	beq.n	8004d80 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8004d7a:	4805      	ldr	r0, [pc, #20]	; (8004d90 <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8004d7c:	f7ff fa24 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8004d80:	6878      	ldr	r0, [r7, #4]
 8004d82:	f7ff ffda 	bl	8004d3a <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8004d86:	4603      	mov	r3, r0
    }
 8004d88:	4618      	mov	r0, r3
 8004d8a:	3708      	adds	r7, #8
 8004d8c:	46bd      	mov	sp, r7
 8004d8e:	bd80      	pop	{r7, pc}
 8004d90:	0802495c 	.word	0x0802495c

08004d94 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8004d94:	b580      	push	{r7, lr}
 8004d96:	b082      	sub	sp, #8
 8004d98:	af00      	add	r7, sp, #0
 8004d9a:	7138      	strb	r0, [r7, #4]
 8004d9c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8004d9e:	6838      	ldr	r0, [r7, #0]
 8004da0:	f000 fe29 	bl	80059f6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004da4:	4603      	mov	r3, r0
 8004da6:	4618      	mov	r0, r3
 8004da8:	f000 fe30 	bl	8005a0c <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>
 8004dac:	4603      	mov	r3, r0
 8004dae:	4618      	mov	r0, r3
 8004db0:	3708      	adds	r7, #8
 8004db2:	46bd      	mov	sp, r7
 8004db4:	bd80      	pop	{r7, pc}

08004db6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8004db6:	b590      	push	{r4, r7, lr}
 8004db8:	b083      	sub	sp, #12
 8004dba:	af00      	add	r7, sp, #0
 8004dbc:	7138      	strb	r0, [r7, #4]
 8004dbe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8004dc0:	6838      	ldr	r0, [r7, #0]
 8004dc2:	f000 fe0d 	bl	80059e0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8004dc6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8004dc8:	4619      	mov	r1, r3
 8004dca:	4620      	mov	r0, r4
 8004dcc:	f7ff ffe2 	bl	8004d94 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004dd0:	4603      	mov	r3, r0
    }
 8004dd2:	4618      	mov	r0, r3
 8004dd4:	370c      	adds	r7, #12
 8004dd6:	46bd      	mov	sp, r7
 8004dd8:	bd90      	pop	{r4, r7, pc}

08004dda <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004dda:	b590      	push	{r4, r7, lr}
 8004ddc:	b083      	sub	sp, #12
 8004dde:	af00      	add	r7, sp, #0
 8004de0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004de2:	6878      	ldr	r0, [r7, #4]
 8004de4:	f000 fdf1 	bl	80059ca <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004de8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004dea:	4619      	mov	r1, r3
 8004dec:	4620      	mov	r0, r4
 8004dee:	f7ff ffe2 	bl	8004db6 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8004df2:	4603      	mov	r3, r0
    }
 8004df4:	4618      	mov	r0, r3
 8004df6:	370c      	adds	r7, #12
 8004df8:	46bd      	mov	sp, r7
 8004dfa:	bd90      	pop	{r4, r7, pc}

08004dfc <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 8004dfc:	b580      	push	{r7, lr}
 8004dfe:	b082      	sub	sp, #8
 8004e00:	af00      	add	r7, sp, #0
 8004e02:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8004e04:	6878      	ldr	r0, [r7, #4]
 8004e06:	f7ff fc67 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 8004e0a:	4603      	mov	r3, r0
 8004e0c:	2b01      	cmp	r3, #1
 8004e0e:	bf14      	ite	ne
 8004e10:	2301      	movne	r3, #1
 8004e12:	2300      	moveq	r3, #0
 8004e14:	b2db      	uxtb	r3, r3
 8004e16:	2b00      	cmp	r3, #0
 8004e18:	d002      	beq.n	8004e20 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8004e1a:	4805      	ldr	r0, [pc, #20]	; (8004e30 <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 8004e1c:	f7ff f9d4 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8004e20:	6878      	ldr	r0, [r7, #4]
 8004e22:	f7ff ffda 	bl	8004dda <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 8004e26:	4603      	mov	r3, r0
    }
 8004e28:	4618      	mov	r0, r3
 8004e2a:	3708      	adds	r7, #8
 8004e2c:	46bd      	mov	sp, r7
 8004e2e:	bd80      	pop	{r7, pc}
 8004e30:	0802495c 	.word	0x0802495c

08004e34 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8004e34:	b580      	push	{r7, lr}
 8004e36:	b082      	sub	sp, #8
 8004e38:	af00      	add	r7, sp, #0
 8004e3a:	7138      	strb	r0, [r7, #4]
 8004e3c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8004e3e:	6838      	ldr	r0, [r7, #0]
 8004e40:	f000 fdce 	bl	80059e0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8004e44:	4603      	mov	r3, r0
 8004e46:	4618      	mov	r0, r3
 8004e48:	f000 fdeb 	bl	8005a22 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>
 8004e4c:	4603      	mov	r3, r0
 8004e4e:	4618      	mov	r0, r3
 8004e50:	3708      	adds	r7, #8
 8004e52:	46bd      	mov	sp, r7
 8004e54:	bd80      	pop	{r7, pc}

08004e56 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8004e56:	b590      	push	{r4, r7, lr}
 8004e58:	b083      	sub	sp, #12
 8004e5a:	af00      	add	r7, sp, #0
 8004e5c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8004e5e:	6878      	ldr	r0, [r7, #4]
 8004e60:	f000 fdb3 	bl	80059ca <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8004e64:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8004e66:	4619      	mov	r1, r3
 8004e68:	4620      	mov	r0, r4
 8004e6a:	f7ff ffe3 	bl	8004e34 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEEDcSt16in_place_index_tILj0EEOT_>
 8004e6e:	4603      	mov	r3, r0
    }
 8004e70:	4618      	mov	r0, r3
 8004e72:	370c      	adds	r7, #12
 8004e74:	46bd      	mov	sp, r7
 8004e76:	bd90      	pop	{r4, r7, pc}

08004e78 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>:
    get(variant<_Types...>& __v)
 8004e78:	b580      	push	{r7, lr}
 8004e7a:	b082      	sub	sp, #8
 8004e7c:	af00      	add	r7, sp, #0
 8004e7e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8004e80:	6878      	ldr	r0, [r7, #4]
 8004e82:	f7ff fc29 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 8004e86:	4603      	mov	r3, r0
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	bf14      	ite	ne
 8004e8c:	2301      	movne	r3, #1
 8004e8e:	2300      	moveq	r3, #0
 8004e90:	b2db      	uxtb	r3, r3
 8004e92:	2b00      	cmp	r3, #0
 8004e94:	d002      	beq.n	8004e9c <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8004e96:	4805      	ldr	r0, [pc, #20]	; (8004eac <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_+0x34>)
 8004e98:	f7ff f996 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8004e9c:	6878      	ldr	r0, [r7, #4]
 8004e9e:	f7ff ffda 	bl	8004e56 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 8004ea2:	4603      	mov	r3, r0
    }
 8004ea4:	4618      	mov	r0, r3
 8004ea6:	3708      	adds	r7, #8
 8004ea8:	46bd      	mov	sp, r7
 8004eaa:	bd80      	pop	{r7, pc}
 8004eac:	0802495c 	.word	0x0802495c

08004eb0 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8004eb0:	b580      	push	{r7, lr}
 8004eb2:	b082      	sub	sp, #8
 8004eb4:	af00      	add	r7, sp, #0
 8004eb6:	6078      	str	r0, [r7, #4]
 8004eb8:	6878      	ldr	r0, [r7, #4]
 8004eba:	f000 fdbd 	bl	8005a38 <_ZNSaIP16Power_expressionED1Ev>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	4618      	mov	r0, r3
 8004ec2:	3708      	adds	r7, #8
 8004ec4:	46bd      	mov	sp, r7
 8004ec6:	bd80      	pop	{r7, pc}

08004ec8 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8004ec8:	b580      	push	{r7, lr}
 8004eca:	b082      	sub	sp, #8
 8004ecc:	af00      	add	r7, sp, #0
 8004ece:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	689a      	ldr	r2, [r3, #8]
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	681b      	ldr	r3, [r3, #0]
 8004edc:	1ad3      	subs	r3, r2, r3
 8004ede:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 8004ee0:	461a      	mov	r2, r3
 8004ee2:	6878      	ldr	r0, [r7, #4]
 8004ee4:	f000 fdb4 	bl	8005a50 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	4618      	mov	r0, r3
 8004eec:	f7ff ffe0 	bl	8004eb0 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implD1Ev>
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	4618      	mov	r0, r3
 8004ef4:	3708      	adds	r7, #8
 8004ef6:	46bd      	mov	sp, r7
 8004ef8:	bd80      	pop	{r7, pc}

08004efa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8004efa:	b480      	push	{r7}
 8004efc:	b083      	sub	sp, #12
 8004efe:	af00      	add	r7, sp, #0
 8004f00:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	4618      	mov	r0, r3
 8004f06:	370c      	adds	r7, #12
 8004f08:	46bd      	mov	sp, r7
 8004f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f0e:	4770      	bx	lr

08004f10 <_ZSt8_DestroyIPP16Power_expressionS1_EvT_S3_RSaIT0_E>:
	__traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8004f10:	b580      	push	{r7, lr}
 8004f12:	b084      	sub	sp, #16
 8004f14:	af00      	add	r7, sp, #0
 8004f16:	60f8      	str	r0, [r7, #12]
 8004f18:	60b9      	str	r1, [r7, #8]
 8004f1a:	607a      	str	r2, [r7, #4]
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
 8004f1c:	68b9      	ldr	r1, [r7, #8]
 8004f1e:	68f8      	ldr	r0, [r7, #12]
 8004f20:	f000 fda9 	bl	8005a76 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>
    }
 8004f24:	bf00      	nop
 8004f26:	3710      	adds	r7, #16
 8004f28:	46bd      	mov	sp, r7
 8004f2a:	bd80      	pop	{r7, pc}

08004f2c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8004f2c:	b580      	push	{r7, lr}
 8004f2e:	b082      	sub	sp, #8
 8004f30:	af00      	add	r7, sp, #0
 8004f32:	6078      	str	r0, [r7, #4]
 8004f34:	6878      	ldr	r0, [r7, #4]
 8004f36:	f000 fdab 	bl	8005a90 <_ZNSaI13mult_operatorED1Ev>
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	4618      	mov	r0, r3
 8004f3e:	3708      	adds	r7, #8
 8004f40:	46bd      	mov	sp, r7
 8004f42:	bd80      	pop	{r7, pc}

08004f44 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8004f44:	b580      	push	{r7, lr}
 8004f46:	b082      	sub	sp, #8
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	689a      	ldr	r2, [r3, #8]
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 8004f5a:	461a      	mov	r2, r3
 8004f5c:	6878      	ldr	r0, [r7, #4]
 8004f5e:	f000 fda3 	bl	8005aa8 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 8004f62:	687b      	ldr	r3, [r7, #4]
 8004f64:	4618      	mov	r0, r3
 8004f66:	f7ff ffe1 	bl	8004f2c <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implD1Ev>
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	4618      	mov	r0, r3
 8004f6e:	3708      	adds	r7, #8
 8004f70:	46bd      	mov	sp, r7
 8004f72:	bd80      	pop	{r7, pc}

08004f74 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8004f74:	b480      	push	{r7}
 8004f76:	b083      	sub	sp, #12
 8004f78:	af00      	add	r7, sp, #0
 8004f7a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	4618      	mov	r0, r3
 8004f80:	370c      	adds	r7, #12
 8004f82:	46bd      	mov	sp, r7
 8004f84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f88:	4770      	bx	lr

08004f8a <_ZSt8_DestroyIP13mult_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8004f8a:	b580      	push	{r7, lr}
 8004f8c:	b084      	sub	sp, #16
 8004f8e:	af00      	add	r7, sp, #0
 8004f90:	60f8      	str	r0, [r7, #12]
 8004f92:	60b9      	str	r1, [r7, #8]
 8004f94:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8004f96:	68b9      	ldr	r1, [r7, #8]
 8004f98:	68f8      	ldr	r0, [r7, #12]
 8004f9a:	f000 fd98 	bl	8005ace <_ZSt8_DestroyIP13mult_operatorEvT_S2_>
    }
 8004f9e:	bf00      	nop
 8004fa0:	3710      	adds	r7, #16
 8004fa2:	46bd      	mov	sp, r7
 8004fa4:	bd80      	pop	{r7, pc}

08004fa6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8004fa6:	b480      	push	{r7}
 8004fa8:	b083      	sub	sp, #12
 8004faa:	af00      	add	r7, sp, #0
 8004fac:	6078      	str	r0, [r7, #4]
 8004fae:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8004fb0:	683b      	ldr	r3, [r7, #0]
 8004fb2:	681a      	ldr	r2, [r3, #0]
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	601a      	str	r2, [r3, #0]
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	4618      	mov	r0, r3
 8004fbc:	370c      	adds	r7, #12
 8004fbe:	46bd      	mov	sp, r7
 8004fc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fc4:	4770      	bx	lr

08004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8004fc6:	b480      	push	{r7}
 8004fc8:	b083      	sub	sp, #12
 8004fca:	af00      	add	r7, sp, #0
 8004fcc:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	4618      	mov	r0, r3
 8004fd2:	370c      	adds	r7, #12
 8004fd4:	46bd      	mov	sp, r7
 8004fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fda:	4770      	bx	lr

08004fdc <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8004fdc:	b580      	push	{r7, lr}
 8004fde:	b082      	sub	sp, #8
 8004fe0:	af00      	add	r7, sp, #0
 8004fe2:	6078      	str	r0, [r7, #4]
 8004fe4:	6878      	ldr	r0, [r7, #4]
 8004fe6:	f000 fd7f 	bl	8005ae8 <_ZNSaIP19Multiply_expressionED1Ev>
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	4618      	mov	r0, r3
 8004fee:	3708      	adds	r7, #8
 8004ff0:	46bd      	mov	sp, r7
 8004ff2:	bd80      	pop	{r7, pc}

08004ff4 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8004ff4:	b580      	push	{r7, lr}
 8004ff6:	b082      	sub	sp, #8
 8004ff8:	af00      	add	r7, sp, #0
 8004ffa:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	689a      	ldr	r2, [r3, #8]
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	1ad3      	subs	r3, r2, r3
 800500a:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800500c:	461a      	mov	r2, r3
 800500e:	6878      	ldr	r0, [r7, #4]
 8005010:	f000 fd76 	bl	8005b00 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	4618      	mov	r0, r3
 8005018:	f7ff ffe0 	bl	8004fdc <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implD1Ev>
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	4618      	mov	r0, r3
 8005020:	3708      	adds	r7, #8
 8005022:	46bd      	mov	sp, r7
 8005024:	bd80      	pop	{r7, pc}

08005026 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8005026:	b480      	push	{r7}
 8005028:	b083      	sub	sp, #12
 800502a:	af00      	add	r7, sp, #0
 800502c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	4618      	mov	r0, r3
 8005032:	370c      	adds	r7, #12
 8005034:	46bd      	mov	sp, r7
 8005036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800503a:	4770      	bx	lr

0800503c <_ZSt8_DestroyIPP19Multiply_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800503c:	b580      	push	{r7, lr}
 800503e:	b084      	sub	sp, #16
 8005040:	af00      	add	r7, sp, #0
 8005042:	60f8      	str	r0, [r7, #12]
 8005044:	60b9      	str	r1, [r7, #8]
 8005046:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8005048:	68b9      	ldr	r1, [r7, #8]
 800504a:	68f8      	ldr	r0, [r7, #12]
 800504c:	f000 fd6b 	bl	8005b26 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>
    }
 8005050:	bf00      	nop
 8005052:	3710      	adds	r7, #16
 8005054:	46bd      	mov	sp, r7
 8005056:	bd80      	pop	{r7, pc}

08005058 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8005058:	b580      	push	{r7, lr}
 800505a:	b082      	sub	sp, #8
 800505c:	af00      	add	r7, sp, #0
 800505e:	6078      	str	r0, [r7, #4]
 8005060:	6878      	ldr	r0, [r7, #4]
 8005062:	f000 fd6d 	bl	8005b40 <_ZNSaI12sum_operatorED1Ev>
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	4618      	mov	r0, r3
 800506a:	3708      	adds	r7, #8
 800506c:	46bd      	mov	sp, r7
 800506e:	bd80      	pop	{r7, pc}

08005070 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8005070:	b580      	push	{r7, lr}
 8005072:	b082      	sub	sp, #8
 8005074:	af00      	add	r7, sp, #0
 8005076:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	689a      	ldr	r2, [r3, #8]
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	681b      	ldr	r3, [r3, #0]
 8005084:	1ad3      	subs	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 8005086:	461a      	mov	r2, r3
 8005088:	6878      	ldr	r0, [r7, #4]
 800508a:	f000 fd65 	bl	8005b58 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      }
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	4618      	mov	r0, r3
 8005092:	f7ff ffe1 	bl	8005058 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implD1Ev>
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	4618      	mov	r0, r3
 800509a:	3708      	adds	r7, #8
 800509c:	46bd      	mov	sp, r7
 800509e:	bd80      	pop	{r7, pc}

080050a0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 80050a0:	b480      	push	{r7}
 80050a2:	b083      	sub	sp, #12
 80050a4:	af00      	add	r7, sp, #0
 80050a6:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80050a8:	687b      	ldr	r3, [r7, #4]
 80050aa:	4618      	mov	r0, r3
 80050ac:	370c      	adds	r7, #12
 80050ae:	46bd      	mov	sp, r7
 80050b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050b4:	4770      	bx	lr

080050b6 <_ZSt8_DestroyIP12sum_operatorS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 80050b6:	b580      	push	{r7, lr}
 80050b8:	b084      	sub	sp, #16
 80050ba:	af00      	add	r7, sp, #0
 80050bc:	60f8      	str	r0, [r7, #12]
 80050be:	60b9      	str	r1, [r7, #8]
 80050c0:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 80050c2:	68b9      	ldr	r1, [r7, #8]
 80050c4:	68f8      	ldr	r0, [r7, #12]
 80050c6:	f000 fd5a 	bl	8005b7e <_ZSt8_DestroyIP12sum_operatorEvT_S2_>
    }
 80050ca:	bf00      	nop
 80050cc:	3710      	adds	r7, #16
 80050ce:	46bd      	mov	sp, r7
 80050d0:	bd80      	pop	{r7, pc}

080050d2 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 80050d2:	b480      	push	{r7}
 80050d4:	b083      	sub	sp, #12
 80050d6:	af00      	add	r7, sp, #0
 80050d8:	6078      	str	r0, [r7, #4]
 80050da:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 80050dc:	683b      	ldr	r3, [r7, #0]
 80050de:	681a      	ldr	r2, [r3, #0]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	601a      	str	r2, [r3, #0]
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	4618      	mov	r0, r3
 80050e8:	370c      	adds	r7, #12
 80050ea:	46bd      	mov	sp, r7
 80050ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050f0:	4770      	bx	lr

080050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80050f2:	b480      	push	{r7}
 80050f4:	b083      	sub	sp, #12
 80050f6:	af00      	add	r7, sp, #0
 80050f8:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	4618      	mov	r0, r3
 80050fe:	370c      	adds	r7, #12
 8005100:	46bd      	mov	sp, r7
 8005102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005106:	4770      	bx	lr

08005108 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8005108:	b580      	push	{r7, lr}
 800510a:	b082      	sub	sp, #8
 800510c:	af00      	add	r7, sp, #0
 800510e:	6078      	str	r0, [r7, #4]
 8005110:	6878      	ldr	r0, [r7, #4]
 8005112:	f000 fd41 	bl	8005b98 <_ZNSaIP18Compare_expressionED1Ev>
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	4618      	mov	r0, r3
 800511a:	3708      	adds	r7, #8
 800511c:	46bd      	mov	sp, r7
 800511e:	bd80      	pop	{r7, pc}

08005120 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8005120:	b580      	push	{r7, lr}
 8005122:	b082      	sub	sp, #8
 8005124:	af00      	add	r7, sp, #0
 8005126:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	689a      	ldr	r2, [r3, #8]
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	1ad3      	subs	r3, r2, r3
 8005136:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 8005138:	461a      	mov	r2, r3
 800513a:	6878      	ldr	r0, [r7, #4]
 800513c:	f000 fd38 	bl	8005bb0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	4618      	mov	r0, r3
 8005144:	f7ff ffe0 	bl	8005108 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implD1Ev>
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	4618      	mov	r0, r3
 800514c:	3708      	adds	r7, #8
 800514e:	46bd      	mov	sp, r7
 8005150:	bd80      	pop	{r7, pc}

08005152 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8005152:	b480      	push	{r7}
 8005154:	b083      	sub	sp, #12
 8005156:	af00      	add	r7, sp, #0
 8005158:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	4618      	mov	r0, r3
 800515e:	370c      	adds	r7, #12
 8005160:	46bd      	mov	sp, r7
 8005162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005166:	4770      	bx	lr

08005168 <_ZSt8_DestroyIPP18Compare_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8005168:	b580      	push	{r7, lr}
 800516a:	b084      	sub	sp, #16
 800516c:	af00      	add	r7, sp, #0
 800516e:	60f8      	str	r0, [r7, #12]
 8005170:	60b9      	str	r1, [r7, #8]
 8005172:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8005174:	68b9      	ldr	r1, [r7, #8]
 8005176:	68f8      	ldr	r0, [r7, #12]
 8005178:	f000 fd2d 	bl	8005bd6 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>
    }
 800517c:	bf00      	nop
 800517e:	3710      	adds	r7, #16
 8005180:	46bd      	mov	sp, r7
 8005182:	bd80      	pop	{r7, pc}

08005184 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8005184:	b480      	push	{r7}
 8005186:	b083      	sub	sp, #12
 8005188:	af00      	add	r7, sp, #0
 800518a:	6078      	str	r0, [r7, #4]
 800518c:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800518e:	683b      	ldr	r3, [r7, #0]
 8005190:	681a      	ldr	r2, [r3, #0]
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	601a      	str	r2, [r3, #0]
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	4618      	mov	r0, r3
 800519a:	370c      	adds	r7, #12
 800519c:	46bd      	mov	sp, r7
 800519e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051a2:	4770      	bx	lr

080051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 80051a4:	b480      	push	{r7}
 80051a6:	b083      	sub	sp, #12
 80051a8:	af00      	add	r7, sp, #0
 80051aa:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	4618      	mov	r0, r3
 80051b0:	370c      	adds	r7, #12
 80051b2:	46bd      	mov	sp, r7
 80051b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051b8:	4770      	bx	lr

080051ba <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 80051ba:	b580      	push	{r7, lr}
 80051bc:	b082      	sub	sp, #8
 80051be:	af00      	add	r7, sp, #0
 80051c0:	6078      	str	r0, [r7, #4]
 80051c2:	6878      	ldr	r0, [r7, #4]
 80051c4:	f000 fd14 	bl	8005bf0 <_ZNSaIP14And_expressionED1Ev>
 80051c8:	687b      	ldr	r3, [r7, #4]
 80051ca:	4618      	mov	r0, r3
 80051cc:	3708      	adds	r7, #8
 80051ce:	46bd      	mov	sp, r7
 80051d0:	bd80      	pop	{r7, pc}

080051d2 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 80051d2:	b580      	push	{r7, lr}
 80051d4:	b082      	sub	sp, #8
 80051d6:	af00      	add	r7, sp, #0
 80051d8:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	689a      	ldr	r2, [r3, #8]
 80051e2:	687b      	ldr	r3, [r7, #4]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	1ad3      	subs	r3, r2, r3
 80051e8:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 80051ea:	461a      	mov	r2, r3
 80051ec:	6878      	ldr	r0, [r7, #4]
 80051ee:	f000 fd0b 	bl	8005c08 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	4618      	mov	r0, r3
 80051f6:	f7ff ffe0 	bl	80051ba <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implD1Ev>
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	4618      	mov	r0, r3
 80051fe:	3708      	adds	r7, #8
 8005200:	46bd      	mov	sp, r7
 8005202:	bd80      	pop	{r7, pc}

08005204 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8005204:	b480      	push	{r7}
 8005206:	b083      	sub	sp, #12
 8005208:	af00      	add	r7, sp, #0
 800520a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	4618      	mov	r0, r3
 8005210:	370c      	adds	r7, #12
 8005212:	46bd      	mov	sp, r7
 8005214:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005218:	4770      	bx	lr

0800521a <_ZSt8_DestroyIPP14And_expressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800521a:	b580      	push	{r7, lr}
 800521c:	b084      	sub	sp, #16
 800521e:	af00      	add	r7, sp, #0
 8005220:	60f8      	str	r0, [r7, #12]
 8005222:	60b9      	str	r1, [r7, #8]
 8005224:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8005226:	68b9      	ldr	r1, [r7, #8]
 8005228:	68f8      	ldr	r0, [r7, #12]
 800522a:	f000 fd00 	bl	8005c2e <_ZSt8_DestroyIPP14And_expressionEvT_S3_>
    }
 800522e:	bf00      	nop
 8005230:	3710      	adds	r7, #16
 8005232:	46bd      	mov	sp, r7
 8005234:	bd80      	pop	{r7, pc}

08005236 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8005236:	b480      	push	{r7}
 8005238:	b083      	sub	sp, #12
 800523a:	af00      	add	r7, sp, #0
 800523c:	6078      	str	r0, [r7, #4]
 800523e:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8005240:	683b      	ldr	r3, [r7, #0]
 8005242:	681a      	ldr	r2, [r3, #0]
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	601a      	str	r2, [r3, #0]
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	4618      	mov	r0, r3
 800524c:	370c      	adds	r7, #12
 800524e:	46bd      	mov	sp, r7
 8005250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005254:	4770      	bx	lr

08005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8005256:	b480      	push	{r7}
 8005258:	b083      	sub	sp, #12
 800525a:	af00      	add	r7, sp, #0
 800525c:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800525e:	687b      	ldr	r3, [r7, #4]
 8005260:	4618      	mov	r0, r3
 8005262:	370c      	adds	r7, #12
 8005264:	46bd      	mov	sp, r7
 8005266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800526a:	4770      	bx	lr

0800526c <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800526c:	b480      	push	{r7}
 800526e:	b083      	sub	sp, #12
 8005270:	af00      	add	r7, sp, #0
 8005272:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8005274:	687b      	ldr	r3, [r7, #4]
    }
 8005276:	4618      	mov	r0, r3
 8005278:	370c      	adds	r7, #12
 800527a:	46bd      	mov	sp, r7
 800527c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005280:	4770      	bx	lr

08005282 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8005282:	b580      	push	{r7, lr}
 8005284:	b082      	sub	sp, #8
 8005286:	af00      	add	r7, sp, #0
 8005288:	7138      	strb	r0, [r7, #4]
 800528a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800528c:	6838      	ldr	r0, [r7, #0]
 800528e:	f000 fb44 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005292:	4603      	mov	r3, r0
 8005294:	4618      	mov	r0, r3
 8005296:	f000 fce2 	bl	8005c5e <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800529a:	4603      	mov	r3, r0
 800529c:	4618      	mov	r0, r3
 800529e:	3708      	adds	r7, #8
 80052a0:	46bd      	mov	sp, r7
 80052a2:	bd80      	pop	{r7, pc}

080052a4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80052a4:	b590      	push	{r4, r7, lr}
 80052a6:	b083      	sub	sp, #12
 80052a8:	af00      	add	r7, sp, #0
 80052aa:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80052ac:	6878      	ldr	r0, [r7, #4]
 80052ae:	f000 fb29 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80052b2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80052b4:	4619      	mov	r1, r3
 80052b6:	4620      	mov	r0, r4
 80052b8:	f7ff ffe3 	bl	8005282 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 80052bc:	4603      	mov	r3, r0
    }
 80052be:	4618      	mov	r0, r3
 80052c0:	370c      	adds	r7, #12
 80052c2:	46bd      	mov	sp, r7
 80052c4:	bd90      	pop	{r4, r7, pc}

080052c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80052c6:	b580      	push	{r7, lr}
 80052c8:	b082      	sub	sp, #8
 80052ca:	af00      	add	r7, sp, #0
 80052cc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80052ce:	6878      	ldr	r0, [r7, #4]
 80052d0:	f000 fb18 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80052d4:	4603      	mov	r3, r0
 80052d6:	4618      	mov	r0, r3
 80052d8:	f7ff ffe4 	bl	80052a4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 80052dc:	4603      	mov	r3, r0
	}
 80052de:	4618      	mov	r0, r3
 80052e0:	3708      	adds	r7, #8
 80052e2:	46bd      	mov	sp, r7
 80052e4:	bd80      	pop	{r7, pc}

080052e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80052e6:	b5b0      	push	{r4, r5, r7, lr}
 80052e8:	b082      	sub	sp, #8
 80052ea:	af00      	add	r7, sp, #0
 80052ec:	6078      	str	r0, [r7, #4]
 80052ee:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80052f0:	6878      	ldr	r0, [r7, #4]
 80052f2:	f000 fca9 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80052f6:	4604      	mov	r4, r0
 80052f8:	6838      	ldr	r0, [r7, #0]
 80052fa:	f000 fb03 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80052fe:	4603      	mov	r3, r0
 8005300:	4618      	mov	r0, r3
 8005302:	f7ff ffe0 	bl	80052c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESM_EEDcOT0_>
 8005306:	4603      	mov	r3, r0
 8005308:	4619      	mov	r1, r3
 800530a:	4620      	mov	r0, r4
 800530c:	f000 fcb2 	bl	8005c74 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8005310:	462b      	mov	r3, r5
      }
 8005312:	4618      	mov	r0, r3
 8005314:	3708      	adds	r7, #8
 8005316:	46bd      	mov	sp, r7
 8005318:	bdb0      	pop	{r4, r5, r7, pc}

0800531a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800531a:	b5b0      	push	{r4, r5, r7, lr}
 800531c:	b082      	sub	sp, #8
 800531e:	af00      	add	r7, sp, #0
 8005320:	6078      	str	r0, [r7, #4]
 8005322:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005324:	6878      	ldr	r0, [r7, #4]
 8005326:	f000 fc8f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800532a:	4604      	mov	r4, r0
 800532c:	6838      	ldr	r0, [r7, #0]
 800532e:	f000 fae9 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005332:	4603      	mov	r3, r0
 8005334:	4619      	mov	r1, r3
 8005336:	4620      	mov	r0, r4
 8005338:	f7ff ffd5 	bl	80052e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800533c:	462b      	mov	r3, r5
      }
 800533e:	4618      	mov	r0, r3
 8005340:	3708      	adds	r7, #8
 8005342:	46bd      	mov	sp, r7
 8005344:	bdb0      	pop	{r4, r5, r7, pc}

08005346 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005346:	b5b0      	push	{r4, r5, r7, lr}
 8005348:	b082      	sub	sp, #8
 800534a:	af00      	add	r7, sp, #0
 800534c:	6078      	str	r0, [r7, #4]
 800534e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005350:	6878      	ldr	r0, [r7, #4]
 8005352:	f000 fc79 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005356:	4604      	mov	r4, r0
 8005358:	6838      	ldr	r0, [r7, #0]
 800535a:	f000 fad3 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800535e:	4603      	mov	r3, r0
 8005360:	4619      	mov	r1, r3
 8005362:	4620      	mov	r0, r4
 8005364:	f7ff ffd9 	bl	800531a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005368:	462b      	mov	r3, r5
      }
 800536a:	4618      	mov	r0, r3
 800536c:	3708      	adds	r7, #8
 800536e:	46bd      	mov	sp, r7
 8005370:	bdb0      	pop	{r4, r5, r7, pc}

08005372 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8005372:	b580      	push	{r7, lr}
 8005374:	b082      	sub	sp, #8
 8005376:	af00      	add	r7, sp, #0
 8005378:	7138      	strb	r0, [r7, #4]
 800537a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800537c:	6838      	ldr	r0, [r7, #0]
 800537e:	f000 fad7 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005382:	4603      	mov	r3, r0
 8005384:	4618      	mov	r0, r3
 8005386:	f000 fc8c 	bl	8005ca2 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800538a:	4603      	mov	r3, r0
 800538c:	4618      	mov	r0, r3
 800538e:	3708      	adds	r7, #8
 8005390:	46bd      	mov	sp, r7
 8005392:	bd80      	pop	{r7, pc}

08005394 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8005394:	b590      	push	{r4, r7, lr}
 8005396:	b083      	sub	sp, #12
 8005398:	af00      	add	r7, sp, #0
 800539a:	7138      	strb	r0, [r7, #4]
 800539c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800539e:	6838      	ldr	r0, [r7, #0]
 80053a0:	f000 fabb 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80053a4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80053a6:	4619      	mov	r1, r3
 80053a8:	4620      	mov	r0, r4
 80053aa:	f7ff ffe2 	bl	8005372 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 80053ae:	4603      	mov	r3, r0
    }
 80053b0:	4618      	mov	r0, r3
 80053b2:	370c      	adds	r7, #12
 80053b4:	46bd      	mov	sp, r7
 80053b6:	bd90      	pop	{r4, r7, pc}

080053b8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80053b8:	b590      	push	{r4, r7, lr}
 80053ba:	b083      	sub	sp, #12
 80053bc:	af00      	add	r7, sp, #0
 80053be:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80053c0:	6878      	ldr	r0, [r7, #4]
 80053c2:	f000 fa9f 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80053c6:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80053c8:	4619      	mov	r1, r3
 80053ca:	4620      	mov	r0, r4
 80053cc:	f7ff ffe2 	bl	8005394 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80053d0:	4603      	mov	r3, r0
    }
 80053d2:	4618      	mov	r0, r3
 80053d4:	370c      	adds	r7, #12
 80053d6:	46bd      	mov	sp, r7
 80053d8:	bd90      	pop	{r4, r7, pc}

080053da <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80053da:	b580      	push	{r7, lr}
 80053dc:	b082      	sub	sp, #8
 80053de:	af00      	add	r7, sp, #0
 80053e0:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80053e2:	6878      	ldr	r0, [r7, #4]
 80053e4:	f000 fa8e 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80053e8:	4603      	mov	r3, r0
 80053ea:	4618      	mov	r0, r3
 80053ec:	f7ff ffe4 	bl	80053b8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 80053f0:	4603      	mov	r3, r0
	}
 80053f2:	4618      	mov	r0, r3
 80053f4:	3708      	adds	r7, #8
 80053f6:	46bd      	mov	sp, r7
 80053f8:	bd80      	pop	{r7, pc}

080053fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80053fa:	b5b0      	push	{r4, r5, r7, lr}
 80053fc:	b082      	sub	sp, #8
 80053fe:	af00      	add	r7, sp, #0
 8005400:	6078      	str	r0, [r7, #4]
 8005402:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005404:	6878      	ldr	r0, [r7, #4]
 8005406:	f000 fc1f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800540a:	4604      	mov	r4, r0
 800540c:	6838      	ldr	r0, [r7, #0]
 800540e:	f000 fa79 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005412:	4603      	mov	r3, r0
 8005414:	4618      	mov	r0, r3
 8005416:	f7ff ffe0 	bl	80053da <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESM_EEDcOT0_>
 800541a:	4603      	mov	r3, r0
 800541c:	4619      	mov	r1, r3
 800541e:	4620      	mov	r0, r4
 8005420:	f000 fc4a 	bl	8005cb8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8005424:	462b      	mov	r3, r5
      }
 8005426:	4618      	mov	r0, r3
 8005428:	3708      	adds	r7, #8
 800542a:	46bd      	mov	sp, r7
 800542c:	bdb0      	pop	{r4, r5, r7, pc}

0800542e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800542e:	b5b0      	push	{r4, r5, r7, lr}
 8005430:	b082      	sub	sp, #8
 8005432:	af00      	add	r7, sp, #0
 8005434:	6078      	str	r0, [r7, #4]
 8005436:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005438:	6878      	ldr	r0, [r7, #4]
 800543a:	f000 fc05 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800543e:	4604      	mov	r4, r0
 8005440:	6838      	ldr	r0, [r7, #0]
 8005442:	f000 fa5f 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005446:	4603      	mov	r3, r0
 8005448:	4619      	mov	r1, r3
 800544a:	4620      	mov	r0, r4
 800544c:	f7ff ffd5 	bl	80053fa <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005450:	462b      	mov	r3, r5
      }
 8005452:	4618      	mov	r0, r3
 8005454:	3708      	adds	r7, #8
 8005456:	46bd      	mov	sp, r7
 8005458:	bdb0      	pop	{r4, r5, r7, pc}

0800545a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800545a:	b5b0      	push	{r4, r5, r7, lr}
 800545c:	b082      	sub	sp, #8
 800545e:	af00      	add	r7, sp, #0
 8005460:	6078      	str	r0, [r7, #4]
 8005462:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005464:	6878      	ldr	r0, [r7, #4]
 8005466:	f000 fbef 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800546a:	4604      	mov	r4, r0
 800546c:	6838      	ldr	r0, [r7, #0]
 800546e:	f000 fa49 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005472:	4603      	mov	r3, r0
 8005474:	4619      	mov	r1, r3
 8005476:	4620      	mov	r0, r4
 8005478:	f7ff ffd9 	bl	800542e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800547c:	462b      	mov	r3, r5
      }
 800547e:	4618      	mov	r0, r3
 8005480:	3708      	adds	r7, #8
 8005482:	46bd      	mov	sp, r7
 8005484:	bdb0      	pop	{r4, r5, r7, pc}

08005486 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8005486:	b580      	push	{r7, lr}
 8005488:	b082      	sub	sp, #8
 800548a:	af00      	add	r7, sp, #0
 800548c:	7138      	strb	r0, [r7, #4]
 800548e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8005490:	6838      	ldr	r0, [r7, #0]
 8005492:	f000 fa58 	bl	8005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005496:	4603      	mov	r3, r0
 8005498:	4618      	mov	r0, r3
 800549a:	f000 fc24 	bl	8005ce6 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800549e:	4603      	mov	r3, r0
 80054a0:	4618      	mov	r0, r3
 80054a2:	3708      	adds	r7, #8
 80054a4:	46bd      	mov	sp, r7
 80054a6:	bd80      	pop	{r7, pc}

080054a8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80054a8:	b590      	push	{r4, r7, lr}
 80054aa:	b083      	sub	sp, #12
 80054ac:	af00      	add	r7, sp, #0
 80054ae:	7138      	strb	r0, [r7, #4]
 80054b0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80054b2:	6838      	ldr	r0, [r7, #0]
 80054b4:	f000 fa3c 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80054b8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80054ba:	4619      	mov	r1, r3
 80054bc:	4620      	mov	r0, r4
 80054be:	f7ff ffe2 	bl	8005486 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 80054c2:	4603      	mov	r3, r0
    }
 80054c4:	4618      	mov	r0, r3
 80054c6:	370c      	adds	r7, #12
 80054c8:	46bd      	mov	sp, r7
 80054ca:	bd90      	pop	{r4, r7, pc}

080054cc <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80054cc:	b590      	push	{r4, r7, lr}
 80054ce:	b083      	sub	sp, #12
 80054d0:	af00      	add	r7, sp, #0
 80054d2:	7138      	strb	r0, [r7, #4]
 80054d4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80054d6:	6838      	ldr	r0, [r7, #0]
 80054d8:	f000 fa1f 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80054dc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80054de:	4619      	mov	r1, r3
 80054e0:	4620      	mov	r0, r4
 80054e2:	f7ff ffe1 	bl	80054a8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80054e6:	4603      	mov	r3, r0
    }
 80054e8:	4618      	mov	r0, r3
 80054ea:	370c      	adds	r7, #12
 80054ec:	46bd      	mov	sp, r7
 80054ee:	bd90      	pop	{r4, r7, pc}

080054f0 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80054f0:	b590      	push	{r4, r7, lr}
 80054f2:	b083      	sub	sp, #12
 80054f4:	af00      	add	r7, sp, #0
 80054f6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80054f8:	6878      	ldr	r0, [r7, #4]
 80054fa:	f000 fa03 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80054fe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8005500:	4619      	mov	r1, r3
 8005502:	4620      	mov	r0, r4
 8005504:	f7ff ffe2 	bl	80054cc <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8005508:	4603      	mov	r3, r0
    }
 800550a:	4618      	mov	r0, r3
 800550c:	370c      	adds	r7, #12
 800550e:	46bd      	mov	sp, r7
 8005510:	bd90      	pop	{r4, r7, pc}

08005512 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8005512:	b580      	push	{r7, lr}
 8005514:	b082      	sub	sp, #8
 8005516:	af00      	add	r7, sp, #0
 8005518:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800551a:	6878      	ldr	r0, [r7, #4]
 800551c:	f000 f9f2 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005520:	4603      	mov	r3, r0
 8005522:	4618      	mov	r0, r3
 8005524:	f7ff ffe4 	bl	80054f0 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8005528:	4603      	mov	r3, r0
	}
 800552a:	4618      	mov	r0, r3
 800552c:	3708      	adds	r7, #8
 800552e:	46bd      	mov	sp, r7
 8005530:	bd80      	pop	{r7, pc}

08005532 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8005532:	b5b0      	push	{r4, r5, r7, lr}
 8005534:	b082      	sub	sp, #8
 8005536:	af00      	add	r7, sp, #0
 8005538:	6078      	str	r0, [r7, #4]
 800553a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800553c:	6878      	ldr	r0, [r7, #4]
 800553e:	f000 fb83 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005542:	4604      	mov	r4, r0
 8005544:	6838      	ldr	r0, [r7, #0]
 8005546:	f000 f9dd 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800554a:	4603      	mov	r3, r0
 800554c:	4618      	mov	r0, r3
 800554e:	f7ff ffe0 	bl	8005512 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESM_EEDcOT0_>
 8005552:	4603      	mov	r3, r0
 8005554:	4619      	mov	r1, r3
 8005556:	4620      	mov	r0, r4
 8005558:	f000 fbd0 	bl	8005cfc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 800555c:	462b      	mov	r3, r5
      }
 800555e:	4618      	mov	r0, r3
 8005560:	3708      	adds	r7, #8
 8005562:	46bd      	mov	sp, r7
 8005564:	bdb0      	pop	{r4, r5, r7, pc}

08005566 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005566:	b5b0      	push	{r4, r5, r7, lr}
 8005568:	b082      	sub	sp, #8
 800556a:	af00      	add	r7, sp, #0
 800556c:	6078      	str	r0, [r7, #4]
 800556e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005570:	6878      	ldr	r0, [r7, #4]
 8005572:	f000 fb69 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005576:	4604      	mov	r4, r0
 8005578:	6838      	ldr	r0, [r7, #0]
 800557a:	f000 f9c3 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800557e:	4603      	mov	r3, r0
 8005580:	4619      	mov	r1, r3
 8005582:	4620      	mov	r0, r4
 8005584:	f7ff ffd5 	bl	8005532 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005588:	462b      	mov	r3, r5
      }
 800558a:	4618      	mov	r0, r3
 800558c:	3708      	adds	r7, #8
 800558e:	46bd      	mov	sp, r7
 8005590:	bdb0      	pop	{r4, r5, r7, pc}

08005592 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005592:	b5b0      	push	{r4, r5, r7, lr}
 8005594:	b082      	sub	sp, #8
 8005596:	af00      	add	r7, sp, #0
 8005598:	6078      	str	r0, [r7, #4]
 800559a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800559c:	6878      	ldr	r0, [r7, #4]
 800559e:	f000 fb53 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80055a2:	4604      	mov	r4, r0
 80055a4:	6838      	ldr	r0, [r7, #0]
 80055a6:	f000 f9ad 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80055aa:	4603      	mov	r3, r0
 80055ac:	4619      	mov	r1, r3
 80055ae:	4620      	mov	r0, r4
 80055b0:	f7ff ffd9 	bl	8005566 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80055b4:	462b      	mov	r3, r5
      }
 80055b6:	4618      	mov	r0, r3
 80055b8:	3708      	adds	r7, #8
 80055ba:	46bd      	mov	sp, r7
 80055bc:	bdb0      	pop	{r4, r5, r7, pc}

080055be <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80055be:	b580      	push	{r7, lr}
 80055c0:	b082      	sub	sp, #8
 80055c2:	af00      	add	r7, sp, #0
 80055c4:	7138      	strb	r0, [r7, #4]
 80055c6:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80055c8:	6838      	ldr	r0, [r7, #0]
 80055ca:	f000 f9c7 	bl	800595c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80055ce:	4603      	mov	r3, r0
 80055d0:	4618      	mov	r0, r3
 80055d2:	f000 fbaa 	bl	8005d2a <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 80055d6:	4603      	mov	r3, r0
 80055d8:	4618      	mov	r0, r3
 80055da:	3708      	adds	r7, #8
 80055dc:	46bd      	mov	sp, r7
 80055de:	bd80      	pop	{r7, pc}

080055e0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80055e0:	b590      	push	{r4, r7, lr}
 80055e2:	b083      	sub	sp, #12
 80055e4:	af00      	add	r7, sp, #0
 80055e6:	7138      	strb	r0, [r7, #4]
 80055e8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80055ea:	6838      	ldr	r0, [r7, #0]
 80055ec:	f000 f9ab 	bl	8005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 80055f0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80055f2:	4619      	mov	r1, r3
 80055f4:	4620      	mov	r0, r4
 80055f6:	f7ff ffe2 	bl	80055be <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tILj0EEOT_>
 80055fa:	4603      	mov	r3, r0
    }
 80055fc:	4618      	mov	r0, r3
 80055fe:	370c      	adds	r7, #12
 8005600:	46bd      	mov	sp, r7
 8005602:	bd90      	pop	{r4, r7, pc}

08005604 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8005604:	b590      	push	{r4, r7, lr}
 8005606:	b083      	sub	sp, #12
 8005608:	af00      	add	r7, sp, #0
 800560a:	7138      	strb	r0, [r7, #4]
 800560c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800560e:	6838      	ldr	r0, [r7, #0]
 8005610:	f000 f98e 	bl	8005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005614:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8005616:	4619      	mov	r1, r3
 8005618:	4620      	mov	r0, r4
 800561a:	f7ff ffe1 	bl	80055e0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800561e:	4603      	mov	r3, r0
    }
 8005620:	4618      	mov	r0, r3
 8005622:	370c      	adds	r7, #12
 8005624:	46bd      	mov	sp, r7
 8005626:	bd90      	pop	{r4, r7, pc}

08005628 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8005628:	b590      	push	{r4, r7, lr}
 800562a:	b083      	sub	sp, #12
 800562c:	af00      	add	r7, sp, #0
 800562e:	7138      	strb	r0, [r7, #4]
 8005630:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8005632:	6838      	ldr	r0, [r7, #0]
 8005634:	f000 f971 	bl	800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>
 8005638:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800563a:	4619      	mov	r1, r3
 800563c:	4620      	mov	r0, r4
 800563e:	f7ff ffe1 	bl	8005604 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8005642:	4603      	mov	r3, r0
    }
 8005644:	4618      	mov	r0, r3
 8005646:	370c      	adds	r7, #12
 8005648:	46bd      	mov	sp, r7
 800564a:	bd90      	pop	{r4, r7, pc}

0800564c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800564c:	b590      	push	{r4, r7, lr}
 800564e:	b083      	sub	sp, #12
 8005650:	af00      	add	r7, sp, #0
 8005652:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8005654:	6878      	ldr	r0, [r7, #4]
 8005656:	f000 f955 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800565a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800565c:	4619      	mov	r1, r3
 800565e:	4620      	mov	r0, r4
 8005660:	f7ff ffe2 	bl	8005628 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8005664:	4603      	mov	r3, r0
    }
 8005666:	4618      	mov	r0, r3
 8005668:	370c      	adds	r7, #12
 800566a:	46bd      	mov	sp, r7
 800566c:	bd90      	pop	{r4, r7, pc}

0800566e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800566e:	b580      	push	{r7, lr}
 8005670:	b082      	sub	sp, #8
 8005672:	af00      	add	r7, sp, #0
 8005674:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005676:	6878      	ldr	r0, [r7, #4]
 8005678:	f000 f944 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800567c:	4603      	mov	r3, r0
 800567e:	4618      	mov	r0, r3
 8005680:	f7ff ffe4 	bl	800564c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8005684:	4603      	mov	r3, r0
	}
 8005686:	4618      	mov	r0, r3
 8005688:	3708      	adds	r7, #8
 800568a:	46bd      	mov	sp, r7
 800568c:	bd80      	pop	{r7, pc}

0800568e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800568e:	b5b0      	push	{r4, r5, r7, lr}
 8005690:	b082      	sub	sp, #8
 8005692:	af00      	add	r7, sp, #0
 8005694:	6078      	str	r0, [r7, #4]
 8005696:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005698:	6878      	ldr	r0, [r7, #4]
 800569a:	f000 fad5 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800569e:	4604      	mov	r4, r0
 80056a0:	6838      	ldr	r0, [r7, #0]
 80056a2:	f000 f92f 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80056a6:	4603      	mov	r3, r0
 80056a8:	4618      	mov	r0, r3
 80056aa:	f7ff ffe0 	bl	800566e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESM_EEDcOT0_>
 80056ae:	4603      	mov	r3, r0
 80056b0:	4619      	mov	r1, r3
 80056b2:	4620      	mov	r0, r4
 80056b4:	f000 fb46 	bl	8005d44 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 80056b8:	462b      	mov	r3, r5
      }
 80056ba:	4618      	mov	r0, r3
 80056bc:	3708      	adds	r7, #8
 80056be:	46bd      	mov	sp, r7
 80056c0:	bdb0      	pop	{r4, r5, r7, pc}

080056c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80056c2:	b5b0      	push	{r4, r5, r7, lr}
 80056c4:	b082      	sub	sp, #8
 80056c6:	af00      	add	r7, sp, #0
 80056c8:	6078      	str	r0, [r7, #4]
 80056ca:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80056cc:	6878      	ldr	r0, [r7, #4]
 80056ce:	f000 fabb 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80056d2:	4604      	mov	r4, r0
 80056d4:	6838      	ldr	r0, [r7, #0]
 80056d6:	f000 f915 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80056da:	4603      	mov	r3, r0
 80056dc:	4619      	mov	r1, r3
 80056de:	4620      	mov	r0, r4
 80056e0:	f7ff ffd5 	bl	800568e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80056e4:	462b      	mov	r3, r5
      }
 80056e6:	4618      	mov	r0, r3
 80056e8:	3708      	adds	r7, #8
 80056ea:	46bd      	mov	sp, r7
 80056ec:	bdb0      	pop	{r4, r5, r7, pc}

080056ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80056ee:	b5b0      	push	{r4, r5, r7, lr}
 80056f0:	b082      	sub	sp, #8
 80056f2:	af00      	add	r7, sp, #0
 80056f4:	6078      	str	r0, [r7, #4]
 80056f6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80056f8:	6878      	ldr	r0, [r7, #4]
 80056fa:	f000 faa5 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80056fe:	4604      	mov	r4, r0
 8005700:	6838      	ldr	r0, [r7, #0]
 8005702:	f000 f8ff 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005706:	4603      	mov	r3, r0
 8005708:	4619      	mov	r1, r3
 800570a:	4620      	mov	r0, r4
 800570c:	f7ff ffd9 	bl	80056c2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005710:	462b      	mov	r3, r5
      }
 8005712:	4618      	mov	r0, r3
 8005714:	3708      	adds	r7, #8
 8005716:	46bd      	mov	sp, r7
 8005718:	bdb0      	pop	{r4, r5, r7, pc}

0800571a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800571a:	b580      	push	{r7, lr}
 800571c:	b082      	sub	sp, #8
 800571e:	af00      	add	r7, sp, #0
 8005720:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8005722:	6878      	ldr	r0, [r7, #4]
 8005724:	f000 f8ee 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005728:	4603      	mov	r3, r0
 800572a:	4618      	mov	r0, r3
 800572c:	f7ff fa6d 	bl	8004c0a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8005730:	4603      	mov	r3, r0
	}
 8005732:	4618      	mov	r0, r3
 8005734:	3708      	adds	r7, #8
 8005736:	46bd      	mov	sp, r7
 8005738:	bd80      	pop	{r7, pc}

0800573a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800573a:	b5b0      	push	{r4, r5, r7, lr}
 800573c:	b082      	sub	sp, #8
 800573e:	af00      	add	r7, sp, #0
 8005740:	6078      	str	r0, [r7, #4]
 8005742:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8005744:	6878      	ldr	r0, [r7, #4]
 8005746:	f000 fa7f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800574a:	4604      	mov	r4, r0
 800574c:	6838      	ldr	r0, [r7, #0]
 800574e:	f000 f8d9 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005752:	4603      	mov	r3, r0
 8005754:	4618      	mov	r0, r3
 8005756:	f7ff ffe0 	bl	800571a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESM_EEDcOT0_>
 800575a:	4603      	mov	r3, r0
 800575c:	4619      	mov	r1, r3
 800575e:	4620      	mov	r0, r4
 8005760:	f000 fb07 	bl	8005d72 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8005764:	462b      	mov	r3, r5
      }
 8005766:	4618      	mov	r0, r3
 8005768:	3708      	adds	r7, #8
 800576a:	46bd      	mov	sp, r7
 800576c:	bdb0      	pop	{r4, r5, r7, pc}

0800576e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800576e:	b5b0      	push	{r4, r5, r7, lr}
 8005770:	b082      	sub	sp, #8
 8005772:	af00      	add	r7, sp, #0
 8005774:	6078      	str	r0, [r7, #4]
 8005776:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005778:	6878      	ldr	r0, [r7, #4]
 800577a:	f000 fa65 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800577e:	4604      	mov	r4, r0
 8005780:	6838      	ldr	r0, [r7, #0]
 8005782:	f000 f8bf 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005786:	4603      	mov	r3, r0
 8005788:	4619      	mov	r1, r3
 800578a:	4620      	mov	r0, r4
 800578c:	f7ff ffd5 	bl	800573a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005790:	462b      	mov	r3, r5
      }
 8005792:	4618      	mov	r0, r3
 8005794:	3708      	adds	r7, #8
 8005796:	46bd      	mov	sp, r7
 8005798:	bdb0      	pop	{r4, r5, r7, pc}

0800579a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800579a:	b5b0      	push	{r4, r5, r7, lr}
 800579c:	b082      	sub	sp, #8
 800579e:	af00      	add	r7, sp, #0
 80057a0:	6078      	str	r0, [r7, #4]
 80057a2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80057a4:	6878      	ldr	r0, [r7, #4]
 80057a6:	f000 fa4f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80057aa:	4604      	mov	r4, r0
 80057ac:	6838      	ldr	r0, [r7, #0]
 80057ae:	f000 f8a9 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80057b2:	4603      	mov	r3, r0
 80057b4:	4619      	mov	r1, r3
 80057b6:	4620      	mov	r0, r4
 80057b8:	f7ff ffd9 	bl	800576e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 80057bc:	462b      	mov	r3, r5
      }
 80057be:	4618      	mov	r0, r3
 80057c0:	3708      	adds	r7, #8
 80057c2:	46bd      	mov	sp, r7
 80057c4:	bdb0      	pop	{r4, r5, r7, pc}

080057c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80057c6:	b580      	push	{r7, lr}
 80057c8:	b082      	sub	sp, #8
 80057ca:	af00      	add	r7, sp, #0
 80057cc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80057ce:	6878      	ldr	r0, [r7, #4]
 80057d0:	f000 f898 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80057d4:	4603      	mov	r3, r0
 80057d6:	4618      	mov	r0, r3
 80057d8:	f7ff faaf 	bl	8004d3a <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 80057dc:	4603      	mov	r3, r0
	}
 80057de:	4618      	mov	r0, r3
 80057e0:	3708      	adds	r7, #8
 80057e2:	46bd      	mov	sp, r7
 80057e4:	bd80      	pop	{r7, pc}

080057e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80057e6:	b5b0      	push	{r4, r5, r7, lr}
 80057e8:	b082      	sub	sp, #8
 80057ea:	af00      	add	r7, sp, #0
 80057ec:	6078      	str	r0, [r7, #4]
 80057ee:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80057f0:	6878      	ldr	r0, [r7, #4]
 80057f2:	f000 fa29 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80057f6:	4604      	mov	r4, r0
 80057f8:	6838      	ldr	r0, [r7, #0]
 80057fa:	f000 f883 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80057fe:	4603      	mov	r3, r0
 8005800:	4618      	mov	r0, r3
 8005802:	f7ff ffe0 	bl	80057c6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESM_EEDcOT0_>
 8005806:	4603      	mov	r3, r0
 8005808:	4619      	mov	r1, r3
 800580a:	4620      	mov	r0, r4
 800580c:	f000 fac8 	bl	8005da0 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>
		std::forward<_Variants>(__vars))...);
 8005810:	462b      	mov	r3, r5
      }
 8005812:	4618      	mov	r0, r3
 8005814:	3708      	adds	r7, #8
 8005816:	46bd      	mov	sp, r7
 8005818:	bdb0      	pop	{r4, r5, r7, pc}

0800581a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800581a:	b5b0      	push	{r4, r5, r7, lr}
 800581c:	b082      	sub	sp, #8
 800581e:	af00      	add	r7, sp, #0
 8005820:	6078      	str	r0, [r7, #4]
 8005822:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8005824:	6878      	ldr	r0, [r7, #4]
 8005826:	f000 fa0f 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800582a:	4604      	mov	r4, r0
 800582c:	6838      	ldr	r0, [r7, #0]
 800582e:	f000 f869 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 8005832:	4603      	mov	r3, r0
 8005834:	4619      	mov	r1, r3
 8005836:	4620      	mov	r0, r4
 8005838:	f7ff ffd5 	bl	80057e6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 800583c:	462b      	mov	r3, r5
      }
 800583e:	4618      	mov	r0, r3
 8005840:	3708      	adds	r7, #8
 8005842:	46bd      	mov	sp, r7
 8005844:	bdb0      	pop	{r4, r5, r7, pc}

08005846 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESJ_SM_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8005846:	b5b0      	push	{r4, r5, r7, lr}
 8005848:	b082      	sub	sp, #8
 800584a:	af00      	add	r7, sp, #0
 800584c:	6078      	str	r0, [r7, #4]
 800584e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8005850:	6878      	ldr	r0, [r7, #4]
 8005852:	f000 f9f9 	bl	8005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005856:	4604      	mov	r4, r0
 8005858:	6838      	ldr	r0, [r7, #0]
 800585a:	f000 f853 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 800585e:	4603      	mov	r3, r0
 8005860:	4619      	mov	r1, r3
 8005862:	4620      	mov	r0, r4
 8005864:	f7ff ffd9 	bl	800581a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifSA_SC_SE_EEEJEEESt5tupleIJSM_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESJ_SM_>
				   std::forward<_Variants>(__vars)...);
 8005868:	462b      	mov	r3, r5
      }
 800586a:	4618      	mov	r0, r3
 800586c:	3708      	adds	r7, #8
 800586e:	46bd      	mov	sp, r7
 8005870:	bdb0      	pop	{r4, r5, r7, pc}

08005872 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8005872:	b580      	push	{r7, lr}
 8005874:	b082      	sub	sp, #8
 8005876:	af00      	add	r7, sp, #0
 8005878:	6078      	str	r0, [r7, #4]
 800587a:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800587c:	683b      	ldr	r3, [r7, #0]
 800587e:	009b      	lsls	r3, r3, #2
 8005880:	687a      	ldr	r2, [r7, #4]
 8005882:	4413      	add	r3, r2
 8005884:	4618      	mov	r0, r3
 8005886:	f000 faa2 	bl	8005dce <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>
 800588a:	4603      	mov	r3, r0
	}
 800588c:	4618      	mov	r0, r3
 800588e:	3708      	adds	r7, #8
 8005890:	46bd      	mov	sp, r7
 8005892:	bd80      	pop	{r7, pc}

08005894 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>:

  template<bool __use_index,
	   bool __same_return_types,
	   typename _Visitor, typename... _Variants>
    constexpr decltype(auto)
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8005894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005896:	b085      	sub	sp, #20
 8005898:	af00      	add	r7, sp, #0
 800589a:	6078      	str	r0, [r7, #4]
 800589c:	6039      	str	r1, [r7, #0]

      using _Result_type = typename std::conditional_t<__use_index,
	__detail::__variant::__variant_idx_cookie,
	_Deduced_type>::type;

      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800589e:	4b0f      	ldr	r3, [pc, #60]	; (80058dc <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_+0x48>)
 80058a0:	60fb      	str	r3, [r7, #12]
	__same_return_types,
	_Result_type, _Visitor&&, _Variants&&...>::_S_vtable;

      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80058a2:	6838      	ldr	r0, [r7, #0]
 80058a4:	f7fe fecb 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 80058a8:	4603      	mov	r3, r0
 80058aa:	4619      	mov	r1, r3
 80058ac:	68f8      	ldr	r0, [r7, #12]
 80058ae:	f7ff ffe0 	bl	8005872 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJLj6EEE9_M_accessIJEEERKSN_jDpT_>
 80058b2:	4603      	mov	r3, r0
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80058b8:	68bc      	ldr	r4, [r7, #8]
 80058ba:	6878      	ldr	r0, [r7, #4]
 80058bc:	f000 fa92 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80058c0:	4605      	mov	r5, r0
 80058c2:	6838      	ldr	r0, [r7, #0]
 80058c4:	f000 f81e 	bl	8005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>
 80058c8:	4603      	mov	r3, r0
 80058ca:	4619      	mov	r1, r3
 80058cc:	4628      	mov	r0, r5
 80058ce:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80058d0:	4633      	mov	r3, r6
    }
 80058d2:	4618      	mov	r0, r3
 80058d4:	3714      	adds	r7, #20
 80058d6:	46bd      	mov	sp, r7
 80058d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80058da:	bf00      	nop
 80058dc:	080251f8 	.word	0x080251f8

080058e0 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 80058e0:	b580      	push	{r7, lr}
 80058e2:	b084      	sub	sp, #16
 80058e4:	af00      	add	r7, sp, #0
 80058e6:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 80058e8:	6878      	ldr	r0, [r7, #4]
 80058ea:	f7ff fcbf 	bl	800526c <_ZSt14__variant_castIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callERNSt8__detail9__variant16_Variant_storageILb0EJbifS5_S7_S9_EEEEDcOT0_>
 80058ee:	4602      	mov	r2, r0
 80058f0:	f107 030c 	add.w	r3, r7, #12
 80058f4:	4611      	mov	r1, r2
 80058f6:	4618      	mov	r0, r3
 80058f8:	f7ff ffcc 	bl	8005894 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSt7variantIJbifS8_SA_SC_EEEEDcOT1_DpOT2_>
      }
 80058fc:	bf00      	nop
 80058fe:	3710      	adds	r7, #16
 8005900:	46bd      	mov	sp, r7
 8005902:	bd80      	pop	{r7, pc}

08005904 <_ZSt7forwardIRSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005904:	b480      	push	{r7}
 8005906:	b083      	sub	sp, #12
 8005908:	af00      	add	r7, sp, #0
 800590a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	4618      	mov	r0, r3
 8005910:	370c      	adds	r7, #12
 8005912:	46bd      	mov	sp, r7
 8005914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005918:	4770      	bx	lr

0800591a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800591a:	b480      	push	{r7}
 800591c:	b083      	sub	sp, #12
 800591e:	af00      	add	r7, sp, #0
 8005920:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	4618      	mov	r0, r3
 8005926:	370c      	adds	r7, #12
 8005928:	46bd      	mov	sp, r7
 800592a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800592e:	4770      	bx	lr

08005930 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005930:	b480      	push	{r7}
 8005932:	b083      	sub	sp, #12
 8005934:	af00      	add	r7, sp, #0
 8005936:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	4618      	mov	r0, r3
 800593c:	370c      	adds	r7, #12
 800593e:	46bd      	mov	sp, r7
 8005940:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005944:	4770      	bx	lr

08005946 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005946:	b480      	push	{r7}
 8005948:	b083      	sub	sp, #12
 800594a:	af00      	add	r7, sp, #0
 800594c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800594e:	687b      	ldr	r3, [r7, #4]
 8005950:	4618      	mov	r0, r3
 8005952:	370c      	adds	r7, #12
 8005954:	46bd      	mov	sp, r7
 8005956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800595a:	4770      	bx	lr

0800595c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800595c:	b480      	push	{r7}
 800595e:	b083      	sub	sp, #12
 8005960:	af00      	add	r7, sp, #0
 8005962:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	4618      	mov	r0, r3
 8005968:	370c      	adds	r7, #12
 800596a:	46bd      	mov	sp, r7
 800596c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005970:	4770      	bx	lr

08005972 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP8VariableP13Function_callEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005972:	b480      	push	{r7}
 8005974:	b083      	sub	sp, #12
 8005976:	af00      	add	r7, sp, #0
 8005978:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	4618      	mov	r0, r3
 800597e:	370c      	adds	r7, #12
 8005980:	46bd      	mov	sp, r7
 8005982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005986:	4770      	bx	lr

08005988 <_ZNRSt8__detail9__variant14_UninitializedIP8VariableLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005988:	b480      	push	{r7}
 800598a:	b083      	sub	sp, #12
 800598c:	af00      	add	r7, sp, #0
 800598e:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	4618      	mov	r0, r3
 8005994:	370c      	adds	r7, #12
 8005996:	46bd      	mov	sp, r7
 8005998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800599c:	4770      	bx	lr

0800599e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800599e:	b480      	push	{r7}
 80059a0:	b083      	sub	sp, #12
 80059a2:	af00      	add	r7, sp, #0
 80059a4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	4618      	mov	r0, r3
 80059aa:	370c      	adds	r7, #12
 80059ac:	46bd      	mov	sp, r7
 80059ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059b2:	4770      	bx	lr

080059b4 <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 80059b4:	b480      	push	{r7}
 80059b6:	b083      	sub	sp, #12
 80059b8:	af00      	add	r7, sp, #0
 80059ba:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	4618      	mov	r0, r3
 80059c0:	370c      	adds	r7, #12
 80059c2:	46bd      	mov	sp, r7
 80059c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059c8:	4770      	bx	lr

080059ca <_ZSt7forwardIRSt7variantIJP17Primal_expressionP10ExpressionEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80059ca:	b480      	push	{r7}
 80059cc:	b083      	sub	sp, #12
 80059ce:	af00      	add	r7, sp, #0
 80059d0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	4618      	mov	r0, r3
 80059d6:	370c      	adds	r7, #12
 80059d8:	46bd      	mov	sp, r7
 80059da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059de:	4770      	bx	lr

080059e0 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80059e0:	b480      	push	{r7}
 80059e2:	b083      	sub	sp, #12
 80059e4:	af00      	add	r7, sp, #0
 80059e6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80059e8:	687b      	ldr	r3, [r7, #4]
 80059ea:	4618      	mov	r0, r3
 80059ec:	370c      	adds	r7, #12
 80059ee:	46bd      	mov	sp, r7
 80059f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059f4:	4770      	bx	lr

080059f6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10ExpressionEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80059f6:	b480      	push	{r7}
 80059f8:	b083      	sub	sp, #12
 80059fa:	af00      	add	r7, sp, #0
 80059fc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	4618      	mov	r0, r3
 8005a02:	370c      	adds	r7, #12
 8005a04:	46bd      	mov	sp, r7
 8005a06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a0a:	4770      	bx	lr

08005a0c <_ZNRSt8__detail9__variant14_UninitializedIP10ExpressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005a0c:	b480      	push	{r7}
 8005a0e:	b083      	sub	sp, #12
 8005a10:	af00      	add	r7, sp, #0
 8005a12:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	4618      	mov	r0, r3
 8005a18:	370c      	adds	r7, #12
 8005a1a:	46bd      	mov	sp, r7
 8005a1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a20:	4770      	bx	lr

08005a22 <_ZNRSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005a22:	b480      	push	{r7}
 8005a24:	b083      	sub	sp, #12
 8005a26:	af00      	add	r7, sp, #0
 8005a28:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005a2a:	687b      	ldr	r3, [r7, #4]
 8005a2c:	4618      	mov	r0, r3
 8005a2e:	370c      	adds	r7, #12
 8005a30:	46bd      	mov	sp, r7
 8005a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a36:	4770      	bx	lr

08005a38 <_ZNSaIP16Power_expressionED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8005a38:	b580      	push	{r7, lr}
 8005a3a:	b082      	sub	sp, #8
 8005a3c:	af00      	add	r7, sp, #0
 8005a3e:	6078      	str	r0, [r7, #4]
 8005a40:	6878      	ldr	r0, [r7, #4]
 8005a42:	f000 f9da 	bl	8005dfa <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	4618      	mov	r0, r3
 8005a4a:	3708      	adds	r7, #8
 8005a4c:	46bd      	mov	sp, r7
 8005a4e:	bd80      	pop	{r7, pc}

08005a50 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005a50:	b580      	push	{r7, lr}
 8005a52:	b084      	sub	sp, #16
 8005a54:	af00      	add	r7, sp, #0
 8005a56:	60f8      	str	r0, [r7, #12]
 8005a58:	60b9      	str	r1, [r7, #8]
 8005a5a:	607a      	str	r2, [r7, #4]
	if (__p)
 8005a5c:	68bb      	ldr	r3, [r7, #8]
 8005a5e:	2b00      	cmp	r3, #0
 8005a60:	d005      	beq.n	8005a6e <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005a62:	68fb      	ldr	r3, [r7, #12]
 8005a64:	687a      	ldr	r2, [r7, #4]
 8005a66:	68b9      	ldr	r1, [r7, #8]
 8005a68:	4618      	mov	r0, r3
 8005a6a:	f000 f9d1 	bl	8005e10 <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>
      }
 8005a6e:	bf00      	nop
 8005a70:	3710      	adds	r7, #16
 8005a72:	46bd      	mov	sp, r7
 8005a74:	bd80      	pop	{r7, pc}

08005a76 <_ZSt8_DestroyIPP16Power_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005a76:	b580      	push	{r7, lr}
 8005a78:	b082      	sub	sp, #8
 8005a7a:	af00      	add	r7, sp, #0
 8005a7c:	6078      	str	r0, [r7, #4]
 8005a7e:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005a80:	6839      	ldr	r1, [r7, #0]
 8005a82:	6878      	ldr	r0, [r7, #4]
 8005a84:	f000 f9d3 	bl	8005e2e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>
    }
 8005a88:	bf00      	nop
 8005a8a:	3708      	adds	r7, #8
 8005a8c:	46bd      	mov	sp, r7
 8005a8e:	bd80      	pop	{r7, pc}

08005a90 <_ZNSaI13mult_operatorED1Ev>:
 8005a90:	b580      	push	{r7, lr}
 8005a92:	b082      	sub	sp, #8
 8005a94:	af00      	add	r7, sp, #0
 8005a96:	6078      	str	r0, [r7, #4]
 8005a98:	6878      	ldr	r0, [r7, #4]
 8005a9a:	f000 f9d3 	bl	8005e44 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	4618      	mov	r0, r3
 8005aa2:	3708      	adds	r7, #8
 8005aa4:	46bd      	mov	sp, r7
 8005aa6:	bd80      	pop	{r7, pc}

08005aa8 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005aa8:	b580      	push	{r7, lr}
 8005aaa:	b084      	sub	sp, #16
 8005aac:	af00      	add	r7, sp, #0
 8005aae:	60f8      	str	r0, [r7, #12]
 8005ab0:	60b9      	str	r1, [r7, #8]
 8005ab2:	607a      	str	r2, [r7, #4]
	if (__p)
 8005ab4:	68bb      	ldr	r3, [r7, #8]
 8005ab6:	2b00      	cmp	r3, #0
 8005ab8:	d005      	beq.n	8005ac6 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005aba:	68fb      	ldr	r3, [r7, #12]
 8005abc:	687a      	ldr	r2, [r7, #4]
 8005abe:	68b9      	ldr	r1, [r7, #8]
 8005ac0:	4618      	mov	r0, r3
 8005ac2:	f000 f9ca 	bl	8005e5a <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>
      }
 8005ac6:	bf00      	nop
 8005ac8:	3710      	adds	r7, #16
 8005aca:	46bd      	mov	sp, r7
 8005acc:	bd80      	pop	{r7, pc}

08005ace <_ZSt8_DestroyIP13mult_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005ace:	b580      	push	{r7, lr}
 8005ad0:	b082      	sub	sp, #8
 8005ad2:	af00      	add	r7, sp, #0
 8005ad4:	6078      	str	r0, [r7, #4]
 8005ad6:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005ad8:	6839      	ldr	r1, [r7, #0]
 8005ada:	6878      	ldr	r0, [r7, #4]
 8005adc:	f000 f9cc 	bl	8005e78 <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>
    }
 8005ae0:	bf00      	nop
 8005ae2:	3708      	adds	r7, #8
 8005ae4:	46bd      	mov	sp, r7
 8005ae6:	bd80      	pop	{r7, pc}

08005ae8 <_ZNSaIP19Multiply_expressionED1Ev>:
 8005ae8:	b580      	push	{r7, lr}
 8005aea:	b082      	sub	sp, #8
 8005aec:	af00      	add	r7, sp, #0
 8005aee:	6078      	str	r0, [r7, #4]
 8005af0:	6878      	ldr	r0, [r7, #4]
 8005af2:	f000 f9cc 	bl	8005e8e <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	4618      	mov	r0, r3
 8005afa:	3708      	adds	r7, #8
 8005afc:	46bd      	mov	sp, r7
 8005afe:	bd80      	pop	{r7, pc}

08005b00 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005b00:	b580      	push	{r7, lr}
 8005b02:	b084      	sub	sp, #16
 8005b04:	af00      	add	r7, sp, #0
 8005b06:	60f8      	str	r0, [r7, #12]
 8005b08:	60b9      	str	r1, [r7, #8]
 8005b0a:	607a      	str	r2, [r7, #4]
	if (__p)
 8005b0c:	68bb      	ldr	r3, [r7, #8]
 8005b0e:	2b00      	cmp	r3, #0
 8005b10:	d005      	beq.n	8005b1e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005b12:	68fb      	ldr	r3, [r7, #12]
 8005b14:	687a      	ldr	r2, [r7, #4]
 8005b16:	68b9      	ldr	r1, [r7, #8]
 8005b18:	4618      	mov	r0, r3
 8005b1a:	f000 f9c3 	bl	8005ea4 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>
      }
 8005b1e:	bf00      	nop
 8005b20:	3710      	adds	r7, #16
 8005b22:	46bd      	mov	sp, r7
 8005b24:	bd80      	pop	{r7, pc}

08005b26 <_ZSt8_DestroyIPP19Multiply_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005b26:	b580      	push	{r7, lr}
 8005b28:	b082      	sub	sp, #8
 8005b2a:	af00      	add	r7, sp, #0
 8005b2c:	6078      	str	r0, [r7, #4]
 8005b2e:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005b30:	6839      	ldr	r1, [r7, #0]
 8005b32:	6878      	ldr	r0, [r7, #4]
 8005b34:	f000 f9c5 	bl	8005ec2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>
    }
 8005b38:	bf00      	nop
 8005b3a:	3708      	adds	r7, #8
 8005b3c:	46bd      	mov	sp, r7
 8005b3e:	bd80      	pop	{r7, pc}

08005b40 <_ZNSaI12sum_operatorED1Ev>:
 8005b40:	b580      	push	{r7, lr}
 8005b42:	b082      	sub	sp, #8
 8005b44:	af00      	add	r7, sp, #0
 8005b46:	6078      	str	r0, [r7, #4]
 8005b48:	6878      	ldr	r0, [r7, #4]
 8005b4a:	f000 f9c5 	bl	8005ed8 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	4618      	mov	r0, r3
 8005b52:	3708      	adds	r7, #8
 8005b54:	46bd      	mov	sp, r7
 8005b56:	bd80      	pop	{r7, pc}

08005b58 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005b58:	b580      	push	{r7, lr}
 8005b5a:	b084      	sub	sp, #16
 8005b5c:	af00      	add	r7, sp, #0
 8005b5e:	60f8      	str	r0, [r7, #12]
 8005b60:	60b9      	str	r1, [r7, #8]
 8005b62:	607a      	str	r2, [r7, #4]
	if (__p)
 8005b64:	68bb      	ldr	r3, [r7, #8]
 8005b66:	2b00      	cmp	r3, #0
 8005b68:	d005      	beq.n	8005b76 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005b6a:	68fb      	ldr	r3, [r7, #12]
 8005b6c:	687a      	ldr	r2, [r7, #4]
 8005b6e:	68b9      	ldr	r1, [r7, #8]
 8005b70:	4618      	mov	r0, r3
 8005b72:	f000 f9bc 	bl	8005eee <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>
      }
 8005b76:	bf00      	nop
 8005b78:	3710      	adds	r7, #16
 8005b7a:	46bd      	mov	sp, r7
 8005b7c:	bd80      	pop	{r7, pc}

08005b7e <_ZSt8_DestroyIP12sum_operatorEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005b7e:	b580      	push	{r7, lr}
 8005b80:	b082      	sub	sp, #8
 8005b82:	af00      	add	r7, sp, #0
 8005b84:	6078      	str	r0, [r7, #4]
 8005b86:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005b88:	6839      	ldr	r1, [r7, #0]
 8005b8a:	6878      	ldr	r0, [r7, #4]
 8005b8c:	f000 f9be 	bl	8005f0c <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>
    }
 8005b90:	bf00      	nop
 8005b92:	3708      	adds	r7, #8
 8005b94:	46bd      	mov	sp, r7
 8005b96:	bd80      	pop	{r7, pc}

08005b98 <_ZNSaIP18Compare_expressionED1Ev>:
 8005b98:	b580      	push	{r7, lr}
 8005b9a:	b082      	sub	sp, #8
 8005b9c:	af00      	add	r7, sp, #0
 8005b9e:	6078      	str	r0, [r7, #4]
 8005ba0:	6878      	ldr	r0, [r7, #4]
 8005ba2:	f000 f9be 	bl	8005f22 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>
 8005ba6:	687b      	ldr	r3, [r7, #4]
 8005ba8:	4618      	mov	r0, r3
 8005baa:	3708      	adds	r7, #8
 8005bac:	46bd      	mov	sp, r7
 8005bae:	bd80      	pop	{r7, pc}

08005bb0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005bb0:	b580      	push	{r7, lr}
 8005bb2:	b084      	sub	sp, #16
 8005bb4:	af00      	add	r7, sp, #0
 8005bb6:	60f8      	str	r0, [r7, #12]
 8005bb8:	60b9      	str	r1, [r7, #8]
 8005bba:	607a      	str	r2, [r7, #4]
	if (__p)
 8005bbc:	68bb      	ldr	r3, [r7, #8]
 8005bbe:	2b00      	cmp	r3, #0
 8005bc0:	d005      	beq.n	8005bce <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005bc2:	68fb      	ldr	r3, [r7, #12]
 8005bc4:	687a      	ldr	r2, [r7, #4]
 8005bc6:	68b9      	ldr	r1, [r7, #8]
 8005bc8:	4618      	mov	r0, r3
 8005bca:	f000 f9b5 	bl	8005f38 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>
      }
 8005bce:	bf00      	nop
 8005bd0:	3710      	adds	r7, #16
 8005bd2:	46bd      	mov	sp, r7
 8005bd4:	bd80      	pop	{r7, pc}

08005bd6 <_ZSt8_DestroyIPP18Compare_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005bd6:	b580      	push	{r7, lr}
 8005bd8:	b082      	sub	sp, #8
 8005bda:	af00      	add	r7, sp, #0
 8005bdc:	6078      	str	r0, [r7, #4]
 8005bde:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005be0:	6839      	ldr	r1, [r7, #0]
 8005be2:	6878      	ldr	r0, [r7, #4]
 8005be4:	f000 f9b7 	bl	8005f56 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>
    }
 8005be8:	bf00      	nop
 8005bea:	3708      	adds	r7, #8
 8005bec:	46bd      	mov	sp, r7
 8005bee:	bd80      	pop	{r7, pc}

08005bf0 <_ZNSaIP14And_expressionED1Ev>:
 8005bf0:	b580      	push	{r7, lr}
 8005bf2:	b082      	sub	sp, #8
 8005bf4:	af00      	add	r7, sp, #0
 8005bf6:	6078      	str	r0, [r7, #4]
 8005bf8:	6878      	ldr	r0, [r7, #4]
 8005bfa:	f000 f9b7 	bl	8005f6c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	4618      	mov	r0, r3
 8005c02:	3708      	adds	r7, #8
 8005c04:	46bd      	mov	sp, r7
 8005c06:	bd80      	pop	{r7, pc}

08005c08 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 8005c08:	b580      	push	{r7, lr}
 8005c0a:	b084      	sub	sp, #16
 8005c0c:	af00      	add	r7, sp, #0
 8005c0e:	60f8      	str	r0, [r7, #12]
 8005c10:	60b9      	str	r1, [r7, #8]
 8005c12:	607a      	str	r2, [r7, #4]
	if (__p)
 8005c14:	68bb      	ldr	r3, [r7, #8]
 8005c16:	2b00      	cmp	r3, #0
 8005c18:	d005      	beq.n	8005c26 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8005c1a:	68fb      	ldr	r3, [r7, #12]
 8005c1c:	687a      	ldr	r2, [r7, #4]
 8005c1e:	68b9      	ldr	r1, [r7, #8]
 8005c20:	4618      	mov	r0, r3
 8005c22:	f000 f9ae 	bl	8005f82 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>
      }
 8005c26:	bf00      	nop
 8005c28:	3710      	adds	r7, #16
 8005c2a:	46bd      	mov	sp, r7
 8005c2c:	bd80      	pop	{r7, pc}

08005c2e <_ZSt8_DestroyIPP14And_expressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8005c2e:	b580      	push	{r7, lr}
 8005c30:	b082      	sub	sp, #8
 8005c32:	af00      	add	r7, sp, #0
 8005c34:	6078      	str	r0, [r7, #4]
 8005c36:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8005c38:	6839      	ldr	r1, [r7, #0]
 8005c3a:	6878      	ldr	r0, [r7, #4]
 8005c3c:	f000 f9b0 	bl	8005fa0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>
    }
 8005c40:	bf00      	nop
 8005c42:	3708      	adds	r7, #8
 8005c44:	46bd      	mov	sp, r7
 8005c46:	bd80      	pop	{r7, pc}

08005c48 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005c48:	b480      	push	{r7}
 8005c4a:	b083      	sub	sp, #12
 8005c4c:	af00      	add	r7, sp, #0
 8005c4e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	4618      	mov	r0, r3
 8005c54:	370c      	adds	r7, #12
 8005c56:	46bd      	mov	sp, r7
 8005c58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c5c:	4770      	bx	lr

08005c5e <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005c5e:	b480      	push	{r7}
 8005c60:	b083      	sub	sp, #12
 8005c62:	af00      	add	r7, sp, #0
 8005c64:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	4618      	mov	r0, r3
 8005c6a:	370c      	adds	r7, #12
 8005c6c:	46bd      	mov	sp, r7
 8005c6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c72:	4770      	bx	lr

08005c74 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    { return (*std::forward<_Tp>(__t)).*__f; }

  /// Invoke a callable object.
  template<typename _Callable, typename... _Args>
    constexpr typename __invoke_result<_Callable, _Args...>::type
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005c74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c76:	b083      	sub	sp, #12
 8005c78:	af00      	add	r7, sp, #0
 8005c7a:	6078      	str	r0, [r7, #4]
 8005c7c:	6039      	str	r1, [r7, #0]
    noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005c7e:	6878      	ldr	r0, [r7, #4]
 8005c80:	f000 f8b0 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005c84:	4604      	mov	r4, r0
 8005c86:	6838      	ldr	r0, [r7, #0]
 8005c88:	f000 f995 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8005c8c:	4603      	mov	r3, r0
 8005c8e:	461a      	mov	r2, r3
 8005c90:	4621      	mov	r1, r4
 8005c92:	4628      	mov	r0, r5
 8005c94:	f000 f99a 	bl	8005fcc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005c98:	4633      	mov	r3, r6
    }
 8005c9a:	4618      	mov	r0, r3
 8005c9c:	370c      	adds	r7, #12
 8005c9e:	46bd      	mov	sp, r7
 8005ca0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005ca2 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005ca2:	b480      	push	{r7}
 8005ca4:	b083      	sub	sp, #12
 8005ca6:	af00      	add	r7, sp, #0
 8005ca8:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	4618      	mov	r0, r3
 8005cae:	370c      	adds	r7, #12
 8005cb0:	46bd      	mov	sp, r7
 8005cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cb6:	4770      	bx	lr

08005cb8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005cb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005cba:	b083      	sub	sp, #12
 8005cbc:	af00      	add	r7, sp, #0
 8005cbe:	6078      	str	r0, [r7, #4]
 8005cc0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005cc2:	6878      	ldr	r0, [r7, #4]
 8005cc4:	f000 f88e 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005cc8:	4604      	mov	r4, r0
 8005cca:	6838      	ldr	r0, [r7, #0]
 8005ccc:	f000 f995 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8005cd0:	4603      	mov	r3, r0
 8005cd2:	461a      	mov	r2, r3
 8005cd4:	4621      	mov	r1, r4
 8005cd6:	4628      	mov	r0, r5
 8005cd8:	f000 f99a 	bl	8006010 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005cdc:	4633      	mov	r3, r6
    }
 8005cde:	4618      	mov	r0, r3
 8005ce0:	370c      	adds	r7, #12
 8005ce2:	46bd      	mov	sp, r7
 8005ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005ce6 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 8005ce6:	b480      	push	{r7}
 8005ce8:	b083      	sub	sp, #12
 8005cea:	af00      	add	r7, sp, #0
 8005cec:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	4618      	mov	r0, r3
 8005cf2:	370c      	adds	r7, #12
 8005cf4:	46bd      	mov	sp, r7
 8005cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cfa:	4770      	bx	lr

08005cfc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005cfe:	b083      	sub	sp, #12
 8005d00:	af00      	add	r7, sp, #0
 8005d02:	6078      	str	r0, [r7, #4]
 8005d04:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005d06:	6878      	ldr	r0, [r7, #4]
 8005d08:	f000 f86c 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005d0c:	4604      	mov	r4, r0
 8005d0e:	6838      	ldr	r0, [r7, #0]
 8005d10:	f000 f995 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8005d14:	4603      	mov	r3, r0
 8005d16:	461a      	mov	r2, r3
 8005d18:	4621      	mov	r1, r4
 8005d1a:	4628      	mov	r0, r5
 8005d1c:	f000 f99a 	bl	8006054 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005d20:	4633      	mov	r3, r6
    }
 8005d22:	4618      	mov	r0, r3
 8005d24:	370c      	adds	r7, #12
 8005d26:	46bd      	mov	sp, r7
 8005d28:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005d2a <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8005d2a:	b580      	push	{r7, lr}
 8005d2c:	b082      	sub	sp, #8
 8005d2e:	af00      	add	r7, sp, #0
 8005d30:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	4618      	mov	r0, r3
 8005d36:	f000 f9a4 	bl	8006082 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 8005d3a:	4603      	mov	r3, r0
 8005d3c:	4618      	mov	r0, r3
 8005d3e:	3708      	adds	r7, #8
 8005d40:	46bd      	mov	sp, r7
 8005d42:	bd80      	pop	{r7, pc}

08005d44 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005d44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d46:	b083      	sub	sp, #12
 8005d48:	af00      	add	r7, sp, #0
 8005d4a:	6078      	str	r0, [r7, #4]
 8005d4c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005d4e:	6878      	ldr	r0, [r7, #4]
 8005d50:	f000 f848 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005d54:	4604      	mov	r4, r0
 8005d56:	6838      	ldr	r0, [r7, #0]
 8005d58:	f000 f99f 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8005d5c:	4603      	mov	r3, r0
 8005d5e:	461a      	mov	r2, r3
 8005d60:	4621      	mov	r1, r4
 8005d62:	4628      	mov	r0, r5
 8005d64:	f000 f9a4 	bl	80060b0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005d68:	4633      	mov	r3, r6
    }
 8005d6a:	4618      	mov	r0, r3
 8005d6c:	370c      	adds	r7, #12
 8005d6e:	46bd      	mov	sp, r7
 8005d70:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005d72 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSA_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005d72:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d74:	b083      	sub	sp, #12
 8005d76:	af00      	add	r7, sp, #0
 8005d78:	6078      	str	r0, [r7, #4]
 8005d7a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005d7c:	6878      	ldr	r0, [r7, #4]
 8005d7e:	f000 f831 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005d82:	4604      	mov	r4, r0
 8005d84:	6838      	ldr	r0, [r7, #0]
 8005d86:	f000 f9aa 	bl	80060de <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 8005d8a:	4603      	mov	r3, r0
 8005d8c:	461a      	mov	r2, r3
 8005d8e:	4621      	mov	r1, r4
 8005d90:	4628      	mov	r0, r5
 8005d92:	f000 f9af 	bl	80060f4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005d96:	4633      	mov	r3, r6
    }
 8005d98:	4618      	mov	r0, r3
 8005d9a:	370c      	adds	r7, #12
 8005d9c:	46bd      	mov	sp, r7
 8005d9e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005da0 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSC_EENSt15__invoke_resultISE_JDpT0_EE4typeESF_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8005da0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005da2:	b083      	sub	sp, #12
 8005da4:	af00      	add	r7, sp, #0
 8005da6:	6078      	str	r0, [r7, #4]
 8005da8:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8005daa:	6878      	ldr	r0, [r7, #4]
 8005dac:	f000 f81a 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005db0:	4604      	mov	r4, r0
 8005db2:	6838      	ldr	r0, [r7, #0]
 8005db4:	f000 f9b5 	bl	8006122 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 8005db8:	4603      	mov	r3, r0
 8005dba:	461a      	mov	r2, r3
 8005dbc:	4621      	mov	r1, r4
 8005dbe:	4628      	mov	r0, r5
 8005dc0:	f000 f9ba 	bl	8006138 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8005dc4:	4633      	mov	r3, r6
    }
 8005dc6:	4618      	mov	r0, r3
 8005dc8:	370c      	adds	r7, #12
 8005dca:	46bd      	mov	sp, r7
 8005dcc:	bdf0      	pop	{r4, r5, r6, r7, pc}

08005dce <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_RSt7variantIJbifS9_SB_SD_EEEJEE9_M_accessEv>:
      _M_access() const
 8005dce:	b480      	push	{r7}
 8005dd0:	b083      	sub	sp, #12
 8005dd2:	af00      	add	r7, sp, #0
 8005dd4:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	4618      	mov	r0, r3
 8005dda:	370c      	adds	r7, #12
 8005ddc:	46bd      	mov	sp, r7
 8005dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005de2:	4770      	bx	lr

08005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005de4:	b480      	push	{r7}
 8005de6:	b083      	sub	sp, #12
 8005de8:	af00      	add	r7, sp, #0
 8005dea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005dec:	687b      	ldr	r3, [r7, #4]
 8005dee:	4618      	mov	r0, r3
 8005df0:	370c      	adds	r7, #12
 8005df2:	46bd      	mov	sp, r7
 8005df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005df8:	4770      	bx	lr

08005dfa <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8005dfa:	b480      	push	{r7}
 8005dfc:	b083      	sub	sp, #12
 8005dfe:	af00      	add	r7, sp, #0
 8005e00:	6078      	str	r0, [r7, #4]
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	4618      	mov	r0, r3
 8005e06:	370c      	adds	r7, #12
 8005e08:	46bd      	mov	sp, r7
 8005e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e0e:	4770      	bx	lr

08005e10 <_ZNSt16allocator_traitsISaIP16Power_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005e10:	b580      	push	{r7, lr}
 8005e12:	b084      	sub	sp, #16
 8005e14:	af00      	add	r7, sp, #0
 8005e16:	60f8      	str	r0, [r7, #12]
 8005e18:	60b9      	str	r1, [r7, #8]
 8005e1a:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005e1c:	687a      	ldr	r2, [r7, #4]
 8005e1e:	68b9      	ldr	r1, [r7, #8]
 8005e20:	68f8      	ldr	r0, [r7, #12]
 8005e22:	f000 f9a0 	bl	8006166 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>
 8005e26:	bf00      	nop
 8005e28:	3710      	adds	r7, #16
 8005e2a:	46bd      	mov	sp, r7
 8005e2c:	bd80      	pop	{r7, pc}

08005e2e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP16Power_expressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 8005e2e:	b480      	push	{r7}
 8005e30:	b083      	sub	sp, #12
 8005e32:	af00      	add	r7, sp, #0
 8005e34:	6078      	str	r0, [r7, #4]
 8005e36:	6039      	str	r1, [r7, #0]
 8005e38:	bf00      	nop
 8005e3a:	370c      	adds	r7, #12
 8005e3c:	46bd      	mov	sp, r7
 8005e3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e42:	4770      	bx	lr

08005e44 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorED1Ev>:
 8005e44:	b480      	push	{r7}
 8005e46:	b083      	sub	sp, #12
 8005e48:	af00      	add	r7, sp, #0
 8005e4a:	6078      	str	r0, [r7, #4]
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	4618      	mov	r0, r3
 8005e50:	370c      	adds	r7, #12
 8005e52:	46bd      	mov	sp, r7
 8005e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e58:	4770      	bx	lr

08005e5a <_ZNSt16allocator_traitsISaI13mult_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005e5a:	b580      	push	{r7, lr}
 8005e5c:	b084      	sub	sp, #16
 8005e5e:	af00      	add	r7, sp, #0
 8005e60:	60f8      	str	r0, [r7, #12]
 8005e62:	60b9      	str	r1, [r7, #8]
 8005e64:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005e66:	687a      	ldr	r2, [r7, #4]
 8005e68:	68b9      	ldr	r1, [r7, #8]
 8005e6a:	68f8      	ldr	r0, [r7, #12]
 8005e6c:	f000 f987 	bl	800617e <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>
 8005e70:	bf00      	nop
 8005e72:	3710      	adds	r7, #16
 8005e74:	46bd      	mov	sp, r7
 8005e76:	bd80      	pop	{r7, pc}

08005e78 <_ZNSt12_Destroy_auxILb1EE9__destroyIP13mult_operatorEEvT_S4_>:
 8005e78:	b480      	push	{r7}
 8005e7a:	b083      	sub	sp, #12
 8005e7c:	af00      	add	r7, sp, #0
 8005e7e:	6078      	str	r0, [r7, #4]
 8005e80:	6039      	str	r1, [r7, #0]
 8005e82:	bf00      	nop
 8005e84:	370c      	adds	r7, #12
 8005e86:	46bd      	mov	sp, r7
 8005e88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e8c:	4770      	bx	lr

08005e8e <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionED1Ev>:
 8005e8e:	b480      	push	{r7}
 8005e90:	b083      	sub	sp, #12
 8005e92:	af00      	add	r7, sp, #0
 8005e94:	6078      	str	r0, [r7, #4]
 8005e96:	687b      	ldr	r3, [r7, #4]
 8005e98:	4618      	mov	r0, r3
 8005e9a:	370c      	adds	r7, #12
 8005e9c:	46bd      	mov	sp, r7
 8005e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ea2:	4770      	bx	lr

08005ea4 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005ea4:	b580      	push	{r7, lr}
 8005ea6:	b084      	sub	sp, #16
 8005ea8:	af00      	add	r7, sp, #0
 8005eaa:	60f8      	str	r0, [r7, #12]
 8005eac:	60b9      	str	r1, [r7, #8]
 8005eae:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005eb0:	687a      	ldr	r2, [r7, #4]
 8005eb2:	68b9      	ldr	r1, [r7, #8]
 8005eb4:	68f8      	ldr	r0, [r7, #12]
 8005eb6:	f000 f96e 	bl	8006196 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>
 8005eba:	bf00      	nop
 8005ebc:	3710      	adds	r7, #16
 8005ebe:	46bd      	mov	sp, r7
 8005ec0:	bd80      	pop	{r7, pc}

08005ec2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP19Multiply_expressionEEvT_S5_>:
 8005ec2:	b480      	push	{r7}
 8005ec4:	b083      	sub	sp, #12
 8005ec6:	af00      	add	r7, sp, #0
 8005ec8:	6078      	str	r0, [r7, #4]
 8005eca:	6039      	str	r1, [r7, #0]
 8005ecc:	bf00      	nop
 8005ece:	370c      	adds	r7, #12
 8005ed0:	46bd      	mov	sp, r7
 8005ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ed6:	4770      	bx	lr

08005ed8 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorED1Ev>:
 8005ed8:	b480      	push	{r7}
 8005eda:	b083      	sub	sp, #12
 8005edc:	af00      	add	r7, sp, #0
 8005ede:	6078      	str	r0, [r7, #4]
 8005ee0:	687b      	ldr	r3, [r7, #4]
 8005ee2:	4618      	mov	r0, r3
 8005ee4:	370c      	adds	r7, #12
 8005ee6:	46bd      	mov	sp, r7
 8005ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005eec:	4770      	bx	lr

08005eee <_ZNSt16allocator_traitsISaI12sum_operatorEE10deallocateERS1_PS0_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005eee:	b580      	push	{r7, lr}
 8005ef0:	b084      	sub	sp, #16
 8005ef2:	af00      	add	r7, sp, #0
 8005ef4:	60f8      	str	r0, [r7, #12]
 8005ef6:	60b9      	str	r1, [r7, #8]
 8005ef8:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005efa:	687a      	ldr	r2, [r7, #4]
 8005efc:	68b9      	ldr	r1, [r7, #8]
 8005efe:	68f8      	ldr	r0, [r7, #12]
 8005f00:	f000 f955 	bl	80061ae <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>
 8005f04:	bf00      	nop
 8005f06:	3710      	adds	r7, #16
 8005f08:	46bd      	mov	sp, r7
 8005f0a:	bd80      	pop	{r7, pc}

08005f0c <_ZNSt12_Destroy_auxILb1EE9__destroyIP12sum_operatorEEvT_S4_>:
 8005f0c:	b480      	push	{r7}
 8005f0e:	b083      	sub	sp, #12
 8005f10:	af00      	add	r7, sp, #0
 8005f12:	6078      	str	r0, [r7, #4]
 8005f14:	6039      	str	r1, [r7, #0]
 8005f16:	bf00      	nop
 8005f18:	370c      	adds	r7, #12
 8005f1a:	46bd      	mov	sp, r7
 8005f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f20:	4770      	bx	lr

08005f22 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionED1Ev>:
 8005f22:	b480      	push	{r7}
 8005f24:	b083      	sub	sp, #12
 8005f26:	af00      	add	r7, sp, #0
 8005f28:	6078      	str	r0, [r7, #4]
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	4618      	mov	r0, r3
 8005f2e:	370c      	adds	r7, #12
 8005f30:	46bd      	mov	sp, r7
 8005f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f36:	4770      	bx	lr

08005f38 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005f38:	b580      	push	{r7, lr}
 8005f3a:	b084      	sub	sp, #16
 8005f3c:	af00      	add	r7, sp, #0
 8005f3e:	60f8      	str	r0, [r7, #12]
 8005f40:	60b9      	str	r1, [r7, #8]
 8005f42:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005f44:	687a      	ldr	r2, [r7, #4]
 8005f46:	68b9      	ldr	r1, [r7, #8]
 8005f48:	68f8      	ldr	r0, [r7, #12]
 8005f4a:	f000 f93c 	bl	80061c6 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>
 8005f4e:	bf00      	nop
 8005f50:	3710      	adds	r7, #16
 8005f52:	46bd      	mov	sp, r7
 8005f54:	bd80      	pop	{r7, pc}

08005f56 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18Compare_expressionEEvT_S5_>:
 8005f56:	b480      	push	{r7}
 8005f58:	b083      	sub	sp, #12
 8005f5a:	af00      	add	r7, sp, #0
 8005f5c:	6078      	str	r0, [r7, #4]
 8005f5e:	6039      	str	r1, [r7, #0]
 8005f60:	bf00      	nop
 8005f62:	370c      	adds	r7, #12
 8005f64:	46bd      	mov	sp, r7
 8005f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f6a:	4770      	bx	lr

08005f6c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionED1Ev>:
 8005f6c:	b480      	push	{r7}
 8005f6e:	b083      	sub	sp, #12
 8005f70:	af00      	add	r7, sp, #0
 8005f72:	6078      	str	r0, [r7, #4]
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	4618      	mov	r0, r3
 8005f78:	370c      	adds	r7, #12
 8005f7a:	46bd      	mov	sp, r7
 8005f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f80:	4770      	bx	lr

08005f82 <_ZNSt16allocator_traitsISaIP14And_expressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8005f82:	b580      	push	{r7, lr}
 8005f84:	b084      	sub	sp, #16
 8005f86:	af00      	add	r7, sp, #0
 8005f88:	60f8      	str	r0, [r7, #12]
 8005f8a:	60b9      	str	r1, [r7, #8]
 8005f8c:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8005f8e:	687a      	ldr	r2, [r7, #4]
 8005f90:	68b9      	ldr	r1, [r7, #8]
 8005f92:	68f8      	ldr	r0, [r7, #12]
 8005f94:	f000 f923 	bl	80061de <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>
 8005f98:	bf00      	nop
 8005f9a:	3710      	adds	r7, #16
 8005f9c:	46bd      	mov	sp, r7
 8005f9e:	bd80      	pop	{r7, pc}

08005fa0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP14And_expressionEEvT_S5_>:
 8005fa0:	b480      	push	{r7}
 8005fa2:	b083      	sub	sp, #12
 8005fa4:	af00      	add	r7, sp, #0
 8005fa6:	6078      	str	r0, [r7, #4]
 8005fa8:	6039      	str	r1, [r7, #0]
 8005faa:	bf00      	nop
 8005fac:	370c      	adds	r7, #12
 8005fae:	46bd      	mov	sp, r7
 8005fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fb4:	4770      	bx	lr

08005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005fb6:	b480      	push	{r7}
 8005fb8:	b083      	sub	sp, #12
 8005fba:	af00      	add	r7, sp, #0
 8005fbc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	4618      	mov	r0, r3
 8005fc2:	370c      	adds	r7, #12
 8005fc4:	46bd      	mov	sp, r7
 8005fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fca:	4770      	bx	lr

08005fcc <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRbEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8005fcc:	b5b0      	push	{r4, r5, r7, lr}
 8005fce:	b084      	sub	sp, #16
 8005fd0:	af00      	add	r7, sp, #0
 8005fd2:	7338      	strb	r0, [r7, #12]
 8005fd4:	60b9      	str	r1, [r7, #8]
 8005fd6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8005fd8:	68b8      	ldr	r0, [r7, #8]
 8005fda:	f7ff ff03 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8005fde:	4604      	mov	r4, r0
 8005fe0:	6878      	ldr	r0, [r7, #4]
 8005fe2:	f7ff ffe8 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8005fe6:	4603      	mov	r3, r0
 8005fe8:	4619      	mov	r1, r3
 8005fea:	4620      	mov	r0, r4
 8005fec:	f000 f903 	bl	80061f6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>
 8005ff0:	462b      	mov	r3, r5
 8005ff2:	4618      	mov	r0, r3
 8005ff4:	3710      	adds	r7, #16
 8005ff6:	46bd      	mov	sp, r7
 8005ff8:	bdb0      	pop	{r4, r5, r7, pc}

08005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8005ffa:	b480      	push	{r7}
 8005ffc:	b083      	sub	sp, #12
 8005ffe:	af00      	add	r7, sp, #0
 8006000:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	4618      	mov	r0, r3
 8006006:	370c      	adds	r7, #12
 8006008:	46bd      	mov	sp, r7
 800600a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800600e:	4770      	bx	lr

08006010 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRiEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006010:	b5b0      	push	{r4, r5, r7, lr}
 8006012:	b084      	sub	sp, #16
 8006014:	af00      	add	r7, sp, #0
 8006016:	7338      	strb	r0, [r7, #12]
 8006018:	60b9      	str	r1, [r7, #8]
 800601a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800601c:	68b8      	ldr	r0, [r7, #8]
 800601e:	f7ff fee1 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006022:	4604      	mov	r4, r0
 8006024:	6878      	ldr	r0, [r7, #4]
 8006026:	f7ff ffe8 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800602a:	4603      	mov	r3, r0
 800602c:	4619      	mov	r1, r3
 800602e:	4620      	mov	r0, r4
 8006030:	f000 f8f2 	bl	8006218 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>
 8006034:	462b      	mov	r3, r5
 8006036:	4618      	mov	r0, r3
 8006038:	3710      	adds	r7, #16
 800603a:	46bd      	mov	sp, r7
 800603c:	bdb0      	pop	{r4, r5, r7, pc}

0800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800603e:	b480      	push	{r7}
 8006040:	b083      	sub	sp, #12
 8006042:	af00      	add	r7, sp, #0
 8006044:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	4618      	mov	r0, r3
 800604a:	370c      	adds	r7, #12
 800604c:	46bd      	mov	sp, r7
 800604e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006052:	4770      	bx	lr

08006054 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRfEESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006054:	b5b0      	push	{r4, r5, r7, lr}
 8006056:	b084      	sub	sp, #16
 8006058:	af00      	add	r7, sp, #0
 800605a:	7338      	strb	r0, [r7, #12]
 800605c:	60b9      	str	r1, [r7, #8]
 800605e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006060:	68b8      	ldr	r0, [r7, #8]
 8006062:	f7ff febf 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006066:	4604      	mov	r4, r0
 8006068:	6878      	ldr	r0, [r7, #4]
 800606a:	f7ff ffe8 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800606e:	4603      	mov	r3, r0
 8006070:	4619      	mov	r1, r3
 8006072:	4620      	mov	r0, r4
 8006074:	f000 f8e1 	bl	800623a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>
 8006078:	462b      	mov	r3, r5
 800607a:	4618      	mov	r0, r3
 800607c:	3710      	adds	r7, #16
 800607e:	46bd      	mov	sp, r7
 8006080:	bdb0      	pop	{r4, r5, r7, pc}

08006082 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 8006082:	b580      	push	{r7, lr}
 8006084:	b082      	sub	sp, #8
 8006086:	af00      	add	r7, sp, #0
 8006088:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 800608a:	6878      	ldr	r0, [r7, #4]
 800608c:	f000 f8e6 	bl	800625c <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 8006090:	4603      	mov	r3, r0
 8006092:	4618      	mov	r0, r3
 8006094:	3708      	adds	r7, #8
 8006096:	46bd      	mov	sp, r7
 8006098:	bd80      	pop	{r7, pc}

0800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800609a:	b480      	push	{r7}
 800609c:	b083      	sub	sp, #12
 800609e:	af00      	add	r7, sp, #0
 80060a0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	4618      	mov	r0, r3
 80060a6:	370c      	adds	r7, #12
 80060a8:	46bd      	mov	sp, r7
 80060aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060ae:	4770      	bx	lr

080060b0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRS9_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80060b0:	b5b0      	push	{r4, r5, r7, lr}
 80060b2:	b084      	sub	sp, #16
 80060b4:	af00      	add	r7, sp, #0
 80060b6:	7338      	strb	r0, [r7, #12]
 80060b8:	60b9      	str	r1, [r7, #8]
 80060ba:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80060bc:	68b8      	ldr	r0, [r7, #8]
 80060be:	f7ff fe91 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 80060c2:	4604      	mov	r4, r0
 80060c4:	6878      	ldr	r0, [r7, #4]
 80060c6:	f7ff ffe8 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80060ca:	4603      	mov	r3, r0
 80060cc:	4619      	mov	r1, r3
 80060ce:	4620      	mov	r0, r4
 80060d0:	f000 f8cf 	bl	8006272 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>
 80060d4:	462b      	mov	r3, r5
 80060d6:	4618      	mov	r0, r3
 80060d8:	3710      	adds	r7, #16
 80060da:	46bd      	mov	sp, r7
 80060dc:	bdb0      	pop	{r4, r5, r7, pc}

080060de <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80060de:	b480      	push	{r7}
 80060e0:	b083      	sub	sp, #12
 80060e2:	af00      	add	r7, sp, #0
 80060e4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	4618      	mov	r0, r3
 80060ea:	370c      	adds	r7, #12
 80060ec:	46bd      	mov	sp, r7
 80060ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060f2:	4770      	bx	lr

080060f4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSB_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80060f4:	b5b0      	push	{r4, r5, r7, lr}
 80060f6:	b084      	sub	sp, #16
 80060f8:	af00      	add	r7, sp, #0
 80060fa:	7338      	strb	r0, [r7, #12]
 80060fc:	60b9      	str	r1, [r7, #8]
 80060fe:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006100:	68b8      	ldr	r0, [r7, #8]
 8006102:	f7ff fe6f 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 8006106:	4604      	mov	r4, r0
 8006108:	6878      	ldr	r0, [r7, #4]
 800610a:	f7ff ffe8 	bl	80060de <_ZSt7forwardIRP8VariableEOT_RNSt16remove_referenceIS3_E4typeE>
 800610e:	4603      	mov	r3, r0
 8006110:	4619      	mov	r1, r3
 8006112:	4620      	mov	r0, r4
 8006114:	f000 f8be 	bl	8006294 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>
 8006118:	462b      	mov	r3, r5
 800611a:	4618      	mov	r0, r3
 800611c:	3710      	adds	r7, #16
 800611e:	46bd      	mov	sp, r7
 8006120:	bdb0      	pop	{r4, r5, r7, pc}

08006122 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8006122:	b480      	push	{r7}
 8006124:	b083      	sub	sp, #12
 8006126:	af00      	add	r7, sp, #0
 8006128:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800612a:	687b      	ldr	r3, [r7, #4]
 800612c:	4618      	mov	r0, r3
 800612e:	370c      	adds	r7, #12
 8006130:	46bd      	mov	sp, r7
 8006132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006136:	4770      	bx	lr

08006138 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_JRSD_EESF_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8006138:	b5b0      	push	{r4, r5, r7, lr}
 800613a:	b084      	sub	sp, #16
 800613c:	af00      	add	r7, sp, #0
 800613e:	7338      	strb	r0, [r7, #12]
 8006140:	60b9      	str	r1, [r7, #8]
 8006142:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8006144:	68b8      	ldr	r0, [r7, #8]
 8006146:	f7ff fe4d 	bl	8005de4 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvEUlOT_E_ESF_RNSt16remove_referenceISE_E4typeE>
 800614a:	4604      	mov	r4, r0
 800614c:	6878      	ldr	r0, [r7, #4]
 800614e:	f7ff ffe8 	bl	8006122 <_ZSt7forwardIRP13Function_callEOT_RNSt16remove_referenceIS3_E4typeE>
 8006152:	4603      	mov	r3, r0
 8006154:	4619      	mov	r1, r3
 8006156:	4620      	mov	r0, r4
 8006158:	f000 f8ad 	bl	80062b6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>
 800615c:	462b      	mov	r3, r5
 800615e:	4618      	mov	r0, r3
 8006160:	3710      	adds	r7, #16
 8006162:	46bd      	mov	sp, r7
 8006164:	bdb0      	pop	{r4, r5, r7, pc}

08006166 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8006166:	b580      	push	{r7, lr}
 8006168:	b084      	sub	sp, #16
 800616a:	af00      	add	r7, sp, #0
 800616c:	60f8      	str	r0, [r7, #12]
 800616e:	60b9      	str	r1, [r7, #8]
 8006170:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8006172:	68b8      	ldr	r0, [r7, #8]
 8006174:	f01a f835 	bl	80201e2 <_ZdlPv>
      }
 8006178:	3710      	adds	r7, #16
 800617a:	46bd      	mov	sp, r7
 800617c:	bd80      	pop	{r7, pc}

0800617e <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 800617e:	b580      	push	{r7, lr}
 8006180:	b084      	sub	sp, #16
 8006182:	af00      	add	r7, sp, #0
 8006184:	60f8      	str	r0, [r7, #12]
 8006186:	60b9      	str	r1, [r7, #8]
 8006188:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800618a:	68b8      	ldr	r0, [r7, #8]
 800618c:	f01a f829 	bl	80201e2 <_ZdlPv>
      }
 8006190:	3710      	adds	r7, #16
 8006192:	46bd      	mov	sp, r7
 8006194:	bd80      	pop	{r7, pc}

08006196 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 8006196:	b580      	push	{r7, lr}
 8006198:	b084      	sub	sp, #16
 800619a:	af00      	add	r7, sp, #0
 800619c:	60f8      	str	r0, [r7, #12]
 800619e:	60b9      	str	r1, [r7, #8]
 80061a0:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80061a2:	68b8      	ldr	r0, [r7, #8]
 80061a4:	f01a f81d 	bl	80201e2 <_ZdlPv>
      }
 80061a8:	3710      	adds	r7, #16
 80061aa:	46bd      	mov	sp, r7
 80061ac:	bd80      	pop	{r7, pc}

080061ae <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE10deallocateEPS1_j>:
      deallocate(pointer __p, size_type)
 80061ae:	b580      	push	{r7, lr}
 80061b0:	b084      	sub	sp, #16
 80061b2:	af00      	add	r7, sp, #0
 80061b4:	60f8      	str	r0, [r7, #12]
 80061b6:	60b9      	str	r1, [r7, #8]
 80061b8:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80061ba:	68b8      	ldr	r0, [r7, #8]
 80061bc:	f01a f811 	bl	80201e2 <_ZdlPv>
      }
 80061c0:	3710      	adds	r7, #16
 80061c2:	46bd      	mov	sp, r7
 80061c4:	bd80      	pop	{r7, pc}

080061c6 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 80061c6:	b580      	push	{r7, lr}
 80061c8:	b084      	sub	sp, #16
 80061ca:	af00      	add	r7, sp, #0
 80061cc:	60f8      	str	r0, [r7, #12]
 80061ce:	60b9      	str	r1, [r7, #8]
 80061d0:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80061d2:	68b8      	ldr	r0, [r7, #8]
 80061d4:	f01a f805 	bl	80201e2 <_ZdlPv>
      }
 80061d8:	3710      	adds	r7, #16
 80061da:	46bd      	mov	sp, r7
 80061dc:	bd80      	pop	{r7, pc}

080061de <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 80061de:	b580      	push	{r7, lr}
 80061e0:	b084      	sub	sp, #16
 80061e2:	af00      	add	r7, sp, #0
 80061e4:	60f8      	str	r0, [r7, #12]
 80061e6:	60b9      	str	r1, [r7, #8]
 80061e8:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80061ea:	68b8      	ldr	r0, [r7, #8]
 80061ec:	f019 fff9 	bl	80201e2 <_ZdlPv>
      }
 80061f0:	3710      	adds	r7, #16
 80061f2:	46bd      	mov	sp, r7
 80061f4:	bd80      	pop	{r7, pc}

080061f6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESE_>:
	__do_visit([](auto&& __this_mem) mutable
 80061f6:	b590      	push	{r4, r7, lr}
 80061f8:	b083      	sub	sp, #12
 80061fa:	af00      	add	r7, sp, #0
 80061fc:	6078      	str	r0, [r7, #4]
 80061fe:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8006200:	6838      	ldr	r0, [r7, #0]
 8006202:	f000 f869 	bl	80062d8 <_ZSt11__addressofIbEPT_RS0_>
 8006206:	4603      	mov	r3, r0
 8006208:	4618      	mov	r0, r3
 800620a:	f000 f870 	bl	80062ee <_ZSt8_DestroyIbEvPT_>
	    return {};
 800620e:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006210:	4618      	mov	r0, r3
 8006212:	370c      	adds	r7, #12
 8006214:	46bd      	mov	sp, r7
 8006216:	bd90      	pop	{r4, r7, pc}

08006218 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESE_>:
 8006218:	b590      	push	{r4, r7, lr}
 800621a:	b083      	sub	sp, #12
 800621c:	af00      	add	r7, sp, #0
 800621e:	6078      	str	r0, [r7, #4]
 8006220:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8006222:	6838      	ldr	r0, [r7, #0]
 8006224:	f000 f86d 	bl	8006302 <_ZSt11__addressofIiEPT_RS0_>
 8006228:	4603      	mov	r3, r0
 800622a:	4618      	mov	r0, r3
 800622c:	f000 f874 	bl	8006318 <_ZSt8_DestroyIiEvPT_>
	    return {};
 8006230:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006232:	4618      	mov	r0, r3
 8006234:	370c      	adds	r7, #12
 8006236:	46bd      	mov	sp, r7
 8006238:	bd90      	pop	{r4, r7, pc}

0800623a <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESE_>:
 800623a:	b590      	push	{r4, r7, lr}
 800623c:	b083      	sub	sp, #12
 800623e:	af00      	add	r7, sp, #0
 8006240:	6078      	str	r0, [r7, #4]
 8006242:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8006244:	6838      	ldr	r0, [r7, #0]
 8006246:	f000 f871 	bl	800632c <_ZSt11__addressofIfEPT_RS0_>
 800624a:	4603      	mov	r3, r0
 800624c:	4618      	mov	r0, r3
 800624e:	f000 f878 	bl	8006342 <_ZSt8_DestroyIfEvPT_>
	    return {};
 8006252:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8006254:	4618      	mov	r0, r3
 8006256:	370c      	adds	r7, #12
 8006258:	46bd      	mov	sp, r7
 800625a:	bd90      	pop	{r4, r7, pc}

0800625c <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
 800625c:	b480      	push	{r7}
 800625e:	b083      	sub	sp, #12
 8006260:	af00      	add	r7, sp, #0
 8006262:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	4618      	mov	r0, r3
 8006268:	370c      	adds	r7, #12
 800626a:	46bd      	mov	sp, r7
 800626c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006270:	4770      	bx	lr

08006272 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESE_>:
 8006272:	b590      	push	{r4, r7, lr}
 8006274:	b083      	sub	sp, #12
 8006276:	af00      	add	r7, sp, #0
 8006278:	6078      	str	r0, [r7, #4]
 800627a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800627c:	6838      	ldr	r0, [r7, #0]
 800627e:	f000 f86a 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8006282:	4603      	mov	r3, r0
 8006284:	4618      	mov	r0, r3
 8006286:	f000 f871 	bl	800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 800628a:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800628c:	4618      	mov	r0, r3
 800628e:	370c      	adds	r7, #12
 8006290:	46bd      	mov	sp, r7
 8006292:	bd90      	pop	{r4, r7, pc}

08006294 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRS9_EENS0_16__variant_cookieESE_>:
 8006294:	b590      	push	{r4, r7, lr}
 8006296:	b083      	sub	sp, #12
 8006298:	af00      	add	r7, sp, #0
 800629a:	6078      	str	r0, [r7, #4]
 800629c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800629e:	6838      	ldr	r0, [r7, #0]
 80062a0:	f000 f86f 	bl	8006382 <_ZSt11__addressofIP8VariableEPT_RS2_>
 80062a4:	4603      	mov	r3, r0
 80062a6:	4618      	mov	r0, r3
 80062a8:	f000 f876 	bl	8006398 <_ZSt8_DestroyIP8VariableEvPT_>
	    return {};
 80062ac:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80062ae:	4618      	mov	r0, r3
 80062b0:	370c      	adds	r7, #12
 80062b2:	46bd      	mov	sp, r7
 80062b4:	bd90      	pop	{r4, r7, pc}

080062b6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE13_M_reset_implEvENUlOT_E_clIRSB_EENS0_16__variant_cookieESE_>:
 80062b6:	b590      	push	{r4, r7, lr}
 80062b8:	b083      	sub	sp, #12
 80062ba:	af00      	add	r7, sp, #0
 80062bc:	6078      	str	r0, [r7, #4]
 80062be:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80062c0:	6838      	ldr	r0, [r7, #0]
 80062c2:	f000 f873 	bl	80063ac <_ZSt11__addressofIP13Function_callEPT_RS2_>
 80062c6:	4603      	mov	r3, r0
 80062c8:	4618      	mov	r0, r3
 80062ca:	f000 f87a 	bl	80063c2 <_ZSt8_DestroyIP13Function_callEvPT_>
	    return {};
 80062ce:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80062d0:	4618      	mov	r0, r3
 80062d2:	370c      	adds	r7, #12
 80062d4:	46bd      	mov	sp, r7
 80062d6:	bd90      	pop	{r4, r7, pc}

080062d8 <_ZSt11__addressofIbEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80062d8:	b480      	push	{r7}
 80062da:	b083      	sub	sp, #12
 80062dc:	af00      	add	r7, sp, #0
 80062de:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	4618      	mov	r0, r3
 80062e4:	370c      	adds	r7, #12
 80062e6:	46bd      	mov	sp, r7
 80062e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062ec:	4770      	bx	lr

080062ee <_ZSt8_DestroyIbEvPT_>:
    _Destroy(_Tp* __pointer)
 80062ee:	b480      	push	{r7}
 80062f0:	b083      	sub	sp, #12
 80062f2:	af00      	add	r7, sp, #0
 80062f4:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80062f6:	bf00      	nop
 80062f8:	370c      	adds	r7, #12
 80062fa:	46bd      	mov	sp, r7
 80062fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006300:	4770      	bx	lr

08006302 <_ZSt11__addressofIiEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8006302:	b480      	push	{r7}
 8006304:	b083      	sub	sp, #12
 8006306:	af00      	add	r7, sp, #0
 8006308:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	4618      	mov	r0, r3
 800630e:	370c      	adds	r7, #12
 8006310:	46bd      	mov	sp, r7
 8006312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006316:	4770      	bx	lr

08006318 <_ZSt8_DestroyIiEvPT_>:
    _Destroy(_Tp* __pointer)
 8006318:	b480      	push	{r7}
 800631a:	b083      	sub	sp, #12
 800631c:	af00      	add	r7, sp, #0
 800631e:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8006320:	bf00      	nop
 8006322:	370c      	adds	r7, #12
 8006324:	46bd      	mov	sp, r7
 8006326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800632a:	4770      	bx	lr

0800632c <_ZSt11__addressofIfEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800632c:	b480      	push	{r7}
 800632e:	b083      	sub	sp, #12
 8006330:	af00      	add	r7, sp, #0
 8006332:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	4618      	mov	r0, r3
 8006338:	370c      	adds	r7, #12
 800633a:	46bd      	mov	sp, r7
 800633c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006340:	4770      	bx	lr

08006342 <_ZSt8_DestroyIfEvPT_>:
    _Destroy(_Tp* __pointer)
 8006342:	b480      	push	{r7}
 8006344:	b083      	sub	sp, #12
 8006346:	af00      	add	r7, sp, #0
 8006348:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 800634a:	bf00      	nop
 800634c:	370c      	adds	r7, #12
 800634e:	46bd      	mov	sp, r7
 8006350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006354:	4770      	bx	lr

08006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8006356:	b480      	push	{r7}
 8006358:	b083      	sub	sp, #12
 800635a:	af00      	add	r7, sp, #0
 800635c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800635e:	687b      	ldr	r3, [r7, #4]
 8006360:	4618      	mov	r0, r3
 8006362:	370c      	adds	r7, #12
 8006364:	46bd      	mov	sp, r7
 8006366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800636a:	4770      	bx	lr

0800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    _Destroy(_Tp* __pointer)
 800636c:	b580      	push	{r7, lr}
 800636e:	b082      	sub	sp, #8
 8006370:	af00      	add	r7, sp, #0
 8006372:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8006374:	6878      	ldr	r0, [r7, #4]
 8006376:	f01a f91e 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800637a:	bf00      	nop
 800637c:	3708      	adds	r7, #8
 800637e:	46bd      	mov	sp, r7
 8006380:	bd80      	pop	{r7, pc}

08006382 <_ZSt11__addressofIP8VariableEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8006382:	b480      	push	{r7}
 8006384:	b083      	sub	sp, #12
 8006386:	af00      	add	r7, sp, #0
 8006388:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800638a:	687b      	ldr	r3, [r7, #4]
 800638c:	4618      	mov	r0, r3
 800638e:	370c      	adds	r7, #12
 8006390:	46bd      	mov	sp, r7
 8006392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006396:	4770      	bx	lr

08006398 <_ZSt8_DestroyIP8VariableEvPT_>:
    _Destroy(_Tp* __pointer)
 8006398:	b480      	push	{r7}
 800639a:	b083      	sub	sp, #12
 800639c:	af00      	add	r7, sp, #0
 800639e:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80063a0:	bf00      	nop
 80063a2:	370c      	adds	r7, #12
 80063a4:	46bd      	mov	sp, r7
 80063a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063aa:	4770      	bx	lr

080063ac <_ZSt11__addressofIP13Function_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80063ac:	b480      	push	{r7}
 80063ae:	b083      	sub	sp, #12
 80063b0:	af00      	add	r7, sp, #0
 80063b2:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	4618      	mov	r0, r3
 80063b8:	370c      	adds	r7, #12
 80063ba:	46bd      	mov	sp, r7
 80063bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063c0:	4770      	bx	lr

080063c2 <_ZSt8_DestroyIP13Function_callEvPT_>:
    _Destroy(_Tp* __pointer)
 80063c2:	b480      	push	{r7}
 80063c4:	b083      	sub	sp, #12
 80063c6:	af00      	add	r7, sp, #0
 80063c8:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 80063ca:	bf00      	nop
 80063cc:	370c      	adds	r7, #12
 80063ce:	46bd      	mov	sp, r7
 80063d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063d4:	4770      	bx	lr
	...

080063d8 <_Z41__static_initialization_and_destruction_0ii>:
 80063d8:	b590      	push	{r4, r7, lr}
 80063da:	b0e7      	sub	sp, #412	; 0x19c
 80063dc:	af02      	add	r7, sp, #8
 80063de:	1d3b      	adds	r3, r7, #4
 80063e0:	6018      	str	r0, [r3, #0]
 80063e2:	463b      	mov	r3, r7
 80063e4:	6019      	str	r1, [r3, #0]
 80063e6:	1d3b      	adds	r3, r7, #4
 80063e8:	681b      	ldr	r3, [r3, #0]
 80063ea:	2b01      	cmp	r3, #1
 80063ec:	f040 819d 	bne.w	800672a <_Z41__static_initialization_and_destruction_0ii+0x352>
 80063f0:	463b      	mov	r3, r7
 80063f2:	681b      	ldr	r3, [r3, #0]
 80063f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80063f8:	4293      	cmp	r3, r2
 80063fa:	f040 8196 	bne.w	800672a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 80063fe:	f107 0314 	add.w	r3, r7, #20
 8006402:	4618      	mov	r0, r3
 8006404:	2322      	movs	r3, #34	; 0x22
 8006406:	461a      	mov	r2, r3
 8006408:	2100      	movs	r1, #0
 800640a:	f01b fa7f 	bl	802190c <memset>
 800640e:	f107 0314 	add.w	r3, r7, #20
 8006412:	223a      	movs	r2, #58	; 0x3a
 8006414:	701a      	strb	r2, [r3, #0]
 8006416:	f107 0314 	add.w	r3, r7, #20
 800641a:	2201      	movs	r2, #1
 800641c:	705a      	strb	r2, [r3, #1]
 800641e:	f107 0314 	add.w	r3, r7, #20
 8006422:	220a      	movs	r2, #10
 8006424:	709a      	strb	r2, [r3, #2]
 8006426:	f107 0314 	add.w	r3, r7, #20
 800642a:	220a      	movs	r2, #10
 800642c:	70da      	strb	r2, [r3, #3]
 800642e:	f107 0314 	add.w	r3, r7, #20
 8006432:	222c      	movs	r2, #44	; 0x2c
 8006434:	711a      	strb	r2, [r3, #4]
 8006436:	f107 0314 	add.w	r3, r7, #20
 800643a:	220c      	movs	r2, #12
 800643c:	715a      	strb	r2, [r3, #5]
 800643e:	f107 0314 	add.w	r3, r7, #20
 8006442:	222e      	movs	r2, #46	; 0x2e
 8006444:	719a      	strb	r2, [r3, #6]
 8006446:	f107 0314 	add.w	r3, r7, #20
 800644a:	220b      	movs	r2, #11
 800644c:	71da      	strb	r2, [r3, #7]
 800644e:	f107 0314 	add.w	r3, r7, #20
 8006452:	225b      	movs	r2, #91	; 0x5b
 8006454:	721a      	strb	r2, [r3, #8]
 8006456:	f107 0314 	add.w	r3, r7, #20
 800645a:	220d      	movs	r2, #13
 800645c:	725a      	strb	r2, [r3, #9]
 800645e:	f107 0314 	add.w	r3, r7, #20
 8006462:	225d      	movs	r2, #93	; 0x5d
 8006464:	729a      	strb	r2, [r3, #10]
 8006466:	f107 0314 	add.w	r3, r7, #20
 800646a:	220e      	movs	r2, #14
 800646c:	72da      	strb	r2, [r3, #11]
 800646e:	f107 0314 	add.w	r3, r7, #20
 8006472:	227c      	movs	r2, #124	; 0x7c
 8006474:	731a      	strb	r2, [r3, #12]
 8006476:	f107 0314 	add.w	r3, r7, #20
 800647a:	2215      	movs	r2, #21
 800647c:	735a      	strb	r2, [r3, #13]
 800647e:	f107 0314 	add.w	r3, r7, #20
 8006482:	2226      	movs	r2, #38	; 0x26
 8006484:	739a      	strb	r2, [r3, #14]
 8006486:	f107 0314 	add.w	r3, r7, #20
 800648a:	2216      	movs	r2, #22
 800648c:	73da      	strb	r2, [r3, #15]
 800648e:	f107 0314 	add.w	r3, r7, #20
 8006492:	222b      	movs	r2, #43	; 0x2b
 8006494:	741a      	strb	r2, [r3, #16]
 8006496:	f107 0314 	add.w	r3, r7, #20
 800649a:	221f      	movs	r2, #31
 800649c:	745a      	strb	r2, [r3, #17]
 800649e:	f107 0314 	add.w	r3, r7, #20
 80064a2:	222d      	movs	r2, #45	; 0x2d
 80064a4:	749a      	strb	r2, [r3, #18]
 80064a6:	f107 0314 	add.w	r3, r7, #20
 80064aa:	2220      	movs	r2, #32
 80064ac:	74da      	strb	r2, [r3, #19]
 80064ae:	f107 0314 	add.w	r3, r7, #20
 80064b2:	222a      	movs	r2, #42	; 0x2a
 80064b4:	751a      	strb	r2, [r3, #20]
 80064b6:	f107 0314 	add.w	r3, r7, #20
 80064ba:	2221      	movs	r2, #33	; 0x21
 80064bc:	755a      	strb	r2, [r3, #21]
 80064be:	f107 0314 	add.w	r3, r7, #20
 80064c2:	222f      	movs	r2, #47	; 0x2f
 80064c4:	759a      	strb	r2, [r3, #22]
 80064c6:	f107 0314 	add.w	r3, r7, #20
 80064ca:	2222      	movs	r2, #34	; 0x22
 80064cc:	75da      	strb	r2, [r3, #23]
 80064ce:	f107 0314 	add.w	r3, r7, #20
 80064d2:	225e      	movs	r2, #94	; 0x5e
 80064d4:	761a      	strb	r2, [r3, #24]
 80064d6:	f107 0314 	add.w	r3, r7, #20
 80064da:	2223      	movs	r2, #35	; 0x23
 80064dc:	765a      	strb	r2, [r3, #25]
 80064de:	f107 0314 	add.w	r3, r7, #20
 80064e2:	2225      	movs	r2, #37	; 0x25
 80064e4:	769a      	strb	r2, [r3, #26]
 80064e6:	f107 0314 	add.w	r3, r7, #20
 80064ea:	2224      	movs	r2, #36	; 0x24
 80064ec:	76da      	strb	r2, [r3, #27]
 80064ee:	f107 0314 	add.w	r3, r7, #20
 80064f2:	2228      	movs	r2, #40	; 0x28
 80064f4:	771a      	strb	r2, [r3, #28]
 80064f6:	f107 0314 	add.w	r3, r7, #20
 80064fa:	2226      	movs	r2, #38	; 0x26
 80064fc:	775a      	strb	r2, [r3, #29]
 80064fe:	f107 0314 	add.w	r3, r7, #20
 8006502:	2229      	movs	r2, #41	; 0x29
 8006504:	779a      	strb	r2, [r3, #30]
 8006506:	f107 0314 	add.w	r3, r7, #20
 800650a:	2227      	movs	r2, #39	; 0x27
 800650c:	77da      	strb	r2, [r3, #31]
 800650e:	f107 0314 	add.w	r3, r7, #20
 8006512:	2225      	movs	r2, #37	; 0x25
 8006514:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8006518:	f107 030c 	add.w	r3, r7, #12
 800651c:	f107 0214 	add.w	r2, r7, #20
 8006520:	601a      	str	r2, [r3, #0]
 8006522:	f107 030c 	add.w	r3, r7, #12
 8006526:	2211      	movs	r2, #17
 8006528:	605a      	str	r2, [r3, #4]
 800652a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800652e:	4618      	mov	r0, r3
 8006530:	f7fa fed8 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8006534:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8006538:	f107 020c 	add.w	r2, r7, #12
 800653c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8006540:	9300      	str	r3, [sp, #0]
 8006542:	460b      	mov	r3, r1
 8006544:	ca06      	ldmia	r2, {r1, r2}
 8006546:	4885      	ldr	r0, [pc, #532]	; (800675c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8006548:	f7fa fee4 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800654c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8006550:	4618      	mov	r0, r3
 8006552:	f7fa fed3 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8006556:	2305      	movs	r3, #5
 8006558:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800655c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8006560:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8006564:	497e      	ldr	r1, [pc, #504]	; (8006760 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8006566:	4618      	mov	r0, r3
 8006568:	f7fa fdc0 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800656c:	2306      	movs	r3, #6
 800656e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8006572:	f207 1263 	addw	r2, r7, #355	; 0x163
 8006576:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800657a:	331c      	adds	r3, #28
 800657c:	4979      	ldr	r1, [pc, #484]	; (8006764 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800657e:	4618      	mov	r0, r3
 8006580:	f7fa fddc 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8006584:	2307      	movs	r3, #7
 8006586:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800658a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800658e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8006592:	3338      	adds	r3, #56	; 0x38
 8006594:	4974      	ldr	r1, [pc, #464]	; (8006768 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8006596:	4618      	mov	r0, r3
 8006598:	f7fa fdd0 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800659c:	2308      	movs	r3, #8
 800659e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 80065a2:	f207 1265 	addw	r2, r7, #357	; 0x165
 80065a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80065aa:	3354      	adds	r3, #84	; 0x54
 80065ac:	496f      	ldr	r1, [pc, #444]	; (800676c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 80065ae:	4618      	mov	r0, r3
 80065b0:	f7fa fd9c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 80065b4:	2309      	movs	r3, #9
 80065b6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 80065ba:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 80065be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80065c2:	3370      	adds	r3, #112	; 0x70
 80065c4:	496a      	ldr	r1, [pc, #424]	; (8006770 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 80065c6:	4618      	mov	r0, r3
 80065c8:	f7fa fde0 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 80065cc:	2310      	movs	r3, #16
 80065ce:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 80065d2:	f207 1267 	addw	r2, r7, #359	; 0x167
 80065d6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80065da:	338c      	adds	r3, #140	; 0x8c
 80065dc:	4965      	ldr	r1, [pc, #404]	; (8006774 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 80065de:	4618      	mov	r0, r3
 80065e0:	f7fa fdfc 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 80065e4:	2311      	movs	r3, #17
 80065e6:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 80065ea:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 80065ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80065f2:	33a8      	adds	r3, #168	; 0xa8
 80065f4:	4960      	ldr	r1, [pc, #384]	; (8006778 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 80065f6:	4618      	mov	r0, r3
 80065f8:	f7fa fdc8 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 80065fc:	2312      	movs	r3, #18
 80065fe:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8006602:	f207 1269 	addw	r2, r7, #361	; 0x169
 8006606:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800660a:	33c4      	adds	r3, #196	; 0xc4
 800660c:	495b      	ldr	r1, [pc, #364]	; (800677c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800660e:	4618      	mov	r0, r3
 8006610:	f7fa fd6c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8006614:	2313      	movs	r3, #19
 8006616:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800661a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800661e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8006622:	33e0      	adds	r3, #224	; 0xe0
 8006624:	4956      	ldr	r1, [pc, #344]	; (8006780 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8006626:	4618      	mov	r0, r3
 8006628:	f7fa fd88 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800662c:	2314      	movs	r3, #20
 800662e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8006632:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8006636:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800663a:	33fc      	adds	r3, #252	; 0xfc
 800663c:	4951      	ldr	r1, [pc, #324]	; (8006784 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800663e:	4618      	mov	r0, r3
 8006640:	f7fa fdf4 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8006644:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8006648:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800664c:	601a      	str	r2, [r3, #0]
 800664e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8006652:	220a      	movs	r2, #10
 8006654:	605a      	str	r2, [r3, #4]
 8006656:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800665a:	4618      	mov	r0, r3
 800665c:	f7fa fee7 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8006660:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8006664:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8006668:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800666c:	9300      	str	r3, [sp, #0]
 800666e:	460b      	mov	r3, r1
 8006670:	ca06      	ldmia	r2, {r1, r2}
 8006672:	4845      	ldr	r0, [pc, #276]	; (8006788 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8006674:	f7fa fef3 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8006678:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800667c:	4618      	mov	r0, r3
 800667e:	f7fa fee2 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8006682:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8006686:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800668a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800668e:	429c      	cmp	r4, r3
 8006690:	d004      	beq.n	800669c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8006692:	3c1c      	subs	r4, #28
 8006694:	4620      	mov	r0, r4
 8006696:	f7fa fd1c 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800669a:	e7f6      	b.n	800668a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800669c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80066a0:	2200      	movs	r2, #0
 80066a2:	601a      	str	r2, [r3, #0]
 80066a4:	605a      	str	r2, [r3, #4]
 80066a6:	609a      	str	r2, [r3, #8]
 80066a8:	233c      	movs	r3, #60	; 0x3c
 80066aa:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 80066ae:	231b      	movs	r3, #27
 80066b0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80066b4:	231c      	movs	r3, #28
 80066b6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80066ba:	233e      	movs	r3, #62	; 0x3e
 80066bc:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80066c0:	2319      	movs	r3, #25
 80066c2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80066c6:	231a      	movs	r3, #26
 80066c8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80066cc:	233d      	movs	r3, #61	; 0x3d
 80066ce:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80066d2:	2318      	movs	r3, #24
 80066d4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80066d8:	231d      	movs	r3, #29
 80066da:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80066de:	2321      	movs	r3, #33	; 0x21
 80066e0:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 80066e4:	2317      	movs	r3, #23
 80066e6:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 80066ea:	231e      	movs	r3, #30
 80066ec:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 80066f0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80066f4:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 80066f8:	2304      	movs	r3, #4
 80066fa:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 80066fe:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8006702:	4618      	mov	r0, r3
 8006704:	f7fa fedb 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8006708:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800670c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8006710:	9300      	str	r3, [sp, #0]
 8006712:	4613      	mov	r3, r2
 8006714:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8006718:	ca06      	ldmia	r2, {r1, r2}
 800671a:	481c      	ldr	r0, [pc, #112]	; (800678c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800671c:	f7fa fee7 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8006720:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8006724:	4618      	mov	r0, r3
 8006726:	f7fa fed6 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800672a:	1d3b      	adds	r3, r7, #4
 800672c:	681b      	ldr	r3, [r3, #0]
 800672e:	2b00      	cmp	r3, #0
 8006730:	d10e      	bne.n	8006750 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8006732:	463b      	mov	r3, r7
 8006734:	681b      	ldr	r3, [r3, #0]
 8006736:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800673a:	4293      	cmp	r3, r2
 800673c:	d108      	bne.n	8006750 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800673e:	4813      	ldr	r0, [pc, #76]	; (800678c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8006740:	f7fd fb2e 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8006744:	4810      	ldr	r0, [pc, #64]	; (8006788 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8006746:	f7fd fb38 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800674a:	4804      	ldr	r0, [pc, #16]	; (800675c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800674c:	f7fd fb42 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8006750:	bf00      	nop
 8006752:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8006756:	46bd      	mov	sp, r7
 8006758:	bd90      	pop	{r4, r7, pc}
 800675a:	bf00      	nop
 800675c:	20000248 	.word	0x20000248
 8006760:	0802499c 	.word	0x0802499c
 8006764:	080249a4 	.word	0x080249a4
 8006768:	080249ac 	.word	0x080249ac
 800676c:	080249b4 	.word	0x080249b4
 8006770:	080249bc 	.word	0x080249bc
 8006774:	080249c4 	.word	0x080249c4
 8006778:	080249c8 	.word	0x080249c8
 800677c:	080249d0 	.word	0x080249d0
 8006780:	080249d8 	.word	0x080249d8
 8006784:	080249e0 	.word	0x080249e0
 8006788:	20000260 	.word	0x20000260
 800678c:	20000278 	.word	0x20000278

08006790 <_GLOBAL__sub_I__ZN17Primal_expressionD2Ev>:
 8006790:	b580      	push	{r7, lr}
 8006792:	af00      	add	r7, sp, #0
 8006794:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8006798:	2001      	movs	r0, #1
 800679a:	f7ff fe1d 	bl	80063d8 <_Z41__static_initialization_and_destruction_0ii>
 800679e:	bd80      	pop	{r7, pc}

080067a0 <_GLOBAL__sub_D__ZN17Primal_expressionD2Ev>:
 80067a0:	b580      	push	{r7, lr}
 80067a2:	af00      	add	r7, sp, #0
 80067a4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80067a8:	2000      	movs	r0, #0
 80067aa:	f7ff fe15 	bl	80063d8 <_Z41__static_initialization_and_destruction_0ii>
 80067ae:	bd80      	pop	{r7, pc}

080067b0 <_ZN21Expression_calculator7get_intEP10Expression>:

int Expression_calculator::line = 0;
int Expression_calculator::position = 0;

int Expression_calculator::get_int(Expression *exp)
{
 80067b0:	b580      	push	{r7, lr}
 80067b2:	b0a2      	sub	sp, #136	; 0x88
 80067b4:	af00      	add	r7, sp, #0
 80067b6:	6078      	str	r0, [r7, #4]
	line = exp->line;
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	681b      	ldr	r3, [r3, #0]
 80067bc:	4a65      	ldr	r2, [pc, #404]	; (8006954 <_ZN21Expression_calculator7get_intEP10Expression+0x1a4>)
 80067be:	6013      	str	r3, [r2, #0]
	position = exp->position;
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	685b      	ldr	r3, [r3, #4]
 80067c4:	4a64      	ldr	r2, [pc, #400]	; (8006958 <_ZN21Expression_calculator7get_intEP10Expression+0x1a8>)
 80067c6:	6013      	str	r3, [r2, #0]
	if (exp->and_exps.size() != 1)
 80067c8:	687b      	ldr	r3, [r7, #4]
 80067ca:	3308      	adds	r3, #8
 80067cc:	4618      	mov	r0, r3
 80067ce:	f000 fa98 	bl	8006d02 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 80067d2:	4603      	mov	r3, r0
 80067d4:	2b01      	cmp	r3, #1
 80067d6:	bf14      	ite	ne
 80067d8:	2301      	movne	r3, #1
 80067da:	2300      	moveq	r3, #0
 80067dc:	b2db      	uxtb	r3, r3
 80067de:	2b00      	cmp	r3, #0
 80067e0:	d01f      	beq.n	8006822 <_ZN21Expression_calculator7get_intEP10Expression+0x72>
	{
		Transmitter::report_error("integer", line, position);
 80067e2:	f107 0320 	add.w	r3, r7, #32
 80067e6:	4618      	mov	r0, r3
 80067e8:	f019 fd1f 	bl	802022a <_ZNSaIcEC1Ev>
 80067ec:	f107 0220 	add.w	r2, r7, #32
 80067f0:	f107 0308 	add.w	r3, r7, #8
 80067f4:	4959      	ldr	r1, [pc, #356]	; (800695c <_ZN21Expression_calculator7get_intEP10Expression+0x1ac>)
 80067f6:	4618      	mov	r0, r3
 80067f8:	f7fa fdc7 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80067fc:	4b55      	ldr	r3, [pc, #340]	; (8006954 <_ZN21Expression_calculator7get_intEP10Expression+0x1a4>)
 80067fe:	6819      	ldr	r1, [r3, #0]
 8006800:	4b55      	ldr	r3, [pc, #340]	; (8006958 <_ZN21Expression_calculator7get_intEP10Expression+0x1a8>)
 8006802:	681a      	ldr	r2, [r3, #0]
 8006804:	f107 0308 	add.w	r3, r7, #8
 8006808:	4618      	mov	r0, r3
 800680a:	f009 f935 	bl	800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>
 800680e:	f107 0308 	add.w	r3, r7, #8
 8006812:	4618      	mov	r0, r3
 8006814:	f019 fecf 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8006818:	f107 0320 	add.w	r3, r7, #32
 800681c:	4618      	mov	r0, r3
 800681e:	f019 fd05 	bl	802022c <_ZNSaIcED1Ev>
	}
	And_expression *and_exp = exp->and_exps[0];
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	3308      	adds	r3, #8
 8006826:	2100      	movs	r1, #0
 8006828:	4618      	mov	r0, r3
 800682a:	f000 fa7a 	bl	8006d22 <_ZNSt6vectorIP14And_expressionSaIS1_EEixEj>
 800682e:	4603      	mov	r3, r0
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
	if (and_exp->comp_exps.size() != 1)
 8006836:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800683a:	4618      	mov	r0, r3
 800683c:	f000 fa81 	bl	8006d42 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 8006840:	4603      	mov	r3, r0
 8006842:	2b01      	cmp	r3, #1
 8006844:	bf14      	ite	ne
 8006846:	2301      	movne	r3, #1
 8006848:	2300      	moveq	r3, #0
 800684a:	b2db      	uxtb	r3, r3
 800684c:	2b00      	cmp	r3, #0
 800684e:	d01f      	beq.n	8006890 <_ZN21Expression_calculator7get_intEP10Expression+0xe0>
	{
		Transmitter::report_error("integer", line, position);
 8006850:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8006854:	4618      	mov	r0, r3
 8006856:	f019 fce8 	bl	802022a <_ZNSaIcEC1Ev>
 800685a:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800685e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006862:	493e      	ldr	r1, [pc, #248]	; (800695c <_ZN21Expression_calculator7get_intEP10Expression+0x1ac>)
 8006864:	4618      	mov	r0, r3
 8006866:	f7fa fd90 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800686a:	4b3a      	ldr	r3, [pc, #232]	; (8006954 <_ZN21Expression_calculator7get_intEP10Expression+0x1a4>)
 800686c:	6819      	ldr	r1, [r3, #0]
 800686e:	4b3a      	ldr	r3, [pc, #232]	; (8006958 <_ZN21Expression_calculator7get_intEP10Expression+0x1a8>)
 8006870:	681a      	ldr	r2, [r3, #0]
 8006872:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006876:	4618      	mov	r0, r3
 8006878:	f009 f8fe 	bl	800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>
 800687c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006880:	4618      	mov	r0, r3
 8006882:	f019 fe98 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8006886:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800688a:	4618      	mov	r0, r3
 800688c:	f019 fcce 	bl	802022c <_ZNSaIcED1Ev>
	}
	Compare_expression *comp_exp = and_exp->comp_exps[0];
 8006890:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8006894:	2100      	movs	r1, #0
 8006896:	4618      	mov	r0, r3
 8006898:	f000 fa63 	bl	8006d62 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEixEj>
 800689c:	4603      	mov	r3, r0
 800689e:	681b      	ldr	r3, [r3, #0]
 80068a0:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
	if (comp_exp->op != COMP_OP_NONE)
 80068a4:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80068a8:	7a1b      	ldrb	r3, [r3, #8]
 80068aa:	2b00      	cmp	r3, #0
 80068ac:	d01f      	beq.n	80068ee <_ZN21Expression_calculator7get_intEP10Expression+0x13e>
	{
		Transmitter::report_error("integer", line, position);
 80068ae:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80068b2:	4618      	mov	r0, r3
 80068b4:	f019 fcb9 	bl	802022a <_ZNSaIcEC1Ev>
 80068b8:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80068bc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80068c0:	4926      	ldr	r1, [pc, #152]	; (800695c <_ZN21Expression_calculator7get_intEP10Expression+0x1ac>)
 80068c2:	4618      	mov	r0, r3
 80068c4:	f7fa fd61 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80068c8:	4b22      	ldr	r3, [pc, #136]	; (8006954 <_ZN21Expression_calculator7get_intEP10Expression+0x1a4>)
 80068ca:	6819      	ldr	r1, [r3, #0]
 80068cc:	4b22      	ldr	r3, [pc, #136]	; (8006958 <_ZN21Expression_calculator7get_intEP10Expression+0x1a8>)
 80068ce:	681a      	ldr	r2, [r3, #0]
 80068d0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80068d4:	4618      	mov	r0, r3
 80068d6:	f009 f8cf 	bl	800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>
 80068da:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80068de:	4618      	mov	r0, r3
 80068e0:	f019 fe69 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80068e4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80068e8:	4618      	mov	r0, r3
 80068ea:	f019 fc9f 	bl	802022c <_ZNSaIcED1Ev>
	}
	Relation_expression *rel_exp = comp_exp->left_rel_exp;
 80068ee:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	67fb      	str	r3, [r7, #124]	; 0x7c
	if (rel_exp->op != REL_OP_NONE)
 80068f6:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80068f8:	7a1b      	ldrb	r3, [r3, #8]
 80068fa:	2b00      	cmp	r3, #0
 80068fc:	d01f      	beq.n	800693e <_ZN21Expression_calculator7get_intEP10Expression+0x18e>
	{
		Transmitter::report_error("integer", line, position);
 80068fe:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8006902:	4618      	mov	r0, r3
 8006904:	f019 fc91 	bl	802022a <_ZNSaIcEC1Ev>
 8006908:	f107 0274 	add.w	r2, r7, #116	; 0x74
 800690c:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8006910:	4912      	ldr	r1, [pc, #72]	; (800695c <_ZN21Expression_calculator7get_intEP10Expression+0x1ac>)
 8006912:	4618      	mov	r0, r3
 8006914:	f7fa fd39 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8006918:	4b0e      	ldr	r3, [pc, #56]	; (8006954 <_ZN21Expression_calculator7get_intEP10Expression+0x1a4>)
 800691a:	6819      	ldr	r1, [r3, #0]
 800691c:	4b0e      	ldr	r3, [pc, #56]	; (8006958 <_ZN21Expression_calculator7get_intEP10Expression+0x1a8>)
 800691e:	681a      	ldr	r2, [r3, #0]
 8006920:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8006924:	4618      	mov	r0, r3
 8006926:	f009 f8a7 	bl	800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>
 800692a:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800692e:	4618      	mov	r0, r3
 8006930:	f019 fe41 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8006934:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8006938:	4618      	mov	r0, r3
 800693a:	f019 fc77 	bl	802022c <_ZNSaIcED1Ev>
	}
	Sum_expression *sum_exp = rel_exp->left_sum_exp;
 800693e:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8006940:	681b      	ldr	r3, [r3, #0]
 8006942:	67bb      	str	r3, [r7, #120]	; 0x78

	return get_int(sum_exp);
 8006944:	6fb8      	ldr	r0, [r7, #120]	; 0x78
 8006946:	f000 f80b 	bl	8006960 <_ZN21Expression_calculator7get_intEP14Sum_expression>
 800694a:	4603      	mov	r3, r0
}
 800694c:	4618      	mov	r0, r3
 800694e:	3788      	adds	r7, #136	; 0x88
 8006950:	46bd      	mov	sp, r7
 8006952:	bd80      	pop	{r7, pc}
 8006954:	200002d8 	.word	0x200002d8
 8006958:	200002dc 	.word	0x200002dc
 800695c:	080249e4 	.word	0x080249e4

08006960 <_ZN21Expression_calculator7get_intEP14Sum_expression>:

int Expression_calculator::get_int(Sum_expression *sum_exp)
{
 8006960:	b580      	push	{r7, lr}
 8006962:	b088      	sub	sp, #32
 8006964:	af00      	add	r7, sp, #0
 8006966:	6078      	str	r0, [r7, #4]
	int var = 0;
 8006968:	2300      	movs	r3, #0
 800696a:	61fb      	str	r3, [r7, #28]
	for (Multiply_expression *mult_exp : sum_exp->mult_exps)
 800696c:	687b      	ldr	r3, [r7, #4]
 800696e:	61bb      	str	r3, [r7, #24]
 8006970:	69b8      	ldr	r0, [r7, #24]
 8006972:	f7fd ffae 	bl	80048d2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 8006976:	4603      	mov	r3, r0
 8006978:	613b      	str	r3, [r7, #16]
 800697a:	69b8      	ldr	r0, [r7, #24]
 800697c:	f7fd ffb9 	bl	80048f2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 8006980:	4603      	mov	r3, r0
 8006982:	60fb      	str	r3, [r7, #12]
 8006984:	f107 020c 	add.w	r2, r7, #12
 8006988:	f107 0310 	add.w	r3, r7, #16
 800698c:	4611      	mov	r1, r2
 800698e:	4618      	mov	r0, r3
 8006990:	f7fd ffc0 	bl	8004914 <_ZN9__gnu_cxxneIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8006994:	4603      	mov	r3, r0
 8006996:	2b00      	cmp	r3, #0
 8006998:	d014      	beq.n	80069c4 <_ZN21Expression_calculator7get_intEP14Sum_expression+0x64>
 800699a:	f107 0310 	add.w	r3, r7, #16
 800699e:	4618      	mov	r0, r3
 80069a0:	f7fd ffe0 	bl	8004964 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 80069a4:	4603      	mov	r3, r0
 80069a6:	681b      	ldr	r3, [r3, #0]
 80069a8:	617b      	str	r3, [r7, #20]
	{
		var += get_int(mult_exp);
 80069aa:	6978      	ldr	r0, [r7, #20]
 80069ac:	f000 f80f 	bl	80069ce <_ZN21Expression_calculator7get_intEP19Multiply_expression>
 80069b0:	4602      	mov	r2, r0
 80069b2:	69fb      	ldr	r3, [r7, #28]
 80069b4:	4413      	add	r3, r2
 80069b6:	61fb      	str	r3, [r7, #28]
	for (Multiply_expression *mult_exp : sum_exp->mult_exps)
 80069b8:	f107 0310 	add.w	r3, r7, #16
 80069bc:	4618      	mov	r0, r3
 80069be:	f7fd ffc1 	bl	8004944 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEppEv>
 80069c2:	e7df      	b.n	8006984 <_ZN21Expression_calculator7get_intEP14Sum_expression+0x24>
	}
	return var;
 80069c4:	69fb      	ldr	r3, [r7, #28]
}
 80069c6:	4618      	mov	r0, r3
 80069c8:	3720      	adds	r7, #32
 80069ca:	46bd      	mov	sp, r7
 80069cc:	bd80      	pop	{r7, pc}

080069ce <_ZN21Expression_calculator7get_intEP19Multiply_expression>:

int Expression_calculator::get_int(Multiply_expression *mult_exp)
{
 80069ce:	b580      	push	{r7, lr}
 80069d0:	b088      	sub	sp, #32
 80069d2:	af00      	add	r7, sp, #0
 80069d4:	6078      	str	r0, [r7, #4]
	int var = 1;
 80069d6:	2301      	movs	r3, #1
 80069d8:	61fb      	str	r3, [r7, #28]
	for (Power_expression *pow_exp : mult_exp->pow_exps)
 80069da:	687b      	ldr	r3, [r7, #4]
 80069dc:	61bb      	str	r3, [r7, #24]
 80069de:	69b8      	ldr	r0, [r7, #24]
 80069e0:	f7fd feec 	bl	80047bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 80069e4:	4603      	mov	r3, r0
 80069e6:	613b      	str	r3, [r7, #16]
 80069e8:	69b8      	ldr	r0, [r7, #24]
 80069ea:	f7fd fef7 	bl	80047dc <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 80069ee:	4603      	mov	r3, r0
 80069f0:	60fb      	str	r3, [r7, #12]
 80069f2:	f107 020c 	add.w	r2, r7, #12
 80069f6:	f107 0310 	add.w	r3, r7, #16
 80069fa:	4611      	mov	r1, r2
 80069fc:	4618      	mov	r0, r3
 80069fe:	f7fd fefe 	bl	80047fe <_ZN9__gnu_cxxneIPP16Power_expressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 8006a02:	4603      	mov	r3, r0
 8006a04:	2b00      	cmp	r3, #0
 8006a06:	d015      	beq.n	8006a34 <_ZN21Expression_calculator7get_intEP19Multiply_expression+0x66>
 8006a08:	f107 0310 	add.w	r3, r7, #16
 8006a0c:	4618      	mov	r0, r3
 8006a0e:	f7fd ff1e 	bl	800484e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8006a12:	4603      	mov	r3, r0
 8006a14:	681b      	ldr	r3, [r3, #0]
 8006a16:	617b      	str	r3, [r7, #20]
	{
		var *= get_int(pow_exp);
 8006a18:	6978      	ldr	r0, [r7, #20]
 8006a1a:	f000 f810 	bl	8006a3e <_ZN21Expression_calculator7get_intEP16Power_expression>
 8006a1e:	4602      	mov	r2, r0
 8006a20:	69fb      	ldr	r3, [r7, #28]
 8006a22:	fb02 f303 	mul.w	r3, r2, r3
 8006a26:	61fb      	str	r3, [r7, #28]
	for (Power_expression *pow_exp : mult_exp->pow_exps)
 8006a28:	f107 0310 	add.w	r3, r7, #16
 8006a2c:	4618      	mov	r0, r3
 8006a2e:	f7fd fefe 	bl	800482e <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEppEv>
 8006a32:	e7de      	b.n	80069f2 <_ZN21Expression_calculator7get_intEP19Multiply_expression+0x24>
	}
	return var;
 8006a34:	69fb      	ldr	r3, [r7, #28]
}
 8006a36:	4618      	mov	r0, r3
 8006a38:	3720      	adds	r7, #32
 8006a3a:	46bd      	mov	sp, r7
 8006a3c:	bd80      	pop	{r7, pc}

08006a3e <_ZN21Expression_calculator7get_intEP16Power_expression>:

int Expression_calculator::get_int(Power_expression *pow_exp)
{
 8006a3e:	b580      	push	{r7, lr}
 8006a40:	b084      	sub	sp, #16
 8006a42:	af00      	add	r7, sp, #0
 8006a44:	6078      	str	r0, [r7, #4]
	int var = get_int(pow_exp->left_un_exp);
 8006a46:	687b      	ldr	r3, [r7, #4]
 8006a48:	681b      	ldr	r3, [r3, #0]
 8006a4a:	4618      	mov	r0, r3
 8006a4c:	f000 f81c 	bl	8006a88 <_ZN21Expression_calculator7get_intEP16Unary_expression>
 8006a50:	60f8      	str	r0, [r7, #12]

	if (pow_exp->right_un_exp)
 8006a52:	687b      	ldr	r3, [r7, #4]
 8006a54:	685b      	ldr	r3, [r3, #4]
 8006a56:	2b00      	cmp	r3, #0
 8006a58:	d011      	beq.n	8006a7e <_ZN21Expression_calculator7get_intEP16Power_expression+0x40>
	{
		int temp = get_int(pow_exp->right_un_exp);
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	685b      	ldr	r3, [r3, #4]
 8006a5e:	4618      	mov	r0, r3
 8006a60:	f000 f812 	bl	8006a88 <_ZN21Expression_calculator7get_intEP16Unary_expression>
 8006a64:	60b8      	str	r0, [r7, #8]
		var = pow(var, temp);
 8006a66:	68b9      	ldr	r1, [r7, #8]
 8006a68:	68f8      	ldr	r0, [r7, #12]
 8006a6a:	f000 f98a 	bl	8006d82 <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
 8006a6e:	ec53 2b10 	vmov	r2, r3, d0
 8006a72:	4610      	mov	r0, r2
 8006a74:	4619      	mov	r1, r3
 8006a76:	f7fa f88f 	bl	8000b98 <__aeabi_d2iz>
 8006a7a:	4603      	mov	r3, r0
 8006a7c:	60fb      	str	r3, [r7, #12]
	}

	return var;
 8006a7e:	68fb      	ldr	r3, [r7, #12]
}
 8006a80:	4618      	mov	r0, r3
 8006a82:	3710      	adds	r7, #16
 8006a84:	46bd      	mov	sp, r7
 8006a86:	bd80      	pop	{r7, pc}

08006a88 <_ZN21Expression_calculator7get_intEP16Unary_expression>:

int Expression_calculator::get_int(Unary_expression *un_exp)
{
 8006a88:	b580      	push	{r7, lr}
 8006a8a:	b08a      	sub	sp, #40	; 0x28
 8006a8c:	af00      	add	r7, sp, #0
 8006a8e:	6078      	str	r0, [r7, #4]
	switch (un_exp->op)
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	791b      	ldrb	r3, [r3, #4]
 8006a94:	2b00      	cmp	r3, #0
 8006a96:	d002      	beq.n	8006a9e <_ZN21Expression_calculator7get_intEP16Unary_expression+0x16>
 8006a98:	2b01      	cmp	r3, #1
 8006a9a:	d007      	beq.n	8006aac <_ZN21Expression_calculator7get_intEP16Unary_expression+0x24>
 8006a9c:	e00e      	b.n	8006abc <_ZN21Expression_calculator7get_intEP16Unary_expression+0x34>
	{
	case UN_OP_NONE:
		return get_int(un_exp->prior_exp);
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	681b      	ldr	r3, [r3, #0]
 8006aa2:	4618      	mov	r0, r3
 8006aa4:	f000 f836 	bl	8006b14 <_ZN21Expression_calculator7get_intEP19Priority_expression>
 8006aa8:	4603      	mov	r3, r0
 8006aaa:	e029      	b.n	8006b00 <_ZN21Expression_calculator7get_intEP16Unary_expression+0x78>
		break;
	case UN_OP_MINUS:
		return -get_int(un_exp->prior_exp);
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	681b      	ldr	r3, [r3, #0]
 8006ab0:	4618      	mov	r0, r3
 8006ab2:	f000 f82f 	bl	8006b14 <_ZN21Expression_calculator7get_intEP19Priority_expression>
 8006ab6:	4603      	mov	r3, r0
 8006ab8:	425b      	negs	r3, r3
 8006aba:	e021      	b.n	8006b00 <_ZN21Expression_calculator7get_intEP16Unary_expression+0x78>
		break;
	default:
		Transmitter::report_error("integer", line, position);
 8006abc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006ac0:	4618      	mov	r0, r3
 8006ac2:	f019 fbb2 	bl	802022a <_ZNSaIcEC1Ev>
 8006ac6:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8006aca:	f107 030c 	add.w	r3, r7, #12
 8006ace:	490e      	ldr	r1, [pc, #56]	; (8006b08 <_ZN21Expression_calculator7get_intEP16Unary_expression+0x80>)
 8006ad0:	4618      	mov	r0, r3
 8006ad2:	f7fa fc5a 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8006ad6:	4b0d      	ldr	r3, [pc, #52]	; (8006b0c <_ZN21Expression_calculator7get_intEP16Unary_expression+0x84>)
 8006ad8:	6819      	ldr	r1, [r3, #0]
 8006ada:	4b0d      	ldr	r3, [pc, #52]	; (8006b10 <_ZN21Expression_calculator7get_intEP16Unary_expression+0x88>)
 8006adc:	681a      	ldr	r2, [r3, #0]
 8006ade:	f107 030c 	add.w	r3, r7, #12
 8006ae2:	4618      	mov	r0, r3
 8006ae4:	f008 ffc8 	bl	800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>
 8006ae8:	f107 030c 	add.w	r3, r7, #12
 8006aec:	4618      	mov	r0, r3
 8006aee:	f019 fd62 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8006af2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006af6:	4618      	mov	r0, r3
 8006af8:	f019 fb98 	bl	802022c <_ZNSaIcED1Ev>
		break;
 8006afc:	bf00      	nop
	}
	return 0;
 8006afe:	2300      	movs	r3, #0
}
 8006b00:	4618      	mov	r0, r3
 8006b02:	3728      	adds	r7, #40	; 0x28
 8006b04:	46bd      	mov	sp, r7
 8006b06:	bd80      	pop	{r7, pc}
 8006b08:	080249e4 	.word	0x080249e4
 8006b0c:	200002d8 	.word	0x200002d8
 8006b10:	200002dc 	.word	0x200002dc

08006b14 <_ZN21Expression_calculator7get_intEP19Priority_expression>:

int Expression_calculator::get_int(Priority_expression *prior_exp)
{
 8006b14:	b580      	push	{r7, lr}
 8006b16:	b084      	sub	sp, #16
 8006b18:	af00      	add	r7, sp, #0
 8006b1a:	6078      	str	r0, [r7, #4]
	if(std::holds_alternative<Expression*>(prior_exp->exp))
 8006b1c:	687b      	ldr	r3, [r7, #4]
 8006b1e:	4618      	mov	r0, r3
 8006b20:	f7fd fded 	bl	80046fe <_ZSt17holds_alternativeIP10ExpressionJP17Primal_expressionS1_EEbRKSt7variantIJDpT0_EE>
 8006b24:	4603      	mov	r3, r0
 8006b26:	2b00      	cmp	r3, #0
 8006b28:	d00b      	beq.n	8006b42 <_ZN21Expression_calculator7get_intEP19Priority_expression+0x2e>
	{
		Expression* exp = std::get<Expression*>(prior_exp->exp);
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	4618      	mov	r0, r3
 8006b2e:	f7fd fdf7 	bl	8004720 <_ZSt3getIP10ExpressionJP17Primal_expressionS1_EERT_RSt7variantIJDpT0_EE>
 8006b32:	4603      	mov	r3, r0
 8006b34:	681b      	ldr	r3, [r3, #0]
 8006b36:	60bb      	str	r3, [r7, #8]
		return get_int(exp);
 8006b38:	68b8      	ldr	r0, [r7, #8]
 8006b3a:	f7ff fe39 	bl	80067b0 <_ZN21Expression_calculator7get_intEP10Expression>
 8006b3e:	4603      	mov	r3, r0
 8006b40:	e00b      	b.n	8006b5a <_ZN21Expression_calculator7get_intEP19Priority_expression+0x46>
	}
	else
	{
		Primal_expression* exp = std::get<Primal_expression*>(prior_exp->exp);
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	4618      	mov	r0, r3
 8006b46:	f7fd fdf7 	bl	8004738 <_ZSt3getIP17Primal_expressionJS1_P10ExpressionEERT_RSt7variantIJDpT0_EE>
 8006b4a:	4603      	mov	r3, r0
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	60fb      	str	r3, [r7, #12]
		return get_int(exp);
 8006b50:	68f8      	ldr	r0, [r7, #12]
 8006b52:	f000 f807 	bl	8006b64 <_ZN21Expression_calculator7get_intEP17Primal_expression>
 8006b56:	4603      	mov	r3, r0
 8006b58:	bf00      	nop
	}
}
 8006b5a:	4618      	mov	r0, r3
 8006b5c:	3710      	adds	r7, #16
 8006b5e:	46bd      	mov	sp, r7
 8006b60:	bd80      	pop	{r7, pc}
	...

08006b64 <_ZN21Expression_calculator7get_intEP17Primal_expression>:

int Expression_calculator::get_int(Primal_expression *primal_exp)
{
 8006b64:	b580      	push	{r7, lr}
 8006b66:	b08a      	sub	sp, #40	; 0x28
 8006b68:	af00      	add	r7, sp, #0
 8006b6a:	6078      	str	r0, [r7, #4]
	switch(primal_exp->type)
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	781b      	ldrb	r3, [r3, #0]
 8006b70:	3b01      	subs	r3, #1
 8006b72:	2b04      	cmp	r3, #4
 8006b74:	d828      	bhi.n	8006bc8 <_ZN21Expression_calculator7get_intEP17Primal_expression+0x64>
 8006b76:	a201      	add	r2, pc, #4	; (adr r2, 8006b7c <_ZN21Expression_calculator7get_intEP17Primal_expression+0x18>)
 8006b78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006b7c:	08006b91 	.word	0x08006b91
 8006b80:	08006ba1 	.word	0x08006ba1
 8006b84:	08006bc9 	.word	0x08006bc9
 8006b88:	08006bbb 	.word	0x08006bbb
 8006b8c:	08006bbf 	.word	0x08006bbf
	{
	case PRIMAL_INT:
		return std::get<int>(primal_exp->content);
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	3304      	adds	r3, #4
 8006b94:	4618      	mov	r0, r3
 8006b96:	f000 f914 	bl	8006dc2 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 8006b9a:	4603      	mov	r3, r0
 8006b9c:	681b      	ldr	r3, [r3, #0]
 8006b9e:	e034      	b.n	8006c0a <_ZN21Expression_calculator7get_intEP17Primal_expression+0xa6>
	case PRIMAL_FLOAT:
		return (int)(std::get<float>(primal_exp->content));
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	3304      	adds	r3, #4
 8006ba4:	4618      	mov	r0, r3
 8006ba6:	f000 f918 	bl	8006dda <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>
 8006baa:	4603      	mov	r3, r0
 8006bac:	edd3 7a00 	vldr	s15, [r3]
 8006bb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006bb4:	ee17 3a90 	vmov	r3, s15
 8006bb8:	e027      	b.n	8006c0a <_ZN21Expression_calculator7get_intEP17Primal_expression+0xa6>
	case PRIMAL_VARIABLE:
		return 0; //todo
 8006bba:	2300      	movs	r3, #0
 8006bbc:	e025      	b.n	8006c0a <_ZN21Expression_calculator7get_intEP17Primal_expression+0xa6>
	case PRIMAL_FUNCTION_CALL:
		return get_function_int(primal_exp);
 8006bbe:	6878      	ldr	r0, [r7, #4]
 8006bc0:	f000 f87c 	bl	8006cbc <_ZN21Expression_calculator16get_function_intEP17Primal_expression>
 8006bc4:	4603      	mov	r3, r0
 8006bc6:	e020      	b.n	8006c0a <_ZN21Expression_calculator7get_intEP17Primal_expression+0xa6>
	default:
		Transmitter::report_error("integer", line, position);
 8006bc8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006bcc:	4618      	mov	r0, r3
 8006bce:	f019 fb2c 	bl	802022a <_ZNSaIcEC1Ev>
 8006bd2:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8006bd6:	f107 030c 	add.w	r3, r7, #12
 8006bda:	490e      	ldr	r1, [pc, #56]	; (8006c14 <_ZN21Expression_calculator7get_intEP17Primal_expression+0xb0>)
 8006bdc:	4618      	mov	r0, r3
 8006bde:	f7fa fbd4 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8006be2:	4b0d      	ldr	r3, [pc, #52]	; (8006c18 <_ZN21Expression_calculator7get_intEP17Primal_expression+0xb4>)
 8006be4:	6819      	ldr	r1, [r3, #0]
 8006be6:	4b0d      	ldr	r3, [pc, #52]	; (8006c1c <_ZN21Expression_calculator7get_intEP17Primal_expression+0xb8>)
 8006be8:	681a      	ldr	r2, [r3, #0]
 8006bea:	f107 030c 	add.w	r3, r7, #12
 8006bee:	4618      	mov	r0, r3
 8006bf0:	f008 ff42 	bl	800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>
 8006bf4:	f107 030c 	add.w	r3, r7, #12
 8006bf8:	4618      	mov	r0, r3
 8006bfa:	f019 fcdc 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8006bfe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8006c02:	4618      	mov	r0, r3
 8006c04:	f019 fb12 	bl	802022c <_ZNSaIcED1Ev>
		return 0;
 8006c08:	2300      	movs	r3, #0
	}
}
 8006c0a:	4618      	mov	r0, r3
 8006c0c:	3728      	adds	r7, #40	; 0x28
 8006c0e:	46bd      	mov	sp, r7
 8006c10:	bd80      	pop	{r7, pc}
 8006c12:	bf00      	nop
 8006c14:	080249e4 	.word	0x080249e4
 8006c18:	200002d8 	.word	0x200002d8
 8006c1c:	200002dc 	.word	0x200002dc

08006c20 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 8006c20:	b580      	push	{r7, lr}
 8006c22:	b082      	sub	sp, #8
 8006c24:	af00      	add	r7, sp, #0
 8006c26:	6078      	str	r0, [r7, #4]
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	4618      	mov	r0, r3
 8006c2c:	f000 f8e1 	bl	8006df2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	4618      	mov	r0, r3
 8006c34:	3708      	adds	r7, #8
 8006c36:	46bd      	mov	sp, r7
 8006c38:	bd80      	pop	{r7, pc}

08006c3a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 8006c3a:	b580      	push	{r7, lr}
 8006c3c:	b082      	sub	sp, #8
 8006c3e:	af00      	add	r7, sp, #0
 8006c40:	6078      	str	r0, [r7, #4]
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	4618      	mov	r0, r3
 8006c46:	f7ff ffeb 	bl	8006c20 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8006c4a:	687b      	ldr	r3, [r7, #4]
 8006c4c:	4618      	mov	r0, r3
 8006c4e:	3708      	adds	r7, #8
 8006c50:	46bd      	mov	sp, r7
 8006c52:	bd80      	pop	{r7, pc}

08006c54 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 8006c54:	b580      	push	{r7, lr}
 8006c56:	b082      	sub	sp, #8
 8006c58:	af00      	add	r7, sp, #0
 8006c5a:	6078      	str	r0, [r7, #4]
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	4618      	mov	r0, r3
 8006c60:	f7ff ffeb 	bl	8006c3a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	4618      	mov	r0, r3
 8006c68:	3708      	adds	r7, #8
 8006c6a:	46bd      	mov	sp, r7
 8006c6c:	bd80      	pop	{r7, pc}

08006c6e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 8006c6e:	b580      	push	{r7, lr}
 8006c70:	b082      	sub	sp, #8
 8006c72:	af00      	add	r7, sp, #0
 8006c74:	6078      	str	r0, [r7, #4]
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	4618      	mov	r0, r3
 8006c7a:	f7ff ffeb 	bl	8006c54 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	4618      	mov	r0, r3
 8006c82:	3708      	adds	r7, #8
 8006c84:	46bd      	mov	sp, r7
 8006c86:	bd80      	pop	{r7, pc}

08006c88 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 8006c88:	b580      	push	{r7, lr}
 8006c8a:	b082      	sub	sp, #8
 8006c8c:	af00      	add	r7, sp, #0
 8006c8e:	6078      	str	r0, [r7, #4]
 8006c90:	687b      	ldr	r3, [r7, #4]
 8006c92:	4618      	mov	r0, r3
 8006c94:	f7ff ffeb 	bl	8006c6e <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8006c98:	687b      	ldr	r3, [r7, #4]
 8006c9a:	4618      	mov	r0, r3
 8006c9c:	3708      	adds	r7, #8
 8006c9e:	46bd      	mov	sp, r7
 8006ca0:	bd80      	pop	{r7, pc}

08006ca2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~variant() = default;
 8006ca2:	b580      	push	{r7, lr}
 8006ca4:	b082      	sub	sp, #8
 8006ca6:	af00      	add	r7, sp, #0
 8006ca8:	6078      	str	r0, [r7, #4]
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	4618      	mov	r0, r3
 8006cae:	f7ff ffeb 	bl	8006c88 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	4618      	mov	r0, r3
 8006cb6:	3708      	adds	r7, #8
 8006cb8:	46bd      	mov	sp, r7
 8006cba:	bd80      	pop	{r7, pc}

08006cbc <_ZN21Expression_calculator16get_function_intEP17Primal_expression>:

int Expression_calculator::get_function_int(Primal_expression* exp)
{
 8006cbc:	b590      	push	{r4, r7, lr}
 8006cbe:	b08b      	sub	sp, #44	; 0x2c
 8006cc0:	af00      	add	r7, sp, #0
 8006cc2:	6078      	str	r0, [r7, #4]
	Function_call* function_call = std::get<Function_call*>(exp->content);
 8006cc4:	687b      	ldr	r3, [r7, #4]
 8006cc6:	3304      	adds	r3, #4
 8006cc8:	4618      	mov	r0, r3
 8006cca:	f7fd fcf9 	bl	80046c0 <_ZSt3getIP13Function_callJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableS1_EERT_RSt7variantIJDpT0_EE>
 8006cce:	4603      	mov	r3, r0
 8006cd0:	681b      	ldr	r3, [r3, #0]
 8006cd2:	627b      	str	r3, [r7, #36]	; 0x24
	auto val = Function_handler::run_function(function_call);
 8006cd4:	f107 0308 	add.w	r3, r7, #8
 8006cd8:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006cda:	4618      	mov	r0, r3
 8006cdc:	f000 ff1a 	bl	8007b14 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call>
	return std::get<int>(val);
 8006ce0:	f107 0308 	add.w	r3, r7, #8
 8006ce4:	4618      	mov	r0, r3
 8006ce6:	f000 f890 	bl	8006e0a <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 8006cea:	4603      	mov	r3, r0
 8006cec:	681c      	ldr	r4, [r3, #0]
	auto val = Function_handler::run_function(function_call);
 8006cee:	f107 0308 	add.w	r3, r7, #8
 8006cf2:	4618      	mov	r0, r3
 8006cf4:	f7ff ffd5 	bl	8006ca2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
	return std::get<int>(val);
 8006cf8:	4623      	mov	r3, r4
}
 8006cfa:	4618      	mov	r0, r3
 8006cfc:	372c      	adds	r7, #44	; 0x2c
 8006cfe:	46bd      	mov	sp, r7
 8006d00:	bd90      	pop	{r4, r7, pc}

08006d02 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>:
#endif

      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      size_type
      size() const _GLIBCXX_NOEXCEPT
 8006d02:	b480      	push	{r7}
 8006d04:	b083      	sub	sp, #12
 8006d06:	af00      	add	r7, sp, #0
 8006d08:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8006d0a:	687b      	ldr	r3, [r7, #4]
 8006d0c:	685a      	ldr	r2, [r3, #4]
 8006d0e:	687b      	ldr	r3, [r7, #4]
 8006d10:	681b      	ldr	r3, [r3, #0]
 8006d12:	1ad3      	subs	r3, r2, r3
 8006d14:	109b      	asrs	r3, r3, #2
 8006d16:	4618      	mov	r0, r3
 8006d18:	370c      	adds	r7, #12
 8006d1a:	46bd      	mov	sp, r7
 8006d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d20:	4770      	bx	lr

08006d22 <_ZNSt6vectorIP14And_expressionSaIS1_EEixEj>:
       *  Note that data access with this operator is unchecked and
       *  out_of_range lookups are not defined. (For checked lookups
       *  see at().)
       */
      reference
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8006d22:	b480      	push	{r7}
 8006d24:	b083      	sub	sp, #12
 8006d26:	af00      	add	r7, sp, #0
 8006d28:	6078      	str	r0, [r7, #4]
 8006d2a:	6039      	str	r1, [r7, #0]
      {
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	681a      	ldr	r2, [r3, #0]
 8006d30:	683b      	ldr	r3, [r7, #0]
 8006d32:	009b      	lsls	r3, r3, #2
 8006d34:	4413      	add	r3, r2
      }
 8006d36:	4618      	mov	r0, r3
 8006d38:	370c      	adds	r7, #12
 8006d3a:	46bd      	mov	sp, r7
 8006d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d40:	4770      	bx	lr

08006d42 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8006d42:	b480      	push	{r7}
 8006d44:	b083      	sub	sp, #12
 8006d46:	af00      	add	r7, sp, #0
 8006d48:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8006d4a:	687b      	ldr	r3, [r7, #4]
 8006d4c:	685a      	ldr	r2, [r3, #4]
 8006d4e:	687b      	ldr	r3, [r7, #4]
 8006d50:	681b      	ldr	r3, [r3, #0]
 8006d52:	1ad3      	subs	r3, r2, r3
 8006d54:	109b      	asrs	r3, r3, #2
 8006d56:	4618      	mov	r0, r3
 8006d58:	370c      	adds	r7, #12
 8006d5a:	46bd      	mov	sp, r7
 8006d5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d60:	4770      	bx	lr

08006d62 <_ZNSt6vectorIP18Compare_expressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8006d62:	b480      	push	{r7}
 8006d64:	b083      	sub	sp, #12
 8006d66:	af00      	add	r7, sp, #0
 8006d68:	6078      	str	r0, [r7, #4]
 8006d6a:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	681a      	ldr	r2, [r3, #0]
 8006d70:	683b      	ldr	r3, [r7, #0]
 8006d72:	009b      	lsls	r3, r3, #2
 8006d74:	4413      	add	r3, r2
      }
 8006d76:	4618      	mov	r0, r3
 8006d78:	370c      	adds	r7, #12
 8006d7a:	46bd      	mov	sp, r7
 8006d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d80:	4770      	bx	lr

08006d82 <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>:
#endif

  template<typename _Tp, typename _Up>
    inline _GLIBCXX_CONSTEXPR
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
 8006d82:	b5b0      	push	{r4, r5, r7, lr}
 8006d84:	b082      	sub	sp, #8
 8006d86:	af00      	add	r7, sp, #0
 8006d88:	6078      	str	r0, [r7, #4]
 8006d8a:	6039      	str	r1, [r7, #0]
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
 8006d8c:	6878      	ldr	r0, [r7, #4]
 8006d8e:	f7f9 fbe9 	bl	8000564 <__aeabi_i2d>
 8006d92:	4604      	mov	r4, r0
 8006d94:	460d      	mov	r5, r1
 8006d96:	6838      	ldr	r0, [r7, #0]
 8006d98:	f7f9 fbe4 	bl	8000564 <__aeabi_i2d>
 8006d9c:	4602      	mov	r2, r0
 8006d9e:	460b      	mov	r3, r1
 8006da0:	ec43 2b11 	vmov	d1, r2, r3
 8006da4:	ec45 4b10 	vmov	d0, r4, r5
 8006da8:	f019 fd4a 	bl	8020840 <pow>
 8006dac:	eeb0 7a40 	vmov.f32	s14, s0
 8006db0:	eef0 7a60 	vmov.f32	s15, s1
    }
 8006db4:	eeb0 0a47 	vmov.f32	s0, s14
 8006db8:	eef0 0a67 	vmov.f32	s1, s15
 8006dbc:	3708      	adds	r7, #8
 8006dbe:	46bd      	mov	sp, r7
 8006dc0:	bdb0      	pop	{r4, r5, r7, pc}

08006dc2 <_ZSt3getIiJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8006dc2:	b580      	push	{r7, lr}
 8006dc4:	b082      	sub	sp, #8
 8006dc6:	af00      	add	r7, sp, #0
 8006dc8:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8006dca:	6878      	ldr	r0, [r7, #4]
 8006dcc:	f000 f82a 	bl	8006e24 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8006dd0:	4603      	mov	r3, r0
    }
 8006dd2:	4618      	mov	r0, r3
 8006dd4:	3708      	adds	r7, #8
 8006dd6:	46bd      	mov	sp, r7
 8006dd8:	bd80      	pop	{r7, pc}

08006dda <_ZSt3getIfJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8006dda:	b580      	push	{r7, lr}
 8006ddc:	b082      	sub	sp, #8
 8006dde:	af00      	add	r7, sp, #0
 8006de0:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8006de2:	6878      	ldr	r0, [r7, #4]
 8006de4:	f000 f83a 	bl	8006e5c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8006de8:	4603      	mov	r3, r0
    }
 8006dea:	4618      	mov	r0, r3
 8006dec:	3708      	adds	r7, #8
 8006dee:	46bd      	mov	sp, r7
 8006df0:	bd80      	pop	{r7, pc}

08006df2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>:
      ~_Variant_storage()
 8006df2:	b580      	push	{r7, lr}
 8006df4:	b082      	sub	sp, #8
 8006df6:	af00      	add	r7, sp, #0
 8006df8:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8006dfa:	6878      	ldr	r0, [r7, #4]
 8006dfc:	f000 f84a 	bl	8006e94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	4618      	mov	r0, r3
 8006e04:	3708      	adds	r7, #8
 8006e06:	46bd      	mov	sp, r7
 8006e08:	bd80      	pop	{r7, pc}

08006e0a <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8006e0a:	b580      	push	{r7, lr}
 8006e0c:	b082      	sub	sp, #8
 8006e0e:	af00      	add	r7, sp, #0
 8006e10:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8006e12:	6878      	ldr	r0, [r7, #4]
 8006e14:	f000 f894 	bl	8006f40 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8006e18:	4603      	mov	r3, r0
    }
 8006e1a:	4618      	mov	r0, r3
 8006e1c:	3708      	adds	r7, #8
 8006e1e:	46bd      	mov	sp, r7
 8006e20:	bd80      	pop	{r7, pc}
	...

08006e24 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8006e24:	b580      	push	{r7, lr}
 8006e26:	b082      	sub	sp, #8
 8006e28:	af00      	add	r7, sp, #0
 8006e2a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8006e2c:	6878      	ldr	r0, [r7, #4]
 8006e2e:	f7fd fc06 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8006e32:	4603      	mov	r3, r0
 8006e34:	2b01      	cmp	r3, #1
 8006e36:	bf14      	ite	ne
 8006e38:	2301      	movne	r3, #1
 8006e3a:	2300      	moveq	r3, #0
 8006e3c:	b2db      	uxtb	r3, r3
 8006e3e:	2b00      	cmp	r3, #0
 8006e40:	d002      	beq.n	8006e48 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8006e42:	4805      	ldr	r0, [pc, #20]	; (8006e58 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8006e44:	f7fd f9c0 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8006e48:	6878      	ldr	r0, [r7, #4]
 8006e4a:	f7fe fab5 	bl	80053b8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8006e4e:	4603      	mov	r3, r0
    }
 8006e50:	4618      	mov	r0, r3
 8006e52:	3708      	adds	r7, #8
 8006e54:	46bd      	mov	sp, r7
 8006e56:	bd80      	pop	{r7, pc}
 8006e58:	080249f0 	.word	0x080249f0

08006e5c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8006e5c:	b580      	push	{r7, lr}
 8006e5e:	b082      	sub	sp, #8
 8006e60:	af00      	add	r7, sp, #0
 8006e62:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8006e64:	6878      	ldr	r0, [r7, #4]
 8006e66:	f7fd fbea 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8006e6a:	4603      	mov	r3, r0
 8006e6c:	2b02      	cmp	r3, #2
 8006e6e:	bf14      	ite	ne
 8006e70:	2301      	movne	r3, #1
 8006e72:	2300      	moveq	r3, #0
 8006e74:	b2db      	uxtb	r3, r3
 8006e76:	2b00      	cmp	r3, #0
 8006e78:	d002      	beq.n	8006e80 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8006e7a:	4805      	ldr	r0, [pc, #20]	; (8006e90 <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8006e7c:	f7fd f9a4 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8006e80:	6878      	ldr	r0, [r7, #4]
 8006e82:	f7fe fb35 	bl	80054f0 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8006e86:	4603      	mov	r3, r0
    }
 8006e88:	4618      	mov	r0, r3
 8006e8a:	3708      	adds	r7, #8
 8006e8c:	46bd      	mov	sp, r7
 8006e8e:	bd80      	pop	{r7, pc}
 8006e90:	080249f0 	.word	0x080249f0

08006e94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>:
      void _M_reset()
 8006e94:	b580      	push	{r7, lr}
 8006e96:	b082      	sub	sp, #8
 8006e98:	af00      	add	r7, sp, #0
 8006e9a:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 8006e9c:	6878      	ldr	r0, [r7, #4]
 8006e9e:	f000 fac5 	bl	800742c <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>
	_M_index = variant_npos;
 8006ea2:	687b      	ldr	r3, [r7, #4]
 8006ea4:	22ff      	movs	r2, #255	; 0xff
 8006ea6:	761a      	strb	r2, [r3, #24]
      }
 8006ea8:	bf00      	nop
 8006eaa:	3708      	adds	r7, #8
 8006eac:	46bd      	mov	sp, r7
 8006eae:	bd80      	pop	{r7, pc}

08006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>:
      constexpr size_t index() const noexcept
 8006eb0:	b480      	push	{r7}
 8006eb2:	b083      	sub	sp, #12
 8006eb4:	af00      	add	r7, sp, #0
 8006eb6:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	7e1b      	ldrb	r3, [r3, #24]
 8006ebc:	2bff      	cmp	r3, #255	; 0xff
 8006ebe:	d102      	bne.n	8006ec6 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x16>
	  return variant_npos;
 8006ec0:	f04f 33ff 	mov.w	r3, #4294967295
 8006ec4:	e001      	b.n	8006eca <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv+0x1a>
	return this->_M_index;
 8006ec6:	687b      	ldr	r3, [r7, #4]
 8006ec8:	7e1b      	ldrb	r3, [r3, #24]
      }
 8006eca:	4618      	mov	r0, r3
 8006ecc:	370c      	adds	r7, #12
 8006ece:	46bd      	mov	sp, r7
 8006ed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ed4:	4770      	bx	lr

08006ed6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8006ed6:	b580      	push	{r7, lr}
 8006ed8:	b082      	sub	sp, #8
 8006eda:	af00      	add	r7, sp, #0
 8006edc:	7138      	strb	r0, [r7, #4]
 8006ede:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8006ee0:	6838      	ldr	r0, [r7, #0]
 8006ee2:	f000 facb 	bl	800747c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8006ee6:	4603      	mov	r3, r0
 8006ee8:	4618      	mov	r0, r3
 8006eea:	f7fe feda 	bl	8005ca2 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8006eee:	4603      	mov	r3, r0
 8006ef0:	4618      	mov	r0, r3
 8006ef2:	3708      	adds	r7, #8
 8006ef4:	46bd      	mov	sp, r7
 8006ef6:	bd80      	pop	{r7, pc}

08006ef8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8006ef8:	b590      	push	{r4, r7, lr}
 8006efa:	b083      	sub	sp, #12
 8006efc:	af00      	add	r7, sp, #0
 8006efe:	7138      	strb	r0, [r7, #4]
 8006f00:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8006f02:	6838      	ldr	r0, [r7, #0]
 8006f04:	f000 faaf 	bl	8007466 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8006f08:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8006f0a:	4619      	mov	r1, r3
 8006f0c:	4620      	mov	r0, r4
 8006f0e:	f7ff ffe2 	bl	8006ed6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8006f12:	4603      	mov	r3, r0
    }
 8006f14:	4618      	mov	r0, r3
 8006f16:	370c      	adds	r7, #12
 8006f18:	46bd      	mov	sp, r7
 8006f1a:	bd90      	pop	{r4, r7, pc}

08006f1c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006f1c:	b590      	push	{r4, r7, lr}
 8006f1e:	b083      	sub	sp, #12
 8006f20:	af00      	add	r7, sp, #0
 8006f22:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006f24:	6878      	ldr	r0, [r7, #4]
 8006f26:	f000 fa93 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8006f2a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006f2c:	4619      	mov	r1, r3
 8006f2e:	4620      	mov	r0, r4
 8006f30:	f7ff ffe2 	bl	8006ef8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8006f34:	4603      	mov	r3, r0
    }
 8006f36:	4618      	mov	r0, r3
 8006f38:	370c      	adds	r7, #12
 8006f3a:	46bd      	mov	sp, r7
 8006f3c:	bd90      	pop	{r4, r7, pc}
	...

08006f40 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 8006f40:	b580      	push	{r7, lr}
 8006f42:	b082      	sub	sp, #8
 8006f44:	af00      	add	r7, sp, #0
 8006f46:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8006f48:	6878      	ldr	r0, [r7, #4]
 8006f4a:	f7ff ffb1 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8006f4e:	4603      	mov	r3, r0
 8006f50:	2b01      	cmp	r3, #1
 8006f52:	bf14      	ite	ne
 8006f54:	2301      	movne	r3, #1
 8006f56:	2300      	moveq	r3, #0
 8006f58:	b2db      	uxtb	r3, r3
 8006f5a:	2b00      	cmp	r3, #0
 8006f5c:	d002      	beq.n	8006f64 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8006f5e:	4805      	ldr	r0, [pc, #20]	; (8006f74 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8006f60:	f7fd f932 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8006f64:	6878      	ldr	r0, [r7, #4]
 8006f66:	f7ff ffd9 	bl	8006f1c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8006f6a:	4603      	mov	r3, r0
    }
 8006f6c:	4618      	mov	r0, r3
 8006f6e:	3708      	adds	r7, #8
 8006f70:	46bd      	mov	sp, r7
 8006f72:	bd80      	pop	{r7, pc}
 8006f74:	080249f0 	.word	0x080249f0

08006f78 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8006f78:	b480      	push	{r7}
 8006f7a:	b083      	sub	sp, #12
 8006f7c:	af00      	add	r7, sp, #0
 8006f7e:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8006f80:	687b      	ldr	r3, [r7, #4]
    }
 8006f82:	4618      	mov	r0, r3
 8006f84:	370c      	adds	r7, #12
 8006f86:	46bd      	mov	sp, r7
 8006f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f8c:	4770      	bx	lr

08006f8e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8006f8e:	b580      	push	{r7, lr}
 8006f90:	b082      	sub	sp, #8
 8006f92:	af00      	add	r7, sp, #0
 8006f94:	7138      	strb	r0, [r7, #4]
 8006f96:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8006f98:	6838      	ldr	r0, [r7, #0]
 8006f9a:	f000 fa64 	bl	8007466 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8006f9e:	4603      	mov	r3, r0
 8006fa0:	4618      	mov	r0, r3
 8006fa2:	f7fe fec2 	bl	8005d2a <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8006fa6:	4603      	mov	r3, r0
 8006fa8:	4618      	mov	r0, r3
 8006faa:	3708      	adds	r7, #8
 8006fac:	46bd      	mov	sp, r7
 8006fae:	bd80      	pop	{r7, pc}

08006fb0 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8006fb0:	b590      	push	{r4, r7, lr}
 8006fb2:	b083      	sub	sp, #12
 8006fb4:	af00      	add	r7, sp, #0
 8006fb6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8006fb8:	6878      	ldr	r0, [r7, #4]
 8006fba:	f000 fa49 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8006fbe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8006fc0:	4619      	mov	r1, r3
 8006fc2:	4620      	mov	r0, r4
 8006fc4:	f7ff ffe3 	bl	8006f8e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8006fc8:	4603      	mov	r3, r0
    }
 8006fca:	4618      	mov	r0, r3
 8006fcc:	370c      	adds	r7, #12
 8006fce:	46bd      	mov	sp, r7
 8006fd0:	bd90      	pop	{r4, r7, pc}

08006fd2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8006fd2:	b580      	push	{r7, lr}
 8006fd4:	b082      	sub	sp, #8
 8006fd6:	af00      	add	r7, sp, #0
 8006fd8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8006fda:	6878      	ldr	r0, [r7, #4]
 8006fdc:	f000 fa38 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8006fe0:	4603      	mov	r3, r0
 8006fe2:	4618      	mov	r0, r3
 8006fe4:	f7ff ffe4 	bl	8006fb0 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8006fe8:	4603      	mov	r3, r0
	}
 8006fea:	4618      	mov	r0, r3
 8006fec:	3708      	adds	r7, #8
 8006fee:	46bd      	mov	sp, r7
 8006ff0:	bd80      	pop	{r7, pc}

08006ff2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8006ff2:	b5b0      	push	{r4, r5, r7, lr}
 8006ff4:	b082      	sub	sp, #8
 8006ff6:	af00      	add	r7, sp, #0
 8006ff8:	6078      	str	r0, [r7, #4]
 8006ffa:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8006ffc:	6878      	ldr	r0, [r7, #4]
 8006ffe:	f000 fa48 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8007002:	4604      	mov	r4, r0
 8007004:	6838      	ldr	r0, [r7, #0]
 8007006:	f000 fa23 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800700a:	4603      	mov	r3, r0
 800700c:	4618      	mov	r0, r3
 800700e:	f7ff ffe0 	bl	8006fd2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESI_EEDcOT0_>
 8007012:	4603      	mov	r3, r0
 8007014:	4619      	mov	r1, r3
 8007016:	4620      	mov	r0, r4
 8007018:	f000 fa46 	bl	80074a8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 800701c:	462b      	mov	r3, r5
      }
 800701e:	4618      	mov	r0, r3
 8007020:	3708      	adds	r7, #8
 8007022:	46bd      	mov	sp, r7
 8007024:	bdb0      	pop	{r4, r5, r7, pc}

08007026 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007026:	b5b0      	push	{r4, r5, r7, lr}
 8007028:	b082      	sub	sp, #8
 800702a:	af00      	add	r7, sp, #0
 800702c:	6078      	str	r0, [r7, #4]
 800702e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8007030:	6878      	ldr	r0, [r7, #4]
 8007032:	f000 fa2e 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8007036:	4604      	mov	r4, r0
 8007038:	6838      	ldr	r0, [r7, #0]
 800703a:	f000 fa09 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800703e:	4603      	mov	r3, r0
 8007040:	4619      	mov	r1, r3
 8007042:	4620      	mov	r0, r4
 8007044:	f7ff ffd5 	bl	8006ff2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8007048:	462b      	mov	r3, r5
      }
 800704a:	4618      	mov	r0, r3
 800704c:	3708      	adds	r7, #8
 800704e:	46bd      	mov	sp, r7
 8007050:	bdb0      	pop	{r4, r5, r7, pc}

08007052 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007052:	b5b0      	push	{r4, r5, r7, lr}
 8007054:	b082      	sub	sp, #8
 8007056:	af00      	add	r7, sp, #0
 8007058:	6078      	str	r0, [r7, #4]
 800705a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800705c:	6878      	ldr	r0, [r7, #4]
 800705e:	f000 fa18 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8007062:	4604      	mov	r4, r0
 8007064:	6838      	ldr	r0, [r7, #0]
 8007066:	f000 f9f3 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800706a:	4603      	mov	r3, r0
 800706c:	4619      	mov	r1, r3
 800706e:	4620      	mov	r0, r4
 8007070:	f7ff ffd9 	bl	8007026 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8007074:	462b      	mov	r3, r5
      }
 8007076:	4618      	mov	r0, r3
 8007078:	3708      	adds	r7, #8
 800707a:	46bd      	mov	sp, r7
 800707c:	bdb0      	pop	{r4, r5, r7, pc}

0800707e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800707e:	b580      	push	{r7, lr}
 8007080:	b082      	sub	sp, #8
 8007082:	af00      	add	r7, sp, #0
 8007084:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8007086:	6878      	ldr	r0, [r7, #4]
 8007088:	f000 f9e2 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800708c:	4603      	mov	r3, r0
 800708e:	4618      	mov	r0, r3
 8007090:	f7ff ff44 	bl	8006f1c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8007094:	4603      	mov	r3, r0
	}
 8007096:	4618      	mov	r0, r3
 8007098:	3708      	adds	r7, #8
 800709a:	46bd      	mov	sp, r7
 800709c:	bd80      	pop	{r7, pc}

0800709e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800709e:	b5b0      	push	{r4, r5, r7, lr}
 80070a0:	b082      	sub	sp, #8
 80070a2:	af00      	add	r7, sp, #0
 80070a4:	6078      	str	r0, [r7, #4]
 80070a6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80070a8:	6878      	ldr	r0, [r7, #4]
 80070aa:	f000 f9f2 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80070ae:	4604      	mov	r4, r0
 80070b0:	6838      	ldr	r0, [r7, #0]
 80070b2:	f000 f9cd 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80070b6:	4603      	mov	r3, r0
 80070b8:	4618      	mov	r0, r3
 80070ba:	f7ff ffe0 	bl	800707e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESI_EEDcOT0_>
 80070be:	4603      	mov	r3, r0
 80070c0:	4619      	mov	r1, r3
 80070c2:	4620      	mov	r0, r4
 80070c4:	f000 fa07 	bl	80074d6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 80070c8:	462b      	mov	r3, r5
      }
 80070ca:	4618      	mov	r0, r3
 80070cc:	3708      	adds	r7, #8
 80070ce:	46bd      	mov	sp, r7
 80070d0:	bdb0      	pop	{r4, r5, r7, pc}

080070d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80070d2:	b5b0      	push	{r4, r5, r7, lr}
 80070d4:	b082      	sub	sp, #8
 80070d6:	af00      	add	r7, sp, #0
 80070d8:	6078      	str	r0, [r7, #4]
 80070da:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80070dc:	6878      	ldr	r0, [r7, #4]
 80070de:	f000 f9d8 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80070e2:	4604      	mov	r4, r0
 80070e4:	6838      	ldr	r0, [r7, #0]
 80070e6:	f000 f9b3 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80070ea:	4603      	mov	r3, r0
 80070ec:	4619      	mov	r1, r3
 80070ee:	4620      	mov	r0, r4
 80070f0:	f7ff ffd5 	bl	800709e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 80070f4:	462b      	mov	r3, r5
      }
 80070f6:	4618      	mov	r0, r3
 80070f8:	3708      	adds	r7, #8
 80070fa:	46bd      	mov	sp, r7
 80070fc:	bdb0      	pop	{r4, r5, r7, pc}

080070fe <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80070fe:	b5b0      	push	{r4, r5, r7, lr}
 8007100:	b082      	sub	sp, #8
 8007102:	af00      	add	r7, sp, #0
 8007104:	6078      	str	r0, [r7, #4]
 8007106:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8007108:	6878      	ldr	r0, [r7, #4]
 800710a:	f000 f9c2 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 800710e:	4604      	mov	r4, r0
 8007110:	6838      	ldr	r0, [r7, #0]
 8007112:	f000 f99d 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8007116:	4603      	mov	r3, r0
 8007118:	4619      	mov	r1, r3
 800711a:	4620      	mov	r0, r4
 800711c:	f7ff ffd9 	bl	80070d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8007120:	462b      	mov	r3, r5
      }
 8007122:	4618      	mov	r0, r3
 8007124:	3708      	adds	r7, #8
 8007126:	46bd      	mov	sp, r7
 8007128:	bdb0      	pop	{r4, r5, r7, pc}

0800712a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800712a:	b580      	push	{r7, lr}
 800712c:	b082      	sub	sp, #8
 800712e:	af00      	add	r7, sp, #0
 8007130:	7138      	strb	r0, [r7, #4]
 8007132:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8007134:	6838      	ldr	r0, [r7, #0]
 8007136:	f000 f9e5 	bl	8007504 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 800713a:	4603      	mov	r3, r0
 800713c:	4618      	mov	r0, r3
 800713e:	f7fe fdd2 	bl	8005ce6 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8007142:	4603      	mov	r3, r0
 8007144:	4618      	mov	r0, r3
 8007146:	3708      	adds	r7, #8
 8007148:	46bd      	mov	sp, r7
 800714a:	bd80      	pop	{r7, pc}

0800714c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800714c:	b590      	push	{r4, r7, lr}
 800714e:	b083      	sub	sp, #12
 8007150:	af00      	add	r7, sp, #0
 8007152:	7138      	strb	r0, [r7, #4]
 8007154:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8007156:	6838      	ldr	r0, [r7, #0]
 8007158:	f000 f990 	bl	800747c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 800715c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800715e:	4619      	mov	r1, r3
 8007160:	4620      	mov	r0, r4
 8007162:	f7ff ffe2 	bl	800712a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 8007166:	4603      	mov	r3, r0
    }
 8007168:	4618      	mov	r0, r3
 800716a:	370c      	adds	r7, #12
 800716c:	46bd      	mov	sp, r7
 800716e:	bd90      	pop	{r4, r7, pc}

08007170 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007170:	b590      	push	{r4, r7, lr}
 8007172:	b083      	sub	sp, #12
 8007174:	af00      	add	r7, sp, #0
 8007176:	7138      	strb	r0, [r7, #4]
 8007178:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800717a:	6838      	ldr	r0, [r7, #0]
 800717c:	f000 f973 	bl	8007466 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8007180:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007182:	4619      	mov	r1, r3
 8007184:	4620      	mov	r0, r4
 8007186:	f7ff ffe1 	bl	800714c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800718a:	4603      	mov	r3, r0
    }
 800718c:	4618      	mov	r0, r3
 800718e:	370c      	adds	r7, #12
 8007190:	46bd      	mov	sp, r7
 8007192:	bd90      	pop	{r4, r7, pc}

08007194 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8007194:	b590      	push	{r4, r7, lr}
 8007196:	b083      	sub	sp, #12
 8007198:	af00      	add	r7, sp, #0
 800719a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800719c:	6878      	ldr	r0, [r7, #4]
 800719e:	f000 f957 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80071a2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80071a4:	4619      	mov	r1, r3
 80071a6:	4620      	mov	r0, r4
 80071a8:	f7ff ffe2 	bl	8007170 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80071ac:	4603      	mov	r3, r0
    }
 80071ae:	4618      	mov	r0, r3
 80071b0:	370c      	adds	r7, #12
 80071b2:	46bd      	mov	sp, r7
 80071b4:	bd90      	pop	{r4, r7, pc}

080071b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80071b6:	b580      	push	{r7, lr}
 80071b8:	b082      	sub	sp, #8
 80071ba:	af00      	add	r7, sp, #0
 80071bc:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80071be:	6878      	ldr	r0, [r7, #4]
 80071c0:	f000 f946 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80071c4:	4603      	mov	r3, r0
 80071c6:	4618      	mov	r0, r3
 80071c8:	f7ff ffe4 	bl	8007194 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 80071cc:	4603      	mov	r3, r0
	}
 80071ce:	4618      	mov	r0, r3
 80071d0:	3708      	adds	r7, #8
 80071d2:	46bd      	mov	sp, r7
 80071d4:	bd80      	pop	{r7, pc}

080071d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80071d6:	b5b0      	push	{r4, r5, r7, lr}
 80071d8:	b082      	sub	sp, #8
 80071da:	af00      	add	r7, sp, #0
 80071dc:	6078      	str	r0, [r7, #4]
 80071de:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80071e0:	6878      	ldr	r0, [r7, #4]
 80071e2:	f000 f956 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80071e6:	4604      	mov	r4, r0
 80071e8:	6838      	ldr	r0, [r7, #0]
 80071ea:	f000 f931 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80071ee:	4603      	mov	r3, r0
 80071f0:	4618      	mov	r0, r3
 80071f2:	f7ff ffe0 	bl	80071b6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESI_EEDcOT0_>
 80071f6:	4603      	mov	r3, r0
 80071f8:	4619      	mov	r1, r3
 80071fa:	4620      	mov	r0, r4
 80071fc:	f000 f98d 	bl	800751a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 8007200:	462b      	mov	r3, r5
      }
 8007202:	4618      	mov	r0, r3
 8007204:	3708      	adds	r7, #8
 8007206:	46bd      	mov	sp, r7
 8007208:	bdb0      	pop	{r4, r5, r7, pc}

0800720a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800720a:	b5b0      	push	{r4, r5, r7, lr}
 800720c:	b082      	sub	sp, #8
 800720e:	af00      	add	r7, sp, #0
 8007210:	6078      	str	r0, [r7, #4]
 8007212:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8007214:	6878      	ldr	r0, [r7, #4]
 8007216:	f000 f93c 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 800721a:	4604      	mov	r4, r0
 800721c:	6838      	ldr	r0, [r7, #0]
 800721e:	f000 f917 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8007222:	4603      	mov	r3, r0
 8007224:	4619      	mov	r1, r3
 8007226:	4620      	mov	r0, r4
 8007228:	f7ff ffd5 	bl	80071d6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 800722c:	462b      	mov	r3, r5
      }
 800722e:	4618      	mov	r0, r3
 8007230:	3708      	adds	r7, #8
 8007232:	46bd      	mov	sp, r7
 8007234:	bdb0      	pop	{r4, r5, r7, pc}

08007236 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007236:	b5b0      	push	{r4, r5, r7, lr}
 8007238:	b082      	sub	sp, #8
 800723a:	af00      	add	r7, sp, #0
 800723c:	6078      	str	r0, [r7, #4]
 800723e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8007240:	6878      	ldr	r0, [r7, #4]
 8007242:	f000 f926 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8007246:	4604      	mov	r4, r0
 8007248:	6838      	ldr	r0, [r7, #0]
 800724a:	f000 f901 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800724e:	4603      	mov	r3, r0
 8007250:	4619      	mov	r1, r3
 8007252:	4620      	mov	r0, r4
 8007254:	f7ff ffd9 	bl	800720a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8007258:	462b      	mov	r3, r5
      }
 800725a:	4618      	mov	r0, r3
 800725c:	3708      	adds	r7, #8
 800725e:	46bd      	mov	sp, r7
 8007260:	bdb0      	pop	{r4, r5, r7, pc}

08007262 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8007262:	b580      	push	{r7, lr}
 8007264:	b082      	sub	sp, #8
 8007266:	af00      	add	r7, sp, #0
 8007268:	7138      	strb	r0, [r7, #4]
 800726a:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800726c:	6838      	ldr	r0, [r7, #0]
 800726e:	f000 f96b 	bl	8007548 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8007272:	4603      	mov	r3, r0
 8007274:	4618      	mov	r0, r3
 8007276:	f7fe fcf2 	bl	8005c5e <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800727a:	4603      	mov	r3, r0
 800727c:	4618      	mov	r0, r3
 800727e:	3708      	adds	r7, #8
 8007280:	46bd      	mov	sp, r7
 8007282:	bd80      	pop	{r7, pc}

08007284 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8007284:	b590      	push	{r4, r7, lr}
 8007286:	b083      	sub	sp, #12
 8007288:	af00      	add	r7, sp, #0
 800728a:	7138      	strb	r0, [r7, #4]
 800728c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800728e:	6838      	ldr	r0, [r7, #0]
 8007290:	f000 f938 	bl	8007504 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8007294:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8007296:	4619      	mov	r1, r3
 8007298:	4620      	mov	r0, r4
 800729a:	f7ff ffe2 	bl	8007262 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 800729e:	4603      	mov	r3, r0
    }
 80072a0:	4618      	mov	r0, r3
 80072a2:	370c      	adds	r7, #12
 80072a4:	46bd      	mov	sp, r7
 80072a6:	bd90      	pop	{r4, r7, pc}

080072a8 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80072a8:	b590      	push	{r4, r7, lr}
 80072aa:	b083      	sub	sp, #12
 80072ac:	af00      	add	r7, sp, #0
 80072ae:	7138      	strb	r0, [r7, #4]
 80072b0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80072b2:	6838      	ldr	r0, [r7, #0]
 80072b4:	f000 f8e2 	bl	800747c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>
 80072b8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80072ba:	4619      	mov	r1, r3
 80072bc:	4620      	mov	r0, r4
 80072be:	f7ff ffe1 	bl	8007284 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80072c2:	4603      	mov	r3, r0
    }
 80072c4:	4618      	mov	r0, r3
 80072c6:	370c      	adds	r7, #12
 80072c8:	46bd      	mov	sp, r7
 80072ca:	bd90      	pop	{r4, r7, pc}

080072cc <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80072cc:	b590      	push	{r4, r7, lr}
 80072ce:	b083      	sub	sp, #12
 80072d0:	af00      	add	r7, sp, #0
 80072d2:	7138      	strb	r0, [r7, #4]
 80072d4:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80072d6:	6838      	ldr	r0, [r7, #0]
 80072d8:	f000 f8c5 	bl	8007466 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 80072dc:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80072de:	4619      	mov	r1, r3
 80072e0:	4620      	mov	r0, r4
 80072e2:	f7ff ffe1 	bl	80072a8 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80072e6:	4603      	mov	r3, r0
    }
 80072e8:	4618      	mov	r0, r3
 80072ea:	370c      	adds	r7, #12
 80072ec:	46bd      	mov	sp, r7
 80072ee:	bd90      	pop	{r4, r7, pc}

080072f0 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80072f0:	b590      	push	{r4, r7, lr}
 80072f2:	b083      	sub	sp, #12
 80072f4:	af00      	add	r7, sp, #0
 80072f6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80072f8:	6878      	ldr	r0, [r7, #4]
 80072fa:	f000 f8a9 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80072fe:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8007300:	4619      	mov	r1, r3
 8007302:	4620      	mov	r0, r4
 8007304:	f7ff ffe2 	bl	80072cc <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8007308:	4603      	mov	r3, r0
    }
 800730a:	4618      	mov	r0, r3
 800730c:	370c      	adds	r7, #12
 800730e:	46bd      	mov	sp, r7
 8007310:	bd90      	pop	{r4, r7, pc}

08007312 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8007312:	b580      	push	{r7, lr}
 8007314:	b082      	sub	sp, #8
 8007316:	af00      	add	r7, sp, #0
 8007318:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800731a:	6878      	ldr	r0, [r7, #4]
 800731c:	f000 f898 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8007320:	4603      	mov	r3, r0
 8007322:	4618      	mov	r0, r3
 8007324:	f7ff ffe4 	bl	80072f0 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8007328:	4603      	mov	r3, r0
	}
 800732a:	4618      	mov	r0, r3
 800732c:	3708      	adds	r7, #8
 800732e:	46bd      	mov	sp, r7
 8007330:	bd80      	pop	{r7, pc}

08007332 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8007332:	b5b0      	push	{r4, r5, r7, lr}
 8007334:	b082      	sub	sp, #8
 8007336:	af00      	add	r7, sp, #0
 8007338:	6078      	str	r0, [r7, #4]
 800733a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800733c:	6878      	ldr	r0, [r7, #4]
 800733e:	f000 f8a8 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8007342:	4604      	mov	r4, r0
 8007344:	6838      	ldr	r0, [r7, #0]
 8007346:	f000 f883 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800734a:	4603      	mov	r3, r0
 800734c:	4618      	mov	r0, r3
 800734e:	f7ff ffe0 	bl	8007312 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESI_EEDcOT0_>
 8007352:	4603      	mov	r3, r0
 8007354:	4619      	mov	r1, r3
 8007356:	4620      	mov	r0, r4
 8007358:	f000 f901 	bl	800755e <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>
		std::forward<_Variants>(__vars))...);
 800735c:	462b      	mov	r3, r5
      }
 800735e:	4618      	mov	r0, r3
 8007360:	3708      	adds	r7, #8
 8007362:	46bd      	mov	sp, r7
 8007364:	bdb0      	pop	{r4, r5, r7, pc}

08007366 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007366:	b5b0      	push	{r4, r5, r7, lr}
 8007368:	b082      	sub	sp, #8
 800736a:	af00      	add	r7, sp, #0
 800736c:	6078      	str	r0, [r7, #4]
 800736e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8007370:	6878      	ldr	r0, [r7, #4]
 8007372:	f000 f88e 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8007376:	4604      	mov	r4, r0
 8007378:	6838      	ldr	r0, [r7, #0]
 800737a:	f000 f869 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800737e:	4603      	mov	r3, r0
 8007380:	4619      	mov	r1, r3
 8007382:	4620      	mov	r0, r4
 8007384:	f7ff ffd5 	bl	8007332 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESF_SI_>
				   std::forward<_Variants>(__vars)...);
 8007388:	462b      	mov	r3, r5
      }
 800738a:	4618      	mov	r0, r3
 800738c:	3708      	adds	r7, #8
 800738e:	46bd      	mov	sp, r7
 8007390:	bdb0      	pop	{r4, r5, r7, pc}

08007392 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESF_SI_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8007392:	b5b0      	push	{r4, r5, r7, lr}
 8007394:	b082      	sub	sp, #8
 8007396:	af00      	add	r7, sp, #0
 8007398:	6078      	str	r0, [r7, #4]
 800739a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800739c:	6878      	ldr	r0, [r7, #4]
 800739e:	f000 f878 	bl	8007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80073a2:	4604      	mov	r4, r0
 80073a4:	6838      	ldr	r0, [r7, #0]
 80073a6:	f000 f853 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 80073aa:	4603      	mov	r3, r0
 80073ac:	4619      	mov	r1, r3
 80073ae:	4620      	mov	r0, r4
 80073b0:	f7ff ffd9 	bl	8007366 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSI_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESF_SI_>
				   std::forward<_Variants>(__vars)...);
 80073b4:	462b      	mov	r3, r5
      }
 80073b6:	4618      	mov	r0, r3
 80073b8:	3708      	adds	r7, #8
 80073ba:	46bd      	mov	sp, r7
 80073bc:	bdb0      	pop	{r4, r5, r7, pc}

080073be <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 80073be:	b580      	push	{r7, lr}
 80073c0:	b082      	sub	sp, #8
 80073c2:	af00      	add	r7, sp, #0
 80073c4:	6078      	str	r0, [r7, #4]
 80073c6:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 80073c8:	683b      	ldr	r3, [r7, #0]
 80073ca:	009b      	lsls	r3, r3, #2
 80073cc:	687a      	ldr	r2, [r7, #4]
 80073ce:	4413      	add	r3, r2
 80073d0:	4618      	mov	r0, r3
 80073d2:	f000 f8db 	bl	800758c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 80073d6:	4603      	mov	r3, r0
	}
 80073d8:	4618      	mov	r0, r3
 80073da:	3708      	adds	r7, #8
 80073dc:	46bd      	mov	sp, r7
 80073de:	bd80      	pop	{r7, pc}

080073e0 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 80073e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80073e2:	b085      	sub	sp, #20
 80073e4:	af00      	add	r7, sp, #0
 80073e6:	6078      	str	r0, [r7, #4]
 80073e8:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 80073ea:	4b0f      	ldr	r3, [pc, #60]	; (8007428 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 80073ec:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 80073ee:	6838      	ldr	r0, [r7, #0]
 80073f0:	f7ff fd5e 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 80073f4:	4603      	mov	r3, r0
 80073f6:	4619      	mov	r1, r3
 80073f8:	68f8      	ldr	r0, [r7, #12]
 80073fa:	f7ff ffe0 	bl	80073be <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSJ_jDpT_>
 80073fe:	4603      	mov	r3, r0
 8007400:	681b      	ldr	r3, [r3, #0]
 8007402:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 8007404:	68bc      	ldr	r4, [r7, #8]
 8007406:	6878      	ldr	r0, [r7, #4]
 8007408:	f000 f8cb 	bl	80075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 800740c:	4605      	mov	r5, r0
 800740e:	6838      	ldr	r0, [r7, #0]
 8007410:	f000 f81e 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8007414:	4603      	mov	r3, r0
 8007416:	4619      	mov	r1, r3
 8007418:	4628      	mov	r0, r5
 800741a:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800741c:	4633      	mov	r3, r6
    }
 800741e:	4618      	mov	r0, r3
 8007420:	3714      	adds	r7, #20
 8007422:	46bd      	mov	sp, r7
 8007424:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007426:	bf00      	nop
 8007428:	08025210 	.word	0x08025210

0800742c <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 800742c:	b580      	push	{r7, lr}
 800742e:	b084      	sub	sp, #16
 8007430:	af00      	add	r7, sp, #0
 8007432:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 8007434:	6878      	ldr	r0, [r7, #4]
 8007436:	f7ff fd9f 	bl	8006f78 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant16_Variant_storageILb0EJS5_ifbEEEEDcOT0_>
 800743a:	4602      	mov	r2, r0
 800743c:	f107 030c 	add.w	r3, r7, #12
 8007440:	4611      	mov	r1, r2
 8007442:	4618      	mov	r0, r3
 8007444:	f7ff ffcc 	bl	80073e0 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
      }
 8007448:	bf00      	nop
 800744a:	3710      	adds	r7, #16
 800744c:	46bd      	mov	sp, r7
 800744e:	bd80      	pop	{r7, pc}

08007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007450:	b480      	push	{r7}
 8007452:	b083      	sub	sp, #12
 8007454:	af00      	add	r7, sp, #0
 8007456:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007458:	687b      	ldr	r3, [r7, #4]
 800745a:	4618      	mov	r0, r3
 800745c:	370c      	adds	r7, #12
 800745e:	46bd      	mov	sp, r7
 8007460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007464:	4770      	bx	lr

08007466 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007466:	b480      	push	{r7}
 8007468:	b083      	sub	sp, #12
 800746a:	af00      	add	r7, sp, #0
 800746c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800746e:	687b      	ldr	r3, [r7, #4]
 8007470:	4618      	mov	r0, r3
 8007472:	370c      	adds	r7, #12
 8007474:	46bd      	mov	sp, r7
 8007476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800747a:	4770      	bx	lr

0800747c <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800747c:	b480      	push	{r7}
 800747e:	b083      	sub	sp, #12
 8007480:	af00      	add	r7, sp, #0
 8007482:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	4618      	mov	r0, r3
 8007488:	370c      	adds	r7, #12
 800748a:	46bd      	mov	sp, r7
 800748c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007490:	4770      	bx	lr

08007492 <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007492:	b480      	push	{r7}
 8007494:	b083      	sub	sp, #12
 8007496:	af00      	add	r7, sp, #0
 8007498:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800749a:	687b      	ldr	r3, [r7, #4]
 800749c:	4618      	mov	r0, r3
 800749e:	370c      	adds	r7, #12
 80074a0:	46bd      	mov	sp, r7
 80074a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074a6:	4770      	bx	lr

080074a8 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80074a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80074aa:	b083      	sub	sp, #12
 80074ac:	af00      	add	r7, sp, #0
 80074ae:	6078      	str	r0, [r7, #4]
 80074b0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80074b2:	6878      	ldr	r0, [r7, #4]
 80074b4:	f000 f875 	bl	80075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80074b8:	4604      	mov	r4, r0
 80074ba:	6838      	ldr	r0, [r7, #0]
 80074bc:	f7fe fded 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80074c0:	4603      	mov	r3, r0
 80074c2:	461a      	mov	r2, r3
 80074c4:	4621      	mov	r1, r4
 80074c6:	4628      	mov	r0, r5
 80074c8:	f000 f876 	bl	80075b8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80074cc:	4633      	mov	r3, r6
    }
 80074ce:	4618      	mov	r0, r3
 80074d0:	370c      	adds	r7, #12
 80074d2:	46bd      	mov	sp, r7
 80074d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080074d6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80074d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80074d8:	b083      	sub	sp, #12
 80074da:	af00      	add	r7, sp, #0
 80074dc:	6078      	str	r0, [r7, #4]
 80074de:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80074e0:	6878      	ldr	r0, [r7, #4]
 80074e2:	f000 f85e 	bl	80075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80074e6:	4604      	mov	r4, r0
 80074e8:	6838      	ldr	r0, [r7, #0]
 80074ea:	f7fe fd86 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80074ee:	4603      	mov	r3, r0
 80074f0:	461a      	mov	r2, r3
 80074f2:	4621      	mov	r1, r4
 80074f4:	4628      	mov	r0, r5
 80074f6:	f000 f876 	bl	80075e6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80074fa:	4633      	mov	r3, r6
    }
 80074fc:	4618      	mov	r0, r3
 80074fe:	370c      	adds	r7, #12
 8007500:	46bd      	mov	sp, r7
 8007502:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007504 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007504:	b480      	push	{r7}
 8007506:	b083      	sub	sp, #12
 8007508:	af00      	add	r7, sp, #0
 800750a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	4618      	mov	r0, r3
 8007510:	370c      	adds	r7, #12
 8007512:	46bd      	mov	sp, r7
 8007514:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007518:	4770      	bx	lr

0800751a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800751a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800751c:	b083      	sub	sp, #12
 800751e:	af00      	add	r7, sp, #0
 8007520:	6078      	str	r0, [r7, #4]
 8007522:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8007524:	6878      	ldr	r0, [r7, #4]
 8007526:	f000 f83c 	bl	80075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 800752a:	4604      	mov	r4, r0
 800752c:	6838      	ldr	r0, [r7, #0]
 800752e:	f7fe fd86 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8007532:	4603      	mov	r3, r0
 8007534:	461a      	mov	r2, r3
 8007536:	4621      	mov	r1, r4
 8007538:	4628      	mov	r0, r5
 800753a:	f000 f86b 	bl	8007614 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 800753e:	4633      	mov	r3, r6
    }
 8007540:	4618      	mov	r0, r3
 8007542:	370c      	adds	r7, #12
 8007544:	46bd      	mov	sp, r7
 8007546:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007548 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007548:	b480      	push	{r7}
 800754a:	b083      	sub	sp, #12
 800754c:	af00      	add	r7, sp, #0
 800754e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007550:	687b      	ldr	r3, [r7, #4]
 8007552:	4618      	mov	r0, r3
 8007554:	370c      	adds	r7, #12
 8007556:	46bd      	mov	sp, r7
 8007558:	f85d 7b04 	ldr.w	r7, [sp], #4
 800755c:	4770      	bx	lr

0800755e <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISA_JDpT0_EE4typeESB_DpOSF_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800755e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007560:	b083      	sub	sp, #12
 8007562:	af00      	add	r7, sp, #0
 8007564:	6078      	str	r0, [r7, #4]
 8007566:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8007568:	6878      	ldr	r0, [r7, #4]
 800756a:	f000 f81a 	bl	80075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 800756e:	4604      	mov	r4, r0
 8007570:	6838      	ldr	r0, [r7, #0]
 8007572:	f7fe fd20 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8007576:	4603      	mov	r3, r0
 8007578:	461a      	mov	r2, r3
 800757a:	4621      	mov	r1, r4
 800757c:	4628      	mov	r0, r5
 800757e:	f000 f860 	bl	8007642 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8007582:	4633      	mov	r3, r6
    }
 8007584:	4618      	mov	r0, r3
 8007586:	370c      	adds	r7, #12
 8007588:	46bd      	mov	sp, r7
 800758a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800758c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 800758c:	b480      	push	{r7}
 800758e:	b083      	sub	sp, #12
 8007590:	af00      	add	r7, sp, #0
 8007592:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8007594:	687b      	ldr	r3, [r7, #4]
 8007596:	4618      	mov	r0, r3
 8007598:	370c      	adds	r7, #12
 800759a:	46bd      	mov	sp, r7
 800759c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075a0:	4770      	bx	lr

080075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80075a2:	b480      	push	{r7}
 80075a4:	b083      	sub	sp, #12
 80075a6:	af00      	add	r7, sp, #0
 80075a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80075aa:	687b      	ldr	r3, [r7, #4]
 80075ac:	4618      	mov	r0, r3
 80075ae:	370c      	adds	r7, #12
 80075b0:	46bd      	mov	sp, r7
 80075b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075b6:	4770      	bx	lr

080075b8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRS9_EESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80075b8:	b5b0      	push	{r4, r5, r7, lr}
 80075ba:	b084      	sub	sp, #16
 80075bc:	af00      	add	r7, sp, #0
 80075be:	7338      	strb	r0, [r7, #12]
 80075c0:	60b9      	str	r1, [r7, #8]
 80075c2:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80075c4:	68b8      	ldr	r0, [r7, #8]
 80075c6:	f7ff ffec 	bl	80075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80075ca:	4604      	mov	r4, r0
 80075cc:	6878      	ldr	r0, [r7, #4]
 80075ce:	f7fe fd64 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80075d2:	4603      	mov	r3, r0
 80075d4:	4619      	mov	r1, r3
 80075d6:	4620      	mov	r0, r4
 80075d8:	f000 f84a 	bl	8007670 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>
 80075dc:	462b      	mov	r3, r5
 80075de:	4618      	mov	r0, r3
 80075e0:	3710      	adds	r7, #16
 80075e2:	46bd      	mov	sp, r7
 80075e4:	bdb0      	pop	{r4, r5, r7, pc}

080075e6 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRiEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 80075e6:	b5b0      	push	{r4, r5, r7, lr}
 80075e8:	b084      	sub	sp, #16
 80075ea:	af00      	add	r7, sp, #0
 80075ec:	7338      	strb	r0, [r7, #12]
 80075ee:	60b9      	str	r1, [r7, #8]
 80075f0:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 80075f2:	68b8      	ldr	r0, [r7, #8]
 80075f4:	f7ff ffd5 	bl	80075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 80075f8:	4604      	mov	r4, r0
 80075fa:	6878      	ldr	r0, [r7, #4]
 80075fc:	f7fe fcfd 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8007600:	4603      	mov	r3, r0
 8007602:	4619      	mov	r1, r3
 8007604:	4620      	mov	r0, r4
 8007606:	f000 f844 	bl	8007692 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>
 800760a:	462b      	mov	r3, r5
 800760c:	4618      	mov	r0, r3
 800760e:	3710      	adds	r7, #16
 8007610:	46bd      	mov	sp, r7
 8007612:	bdb0      	pop	{r4, r5, r7, pc}

08007614 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRfEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8007614:	b5b0      	push	{r4, r5, r7, lr}
 8007616:	b084      	sub	sp, #16
 8007618:	af00      	add	r7, sp, #0
 800761a:	7338      	strb	r0, [r7, #12]
 800761c:	60b9      	str	r1, [r7, #8]
 800761e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8007620:	68b8      	ldr	r0, [r7, #8]
 8007622:	f7ff ffbe 	bl	80075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8007626:	4604      	mov	r4, r0
 8007628:	6878      	ldr	r0, [r7, #4]
 800762a:	f7fe fd08 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800762e:	4603      	mov	r3, r0
 8007630:	4619      	mov	r1, r3
 8007632:	4620      	mov	r0, r4
 8007634:	f000 f83e 	bl	80076b4 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>
 8007638:	462b      	mov	r3, r5
 800763a:	4618      	mov	r0, r3
 800763c:	3710      	adds	r7, #16
 800763e:	46bd      	mov	sp, r7
 8007640:	bdb0      	pop	{r4, r5, r7, pc}

08007642 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_JRbEESB_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8007642:	b5b0      	push	{r4, r5, r7, lr}
 8007644:	b084      	sub	sp, #16
 8007646:	af00      	add	r7, sp, #0
 8007648:	7338      	strb	r0, [r7, #12]
 800764a:	60b9      	str	r1, [r7, #8]
 800764c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800764e:	68b8      	ldr	r0, [r7, #8]
 8007650:	f7ff ffa7 	bl	80075a2 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvEUlOT_E_ESB_RNSt16remove_referenceISA_E4typeE>
 8007654:	4604      	mov	r4, r0
 8007656:	6878      	ldr	r0, [r7, #4]
 8007658:	f7fe fcad 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800765c:	4603      	mov	r3, r0
 800765e:	4619      	mov	r1, r3
 8007660:	4620      	mov	r0, r4
 8007662:	f000 f838 	bl	80076d6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>
 8007666:	462b      	mov	r3, r5
 8007668:	4618      	mov	r0, r3
 800766a:	3710      	adds	r7, #16
 800766c:	46bd      	mov	sp, r7
 800766e:	bdb0      	pop	{r4, r5, r7, pc}

08007670 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESA_>:
	__do_visit([](auto&& __this_mem) mutable
 8007670:	b590      	push	{r4, r7, lr}
 8007672:	b083      	sub	sp, #12
 8007674:	af00      	add	r7, sp, #0
 8007676:	6078      	str	r0, [r7, #4]
 8007678:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800767a:	6838      	ldr	r0, [r7, #0]
 800767c:	f7fe fe6b 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8007680:	4603      	mov	r3, r0
 8007682:	4618      	mov	r0, r3
 8007684:	f7fe fe72 	bl	800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 8007688:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 800768a:	4618      	mov	r0, r3
 800768c:	370c      	adds	r7, #12
 800768e:	46bd      	mov	sp, r7
 8007690:	bd90      	pop	{r4, r7, pc}

08007692 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESA_>:
 8007692:	b590      	push	{r4, r7, lr}
 8007694:	b083      	sub	sp, #12
 8007696:	af00      	add	r7, sp, #0
 8007698:	6078      	str	r0, [r7, #4]
 800769a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 800769c:	6838      	ldr	r0, [r7, #0]
 800769e:	f7fe fe30 	bl	8006302 <_ZSt11__addressofIiEPT_RS0_>
 80076a2:	4603      	mov	r3, r0
 80076a4:	4618      	mov	r0, r3
 80076a6:	f7fe fe37 	bl	8006318 <_ZSt8_DestroyIiEvPT_>
	    return {};
 80076aa:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80076ac:	4618      	mov	r0, r3
 80076ae:	370c      	adds	r7, #12
 80076b0:	46bd      	mov	sp, r7
 80076b2:	bd90      	pop	{r4, r7, pc}

080076b4 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESA_>:
 80076b4:	b590      	push	{r4, r7, lr}
 80076b6:	b083      	sub	sp, #12
 80076b8:	af00      	add	r7, sp, #0
 80076ba:	6078      	str	r0, [r7, #4]
 80076bc:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80076be:	6838      	ldr	r0, [r7, #0]
 80076c0:	f7fe fe34 	bl	800632c <_ZSt11__addressofIfEPT_RS0_>
 80076c4:	4603      	mov	r3, r0
 80076c6:	4618      	mov	r0, r3
 80076c8:	f7fe fe3b 	bl	8006342 <_ZSt8_DestroyIfEvPT_>
	    return {};
 80076cc:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80076ce:	4618      	mov	r0, r3
 80076d0:	370c      	adds	r7, #12
 80076d2:	46bd      	mov	sp, r7
 80076d4:	bd90      	pop	{r4, r7, pc}

080076d6 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESA_>:
 80076d6:	b590      	push	{r4, r7, lr}
 80076d8:	b083      	sub	sp, #12
 80076da:	af00      	add	r7, sp, #0
 80076dc:	6078      	str	r0, [r7, #4]
 80076de:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 80076e0:	6838      	ldr	r0, [r7, #0]
 80076e2:	f7fe fdf9 	bl	80062d8 <_ZSt11__addressofIbEPT_RS0_>
 80076e6:	4603      	mov	r3, r0
 80076e8:	4618      	mov	r0, r3
 80076ea:	f7fe fe00 	bl	80062ee <_ZSt8_DestroyIbEvPT_>
	    return {};
 80076ee:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 80076f0:	4618      	mov	r0, r3
 80076f2:	370c      	adds	r7, #12
 80076f4:	46bd      	mov	sp, r7
 80076f6:	bd90      	pop	{r4, r7, pc}

080076f8 <_Z41__static_initialization_and_destruction_0ii>:
}

std::string Expression_calculator::get_string(Expression *exp)
{
	return "";
}
 80076f8:	b590      	push	{r4, r7, lr}
 80076fa:	b0e7      	sub	sp, #412	; 0x19c
 80076fc:	af02      	add	r7, sp, #8
 80076fe:	1d3b      	adds	r3, r7, #4
 8007700:	6018      	str	r0, [r3, #0]
 8007702:	463b      	mov	r3, r7
 8007704:	6019      	str	r1, [r3, #0]
 8007706:	1d3b      	adds	r3, r7, #4
 8007708:	681b      	ldr	r3, [r3, #0]
 800770a:	2b01      	cmp	r3, #1
 800770c:	f040 819d 	bne.w	8007a4a <_Z41__static_initialization_and_destruction_0ii+0x352>
 8007710:	463b      	mov	r3, r7
 8007712:	681b      	ldr	r3, [r3, #0]
 8007714:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007718:	4293      	cmp	r3, r2
 800771a:	f040 8196 	bne.w	8007a4a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800771e:	f107 0314 	add.w	r3, r7, #20
 8007722:	4618      	mov	r0, r3
 8007724:	2322      	movs	r3, #34	; 0x22
 8007726:	461a      	mov	r2, r3
 8007728:	2100      	movs	r1, #0
 800772a:	f01a f8ef 	bl	802190c <memset>
 800772e:	f107 0314 	add.w	r3, r7, #20
 8007732:	223a      	movs	r2, #58	; 0x3a
 8007734:	701a      	strb	r2, [r3, #0]
 8007736:	f107 0314 	add.w	r3, r7, #20
 800773a:	2201      	movs	r2, #1
 800773c:	705a      	strb	r2, [r3, #1]
 800773e:	f107 0314 	add.w	r3, r7, #20
 8007742:	220a      	movs	r2, #10
 8007744:	709a      	strb	r2, [r3, #2]
 8007746:	f107 0314 	add.w	r3, r7, #20
 800774a:	220a      	movs	r2, #10
 800774c:	70da      	strb	r2, [r3, #3]
 800774e:	f107 0314 	add.w	r3, r7, #20
 8007752:	222c      	movs	r2, #44	; 0x2c
 8007754:	711a      	strb	r2, [r3, #4]
 8007756:	f107 0314 	add.w	r3, r7, #20
 800775a:	220c      	movs	r2, #12
 800775c:	715a      	strb	r2, [r3, #5]
 800775e:	f107 0314 	add.w	r3, r7, #20
 8007762:	222e      	movs	r2, #46	; 0x2e
 8007764:	719a      	strb	r2, [r3, #6]
 8007766:	f107 0314 	add.w	r3, r7, #20
 800776a:	220b      	movs	r2, #11
 800776c:	71da      	strb	r2, [r3, #7]
 800776e:	f107 0314 	add.w	r3, r7, #20
 8007772:	225b      	movs	r2, #91	; 0x5b
 8007774:	721a      	strb	r2, [r3, #8]
 8007776:	f107 0314 	add.w	r3, r7, #20
 800777a:	220d      	movs	r2, #13
 800777c:	725a      	strb	r2, [r3, #9]
 800777e:	f107 0314 	add.w	r3, r7, #20
 8007782:	225d      	movs	r2, #93	; 0x5d
 8007784:	729a      	strb	r2, [r3, #10]
 8007786:	f107 0314 	add.w	r3, r7, #20
 800778a:	220e      	movs	r2, #14
 800778c:	72da      	strb	r2, [r3, #11]
 800778e:	f107 0314 	add.w	r3, r7, #20
 8007792:	227c      	movs	r2, #124	; 0x7c
 8007794:	731a      	strb	r2, [r3, #12]
 8007796:	f107 0314 	add.w	r3, r7, #20
 800779a:	2215      	movs	r2, #21
 800779c:	735a      	strb	r2, [r3, #13]
 800779e:	f107 0314 	add.w	r3, r7, #20
 80077a2:	2226      	movs	r2, #38	; 0x26
 80077a4:	739a      	strb	r2, [r3, #14]
 80077a6:	f107 0314 	add.w	r3, r7, #20
 80077aa:	2216      	movs	r2, #22
 80077ac:	73da      	strb	r2, [r3, #15]
 80077ae:	f107 0314 	add.w	r3, r7, #20
 80077b2:	222b      	movs	r2, #43	; 0x2b
 80077b4:	741a      	strb	r2, [r3, #16]
 80077b6:	f107 0314 	add.w	r3, r7, #20
 80077ba:	221f      	movs	r2, #31
 80077bc:	745a      	strb	r2, [r3, #17]
 80077be:	f107 0314 	add.w	r3, r7, #20
 80077c2:	222d      	movs	r2, #45	; 0x2d
 80077c4:	749a      	strb	r2, [r3, #18]
 80077c6:	f107 0314 	add.w	r3, r7, #20
 80077ca:	2220      	movs	r2, #32
 80077cc:	74da      	strb	r2, [r3, #19]
 80077ce:	f107 0314 	add.w	r3, r7, #20
 80077d2:	222a      	movs	r2, #42	; 0x2a
 80077d4:	751a      	strb	r2, [r3, #20]
 80077d6:	f107 0314 	add.w	r3, r7, #20
 80077da:	2221      	movs	r2, #33	; 0x21
 80077dc:	755a      	strb	r2, [r3, #21]
 80077de:	f107 0314 	add.w	r3, r7, #20
 80077e2:	222f      	movs	r2, #47	; 0x2f
 80077e4:	759a      	strb	r2, [r3, #22]
 80077e6:	f107 0314 	add.w	r3, r7, #20
 80077ea:	2222      	movs	r2, #34	; 0x22
 80077ec:	75da      	strb	r2, [r3, #23]
 80077ee:	f107 0314 	add.w	r3, r7, #20
 80077f2:	225e      	movs	r2, #94	; 0x5e
 80077f4:	761a      	strb	r2, [r3, #24]
 80077f6:	f107 0314 	add.w	r3, r7, #20
 80077fa:	2223      	movs	r2, #35	; 0x23
 80077fc:	765a      	strb	r2, [r3, #25]
 80077fe:	f107 0314 	add.w	r3, r7, #20
 8007802:	2225      	movs	r2, #37	; 0x25
 8007804:	769a      	strb	r2, [r3, #26]
 8007806:	f107 0314 	add.w	r3, r7, #20
 800780a:	2224      	movs	r2, #36	; 0x24
 800780c:	76da      	strb	r2, [r3, #27]
 800780e:	f107 0314 	add.w	r3, r7, #20
 8007812:	2228      	movs	r2, #40	; 0x28
 8007814:	771a      	strb	r2, [r3, #28]
 8007816:	f107 0314 	add.w	r3, r7, #20
 800781a:	2226      	movs	r2, #38	; 0x26
 800781c:	775a      	strb	r2, [r3, #29]
 800781e:	f107 0314 	add.w	r3, r7, #20
 8007822:	2229      	movs	r2, #41	; 0x29
 8007824:	779a      	strb	r2, [r3, #30]
 8007826:	f107 0314 	add.w	r3, r7, #20
 800782a:	2227      	movs	r2, #39	; 0x27
 800782c:	77da      	strb	r2, [r3, #31]
 800782e:	f107 0314 	add.w	r3, r7, #20
 8007832:	2225      	movs	r2, #37	; 0x25
 8007834:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8007838:	f107 030c 	add.w	r3, r7, #12
 800783c:	f107 0214 	add.w	r2, r7, #20
 8007840:	601a      	str	r2, [r3, #0]
 8007842:	f107 030c 	add.w	r3, r7, #12
 8007846:	2211      	movs	r2, #17
 8007848:	605a      	str	r2, [r3, #4]
 800784a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800784e:	4618      	mov	r0, r3
 8007850:	f7f9 fd48 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8007854:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8007858:	f107 020c 	add.w	r2, r7, #12
 800785c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8007860:	9300      	str	r3, [sp, #0]
 8007862:	460b      	mov	r3, r1
 8007864:	ca06      	ldmia	r2, {r1, r2}
 8007866:	4885      	ldr	r0, [pc, #532]	; (8007a7c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8007868:	f7f9 fd54 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800786c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8007870:	4618      	mov	r0, r3
 8007872:	f7f9 fd43 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8007876:	2305      	movs	r3, #5
 8007878:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800787c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8007880:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8007884:	497e      	ldr	r1, [pc, #504]	; (8007a80 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8007886:	4618      	mov	r0, r3
 8007888:	f7f9 fc30 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800788c:	2306      	movs	r3, #6
 800788e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8007892:	f207 1263 	addw	r2, r7, #355	; 0x163
 8007896:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800789a:	331c      	adds	r3, #28
 800789c:	4979      	ldr	r1, [pc, #484]	; (8007a84 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800789e:	4618      	mov	r0, r3
 80078a0:	f7f9 fc4c 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80078a4:	2307      	movs	r3, #7
 80078a6:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 80078aa:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80078ae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80078b2:	3338      	adds	r3, #56	; 0x38
 80078b4:	4974      	ldr	r1, [pc, #464]	; (8007a88 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 80078b6:	4618      	mov	r0, r3
 80078b8:	f7f9 fc40 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 80078bc:	2308      	movs	r3, #8
 80078be:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 80078c2:	f207 1265 	addw	r2, r7, #357	; 0x165
 80078c6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80078ca:	3354      	adds	r3, #84	; 0x54
 80078cc:	496f      	ldr	r1, [pc, #444]	; (8007a8c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 80078ce:	4618      	mov	r0, r3
 80078d0:	f7f9 fc0c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 80078d4:	2309      	movs	r3, #9
 80078d6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 80078da:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 80078de:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80078e2:	3370      	adds	r3, #112	; 0x70
 80078e4:	496a      	ldr	r1, [pc, #424]	; (8007a90 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 80078e6:	4618      	mov	r0, r3
 80078e8:	f7f9 fc50 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 80078ec:	2310      	movs	r3, #16
 80078ee:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 80078f2:	f207 1267 	addw	r2, r7, #359	; 0x167
 80078f6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80078fa:	338c      	adds	r3, #140	; 0x8c
 80078fc:	4965      	ldr	r1, [pc, #404]	; (8007a94 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 80078fe:	4618      	mov	r0, r3
 8007900:	f7f9 fc6c 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8007904:	2311      	movs	r3, #17
 8007906:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800790a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800790e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8007912:	33a8      	adds	r3, #168	; 0xa8
 8007914:	4960      	ldr	r1, [pc, #384]	; (8007a98 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8007916:	4618      	mov	r0, r3
 8007918:	f7f9 fc38 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800791c:	2312      	movs	r3, #18
 800791e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8007922:	f207 1269 	addw	r2, r7, #361	; 0x169
 8007926:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800792a:	33c4      	adds	r3, #196	; 0xc4
 800792c:	495b      	ldr	r1, [pc, #364]	; (8007a9c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800792e:	4618      	mov	r0, r3
 8007930:	f7f9 fbdc 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8007934:	2313      	movs	r3, #19
 8007936:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800793a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800793e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8007942:	33e0      	adds	r3, #224	; 0xe0
 8007944:	4956      	ldr	r1, [pc, #344]	; (8007aa0 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8007946:	4618      	mov	r0, r3
 8007948:	f7f9 fbf8 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800794c:	2314      	movs	r3, #20
 800794e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8007952:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8007956:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800795a:	33fc      	adds	r3, #252	; 0xfc
 800795c:	4951      	ldr	r1, [pc, #324]	; (8007aa4 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800795e:	4618      	mov	r0, r3
 8007960:	f7f9 fc64 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8007964:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8007968:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800796c:	601a      	str	r2, [r3, #0]
 800796e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8007972:	220a      	movs	r2, #10
 8007974:	605a      	str	r2, [r3, #4]
 8007976:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800797a:	4618      	mov	r0, r3
 800797c:	f7f9 fd57 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8007980:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8007984:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8007988:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800798c:	9300      	str	r3, [sp, #0]
 800798e:	460b      	mov	r3, r1
 8007990:	ca06      	ldmia	r2, {r1, r2}
 8007992:	4845      	ldr	r0, [pc, #276]	; (8007aa8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8007994:	f7f9 fd63 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8007998:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800799c:	4618      	mov	r0, r3
 800799e:	f7f9 fd52 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80079a2:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80079a6:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80079aa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80079ae:	429c      	cmp	r4, r3
 80079b0:	d004      	beq.n	80079bc <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80079b2:	3c1c      	subs	r4, #28
 80079b4:	4620      	mov	r0, r4
 80079b6:	f7f9 fb8c 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80079ba:	e7f6      	b.n	80079aa <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 80079bc:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 80079c0:	2200      	movs	r2, #0
 80079c2:	601a      	str	r2, [r3, #0]
 80079c4:	605a      	str	r2, [r3, #4]
 80079c6:	609a      	str	r2, [r3, #8]
 80079c8:	233c      	movs	r3, #60	; 0x3c
 80079ca:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 80079ce:	231b      	movs	r3, #27
 80079d0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 80079d4:	231c      	movs	r3, #28
 80079d6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 80079da:	233e      	movs	r3, #62	; 0x3e
 80079dc:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 80079e0:	2319      	movs	r3, #25
 80079e2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 80079e6:	231a      	movs	r3, #26
 80079e8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 80079ec:	233d      	movs	r3, #61	; 0x3d
 80079ee:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 80079f2:	2318      	movs	r3, #24
 80079f4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 80079f8:	231d      	movs	r3, #29
 80079fa:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 80079fe:	2321      	movs	r3, #33	; 0x21
 8007a00:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8007a04:	2317      	movs	r3, #23
 8007a06:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8007a0a:	231e      	movs	r3, #30
 8007a0c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8007a10:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8007a14:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8007a18:	2304      	movs	r3, #4
 8007a1a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8007a1e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8007a22:	4618      	mov	r0, r3
 8007a24:	f7f9 fd4b 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8007a28:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8007a2c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8007a30:	9300      	str	r3, [sp, #0]
 8007a32:	4613      	mov	r3, r2
 8007a34:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8007a38:	ca06      	ldmia	r2, {r1, r2}
 8007a3a:	481c      	ldr	r0, [pc, #112]	; (8007aac <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8007a3c:	f7f9 fd57 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8007a40:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8007a44:	4618      	mov	r0, r3
 8007a46:	f7f9 fd46 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8007a4a:	1d3b      	adds	r3, r7, #4
 8007a4c:	681b      	ldr	r3, [r3, #0]
 8007a4e:	2b00      	cmp	r3, #0
 8007a50:	d10e      	bne.n	8007a70 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8007a52:	463b      	mov	r3, r7
 8007a54:	681b      	ldr	r3, [r3, #0]
 8007a56:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007a5a:	4293      	cmp	r3, r2
 8007a5c:	d108      	bne.n	8007a70 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8007a5e:	4813      	ldr	r0, [pc, #76]	; (8007aac <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8007a60:	f7fc f99e 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8007a64:	4810      	ldr	r0, [pc, #64]	; (8007aa8 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8007a66:	f7fc f9a8 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8007a6a:	4804      	ldr	r0, [pc, #16]	; (8007a7c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8007a6c:	f7fc f9b2 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8007a70:	bf00      	nop
 8007a72:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8007a76:	46bd      	mov	sp, r7
 8007a78:	bd90      	pop	{r4, r7, pc}
 8007a7a:	bf00      	nop
 8007a7c:	20000290 	.word	0x20000290
 8007a80:	08024a30 	.word	0x08024a30
 8007a84:	08024a38 	.word	0x08024a38
 8007a88:	08024a40 	.word	0x08024a40
 8007a8c:	08024a48 	.word	0x08024a48
 8007a90:	08024a50 	.word	0x08024a50
 8007a94:	08024a58 	.word	0x08024a58
 8007a98:	08024a5c 	.word	0x08024a5c
 8007a9c:	08024a64 	.word	0x08024a64
 8007aa0:	08024a6c 	.word	0x08024a6c
 8007aa4:	08024a74 	.word	0x08024a74
 8007aa8:	200002a8 	.word	0x200002a8
 8007aac:	200002c0 	.word	0x200002c0

08007ab0 <_GLOBAL__sub_I__ZN21Expression_calculator4lineE>:
 8007ab0:	b580      	push	{r7, lr}
 8007ab2:	af00      	add	r7, sp, #0
 8007ab4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8007ab8:	2001      	movs	r0, #1
 8007aba:	f7ff fe1d 	bl	80076f8 <_Z41__static_initialization_and_destruction_0ii>
 8007abe:	bd80      	pop	{r7, pc}

08007ac0 <_GLOBAL__sub_D__ZN21Expression_calculator4lineE>:
 8007ac0:	b580      	push	{r7, lr}
 8007ac2:	af00      	add	r7, sp, #0
 8007ac4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8007ac8:	2000      	movs	r0, #0
 8007aca:	f7ff fe15 	bl	80076f8 <_Z41__static_initialization_and_destruction_0ii>
 8007ace:	bd80      	pop	{r7, pc}

08007ad0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>:
 8007ad0:	b580      	push	{r7, lr}
 8007ad2:	b082      	sub	sp, #8
 8007ad4:	af00      	add	r7, sp, #0
 8007ad6:	6078      	str	r0, [r7, #4]
 8007ad8:	687b      	ldr	r3, [r7, #4]
 8007ada:	4618      	mov	r0, r3
 8007adc:	f000 f8be 	bl	8007c5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>
 8007ae0:	687b      	ldr	r3, [r7, #4]
 8007ae2:	4618      	mov	r0, r3
 8007ae4:	3708      	adds	r7, #8
 8007ae6:	46bd      	mov	sp, r7
 8007ae8:	bd80      	pop	{r7, pc}

08007aea <_ZN16Function_handlerD1Ev>:

typedef token_value (*function_pointer)(std::vector<Expression*>);

#define ADD_FUNCTION(x) functions.insert({#x, &x});

class Function_handler
 8007aea:	b580      	push	{r7, lr}
 8007aec:	b082      	sub	sp, #8
 8007aee:	af00      	add	r7, sp, #0
 8007af0:	6078      	str	r0, [r7, #4]
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	4618      	mov	r0, r3
 8007af6:	f7ff ffeb 	bl	8007ad0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEED1Ev>
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	4618      	mov	r0, r3
 8007afe:	3708      	adds	r7, #8
 8007b00:	46bd      	mov	sp, r7
 8007b02:	bd80      	pop	{r7, pc}

08007b04 <__tcf_0>:
#include "Function_handler.h"

token_value Function_handler::run_function(Function_call *fcall)
{
	static Function_handler instance;
 8007b04:	b580      	push	{r7, lr}
 8007b06:	af00      	add	r7, sp, #0
 8007b08:	4801      	ldr	r0, [pc, #4]	; (8007b10 <__tcf_0+0xc>)
 8007b0a:	f7ff ffee 	bl	8007aea <_ZN16Function_handlerD1Ev>
 8007b0e:	bd80      	pop	{r7, pc}
 8007b10:	20000328 	.word	0x20000328

08007b14 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call>:
{
 8007b14:	b590      	push	{r4, r7, lr}
 8007b16:	b097      	sub	sp, #92	; 0x5c
 8007b18:	af00      	add	r7, sp, #0
 8007b1a:	6078      	str	r0, [r7, #4]
 8007b1c:	6039      	str	r1, [r7, #0]
	static Function_handler instance;
 8007b1e:	4b44      	ldr	r3, [pc, #272]	; (8007c30 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x11c>)
 8007b20:	781b      	ldrb	r3, [r3, #0]
 8007b22:	f3bf 8f5b 	dmb	ish
 8007b26:	b2db      	uxtb	r3, r3
 8007b28:	f003 0301 	and.w	r3, r3, #1
 8007b2c:	2b00      	cmp	r3, #0
 8007b2e:	bf0c      	ite	eq
 8007b30:	2301      	moveq	r3, #1
 8007b32:	2300      	movne	r3, #0
 8007b34:	b2db      	uxtb	r3, r3
 8007b36:	2b00      	cmp	r3, #0
 8007b38:	d013      	beq.n	8007b62 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x4e>
 8007b3a:	483d      	ldr	r0, [pc, #244]	; (8007c30 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x11c>)
 8007b3c:	f018 fb55 	bl	80201ea <__cxa_guard_acquire>
 8007b40:	4603      	mov	r3, r0
 8007b42:	2b00      	cmp	r3, #0
 8007b44:	bf14      	ite	ne
 8007b46:	2301      	movne	r3, #1
 8007b48:	2300      	moveq	r3, #0
 8007b4a:	b2db      	uxtb	r3, r3
 8007b4c:	2b00      	cmp	r3, #0
 8007b4e:	d008      	beq.n	8007b62 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x4e>
 8007b50:	4838      	ldr	r0, [pc, #224]	; (8007c34 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x120>)
 8007b52:	f010 f84f 	bl	8017bf4 <_ZN16Function_handlerC1Ev>
 8007b56:	4836      	ldr	r0, [pc, #216]	; (8007c30 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x11c>)
 8007b58:	f018 fb53 	bl	8020202 <__cxa_guard_release>
 8007b5c:	4836      	ldr	r0, [pc, #216]	; (8007c38 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x124>)
 8007b5e:	f019 fe2c 	bl	80217ba <atexit>

	auto search = instance.functions.find(fcall->id);
 8007b62:	683b      	ldr	r3, [r7, #0]
 8007b64:	3308      	adds	r3, #8
 8007b66:	4619      	mov	r1, r3
 8007b68:	4832      	ldr	r0, [pc, #200]	; (8007c34 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x120>)
 8007b6a:	f000 f88c 	bl	8007c86 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>
 8007b6e:	4603      	mov	r3, r0
 8007b70:	60fb      	str	r3, [r7, #12]
	if (search != instance.functions.end())
 8007b72:	4830      	ldr	r0, [pc, #192]	; (8007c34 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x120>)
 8007b74:	f000 f896 	bl	8007ca4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>
 8007b78:	4603      	mov	r3, r0
 8007b7a:	613b      	str	r3, [r7, #16]
 8007b7c:	f107 0210 	add.w	r2, r7, #16
 8007b80:	f107 030c 	add.w	r3, r7, #12
 8007b84:	4611      	mov	r1, r2
 8007b86:	4618      	mov	r0, r3
 8007b88:	f000 f899 	bl	8007cbe <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEESK_>
 8007b8c:	4603      	mov	r3, r0
 8007b8e:	2b00      	cmp	r3, #0
 8007b90:	d01d      	beq.n	8007bce <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0xba>
	{
		function_pointer fun = search->second;
 8007b92:	f107 030c 	add.w	r3, r7, #12
 8007b96:	4618      	mov	r0, r3
 8007b98:	f000 f8a5 	bl	8007ce6 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEptEv>
 8007b9c:	4603      	mov	r3, r0
 8007b9e:	699b      	ldr	r3, [r3, #24]
 8007ba0:	657b      	str	r3, [r7, #84]	; 0x54
		return fun(fcall->arguments);
 8007ba2:	6d7c      	ldr	r4, [r7, #84]	; 0x54
 8007ba4:	683b      	ldr	r3, [r7, #0]
 8007ba6:	f103 0220 	add.w	r2, r3, #32
 8007baa:	f107 0314 	add.w	r3, r7, #20
 8007bae:	4611      	mov	r1, r2
 8007bb0:	4618      	mov	r0, r3
 8007bb2:	f000 f8a6 	bl	8007d02 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	f107 0214 	add.w	r2, r7, #20
 8007bbc:	4611      	mov	r1, r2
 8007bbe:	4618      	mov	r0, r3
 8007bc0:	47a0      	blx	r4
 8007bc2:	f107 0314 	add.w	r3, r7, #20
 8007bc6:	4618      	mov	r0, r3
 8007bc8:	f000 f8d8 	bl	8007d7c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 8007bcc:	e02b      	b.n	8007c26 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x112>
	}
	else
	{
		Transmitter::report_error(std::string("function " + fcall->id + " not found"),
 8007bce:	683b      	ldr	r3, [r7, #0]
 8007bd0:	f103 0208 	add.w	r2, r3, #8
 8007bd4:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8007bd8:	4918      	ldr	r1, [pc, #96]	; (8007c3c <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x128>)
 8007bda:	4618      	mov	r0, r3
 8007bdc:	f000 f8e9 	bl	8007db2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 8007be0:	f107 0320 	add.w	r3, r7, #32
 8007be4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8007be8:	4a15      	ldr	r2, [pc, #84]	; (8007c40 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call+0x12c>)
 8007bea:	4618      	mov	r0, r3
 8007bec:	f000 f906 	bl	8007dfc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 8007bf0:	683b      	ldr	r3, [r7, #0]
 8007bf2:	6819      	ldr	r1, [r3, #0]
 8007bf4:	683b      	ldr	r3, [r7, #0]
 8007bf6:	685a      	ldr	r2, [r3, #4]
 8007bf8:	f107 0320 	add.w	r3, r7, #32
 8007bfc:	4618      	mov	r0, r3
 8007bfe:	f007 ff3b 	bl	800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>
 8007c02:	f107 0320 	add.w	r3, r7, #32
 8007c06:	4618      	mov	r0, r3
 8007c08:	f018 fcd5 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8007c0c:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8007c10:	4618      	mov	r0, r3
 8007c12:	f018 fcd0 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
				fcall->line, fcall->position);
		return 0;
 8007c16:	2300      	movs	r3, #0
 8007c18:	653b      	str	r3, [r7, #80]	; 0x50
 8007c1a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8007c1e:	4619      	mov	r1, r3
 8007c20:	6878      	ldr	r0, [r7, #4]
 8007c22:	f000 f926 	bl	8007e72 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IivvivEEOT_>
	}
}
 8007c26:	6878      	ldr	r0, [r7, #4]
 8007c28:	375c      	adds	r7, #92	; 0x5c
 8007c2a:	46bd      	mov	sp, r7
 8007c2c:	bd90      	pop	{r4, r7, pc}
 8007c2e:	bf00      	nop
 8007c30:	20000340 	.word	0x20000340
 8007c34:	20000328 	.word	0x20000328
 8007c38:	08007b05 	.word	0x08007b05
 8007c3c:	08024a78 	.word	0x08024a78
 8007c40:	08024a84 	.word	0x08024a84

08007c44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>:
	struct _Rb_tree_impl
 8007c44:	b580      	push	{r7, lr}
 8007c46:	b082      	sub	sp, #8
 8007c48:	af00      	add	r7, sp, #0
 8007c4a:	6078      	str	r0, [r7, #4]
 8007c4c:	6878      	ldr	r0, [r7, #4]
 8007c4e:	f000 f923 	bl	8007e98 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEED1Ev>
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	4618      	mov	r0, r3
 8007c56:	3708      	adds	r7, #8
 8007c58:	46bd      	mov	sp, r7
 8007c5a:	bd80      	pop	{r7, pc}

08007c5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 8007c5c:	b580      	push	{r7, lr}
 8007c5e:	b082      	sub	sp, #8
 8007c60:	af00      	add	r7, sp, #0
 8007c62:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 8007c64:	6878      	ldr	r0, [r7, #4]
 8007c66:	f000 f942 	bl	8007eee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 8007c6a:	4603      	mov	r3, r0
 8007c6c:	4619      	mov	r1, r3
 8007c6e:	6878      	ldr	r0, [r7, #4]
 8007c70:	f000 f91e 	bl	8007eb0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
 8007c74:	687b      	ldr	r3, [r7, #4]
 8007c76:	4618      	mov	r0, r3
 8007c78:	f7ff ffe4 	bl	8007c44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EED1Ev>
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	4618      	mov	r0, r3
 8007c80:	3708      	adds	r7, #8
 8007c82:	46bd      	mov	sp, r7
 8007c84:	bd80      	pop	{r7, pc}

08007c86 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE4findERSI_>:
       *  pointing to the sought after %pair.  If unsuccessful it returns the
       *  past-the-end ( @c end() ) iterator.
       */

      iterator
      find(const key_type& __x)
 8007c86:	b580      	push	{r7, lr}
 8007c88:	b082      	sub	sp, #8
 8007c8a:	af00      	add	r7, sp, #0
 8007c8c:	6078      	str	r0, [r7, #4]
 8007c8e:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8007c90:	687b      	ldr	r3, [r7, #4]
 8007c92:	6839      	ldr	r1, [r7, #0]
 8007c94:	4618      	mov	r0, r3
 8007c96:	f000 f936 	bl	8007f06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>
 8007c9a:	4603      	mov	r3, r0
 8007c9c:	4618      	mov	r0, r3
 8007c9e:	3708      	adds	r7, #8
 8007ca0:	46bd      	mov	sp, r7
 8007ca2:	bd80      	pop	{r7, pc}

08007ca4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8007ca4:	b580      	push	{r7, lr}
 8007ca6:	b082      	sub	sp, #8
 8007ca8:	af00      	add	r7, sp, #0
 8007caa:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	4618      	mov	r0, r3
 8007cb0:	f000 f965 	bl	8007f7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 8007cb4:	4603      	mov	r3, r0
 8007cb6:	4618      	mov	r0, r3
 8007cb8:	3708      	adds	r7, #8
 8007cba:	46bd      	mov	sp, r7
 8007cbc:	bd80      	pop	{r7, pc}

08007cbe <_ZStneRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEESK_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8007cbe:	b480      	push	{r7}
 8007cc0:	b083      	sub	sp, #12
 8007cc2:	af00      	add	r7, sp, #0
 8007cc4:	6078      	str	r0, [r7, #4]
 8007cc6:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	681a      	ldr	r2, [r3, #0]
 8007ccc:	683b      	ldr	r3, [r7, #0]
 8007cce:	681b      	ldr	r3, [r3, #0]
 8007cd0:	429a      	cmp	r2, r3
 8007cd2:	bf14      	ite	ne
 8007cd4:	2301      	movne	r3, #1
 8007cd6:	2300      	moveq	r3, #0
 8007cd8:	b2db      	uxtb	r3, r3
 8007cda:	4618      	mov	r0, r3
 8007cdc:	370c      	adds	r7, #12
 8007cde:	46bd      	mov	sp, r7
 8007ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ce4:	4770      	bx	lr

08007ce6 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8007ce6:	b580      	push	{r7, lr}
 8007ce8:	b082      	sub	sp, #8
 8007cea:	af00      	add	r7, sp, #0
 8007cec:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
 8007cee:	687b      	ldr	r3, [r7, #4]
 8007cf0:	681b      	ldr	r3, [r3, #0]
 8007cf2:	4618      	mov	r0, r3
 8007cf4:	f000 f954 	bl	8007fa0 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8007cf8:	4603      	mov	r3, r0
 8007cfa:	4618      	mov	r0, r3
 8007cfc:	3708      	adds	r7, #8
 8007cfe:	46bd      	mov	sp, r7
 8007d00:	bd80      	pop	{r7, pc}

08007d02 <_ZNSt6vectorIP10ExpressionSaIS1_EEC1ERKS3_>:
      vector(const vector& __x)
 8007d02:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d04:	b085      	sub	sp, #20
 8007d06:	af00      	add	r7, sp, #0
 8007d08:	6078      	str	r0, [r7, #4]
 8007d0a:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 8007d0c:	687c      	ldr	r4, [r7, #4]
 8007d0e:	6838      	ldr	r0, [r7, #0]
 8007d10:	f000 f954 	bl	8007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8007d14:	4605      	mov	r5, r0
 8007d16:	683b      	ldr	r3, [r7, #0]
 8007d18:	4618      	mov	r0, r3
 8007d1a:	f000 f96d 	bl	8007ff8 <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8007d1e:	4602      	mov	r2, r0
 8007d20:	f107 030c 	add.w	r3, r7, #12
 8007d24:	4611      	mov	r1, r2
 8007d26:	4618      	mov	r0, r3
 8007d28:	f000 f958 	bl	8007fdc <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>
 8007d2c:	f107 030c 	add.w	r3, r7, #12
 8007d30:	461a      	mov	r2, r3
 8007d32:	4629      	mov	r1, r5
 8007d34:	4620      	mov	r0, r4
 8007d36:	f000 f982 	bl	800803e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>
 8007d3a:	f107 030c 	add.w	r3, r7, #12
 8007d3e:	4618      	mov	r0, r3
 8007d40:	f000 f965 	bl	800800e <_ZNSaIP10ExpressionED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8007d44:	6838      	ldr	r0, [r7, #0]
 8007d46:	f000 f9a7 	bl	8008098 <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 8007d4a:	4605      	mov	r5, r0
 8007d4c:	6838      	ldr	r0, [r7, #0]
 8007d4e:	f000 f9b7 	bl	80080c0 <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>
 8007d52:	4606      	mov	r6, r0
 8007d54:	687b      	ldr	r3, [r7, #4]
 8007d56:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	4618      	mov	r0, r3
 8007d5c:	f000 f9c4 	bl	80080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8007d60:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 8007d62:	4622      	mov	r2, r4
 8007d64:	4631      	mov	r1, r6
 8007d66:	4628      	mov	r0, r5
 8007d68:	f000 f9c9 	bl	80080fe <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>
 8007d6c:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 8007d6e:	687b      	ldr	r3, [r7, #4]
 8007d70:	605a      	str	r2, [r3, #4]
      }
 8007d72:	687b      	ldr	r3, [r7, #4]
 8007d74:	4618      	mov	r0, r3
 8007d76:	3714      	adds	r7, #20
 8007d78:	46bd      	mov	sp, r7
 8007d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007d7c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8007d7c:	b5b0      	push	{r4, r5, r7, lr}
 8007d7e:	b082      	sub	sp, #8
 8007d80:	af00      	add	r7, sp, #0
 8007d82:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8007d84:	687b      	ldr	r3, [r7, #4]
 8007d86:	681c      	ldr	r4, [r3, #0]
 8007d88:	687b      	ldr	r3, [r7, #4]
 8007d8a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8007d8c:	687b      	ldr	r3, [r7, #4]
 8007d8e:	4618      	mov	r0, r3
 8007d90:	f000 f9aa 	bl	80080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8007d94:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8007d96:	461a      	mov	r2, r3
 8007d98:	4629      	mov	r1, r5
 8007d9a:	4620      	mov	r0, r4
 8007d9c:	f000 f9c0 	bl	8008120 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
      }
 8007da0:	687b      	ldr	r3, [r7, #4]
 8007da2:	4618      	mov	r0, r3
 8007da4:	f000 f95f 	bl	8008066 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>
 8007da8:	687b      	ldr	r3, [r7, #4]
 8007daa:	4618      	mov	r0, r3
 8007dac:	3708      	adds	r7, #8
 8007dae:	46bd      	mov	sp, r7
 8007db0:	bdb0      	pop	{r4, r5, r7, pc}

08007db2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
    }
#endif  // !_GLIBCXX_USE_CXX11_ABI
   
  template<typename _CharT, typename _Traits, typename _Alloc>
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
 8007db2:	b580      	push	{r7, lr}
 8007db4:	b086      	sub	sp, #24
 8007db6:	af00      	add	r7, sp, #0
 8007db8:	60f8      	str	r0, [r7, #12]
 8007dba:	60b9      	str	r1, [r7, #8]
 8007dbc:	607a      	str	r2, [r7, #4]
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    {
      __glibcxx_requires_string(__lhs);
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      const __size_type __len = _Traits::length(__lhs);
 8007dbe:	68b8      	ldr	r0, [r7, #8]
 8007dc0:	f7f9 f940 	bl	8001044 <_ZNSt11char_traitsIcE6lengthEPKc>
 8007dc4:	6178      	str	r0, [r7, #20]
      __string_type __str;
 8007dc6:	68f8      	ldr	r0, [r7, #12]
 8007dc8:	f018 fbd4 	bl	8020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
      __str.reserve(__len + __rhs.size());
 8007dcc:	6878      	ldr	r0, [r7, #4]
 8007dce:	f018 fc26 	bl	802061e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
 8007dd2:	4602      	mov	r2, r0
 8007dd4:	697b      	ldr	r3, [r7, #20]
 8007dd6:	4413      	add	r3, r2
 8007dd8:	4619      	mov	r1, r3
 8007dda:	68f8      	ldr	r0, [r7, #12]
 8007ddc:	f018 fc23 	bl	8020626 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>
      __str.append(__lhs, __len);
 8007de0:	697a      	ldr	r2, [r7, #20]
 8007de2:	68b9      	ldr	r1, [r7, #8]
 8007de4:	68f8      	ldr	r0, [r7, #12]
 8007de6:	f018 fca3 	bl	8020730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>
      __str.append(__rhs);
 8007dea:	6879      	ldr	r1, [r7, #4]
 8007dec:	68f8      	ldr	r0, [r7, #12]
 8007dee:	f018 fc99 	bl	8020724 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>
      return __str;
 8007df2:	bf00      	nop
    }
 8007df4:	68f8      	ldr	r0, [r7, #12]
 8007df6:	3718      	adds	r7, #24
 8007df8:	46bd      	mov	sp, r7
 8007dfa:	bd80      	pop	{r7, pc}

08007dfc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
 8007dfc:	b580      	push	{r7, lr}
 8007dfe:	b084      	sub	sp, #16
 8007e00:	af00      	add	r7, sp, #0
 8007e02:	60f8      	str	r0, [r7, #12]
 8007e04:	60b9      	str	r1, [r7, #8]
 8007e06:	607a      	str	r2, [r7, #4]
    { return std::move(__lhs.append(__rhs)); }
 8007e08:	6879      	ldr	r1, [r7, #4]
 8007e0a:	68b8      	ldr	r0, [r7, #8]
 8007e0c:	f018 fca0 	bl	8020750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 8007e10:	4603      	mov	r3, r0
 8007e12:	4618      	mov	r0, r3
 8007e14:	f000 f992 	bl	800813c <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 8007e18:	4603      	mov	r3, r0
 8007e1a:	4619      	mov	r1, r3
 8007e1c:	68f8      	ldr	r0, [r7, #12]
 8007e1e:	f018 fbb0 	bl	8020582 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
 8007e22:	68f8      	ldr	r0, [r7, #12]
 8007e24:	3710      	adds	r7, #16
 8007e26:	46bd      	mov	sp, r7
 8007e28:	bd80      	pop	{r7, pc}

08007e2a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj1EJiEivEESt16in_place_index_tIXT_EEDpOT0_>:
	variant(in_place_index_t<_Np>, _Args&&... __args)
 8007e2a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e2c:	b085      	sub	sp, #20
 8007e2e:	af00      	add	r7, sp, #0
 8007e30:	60f8      	str	r0, [r7, #12]
 8007e32:	7239      	strb	r1, [r7, #8]
 8007e34:	607a      	str	r2, [r7, #4]
	_Default_ctor_enabler(_Enable_default_constructor_tag{})
 8007e36:	68fc      	ldr	r4, [r7, #12]
 8007e38:	6878      	ldr	r0, [r7, #4]
 8007e3a:	f000 f80f 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8007e3e:	4603      	mov	r3, r0
 8007e40:	461a      	mov	r2, r3
 8007e42:	4631      	mov	r1, r6
 8007e44:	4620      	mov	r0, r4
 8007e46:	f000 f9c8 	bl	80081da <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>
 8007e4a:	4629      	mov	r1, r5
 8007e4c:	68f8      	ldr	r0, [r7, #12]
 8007e4e:	f000 f9d9 	bl	8008204 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEC1ESt31_Enable_default_constructor_tag>
	{ }
 8007e52:	68fb      	ldr	r3, [r7, #12]
 8007e54:	4618      	mov	r0, r3
 8007e56:	3714      	adds	r7, #20
 8007e58:	46bd      	mov	sp, r7
 8007e5a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8007e5c:	b480      	push	{r7}
 8007e5e:	b083      	sub	sp, #12
 8007e60:	af00      	add	r7, sp, #0
 8007e62:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8007e64:	687b      	ldr	r3, [r7, #4]
 8007e66:	4618      	mov	r0, r3
 8007e68:	370c      	adds	r7, #12
 8007e6a:	46bd      	mov	sp, r7
 8007e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e70:	4770      	bx	lr

08007e72 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IivvivEEOT_>:
	variant(_Tp&& __t)
 8007e72:	b590      	push	{r4, r7, lr}
 8007e74:	b083      	sub	sp, #12
 8007e76:	af00      	add	r7, sp, #0
 8007e78:	6078      	str	r0, [r7, #4]
 8007e7a:	6039      	str	r1, [r7, #0]
		  std::forward<_Tp>(__t))
 8007e7c:	6838      	ldr	r0, [r7, #0]
 8007e7e:	f7ff ffed 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8007e82:	4603      	mov	r3, r0
 8007e84:	461a      	mov	r2, r3
 8007e86:	4621      	mov	r1, r4
 8007e88:	6878      	ldr	r0, [r7, #4]
 8007e8a:	f7ff ffce 	bl	8007e2a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj1EJiEivEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8007e8e:	687b      	ldr	r3, [r7, #4]
 8007e90:	4618      	mov	r0, r3
 8007e92:	370c      	adds	r7, #12
 8007e94:	46bd      	mov	sp, r7
 8007e96:	bd90      	pop	{r4, r7, pc}

08007e98 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEED1Ev>:
 8007e98:	b580      	push	{r7, lr}
 8007e9a:	b082      	sub	sp, #8
 8007e9c:	af00      	add	r7, sp, #0
 8007e9e:	6078      	str	r0, [r7, #4]
 8007ea0:	6878      	ldr	r0, [r7, #4]
 8007ea2:	f000 f9bb 	bl	800821c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEED1Ev>
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	4618      	mov	r0, r3
 8007eaa:	3708      	adds	r7, #8
 8007eac:	46bd      	mov	sp, r7
 8007eae:	bd80      	pop	{r7, pc}

08007eb0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8007eb0:	b580      	push	{r7, lr}
 8007eb2:	b084      	sub	sp, #16
 8007eb4:	af00      	add	r7, sp, #0
 8007eb6:	6078      	str	r0, [r7, #4]
 8007eb8:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 8007eba:	683b      	ldr	r3, [r7, #0]
 8007ebc:	2b00      	cmp	r3, #0
 8007ebe:	d012      	beq.n	8007ee6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0x36>
	  _M_erase(_S_right(__x));
 8007ec0:	6838      	ldr	r0, [r7, #0]
 8007ec2:	f000 f9b6 	bl	8008232 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 8007ec6:	4603      	mov	r3, r0
 8007ec8:	4619      	mov	r1, r3
 8007eca:	6878      	ldr	r0, [r7, #4]
 8007ecc:	f7ff fff0 	bl	8007eb0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E>
	  _Link_type __y = _S_left(__x);
 8007ed0:	6838      	ldr	r0, [r7, #0]
 8007ed2:	f000 f9ba 	bl	800824a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 8007ed6:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 8007ed8:	6839      	ldr	r1, [r7, #0]
 8007eda:	6878      	ldr	r0, [r7, #4]
 8007edc:	f000 f9c1 	bl	8008262 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>
	  __x = __y;
 8007ee0:	68fb      	ldr	r3, [r7, #12]
 8007ee2:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 8007ee4:	e7e9      	b.n	8007eba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_eraseEPSt13_Rb_tree_nodeISH_E+0xa>
    }
 8007ee6:	bf00      	nop
 8007ee8:	3710      	adds	r7, #16
 8007eea:	46bd      	mov	sp, r7
 8007eec:	bd80      	pop	{r7, pc}

08007eee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 8007eee:	b480      	push	{r7}
 8007ef0:	b083      	sub	sp, #12
 8007ef2:	af00      	add	r7, sp, #0
 8007ef4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	689b      	ldr	r3, [r3, #8]
 8007efa:	4618      	mov	r0, r3
 8007efc:	370c      	adds	r7, #12
 8007efe:	46bd      	mov	sp, r7
 8007f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f04:	4770      	bx	lr

08007f06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8007f06:	b590      	push	{r4, r7, lr}
 8007f08:	b085      	sub	sp, #20
 8007f0a:	af00      	add	r7, sp, #0
 8007f0c:	6078      	str	r0, [r7, #4]
 8007f0e:	6039      	str	r1, [r7, #0]
    find(const _Key& __k)
    {
      iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8007f10:	6878      	ldr	r0, [r7, #4]
 8007f12:	f7ff ffec 	bl	8007eee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 8007f16:	4604      	mov	r4, r0
 8007f18:	6878      	ldr	r0, [r7, #4]
 8007f1a:	f000 f9b3 	bl	8008284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 8007f1e:	4602      	mov	r2, r0
 8007f20:	683b      	ldr	r3, [r7, #0]
 8007f22:	4621      	mov	r1, r4
 8007f24:	6878      	ldr	r0, [r7, #4]
 8007f26:	f000 f9b9 	bl	800829c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>
 8007f2a:	4603      	mov	r3, r0
 8007f2c:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8007f2e:	6878      	ldr	r0, [r7, #4]
 8007f30:	f000 f825 	bl	8007f7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 8007f34:	4603      	mov	r3, r0
 8007f36:	60fb      	str	r3, [r7, #12]
 8007f38:	f107 020c 	add.w	r2, r7, #12
 8007f3c:	f107 0308 	add.w	r3, r7, #8
 8007f40:	4611      	mov	r1, r2
 8007f42:	4618      	mov	r0, r3
 8007f44:	f000 f9db 	bl	80082fe <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEESK_>
 8007f48:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 8007f4a:	2b00      	cmp	r3, #0
 8007f4c:	d10d      	bne.n	8007f6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 8007f4e:	687c      	ldr	r4, [r7, #4]
					_S_key(__j._M_node))) ? end() : __j;
 8007f50:	68bb      	ldr	r3, [r7, #8]
	      || _M_impl._M_key_compare(__k,
 8007f52:	4618      	mov	r0, r3
 8007f54:	f000 f9e7 	bl	8008326 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8007f58:	4603      	mov	r3, r0
 8007f5a:	461a      	mov	r2, r3
 8007f5c:	6839      	ldr	r1, [r7, #0]
 8007f5e:	4620      	mov	r0, r4
 8007f60:	f7fb f81a 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8007f64:	4603      	mov	r3, r0
 8007f66:	2b00      	cmp	r3, #0
 8007f68:	d004      	beq.n	8007f74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8007f6a:	6878      	ldr	r0, [r7, #4]
 8007f6c:	f000 f807 	bl	8007f7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>
 8007f70:	4603      	mov	r3, r0
 8007f72:	e000      	b.n	8007f76 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE4findERS7_+0x70>
 8007f74:	68bb      	ldr	r3, [r7, #8]
    }
 8007f76:	4618      	mov	r0, r3
 8007f78:	3714      	adds	r7, #20
 8007f7a:	46bd      	mov	sp, r7
 8007f7c:	bd90      	pop	{r4, r7, pc}

08007f7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8007f7e:	b580      	push	{r7, lr}
 8007f80:	b084      	sub	sp, #16
 8007f82:	af00      	add	r7, sp, #0
 8007f84:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 8007f86:	687b      	ldr	r3, [r7, #4]
 8007f88:	1d1a      	adds	r2, r3, #4
 8007f8a:	f107 030c 	add.w	r3, r7, #12
 8007f8e:	4611      	mov	r1, r2
 8007f90:	4618      	mov	r0, r3
 8007f92:	f000 f9d4 	bl	800833e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 8007f96:	68fb      	ldr	r3, [r7, #12]
 8007f98:	4618      	mov	r0, r3
 8007f9a:	3710      	adds	r7, #16
 8007f9c:	46bd      	mov	sp, r7
 8007f9e:	bd80      	pop	{r7, pc}

08007fa0 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr()
 8007fa0:	b580      	push	{r7, lr}
 8007fa2:	b082      	sub	sp, #8
 8007fa4:	af00      	add	r7, sp, #0
 8007fa6:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 8007fa8:	687b      	ldr	r3, [r7, #4]
 8007faa:	3310      	adds	r3, #16
 8007fac:	4618      	mov	r0, r3
 8007fae:	f000 f9d5 	bl	800835c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 8007fb2:	4603      	mov	r3, r0
 8007fb4:	4618      	mov	r0, r3
 8007fb6:	3708      	adds	r7, #8
 8007fb8:	46bd      	mov	sp, r7
 8007fba:	bd80      	pop	{r7, pc}

08007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8007fbc:	b480      	push	{r7}
 8007fbe:	b083      	sub	sp, #12
 8007fc0:	af00      	add	r7, sp, #0
 8007fc2:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8007fc4:	687b      	ldr	r3, [r7, #4]
 8007fc6:	685a      	ldr	r2, [r3, #4]
 8007fc8:	687b      	ldr	r3, [r7, #4]
 8007fca:	681b      	ldr	r3, [r3, #0]
 8007fcc:	1ad3      	subs	r3, r2, r3
 8007fce:	109b      	asrs	r3, r3, #2
 8007fd0:	4618      	mov	r0, r3
 8007fd2:	370c      	adds	r7, #12
 8007fd4:	46bd      	mov	sp, r7
 8007fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fda:	4770      	bx	lr

08007fdc <_ZN9__gnu_cxx14__alloc_traitsISaIP10ExpressionES2_E17_S_select_on_copyERKS3_>:
      static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static _Alloc _S_select_on_copy(const _Alloc& __a)
 8007fdc:	b580      	push	{r7, lr}
 8007fde:	b082      	sub	sp, #8
 8007fe0:	af00      	add	r7, sp, #0
 8007fe2:	6078      	str	r0, [r7, #4]
 8007fe4:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 8007fe6:	687b      	ldr	r3, [r7, #4]
 8007fe8:	6839      	ldr	r1, [r7, #0]
 8007fea:	4618      	mov	r0, r3
 8007fec:	f000 f9c2 	bl	8008374 <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>
 8007ff0:	6878      	ldr	r0, [r7, #4]
 8007ff2:	3708      	adds	r7, #8
 8007ff4:	46bd      	mov	sp, r7
 8007ff6:	bd80      	pop	{r7, pc}

08007ff8 <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8007ff8:	b480      	push	{r7}
 8007ffa:	b083      	sub	sp, #12
 8007ffc:	af00      	add	r7, sp, #0
 8007ffe:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8008000:	687b      	ldr	r3, [r7, #4]
 8008002:	4618      	mov	r0, r3
 8008004:	370c      	adds	r7, #12
 8008006:	46bd      	mov	sp, r7
 8008008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800800c:	4770      	bx	lr

0800800e <_ZNSaIP10ExpressionED1Ev>:
 800800e:	b580      	push	{r7, lr}
 8008010:	b082      	sub	sp, #8
 8008012:	af00      	add	r7, sp, #0
 8008014:	6078      	str	r0, [r7, #4]
 8008016:	6878      	ldr	r0, [r7, #4]
 8008018:	f000 f9b9 	bl	800838e <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>
 800801c:	687b      	ldr	r3, [r7, #4]
 800801e:	4618      	mov	r0, r3
 8008020:	3708      	adds	r7, #8
 8008022:	46bd      	mov	sp, r7
 8008024:	bd80      	pop	{r7, pc}

08008026 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8008026:	b580      	push	{r7, lr}
 8008028:	b082      	sub	sp, #8
 800802a:	af00      	add	r7, sp, #0
 800802c:	6078      	str	r0, [r7, #4]
 800802e:	6878      	ldr	r0, [r7, #4]
 8008030:	f7ff ffed 	bl	800800e <_ZNSaIP10ExpressionED1Ev>
 8008034:	687b      	ldr	r3, [r7, #4]
 8008036:	4618      	mov	r0, r3
 8008038:	3708      	adds	r7, #8
 800803a:	46bd      	mov	sp, r7
 800803c:	bd80      	pop	{r7, pc}

0800803e <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1EjRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 800803e:	b580      	push	{r7, lr}
 8008040:	b084      	sub	sp, #16
 8008042:	af00      	add	r7, sp, #0
 8008044:	60f8      	str	r0, [r7, #12]
 8008046:	60b9      	str	r1, [r7, #8]
 8008048:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 800804a:	68fb      	ldr	r3, [r7, #12]
 800804c:	6879      	ldr	r1, [r7, #4]
 800804e:	4618      	mov	r0, r3
 8008050:	f000 f9a8 	bl	80083a4 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
 8008054:	68b9      	ldr	r1, [r7, #8]
 8008056:	68f8      	ldr	r0, [r7, #12]
 8008058:	f000 f9b6 	bl	80083c8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>
 800805c:	68fb      	ldr	r3, [r7, #12]
 800805e:	4618      	mov	r0, r3
 8008060:	3710      	adds	r7, #16
 8008062:	46bd      	mov	sp, r7
 8008064:	bd80      	pop	{r7, pc}

08008066 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8008066:	b580      	push	{r7, lr}
 8008068:	b082      	sub	sp, #8
 800806a:	af00      	add	r7, sp, #0
 800806c:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800806e:	687b      	ldr	r3, [r7, #4]
 8008070:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8008072:	687b      	ldr	r3, [r7, #4]
 8008074:	689a      	ldr	r2, [r3, #8]
 8008076:	687b      	ldr	r3, [r7, #4]
 8008078:	681b      	ldr	r3, [r3, #0]
 800807a:	1ad3      	subs	r3, r2, r3
 800807c:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800807e:	461a      	mov	r2, r3
 8008080:	6878      	ldr	r0, [r7, #4]
 8008082:	f000 f9bc 	bl	80083fe <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      }
 8008086:	687b      	ldr	r3, [r7, #4]
 8008088:	4618      	mov	r0, r3
 800808a:	f7ff ffcc 	bl	8008026 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implD1Ev>
 800808e:	687b      	ldr	r3, [r7, #4]
 8008090:	4618      	mov	r0, r3
 8008092:	3708      	adds	r7, #8
 8008094:	46bd      	mov	sp, r7
 8008096:	bd80      	pop	{r7, pc}

08008098 <_ZNKSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 8008098:	b580      	push	{r7, lr}
 800809a:	b084      	sub	sp, #16
 800809c:	af00      	add	r7, sp, #0
 800809e:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	681b      	ldr	r3, [r3, #0]
 80080a4:	60fb      	str	r3, [r7, #12]
 80080a6:	f107 020c 	add.w	r2, r7, #12
 80080aa:	f107 0308 	add.w	r3, r7, #8
 80080ae:	4611      	mov	r1, r2
 80080b0:	4618      	mov	r0, r3
 80080b2:	f000 f9b7 	bl	8008424 <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 80080b6:	68bb      	ldr	r3, [r7, #8]
 80080b8:	4618      	mov	r0, r3
 80080ba:	3710      	adds	r7, #16
 80080bc:	46bd      	mov	sp, r7
 80080be:	bd80      	pop	{r7, pc}

080080c0 <_ZNKSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 80080c0:	b580      	push	{r7, lr}
 80080c2:	b084      	sub	sp, #16
 80080c4:	af00      	add	r7, sp, #0
 80080c6:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	685b      	ldr	r3, [r3, #4]
 80080cc:	60fb      	str	r3, [r7, #12]
 80080ce:	f107 020c 	add.w	r2, r7, #12
 80080d2:	f107 0308 	add.w	r3, r7, #8
 80080d6:	4611      	mov	r1, r2
 80080d8:	4618      	mov	r0, r3
 80080da:	f000 f9a3 	bl	8008424 <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>
 80080de:	68bb      	ldr	r3, [r7, #8]
 80080e0:	4618      	mov	r0, r3
 80080e2:	3710      	adds	r7, #16
 80080e4:	46bd      	mov	sp, r7
 80080e6:	bd80      	pop	{r7, pc}

080080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 80080e8:	b480      	push	{r7}
 80080ea:	b083      	sub	sp, #12
 80080ec:	af00      	add	r7, sp, #0
 80080ee:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80080f0:	687b      	ldr	r3, [r7, #4]
 80080f2:	4618      	mov	r0, r3
 80080f4:	370c      	adds	r7, #12
 80080f6:	46bd      	mov	sp, r7
 80080f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080fc:	4770      	bx	lr

080080fe <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E>:
	}
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 80080fe:	b580      	push	{r7, lr}
 8008100:	b084      	sub	sp, #16
 8008102:	af00      	add	r7, sp, #0
 8008104:	60f8      	str	r0, [r7, #12]
 8008106:	60b9      	str	r1, [r7, #8]
 8008108:	607a      	str	r2, [r7, #4]
 800810a:	603b      	str	r3, [r7, #0]
			   _ForwardIterator __result, allocator<_Tp>&)
    { return std::uninitialized_copy(__first, __last, __result); }
 800810c:	687a      	ldr	r2, [r7, #4]
 800810e:	68b9      	ldr	r1, [r7, #8]
 8008110:	68f8      	ldr	r0, [r7, #12]
 8008112:	f000 f997 	bl	8008444 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 8008116:	4603      	mov	r3, r0
 8008118:	4618      	mov	r0, r3
 800811a:	3710      	adds	r7, #16
 800811c:	46bd      	mov	sp, r7
 800811e:	bd80      	pop	{r7, pc}

08008120 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8008120:	b580      	push	{r7, lr}
 8008122:	b084      	sub	sp, #16
 8008124:	af00      	add	r7, sp, #0
 8008126:	60f8      	str	r0, [r7, #12]
 8008128:	60b9      	str	r1, [r7, #8]
 800812a:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800812c:	68b9      	ldr	r1, [r7, #8]
 800812e:	68f8      	ldr	r0, [r7, #12]
 8008130:	f000 f99a 	bl	8008468 <_ZSt8_DestroyIPP10ExpressionEvT_S3_>
    }
 8008134:	bf00      	nop
 8008136:	3710      	adds	r7, #16
 8008138:	46bd      	mov	sp, r7
 800813a:	bd80      	pop	{r7, pc}

0800813c <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
 800813c:	b480      	push	{r7}
 800813e:	b083      	sub	sp, #12
 8008140:	af00      	add	r7, sp, #0
 8008142:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008144:	687b      	ldr	r3, [r7, #4]
 8008146:	4618      	mov	r0, r3
 8008148:	370c      	adds	r7, #12
 800814a:	46bd      	mov	sp, r7
 800814c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008150:	4770      	bx	lr

08008152 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8008152:	b590      	push	{r4, r7, lr}
 8008154:	b085      	sub	sp, #20
 8008156:	af00      	add	r7, sp, #0
 8008158:	60f8      	str	r0, [r7, #12]
 800815a:	7239      	strb	r1, [r7, #8]
 800815c:	607a      	str	r2, [r7, #4]
 800815e:	68fb      	ldr	r3, [r7, #12]
 8008160:	687a      	ldr	r2, [r7, #4]
 8008162:	4621      	mov	r1, r4
 8008164:	4618      	mov	r0, r3
 8008166:	f000 f9c8 	bl	80084fa <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>
 800816a:	68fb      	ldr	r3, [r7, #12]
 800816c:	4618      	mov	r0, r3
 800816e:	3714      	adds	r7, #20
 8008170:	46bd      	mov	sp, r7
 8008172:	bd90      	pop	{r4, r7, pc}

08008174 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8008174:	b590      	push	{r4, r7, lr}
 8008176:	b085      	sub	sp, #20
 8008178:	af00      	add	r7, sp, #0
 800817a:	60f8      	str	r0, [r7, #12]
 800817c:	7239      	strb	r1, [r7, #8]
 800817e:	607a      	str	r2, [r7, #4]
 8008180:	68fb      	ldr	r3, [r7, #12]
 8008182:	687a      	ldr	r2, [r7, #4]
 8008184:	4621      	mov	r1, r4
 8008186:	4618      	mov	r0, r3
 8008188:	f7ff ffe3 	bl	8008152 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>
 800818c:	68fb      	ldr	r3, [r7, #12]
 800818e:	4618      	mov	r0, r3
 8008190:	3714      	adds	r7, #20
 8008192:	46bd      	mov	sp, r7
 8008194:	bd90      	pop	{r4, r7, pc}

08008196 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8008196:	b590      	push	{r4, r7, lr}
 8008198:	b085      	sub	sp, #20
 800819a:	af00      	add	r7, sp, #0
 800819c:	60f8      	str	r0, [r7, #12]
 800819e:	7239      	strb	r1, [r7, #8]
 80081a0:	607a      	str	r2, [r7, #4]
 80081a2:	68fb      	ldr	r3, [r7, #12]
 80081a4:	687a      	ldr	r2, [r7, #4]
 80081a6:	4621      	mov	r1, r4
 80081a8:	4618      	mov	r0, r3
 80081aa:	f7ff ffe3 	bl	8008174 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>
 80081ae:	68fb      	ldr	r3, [r7, #12]
 80081b0:	4618      	mov	r0, r3
 80081b2:	3714      	adds	r7, #20
 80081b4:	46bd      	mov	sp, r7
 80081b6:	bd90      	pop	{r4, r7, pc}

080081b8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80081b8:	b590      	push	{r4, r7, lr}
 80081ba:	b085      	sub	sp, #20
 80081bc:	af00      	add	r7, sp, #0
 80081be:	60f8      	str	r0, [r7, #12]
 80081c0:	7239      	strb	r1, [r7, #8]
 80081c2:	607a      	str	r2, [r7, #4]
 80081c4:	68fb      	ldr	r3, [r7, #12]
 80081c6:	687a      	ldr	r2, [r7, #4]
 80081c8:	4621      	mov	r1, r4
 80081ca:	4618      	mov	r0, r3
 80081cc:	f7ff ffe3 	bl	8008196 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>
 80081d0:	68fb      	ldr	r3, [r7, #12]
 80081d2:	4618      	mov	r0, r3
 80081d4:	3714      	adds	r7, #20
 80081d6:	46bd      	mov	sp, r7
 80081d8:	bd90      	pop	{r4, r7, pc}

080081da <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 80081da:	b5b0      	push	{r4, r5, r7, lr}
 80081dc:	b084      	sub	sp, #16
 80081de:	af00      	add	r7, sp, #0
 80081e0:	60f8      	str	r0, [r7, #12]
 80081e2:	7239      	strb	r1, [r7, #8]
 80081e4:	607a      	str	r2, [r7, #4]
	: _Base(__i, std::forward<_Args>(__args)...)
 80081e6:	68fc      	ldr	r4, [r7, #12]
 80081e8:	6878      	ldr	r0, [r7, #4]
 80081ea:	f7ff fe37 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80081ee:	4603      	mov	r3, r0
 80081f0:	461a      	mov	r2, r3
 80081f2:	4629      	mov	r1, r5
 80081f4:	4620      	mov	r0, r4
 80081f6:	f7ff ffdf 	bl	80081b8 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80081fa:	68fb      	ldr	r3, [r7, #12]
 80081fc:	4618      	mov	r0, r3
 80081fe:	3710      	adds	r7, #16
 8008200:	46bd      	mov	sp, r7
 8008202:	bdb0      	pop	{r4, r5, r7, pc}

08008204 <_ZNSt27_Enable_default_constructorILb1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEC1ESt31_Enable_default_constructor_tag>:
    _Enable_default_constructor&
    operator=(_Enable_default_constructor&&) noexcept = default;

    // Can be used in other ctors.
    constexpr explicit
    _Enable_default_constructor(_Enable_default_constructor_tag) { }
 8008204:	b480      	push	{r7}
 8008206:	b083      	sub	sp, #12
 8008208:	af00      	add	r7, sp, #0
 800820a:	6078      	str	r0, [r7, #4]
 800820c:	7039      	strb	r1, [r7, #0]
 800820e:	687b      	ldr	r3, [r7, #4]
 8008210:	4618      	mov	r0, r3
 8008212:	370c      	adds	r7, #12
 8008214:	46bd      	mov	sp, r7
 8008216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800821a:	4770      	bx	lr

0800821c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800821c:	b480      	push	{r7}
 800821e:	b083      	sub	sp, #12
 8008220:	af00      	add	r7, sp, #0
 8008222:	6078      	str	r0, [r7, #4]
 8008224:	687b      	ldr	r3, [r7, #4]
 8008226:	4618      	mov	r0, r3
 8008228:	370c      	adds	r7, #12
 800822a:	46bd      	mov	sp, r7
 800822c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008230:	4770      	bx	lr

08008232 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 8008232:	b480      	push	{r7}
 8008234:	b083      	sub	sp, #12
 8008236:	af00      	add	r7, sp, #0
 8008238:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 800823a:	687b      	ldr	r3, [r7, #4]
 800823c:	68db      	ldr	r3, [r3, #12]
 800823e:	4618      	mov	r0, r3
 8008240:	370c      	adds	r7, #12
 8008242:	46bd      	mov	sp, r7
 8008244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008248:	4770      	bx	lr

0800824a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800824a:	b480      	push	{r7}
 800824c:	b083      	sub	sp, #12
 800824e:	af00      	add	r7, sp, #0
 8008250:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 8008252:	687b      	ldr	r3, [r7, #4]
 8008254:	689b      	ldr	r3, [r3, #8]
 8008256:	4618      	mov	r0, r3
 8008258:	370c      	adds	r7, #12
 800825a:	46bd      	mov	sp, r7
 800825c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008260:	4770      	bx	lr

08008262 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE12_M_drop_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8008262:	b580      	push	{r7, lr}
 8008264:	b082      	sub	sp, #8
 8008266:	af00      	add	r7, sp, #0
 8008268:	6078      	str	r0, [r7, #4]
 800826a:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 800826c:	6839      	ldr	r1, [r7, #0]
 800826e:	6878      	ldr	r0, [r7, #4]
 8008270:	f000 f95b 	bl	800852a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>
	_M_put_node(__p);
 8008274:	6839      	ldr	r1, [r7, #0]
 8008276:	6878      	ldr	r0, [r7, #4]
 8008278:	f000 f96c 	bl	8008554 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>
      }
 800827c:	bf00      	nop
 800827e:	3708      	adds	r7, #8
 8008280:	46bd      	mov	sp, r7
 8008282:	bd80      	pop	{r7, pc}

08008284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8008284:	b480      	push	{r7}
 8008286:	b083      	sub	sp, #12
 8008288:	af00      	add	r7, sp, #0
 800828a:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800828c:	687b      	ldr	r3, [r7, #4]
 800828e:	3304      	adds	r3, #4
 8008290:	4618      	mov	r0, r3
 8008292:	370c      	adds	r7, #12
 8008294:	46bd      	mov	sp, r7
 8008296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800829a:	4770      	bx	lr

0800829c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800829c:	b590      	push	{r4, r7, lr}
 800829e:	b087      	sub	sp, #28
 80082a0:	af00      	add	r7, sp, #0
 80082a2:	60f8      	str	r0, [r7, #12]
 80082a4:	60b9      	str	r1, [r7, #8]
 80082a6:	607a      	str	r2, [r7, #4]
 80082a8:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 80082aa:	68bb      	ldr	r3, [r7, #8]
 80082ac:	2b00      	cmp	r3, #0
 80082ae:	d01b      	beq.n	80082e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 80082b0:	68fc      	ldr	r4, [r7, #12]
 80082b2:	68b8      	ldr	r0, [r7, #8]
 80082b4:	f000 f960 	bl	8008578 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 80082b8:	4603      	mov	r3, r0
 80082ba:	683a      	ldr	r2, [r7, #0]
 80082bc:	4619      	mov	r1, r3
 80082be:	4620      	mov	r0, r4
 80082c0:	f7fa fe6a 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80082c4:	4603      	mov	r3, r0
 80082c6:	f083 0301 	eor.w	r3, r3, #1
 80082ca:	b2db      	uxtb	r3, r3
 80082cc:	2b00      	cmp	r3, #0
 80082ce:	d006      	beq.n	80082de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 80082d0:	68bb      	ldr	r3, [r7, #8]
 80082d2:	607b      	str	r3, [r7, #4]
 80082d4:	68b8      	ldr	r0, [r7, #8]
 80082d6:	f7ff ffb8 	bl	800824a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 80082da:	60b8      	str	r0, [r7, #8]
 80082dc:	e7e5      	b.n	80082aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 80082de:	68b8      	ldr	r0, [r7, #8]
 80082e0:	f7ff ffa7 	bl	8008232 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 80082e4:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 80082e6:	e7e0      	b.n	80082aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_lower_boundEPSt13_Rb_tree_nodeISH_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 80082e8:	f107 0314 	add.w	r3, r7, #20
 80082ec:	6879      	ldr	r1, [r7, #4]
 80082ee:	4618      	mov	r0, r3
 80082f0:	f000 f825 	bl	800833e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 80082f4:	697b      	ldr	r3, [r7, #20]
    }
 80082f6:	4618      	mov	r0, r3
 80082f8:	371c      	adds	r7, #28
 80082fa:	46bd      	mov	sp, r7
 80082fc:	bd90      	pop	{r4, r7, pc}

080082fe <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEESK_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 80082fe:	b480      	push	{r7}
 8008300:	b083      	sub	sp, #12
 8008302:	af00      	add	r7, sp, #0
 8008304:	6078      	str	r0, [r7, #4]
 8008306:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 8008308:	687b      	ldr	r3, [r7, #4]
 800830a:	681a      	ldr	r2, [r3, #0]
 800830c:	683b      	ldr	r3, [r7, #0]
 800830e:	681b      	ldr	r3, [r3, #0]
 8008310:	429a      	cmp	r2, r3
 8008312:	bf0c      	ite	eq
 8008314:	2301      	moveq	r3, #1
 8008316:	2300      	movne	r3, #0
 8008318:	b2db      	uxtb	r3, r3
 800831a:	4618      	mov	r0, r3
 800831c:	370c      	adds	r7, #12
 800831e:	46bd      	mov	sp, r7
 8008320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008324:	4770      	bx	lr

08008326 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 8008326:	b580      	push	{r7, lr}
 8008328:	b082      	sub	sp, #8
 800832a:	af00      	add	r7, sp, #0
 800832c:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 800832e:	6878      	ldr	r0, [r7, #4]
 8008330:	f000 f922 	bl	8008578 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 8008334:	4603      	mov	r3, r0
 8008336:	4618      	mov	r0, r3
 8008338:	3708      	adds	r7, #8
 800833a:	46bd      	mov	sp, r7
 800833c:	bd80      	pop	{r7, pc}

0800833e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800833e:	b480      	push	{r7}
 8008340:	b083      	sub	sp, #12
 8008342:	af00      	add	r7, sp, #0
 8008344:	6078      	str	r0, [r7, #4]
 8008346:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8008348:	687b      	ldr	r3, [r7, #4]
 800834a:	683a      	ldr	r2, [r7, #0]
 800834c:	601a      	str	r2, [r3, #0]
 800834e:	687b      	ldr	r3, [r7, #4]
 8008350:	4618      	mov	r0, r3
 8008352:	370c      	adds	r7, #12
 8008354:	46bd      	mov	sp, r7
 8008356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800835a:	4770      	bx	lr

0800835c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() noexcept
 800835c:	b580      	push	{r7, lr}
 800835e:	b082      	sub	sp, #8
 8008360:	af00      	add	r7, sp, #0
 8008362:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8008364:	6878      	ldr	r0, [r7, #4]
 8008366:	f000 f91a 	bl	800859e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 800836a:	4603      	mov	r3, r0
 800836c:	4618      	mov	r0, r3
 800836e:	3708      	adds	r7, #8
 8008370:	46bd      	mov	sp, r7
 8008372:	bd80      	pop	{r7, pc}

08008374 <_ZNSt16allocator_traitsISaIP10ExpressionEE37select_on_container_copy_constructionERKS2_>:
       *  @brief  Obtain an allocator to use when copying a container.
       *  @param  __rhs  An allocator.
       *  @return @c __rhs
      */
      static allocator_type
      select_on_container_copy_construction(const allocator_type& __rhs)
 8008374:	b580      	push	{r7, lr}
 8008376:	b082      	sub	sp, #8
 8008378:	af00      	add	r7, sp, #0
 800837a:	6078      	str	r0, [r7, #4]
 800837c:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 800837e:	6839      	ldr	r1, [r7, #0]
 8008380:	6878      	ldr	r0, [r7, #4]
 8008382:	f000 f917 	bl	80085b4 <_ZNSaIP10ExpressionEC1ERKS1_>
 8008386:	6878      	ldr	r0, [r7, #4]
 8008388:	3708      	adds	r7, #8
 800838a:	46bd      	mov	sp, r7
 800838c:	bd80      	pop	{r7, pc}

0800838e <_ZN9__gnu_cxx13new_allocatorIP10ExpressionED1Ev>:
 800838e:	b480      	push	{r7}
 8008390:	b083      	sub	sp, #12
 8008392:	af00      	add	r7, sp, #0
 8008394:	6078      	str	r0, [r7, #4]
 8008396:	687b      	ldr	r3, [r7, #4]
 8008398:	4618      	mov	r0, r3
 800839a:	370c      	adds	r7, #12
 800839c:	46bd      	mov	sp, r7
 800839e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083a2:	4770      	bx	lr

080083a4 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 80083a4:	b580      	push	{r7, lr}
 80083a6:	b082      	sub	sp, #8
 80083a8:	af00      	add	r7, sp, #0
 80083aa:	6078      	str	r0, [r7, #4]
 80083ac:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 80083ae:	6839      	ldr	r1, [r7, #0]
 80083b0:	6878      	ldr	r0, [r7, #4]
 80083b2:	f000 f8ff 	bl	80085b4 <_ZNSaIP10ExpressionEC1ERKS1_>
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	4618      	mov	r0, r3
 80083ba:	f000 f909 	bl	80085d0 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 80083be:	687b      	ldr	r3, [r7, #4]
 80083c0:	4618      	mov	r0, r3
 80083c2:	3708      	adds	r7, #8
 80083c4:	46bd      	mov	sp, r7
 80083c6:	bd80      	pop	{r7, pc}

080083c8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 80083c8:	b580      	push	{r7, lr}
 80083ca:	b082      	sub	sp, #8
 80083cc:	af00      	add	r7, sp, #0
 80083ce:	6078      	str	r0, [r7, #4]
 80083d0:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 80083d2:	6839      	ldr	r1, [r7, #0]
 80083d4:	6878      	ldr	r0, [r7, #4]
 80083d6:	f000 f90f 	bl	80085f8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 80083da:	4602      	mov	r2, r0
 80083dc:	687b      	ldr	r3, [r7, #4]
 80083de:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	681a      	ldr	r2, [r3, #0]
 80083e4:	687b      	ldr	r3, [r7, #4]
 80083e6:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 80083e8:	687b      	ldr	r3, [r7, #4]
 80083ea:	681a      	ldr	r2, [r3, #0]
 80083ec:	683b      	ldr	r3, [r7, #0]
 80083ee:	009b      	lsls	r3, r3, #2
 80083f0:	441a      	add	r2, r3
 80083f2:	687b      	ldr	r3, [r7, #4]
 80083f4:	609a      	str	r2, [r3, #8]
      }
 80083f6:	bf00      	nop
 80083f8:	3708      	adds	r7, #8
 80083fa:	46bd      	mov	sp, r7
 80083fc:	bd80      	pop	{r7, pc}

080083fe <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 80083fe:	b580      	push	{r7, lr}
 8008400:	b084      	sub	sp, #16
 8008402:	af00      	add	r7, sp, #0
 8008404:	60f8      	str	r0, [r7, #12]
 8008406:	60b9      	str	r1, [r7, #8]
 8008408:	607a      	str	r2, [r7, #4]
	if (__p)
 800840a:	68bb      	ldr	r3, [r7, #8]
 800840c:	2b00      	cmp	r3, #0
 800840e:	d005      	beq.n	800841c <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8008410:	68fb      	ldr	r3, [r7, #12]
 8008412:	687a      	ldr	r2, [r7, #4]
 8008414:	68b9      	ldr	r1, [r7, #8]
 8008416:	4618      	mov	r0, r3
 8008418:	f000 f902 	bl	8008620 <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>
      }
 800841c:	bf00      	nop
 800841e:	3710      	adds	r7, #16
 8008420:	46bd      	mov	sp, r7
 8008422:	bd80      	pop	{r7, pc}

08008424 <_ZN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8008424:	b480      	push	{r7}
 8008426:	b083      	sub	sp, #12
 8008428:	af00      	add	r7, sp, #0
 800842a:	6078      	str	r0, [r7, #4]
 800842c:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800842e:	683b      	ldr	r3, [r7, #0]
 8008430:	681a      	ldr	r2, [r3, #0]
 8008432:	687b      	ldr	r3, [r7, #4]
 8008434:	601a      	str	r2, [r3, #0]
 8008436:	687b      	ldr	r3, [r7, #4]
 8008438:	4618      	mov	r0, r3
 800843a:	370c      	adds	r7, #12
 800843c:	46bd      	mov	sp, r7
 800843e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008442:	4770      	bx	lr

08008444 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8008444:	b580      	push	{r7, lr}
 8008446:	b086      	sub	sp, #24
 8008448:	af00      	add	r7, sp, #0
 800844a:	60f8      	str	r0, [r7, #12]
 800844c:	60b9      	str	r1, [r7, #8]
 800844e:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 8008450:	2301      	movs	r3, #1
 8008452:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8008454:	687a      	ldr	r2, [r7, #4]
 8008456:	68b9      	ldr	r1, [r7, #8]
 8008458:	68f8      	ldr	r0, [r7, #12]
 800845a:	f000 f8f0 	bl	800863e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>
 800845e:	4603      	mov	r3, r0
    }
 8008460:	4618      	mov	r0, r3
 8008462:	3718      	adds	r7, #24
 8008464:	46bd      	mov	sp, r7
 8008466:	bd80      	pop	{r7, pc}

08008468 <_ZSt8_DestroyIPP10ExpressionEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8008468:	b580      	push	{r7, lr}
 800846a:	b082      	sub	sp, #8
 800846c:	af00      	add	r7, sp, #0
 800846e:	6078      	str	r0, [r7, #4]
 8008470:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8008472:	6839      	ldr	r1, [r7, #0]
 8008474:	6878      	ldr	r0, [r7, #4]
 8008476:	f000 f8f2 	bl	800865e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>
    }
 800847a:	bf00      	nop
 800847c:	3708      	adds	r7, #8
 800847e:	46bd      	mov	sp, r7
 8008480:	bd80      	pop	{r7, pc}

08008482 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJiEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8008482:	b580      	push	{r7, lr}
 8008484:	b084      	sub	sp, #16
 8008486:	af00      	add	r7, sp, #0
 8008488:	60f8      	str	r0, [r7, #12]
 800848a:	7239      	strb	r1, [r7, #8]
 800848c:	607a      	str	r2, [r7, #4]
	: _M_storage(std::forward<_Args>(__args)...)
 800848e:	6878      	ldr	r0, [r7, #4]
 8008490:	f7ff fce4 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8008494:	4603      	mov	r3, r0
 8008496:	681a      	ldr	r2, [r3, #0]
 8008498:	68fb      	ldr	r3, [r7, #12]
 800849a:	601a      	str	r2, [r3, #0]
	{ }
 800849c:	68fb      	ldr	r3, [r7, #12]
 800849e:	4618      	mov	r0, r3
 80084a0:	3710      	adds	r7, #16
 80084a2:	46bd      	mov	sp, r7
 80084a4:	bd80      	pop	{r7, pc}

080084a6 <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1IJiEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 80084a6:	b5b0      	push	{r4, r5, r7, lr}
 80084a8:	b084      	sub	sp, #16
 80084aa:	af00      	add	r7, sp, #0
 80084ac:	60f8      	str	r0, [r7, #12]
 80084ae:	7239      	strb	r1, [r7, #8]
 80084b0:	607a      	str	r2, [r7, #4]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 80084b2:	68fc      	ldr	r4, [r7, #12]
 80084b4:	6878      	ldr	r0, [r7, #4]
 80084b6:	f7ff fcd1 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80084ba:	4603      	mov	r3, r0
 80084bc:	461a      	mov	r2, r3
 80084be:	4629      	mov	r1, r5
 80084c0:	4620      	mov	r0, r4
 80084c2:	f7ff ffde 	bl	8008482 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJiEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80084c6:	68fb      	ldr	r3, [r7, #12]
 80084c8:	4618      	mov	r0, r3
 80084ca:	3710      	adds	r7, #16
 80084cc:	46bd      	mov	sp, r7
 80084ce:	bdb0      	pop	{r4, r5, r7, pc}

080084d0 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variadic_union(in_place_index_t<_Np>, _Args&&... __args)
 80084d0:	b5b0      	push	{r4, r5, r7, lr}
 80084d2:	b084      	sub	sp, #16
 80084d4:	af00      	add	r7, sp, #0
 80084d6:	60f8      	str	r0, [r7, #12]
 80084d8:	7239      	strb	r1, [r7, #8]
 80084da:	607a      	str	r2, [r7, #4]
	: _M_rest(in_place_index<_Np-1>, std::forward<_Args>(__args)...)
 80084dc:	68fc      	ldr	r4, [r7, #12]
 80084de:	6878      	ldr	r0, [r7, #4]
 80084e0:	f7ff fcbc 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 80084e4:	4603      	mov	r3, r0
 80084e6:	461a      	mov	r2, r3
 80084e8:	4629      	mov	r1, r5
 80084ea:	4620      	mov	r0, r4
 80084ec:	f7ff ffdb 	bl	80084a6 <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1IJiEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 80084f0:	68fb      	ldr	r3, [r7, #12]
 80084f2:	4618      	mov	r0, r3
 80084f4:	3710      	adds	r7, #16
 80084f6:	46bd      	mov	sp, r7
 80084f8:	bdb0      	pop	{r4, r5, r7, pc}

080084fa <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 80084fa:	b5b0      	push	{r4, r5, r7, lr}
 80084fc:	b084      	sub	sp, #16
 80084fe:	af00      	add	r7, sp, #0
 8008500:	60f8      	str	r0, [r7, #12]
 8008502:	7239      	strb	r1, [r7, #8]
 8008504:	607a      	str	r2, [r7, #4]
	_M_index(_Np)
 8008506:	68fc      	ldr	r4, [r7, #12]
 8008508:	6878      	ldr	r0, [r7, #4]
 800850a:	f7ff fca7 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800850e:	4603      	mov	r3, r0
 8008510:	461a      	mov	r2, r3
 8008512:	4629      	mov	r1, r5
 8008514:	4620      	mov	r0, r4
 8008516:	f7ff ffdb 	bl	80084d0 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj1EJiEEESt16in_place_index_tIXT_EEDpOT0_>
 800851a:	68fb      	ldr	r3, [r7, #12]
 800851c:	2201      	movs	r2, #1
 800851e:	761a      	strb	r2, [r3, #24]
	{ }
 8008520:	68fb      	ldr	r3, [r7, #12]
 8008522:	4618      	mov	r0, r3
 8008524:	3710      	adds	r7, #16
 8008526:	46bd      	mov	sp, r7
 8008528:	bdb0      	pop	{r4, r5, r7, pc}

0800852a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800852a:	b590      	push	{r4, r7, lr}
 800852c:	b083      	sub	sp, #12
 800852e:	af00      	add	r7, sp, #0
 8008530:	6078      	str	r0, [r7, #4]
 8008532:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 8008534:	6878      	ldr	r0, [r7, #4]
 8008536:	f000 f89d 	bl	8008674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 800853a:	4604      	mov	r4, r0
 800853c:	6838      	ldr	r0, [r7, #0]
 800853e:	f7ff fd2f 	bl	8007fa0 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8008542:	4603      	mov	r3, r0
 8008544:	4619      	mov	r1, r3
 8008546:	4620      	mov	r0, r4
 8008548:	f000 f89f 	bl	800868a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>
      }
 800854c:	bf00      	nop
 800854e:	370c      	adds	r7, #12
 8008550:	46bd      	mov	sp, r7
 8008552:	bd90      	pop	{r4, r7, pc}

08008554 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_put_nodeEPSt13_Rb_tree_nodeISH_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8008554:	b580      	push	{r7, lr}
 8008556:	b082      	sub	sp, #8
 8008558:	af00      	add	r7, sp, #0
 800855a:	6078      	str	r0, [r7, #4]
 800855c:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 800855e:	6878      	ldr	r0, [r7, #4]
 8008560:	f000 f888 	bl	8008674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 8008564:	4603      	mov	r3, r0
 8008566:	2201      	movs	r2, #1
 8008568:	6839      	ldr	r1, [r7, #0]
 800856a:	4618      	mov	r0, r3
 800856c:	f000 f89a 	bl	80086a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>
 8008570:	bf00      	nop
 8008572:	3708      	adds	r7, #8
 8008574:	46bd      	mov	sp, r7
 8008576:	bd80      	pop	{r7, pc}

08008578 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>:
      _S_key(_Const_Link_type __x)
 8008578:	b580      	push	{r7, lr}
 800857a:	b084      	sub	sp, #16
 800857c:	af00      	add	r7, sp, #0
 800857e:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8008580:	6878      	ldr	r0, [r7, #4]
 8008582:	f000 f89e 	bl	80086c2 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 8008586:	4602      	mov	r2, r0
 8008588:	f107 030c 	add.w	r3, r7, #12
 800858c:	4611      	mov	r1, r2
 800858e:	4618      	mov	r0, r3
 8008590:	f000 f8a5 	bl	80086de <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>
 8008594:	4603      	mov	r3, r0
      }
 8008596:	4618      	mov	r0, r3
 8008598:	3710      	adds	r7, #16
 800859a:	46bd      	mov	sp, r7
 800859c:	bd80      	pop	{r7, pc}

0800859e <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() noexcept
 800859e:	b480      	push	{r7}
 80085a0:	b083      	sub	sp, #12
 80085a2:	af00      	add	r7, sp, #0
 80085a4:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80085a6:	687b      	ldr	r3, [r7, #4]
 80085a8:	4618      	mov	r0, r3
 80085aa:	370c      	adds	r7, #12
 80085ac:	46bd      	mov	sp, r7
 80085ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085b2:	4770      	bx	lr

080085b4 <_ZNSaIP10ExpressionEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 80085b4:	b580      	push	{r7, lr}
 80085b6:	b082      	sub	sp, #8
 80085b8:	af00      	add	r7, sp, #0
 80085ba:	6078      	str	r0, [r7, #4]
 80085bc:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80085be:	6839      	ldr	r1, [r7, #0]
 80085c0:	6878      	ldr	r0, [r7, #4]
 80085c2:	f000 f898 	bl	80086f6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>
 80085c6:	687b      	ldr	r3, [r7, #4]
 80085c8:	4618      	mov	r0, r3
 80085ca:	3708      	adds	r7, #8
 80085cc:	46bd      	mov	sp, r7
 80085ce:	bd80      	pop	{r7, pc}

080085d0 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 80085d0:	b480      	push	{r7}
 80085d2:	b083      	sub	sp, #12
 80085d4:	af00      	add	r7, sp, #0
 80085d6:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 80085d8:	687b      	ldr	r3, [r7, #4]
 80085da:	2200      	movs	r2, #0
 80085dc:	601a      	str	r2, [r3, #0]
 80085de:	687b      	ldr	r3, [r7, #4]
 80085e0:	2200      	movs	r2, #0
 80085e2:	605a      	str	r2, [r3, #4]
 80085e4:	687b      	ldr	r3, [r7, #4]
 80085e6:	2200      	movs	r2, #0
 80085e8:	609a      	str	r2, [r3, #8]
	{ }
 80085ea:	687b      	ldr	r3, [r7, #4]
 80085ec:	4618      	mov	r0, r3
 80085ee:	370c      	adds	r7, #12
 80085f0:	46bd      	mov	sp, r7
 80085f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085f6:	4770      	bx	lr

080085f8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 80085f8:	b580      	push	{r7, lr}
 80085fa:	b082      	sub	sp, #8
 80085fc:	af00      	add	r7, sp, #0
 80085fe:	6078      	str	r0, [r7, #4]
 8008600:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8008602:	683b      	ldr	r3, [r7, #0]
 8008604:	2b00      	cmp	r3, #0
 8008606:	d006      	beq.n	8008616 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x1e>
 8008608:	687b      	ldr	r3, [r7, #4]
 800860a:	6839      	ldr	r1, [r7, #0]
 800860c:	4618      	mov	r0, r3
 800860e:	f000 f87e 	bl	800870e <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>
 8008612:	4603      	mov	r3, r0
 8008614:	e000      	b.n	8008618 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj+0x20>
 8008616:	2300      	movs	r3, #0
      }
 8008618:	4618      	mov	r0, r3
 800861a:	3708      	adds	r7, #8
 800861c:	46bd      	mov	sp, r7
 800861e:	bd80      	pop	{r7, pc}

08008620 <_ZNSt16allocator_traitsISaIP10ExpressionEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8008620:	b580      	push	{r7, lr}
 8008622:	b084      	sub	sp, #16
 8008624:	af00      	add	r7, sp, #0
 8008626:	60f8      	str	r0, [r7, #12]
 8008628:	60b9      	str	r1, [r7, #8]
 800862a:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800862c:	687a      	ldr	r2, [r7, #4]
 800862e:	68b9      	ldr	r1, [r7, #8]
 8008630:	68f8      	ldr	r0, [r7, #12]
 8008632:	f000 f87b 	bl	800872c <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>
 8008636:	bf00      	nop
 8008638:	3710      	adds	r7, #16
 800863a:	46bd      	mov	sp, r7
 800863c:	bd80      	pop	{r7, pc}

0800863e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 800863e:	b580      	push	{r7, lr}
 8008640:	b084      	sub	sp, #16
 8008642:	af00      	add	r7, sp, #0
 8008644:	60f8      	str	r0, [r7, #12]
 8008646:	60b9      	str	r1, [r7, #8]
 8008648:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 800864a:	687a      	ldr	r2, [r7, #4]
 800864c:	68b9      	ldr	r1, [r7, #8]
 800864e:	68f8      	ldr	r0, [r7, #12]
 8008650:	f000 f878 	bl	8008744 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>
 8008654:	4603      	mov	r3, r0
 8008656:	4618      	mov	r0, r3
 8008658:	3710      	adds	r7, #16
 800865a:	46bd      	mov	sp, r7
 800865c:	bd80      	pop	{r7, pc}

0800865e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP10ExpressionEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800865e:	b480      	push	{r7}
 8008660:	b083      	sub	sp, #12
 8008662:	af00      	add	r7, sp, #0
 8008664:	6078      	str	r0, [r7, #4]
 8008666:	6039      	str	r1, [r7, #0]
 8008668:	bf00      	nop
 800866a:	370c      	adds	r7, #12
 800866c:	46bd      	mov	sp, r7
 800866e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008672:	4770      	bx	lr

08008674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8008674:	b480      	push	{r7}
 8008676:	b083      	sub	sp, #12
 8008678:	af00      	add	r7, sp, #0
 800867a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800867c:	687b      	ldr	r3, [r7, #4]
 800867e:	4618      	mov	r0, r3
 8008680:	370c      	adds	r7, #12
 8008682:	46bd      	mov	sp, r7
 8008684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008688:	4770      	bx	lr

0800868a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEE7destroyISI_EEvRSK_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 800868a:	b580      	push	{r7, lr}
 800868c:	b082      	sub	sp, #8
 800868e:	af00      	add	r7, sp, #0
 8008690:	6078      	str	r0, [r7, #4]
 8008692:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8008694:	6839      	ldr	r1, [r7, #0]
 8008696:	6878      	ldr	r0, [r7, #4]
 8008698:	f000 f879 	bl	800878e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>
 800869c:	bf00      	nop
 800869e:	3708      	adds	r7, #8
 80086a0:	46bd      	mov	sp, r7
 80086a2:	bd80      	pop	{r7, pc}

080086a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEE10deallocateERSK_PSJ_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80086a4:	b580      	push	{r7, lr}
 80086a6:	b084      	sub	sp, #16
 80086a8:	af00      	add	r7, sp, #0
 80086aa:	60f8      	str	r0, [r7, #12]
 80086ac:	60b9      	str	r1, [r7, #8]
 80086ae:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80086b0:	687a      	ldr	r2, [r7, #4]
 80086b2:	68b9      	ldr	r1, [r7, #8]
 80086b4:	68f8      	ldr	r0, [r7, #12]
 80086b6:	f000 f876 	bl	80087a6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>
 80086ba:	bf00      	nop
 80086bc:	3710      	adds	r7, #16
 80086be:	46bd      	mov	sp, r7
 80086c0:	bd80      	pop	{r7, pc}

080086c2 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>:
      _M_valptr() const
 80086c2:	b580      	push	{r7, lr}
 80086c4:	b082      	sub	sp, #8
 80086c6:	af00      	add	r7, sp, #0
 80086c8:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 80086ca:	687b      	ldr	r3, [r7, #4]
 80086cc:	3310      	adds	r3, #16
 80086ce:	4618      	mov	r0, r3
 80086d0:	f000 f875 	bl	80087be <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>
 80086d4:	4603      	mov	r3, r0
 80086d6:	4618      	mov	r0, r3
 80086d8:	3708      	adds	r7, #8
 80086da:	46bd      	mov	sp, r7
 80086dc:	bd80      	pop	{r7, pc}

080086de <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEclERKSH_>:
      operator()(const _Pair& __x) const
 80086de:	b480      	push	{r7}
 80086e0:	b083      	sub	sp, #12
 80086e2:	af00      	add	r7, sp, #0
 80086e4:	6078      	str	r0, [r7, #4]
 80086e6:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 80086e8:	683b      	ldr	r3, [r7, #0]
 80086ea:	4618      	mov	r0, r3
 80086ec:	370c      	adds	r7, #12
 80086ee:	46bd      	mov	sp, r7
 80086f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086f4:	4770      	bx	lr

080086f6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1ERKS3_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 80086f6:	b480      	push	{r7}
 80086f8:	b083      	sub	sp, #12
 80086fa:	af00      	add	r7, sp, #0
 80086fc:	6078      	str	r0, [r7, #4]
 80086fe:	6039      	str	r1, [r7, #0]
 8008700:	687b      	ldr	r3, [r7, #4]
 8008702:	4618      	mov	r0, r3
 8008704:	370c      	adds	r7, #12
 8008706:	46bd      	mov	sp, r7
 8008708:	f85d 7b04 	ldr.w	r7, [sp], #4
 800870c:	4770      	bx	lr

0800870e <_ZNSt16allocator_traitsISaIP10ExpressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 800870e:	b580      	push	{r7, lr}
 8008710:	b082      	sub	sp, #8
 8008712:	af00      	add	r7, sp, #0
 8008714:	6078      	str	r0, [r7, #4]
 8008716:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8008718:	2200      	movs	r2, #0
 800871a:	6839      	ldr	r1, [r7, #0]
 800871c:	6878      	ldr	r0, [r7, #4]
 800871e:	f000 f85a 	bl	80087d6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>
 8008722:	4603      	mov	r3, r0
 8008724:	4618      	mov	r0, r3
 8008726:	3708      	adds	r7, #8
 8008728:	46bd      	mov	sp, r7
 800872a:	bd80      	pop	{r7, pc}

0800872c <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800872c:	b580      	push	{r7, lr}
 800872e:	b084      	sub	sp, #16
 8008730:	af00      	add	r7, sp, #0
 8008732:	60f8      	str	r0, [r7, #12]
 8008734:	60b9      	str	r1, [r7, #8]
 8008736:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8008738:	68b8      	ldr	r0, [r7, #8]
 800873a:	f017 fd52 	bl	80201e2 <_ZdlPv>
      }
 800873e:	3710      	adds	r7, #16
 8008740:	46bd      	mov	sp, r7
 8008742:	bd80      	pop	{r7, pc}

08008744 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_>:
   *  Note that the end of the output range is permitted to be contained
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    inline _OI
    copy(_II __first, _II __last, _OI __result)
 8008744:	b590      	push	{r4, r7, lr}
 8008746:	b085      	sub	sp, #20
 8008748:	af00      	add	r7, sp, #0
 800874a:	60f8      	str	r0, [r7, #12]
 800874c:	60b9      	str	r1, [r7, #8]
 800874e:	607a      	str	r2, [r7, #4]
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::value_type>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a2<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8008750:	68f8      	ldr	r0, [r7, #12]
 8008752:	f000 f85f 	bl	8008814 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 8008756:	4604      	mov	r4, r0
 8008758:	68b8      	ldr	r0, [r7, #8]
 800875a:	f000 f85b 	bl	8008814 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>
 800875e:	4603      	mov	r3, r0
 8008760:	687a      	ldr	r2, [r7, #4]
 8008762:	4619      	mov	r1, r3
 8008764:	4620      	mov	r0, r4
 8008766:	f000 f860 	bl	800882a <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>
 800876a:	4603      	mov	r3, r0
    }
 800876c:	4618      	mov	r0, r3
 800876e:	3714      	adds	r7, #20
 8008770:	46bd      	mov	sp, r7
 8008772:	bd90      	pop	{r4, r7, pc}

08008774 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISB_EEEED1Ev>:
    struct pair
 8008774:	b580      	push	{r7, lr}
 8008776:	b082      	sub	sp, #8
 8008778:	af00      	add	r7, sp, #0
 800877a:	6078      	str	r0, [r7, #4]
 800877c:	687b      	ldr	r3, [r7, #4]
 800877e:	4618      	mov	r0, r3
 8008780:	f017 ff19 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8008784:	687b      	ldr	r3, [r7, #4]
 8008786:	4618      	mov	r0, r3
 8008788:	3708      	adds	r7, #8
 800878a:	46bd      	mov	sp, r7
 800878c:	bd80      	pop	{r7, pc}

0800878e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE7destroyISJ_EEvPT_>:
	destroy(_Up* __p)
 800878e:	b580      	push	{r7, lr}
 8008790:	b082      	sub	sp, #8
 8008792:	af00      	add	r7, sp, #0
 8008794:	6078      	str	r0, [r7, #4]
 8008796:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8008798:	6838      	ldr	r0, [r7, #0]
 800879a:	f7ff ffeb 	bl	8008774 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISB_EEEED1Ev>
 800879e:	bf00      	nop
 80087a0:	3708      	adds	r7, #8
 80087a2:	46bd      	mov	sp, r7
 80087a4:	bd80      	pop	{r7, pc}

080087a6 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE10deallocateEPSK_j>:
      deallocate(pointer __p, size_type)
 80087a6:	b580      	push	{r7, lr}
 80087a8:	b084      	sub	sp, #16
 80087aa:	af00      	add	r7, sp, #0
 80087ac:	60f8      	str	r0, [r7, #12]
 80087ae:	60b9      	str	r1, [r7, #8]
 80087b0:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80087b2:	68b8      	ldr	r0, [r7, #8]
 80087b4:	f017 fd15 	bl	80201e2 <_ZdlPv>
      }
 80087b8:	3710      	adds	r7, #16
 80087ba:	46bd      	mov	sp, r7
 80087bc:	bd80      	pop	{r7, pc}

080087be <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 80087be:	b580      	push	{r7, lr}
 80087c0:	b082      	sub	sp, #8
 80087c2:	af00      	add	r7, sp, #0
 80087c4:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 80087c6:	6878      	ldr	r0, [r7, #4]
 80087c8:	f000 f852 	bl	8008870 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>
 80087cc:	4603      	mov	r3, r0
 80087ce:	4618      	mov	r0, r3
 80087d0:	3708      	adds	r7, #8
 80087d2:	46bd      	mov	sp, r7
 80087d4:	bd80      	pop	{r7, pc}

080087d6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80087d6:	b580      	push	{r7, lr}
 80087d8:	b084      	sub	sp, #16
 80087da:	af00      	add	r7, sp, #0
 80087dc:	60f8      	str	r0, [r7, #12]
 80087de:	60b9      	str	r1, [r7, #8]
 80087e0:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80087e2:	68f8      	ldr	r0, [r7, #12]
 80087e4:	f000 f84f 	bl	8008886 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 80087e8:	4602      	mov	r2, r0
 80087ea:	68bb      	ldr	r3, [r7, #8]
 80087ec:	4293      	cmp	r3, r2
 80087ee:	bf8c      	ite	hi
 80087f0:	2301      	movhi	r3, #1
 80087f2:	2300      	movls	r3, #0
 80087f4:	b2db      	uxtb	r3, r3
 80087f6:	2b00      	cmp	r3, #0
 80087f8:	d001      	beq.n	80087fe <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80087fa:	f017 fdca 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80087fe:	68bb      	ldr	r3, [r7, #8]
 8008800:	009b      	lsls	r3, r3, #2
 8008802:	4618      	mov	r0, r3
 8008804:	f017 fd00 	bl	8020208 <_Znwj>
 8008808:	4603      	mov	r3, r0
 800880a:	bf00      	nop
      }
 800880c:	4618      	mov	r0, r3
 800880e:	3710      	adds	r7, #16
 8008810:	46bd      	mov	sp, r7
 8008812:	bd80      	pop	{r7, pc}

08008814 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEET_SA_>:

  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
 8008814:	b480      	push	{r7}
 8008816:	b083      	sub	sp, #12
 8008818:	af00      	add	r7, sp, #0
 800881a:	6078      	str	r0, [r7, #4]
    { return __it; }
 800881c:	687b      	ldr	r3, [r7, #4]
 800881e:	4618      	mov	r0, r3
 8008820:	370c      	adds	r7, #12
 8008822:	46bd      	mov	sp, r7
 8008824:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008828:	4770      	bx	lr

0800882a <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 800882a:	b5b0      	push	{r4, r5, r7, lr}
 800882c:	b084      	sub	sp, #16
 800882e:	af00      	add	r7, sp, #0
 8008830:	60f8      	str	r0, [r7, #12]
 8008832:	60b9      	str	r1, [r7, #8]
 8008834:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8008836:	68f8      	ldr	r0, [r7, #12]
 8008838:	f000 f831 	bl	800889e <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 800883c:	4604      	mov	r4, r0
 800883e:	68b8      	ldr	r0, [r7, #8]
 8008840:	f000 f82d 	bl	800889e <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>
 8008844:	4605      	mov	r5, r0
 8008846:	687b      	ldr	r3, [r7, #4]
 8008848:	4618      	mov	r0, r3
 800884a:	f000 f836 	bl	80088ba <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 800884e:	4603      	mov	r3, r0
 8008850:	461a      	mov	r2, r3
 8008852:	4629      	mov	r1, r5
 8008854:	4620      	mov	r0, r4
 8008856:	f000 f83b 	bl	80088d0 <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 800885a:	4602      	mov	r2, r0
 800885c:	1d3b      	adds	r3, r7, #4
 800885e:	4611      	mov	r1, r2
 8008860:	4618      	mov	r0, r3
 8008862:	f000 f847 	bl	80088f4 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>
 8008866:	4603      	mov	r3, r0
    }
 8008868:	4618      	mov	r0, r3
 800886a:	3710      	adds	r7, #16
 800886c:	46bd      	mov	sp, r7
 800886e:	bdb0      	pop	{r4, r5, r7, pc}

08008870 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEE7_M_addrEv>:
      _M_addr() const noexcept
 8008870:	b480      	push	{r7}
 8008872:	b083      	sub	sp, #12
 8008874:	af00      	add	r7, sp, #0
 8008876:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8008878:	687b      	ldr	r3, [r7, #4]
 800887a:	4618      	mov	r0, r3
 800887c:	370c      	adds	r7, #12
 800887e:	46bd      	mov	sp, r7
 8008880:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008884:	4770      	bx	lr

08008886 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8008886:	b480      	push	{r7}
 8008888:	b083      	sub	sp, #12
 800888a:	af00      	add	r7, sp, #0
 800888c:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800888e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8008892:	4618      	mov	r0, r3
 8008894:	370c      	adds	r7, #12
 8008896:	46bd      	mov	sp, r7
 8008898:	f85d 7b04 	ldr.w	r7, [sp], #4
 800889c:	4770      	bx	lr

0800889e <_ZSt12__niter_baseIPKP10ExpressionSt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE>:
{
_GLIBCXX_BEGIN_NAMESPACE_VERSION

  template<typename _Iterator, typename _Container>
    _Iterator
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 800889e:	b580      	push	{r7, lr}
 80088a0:	b082      	sub	sp, #8
 80088a2:	af00      	add	r7, sp, #0
 80088a4:	6078      	str	r0, [r7, #4]
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it.base(); }
 80088a6:	1d3b      	adds	r3, r7, #4
 80088a8:	4618      	mov	r0, r3
 80088aa:	f000 f82f 	bl	800890c <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 80088ae:	4603      	mov	r3, r0
 80088b0:	681b      	ldr	r3, [r3, #0]
 80088b2:	4618      	mov	r0, r3
 80088b4:	3708      	adds	r7, #8
 80088b6:	46bd      	mov	sp, r7
 80088b8:	bd80      	pop	{r7, pc}

080088ba <_ZSt12__niter_baseIPP10ExpressionET_S3_>:
    __niter_base(_Iterator __it)
 80088ba:	b480      	push	{r7}
 80088bc:	b083      	sub	sp, #12
 80088be:	af00      	add	r7, sp, #0
 80088c0:	6078      	str	r0, [r7, #4]
    { return __it; }
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	4618      	mov	r0, r3
 80088c6:	370c      	adds	r7, #12
 80088c8:	46bd      	mov	sp, r7
 80088ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088ce:	4770      	bx	lr

080088d0 <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 80088d0:	b580      	push	{r7, lr}
 80088d2:	b086      	sub	sp, #24
 80088d4:	af00      	add	r7, sp, #0
 80088d6:	60f8      	str	r0, [r7, #12]
 80088d8:	60b9      	str	r1, [r7, #8]
 80088da:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 80088dc:	2301      	movs	r3, #1
 80088de:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 80088e0:	687a      	ldr	r2, [r7, #4]
 80088e2:	68b9      	ldr	r1, [r7, #8]
 80088e4:	68f8      	ldr	r0, [r7, #12]
 80088e6:	f000 f81c 	bl	8008922 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>
 80088ea:	4603      	mov	r3, r0
    }
 80088ec:	4618      	mov	r0, r3
 80088ee:	3718      	adds	r7, #24
 80088f0:	46bd      	mov	sp, r7
 80088f2:	bd80      	pop	{r7, pc}

080088f4 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 80088f4:	b480      	push	{r7}
 80088f6:	b083      	sub	sp, #12
 80088f8:	af00      	add	r7, sp, #0
 80088fa:	6078      	str	r0, [r7, #4]
 80088fc:	6039      	str	r1, [r7, #0]
    { return __res; }
 80088fe:	683b      	ldr	r3, [r7, #0]
 8008900:	4618      	mov	r0, r3
 8008902:	370c      	adds	r7, #12
 8008904:	46bd      	mov	sp, r7
 8008906:	f85d 7b04 	ldr.w	r7, [sp], #4
 800890a:	4770      	bx	lr

0800890c <_ZNK9__gnu_cxx17__normal_iteratorIPKP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800890c:	b480      	push	{r7}
 800890e:	b083      	sub	sp, #12
 8008910:	af00      	add	r7, sp, #0
 8008912:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8008914:	687b      	ldr	r3, [r7, #4]
 8008916:	4618      	mov	r0, r3
 8008918:	370c      	adds	r7, #12
 800891a:	46bd      	mov	sp, r7
 800891c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008920:	4770      	bx	lr

08008922 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 8008922:	b580      	push	{r7, lr}
 8008924:	b086      	sub	sp, #24
 8008926:	af00      	add	r7, sp, #0
 8008928:	60f8      	str	r0, [r7, #12]
 800892a:	60b9      	str	r1, [r7, #8]
 800892c:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 800892e:	68ba      	ldr	r2, [r7, #8]
 8008930:	68fb      	ldr	r3, [r7, #12]
 8008932:	1ad3      	subs	r3, r2, r3
 8008934:	109b      	asrs	r3, r3, #2
 8008936:	617b      	str	r3, [r7, #20]
	  if (_Num)
 8008938:	697b      	ldr	r3, [r7, #20]
 800893a:	2b00      	cmp	r3, #0
 800893c:	d006      	beq.n	800894c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP10ExpressionEEPT_PKS5_S8_S6_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 800893e:	697b      	ldr	r3, [r7, #20]
 8008940:	009b      	lsls	r3, r3, #2
 8008942:	461a      	mov	r2, r3
 8008944:	68f9      	ldr	r1, [r7, #12]
 8008946:	6878      	ldr	r0, [r7, #4]
 8008948:	f018 ffc6 	bl	80218d8 <memmove>
	  return __result + _Num;
 800894c:	697b      	ldr	r3, [r7, #20]
 800894e:	009b      	lsls	r3, r3, #2
 8008950:	687a      	ldr	r2, [r7, #4]
 8008952:	4413      	add	r3, r2
	}
 8008954:	4618      	mov	r0, r3
 8008956:	3718      	adds	r7, #24
 8008958:	46bd      	mov	sp, r7
 800895a:	bd80      	pop	{r7, pc}

0800895c <_Z41__static_initialization_and_destruction_0ii>:
 800895c:	b590      	push	{r4, r7, lr}
 800895e:	b0e7      	sub	sp, #412	; 0x19c
 8008960:	af02      	add	r7, sp, #8
 8008962:	1d3b      	adds	r3, r7, #4
 8008964:	6018      	str	r0, [r3, #0]
 8008966:	463b      	mov	r3, r7
 8008968:	6019      	str	r1, [r3, #0]
 800896a:	1d3b      	adds	r3, r7, #4
 800896c:	681b      	ldr	r3, [r3, #0]
 800896e:	2b01      	cmp	r3, #1
 8008970:	f040 819d 	bne.w	8008cae <_Z41__static_initialization_and_destruction_0ii+0x352>
 8008974:	463b      	mov	r3, r7
 8008976:	681b      	ldr	r3, [r3, #0]
 8008978:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800897c:	4293      	cmp	r3, r2
 800897e:	f040 8196 	bne.w	8008cae <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8008982:	f107 0314 	add.w	r3, r7, #20
 8008986:	4618      	mov	r0, r3
 8008988:	2322      	movs	r3, #34	; 0x22
 800898a:	461a      	mov	r2, r3
 800898c:	2100      	movs	r1, #0
 800898e:	f018 ffbd 	bl	802190c <memset>
 8008992:	f107 0314 	add.w	r3, r7, #20
 8008996:	223a      	movs	r2, #58	; 0x3a
 8008998:	701a      	strb	r2, [r3, #0]
 800899a:	f107 0314 	add.w	r3, r7, #20
 800899e:	2201      	movs	r2, #1
 80089a0:	705a      	strb	r2, [r3, #1]
 80089a2:	f107 0314 	add.w	r3, r7, #20
 80089a6:	220a      	movs	r2, #10
 80089a8:	709a      	strb	r2, [r3, #2]
 80089aa:	f107 0314 	add.w	r3, r7, #20
 80089ae:	220a      	movs	r2, #10
 80089b0:	70da      	strb	r2, [r3, #3]
 80089b2:	f107 0314 	add.w	r3, r7, #20
 80089b6:	222c      	movs	r2, #44	; 0x2c
 80089b8:	711a      	strb	r2, [r3, #4]
 80089ba:	f107 0314 	add.w	r3, r7, #20
 80089be:	220c      	movs	r2, #12
 80089c0:	715a      	strb	r2, [r3, #5]
 80089c2:	f107 0314 	add.w	r3, r7, #20
 80089c6:	222e      	movs	r2, #46	; 0x2e
 80089c8:	719a      	strb	r2, [r3, #6]
 80089ca:	f107 0314 	add.w	r3, r7, #20
 80089ce:	220b      	movs	r2, #11
 80089d0:	71da      	strb	r2, [r3, #7]
 80089d2:	f107 0314 	add.w	r3, r7, #20
 80089d6:	225b      	movs	r2, #91	; 0x5b
 80089d8:	721a      	strb	r2, [r3, #8]
 80089da:	f107 0314 	add.w	r3, r7, #20
 80089de:	220d      	movs	r2, #13
 80089e0:	725a      	strb	r2, [r3, #9]
 80089e2:	f107 0314 	add.w	r3, r7, #20
 80089e6:	225d      	movs	r2, #93	; 0x5d
 80089e8:	729a      	strb	r2, [r3, #10]
 80089ea:	f107 0314 	add.w	r3, r7, #20
 80089ee:	220e      	movs	r2, #14
 80089f0:	72da      	strb	r2, [r3, #11]
 80089f2:	f107 0314 	add.w	r3, r7, #20
 80089f6:	227c      	movs	r2, #124	; 0x7c
 80089f8:	731a      	strb	r2, [r3, #12]
 80089fa:	f107 0314 	add.w	r3, r7, #20
 80089fe:	2215      	movs	r2, #21
 8008a00:	735a      	strb	r2, [r3, #13]
 8008a02:	f107 0314 	add.w	r3, r7, #20
 8008a06:	2226      	movs	r2, #38	; 0x26
 8008a08:	739a      	strb	r2, [r3, #14]
 8008a0a:	f107 0314 	add.w	r3, r7, #20
 8008a0e:	2216      	movs	r2, #22
 8008a10:	73da      	strb	r2, [r3, #15]
 8008a12:	f107 0314 	add.w	r3, r7, #20
 8008a16:	222b      	movs	r2, #43	; 0x2b
 8008a18:	741a      	strb	r2, [r3, #16]
 8008a1a:	f107 0314 	add.w	r3, r7, #20
 8008a1e:	221f      	movs	r2, #31
 8008a20:	745a      	strb	r2, [r3, #17]
 8008a22:	f107 0314 	add.w	r3, r7, #20
 8008a26:	222d      	movs	r2, #45	; 0x2d
 8008a28:	749a      	strb	r2, [r3, #18]
 8008a2a:	f107 0314 	add.w	r3, r7, #20
 8008a2e:	2220      	movs	r2, #32
 8008a30:	74da      	strb	r2, [r3, #19]
 8008a32:	f107 0314 	add.w	r3, r7, #20
 8008a36:	222a      	movs	r2, #42	; 0x2a
 8008a38:	751a      	strb	r2, [r3, #20]
 8008a3a:	f107 0314 	add.w	r3, r7, #20
 8008a3e:	2221      	movs	r2, #33	; 0x21
 8008a40:	755a      	strb	r2, [r3, #21]
 8008a42:	f107 0314 	add.w	r3, r7, #20
 8008a46:	222f      	movs	r2, #47	; 0x2f
 8008a48:	759a      	strb	r2, [r3, #22]
 8008a4a:	f107 0314 	add.w	r3, r7, #20
 8008a4e:	2222      	movs	r2, #34	; 0x22
 8008a50:	75da      	strb	r2, [r3, #23]
 8008a52:	f107 0314 	add.w	r3, r7, #20
 8008a56:	225e      	movs	r2, #94	; 0x5e
 8008a58:	761a      	strb	r2, [r3, #24]
 8008a5a:	f107 0314 	add.w	r3, r7, #20
 8008a5e:	2223      	movs	r2, #35	; 0x23
 8008a60:	765a      	strb	r2, [r3, #25]
 8008a62:	f107 0314 	add.w	r3, r7, #20
 8008a66:	2225      	movs	r2, #37	; 0x25
 8008a68:	769a      	strb	r2, [r3, #26]
 8008a6a:	f107 0314 	add.w	r3, r7, #20
 8008a6e:	2224      	movs	r2, #36	; 0x24
 8008a70:	76da      	strb	r2, [r3, #27]
 8008a72:	f107 0314 	add.w	r3, r7, #20
 8008a76:	2228      	movs	r2, #40	; 0x28
 8008a78:	771a      	strb	r2, [r3, #28]
 8008a7a:	f107 0314 	add.w	r3, r7, #20
 8008a7e:	2226      	movs	r2, #38	; 0x26
 8008a80:	775a      	strb	r2, [r3, #29]
 8008a82:	f107 0314 	add.w	r3, r7, #20
 8008a86:	2229      	movs	r2, #41	; 0x29
 8008a88:	779a      	strb	r2, [r3, #30]
 8008a8a:	f107 0314 	add.w	r3, r7, #20
 8008a8e:	2227      	movs	r2, #39	; 0x27
 8008a90:	77da      	strb	r2, [r3, #31]
 8008a92:	f107 0314 	add.w	r3, r7, #20
 8008a96:	2225      	movs	r2, #37	; 0x25
 8008a98:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8008a9c:	f107 030c 	add.w	r3, r7, #12
 8008aa0:	f107 0214 	add.w	r2, r7, #20
 8008aa4:	601a      	str	r2, [r3, #0]
 8008aa6:	f107 030c 	add.w	r3, r7, #12
 8008aaa:	2211      	movs	r2, #17
 8008aac:	605a      	str	r2, [r3, #4]
 8008aae:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8008ab2:	4618      	mov	r0, r3
 8008ab4:	f7f8 fc16 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8008ab8:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8008abc:	f107 020c 	add.w	r2, r7, #12
 8008ac0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8008ac4:	9300      	str	r3, [sp, #0]
 8008ac6:	460b      	mov	r3, r1
 8008ac8:	ca06      	ldmia	r2, {r1, r2}
 8008aca:	4885      	ldr	r0, [pc, #532]	; (8008ce0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8008acc:	f7f8 fc22 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8008ad0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8008ad4:	4618      	mov	r0, r3
 8008ad6:	f7f8 fc11 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 8008ada:	2305      	movs	r3, #5
 8008adc:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 8008ae0:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 8008ae4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008ae8:	497e      	ldr	r1, [pc, #504]	; (8008ce4 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 8008aea:	4618      	mov	r0, r3
 8008aec:	f7f8 fafe 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 8008af0:	2306      	movs	r3, #6
 8008af2:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 8008af6:	f207 1263 	addw	r2, r7, #355	; 0x163
 8008afa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008afe:	331c      	adds	r3, #28
 8008b00:	4979      	ldr	r1, [pc, #484]	; (8008ce8 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8008b02:	4618      	mov	r0, r3
 8008b04:	f7f8 fb1a 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8008b08:	2307      	movs	r3, #7
 8008b0a:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8008b0e:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8008b12:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008b16:	3338      	adds	r3, #56	; 0x38
 8008b18:	4974      	ldr	r1, [pc, #464]	; (8008cec <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8008b1a:	4618      	mov	r0, r3
 8008b1c:	f7f8 fb0e 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8008b20:	2308      	movs	r3, #8
 8008b22:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8008b26:	f207 1265 	addw	r2, r7, #357	; 0x165
 8008b2a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008b2e:	3354      	adds	r3, #84	; 0x54
 8008b30:	496f      	ldr	r1, [pc, #444]	; (8008cf0 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8008b32:	4618      	mov	r0, r3
 8008b34:	f7f8 fada 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8008b38:	2309      	movs	r3, #9
 8008b3a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8008b3e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8008b42:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008b46:	3370      	adds	r3, #112	; 0x70
 8008b48:	496a      	ldr	r1, [pc, #424]	; (8008cf4 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8008b4a:	4618      	mov	r0, r3
 8008b4c:	f7f8 fb1e 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8008b50:	2310      	movs	r3, #16
 8008b52:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8008b56:	f207 1267 	addw	r2, r7, #359	; 0x167
 8008b5a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008b5e:	338c      	adds	r3, #140	; 0x8c
 8008b60:	4965      	ldr	r1, [pc, #404]	; (8008cf8 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8008b62:	4618      	mov	r0, r3
 8008b64:	f7f8 fb3a 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8008b68:	2311      	movs	r3, #17
 8008b6a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8008b6e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8008b72:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008b76:	33a8      	adds	r3, #168	; 0xa8
 8008b78:	4960      	ldr	r1, [pc, #384]	; (8008cfc <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8008b7a:	4618      	mov	r0, r3
 8008b7c:	f7f8 fb06 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8008b80:	2312      	movs	r3, #18
 8008b82:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8008b86:	f207 1269 	addw	r2, r7, #361	; 0x169
 8008b8a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008b8e:	33c4      	adds	r3, #196	; 0xc4
 8008b90:	495b      	ldr	r1, [pc, #364]	; (8008d00 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8008b92:	4618      	mov	r0, r3
 8008b94:	f7f8 faaa 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8008b98:	2313      	movs	r3, #19
 8008b9a:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8008b9e:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8008ba2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008ba6:	33e0      	adds	r3, #224	; 0xe0
 8008ba8:	4956      	ldr	r1, [pc, #344]	; (8008d04 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 8008baa:	4618      	mov	r0, r3
 8008bac:	f7f8 fac6 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8008bb0:	2314      	movs	r3, #20
 8008bb2:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8008bb6:	f207 126b 	addw	r2, r7, #363	; 0x16b
 8008bba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008bbe:	33fc      	adds	r3, #252	; 0xfc
 8008bc0:	4951      	ldr	r1, [pc, #324]	; (8008d08 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 8008bc2:	4618      	mov	r0, r3
 8008bc4:	f7f8 fb32 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 8008bc8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8008bcc:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8008bd0:	601a      	str	r2, [r3, #0]
 8008bd2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8008bd6:	220a      	movs	r2, #10
 8008bd8:	605a      	str	r2, [r3, #4]
 8008bda:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8008bde:	4618      	mov	r0, r3
 8008be0:	f7f8 fc25 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 8008be4:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 8008be8:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8008bec:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8008bf0:	9300      	str	r3, [sp, #0]
 8008bf2:	460b      	mov	r3, r1
 8008bf4:	ca06      	ldmia	r2, {r1, r2}
 8008bf6:	4845      	ldr	r0, [pc, #276]	; (8008d0c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8008bf8:	f7f8 fc31 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8008bfc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8008c00:	4618      	mov	r0, r3
 8008c02:	f7f8 fc20 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8008c06:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8008c0a:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8008c0e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8008c12:	429c      	cmp	r4, r3
 8008c14:	d004      	beq.n	8008c20 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8008c16:	3c1c      	subs	r4, #28
 8008c18:	4620      	mov	r0, r4
 8008c1a:	f7f8 fa5a 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8008c1e:	e7f6      	b.n	8008c0e <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8008c20:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8008c24:	2200      	movs	r2, #0
 8008c26:	601a      	str	r2, [r3, #0]
 8008c28:	605a      	str	r2, [r3, #4]
 8008c2a:	609a      	str	r2, [r3, #8]
 8008c2c:	233c      	movs	r3, #60	; 0x3c
 8008c2e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8008c32:	231b      	movs	r3, #27
 8008c34:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8008c38:	231c      	movs	r3, #28
 8008c3a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8008c3e:	233e      	movs	r3, #62	; 0x3e
 8008c40:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8008c44:	2319      	movs	r3, #25
 8008c46:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8008c4a:	231a      	movs	r3, #26
 8008c4c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8008c50:	233d      	movs	r3, #61	; 0x3d
 8008c52:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8008c56:	2318      	movs	r3, #24
 8008c58:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8008c5c:	231d      	movs	r3, #29
 8008c5e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8008c62:	2321      	movs	r3, #33	; 0x21
 8008c64:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8008c68:	2317      	movs	r3, #23
 8008c6a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8008c6e:	231e      	movs	r3, #30
 8008c70:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8008c74:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8008c78:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8008c7c:	2304      	movs	r3, #4
 8008c7e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8008c82:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8008c86:	4618      	mov	r0, r3
 8008c88:	f7f8 fc19 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8008c8c:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8008c90:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8008c94:	9300      	str	r3, [sp, #0]
 8008c96:	4613      	mov	r3, r2
 8008c98:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8008c9c:	ca06      	ldmia	r2, {r1, r2}
 8008c9e:	481c      	ldr	r0, [pc, #112]	; (8008d10 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8008ca0:	f7f8 fc25 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8008ca4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8008ca8:	4618      	mov	r0, r3
 8008caa:	f7f8 fc14 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 8008cae:	1d3b      	adds	r3, r7, #4
 8008cb0:	681b      	ldr	r3, [r3, #0]
 8008cb2:	2b00      	cmp	r3, #0
 8008cb4:	d10e      	bne.n	8008cd4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8008cb6:	463b      	mov	r3, r7
 8008cb8:	681b      	ldr	r3, [r3, #0]
 8008cba:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8008cbe:	4293      	cmp	r3, r2
 8008cc0:	d108      	bne.n	8008cd4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8008cc2:	4813      	ldr	r0, [pc, #76]	; (8008d10 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8008cc4:	f7fb f86c 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 8008cc8:	4810      	ldr	r0, [pc, #64]	; (8008d0c <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 8008cca:	f7fb f876 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 8008cce:	4804      	ldr	r0, [pc, #16]	; (8008ce0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 8008cd0:	f7fb f880 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 8008cd4:	bf00      	nop
 8008cd6:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8008cda:	46bd      	mov	sp, r7
 8008cdc:	bd90      	pop	{r4, r7, pc}
 8008cde:	bf00      	nop
 8008ce0:	200002e0 	.word	0x200002e0
 8008ce4:	08024abc 	.word	0x08024abc
 8008ce8:	08024ac4 	.word	0x08024ac4
 8008cec:	08024acc 	.word	0x08024acc
 8008cf0:	08024ad4 	.word	0x08024ad4
 8008cf4:	08024adc 	.word	0x08024adc
 8008cf8:	08024ae4 	.word	0x08024ae4
 8008cfc:	08024ae8 	.word	0x08024ae8
 8008d00:	08024af0 	.word	0x08024af0
 8008d04:	08024af8 	.word	0x08024af8
 8008d08:	08024b00 	.word	0x08024b00
 8008d0c:	200002f8 	.word	0x200002f8
 8008d10:	20000310 	.word	0x20000310

08008d14 <_GLOBAL__sub_I__ZN16Function_handler12run_functionB5cxx11EP13Function_call>:
 8008d14:	b580      	push	{r7, lr}
 8008d16:	af00      	add	r7, sp, #0
 8008d18:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008d1c:	2001      	movs	r0, #1
 8008d1e:	f7ff fe1d 	bl	800895c <_Z41__static_initialization_and_destruction_0ii>
 8008d22:	bd80      	pop	{r7, pc}

08008d24 <_GLOBAL__sub_D__ZN16Function_handler12run_functionB5cxx11EP13Function_call>:
 8008d24:	b580      	push	{r7, lr}
 8008d26:	af00      	add	r7, sp, #0
 8008d28:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008d2c:	2000      	movs	r0, #0
 8008d2e:	f7ff fe15 	bl	800895c <_Z41__static_initialization_and_destruction_0ii>
 8008d32:	bd80      	pop	{r7, pc}

08008d34 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>:

#if _GLIBCXX_USE_C99_STDLIB
  // 21.4 Numeric Conversions [string.conversions].
  inline int
  stoi(const string& __str, size_t* __idx = 0, int __base = 10)
  { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
 8008d34:	b580      	push	{r7, lr}
 8008d36:	b086      	sub	sp, #24
 8008d38:	af02      	add	r7, sp, #8
 8008d3a:	60f8      	str	r0, [r7, #12]
 8008d3c:	60b9      	str	r1, [r7, #8]
 8008d3e:	607a      	str	r2, [r7, #4]
 8008d40:	68f8      	ldr	r0, [r7, #12]
 8008d42:	f017 fd1b 	bl	802077c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 8008d46:	4602      	mov	r2, r0
 8008d48:	687b      	ldr	r3, [r7, #4]
 8008d4a:	9300      	str	r3, [sp, #0]
 8008d4c:	68bb      	ldr	r3, [r7, #8]
 8008d4e:	4904      	ldr	r1, [pc, #16]	; (8008d60 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x2c>)
 8008d50:	4804      	ldr	r0, [pc, #16]	; (8008d64 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji+0x30>)
 8008d52:	f000 fd1b 	bl	800978c <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 8008d56:	4603      	mov	r3, r0
					__idx, __base); }
 8008d58:	4618      	mov	r0, r3
 8008d5a:	3710      	adds	r7, #16
 8008d5c:	46bd      	mov	sp, r7
 8008d5e:	bd80      	pop	{r7, pc}
 8008d60:	08024b04 	.word	0x08024b04
 8008d64:	08022921 	.word	0x08022921

08008d68 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>:
			     __idx, __base); }

  // NB: strtof vs strtod.
  inline float
  stof(const string& __str, size_t* __idx = 0)
  { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
 8008d68:	b580      	push	{r7, lr}
 8008d6a:	b082      	sub	sp, #8
 8008d6c:	af00      	add	r7, sp, #0
 8008d6e:	6078      	str	r0, [r7, #4]
 8008d70:	6039      	str	r1, [r7, #0]
 8008d72:	6878      	ldr	r0, [r7, #4]
 8008d74:	f017 fd02 	bl	802077c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 8008d78:	4602      	mov	r2, r0
 8008d7a:	683b      	ldr	r3, [r7, #0]
 8008d7c:	4905      	ldr	r1, [pc, #20]	; (8008d94 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x2c>)
 8008d7e:	4806      	ldr	r0, [pc, #24]	; (8008d98 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj+0x30>)
 8008d80:	f000 fd84 	bl	800988c <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>
 8008d84:	eef0 7a40 	vmov.f32	s15, s0
 8008d88:	eeb0 0a67 	vmov.f32	s0, s15
 8008d8c:	3708      	adds	r7, #8
 8008d8e:	46bd      	mov	sp, r7
 8008d90:	bd80      	pop	{r7, pc}
 8008d92:	bf00      	nop
 8008d94:	08024b0c 	.word	0x08024b0c
 8008d98:	08022765 	.word	0x08022765

08008d9c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      variant() = default;
 8008d9c:	b580      	push	{r7, lr}
 8008d9e:	b082      	sub	sp, #8
 8008da0:	af00      	add	r7, sp, #0
 8008da2:	6078      	str	r0, [r7, #4]
 8008da4:	687b      	ldr	r3, [r7, #4]
 8008da6:	4618      	mov	r0, r3
 8008da8:	f000 fe04 	bl	80099b4 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 8008dac:	687b      	ldr	r3, [r7, #4]
 8008dae:	4618      	mov	r0, r3
 8008db0:	3708      	adds	r7, #8
 8008db2:	46bd      	mov	sp, r7
 8008db4:	bd80      	pop	{r7, pc}

08008db6 <_ZN5TokenC1Ev>:
#include <string>
#include "token_types.h"

typedef std::variant<std::string, int, float, bool> token_value;

class Token
 8008db6:	b580      	push	{r7, lr}
 8008db8:	b082      	sub	sp, #8
 8008dba:	af00      	add	r7, sp, #0
 8008dbc:	6078      	str	r0, [r7, #4]
 8008dbe:	687b      	ldr	r3, [r7, #4]
 8008dc0:	3304      	adds	r3, #4
 8008dc2:	4618      	mov	r0, r3
 8008dc4:	f7ff ffea 	bl	8008d9c <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 8008dc8:	687b      	ldr	r3, [r7, #4]
 8008dca:	4618      	mov	r0, r3
 8008dcc:	3708      	adds	r7, #8
 8008dce:	46bd      	mov	sp, r7
 8008dd0:	bd80      	pop	{r7, pc}

08008dd2 <_ZN5TokenD1Ev>:
 8008dd2:	b580      	push	{r7, lr}
 8008dd4:	b082      	sub	sp, #8
 8008dd6:	af00      	add	r7, sp, #0
 8008dd8:	6078      	str	r0, [r7, #4]
 8008dda:	687b      	ldr	r3, [r7, #4]
 8008ddc:	3304      	adds	r3, #4
 8008dde:	4618      	mov	r0, r3
 8008de0:	f7fd ff5f 	bl	8006ca2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>
 8008de4:	687b      	ldr	r3, [r7, #4]
 8008de6:	4618      	mov	r0, r3
 8008de8:	3708      	adds	r7, #8
 8008dea:	46bd      	mov	sp, r7
 8008dec:	bd80      	pop	{r7, pc}

08008dee <_ZN5LexerC1Ev>:
#include <Lexer.h>

Lexer::Lexer()
 8008dee:	b590      	push	{r4, r7, lr}
 8008df0:	b083      	sub	sp, #12
 8008df2:	af00      	add	r7, sp, #0
 8008df4:	6078      	str	r0, [r7, #4]
 8008df6:	687b      	ldr	r3, [r7, #4]
 8008df8:	3304      	adds	r3, #4
 8008dfa:	4618      	mov	r0, r3
 8008dfc:	f7ff ffdb 	bl	8008db6 <_ZN5TokenC1Ev>
{
	code = new Source();
 8008e00:	2008      	movs	r0, #8
 8008e02:	f017 fa01 	bl	8020208 <_Znwj>
 8008e06:	4603      	mov	r3, r0
 8008e08:	461c      	mov	r4, r3
 8008e0a:	4620      	mov	r0, r4
 8008e0c:	f006 f848 	bl	800eea0 <_ZN6SourceC1Ev>
 8008e10:	687b      	ldr	r3, [r7, #4]
 8008e12:	62dc      	str	r4, [r3, #44]	; 0x2c
	// needs to start with whitespace in buffer
	char_buffer = ' ';
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	2220      	movs	r2, #32
 8008e18:	701a      	strb	r2, [r3, #0]
}
 8008e1a:	687b      	ldr	r3, [r7, #4]
 8008e1c:	4618      	mov	r0, r3
 8008e1e:	370c      	adds	r7, #12
 8008e20:	46bd      	mov	sp, r7
 8008e22:	bd90      	pop	{r4, r7, pc}

08008e24 <_ZN5LexerD1Ev>:

Lexer::~Lexer()
 8008e24:	b590      	push	{r4, r7, lr}
 8008e26:	b083      	sub	sp, #12
 8008e28:	af00      	add	r7, sp, #0
 8008e2a:	6078      	str	r0, [r7, #4]
{
	delete code;
 8008e2c:	687b      	ldr	r3, [r7, #4]
 8008e2e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008e30:	2c00      	cmp	r4, #0
 8008e32:	d006      	beq.n	8008e42 <_ZN5LexerD1Ev+0x1e>
 8008e34:	4620      	mov	r0, r4
 8008e36:	f006 f844 	bl	800eec2 <_ZN6SourceD1Ev>
 8008e3a:	2108      	movs	r1, #8
 8008e3c:	4620      	mov	r0, r4
 8008e3e:	f017 f9d2 	bl	80201e6 <_ZdlPvj>
Lexer::~Lexer()
 8008e42:	687b      	ldr	r3, [r7, #4]
 8008e44:	3304      	adds	r3, #4
 8008e46:	4618      	mov	r0, r3
 8008e48:	f7ff ffc3 	bl	8008dd2 <_ZN5TokenD1Ev>
}
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	4618      	mov	r0, r3
 8008e50:	370c      	adds	r7, #12
 8008e52:	46bd      	mov	sp, r7
 8008e54:	bd90      	pop	{r4, r7, pc}
	...

08008e58 <_ZN5Lexer17match_single_charEv>:

bool Lexer::match_single_char()
{
 8008e58:	b580      	push	{r7, lr}
 8008e5a:	b084      	sub	sp, #16
 8008e5c:	af00      	add	r7, sp, #0
 8008e5e:	6078      	str	r0, [r7, #4]
	auto result = token_chars.find(char_buffer);
 8008e60:	687b      	ldr	r3, [r7, #4]
 8008e62:	4619      	mov	r1, r3
 8008e64:	4816      	ldr	r0, [pc, #88]	; (8008ec0 <_ZN5Lexer17match_single_charEv+0x68>)
 8008e66:	f000 fdb2 	bl	80099ce <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 8008e6a:	4603      	mov	r3, r0
 8008e6c:	60bb      	str	r3, [r7, #8]
	if (result != token_chars.end())
 8008e6e:	4814      	ldr	r0, [pc, #80]	; (8008ec0 <_ZN5Lexer17match_single_charEv+0x68>)
 8008e70:	f000 fdbc 	bl	80099ec <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 8008e74:	4603      	mov	r3, r0
 8008e76:	60fb      	str	r3, [r7, #12]
 8008e78:	f107 020c 	add.w	r2, r7, #12
 8008e7c:	f107 0308 	add.w	r3, r7, #8
 8008e80:	4611      	mov	r1, r2
 8008e82:	4618      	mov	r0, r3
 8008e84:	f000 fdbf 	bl	8009a06 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 8008e88:	4603      	mov	r3, r0
 8008e8a:	2b00      	cmp	r3, #0
 8008e8c:	d013      	beq.n	8008eb6 <_ZN5Lexer17match_single_charEv+0x5e>
	{
		product.type = result->second;
 8008e8e:	f107 0308 	add.w	r3, r7, #8
 8008e92:	4618      	mov	r0, r3
 8008e94:	f000 fdcb 	bl	8009a2e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>
 8008e98:	4603      	mov	r3, r0
 8008e9a:	785a      	ldrb	r2, [r3, #1]
 8008e9c:	687b      	ldr	r3, [r7, #4]
 8008e9e:	711a      	strb	r2, [r3, #4]
		char_buffer = code->receive_code_char();
 8008ea0:	687b      	ldr	r3, [r7, #4]
 8008ea2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ea4:	4618      	mov	r0, r3
 8008ea6:	f006 f84d 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 8008eaa:	4603      	mov	r3, r0
 8008eac:	461a      	mov	r2, r3
 8008eae:	687b      	ldr	r3, [r7, #4]
 8008eb0:	701a      	strb	r2, [r3, #0]
		return true;
 8008eb2:	2301      	movs	r3, #1
 8008eb4:	e000      	b.n	8008eb8 <_ZN5Lexer17match_single_charEv+0x60>
	}
	return false;
 8008eb6:	2300      	movs	r3, #0
}
 8008eb8:	4618      	mov	r0, r3
 8008eba:	3710      	adds	r7, #16
 8008ebc:	46bd      	mov	sp, r7
 8008ebe:	bd80      	pop	{r7, pc}
 8008ec0:	20000344 	.word	0x20000344

08008ec4 <_ZN5Lexer17match_double_charEv>:

bool Lexer::match_double_char()
{
 8008ec4:	b580      	push	{r7, lr}
 8008ec6:	b084      	sub	sp, #16
 8008ec8:	af00      	add	r7, sp, #0
 8008eca:	6078      	str	r0, [r7, #4]
	auto result = token_double_chars.find(char_buffer);
 8008ecc:	687b      	ldr	r3, [r7, #4]
 8008ece:	4619      	mov	r1, r3
 8008ed0:	4822      	ldr	r0, [pc, #136]	; (8008f5c <_ZN5Lexer17match_double_charEv+0x98>)
 8008ed2:	f000 fdba 	bl	8009a4a <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>
 8008ed6:	4603      	mov	r3, r0
 8008ed8:	60bb      	str	r3, [r7, #8]
	if (result != token_double_chars.end())
 8008eda:	4820      	ldr	r0, [pc, #128]	; (8008f5c <_ZN5Lexer17match_double_charEv+0x98>)
 8008edc:	f000 fdc4 	bl	8009a68 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>
 8008ee0:	4603      	mov	r3, r0
 8008ee2:	60fb      	str	r3, [r7, #12]
 8008ee4:	f107 020c 	add.w	r2, r7, #12
 8008ee8:	f107 0308 	add.w	r3, r7, #8
 8008eec:	4611      	mov	r1, r2
 8008eee:	4618      	mov	r0, r3
 8008ef0:	f000 fdc7 	bl	8009a82 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 8008ef4:	4603      	mov	r3, r0
 8008ef6:	2b00      	cmp	r3, #0
 8008ef8:	d02a      	beq.n	8008f50 <_ZN5Lexer17match_double_charEv+0x8c>
	{
		char_buffer = code->receive_code_char();
 8008efa:	687b      	ldr	r3, [r7, #4]
 8008efc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008efe:	4618      	mov	r0, r3
 8008f00:	f006 f820 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 8008f04:	4603      	mov	r3, r0
 8008f06:	461a      	mov	r2, r3
 8008f08:	687b      	ldr	r3, [r7, #4]
 8008f0a:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '=')
 8008f0c:	687b      	ldr	r3, [r7, #4]
 8008f0e:	781b      	ldrb	r3, [r3, #0]
 8008f10:	2b3d      	cmp	r3, #61	; 0x3d
 8008f12:	d112      	bne.n	8008f3a <_ZN5Lexer17match_double_charEv+0x76>
		{
			product.type = result->second.double_char;
 8008f14:	f107 0308 	add.w	r3, r7, #8
 8008f18:	4618      	mov	r0, r3
 8008f1a:	f000 fdc6 	bl	8009aaa <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 8008f1e:	4603      	mov	r3, r0
 8008f20:	789a      	ldrb	r2, [r3, #2]
 8008f22:	687b      	ldr	r3, [r7, #4]
 8008f24:	711a      	strb	r2, [r3, #4]
			char_buffer = code->receive_code_char();
 8008f26:	687b      	ldr	r3, [r7, #4]
 8008f28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f2a:	4618      	mov	r0, r3
 8008f2c:	f006 f80a 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 8008f30:	4603      	mov	r3, r0
 8008f32:	461a      	mov	r2, r3
 8008f34:	687b      	ldr	r3, [r7, #4]
 8008f36:	701a      	strb	r2, [r3, #0]
 8008f38:	e008      	b.n	8008f4c <_ZN5Lexer17match_double_charEv+0x88>
		}
		else
		{
			product.type = result->second.single_char;
 8008f3a:	f107 0308 	add.w	r3, r7, #8
 8008f3e:	4618      	mov	r0, r3
 8008f40:	f000 fdb3 	bl	8009aaa <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>
 8008f44:	4603      	mov	r3, r0
 8008f46:	785a      	ldrb	r2, [r3, #1]
 8008f48:	687b      	ldr	r3, [r7, #4]
 8008f4a:	711a      	strb	r2, [r3, #4]
		}
		return true;
 8008f4c:	2301      	movs	r3, #1
 8008f4e:	e000      	b.n	8008f52 <_ZN5Lexer17match_double_charEv+0x8e>
	}
	return false;
 8008f50:	2300      	movs	r3, #0
}
 8008f52:	4618      	mov	r0, r3
 8008f54:	3710      	adds	r7, #16
 8008f56:	46bd      	mov	sp, r7
 8008f58:	bd80      	pop	{r7, pc}
 8008f5a:	bf00      	nop
 8008f5c:	20000374 	.word	0x20000374

08008f60 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_word(std::string &word)
{
 8008f60:	b580      	push	{r7, lr}
 8008f62:	b082      	sub	sp, #8
 8008f64:	af00      	add	r7, sp, #0
 8008f66:	6078      	str	r0, [r7, #4]
 8008f68:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	781b      	ldrb	r3, [r3, #0]
 8008f6e:	4619      	mov	r1, r3
 8008f70:	6838      	ldr	r0, [r7, #0]
 8008f72:	f017 fb8f 	bl	8020694 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = code->receive_code_char();
 8008f76:	687b      	ldr	r3, [r7, #4]
 8008f78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f7a:	4618      	mov	r0, r3
 8008f7c:	f005 ffe2 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 8008f80:	4603      	mov	r3, r0
 8008f82:	461a      	mov	r2, r3
 8008f84:	687b      	ldr	r3, [r7, #4]
 8008f86:	701a      	strb	r2, [r3, #0]
	} while (isalnum(char_buffer) || char_buffer == '_');
 8008f88:	687b      	ldr	r3, [r7, #4]
 8008f8a:	781b      	ldrb	r3, [r3, #0]
 8008f8c:	4618      	mov	r0, r3
 8008f8e:	f018 fc45 	bl	802181c <isalnum>
 8008f92:	4603      	mov	r3, r0
 8008f94:	2b00      	cmp	r3, #0
 8008f96:	d1e8      	bne.n	8008f6a <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
 8008f98:	687b      	ldr	r3, [r7, #4]
 8008f9a:	781b      	ldrb	r3, [r3, #0]
 8008f9c:	2b5f      	cmp	r3, #95	; 0x5f
 8008f9e:	d100      	bne.n	8008fa2 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x42>
	do
 8008fa0:	e7e3      	b.n	8008f6a <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 8008fa2:	bf00      	nop
 8008fa4:	3708      	adds	r7, #8
 8008fa6:	46bd      	mov	sp, r7
 8008fa8:	bd80      	pop	{r7, pc}
	...

08008fac <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_keyword_or_id(std::string &word)
{
 8008fac:	b580      	push	{r7, lr}
 8008fae:	b08a      	sub	sp, #40	; 0x28
 8008fb0:	af00      	add	r7, sp, #0
 8008fb2:	6078      	str	r0, [r7, #4]
 8008fb4:	6039      	str	r1, [r7, #0]
	auto result = token_strings.find(word);
 8008fb6:	6839      	ldr	r1, [r7, #0]
 8008fb8:	481c      	ldr	r0, [pc, #112]	; (800902c <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 8008fba:	f000 fd84 	bl	8009ac6 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>
 8008fbe:	4603      	mov	r3, r0
 8008fc0:	60bb      	str	r3, [r7, #8]
	if (result != token_strings.end())
 8008fc2:	481a      	ldr	r0, [pc, #104]	; (800902c <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80>)
 8008fc4:	f000 fd8e 	bl	8009ae4 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 8008fc8:	4603      	mov	r3, r0
 8008fca:	60fb      	str	r3, [r7, #12]
 8008fcc:	f107 020c 	add.w	r2, r7, #12
 8008fd0:	f107 0308 	add.w	r3, r7, #8
 8008fd4:	4611      	mov	r1, r2
 8008fd6:	4618      	mov	r0, r3
 8008fd8:	f000 fd91 	bl	8009afe <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 8008fdc:	4603      	mov	r3, r0
 8008fde:	2b00      	cmp	r3, #0
 8008fe0:	d009      	beq.n	8008ff6 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a>
	{
		product.type = result->second;
 8008fe2:	f107 0308 	add.w	r3, r7, #8
 8008fe6:	4618      	mov	r0, r3
 8008fe8:	f000 fd9d 	bl	8009b26 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>
 8008fec:	4603      	mov	r3, r0
 8008fee:	7e1a      	ldrb	r2, [r3, #24]
 8008ff0:	687b      	ldr	r3, [r7, #4]
 8008ff2:	711a      	strb	r2, [r3, #4]
	else
	{
		product.type = TOKEN_IDENTIFIER;
		product.value = std::string(word);
	}
}
 8008ff4:	e015      	b.n	8009022 <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x76>
		product.type = TOKEN_IDENTIFIER;
 8008ff6:	687b      	ldr	r3, [r7, #4]
 8008ff8:	2202      	movs	r2, #2
 8008ffa:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 8008ffc:	f107 0310 	add.w	r3, r7, #16
 8009000:	6839      	ldr	r1, [r7, #0]
 8009002:	4618      	mov	r0, r3
 8009004:	f017 fc04 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8009008:	687b      	ldr	r3, [r7, #4]
 800900a:	3308      	adds	r3, #8
 800900c:	f107 0210 	add.w	r2, r7, #16
 8009010:	4611      	mov	r1, r2
 8009012:	4618      	mov	r0, r3
 8009014:	f000 fd95 	bl	8009b42 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 8009018:	f107 0310 	add.w	r3, r7, #16
 800901c:	4618      	mov	r0, r3
 800901e:	f017 faca 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8009022:	bf00      	nop
 8009024:	3728      	adds	r7, #40	; 0x28
 8009026:	46bd      	mov	sp, r7
 8009028:	bd80      	pop	{r7, pc}
 800902a:	bf00      	nop
 800902c:	2000035c 	.word	0x2000035c

08009030 <_ZN5Lexer19build_keyword_or_idEv>:

bool Lexer::build_keyword_or_id()
{
 8009030:	b590      	push	{r4, r7, lr}
 8009032:	b089      	sub	sp, #36	; 0x24
 8009034:	af00      	add	r7, sp, #0
 8009036:	6078      	str	r0, [r7, #4]
	if (isalpha(char_buffer))
 8009038:	687b      	ldr	r3, [r7, #4]
 800903a:	781b      	ldrb	r3, [r3, #0]
 800903c:	4618      	mov	r0, r3
 800903e:	f018 fbf5 	bl	802182c <isalpha>
 8009042:	4603      	mov	r3, r0
 8009044:	2b00      	cmp	r3, #0
 8009046:	d017      	beq.n	8009078 <_ZN5Lexer19build_keyword_or_idEv+0x48>
	{
		std::string word;
 8009048:	f107 0308 	add.w	r3, r7, #8
 800904c:	4618      	mov	r0, r3
 800904e:	f017 fa91 	bl	8020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_word(word);
 8009052:	f107 0308 	add.w	r3, r7, #8
 8009056:	4619      	mov	r1, r3
 8009058:	6878      	ldr	r0, [r7, #4]
 800905a:	f7ff ff81 	bl	8008f60 <_ZN5Lexer10build_wordERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_keyword_or_id(word);
 800905e:	f107 0308 	add.w	r3, r7, #8
 8009062:	4619      	mov	r1, r3
 8009064:	6878      	ldr	r0, [r7, #4]
 8009066:	f7ff ffa1 	bl	8008fac <_ZN5Lexer19match_keyword_or_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800906a:	2401      	movs	r4, #1
		std::string word;
 800906c:	f107 0308 	add.w	r3, r7, #8
 8009070:	4618      	mov	r0, r3
 8009072:	f017 faa0 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8009076:	e000      	b.n	800907a <_ZN5Lexer19build_keyword_or_idEv+0x4a>
	}
	return false;
 8009078:	2400      	movs	r4, #0
 800907a:	4623      	mov	r3, r4
}
 800907c:	4618      	mov	r0, r3
 800907e:	3724      	adds	r7, #36	; 0x24
 8009080:	46bd      	mov	sp, r7
 8009082:	bd90      	pop	{r4, r7, pc}

08009084 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_int(std::string &word)
{
 8009084:	b580      	push	{r7, lr}
 8009086:	b082      	sub	sp, #8
 8009088:	af00      	add	r7, sp, #0
 800908a:	6078      	str	r0, [r7, #4]
 800908c:	6039      	str	r1, [r7, #0]
	do
	{
		word.push_back(char_buffer);
 800908e:	687b      	ldr	r3, [r7, #4]
 8009090:	781b      	ldrb	r3, [r3, #0]
 8009092:	4619      	mov	r1, r3
 8009094:	6838      	ldr	r0, [r7, #0]
 8009096:	f017 fafd 	bl	8020694 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
		char_buffer = code->receive_code_char();
 800909a:	687b      	ldr	r3, [r7, #4]
 800909c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800909e:	4618      	mov	r0, r3
 80090a0:	f005 ff50 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 80090a4:	4603      	mov	r3, r0
 80090a6:	461a      	mov	r2, r3
 80090a8:	687b      	ldr	r3, [r7, #4]
 80090aa:	701a      	strb	r2, [r3, #0]
	} while (isdigit(char_buffer));
 80090ac:	687b      	ldr	r3, [r7, #4]
 80090ae:	781b      	ldrb	r3, [r3, #0]
 80090b0:	3b30      	subs	r3, #48	; 0x30
 80090b2:	2b09      	cmp	r3, #9
 80090b4:	bf94      	ite	ls
 80090b6:	2301      	movls	r3, #1
 80090b8:	2300      	movhi	r3, #0
 80090ba:	b2db      	uxtb	r3, r3
 80090bc:	2b00      	cmp	r3, #0
 80090be:	d000      	beq.n	80090c2 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3e>
	do
 80090c0:	e7e5      	b.n	800908e <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa>
}
 80090c2:	bf00      	nop
 80090c4:	3708      	adds	r7, #8
 80090c6:	46bd      	mov	sp, r7
 80090c8:	bd80      	pop	{r7, pc}

080090ca <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_int_or_float(std::string &word)
{
 80090ca:	b580      	push	{r7, lr}
 80090cc:	b084      	sub	sp, #16
 80090ce:	af00      	add	r7, sp, #0
 80090d0:	6078      	str	r0, [r7, #4]
 80090d2:	6039      	str	r1, [r7, #0]
	if (char_buffer != '.')
 80090d4:	687b      	ldr	r3, [r7, #4]
 80090d6:	781b      	ldrb	r3, [r3, #0]
 80090d8:	2b2e      	cmp	r3, #46	; 0x2e
 80090da:	d012      	beq.n	8009102 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	{
		product.type = TOKEN_INT;
 80090dc:	687b      	ldr	r3, [r7, #4]
 80090de:	2203      	movs	r2, #3
 80090e0:	711a      	strb	r2, [r3, #4]
		product.value = std::stoi(word);
 80090e2:	220a      	movs	r2, #10
 80090e4:	2100      	movs	r1, #0
 80090e6:	6838      	ldr	r0, [r7, #0]
 80090e8:	f7ff fe24 	bl	8008d34 <_ZNSt7__cxx114stoiERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPji>
 80090ec:	4603      	mov	r3, r0
 80090ee:	60bb      	str	r3, [r7, #8]
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	3308      	adds	r3, #8
 80090f4:	f107 0208 	add.w	r2, r7, #8
 80090f8:	4611      	mov	r1, r2
 80090fa:	4618      	mov	r0, r3
 80090fc:	f000 fd4d 	bl	8009b9a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
	{
		build_int(word);
		product.type = TOKEN_FLOAT;
		product.value = std::stof(word);
	}
}
 8009100:	e016      	b.n	8009130 <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x66>
		build_int(word);
 8009102:	6839      	ldr	r1, [r7, #0]
 8009104:	6878      	ldr	r0, [r7, #4]
 8009106:	f7ff ffbd 	bl	8009084 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_FLOAT;
 800910a:	687b      	ldr	r3, [r7, #4]
 800910c:	2204      	movs	r2, #4
 800910e:	711a      	strb	r2, [r3, #4]
		product.value = std::stof(word);
 8009110:	2100      	movs	r1, #0
 8009112:	6838      	ldr	r0, [r7, #0]
 8009114:	f7ff fe28 	bl	8008d68 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 8009118:	eef0 7a40 	vmov.f32	s15, s0
 800911c:	edc7 7a03 	vstr	s15, [r7, #12]
 8009120:	687b      	ldr	r3, [r7, #4]
 8009122:	3308      	adds	r3, #8
 8009124:	f107 020c 	add.w	r2, r7, #12
 8009128:	4611      	mov	r1, r2
 800912a:	4618      	mov	r0, r3
 800912c:	f000 fd5f 	bl	8009bee <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
}
 8009130:	bf00      	nop
 8009132:	3710      	adds	r7, #16
 8009134:	46bd      	mov	sp, r7
 8009136:	bd80      	pop	{r7, pc}

08009138 <_ZN5Lexer18build_int_or_floatEv>:

bool Lexer::build_int_or_float()
{
 8009138:	b590      	push	{r4, r7, lr}
 800913a:	b089      	sub	sp, #36	; 0x24
 800913c:	af00      	add	r7, sp, #0
 800913e:	6078      	str	r0, [r7, #4]
	if (isdigit(char_buffer) && char_buffer != '0')
 8009140:	687b      	ldr	r3, [r7, #4]
 8009142:	781b      	ldrb	r3, [r3, #0]
 8009144:	3b30      	subs	r3, #48	; 0x30
 8009146:	2b09      	cmp	r3, #9
 8009148:	bf94      	ite	ls
 800914a:	2301      	movls	r3, #1
 800914c:	2300      	movhi	r3, #0
 800914e:	b2db      	uxtb	r3, r3
 8009150:	2b00      	cmp	r3, #0
 8009152:	d01b      	beq.n	800918c <_ZN5Lexer18build_int_or_floatEv+0x54>
 8009154:	687b      	ldr	r3, [r7, #4]
 8009156:	781b      	ldrb	r3, [r3, #0]
 8009158:	2b30      	cmp	r3, #48	; 0x30
 800915a:	d017      	beq.n	800918c <_ZN5Lexer18build_int_or_floatEv+0x54>
	{
		std::string word;
 800915c:	f107 0308 	add.w	r3, r7, #8
 8009160:	4618      	mov	r0, r3
 8009162:	f017 fa07 	bl	8020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_int(word);
 8009166:	f107 0308 	add.w	r3, r7, #8
 800916a:	4619      	mov	r1, r3
 800916c:	6878      	ldr	r0, [r7, #4]
 800916e:	f7ff ff89 	bl	8009084 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		match_int_or_float(word);
 8009172:	f107 0308 	add.w	r3, r7, #8
 8009176:	4619      	mov	r1, r3
 8009178:	6878      	ldr	r0, [r7, #4]
 800917a:	f7ff ffa6 	bl	80090ca <_ZN5Lexer18match_int_or_floatERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		return true;
 800917e:	2401      	movs	r4, #1
		std::string word;
 8009180:	f107 0308 	add.w	r3, r7, #8
 8009184:	4618      	mov	r0, r3
 8009186:	f017 fa16 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800918a:	e000      	b.n	800918e <_ZN5Lexer18build_int_or_floatEv+0x56>
	}
	return false;
 800918c:	2400      	movs	r4, #0
 800918e:	4623      	mov	r3, r4
}
 8009190:	4618      	mov	r0, r3
 8009192:	3724      	adds	r7, #36	; 0x24
 8009194:	46bd      	mov	sp, r7
 8009196:	bd90      	pop	{r4, r7, pc}

08009198 <_ZN5Lexer20build_0_int_or_floatEv>:

bool Lexer::build_0_int_or_float()
{
 8009198:	b580      	push	{r7, lr}
 800919a:	b08a      	sub	sp, #40	; 0x28
 800919c:	af00      	add	r7, sp, #0
 800919e:	6078      	str	r0, [r7, #4]
	if (char_buffer == '0')
 80091a0:	687b      	ldr	r3, [r7, #4]
 80091a2:	781b      	ldrb	r3, [r3, #0]
 80091a4:	2b30      	cmp	r3, #48	; 0x30
 80091a6:	d141      	bne.n	800922c <_ZN5Lexer20build_0_int_or_floatEv+0x94>
	{
		char_buffer = code->receive_code_char();
 80091a8:	687b      	ldr	r3, [r7, #4]
 80091aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80091ac:	4618      	mov	r0, r3
 80091ae:	f005 fec9 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 80091b2:	4603      	mov	r3, r0
 80091b4:	461a      	mov	r2, r3
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	701a      	strb	r2, [r3, #0]
		if (char_buffer == '.')
 80091ba:	687b      	ldr	r3, [r7, #4]
 80091bc:	781b      	ldrb	r3, [r3, #0]
 80091be:	2b2e      	cmp	r3, #46	; 0x2e
 80091c0:	d125      	bne.n	800920e <_ZN5Lexer20build_0_int_or_floatEv+0x76>
		{
			std::string word;
 80091c2:	f107 0308 	add.w	r3, r7, #8
 80091c6:	4618      	mov	r0, r3
 80091c8:	f017 f9d4 	bl	8020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
			build_int(word);
 80091cc:	f107 0308 	add.w	r3, r7, #8
 80091d0:	4619      	mov	r1, r3
 80091d2:	6878      	ldr	r0, [r7, #4]
 80091d4:	f7ff ff56 	bl	8009084 <_ZN5Lexer9build_intERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
			product.type = TOKEN_FLOAT;
 80091d8:	687b      	ldr	r3, [r7, #4]
 80091da:	2204      	movs	r2, #4
 80091dc:	711a      	strb	r2, [r3, #4]
			product.value = std::stof(word);
 80091de:	f107 0308 	add.w	r3, r7, #8
 80091e2:	2100      	movs	r1, #0
 80091e4:	4618      	mov	r0, r3
 80091e6:	f7ff fdbf 	bl	8008d68 <_ZNSt7__cxx114stofERKNS_12basic_stringIcSt11char_traitsIcESaIcEEEPj>
 80091ea:	eef0 7a40 	vmov.f32	s15, s0
 80091ee:	edc7 7a08 	vstr	s15, [r7, #32]
 80091f2:	687b      	ldr	r3, [r7, #4]
 80091f4:	3308      	adds	r3, #8
 80091f6:	f107 0220 	add.w	r2, r7, #32
 80091fa:	4611      	mov	r1, r2
 80091fc:	4618      	mov	r0, r3
 80091fe:	f000 fcf6 	bl	8009bee <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
			std::string word;
 8009202:	f107 0308 	add.w	r3, r7, #8
 8009206:	4618      	mov	r0, r3
 8009208:	f017 f9d5 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800920c:	e00c      	b.n	8009228 <_ZN5Lexer20build_0_int_or_floatEv+0x90>
		}
		else
		{
			product.type = TOKEN_INT;
 800920e:	687b      	ldr	r3, [r7, #4]
 8009210:	2203      	movs	r2, #3
 8009212:	711a      	strb	r2, [r3, #4]
			product.value = 0;
 8009214:	2300      	movs	r3, #0
 8009216:	627b      	str	r3, [r7, #36]	; 0x24
 8009218:	687b      	ldr	r3, [r7, #4]
 800921a:	3308      	adds	r3, #8
 800921c:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8009220:	4611      	mov	r1, r2
 8009222:	4618      	mov	r0, r3
 8009224:	f000 fcb9 	bl	8009b9a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
		}
		return true;
 8009228:	2301      	movs	r3, #1
 800922a:	e000      	b.n	800922e <_ZN5Lexer20build_0_int_or_floatEv+0x96>
	}
	return false;
 800922c:	2300      	movs	r3, #0
}
 800922e:	4618      	mov	r0, r3
 8009230:	3728      	adds	r7, #40	; 0x28
 8009232:	46bd      	mov	sp, r7
 8009234:	bd80      	pop	{r7, pc}
	...

08009238 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::match_escape_char(std::string &word)
{
 8009238:	b580      	push	{r7, lr}
 800923a:	b084      	sub	sp, #16
 800923c:	af00      	add	r7, sp, #0
 800923e:	6078      	str	r0, [r7, #4]
 8009240:	6039      	str	r1, [r7, #0]
	char true_char;
	switch (char_buffer)
 8009242:	687b      	ldr	r3, [r7, #4]
 8009244:	781b      	ldrb	r3, [r3, #0]
 8009246:	2b76      	cmp	r3, #118	; 0x76
 8009248:	dc66      	bgt.n	8009318 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800924a:	2b5c      	cmp	r3, #92	; 0x5c
 800924c:	da04      	bge.n	8009258 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x20>
 800924e:	2b22      	cmp	r3, #34	; 0x22
 8009250:	d047      	beq.n	80092e2 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xaa>
 8009252:	2b27      	cmp	r3, #39	; 0x27
 8009254:	d03f      	beq.n	80092d6 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
		break;
	case 'v':
		true_char = '\v';
		break;
	default:
		return;
 8009256:	e05f      	b.n	8009318 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 8009258:	3b5c      	subs	r3, #92	; 0x5c
 800925a:	2b1a      	cmp	r3, #26
 800925c:	d85c      	bhi.n	8009318 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe0>
 800925e:	a201      	add	r2, pc, #4	; (adr r2, 8009264 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>)
 8009260:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009264:	080092dd 	.word	0x080092dd
 8009268:	08009319 	.word	0x08009319
 800926c:	08009319 	.word	0x08009319
 8009270:	08009319 	.word	0x08009319
 8009274:	08009319 	.word	0x08009319
 8009278:	08009319 	.word	0x08009319
 800927c:	080092f5 	.word	0x080092f5
 8009280:	08009319 	.word	0x08009319
 8009284:	08009319 	.word	0x08009319
 8009288:	08009319 	.word	0x08009319
 800928c:	080092fb 	.word	0x080092fb
 8009290:	08009319 	.word	0x08009319
 8009294:	08009319 	.word	0x08009319
 8009298:	08009319 	.word	0x08009319
 800929c:	08009319 	.word	0x08009319
 80092a0:	08009319 	.word	0x08009319
 80092a4:	08009319 	.word	0x08009319
 80092a8:	08009319 	.word	0x08009319
 80092ac:	080092d1 	.word	0x080092d1
 80092b0:	08009319 	.word	0x08009319
 80092b4:	08009319 	.word	0x08009319
 80092b8:	08009319 	.word	0x08009319
 80092bc:	080092e9 	.word	0x080092e9
 80092c0:	08009319 	.word	0x08009319
 80092c4:	080092ef 	.word	0x080092ef
 80092c8:	08009319 	.word	0x08009319
 80092cc:	08009301 	.word	0x08009301
		true_char = '\n';
 80092d0:	230a      	movs	r3, #10
 80092d2:	73fb      	strb	r3, [r7, #15]
		break;
 80092d4:	e017      	b.n	8009306 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\'';
 80092d6:	2327      	movs	r3, #39	; 0x27
 80092d8:	73fb      	strb	r3, [r7, #15]
		break;
 80092da:	e014      	b.n	8009306 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\\';
 80092dc:	235c      	movs	r3, #92	; 0x5c
 80092de:	73fb      	strb	r3, [r7, #15]
		break;
 80092e0:	e011      	b.n	8009306 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\"';
 80092e2:	2322      	movs	r3, #34	; 0x22
 80092e4:	73fb      	strb	r3, [r7, #15]
		break;
 80092e6:	e00e      	b.n	8009306 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\r';
 80092e8:	230d      	movs	r3, #13
 80092ea:	73fb      	strb	r3, [r7, #15]
		break;
 80092ec:	e00b      	b.n	8009306 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\t';
 80092ee:	2309      	movs	r3, #9
 80092f0:	73fb      	strb	r3, [r7, #15]
		break;
 80092f2:	e008      	b.n	8009306 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\b';
 80092f4:	2308      	movs	r3, #8
 80092f6:	73fb      	strb	r3, [r7, #15]
		break;
 80092f8:	e005      	b.n	8009306 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\f';
 80092fa:	230c      	movs	r3, #12
 80092fc:	73fb      	strb	r3, [r7, #15]
		break;
 80092fe:	e002      	b.n	8009306 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xce>
		true_char = '\v';
 8009300:	230b      	movs	r3, #11
 8009302:	73fb      	strb	r3, [r7, #15]
		break;
 8009304:	bf00      	nop
	}
	word.pop_back();
 8009306:	6838      	ldr	r0, [r7, #0]
 8009308:	f017 f9e3 	bl	80206d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>
	word.push_back(true_char);
 800930c:	7bfb      	ldrb	r3, [r7, #15]
 800930e:	4619      	mov	r1, r3
 8009310:	6838      	ldr	r0, [r7, #0]
 8009312:	f017 f9bf 	bl	8020694 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
 8009316:	e000      	b.n	800931a <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe2>
		return;
 8009318:	bf00      	nop
}
 800931a:	3710      	adds	r7, #16
 800931c:	46bd      	mov	sp, r7
 800931e:	bd80      	pop	{r7, pc}

08009320 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::add_string_char(std::string &word)
{
 8009320:	b580      	push	{r7, lr}
 8009322:	b082      	sub	sp, #8
 8009324:	af00      	add	r7, sp, #0
 8009326:	6078      	str	r0, [r7, #4]
 8009328:	6039      	str	r1, [r7, #0]
	if (word.back() == '\\')
 800932a:	6838      	ldr	r0, [r7, #0]
 800932c:	f017 f9ad 	bl	802068a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 8009330:	4603      	mov	r3, r0
 8009332:	781b      	ldrb	r3, [r3, #0]
 8009334:	2b5c      	cmp	r3, #92	; 0x5c
 8009336:	bf0c      	ite	eq
 8009338:	2301      	moveq	r3, #1
 800933a:	2300      	movne	r3, #0
 800933c:	b2db      	uxtb	r3, r3
 800933e:	2b00      	cmp	r3, #0
 8009340:	d004      	beq.n	800934c <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c>
	{
		match_escape_char(word);
 8009342:	6839      	ldr	r1, [r7, #0]
 8009344:	6878      	ldr	r0, [r7, #4]
 8009346:	f7ff ff77 	bl	8009238 <_ZN5Lexer17match_escape_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800934a:	e005      	b.n	8009358 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
	}
	else
	{
		word.push_back(char_buffer);
 800934c:	687b      	ldr	r3, [r7, #4]
 800934e:	781b      	ldrb	r3, [r3, #0]
 8009350:	4619      	mov	r1, r3
 8009352:	6838      	ldr	r0, [r7, #0]
 8009354:	f017 f99e 	bl	8020694 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>
	}
	char_buffer = code->receive_code_char();
 8009358:	687b      	ldr	r3, [r7, #4]
 800935a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800935c:	4618      	mov	r0, r3
 800935e:	f005 fdf1 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 8009362:	4603      	mov	r3, r0
 8009364:	461a      	mov	r2, r3
 8009366:	687b      	ldr	r3, [r7, #4]
 8009368:	701a      	strb	r2, [r3, #0]
}
 800936a:	bf00      	nop
 800936c:	3708      	adds	r7, #8
 800936e:	46bd      	mov	sp, r7
 8009370:	bd80      	pop	{r7, pc}

08009372 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Lexer::build_string_content(std::string &word)
{
 8009372:	b580      	push	{r7, lr}
 8009374:	b082      	sub	sp, #8
 8009376:	af00      	add	r7, sp, #0
 8009378:	6078      	str	r0, [r7, #4]
 800937a:	6039      	str	r1, [r7, #0]
	char_buffer = code->receive_code_char();
 800937c:	687b      	ldr	r3, [r7, #4]
 800937e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009380:	4618      	mov	r0, r3
 8009382:	f005 fddf 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 8009386:	4603      	mov	r3, r0
 8009388:	461a      	mov	r2, r3
 800938a:	687b      	ldr	r3, [r7, #4]
 800938c:	701a      	strb	r2, [r3, #0]
	while (!(char_buffer == '\"' && word.back() != '\\'))
 800938e:	687b      	ldr	r3, [r7, #4]
 8009390:	781b      	ldrb	r3, [r3, #0]
 8009392:	2b22      	cmp	r3, #34	; 0x22
 8009394:	d106      	bne.n	80093a4 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x32>
 8009396:	6838      	ldr	r0, [r7, #0]
 8009398:	f017 f977 	bl	802068a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>
 800939c:	4603      	mov	r3, r0
 800939e:	781b      	ldrb	r3, [r3, #0]
 80093a0:	2b5c      	cmp	r3, #92	; 0x5c
 80093a2:	d101      	bne.n	80093a8 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x36>
 80093a4:	2301      	movs	r3, #1
 80093a6:	e000      	b.n	80093aa <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
 80093a8:	2300      	movs	r3, #0
 80093aa:	2b00      	cmp	r3, #0
 80093ac:	d004      	beq.n	80093b8 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x46>
	{
		add_string_char(word);
 80093ae:	6839      	ldr	r1, [r7, #0]
 80093b0:	6878      	ldr	r0, [r7, #4]
 80093b2:	f7ff ffb5 	bl	8009320 <_ZN5Lexer15add_string_charERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
	while (!(char_buffer == '\"' && word.back() != '\\'))
 80093b6:	e7ea      	b.n	800938e <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c>
	}
	char_buffer = code->receive_code_char();
 80093b8:	687b      	ldr	r3, [r7, #4]
 80093ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80093bc:	4618      	mov	r0, r3
 80093be:	f005 fdc1 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 80093c2:	4603      	mov	r3, r0
 80093c4:	461a      	mov	r2, r3
 80093c6:	687b      	ldr	r3, [r7, #4]
 80093c8:	701a      	strb	r2, [r3, #0]
}
 80093ca:	bf00      	nop
 80093cc:	3708      	adds	r7, #8
 80093ce:	46bd      	mov	sp, r7
 80093d0:	bd80      	pop	{r7, pc}

080093d2 <_ZN5Lexer12build_stringEv>:

bool Lexer::build_string()
{
 80093d2:	b590      	push	{r4, r7, lr}
 80093d4:	b08f      	sub	sp, #60	; 0x3c
 80093d6:	af00      	add	r7, sp, #0
 80093d8:	6078      	str	r0, [r7, #4]
	if (char_buffer == '\"')
 80093da:	687b      	ldr	r3, [r7, #4]
 80093dc:	781b      	ldrb	r3, [r3, #0]
 80093de:	2b22      	cmp	r3, #34	; 0x22
 80093e0:	d129      	bne.n	8009436 <_ZN5Lexer12build_stringEv+0x64>
	{
		std::string word;
 80093e2:	f107 0308 	add.w	r3, r7, #8
 80093e6:	4618      	mov	r0, r3
 80093e8:	f017 f8c4 	bl	8020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
		build_string_content(word);
 80093ec:	f107 0308 	add.w	r3, r7, #8
 80093f0:	4619      	mov	r1, r3
 80093f2:	6878      	ldr	r0, [r7, #4]
 80093f4:	f7ff ffbd 	bl	8009372 <_ZN5Lexer20build_string_contentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
		product.type = TOKEN_STRING;
 80093f8:	687b      	ldr	r3, [r7, #4]
 80093fa:	220f      	movs	r2, #15
 80093fc:	711a      	strb	r2, [r3, #4]
		product.value = std::string(word);
 80093fe:	f107 0208 	add.w	r2, r7, #8
 8009402:	f107 0320 	add.w	r3, r7, #32
 8009406:	4611      	mov	r1, r2
 8009408:	4618      	mov	r0, r3
 800940a:	f017 fa01 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800940e:	687b      	ldr	r3, [r7, #4]
 8009410:	3308      	adds	r3, #8
 8009412:	f107 0220 	add.w	r2, r7, #32
 8009416:	4611      	mov	r1, r2
 8009418:	4618      	mov	r0, r3
 800941a:	f000 fb92 	bl	8009b42 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>
 800941e:	f107 0320 	add.w	r3, r7, #32
 8009422:	4618      	mov	r0, r3
 8009424:	f017 f8c7 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		return true;
 8009428:	2401      	movs	r4, #1
		std::string word;
 800942a:	f107 0308 	add.w	r3, r7, #8
 800942e:	4618      	mov	r0, r3
 8009430:	f017 f8c1 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8009434:	e000      	b.n	8009438 <_ZN5Lexer12build_stringEv+0x66>
	}
	return false;
 8009436:	2400      	movs	r4, #0
 8009438:	4623      	mov	r3, r4
}
 800943a:	4618      	mov	r0, r3
 800943c:	373c      	adds	r7, #60	; 0x3c
 800943e:	46bd      	mov	sp, r7
 8009440:	bd90      	pop	{r4, r7, pc}

08009442 <_ZN5Lexer17build_token_valueEv>:

bool Lexer::build_token_value()
{
 8009442:	b580      	push	{r7, lr}
 8009444:	b082      	sub	sp, #8
 8009446:	af00      	add	r7, sp, #0
 8009448:	6078      	str	r0, [r7, #4]
	return match_single_char() || match_double_char() || build_keyword_or_id()
 800944a:	6878      	ldr	r0, [r7, #4]
 800944c:	f7ff fd04 	bl	8008e58 <_ZN5Lexer17match_single_charEv>
 8009450:	4603      	mov	r3, r0
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 8009452:	2b00      	cmp	r3, #0
 8009454:	d11d      	bne.n	8009492 <_ZN5Lexer17build_token_valueEv+0x50>
	return match_single_char() || match_double_char() || build_keyword_or_id()
 8009456:	6878      	ldr	r0, [r7, #4]
 8009458:	f7ff fd34 	bl	8008ec4 <_ZN5Lexer17match_double_charEv>
 800945c:	4603      	mov	r3, r0
 800945e:	2b00      	cmp	r3, #0
 8009460:	d117      	bne.n	8009492 <_ZN5Lexer17build_token_valueEv+0x50>
 8009462:	6878      	ldr	r0, [r7, #4]
 8009464:	f7ff fde4 	bl	8009030 <_ZN5Lexer19build_keyword_or_idEv>
 8009468:	4603      	mov	r3, r0
 800946a:	2b00      	cmp	r3, #0
 800946c:	d111      	bne.n	8009492 <_ZN5Lexer17build_token_valueEv+0x50>
			|| build_int_or_float() || build_0_int_or_float() || build_string();
 800946e:	6878      	ldr	r0, [r7, #4]
 8009470:	f7ff fe62 	bl	8009138 <_ZN5Lexer18build_int_or_floatEv>
 8009474:	4603      	mov	r3, r0
 8009476:	2b00      	cmp	r3, #0
 8009478:	d10b      	bne.n	8009492 <_ZN5Lexer17build_token_valueEv+0x50>
 800947a:	6878      	ldr	r0, [r7, #4]
 800947c:	f7ff fe8c 	bl	8009198 <_ZN5Lexer20build_0_int_or_floatEv>
 8009480:	4603      	mov	r3, r0
 8009482:	2b00      	cmp	r3, #0
 8009484:	d105      	bne.n	8009492 <_ZN5Lexer17build_token_valueEv+0x50>
 8009486:	6878      	ldr	r0, [r7, #4]
 8009488:	f7ff ffa3 	bl	80093d2 <_ZN5Lexer12build_stringEv>
 800948c:	4603      	mov	r3, r0
 800948e:	2b00      	cmp	r3, #0
 8009490:	d001      	beq.n	8009496 <_ZN5Lexer17build_token_valueEv+0x54>
 8009492:	2301      	movs	r3, #1
 8009494:	e000      	b.n	8009498 <_ZN5Lexer17build_token_valueEv+0x56>
 8009496:	2300      	movs	r3, #0
}
 8009498:	4618      	mov	r0, r3
 800949a:	3708      	adds	r7, #8
 800949c:	46bd      	mov	sp, r7
 800949e:	bd80      	pop	{r7, pc}

080094a0 <__tcf_0>:

Token Lexer::build_token()
{
	static Lexer lex;
 80094a0:	b580      	push	{r7, lr}
 80094a2:	af00      	add	r7, sp, #0
 80094a4:	4801      	ldr	r0, [pc, #4]	; (80094ac <__tcf_0+0xc>)
 80094a6:	f7ff fcbd 	bl	8008e24 <_ZN5LexerD1Ev>
 80094aa:	bd80      	pop	{r7, pc}
 80094ac:	2000038c 	.word	0x2000038c

080094b0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 80094b0:	b580      	push	{r7, lr}
 80094b2:	b082      	sub	sp, #8
 80094b4:	af00      	add	r7, sp, #0
 80094b6:	6078      	str	r0, [r7, #4]
 80094b8:	6039      	str	r1, [r7, #0]
 80094ba:	687b      	ldr	r3, [r7, #4]
 80094bc:	683a      	ldr	r2, [r7, #0]
 80094be:	4611      	mov	r1, r2
 80094c0:	4618      	mov	r0, r3
 80094c2:	f000 fbbe 	bl	8009c42 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 80094c6:	687b      	ldr	r3, [r7, #4]
 80094c8:	4618      	mov	r0, r3
 80094ca:	3708      	adds	r7, #8
 80094cc:	46bd      	mov	sp, r7
 80094ce:	bd80      	pop	{r7, pc}

080094d0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 80094d0:	b580      	push	{r7, lr}
 80094d2:	b082      	sub	sp, #8
 80094d4:	af00      	add	r7, sp, #0
 80094d6:	6078      	str	r0, [r7, #4]
 80094d8:	6039      	str	r1, [r7, #0]
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	683a      	ldr	r2, [r7, #0]
 80094de:	4611      	mov	r1, r2
 80094e0:	4618      	mov	r0, r3
 80094e2:	f7ff ffe5 	bl	80094b0 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 80094e6:	687b      	ldr	r3, [r7, #4]
 80094e8:	4618      	mov	r0, r3
 80094ea:	3708      	adds	r7, #8
 80094ec:	46bd      	mov	sp, r7
 80094ee:	bd80      	pop	{r7, pc}

080094f0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 80094f0:	b580      	push	{r7, lr}
 80094f2:	b082      	sub	sp, #8
 80094f4:	af00      	add	r7, sp, #0
 80094f6:	6078      	str	r0, [r7, #4]
 80094f8:	6039      	str	r1, [r7, #0]
 80094fa:	687b      	ldr	r3, [r7, #4]
 80094fc:	683a      	ldr	r2, [r7, #0]
 80094fe:	4611      	mov	r1, r2
 8009500:	4618      	mov	r0, r3
 8009502:	f7ff ffe5 	bl	80094d0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 8009506:	687b      	ldr	r3, [r7, #4]
 8009508:	4618      	mov	r0, r3
 800950a:	3708      	adds	r7, #8
 800950c:	46bd      	mov	sp, r7
 800950e:	bd80      	pop	{r7, pc}

08009510 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Variant_base(const _Variant_base&) = default;
 8009510:	b580      	push	{r7, lr}
 8009512:	b082      	sub	sp, #8
 8009514:	af00      	add	r7, sp, #0
 8009516:	6078      	str	r0, [r7, #4]
 8009518:	6039      	str	r1, [r7, #0]
 800951a:	687b      	ldr	r3, [r7, #4]
 800951c:	683a      	ldr	r2, [r7, #0]
 800951e:	4611      	mov	r1, r2
 8009520:	4618      	mov	r0, r3
 8009522:	f7ff ffe5 	bl	80094f0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 8009526:	687b      	ldr	r3, [r7, #4]
 8009528:	4618      	mov	r0, r3
 800952a:	3708      	adds	r7, #8
 800952c:	46bd      	mov	sp, r7
 800952e:	bd80      	pop	{r7, pc}

08009530 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>:
      variant(const variant& __rhs) = default;
 8009530:	b580      	push	{r7, lr}
 8009532:	b082      	sub	sp, #8
 8009534:	af00      	add	r7, sp, #0
 8009536:	6078      	str	r0, [r7, #4]
 8009538:	6039      	str	r1, [r7, #0]
 800953a:	687b      	ldr	r3, [r7, #4]
 800953c:	683a      	ldr	r2, [r7, #0]
 800953e:	4611      	mov	r1, r2
 8009540:	4618      	mov	r0, r3
 8009542:	f7ff ffe5 	bl	8009510 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>
 8009546:	687b      	ldr	r3, [r7, #4]
 8009548:	4618      	mov	r0, r3
 800954a:	3708      	adds	r7, #8
 800954c:	46bd      	mov	sp, r7
 800954e:	bd80      	pop	{r7, pc}

08009550 <_ZN5TokenC1ERKS_>:
 8009550:	b580      	push	{r7, lr}
 8009552:	b082      	sub	sp, #8
 8009554:	af00      	add	r7, sp, #0
 8009556:	6078      	str	r0, [r7, #4]
 8009558:	6039      	str	r1, [r7, #0]
 800955a:	683b      	ldr	r3, [r7, #0]
 800955c:	781a      	ldrb	r2, [r3, #0]
 800955e:	687b      	ldr	r3, [r7, #4]
 8009560:	701a      	strb	r2, [r3, #0]
 8009562:	687b      	ldr	r3, [r7, #4]
 8009564:	1d1a      	adds	r2, r3, #4
 8009566:	683b      	ldr	r3, [r7, #0]
 8009568:	3304      	adds	r3, #4
 800956a:	4619      	mov	r1, r3
 800956c:	4610      	mov	r0, r2
 800956e:	f7ff ffdf 	bl	8009530 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS6_>
 8009572:	683b      	ldr	r3, [r7, #0]
 8009574:	6a1a      	ldr	r2, [r3, #32]
 8009576:	687b      	ldr	r3, [r7, #4]
 8009578:	621a      	str	r2, [r3, #32]
 800957a:	683b      	ldr	r3, [r7, #0]
 800957c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	625a      	str	r2, [r3, #36]	; 0x24
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	4618      	mov	r0, r3
 8009586:	3708      	adds	r7, #8
 8009588:	46bd      	mov	sp, r7
 800958a:	bd80      	pop	{r7, pc}

0800958c <_ZN5Lexer11build_tokenEv>:
{
 800958c:	b580      	push	{r7, lr}
 800958e:	b082      	sub	sp, #8
 8009590:	af00      	add	r7, sp, #0
 8009592:	6078      	str	r0, [r7, #4]
	static Lexer lex;
 8009594:	4b23      	ldr	r3, [pc, #140]	; (8009624 <_ZN5Lexer11build_tokenEv+0x98>)
 8009596:	781b      	ldrb	r3, [r3, #0]
 8009598:	f3bf 8f5b 	dmb	ish
 800959c:	b2db      	uxtb	r3, r3
 800959e:	f003 0301 	and.w	r3, r3, #1
 80095a2:	2b00      	cmp	r3, #0
 80095a4:	bf0c      	ite	eq
 80095a6:	2301      	moveq	r3, #1
 80095a8:	2300      	movne	r3, #0
 80095aa:	b2db      	uxtb	r3, r3
 80095ac:	2b00      	cmp	r3, #0
 80095ae:	d013      	beq.n	80095d8 <_ZN5Lexer11build_tokenEv+0x4c>
 80095b0:	481c      	ldr	r0, [pc, #112]	; (8009624 <_ZN5Lexer11build_tokenEv+0x98>)
 80095b2:	f016 fe1a 	bl	80201ea <__cxa_guard_acquire>
 80095b6:	4603      	mov	r3, r0
 80095b8:	2b00      	cmp	r3, #0
 80095ba:	bf14      	ite	ne
 80095bc:	2301      	movne	r3, #1
 80095be:	2300      	moveq	r3, #0
 80095c0:	b2db      	uxtb	r3, r3
 80095c2:	2b00      	cmp	r3, #0
 80095c4:	d008      	beq.n	80095d8 <_ZN5Lexer11build_tokenEv+0x4c>
 80095c6:	4818      	ldr	r0, [pc, #96]	; (8009628 <_ZN5Lexer11build_tokenEv+0x9c>)
 80095c8:	f7ff fc11 	bl	8008dee <_ZN5LexerC1Ev>
 80095cc:	4815      	ldr	r0, [pc, #84]	; (8009624 <_ZN5Lexer11build_tokenEv+0x98>)
 80095ce:	f016 fe18 	bl	8020202 <__cxa_guard_release>
 80095d2:	4816      	ldr	r0, [pc, #88]	; (800962c <_ZN5Lexer11build_tokenEv+0xa0>)
 80095d4:	f018 f8f1 	bl	80217ba <atexit>
	lex.get_working_char();
 80095d8:	4813      	ldr	r0, [pc, #76]	; (8009628 <_ZN5Lexer11build_tokenEv+0x9c>)
 80095da:	f000 f888 	bl	80096ee <_ZN5Lexer16get_working_charEv>
	lex.product.line = lex.code->get_line();
 80095de:	4b12      	ldr	r3, [pc, #72]	; (8009628 <_ZN5Lexer11build_tokenEv+0x9c>)
 80095e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095e2:	4618      	mov	r0, r3
 80095e4:	f005 fc78 	bl	800eed8 <_ZN6Source8get_lineEv>
 80095e8:	4603      	mov	r3, r0
 80095ea:	4a0f      	ldr	r2, [pc, #60]	; (8009628 <_ZN5Lexer11build_tokenEv+0x9c>)
 80095ec:	6253      	str	r3, [r2, #36]	; 0x24
	lex.product.position = lex.code->get_position();
 80095ee:	4b0e      	ldr	r3, [pc, #56]	; (8009628 <_ZN5Lexer11build_tokenEv+0x9c>)
 80095f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095f2:	4618      	mov	r0, r3
 80095f4:	f005 fc7c 	bl	800eef0 <_ZN6Source12get_positionEv>
 80095f8:	4603      	mov	r3, r0
 80095fa:	4a0b      	ldr	r2, [pc, #44]	; (8009628 <_ZN5Lexer11build_tokenEv+0x9c>)
 80095fc:	6293      	str	r3, [r2, #40]	; 0x28

	if (lex.build_token_value())
 80095fe:	480a      	ldr	r0, [pc, #40]	; (8009628 <_ZN5Lexer11build_tokenEv+0x9c>)
 8009600:	f7ff ff1f 	bl	8009442 <_ZN5Lexer17build_token_valueEv>
 8009604:	4603      	mov	r3, r0
 8009606:	2b00      	cmp	r3, #0
 8009608:	d004      	beq.n	8009614 <_ZN5Lexer11build_tokenEv+0x88>
	{
		return lex.product;
 800960a:	4909      	ldr	r1, [pc, #36]	; (8009630 <_ZN5Lexer11build_tokenEv+0xa4>)
 800960c:	6878      	ldr	r0, [r7, #4]
 800960e:	f7ff ff9f 	bl	8009550 <_ZN5TokenC1ERKS_>
 8009612:	e003      	b.n	800961c <_ZN5Lexer11build_tokenEv+0x90>
	}

	return lex.product;
 8009614:	4906      	ldr	r1, [pc, #24]	; (8009630 <_ZN5Lexer11build_tokenEv+0xa4>)
 8009616:	6878      	ldr	r0, [r7, #4]
 8009618:	f7ff ff9a 	bl	8009550 <_ZN5TokenC1ERKS_>
}
 800961c:	6878      	ldr	r0, [r7, #4]
 800961e:	3708      	adds	r7, #8
 8009620:	46bd      	mov	sp, r7
 8009622:	bd80      	pop	{r7, pc}
 8009624:	200003bc 	.word	0x200003bc
 8009628:	2000038c 	.word	0x2000038c
 800962c:	080094a1 	.word	0x080094a1
 8009630:	20000390 	.word	0x20000390

08009634 <_ZN5Lexer12skip_commentEv>:

void Lexer::skip_comment()
{
 8009634:	b580      	push	{r7, lr}
 8009636:	b082      	sub	sp, #8
 8009638:	af00      	add	r7, sp, #0
 800963a:	6078      	str	r0, [r7, #4]
	while (char_buffer == '#')
 800963c:	687b      	ldr	r3, [r7, #4]
 800963e:	781b      	ldrb	r3, [r3, #0]
 8009640:	2b23      	cmp	r3, #35	; 0x23
 8009642:	d117      	bne.n	8009674 <_ZN5Lexer12skip_commentEv+0x40>
	{
		while (char_buffer != '\n')
 8009644:	687b      	ldr	r3, [r7, #4]
 8009646:	781b      	ldrb	r3, [r3, #0]
 8009648:	2b0a      	cmp	r3, #10
 800964a:	d009      	beq.n	8009660 <_ZN5Lexer12skip_commentEv+0x2c>
		{
			char_buffer = code->receive_code_char();
 800964c:	687b      	ldr	r3, [r7, #4]
 800964e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009650:	4618      	mov	r0, r3
 8009652:	f005 fc77 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 8009656:	4603      	mov	r3, r0
 8009658:	461a      	mov	r2, r3
 800965a:	687b      	ldr	r3, [r7, #4]
 800965c:	701a      	strb	r2, [r3, #0]
		while (char_buffer != '\n')
 800965e:	e7f1      	b.n	8009644 <_ZN5Lexer12skip_commentEv+0x10>
		}
		char_buffer = code->receive_code_char();
 8009660:	687b      	ldr	r3, [r7, #4]
 8009662:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009664:	4618      	mov	r0, r3
 8009666:	f005 fc6d 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 800966a:	4603      	mov	r3, r0
 800966c:	461a      	mov	r2, r3
 800966e:	687b      	ldr	r3, [r7, #4]
 8009670:	701a      	strb	r2, [r3, #0]
	while (char_buffer == '#')
 8009672:	e7e3      	b.n	800963c <_ZN5Lexer12skip_commentEv+0x8>
	}
}
 8009674:	bf00      	nop
 8009676:	3708      	adds	r7, #8
 8009678:	46bd      	mov	sp, r7
 800967a:	bd80      	pop	{r7, pc}

0800967c <_ZN5Lexer15skip_whitespaceEv>:

void Lexer::skip_whitespace()
{
 800967c:	b580      	push	{r7, lr}
 800967e:	b082      	sub	sp, #8
 8009680:	af00      	add	r7, sp, #0
 8009682:	6078      	str	r0, [r7, #4]
	while (isspace(char_buffer) && char_buffer != '\n')
 8009684:	687b      	ldr	r3, [r7, #4]
 8009686:	781b      	ldrb	r3, [r3, #0]
 8009688:	4618      	mov	r0, r3
 800968a:	f018 f8d7 	bl	802183c <isspace>
 800968e:	4603      	mov	r3, r0
 8009690:	2b00      	cmp	r3, #0
 8009692:	d00d      	beq.n	80096b0 <_ZN5Lexer15skip_whitespaceEv+0x34>
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	781b      	ldrb	r3, [r3, #0]
 8009698:	2b0a      	cmp	r3, #10
 800969a:	d009      	beq.n	80096b0 <_ZN5Lexer15skip_whitespaceEv+0x34>
	{
		char_buffer = code->receive_code_char();
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80096a0:	4618      	mov	r0, r3
 80096a2:	f005 fc4f 	bl	800ef44 <_ZN6Source17receive_code_charEv>
 80096a6:	4603      	mov	r3, r0
 80096a8:	461a      	mov	r2, r3
 80096aa:	687b      	ldr	r3, [r7, #4]
 80096ac:	701a      	strb	r2, [r3, #0]
	while (isspace(char_buffer) && char_buffer != '\n')
 80096ae:	e7e9      	b.n	8009684 <_ZN5Lexer15skip_whitespaceEv+0x8>
	}
}
 80096b0:	bf00      	nop
 80096b2:	3708      	adds	r7, #8
 80096b4:	46bd      	mov	sp, r7
 80096b6:	bd80      	pop	{r7, pc}

080096b8 <_ZN5Lexer15is_invalid_charEv>:

bool Lexer::is_invalid_char()
{
 80096b8:	b580      	push	{r7, lr}
 80096ba:	b082      	sub	sp, #8
 80096bc:	af00      	add	r7, sp, #0
 80096be:	6078      	str	r0, [r7, #4]
	return (isspace(char_buffer) && char_buffer != '\n') || char_buffer == '#';
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	781b      	ldrb	r3, [r3, #0]
 80096c4:	4618      	mov	r0, r3
 80096c6:	f018 f8b9 	bl	802183c <isspace>
 80096ca:	4603      	mov	r3, r0
 80096cc:	2b00      	cmp	r3, #0
 80096ce:	d003      	beq.n	80096d8 <_ZN5Lexer15is_invalid_charEv+0x20>
 80096d0:	687b      	ldr	r3, [r7, #4]
 80096d2:	781b      	ldrb	r3, [r3, #0]
 80096d4:	2b0a      	cmp	r3, #10
 80096d6:	d103      	bne.n	80096e0 <_ZN5Lexer15is_invalid_charEv+0x28>
 80096d8:	687b      	ldr	r3, [r7, #4]
 80096da:	781b      	ldrb	r3, [r3, #0]
 80096dc:	2b23      	cmp	r3, #35	; 0x23
 80096de:	d101      	bne.n	80096e4 <_ZN5Lexer15is_invalid_charEv+0x2c>
 80096e0:	2301      	movs	r3, #1
 80096e2:	e000      	b.n	80096e6 <_ZN5Lexer15is_invalid_charEv+0x2e>
 80096e4:	2300      	movs	r3, #0
}
 80096e6:	4618      	mov	r0, r3
 80096e8:	3708      	adds	r7, #8
 80096ea:	46bd      	mov	sp, r7
 80096ec:	bd80      	pop	{r7, pc}

080096ee <_ZN5Lexer16get_working_charEv>:

void Lexer::get_working_char()
{
 80096ee:	b580      	push	{r7, lr}
 80096f0:	b082      	sub	sp, #8
 80096f2:	af00      	add	r7, sp, #0
 80096f4:	6078      	str	r0, [r7, #4]
	while (is_invalid_char())
 80096f6:	6878      	ldr	r0, [r7, #4]
 80096f8:	f7ff ffde 	bl	80096b8 <_ZN5Lexer15is_invalid_charEv>
 80096fc:	4603      	mov	r3, r0
 80096fe:	2b00      	cmp	r3, #0
 8009700:	d006      	beq.n	8009710 <_ZN5Lexer16get_working_charEv+0x22>
	{
		skip_comment();
 8009702:	6878      	ldr	r0, [r7, #4]
 8009704:	f7ff ff96 	bl	8009634 <_ZN5Lexer12skip_commentEv>
		skip_whitespace();
 8009708:	6878      	ldr	r0, [r7, #4]
 800970a:	f7ff ffb7 	bl	800967c <_ZN5Lexer15skip_whitespaceEv>
	while (is_invalid_char())
 800970e:	e7f2      	b.n	80096f6 <_ZN5Lexer16get_working_charEv+0x8>
	}
}
 8009710:	bf00      	nop
 8009712:	3708      	adds	r7, #8
 8009714:	46bd      	mov	sp, r7
 8009716:	bd80      	pop	{r7, pc}

08009718 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
      _Ret __ret;

      _CharT* __endptr;

      struct _Save_errno {
	_Save_errno() : _M_errno(errno) { errno = 0; }
 8009718:	b580      	push	{r7, lr}
 800971a:	b082      	sub	sp, #8
 800971c:	af00      	add	r7, sp, #0
 800971e:	6078      	str	r0, [r7, #4]
 8009720:	f018 f852 	bl	80217c8 <__errno>
 8009724:	4603      	mov	r3, r0
 8009726:	681a      	ldr	r2, [r3, #0]
 8009728:	687b      	ldr	r3, [r7, #4]
 800972a:	601a      	str	r2, [r3, #0]
 800972c:	f018 f84c 	bl	80217c8 <__errno>
 8009730:	4603      	mov	r3, r0
 8009732:	2200      	movs	r2, #0
 8009734:	601a      	str	r2, [r3, #0]
 8009736:	687b      	ldr	r3, [r7, #4]
 8009738:	4618      	mov	r0, r3
 800973a:	3708      	adds	r7, #8
 800973c:	46bd      	mov	sp, r7
 800973e:	bd80      	pop	{r7, pc}

08009740 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 8009740:	b590      	push	{r4, r7, lr}
 8009742:	b083      	sub	sp, #12
 8009744:	af00      	add	r7, sp, #0
 8009746:	6078      	str	r0, [r7, #4]
 8009748:	f018 f83e 	bl	80217c8 <__errno>
 800974c:	4603      	mov	r3, r0
 800974e:	681b      	ldr	r3, [r3, #0]
 8009750:	2b00      	cmp	r3, #0
 8009752:	bf0c      	ite	eq
 8009754:	2301      	moveq	r3, #1
 8009756:	2300      	movne	r3, #0
 8009758:	b2db      	uxtb	r3, r3
 800975a:	2b00      	cmp	r3, #0
 800975c:	d005      	beq.n	800976a <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	681c      	ldr	r4, [r3, #0]
 8009762:	f018 f831 	bl	80217c8 <__errno>
 8009766:	4603      	mov	r3, r0
 8009768:	601c      	str	r4, [r3, #0]
 800976a:	687b      	ldr	r3, [r7, #4]
 800976c:	4618      	mov	r0, r3
 800976e:	370c      	adds	r7, #12
 8009770:	46bd      	mov	sp, r7
 8009772:	bd90      	pop	{r4, r7, pc}

08009774 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>:
      struct _Range_chk {
	  static bool
	  _S_chk(_TRet, std::false_type) { return false; }

	  static bool
	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
 8009774:	b480      	push	{r7}
 8009776:	b083      	sub	sp, #12
 8009778:	af00      	add	r7, sp, #0
 800977a:	6078      	str	r0, [r7, #4]
 800977c:	7039      	strb	r1, [r7, #0]
	  {
	    return __val < _TRet(__numeric_traits<int>::__min)
	      || __val > _TRet(__numeric_traits<int>::__max);
 800977e:	2300      	movs	r3, #0
	  }
 8009780:	4618      	mov	r0, r3
 8009782:	370c      	adds	r7, #12
 8009784:	46bd      	mov	sp, r7
 8009786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800978a:	4770      	bx	lr

0800978c <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800978c:	b590      	push	{r4, r7, lr}
 800978e:	b08b      	sub	sp, #44	; 0x2c
 8009790:	af00      	add	r7, sp, #0
 8009792:	60f8      	str	r0, [r7, #12]
 8009794:	60b9      	str	r1, [r7, #8]
 8009796:	607a      	str	r2, [r7, #4]
 8009798:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800979a:	f107 0314 	add.w	r3, r7, #20
 800979e:	4618      	mov	r0, r3
 80097a0:	f7ff ffba 	bl	8009718 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      };

      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 80097a4:	68fb      	ldr	r3, [r7, #12]
 80097a6:	f107 0118 	add.w	r1, r7, #24
 80097aa:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80097ac:	6878      	ldr	r0, [r7, #4]
 80097ae:	4798      	blx	r3
 80097b0:	6278      	str	r0, [r7, #36]	; 0x24

      if (__endptr == __str)
 80097b2:	69bb      	ldr	r3, [r7, #24]
 80097b4:	687a      	ldr	r2, [r7, #4]
 80097b6:	429a      	cmp	r2, r3
 80097b8:	d102      	bne.n	80097c0 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x34>
	std::__throw_invalid_argument(__name);
 80097ba:	68b8      	ldr	r0, [r7, #8]
 80097bc:	f016 fdef 	bl	802039e <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 80097c0:	f018 f802 	bl	80217c8 <__errno>
 80097c4:	4603      	mov	r3, r0
 80097c6:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 80097c8:	2b22      	cmp	r3, #34	; 0x22
 80097ca:	d006      	beq.n	80097da <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x4e>
 80097cc:	4621      	mov	r1, r4
 80097ce:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80097d0:	f7ff ffd0 	bl	8009774 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkElSt17integral_constantIbLb1EE>
 80097d4:	4603      	mov	r3, r0
 80097d6:	2b00      	cmp	r3, #0
 80097d8:	d001      	beq.n	80097de <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 80097da:	2301      	movs	r3, #1
 80097dc:	e000      	b.n	80097e0 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x54>
 80097de:	2300      	movs	r3, #0
      else if (errno == ERANGE
 80097e0:	2b00      	cmp	r3, #0
 80097e2:	d002      	beq.n	80097ea <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x5e>
	std::__throw_out_of_range(__name);
 80097e4:	68b8      	ldr	r0, [r7, #8]
 80097e6:	f016 fde0 	bl	80203aa <_ZSt20__throw_out_of_rangePKc>
      else
	__ret = __tmp;
 80097ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80097ec:	623b      	str	r3, [r7, #32]

      if (__idx)
 80097ee:	683b      	ldr	r3, [r7, #0]
 80097f0:	2b00      	cmp	r3, #0
 80097f2:	d005      	beq.n	8009800 <_ZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x74>
	*__idx = __endptr - __str;
 80097f4:	69ba      	ldr	r2, [r7, #24]
 80097f6:	687b      	ldr	r3, [r7, #4]
 80097f8:	1ad3      	subs	r3, r2, r3
 80097fa:	461a      	mov	r2, r3
 80097fc:	683b      	ldr	r3, [r7, #0]
 80097fe:	601a      	str	r2, [r3, #0]

      return __ret;
 8009800:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 8009802:	f107 0314 	add.w	r3, r7, #20
 8009806:	4618      	mov	r0, r3
 8009808:	f7ff ff9a 	bl	8009740 <_ZZN9__gnu_cxx6__stoaIlicJiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 800980c:	4623      	mov	r3, r4
    }
 800980e:	4618      	mov	r0, r3
 8009810:	372c      	adds	r7, #44	; 0x2c
 8009812:	46bd      	mov	sp, r7
 8009814:	bd90      	pop	{r4, r7, pc}

08009816 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>:
	_Save_errno() : _M_errno(errno) { errno = 0; }
 8009816:	b580      	push	{r7, lr}
 8009818:	b082      	sub	sp, #8
 800981a:	af00      	add	r7, sp, #0
 800981c:	6078      	str	r0, [r7, #4]
 800981e:	f017 ffd3 	bl	80217c8 <__errno>
 8009822:	4603      	mov	r3, r0
 8009824:	681a      	ldr	r2, [r3, #0]
 8009826:	687b      	ldr	r3, [r7, #4]
 8009828:	601a      	str	r2, [r3, #0]
 800982a:	f017 ffcd 	bl	80217c8 <__errno>
 800982e:	4603      	mov	r3, r0
 8009830:	2200      	movs	r2, #0
 8009832:	601a      	str	r2, [r3, #0]
 8009834:	687b      	ldr	r3, [r7, #4]
 8009836:	4618      	mov	r0, r3
 8009838:	3708      	adds	r7, #8
 800983a:	46bd      	mov	sp, r7
 800983c:	bd80      	pop	{r7, pc}

0800983e <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>:
	~_Save_errno() { if (errno == 0) errno = _M_errno; }
 800983e:	b590      	push	{r4, r7, lr}
 8009840:	b083      	sub	sp, #12
 8009842:	af00      	add	r7, sp, #0
 8009844:	6078      	str	r0, [r7, #4]
 8009846:	f017 ffbf 	bl	80217c8 <__errno>
 800984a:	4603      	mov	r3, r0
 800984c:	681b      	ldr	r3, [r3, #0]
 800984e:	2b00      	cmp	r3, #0
 8009850:	bf0c      	ite	eq
 8009852:	2301      	moveq	r3, #1
 8009854:	2300      	movne	r3, #0
 8009856:	b2db      	uxtb	r3, r3
 8009858:	2b00      	cmp	r3, #0
 800985a:	d005      	beq.n	8009868 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev+0x2a>
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	681c      	ldr	r4, [r3, #0]
 8009860:	f017 ffb2 	bl	80217c8 <__errno>
 8009864:	4603      	mov	r3, r0
 8009866:	601c      	str	r4, [r3, #0]
 8009868:	687b      	ldr	r3, [r7, #4]
 800986a:	4618      	mov	r0, r3
 800986c:	370c      	adds	r7, #12
 800986e:	46bd      	mov	sp, r7
 8009870:	bd90      	pop	{r4, r7, pc}

08009872 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>:
	  _S_chk(_TRet, std::false_type) { return false; }
 8009872:	b480      	push	{r7}
 8009874:	b083      	sub	sp, #12
 8009876:	af00      	add	r7, sp, #0
 8009878:	ed87 0a01 	vstr	s0, [r7, #4]
 800987c:	7038      	strb	r0, [r7, #0]
 800987e:	2300      	movs	r3, #0
 8009880:	4618      	mov	r0, r3
 8009882:	370c      	adds	r7, #12
 8009884:	46bd      	mov	sp, r7
 8009886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800988a:	4770      	bx	lr

0800988c <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_>:
    __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
 800988c:	b590      	push	{r4, r7, lr}
 800988e:	b08b      	sub	sp, #44	; 0x2c
 8009890:	af00      	add	r7, sp, #0
 8009892:	60f8      	str	r0, [r7, #12]
 8009894:	60b9      	str	r1, [r7, #8]
 8009896:	607a      	str	r2, [r7, #4]
 8009898:	603b      	str	r3, [r7, #0]
      } const __save_errno;
 800989a:	f107 0314 	add.w	r3, r7, #20
 800989e:	4618      	mov	r0, r3
 80098a0:	f7ff ffb9 	bl	8009816 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoC1Ev>
      const _TRet __tmp = __convf(__str, &__endptr, __base...);
 80098a4:	68fb      	ldr	r3, [r7, #12]
 80098a6:	f107 0218 	add.w	r2, r7, #24
 80098aa:	4611      	mov	r1, r2
 80098ac:	6878      	ldr	r0, [r7, #4]
 80098ae:	4798      	blx	r3
 80098b0:	ed87 0a09 	vstr	s0, [r7, #36]	; 0x24
      if (__endptr == __str)
 80098b4:	69bb      	ldr	r3, [r7, #24]
 80098b6:	687a      	ldr	r2, [r7, #4]
 80098b8:	429a      	cmp	r2, r3
 80098ba:	d102      	bne.n	80098c2 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x36>
	std::__throw_invalid_argument(__name);
 80098bc:	68b8      	ldr	r0, [r7, #8]
 80098be:	f016 fd6e 	bl	802039e <_ZSt24__throw_invalid_argumentPKc>
      else if (errno == ERANGE
 80098c2:	f017 ff81 	bl	80217c8 <__errno>
 80098c6:	4603      	mov	r3, r0
 80098c8:	681b      	ldr	r3, [r3, #0]
	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
 80098ca:	2b22      	cmp	r3, #34	; 0x22
 80098cc:	d007      	beq.n	80098de <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x52>
 80098ce:	4620      	mov	r0, r4
 80098d0:	ed97 0a09 	vldr	s0, [r7, #36]	; 0x24
 80098d4:	f7ff ffcd 	bl	8009872 <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN10_Range_chk6_S_chkEfSt17integral_constantIbLb0EE>
 80098d8:	4603      	mov	r3, r0
 80098da:	2b00      	cmp	r3, #0
 80098dc:	d001      	beq.n	80098e2 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x56>
 80098de:	2301      	movs	r3, #1
 80098e0:	e000      	b.n	80098e4 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x58>
 80098e2:	2300      	movs	r3, #0
      else if (errno == ERANGE
 80098e4:	2b00      	cmp	r3, #0
 80098e6:	d002      	beq.n	80098ee <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x62>
	std::__throw_out_of_range(__name);
 80098e8:	68b8      	ldr	r0, [r7, #8]
 80098ea:	f016 fd5e 	bl	80203aa <_ZSt20__throw_out_of_rangePKc>
	__ret = __tmp;
 80098ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80098f0:	623b      	str	r3, [r7, #32]
      if (__idx)
 80098f2:	683b      	ldr	r3, [r7, #0]
 80098f4:	2b00      	cmp	r3, #0
 80098f6:	d005      	beq.n	8009904 <_ZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_+0x78>
	*__idx = __endptr - __str;
 80098f8:	69ba      	ldr	r2, [r7, #24]
 80098fa:	687b      	ldr	r3, [r7, #4]
 80098fc:	1ad3      	subs	r3, r2, r3
 80098fe:	461a      	mov	r2, r3
 8009900:	683b      	ldr	r3, [r7, #0]
 8009902:	601a      	str	r2, [r3, #0]
      return __ret;
 8009904:	6a3c      	ldr	r4, [r7, #32]
      } const __save_errno;
 8009906:	f107 0314 	add.w	r3, r7, #20
 800990a:	4618      	mov	r0, r3
 800990c:	f7ff ff97 	bl	800983e <_ZZN9__gnu_cxx6__stoaIffcJEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PjS9_EN11_Save_errnoD1Ev>
      return __ret;
 8009910:	ee07 4a90 	vmov	s15, r4
    }
 8009914:	eeb0 0a67 	vmov.f32	s0, s15
 8009918:	372c      	adds	r7, #44	; 0x2c
 800991a:	46bd      	mov	sp, r7
 800991c:	bd90      	pop	{r4, r7, pc}

0800991e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800991e:	b580      	push	{r7, lr}
 8009920:	b082      	sub	sp, #8
 8009922:	af00      	add	r7, sp, #0
 8009924:	6078      	str	r0, [r7, #4]
 8009926:	7039      	strb	r1, [r7, #0]
 8009928:	687b      	ldr	r3, [r7, #4]
 800992a:	4611      	mov	r1, r2
 800992c:	4618      	mov	r0, r3
 800992e:	f000 f9c0 	bl	8009cb2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8009932:	687b      	ldr	r3, [r7, #4]
 8009934:	4618      	mov	r0, r3
 8009936:	3708      	adds	r7, #8
 8009938:	46bd      	mov	sp, r7
 800993a:	bd80      	pop	{r7, pc}

0800993c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800993c:	b580      	push	{r7, lr}
 800993e:	b082      	sub	sp, #8
 8009940:	af00      	add	r7, sp, #0
 8009942:	6078      	str	r0, [r7, #4]
 8009944:	7039      	strb	r1, [r7, #0]
 8009946:	687b      	ldr	r3, [r7, #4]
 8009948:	4611      	mov	r1, r2
 800994a:	4618      	mov	r0, r3
 800994c:	f7ff ffe7 	bl	800991e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8009950:	687b      	ldr	r3, [r7, #4]
 8009952:	4618      	mov	r0, r3
 8009954:	3708      	adds	r7, #8
 8009956:	46bd      	mov	sp, r7
 8009958:	bd80      	pop	{r7, pc}

0800995a <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800995a:	b580      	push	{r7, lr}
 800995c:	b082      	sub	sp, #8
 800995e:	af00      	add	r7, sp, #0
 8009960:	6078      	str	r0, [r7, #4]
 8009962:	7039      	strb	r1, [r7, #0]
 8009964:	687b      	ldr	r3, [r7, #4]
 8009966:	4611      	mov	r1, r2
 8009968:	4618      	mov	r0, r3
 800996a:	f7ff ffe7 	bl	800993c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800996e:	687b      	ldr	r3, [r7, #4]
 8009970:	4618      	mov	r0, r3
 8009972:	3708      	adds	r7, #8
 8009974:	46bd      	mov	sp, r7
 8009976:	bd80      	pop	{r7, pc}

08009978 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8009978:	b580      	push	{r7, lr}
 800997a:	b082      	sub	sp, #8
 800997c:	af00      	add	r7, sp, #0
 800997e:	6078      	str	r0, [r7, #4]
 8009980:	7039      	strb	r1, [r7, #0]
 8009982:	687b      	ldr	r3, [r7, #4]
 8009984:	4611      	mov	r1, r2
 8009986:	4618      	mov	r0, r3
 8009988:	f7ff ffe7 	bl	800995a <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800998c:	687b      	ldr	r3, [r7, #4]
 800998e:	4618      	mov	r0, r3
 8009990:	3708      	adds	r7, #8
 8009992:	46bd      	mov	sp, r7
 8009994:	bd80      	pop	{r7, pc}

08009996 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8009996:	b580      	push	{r7, lr}
 8009998:	b082      	sub	sp, #8
 800999a:	af00      	add	r7, sp, #0
 800999c:	6078      	str	r0, [r7, #4]
 800999e:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 80099a0:	687b      	ldr	r3, [r7, #4]
 80099a2:	4611      	mov	r1, r2
 80099a4:	4618      	mov	r0, r3
 80099a6:	f7ff ffe7 	bl	8009978 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEECI1NS0_16_Variant_storageILb0EJS7_ifbEEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80099aa:	687b      	ldr	r3, [r7, #4]
 80099ac:	4618      	mov	r0, r3
 80099ae:	3708      	adds	r7, #8
 80099b0:	46bd      	mov	sp, r7
 80099b2:	bd80      	pop	{r7, pc}

080099b4 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      _Variant_base()
 80099b4:	b580      	push	{r7, lr}
 80099b6:	b082      	sub	sp, #8
 80099b8:	af00      	add	r7, sp, #0
 80099ba:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 80099bc:	4619      	mov	r1, r3
 80099be:	6878      	ldr	r0, [r7, #4]
 80099c0:	f7ff ffe9 	bl	8009996 <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80099c4:	687b      	ldr	r3, [r7, #4]
 80099c6:	4618      	mov	r0, r3
 80099c8:	3708      	adds	r7, #8
 80099ca:	46bd      	mov	sp, r7
 80099cc:	bd80      	pop	{r7, pc}

080099ce <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
       *  iterator pointing to the sought after %pair. If unsuccessful it
       *  returns the past-the-end ( @c end() ) iterator.
       */

      const_iterator
      find(const key_type& __x) const
 80099ce:	b580      	push	{r7, lr}
 80099d0:	b082      	sub	sp, #8
 80099d2:	af00      	add	r7, sp, #0
 80099d4:	6078      	str	r0, [r7, #4]
 80099d6:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 80099d8:	687b      	ldr	r3, [r7, #4]
 80099da:	6839      	ldr	r1, [r7, #0]
 80099dc:	4618      	mov	r0, r3
 80099de:	f000 f97a 	bl	8009cd6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 80099e2:	4603      	mov	r3, r0
 80099e4:	4618      	mov	r0, r3
 80099e6:	3708      	adds	r7, #8
 80099e8:	46bd      	mov	sp, r7
 80099ea:	bd80      	pop	{r7, pc}

080099ec <_ZNKSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 80099ec:	b580      	push	{r7, lr}
 80099ee:	b082      	sub	sp, #8
 80099f0:	af00      	add	r7, sp, #0
 80099f2:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 80099f4:	687b      	ldr	r3, [r7, #4]
 80099f6:	4618      	mov	r0, r3
 80099f8:	f000 f9a9 	bl	8009d4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 80099fc:	4603      	mov	r3, r0
 80099fe:	4618      	mov	r0, r3
 8009a00:	3708      	adds	r7, #8
 8009a02:	46bd      	mov	sp, r7
 8009a04:	bd80      	pop	{r7, pc}

08009a06 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8009a06:	b480      	push	{r7}
 8009a08:	b083      	sub	sp, #12
 8009a0a:	af00      	add	r7, sp, #0
 8009a0c:	6078      	str	r0, [r7, #4]
 8009a0e:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 8009a10:	687b      	ldr	r3, [r7, #4]
 8009a12:	681a      	ldr	r2, [r3, #0]
 8009a14:	683b      	ldr	r3, [r7, #0]
 8009a16:	681b      	ldr	r3, [r3, #0]
 8009a18:	429a      	cmp	r2, r3
 8009a1a:	bf14      	ite	ne
 8009a1c:	2301      	movne	r3, #1
 8009a1e:	2300      	moveq	r3, #0
 8009a20:	b2db      	uxtb	r3, r3
 8009a22:	4618      	mov	r0, r3
 8009a24:	370c      	adds	r7, #12
 8009a26:	46bd      	mov	sp, r7
 8009a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a2c:	4770      	bx	lr

08009a2e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8009a2e:	b580      	push	{r7, lr}
 8009a30:	b082      	sub	sp, #8
 8009a32:	af00      	add	r7, sp, #0
 8009a34:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8009a36:	687b      	ldr	r3, [r7, #4]
 8009a38:	681b      	ldr	r3, [r3, #0]
 8009a3a:	4618      	mov	r0, r3
 8009a3c:	f7f9 fed2 	bl	80037e4 <_ZNKSt13_Rb_tree_nodeISt4pairIKc10token_typeEE9_M_valptrEv>
 8009a40:	4603      	mov	r3, r0
 8009a42:	4618      	mov	r0, r3
 8009a44:	3708      	adds	r7, #8
 8009a46:	46bd      	mov	sp, r7
 8009a48:	bd80      	pop	{r7, pc}

08009a4a <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE4findERS4_>:
      find(const key_type& __x) const
 8009a4a:	b580      	push	{r7, lr}
 8009a4c:	b082      	sub	sp, #8
 8009a4e:	af00      	add	r7, sp, #0
 8009a50:	6078      	str	r0, [r7, #4]
 8009a52:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8009a54:	687b      	ldr	r3, [r7, #4]
 8009a56:	6839      	ldr	r1, [r7, #0]
 8009a58:	4618      	mov	r0, r3
 8009a5a:	f000 f989 	bl	8009d70 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>
 8009a5e:	4603      	mov	r3, r0
 8009a60:	4618      	mov	r0, r3
 8009a62:	3708      	adds	r7, #8
 8009a64:	46bd      	mov	sp, r7
 8009a66:	bd80      	pop	{r7, pc}

08009a68 <_ZNKSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8009a68:	b580      	push	{r7, lr}
 8009a6a:	b082      	sub	sp, #8
 8009a6c:	af00      	add	r7, sp, #0
 8009a6e:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8009a70:	687b      	ldr	r3, [r7, #4]
 8009a72:	4618      	mov	r0, r3
 8009a74:	f000 f9b8 	bl	8009de8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8009a78:	4603      	mov	r3, r0
 8009a7a:	4618      	mov	r0, r3
 8009a7c:	3708      	adds	r7, #8
 8009a7e:	46bd      	mov	sp, r7
 8009a80:	bd80      	pop	{r7, pc}

08009a82 <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8009a82:	b480      	push	{r7}
 8009a84:	b083      	sub	sp, #12
 8009a86:	af00      	add	r7, sp, #0
 8009a88:	6078      	str	r0, [r7, #4]
 8009a8a:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 8009a8c:	687b      	ldr	r3, [r7, #4]
 8009a8e:	681a      	ldr	r2, [r3, #0]
 8009a90:	683b      	ldr	r3, [r7, #0]
 8009a92:	681b      	ldr	r3, [r3, #0]
 8009a94:	429a      	cmp	r2, r3
 8009a96:	bf14      	ite	ne
 8009a98:	2301      	movne	r3, #1
 8009a9a:	2300      	moveq	r3, #0
 8009a9c:	b2db      	uxtb	r3, r3
 8009a9e:	4618      	mov	r0, r3
 8009aa0:	370c      	adds	r7, #12
 8009aa2:	46bd      	mov	sp, r7
 8009aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aa8:	4770      	bx	lr

08009aaa <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8009aaa:	b580      	push	{r7, lr}
 8009aac:	b082      	sub	sp, #8
 8009aae:	af00      	add	r7, sp, #0
 8009ab0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8009ab2:	687b      	ldr	r3, [r7, #4]
 8009ab4:	681b      	ldr	r3, [r3, #0]
 8009ab6:	4618      	mov	r0, r3
 8009ab8:	f7f9 ff6f 	bl	800399a <_ZNKSt13_Rb_tree_nodeISt4pairIKc12double_tokenEE9_M_valptrEv>
 8009abc:	4603      	mov	r3, r0
 8009abe:	4618      	mov	r0, r3
 8009ac0:	3708      	adds	r7, #8
 8009ac2:	46bd      	mov	sp, r7
 8009ac4:	bd80      	pop	{r7, pc}

08009ac6 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE4findERSA_>:
      find(const key_type& __x) const
 8009ac6:	b580      	push	{r7, lr}
 8009ac8:	b082      	sub	sp, #8
 8009aca:	af00      	add	r7, sp, #0
 8009acc:	6078      	str	r0, [r7, #4]
 8009ace:	6039      	str	r1, [r7, #0]
      { return _M_t.find(__x); }
 8009ad0:	687b      	ldr	r3, [r7, #4]
 8009ad2:	6839      	ldr	r1, [r7, #0]
 8009ad4:	4618      	mov	r0, r3
 8009ad6:	f000 f998 	bl	8009e0a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>
 8009ada:	4603      	mov	r3, r0
 8009adc:	4618      	mov	r0, r3
 8009ade:	3708      	adds	r7, #8
 8009ae0:	46bd      	mov	sp, r7
 8009ae2:	bd80      	pop	{r7, pc}

08009ae4 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8009ae4:	b580      	push	{r7, lr}
 8009ae6:	b082      	sub	sp, #8
 8009ae8:	af00      	add	r7, sp, #0
 8009aea:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 8009aec:	687b      	ldr	r3, [r7, #4]
 8009aee:	4618      	mov	r0, r3
 8009af0:	f000 f9c7 	bl	8009e82 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8009af4:	4603      	mov	r3, r0
 8009af6:	4618      	mov	r0, r3
 8009af8:	3708      	adds	r7, #8
 8009afa:	46bd      	mov	sp, r7
 8009afc:	bd80      	pop	{r7, pc}

08009afe <_ZStneRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8009afe:	b480      	push	{r7}
 8009b00:	b083      	sub	sp, #12
 8009b02:	af00      	add	r7, sp, #0
 8009b04:	6078      	str	r0, [r7, #4]
 8009b06:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 8009b08:	687b      	ldr	r3, [r7, #4]
 8009b0a:	681a      	ldr	r2, [r3, #0]
 8009b0c:	683b      	ldr	r3, [r7, #0]
 8009b0e:	681b      	ldr	r3, [r3, #0]
 8009b10:	429a      	cmp	r2, r3
 8009b12:	bf14      	ite	ne
 8009b14:	2301      	movne	r3, #1
 8009b16:	2300      	moveq	r3, #0
 8009b18:	b2db      	uxtb	r3, r3
 8009b1a:	4618      	mov	r0, r3
 8009b1c:	370c      	adds	r7, #12
 8009b1e:	46bd      	mov	sp, r7
 8009b20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b24:	4770      	bx	lr

08009b26 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEptEv>:
      operator->() const _GLIBCXX_NOEXCEPT
 8009b26:	b580      	push	{r7, lr}
 8009b28:	b082      	sub	sp, #8
 8009b2a:	af00      	add	r7, sp, #0
 8009b2c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(_M_node)->_M_valptr(); }
 8009b2e:	687b      	ldr	r3, [r7, #4]
 8009b30:	681b      	ldr	r3, [r3, #0]
 8009b32:	4618      	mov	r0, r3
 8009b34:	f7f9 fec4 	bl	80038c0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEE9_M_valptrEv>
 8009b38:	4603      	mov	r3, r0
 8009b3a:	4618      	mov	r0, r3
 8009b3c:	3708      	adds	r7, #8
 8009b3e:	46bd      	mov	sp, r7
 8009b40:	bd80      	pop	{r7, pc}

08009b42 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 8009b42:	b590      	push	{r4, r7, lr}
 8009b44:	b085      	sub	sp, #20
 8009b46:	af00      	add	r7, sp, #0
 8009b48:	6078      	str	r0, [r7, #4]
 8009b4a:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8009b4c:	2300      	movs	r3, #0
 8009b4e:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8009b50:	6878      	ldr	r0, [r7, #4]
 8009b52:	f7fd f9ad 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8009b56:	4603      	mov	r3, r0
 8009b58:	2b00      	cmp	r3, #0
 8009b5a:	bf0c      	ite	eq
 8009b5c:	2301      	moveq	r3, #1
 8009b5e:	2300      	movne	r3, #0
 8009b60:	b2db      	uxtb	r3, r3
 8009b62:	2b00      	cmp	r3, #0
 8009b64:	d00c      	beq.n	8009b80 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8009b66:	6838      	ldr	r0, [r7, #0]
 8009b68:	f000 f9b8 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8009b6c:	4604      	mov	r4, r0
 8009b6e:	6878      	ldr	r0, [r7, #4]
 8009b70:	f000 f998 	bl	8009ea4 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8009b74:	4603      	mov	r3, r0
 8009b76:	4621      	mov	r1, r4
 8009b78:	4618      	mov	r0, r3
 8009b7a:	f016 fd28 	bl	80205ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8009b7e:	e007      	b.n	8009b90 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8009b80:	6838      	ldr	r0, [r7, #0]
 8009b82:	f000 f9ab 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8009b86:	4603      	mov	r3, r0
 8009b88:	4619      	mov	r1, r3
 8009b8a:	6878      	ldr	r0, [r7, #4]
 8009b8c:	f000 f9b1 	bl	8009ef2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 8009b90:	687b      	ldr	r3, [r7, #4]
	}
 8009b92:	4618      	mov	r0, r3
 8009b94:	3714      	adds	r7, #20
 8009b96:	46bd      	mov	sp, r7
 8009b98:	bd90      	pop	{r4, r7, pc}

08009b9a <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 8009b9a:	b590      	push	{r4, r7, lr}
 8009b9c:	b085      	sub	sp, #20
 8009b9e:	af00      	add	r7, sp, #0
 8009ba0:	6078      	str	r0, [r7, #4]
 8009ba2:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8009ba4:	2301      	movs	r3, #1
 8009ba6:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8009ba8:	6878      	ldr	r0, [r7, #4]
 8009baa:	f7fd f981 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8009bae:	4603      	mov	r3, r0
 8009bb0:	2b01      	cmp	r3, #1
 8009bb2:	bf0c      	ite	eq
 8009bb4:	2301      	moveq	r3, #1
 8009bb6:	2300      	movne	r3, #0
 8009bb8:	b2db      	uxtb	r3, r3
 8009bba:	2b00      	cmp	r3, #0
 8009bbc:	d00a      	beq.n	8009bd4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8009bbe:	6838      	ldr	r0, [r7, #0]
 8009bc0:	f7fe f94c 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8009bc4:	4603      	mov	r3, r0
 8009bc6:	681c      	ldr	r4, [r3, #0]
 8009bc8:	6878      	ldr	r0, [r7, #4]
 8009bca:	f7fd f9b9 	bl	8006f40 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8009bce:	4603      	mov	r3, r0
 8009bd0:	601c      	str	r4, [r3, #0]
 8009bd2:	e007      	b.n	8009be4 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8009bd4:	6838      	ldr	r0, [r7, #0]
 8009bd6:	f7fe f941 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8009bda:	4603      	mov	r3, r0
 8009bdc:	4619      	mov	r1, r3
 8009bde:	6878      	ldr	r0, [r7, #4]
 8009be0:	f000 f9a0 	bl	8009f24 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 8009be4:	687b      	ldr	r3, [r7, #4]
	}
 8009be6:	4618      	mov	r0, r3
 8009be8:	3714      	adds	r7, #20
 8009bea:	46bd      	mov	sp, r7
 8009bec:	bd90      	pop	{r4, r7, pc}

08009bee <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_>:
	operator=(_Tp&& __rhs)
 8009bee:	b590      	push	{r4, r7, lr}
 8009bf0:	b085      	sub	sp, #20
 8009bf2:	af00      	add	r7, sp, #0
 8009bf4:	6078      	str	r0, [r7, #4]
 8009bf6:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8009bf8:	2302      	movs	r3, #2
 8009bfa:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8009bfc:	6878      	ldr	r0, [r7, #4]
 8009bfe:	f7fd f957 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8009c02:	4603      	mov	r3, r0
 8009c04:	2b02      	cmp	r3, #2
 8009c06:	bf0c      	ite	eq
 8009c08:	2301      	moveq	r3, #1
 8009c0a:	2300      	movne	r3, #0
 8009c0c:	b2db      	uxtb	r3, r3
 8009c0e:	2b00      	cmp	r3, #0
 8009c10:	d00a      	beq.n	8009c28 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8009c12:	6838      	ldr	r0, [r7, #0]
 8009c14:	f000 f9bc 	bl	8009f90 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8009c18:	4603      	mov	r3, r0
 8009c1a:	681c      	ldr	r4, [r3, #0]
 8009c1c:	6878      	ldr	r0, [r7, #4]
 8009c1e:	f000 f99b 	bl	8009f58 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8009c22:	4603      	mov	r3, r0
 8009c24:	601c      	str	r4, [r3, #0]
 8009c26:	e007      	b.n	8009c38 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSIfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES6_E4typeEE18is_constructible_vISD_SA_E15is_assignable_vIRSD_SA_EERS6_E4typeESB_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8009c28:	6838      	ldr	r0, [r7, #0]
 8009c2a:	f000 f9b1 	bl	8009f90 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8009c2e:	4603      	mov	r3, r0
 8009c30:	4619      	mov	r1, r3
 8009c32:	6878      	ldr	r0, [r7, #4]
 8009c34:	f000 f9b7 	bl	8009fa6 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	  return *this;
 8009c38:	687b      	ldr	r3, [r7, #4]
	}
 8009c3a:	4618      	mov	r0, r3
 8009c3c:	3714      	adds	r7, #20
 8009c3e:	46bd      	mov	sp, r7
 8009c40:	bd90      	pop	{r4, r7, pc}

08009c42 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ERKS8_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 8009c42:	b580      	push	{r7, lr}
 8009c44:	b082      	sub	sp, #8
 8009c46:	af00      	add	r7, sp, #0
 8009c48:	6078      	str	r0, [r7, #4]
 8009c4a:	6039      	str	r1, [r7, #0]
      {
 8009c4c:	687b      	ldr	r3, [r7, #4]
 8009c4e:	4618      	mov	r0, r3
 8009c50:	f000 f9cf 	bl	8009ff2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 8009c54:	6839      	ldr	r1, [r7, #0]
 8009c56:	6878      	ldr	r0, [r7, #4]
 8009c58:	f000 fc6a 	bl	800a530 <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>
      }
 8009c5c:	687b      	ldr	r3, [r7, #4]
 8009c5e:	4618      	mov	r0, r3
 8009c60:	3708      	adds	r7, #8
 8009c62:	46bd      	mov	sp, r7
 8009c64:	bd80      	pop	{r7, pc}

08009c66 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8009c66:	b580      	push	{r7, lr}
 8009c68:	b082      	sub	sp, #8
 8009c6a:	af00      	add	r7, sp, #0
 8009c6c:	6078      	str	r0, [r7, #4]
 8009c6e:	7039      	strb	r1, [r7, #0]
	  ::new ((void*)std::addressof(_M_storage))
 8009c70:	687b      	ldr	r3, [r7, #4]
 8009c72:	4618      	mov	r0, r3
 8009c74:	f000 fc79 	bl	800a56a <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 8009c78:	4603      	mov	r3, r0
 8009c7a:	4619      	mov	r1, r3
 8009c7c:	2018      	movs	r0, #24
 8009c7e:	f7f7 f9d5 	bl	800102c <_ZnwjPv>
 8009c82:	4603      	mov	r3, r0
 8009c84:	4618      	mov	r0, r3
 8009c86:	f016 fc75 	bl	8020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
	}
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	4618      	mov	r0, r3
 8009c8e:	3708      	adds	r7, #8
 8009c90:	46bd      	mov	sp, r7
 8009c92:	bd80      	pop	{r7, pc}

08009c94 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8009c94:	b580      	push	{r7, lr}
 8009c96:	b082      	sub	sp, #8
 8009c98:	af00      	add	r7, sp, #0
 8009c9a:	6078      	str	r0, [r7, #4]
 8009c9c:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8009c9e:	687b      	ldr	r3, [r7, #4]
 8009ca0:	4611      	mov	r1, r2
 8009ca2:	4618      	mov	r0, r3
 8009ca4:	f7ff ffdf 	bl	8009c66 <_ZNSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8009ca8:	687b      	ldr	r3, [r7, #4]
 8009caa:	4618      	mov	r0, r3
 8009cac:	3708      	adds	r7, #8
 8009cae:	46bd      	mov	sp, r7
 8009cb0:	bd80      	pop	{r7, pc}

08009cb2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8009cb2:	b580      	push	{r7, lr}
 8009cb4:	b082      	sub	sp, #8
 8009cb6:	af00      	add	r7, sp, #0
 8009cb8:	6078      	str	r0, [r7, #4]
 8009cba:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8009cbc:	687b      	ldr	r3, [r7, #4]
 8009cbe:	4611      	mov	r1, r2
 8009cc0:	4618      	mov	r0, r3
 8009cc2:	f7ff ffe7 	bl	8009c94 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 8009cc6:	687b      	ldr	r3, [r7, #4]
 8009cc8:	2200      	movs	r2, #0
 8009cca:	761a      	strb	r2, [r3, #24]
	{ }
 8009ccc:	687b      	ldr	r3, [r7, #4]
 8009cce:	4618      	mov	r0, r3
 8009cd0:	3708      	adds	r7, #8
 8009cd2:	46bd      	mov	sp, r7
 8009cd4:	bd80      	pop	{r7, pc}

08009cd6 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue,
		      _Compare, _Alloc>::const_iterator
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8009cd6:	b590      	push	{r4, r7, lr}
 8009cd8:	b085      	sub	sp, #20
 8009cda:	af00      	add	r7, sp, #0
 8009cdc:	6078      	str	r0, [r7, #4]
 8009cde:	6039      	str	r1, [r7, #0]
    find(const _Key& __k) const
    {
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8009ce0:	6878      	ldr	r0, [r7, #4]
 8009ce2:	f000 fc4e 	bl	800a582 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8009ce6:	4604      	mov	r4, r0
 8009ce8:	6878      	ldr	r0, [r7, #4]
 8009cea:	f000 fc56 	bl	800a59a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8009cee:	4602      	mov	r2, r0
 8009cf0:	683b      	ldr	r3, [r7, #0]
 8009cf2:	4621      	mov	r1, r4
 8009cf4:	6878      	ldr	r0, [r7, #4]
 8009cf6:	f000 fc5c 	bl	800a5b2 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 8009cfa:	4603      	mov	r3, r0
 8009cfc:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8009cfe:	6878      	ldr	r0, [r7, #4]
 8009d00:	f000 f825 	bl	8009d4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8009d04:	4603      	mov	r3, r0
 8009d06:	60fb      	str	r3, [r7, #12]
 8009d08:	f107 020c 	add.w	r2, r7, #12
 8009d0c:	f107 0308 	add.w	r3, r7, #8
 8009d10:	4611      	mov	r1, r2
 8009d12:	4618      	mov	r0, r3
 8009d14:	f000 fc7e 	bl	800a614 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>
 8009d18:	4603      	mov	r3, r0
	      || _M_impl._M_key_compare(__k,
					_S_key(__j._M_node))) ? end() : __j;
 8009d1a:	2b00      	cmp	r3, #0
 8009d1c:	d10d      	bne.n	8009d3a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 8009d1e:	687c      	ldr	r4, [r7, #4]
 8009d20:	68bb      	ldr	r3, [r7, #8]
 8009d22:	4618      	mov	r0, r3
 8009d24:	f7f8 ff97 	bl	8002c56 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8009d28:	4603      	mov	r3, r0
 8009d2a:	461a      	mov	r2, r3
 8009d2c:	6839      	ldr	r1, [r7, #0]
 8009d2e:	4620      	mov	r0, r4
 8009d30:	f7f8 ff9d 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8009d34:	4603      	mov	r3, r0
 8009d36:	2b00      	cmp	r3, #0
 8009d38:	d004      	beq.n	8009d44 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8009d3a:	6878      	ldr	r0, [r7, #4]
 8009d3c:	f000 f807 	bl	8009d4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8009d40:	4603      	mov	r3, r0
 8009d42:	e000      	b.n	8009d46 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 8009d44:	68bb      	ldr	r3, [r7, #8]
    }
 8009d46:	4618      	mov	r0, r3
 8009d48:	3714      	adds	r7, #20
 8009d4a:	46bd      	mov	sp, r7
 8009d4c:	bd90      	pop	{r4, r7, pc}

08009d4e <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8009d4e:	b580      	push	{r7, lr}
 8009d50:	b084      	sub	sp, #16
 8009d52:	af00      	add	r7, sp, #0
 8009d54:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 8009d56:	687b      	ldr	r3, [r7, #4]
 8009d58:	1d1a      	adds	r2, r3, #4
 8009d5a:	f107 030c 	add.w	r3, r7, #12
 8009d5e:	4611      	mov	r1, r2
 8009d60:	4618      	mov	r0, r3
 8009d62:	f000 fc6b 	bl	800a63c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8009d66:	68fb      	ldr	r3, [r7, #12]
 8009d68:	4618      	mov	r0, r3
 8009d6a:	3710      	adds	r7, #16
 8009d6c:	46bd      	mov	sp, r7
 8009d6e:	bd80      	pop	{r7, pc}

08009d70 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8009d70:	b590      	push	{r4, r7, lr}
 8009d72:	b085      	sub	sp, #20
 8009d74:	af00      	add	r7, sp, #0
 8009d76:	6078      	str	r0, [r7, #4]
 8009d78:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8009d7a:	6878      	ldr	r0, [r7, #4]
 8009d7c:	f000 fc6d 	bl	800a65a <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>
 8009d80:	4604      	mov	r4, r0
 8009d82:	6878      	ldr	r0, [r7, #4]
 8009d84:	f000 fc75 	bl	800a672 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>
 8009d88:	4602      	mov	r2, r0
 8009d8a:	683b      	ldr	r3, [r7, #0]
 8009d8c:	4621      	mov	r1, r4
 8009d8e:	6878      	ldr	r0, [r7, #4]
 8009d90:	f000 fc7b 	bl	800a68a <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>
 8009d94:	4603      	mov	r3, r0
 8009d96:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8009d98:	6878      	ldr	r0, [r7, #4]
 8009d9a:	f000 f825 	bl	8009de8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8009d9e:	4603      	mov	r3, r0
 8009da0:	60fb      	str	r3, [r7, #12]
 8009da2:	f107 020c 	add.w	r2, r7, #12
 8009da6:	f107 0308 	add.w	r3, r7, #8
 8009daa:	4611      	mov	r1, r2
 8009dac:	4618      	mov	r0, r3
 8009dae:	f000 fc9d 	bl	800a6ec <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>
 8009db2:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 8009db4:	2b00      	cmp	r3, #0
 8009db6:	d10d      	bne.n	8009dd4 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x64>
	      || _M_impl._M_key_compare(__k,
 8009db8:	687c      	ldr	r4, [r7, #4]
 8009dba:	68bb      	ldr	r3, [r7, #8]
 8009dbc:	4618      	mov	r0, r3
 8009dbe:	f7f9 fa29 	bl	8003214 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8009dc2:	4603      	mov	r3, r0
 8009dc4:	461a      	mov	r2, r3
 8009dc6:	6839      	ldr	r1, [r7, #0]
 8009dc8:	4620      	mov	r0, r4
 8009dca:	f7f8 ff50 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 8009dce:	4603      	mov	r3, r0
 8009dd0:	2b00      	cmp	r3, #0
 8009dd2:	d004      	beq.n	8009dde <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8009dd4:	6878      	ldr	r0, [r7, #4]
 8009dd6:	f000 f807 	bl	8009de8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>
 8009dda:	4603      	mov	r3, r0
 8009ddc:	e000      	b.n	8009de0 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE4findERS1_+0x70>
 8009dde:	68bb      	ldr	r3, [r7, #8]
    }
 8009de0:	4618      	mov	r0, r3
 8009de2:	3714      	adds	r7, #20
 8009de4:	46bd      	mov	sp, r7
 8009de6:	bd90      	pop	{r4, r7, pc}

08009de8 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8009de8:	b580      	push	{r7, lr}
 8009dea:	b084      	sub	sp, #16
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	1d1a      	adds	r2, r3, #4
 8009df4:	f107 030c 	add.w	r3, r7, #12
 8009df8:	4611      	mov	r1, r2
 8009dfa:	4618      	mov	r0, r3
 8009dfc:	f000 fc8a 	bl	800a714 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 8009e00:	68fb      	ldr	r3, [r7, #12]
 8009e02:	4618      	mov	r0, r3
 8009e04:	3710      	adds	r7, #16
 8009e06:	46bd      	mov	sp, r7
 8009e08:	bd80      	pop	{r7, pc}

08009e0a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8009e0a:	b590      	push	{r4, r7, lr}
 8009e0c:	b085      	sub	sp, #20
 8009e0e:	af00      	add	r7, sp, #0
 8009e10:	6078      	str	r0, [r7, #4]
 8009e12:	6039      	str	r1, [r7, #0]
      const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
 8009e14:	6878      	ldr	r0, [r7, #4]
 8009e16:	f000 fc8c 	bl	800a732 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 8009e1a:	4604      	mov	r4, r0
 8009e1c:	6878      	ldr	r0, [r7, #4]
 8009e1e:	f000 fc94 	bl	800a74a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 8009e22:	4602      	mov	r2, r0
 8009e24:	683b      	ldr	r3, [r7, #0]
 8009e26:	4621      	mov	r1, r4
 8009e28:	6878      	ldr	r0, [r7, #4]
 8009e2a:	f000 fc9a 	bl	800a762 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>
 8009e2e:	4603      	mov	r3, r0
 8009e30:	60bb      	str	r3, [r7, #8]
      return (__j == end()
 8009e32:	6878      	ldr	r0, [r7, #4]
 8009e34:	f000 f825 	bl	8009e82 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8009e38:	4603      	mov	r3, r0
 8009e3a:	60fb      	str	r3, [r7, #12]
 8009e3c:	f107 020c 	add.w	r2, r7, #12
 8009e40:	f107 0308 	add.w	r3, r7, #8
 8009e44:	4611      	mov	r1, r2
 8009e46:	4618      	mov	r0, r3
 8009e48:	f000 fcbc 	bl	800a7c4 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>
 8009e4c:	4603      	mov	r3, r0
					_S_key(__j._M_node))) ? end() : __j;
 8009e4e:	2b00      	cmp	r3, #0
 8009e50:	d10d      	bne.n	8009e6e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x64>
	      || _M_impl._M_key_compare(__k,
 8009e52:	687c      	ldr	r4, [r7, #4]
 8009e54:	68bb      	ldr	r3, [r7, #8]
 8009e56:	4618      	mov	r0, r3
 8009e58:	f7f9 f892 	bl	8002f80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8009e5c:	4603      	mov	r3, r0
 8009e5e:	461a      	mov	r2, r3
 8009e60:	6839      	ldr	r1, [r7, #0]
 8009e62:	4620      	mov	r0, r4
 8009e64:	f7f9 f898 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8009e68:	4603      	mov	r3, r0
 8009e6a:	2b00      	cmp	r3, #0
 8009e6c:	d004      	beq.n	8009e78 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x6e>
					_S_key(__j._M_node))) ? end() : __j;
 8009e6e:	6878      	ldr	r0, [r7, #4]
 8009e70:	f000 f807 	bl	8009e82 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 8009e74:	4603      	mov	r3, r0
 8009e76:	e000      	b.n	8009e7a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4findERS7_+0x70>
 8009e78:	68bb      	ldr	r3, [r7, #8]
    }
 8009e7a:	4618      	mov	r0, r3
 8009e7c:	3714      	adds	r7, #20
 8009e7e:	46bd      	mov	sp, r7
 8009e80:	bd90      	pop	{r4, r7, pc}

08009e82 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 8009e82:	b580      	push	{r7, lr}
 8009e84:	b084      	sub	sp, #16
 8009e86:	af00      	add	r7, sp, #0
 8009e88:	6078      	str	r0, [r7, #4]
      { return const_iterator(&this->_M_impl._M_header); }
 8009e8a:	687b      	ldr	r3, [r7, #4]
 8009e8c:	1d1a      	adds	r2, r3, #4
 8009e8e:	f107 030c 	add.w	r3, r7, #12
 8009e92:	4611      	mov	r1, r2
 8009e94:	4618      	mov	r0, r3
 8009e96:	f000 fca9 	bl	800a7ec <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 8009e9a:	68fb      	ldr	r3, [r7, #12]
 8009e9c:	4618      	mov	r0, r3
 8009e9e:	3710      	adds	r7, #16
 8009ea0:	46bd      	mov	sp, r7
 8009ea2:	bd80      	pop	{r7, pc}

08009ea4 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 8009ea4:	b580      	push	{r7, lr}
 8009ea6:	b082      	sub	sp, #8
 8009ea8:	af00      	add	r7, sp, #0
 8009eaa:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8009eac:	6878      	ldr	r0, [r7, #4]
 8009eae:	f7fc ffff 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8009eb2:	4603      	mov	r3, r0
 8009eb4:	2b00      	cmp	r3, #0
 8009eb6:	bf14      	ite	ne
 8009eb8:	2301      	movne	r3, #1
 8009eba:	2300      	moveq	r3, #0
 8009ebc:	b2db      	uxtb	r3, r3
 8009ebe:	2b00      	cmp	r3, #0
 8009ec0:	d002      	beq.n	8009ec8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8009ec2:	4805      	ldr	r0, [pc, #20]	; (8009ed8 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8009ec4:	f7fa f980 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8009ec8:	6878      	ldr	r0, [r7, #4]
 8009eca:	f7fd f871 	bl	8006fb0 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8009ece:	4603      	mov	r3, r0
    }
 8009ed0:	4618      	mov	r0, r3
 8009ed2:	3708      	adds	r7, #8
 8009ed4:	46bd      	mov	sp, r7
 8009ed6:	bd80      	pop	{r7, pc}
 8009ed8:	08024b14 	.word	0x08024b14

08009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009edc:	b480      	push	{r7}
 8009ede:	b083      	sub	sp, #12
 8009ee0:	af00      	add	r7, sp, #0
 8009ee2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009ee4:	687b      	ldr	r3, [r7, #4]
 8009ee6:	4618      	mov	r0, r3
 8009ee8:	370c      	adds	r7, #12
 8009eea:	46bd      	mov	sp, r7
 8009eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ef0:	4770      	bx	lr

08009ef2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8009ef2:	b580      	push	{r7, lr}
 8009ef4:	b082      	sub	sp, #8
 8009ef6:	af00      	add	r7, sp, #0
 8009ef8:	6078      	str	r0, [r7, #4]
 8009efa:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8009efc:	687b      	ldr	r3, [r7, #4]
 8009efe:	4618      	mov	r0, r3
 8009f00:	f7fc ffc8 	bl	8006e94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8009f04:	6838      	ldr	r0, [r7, #0]
 8009f06:	f7ff ffe9 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8009f0a:	4603      	mov	r3, r0
 8009f0c:	4619      	mov	r1, r3
 8009f0e:	6878      	ldr	r0, [r7, #4]
 8009f10:	f000 fc7b 	bl	800a80a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8009f14:	6878      	ldr	r0, [r7, #4]
 8009f16:	f7ff ffc5 	bl	8009ea4 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8009f1a:	4603      	mov	r3, r0
	}
 8009f1c:	4618      	mov	r0, r3
 8009f1e:	3708      	adds	r7, #8
 8009f20:	46bd      	mov	sp, r7
 8009f22:	bd80      	pop	{r7, pc}

08009f24 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8009f24:	b580      	push	{r7, lr}
 8009f26:	b082      	sub	sp, #8
 8009f28:	af00      	add	r7, sp, #0
 8009f2a:	6078      	str	r0, [r7, #4]
 8009f2c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	4618      	mov	r0, r3
 8009f32:	f7fc ffaf 	bl	8006e94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8009f36:	6838      	ldr	r0, [r7, #0]
 8009f38:	f7fd ff90 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8009f3c:	4603      	mov	r3, r0
 8009f3e:	4619      	mov	r1, r3
 8009f40:	6878      	ldr	r0, [r7, #4]
 8009f42:	f000 fc83 	bl	800a84c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8009f46:	6878      	ldr	r0, [r7, #4]
 8009f48:	f7fc fffa 	bl	8006f40 <_ZSt3getILj1EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8009f4c:	4603      	mov	r3, r0
	}
 8009f4e:	4618      	mov	r0, r3
 8009f50:	3708      	adds	r7, #8
 8009f52:	46bd      	mov	sp, r7
 8009f54:	bd80      	pop	{r7, pc}
	...

08009f58 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 8009f58:	b580      	push	{r7, lr}
 8009f5a:	b082      	sub	sp, #8
 8009f5c:	af00      	add	r7, sp, #0
 8009f5e:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8009f60:	6878      	ldr	r0, [r7, #4]
 8009f62:	f7fc ffa5 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 8009f66:	4603      	mov	r3, r0
 8009f68:	2b02      	cmp	r3, #2
 8009f6a:	bf14      	ite	ne
 8009f6c:	2301      	movne	r3, #1
 8009f6e:	2300      	moveq	r3, #0
 8009f70:	b2db      	uxtb	r3, r3
 8009f72:	2b00      	cmp	r3, #0
 8009f74:	d002      	beq.n	8009f7c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8009f76:	4805      	ldr	r0, [pc, #20]	; (8009f8c <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 8009f78:	f7fa f926 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8009f7c:	6878      	ldr	r0, [r7, #4]
 8009f7e:	f7fd f909 	bl	8007194 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 8009f82:	4603      	mov	r3, r0
    }
 8009f84:	4618      	mov	r0, r3
 8009f86:	3708      	adds	r7, #8
 8009f88:	46bd      	mov	sp, r7
 8009f8a:	bd80      	pop	{r7, pc}
 8009f8c:	08024b14 	.word	0x08024b14

08009f90 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009f90:	b480      	push	{r7}
 8009f92:	b083      	sub	sp, #12
 8009f94:	af00      	add	r7, sp, #0
 8009f96:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009f98:	687b      	ldr	r3, [r7, #4]
 8009f9a:	4618      	mov	r0, r3
 8009f9c:	370c      	adds	r7, #12
 8009f9e:	46bd      	mov	sp, r7
 8009fa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fa4:	4770      	bx	lr

08009fa6 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 8009fa6:	b580      	push	{r7, lr}
 8009fa8:	b082      	sub	sp, #8
 8009faa:	af00      	add	r7, sp, #0
 8009fac:	6078      	str	r0, [r7, #4]
 8009fae:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	4618      	mov	r0, r3
 8009fb4:	f7fc ff6e 	bl	8006e94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8009fb8:	6838      	ldr	r0, [r7, #0]
 8009fba:	f7ff ffe9 	bl	8009f90 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 8009fbe:	4603      	mov	r3, r0
 8009fc0:	4619      	mov	r1, r3
 8009fc2:	6878      	ldr	r0, [r7, #4]
 8009fc4:	f000 fc61 	bl	800a88a <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8009fc8:	6878      	ldr	r0, [r7, #4]
 8009fca:	f7ff ffc5 	bl	8009f58 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8009fce:	4603      	mov	r3, r0
	}
 8009fd0:	4618      	mov	r0, r3
 8009fd2:	3708      	adds	r7, #8
 8009fd4:	46bd      	mov	sp, r7
 8009fd6:	bd80      	pop	{r7, pc}

08009fd8 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8009fd8:	b580      	push	{r7, lr}
 8009fda:	b082      	sub	sp, #8
 8009fdc:	af00      	add	r7, sp, #0
 8009fde:	6078      	str	r0, [r7, #4]
 8009fe0:	687b      	ldr	r3, [r7, #4]
 8009fe2:	4618      	mov	r0, r3
 8009fe4:	f000 fc70 	bl	800a8c8 <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>
 8009fe8:	687b      	ldr	r3, [r7, #4]
 8009fea:	4618      	mov	r0, r3
 8009fec:	3708      	adds	r7, #8
 8009fee:	46bd      	mov	sp, r7
 8009ff0:	bd80      	pop	{r7, pc}

08009ff2 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 8009ff2:	b580      	push	{r7, lr}
 8009ff4:	b082      	sub	sp, #8
 8009ff6:	af00      	add	r7, sp, #0
 8009ff8:	6078      	str	r0, [r7, #4]
 8009ffa:	687b      	ldr	r3, [r7, #4]
 8009ffc:	4618      	mov	r0, r3
 8009ffe:	f7ff ffeb 	bl	8009fd8 <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1Ev>
 800a002:	687b      	ldr	r3, [r7, #4]
 800a004:	22ff      	movs	r2, #255	; 0xff
 800a006:	761a      	strb	r2, [r3, #24]
 800a008:	687b      	ldr	r3, [r7, #4]
 800a00a:	4618      	mov	r0, r3
 800a00c:	3708      	adds	r7, #8
 800a00e:	46bd      	mov	sp, r7
 800a010:	bd80      	pop	{r7, pc}

0800a012 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800a012:	b480      	push	{r7}
 800a014:	b083      	sub	sp, #12
 800a016:	af00      	add	r7, sp, #0
 800a018:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 800a01a:	687b      	ldr	r3, [r7, #4]
    }
 800a01c:	4618      	mov	r0, r3
 800a01e:	370c      	adds	r7, #12
 800a020:	46bd      	mov	sp, r7
 800a022:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a026:	4770      	bx	lr

0800a028 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a028:	b580      	push	{r7, lr}
 800a02a:	b082      	sub	sp, #8
 800a02c:	af00      	add	r7, sp, #0
 800a02e:	7138      	strb	r0, [r7, #4]
 800a030:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a032:	6838      	ldr	r0, [r7, #0]
 800a034:	f000 fc76 	bl	800a924 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800a038:	4603      	mov	r3, r0
 800a03a:	4618      	mov	r0, r3
 800a03c:	f000 fc7d 	bl	800a93a <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 800a040:	4603      	mov	r3, r0
 800a042:	4618      	mov	r0, r3
 800a044:	3708      	adds	r7, #8
 800a046:	46bd      	mov	sp, r7
 800a048:	bd80      	pop	{r7, pc}

0800a04a <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a04a:	b590      	push	{r4, r7, lr}
 800a04c:	b083      	sub	sp, #12
 800a04e:	af00      	add	r7, sp, #0
 800a050:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a052:	6878      	ldr	r0, [r7, #4]
 800a054:	f000 fc5b 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a058:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a05a:	4619      	mov	r1, r3
 800a05c:	4620      	mov	r0, r4
 800a05e:	f7ff ffe3 	bl	800a028 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a062:	4603      	mov	r3, r0
    }
 800a064:	4618      	mov	r0, r3
 800a066:	370c      	adds	r7, #12
 800a068:	46bd      	mov	sp, r7
 800a06a:	bd90      	pop	{r4, r7, pc}

0800a06c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800a06c:	b580      	push	{r7, lr}
 800a06e:	b082      	sub	sp, #8
 800a070:	af00      	add	r7, sp, #0
 800a072:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800a074:	6878      	ldr	r0, [r7, #4]
 800a076:	f000 fc4a 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a07a:	4603      	mov	r3, r0
 800a07c:	4618      	mov	r0, r3
 800a07e:	f7ff ffe4 	bl	800a04a <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800a082:	4603      	mov	r3, r0
	}
 800a084:	4618      	mov	r0, r3
 800a086:	3708      	adds	r7, #8
 800a088:	46bd      	mov	sp, r7
 800a08a:	bd80      	pop	{r7, pc}

0800a08c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800a08c:	b5b0      	push	{r4, r5, r7, lr}
 800a08e:	b082      	sub	sp, #8
 800a090:	af00      	add	r7, sp, #0
 800a092:	6078      	str	r0, [r7, #4]
 800a094:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800a096:	6878      	ldr	r0, [r7, #4]
 800a098:	f000 fc2e 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a09c:	4604      	mov	r4, r0
 800a09e:	6838      	ldr	r0, [r7, #0]
 800a0a0:	f000 fc35 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a0a4:	4603      	mov	r3, r0
 800a0a6:	4618      	mov	r0, r3
 800a0a8:	f7ff ffe0 	bl	800a06c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcSH_>
 800a0ac:	4603      	mov	r3, r0
 800a0ae:	4619      	mov	r1, r3
 800a0b0:	4620      	mov	r0, r4
 800a0b2:	f000 fc4f 	bl	800a954 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800a0b6:	462b      	mov	r3, r5
      }
 800a0b8:	4618      	mov	r0, r3
 800a0ba:	3708      	adds	r7, #8
 800a0bc:	46bd      	mov	sp, r7
 800a0be:	bdb0      	pop	{r4, r5, r7, pc}

0800a0c0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a0c0:	b5b0      	push	{r4, r5, r7, lr}
 800a0c2:	b082      	sub	sp, #8
 800a0c4:	af00      	add	r7, sp, #0
 800a0c6:	6078      	str	r0, [r7, #4]
 800a0c8:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800a0ca:	6878      	ldr	r0, [r7, #4]
 800a0cc:	f000 fc14 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a0d0:	4604      	mov	r4, r0
 800a0d2:	6838      	ldr	r0, [r7, #0]
 800a0d4:	f000 fc1b 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a0d8:	4603      	mov	r3, r0
 800a0da:	4619      	mov	r1, r3
 800a0dc:	4620      	mov	r0, r4
 800a0de:	f7ff ffd5 	bl	800a08c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 800a0e2:	462b      	mov	r3, r5
      }
 800a0e4:	4618      	mov	r0, r3
 800a0e6:	3708      	adds	r7, #8
 800a0e8:	46bd      	mov	sp, r7
 800a0ea:	bdb0      	pop	{r4, r5, r7, pc}

0800a0ec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a0ec:	b5b0      	push	{r4, r5, r7, lr}
 800a0ee:	b082      	sub	sp, #8
 800a0f0:	af00      	add	r7, sp, #0
 800a0f2:	6078      	str	r0, [r7, #4]
 800a0f4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800a0f6:	6878      	ldr	r0, [r7, #4]
 800a0f8:	f000 fbfe 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a0fc:	4604      	mov	r4, r0
 800a0fe:	6838      	ldr	r0, [r7, #0]
 800a100:	f000 fc05 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a104:	4603      	mov	r3, r0
 800a106:	4619      	mov	r1, r3
 800a108:	4620      	mov	r0, r4
 800a10a:	f7ff ffd9 	bl	800a0c0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 800a10e:	462b      	mov	r3, r5
      }
 800a110:	4618      	mov	r0, r3
 800a112:	3708      	adds	r7, #8
 800a114:	46bd      	mov	sp, r7
 800a116:	bdb0      	pop	{r4, r5, r7, pc}

0800a118 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a118:	b580      	push	{r7, lr}
 800a11a:	b082      	sub	sp, #8
 800a11c:	af00      	add	r7, sp, #0
 800a11e:	7138      	strb	r0, [r7, #4]
 800a120:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a122:	6838      	ldr	r0, [r7, #0]
 800a124:	f000 fc2d 	bl	800a982 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800a128:	4603      	mov	r3, r0
 800a12a:	4618      	mov	r0, r3
 800a12c:	f000 fc34 	bl	800a998 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 800a130:	4603      	mov	r3, r0
 800a132:	4618      	mov	r0, r3
 800a134:	3708      	adds	r7, #8
 800a136:	46bd      	mov	sp, r7
 800a138:	bd80      	pop	{r7, pc}

0800a13a <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a13a:	b590      	push	{r4, r7, lr}
 800a13c:	b083      	sub	sp, #12
 800a13e:	af00      	add	r7, sp, #0
 800a140:	7138      	strb	r0, [r7, #4]
 800a142:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a144:	6838      	ldr	r0, [r7, #0]
 800a146:	f000 fbed 	bl	800a924 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800a14a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a14c:	4619      	mov	r1, r3
 800a14e:	4620      	mov	r0, r4
 800a150:	f7ff ffe2 	bl	800a118 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a154:	4603      	mov	r3, r0
    }
 800a156:	4618      	mov	r0, r3
 800a158:	370c      	adds	r7, #12
 800a15a:	46bd      	mov	sp, r7
 800a15c:	bd90      	pop	{r4, r7, pc}

0800a15e <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a15e:	b590      	push	{r4, r7, lr}
 800a160:	b083      	sub	sp, #12
 800a162:	af00      	add	r7, sp, #0
 800a164:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a166:	6878      	ldr	r0, [r7, #4]
 800a168:	f000 fbd1 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a16c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a16e:	4619      	mov	r1, r3
 800a170:	4620      	mov	r0, r4
 800a172:	f7ff ffe2 	bl	800a13a <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a176:	4603      	mov	r3, r0
    }
 800a178:	4618      	mov	r0, r3
 800a17a:	370c      	adds	r7, #12
 800a17c:	46bd      	mov	sp, r7
 800a17e:	bd90      	pop	{r4, r7, pc}

0800a180 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800a180:	b580      	push	{r7, lr}
 800a182:	b082      	sub	sp, #8
 800a184:	af00      	add	r7, sp, #0
 800a186:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800a188:	6878      	ldr	r0, [r7, #4]
 800a18a:	f000 fbc0 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a18e:	4603      	mov	r3, r0
 800a190:	4618      	mov	r0, r3
 800a192:	f7ff ffe4 	bl	800a15e <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800a196:	4603      	mov	r3, r0
	}
 800a198:	4618      	mov	r0, r3
 800a19a:	3708      	adds	r7, #8
 800a19c:	46bd      	mov	sp, r7
 800a19e:	bd80      	pop	{r7, pc}

0800a1a0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800a1a0:	b5b0      	push	{r4, r5, r7, lr}
 800a1a2:	b082      	sub	sp, #8
 800a1a4:	af00      	add	r7, sp, #0
 800a1a6:	6078      	str	r0, [r7, #4]
 800a1a8:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800a1aa:	6878      	ldr	r0, [r7, #4]
 800a1ac:	f000 fba4 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a1b0:	4604      	mov	r4, r0
 800a1b2:	6838      	ldr	r0, [r7, #0]
 800a1b4:	f000 fbab 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a1b8:	4603      	mov	r3, r0
 800a1ba:	4618      	mov	r0, r3
 800a1bc:	f7ff ffe0 	bl	800a180 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcSH_>
 800a1c0:	4603      	mov	r3, r0
 800a1c2:	4619      	mov	r1, r3
 800a1c4:	4620      	mov	r0, r4
 800a1c6:	f000 fbf2 	bl	800a9ae <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800a1ca:	462b      	mov	r3, r5
      }
 800a1cc:	4618      	mov	r0, r3
 800a1ce:	3708      	adds	r7, #8
 800a1d0:	46bd      	mov	sp, r7
 800a1d2:	bdb0      	pop	{r4, r5, r7, pc}

0800a1d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a1d4:	b5b0      	push	{r4, r5, r7, lr}
 800a1d6:	b082      	sub	sp, #8
 800a1d8:	af00      	add	r7, sp, #0
 800a1da:	6078      	str	r0, [r7, #4]
 800a1dc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800a1de:	6878      	ldr	r0, [r7, #4]
 800a1e0:	f000 fb8a 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a1e4:	4604      	mov	r4, r0
 800a1e6:	6838      	ldr	r0, [r7, #0]
 800a1e8:	f000 fb91 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a1ec:	4603      	mov	r3, r0
 800a1ee:	4619      	mov	r1, r3
 800a1f0:	4620      	mov	r0, r4
 800a1f2:	f7ff ffd5 	bl	800a1a0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 800a1f6:	462b      	mov	r3, r5
      }
 800a1f8:	4618      	mov	r0, r3
 800a1fa:	3708      	adds	r7, #8
 800a1fc:	46bd      	mov	sp, r7
 800a1fe:	bdb0      	pop	{r4, r5, r7, pc}

0800a200 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a200:	b5b0      	push	{r4, r5, r7, lr}
 800a202:	b082      	sub	sp, #8
 800a204:	af00      	add	r7, sp, #0
 800a206:	6078      	str	r0, [r7, #4]
 800a208:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800a20a:	6878      	ldr	r0, [r7, #4]
 800a20c:	f000 fb74 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a210:	4604      	mov	r4, r0
 800a212:	6838      	ldr	r0, [r7, #0]
 800a214:	f000 fb7b 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a218:	4603      	mov	r3, r0
 800a21a:	4619      	mov	r1, r3
 800a21c:	4620      	mov	r0, r4
 800a21e:	f7ff ffd9 	bl	800a1d4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 800a222:	462b      	mov	r3, r5
      }
 800a224:	4618      	mov	r0, r3
 800a226:	3708      	adds	r7, #8
 800a228:	46bd      	mov	sp, r7
 800a22a:	bdb0      	pop	{r4, r5, r7, pc}

0800a22c <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a22c:	b580      	push	{r7, lr}
 800a22e:	b082      	sub	sp, #8
 800a230:	af00      	add	r7, sp, #0
 800a232:	7138      	strb	r0, [r7, #4]
 800a234:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a236:	6838      	ldr	r0, [r7, #0]
 800a238:	f000 fbd0 	bl	800a9dc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800a23c:	4603      	mov	r3, r0
 800a23e:	4618      	mov	r0, r3
 800a240:	f000 fbd7 	bl	800a9f2 <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 800a244:	4603      	mov	r3, r0
 800a246:	4618      	mov	r0, r3
 800a248:	3708      	adds	r7, #8
 800a24a:	46bd      	mov	sp, r7
 800a24c:	bd80      	pop	{r7, pc}

0800a24e <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a24e:	b590      	push	{r4, r7, lr}
 800a250:	b083      	sub	sp, #12
 800a252:	af00      	add	r7, sp, #0
 800a254:	7138      	strb	r0, [r7, #4]
 800a256:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a258:	6838      	ldr	r0, [r7, #0]
 800a25a:	f000 fb92 	bl	800a982 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800a25e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a260:	4619      	mov	r1, r3
 800a262:	4620      	mov	r0, r4
 800a264:	f7ff ffe2 	bl	800a22c <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a268:	4603      	mov	r3, r0
    }
 800a26a:	4618      	mov	r0, r3
 800a26c:	370c      	adds	r7, #12
 800a26e:	46bd      	mov	sp, r7
 800a270:	bd90      	pop	{r4, r7, pc}

0800a272 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a272:	b590      	push	{r4, r7, lr}
 800a274:	b083      	sub	sp, #12
 800a276:	af00      	add	r7, sp, #0
 800a278:	7138      	strb	r0, [r7, #4]
 800a27a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a27c:	6838      	ldr	r0, [r7, #0]
 800a27e:	f000 fb51 	bl	800a924 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800a282:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a284:	4619      	mov	r1, r3
 800a286:	4620      	mov	r0, r4
 800a288:	f7ff ffe1 	bl	800a24e <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a28c:	4603      	mov	r3, r0
    }
 800a28e:	4618      	mov	r0, r3
 800a290:	370c      	adds	r7, #12
 800a292:	46bd      	mov	sp, r7
 800a294:	bd90      	pop	{r4, r7, pc}

0800a296 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a296:	b590      	push	{r4, r7, lr}
 800a298:	b083      	sub	sp, #12
 800a29a:	af00      	add	r7, sp, #0
 800a29c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a29e:	6878      	ldr	r0, [r7, #4]
 800a2a0:	f000 fb35 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a2a4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a2a6:	4619      	mov	r1, r3
 800a2a8:	4620      	mov	r0, r4
 800a2aa:	f7ff ffe2 	bl	800a272 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a2ae:	4603      	mov	r3, r0
    }
 800a2b0:	4618      	mov	r0, r3
 800a2b2:	370c      	adds	r7, #12
 800a2b4:	46bd      	mov	sp, r7
 800a2b6:	bd90      	pop	{r4, r7, pc}

0800a2b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800a2b8:	b580      	push	{r7, lr}
 800a2ba:	b082      	sub	sp, #8
 800a2bc:	af00      	add	r7, sp, #0
 800a2be:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800a2c0:	6878      	ldr	r0, [r7, #4]
 800a2c2:	f000 fb24 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a2c6:	4603      	mov	r3, r0
 800a2c8:	4618      	mov	r0, r3
 800a2ca:	f7ff ffe4 	bl	800a296 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800a2ce:	4603      	mov	r3, r0
	}
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	3708      	adds	r7, #8
 800a2d4:	46bd      	mov	sp, r7
 800a2d6:	bd80      	pop	{r7, pc}

0800a2d8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800a2d8:	b5b0      	push	{r4, r5, r7, lr}
 800a2da:	b082      	sub	sp, #8
 800a2dc:	af00      	add	r7, sp, #0
 800a2de:	6078      	str	r0, [r7, #4]
 800a2e0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800a2e2:	6878      	ldr	r0, [r7, #4]
 800a2e4:	f000 fb08 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a2e8:	4604      	mov	r4, r0
 800a2ea:	6838      	ldr	r0, [r7, #0]
 800a2ec:	f000 fb0f 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a2f0:	4603      	mov	r3, r0
 800a2f2:	4618      	mov	r0, r3
 800a2f4:	f7ff ffe0 	bl	800a2b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcSH_>
 800a2f8:	4603      	mov	r3, r0
 800a2fa:	4619      	mov	r1, r3
 800a2fc:	4620      	mov	r0, r4
 800a2fe:	f000 fb83 	bl	800aa08 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800a302:	462b      	mov	r3, r5
      }
 800a304:	4618      	mov	r0, r3
 800a306:	3708      	adds	r7, #8
 800a308:	46bd      	mov	sp, r7
 800a30a:	bdb0      	pop	{r4, r5, r7, pc}

0800a30c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a30c:	b5b0      	push	{r4, r5, r7, lr}
 800a30e:	b082      	sub	sp, #8
 800a310:	af00      	add	r7, sp, #0
 800a312:	6078      	str	r0, [r7, #4]
 800a314:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800a316:	6878      	ldr	r0, [r7, #4]
 800a318:	f000 faee 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a31c:	4604      	mov	r4, r0
 800a31e:	6838      	ldr	r0, [r7, #0]
 800a320:	f000 faf5 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a324:	4603      	mov	r3, r0
 800a326:	4619      	mov	r1, r3
 800a328:	4620      	mov	r0, r4
 800a32a:	f7ff ffd5 	bl	800a2d8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 800a32e:	462b      	mov	r3, r5
      }
 800a330:	4618      	mov	r0, r3
 800a332:	3708      	adds	r7, #8
 800a334:	46bd      	mov	sp, r7
 800a336:	bdb0      	pop	{r4, r5, r7, pc}

0800a338 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a338:	b5b0      	push	{r4, r5, r7, lr}
 800a33a:	b082      	sub	sp, #8
 800a33c:	af00      	add	r7, sp, #0
 800a33e:	6078      	str	r0, [r7, #4]
 800a340:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800a342:	6878      	ldr	r0, [r7, #4]
 800a344:	f000 fad8 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a348:	4604      	mov	r4, r0
 800a34a:	6838      	ldr	r0, [r7, #0]
 800a34c:	f000 fadf 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a350:	4603      	mov	r3, r0
 800a352:	4619      	mov	r1, r3
 800a354:	4620      	mov	r0, r4
 800a356:	f7ff ffd9 	bl	800a30c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 800a35a:	462b      	mov	r3, r5
      }
 800a35c:	4618      	mov	r0, r3
 800a35e:	3708      	adds	r7, #8
 800a360:	46bd      	mov	sp, r7
 800a362:	bdb0      	pop	{r4, r5, r7, pc}

0800a364 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800a364:	b580      	push	{r7, lr}
 800a366:	b082      	sub	sp, #8
 800a368:	af00      	add	r7, sp, #0
 800a36a:	7138      	strb	r0, [r7, #4]
 800a36c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800a36e:	6838      	ldr	r0, [r7, #0]
 800a370:	f000 fb61 	bl	800aa36 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800a374:	4603      	mov	r3, r0
 800a376:	4618      	mov	r0, r3
 800a378:	f000 fb68 	bl	800aa4c <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 800a37c:	4603      	mov	r3, r0
 800a37e:	4618      	mov	r0, r3
 800a380:	3708      	adds	r7, #8
 800a382:	46bd      	mov	sp, r7
 800a384:	bd80      	pop	{r7, pc}

0800a386 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a386:	b590      	push	{r4, r7, lr}
 800a388:	b083      	sub	sp, #12
 800a38a:	af00      	add	r7, sp, #0
 800a38c:	7138      	strb	r0, [r7, #4]
 800a38e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a390:	6838      	ldr	r0, [r7, #0]
 800a392:	f000 fb23 	bl	800a9dc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800a396:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a398:	4619      	mov	r1, r3
 800a39a:	4620      	mov	r0, r4
 800a39c:	f7ff ffe2 	bl	800a364 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbEEEEEDcSt16in_place_index_tILj0EEOT_>
 800a3a0:	4603      	mov	r3, r0
    }
 800a3a2:	4618      	mov	r0, r3
 800a3a4:	370c      	adds	r7, #12
 800a3a6:	46bd      	mov	sp, r7
 800a3a8:	bd90      	pop	{r4, r7, pc}

0800a3aa <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a3aa:	b590      	push	{r4, r7, lr}
 800a3ac:	b083      	sub	sp, #12
 800a3ae:	af00      	add	r7, sp, #0
 800a3b0:	7138      	strb	r0, [r7, #4]
 800a3b2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a3b4:	6838      	ldr	r0, [r7, #0]
 800a3b6:	f000 fae4 	bl	800a982 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800a3ba:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a3bc:	4619      	mov	r1, r3
 800a3be:	4620      	mov	r0, r4
 800a3c0:	f7ff ffe1 	bl	800a386 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a3c4:	4603      	mov	r3, r0
    }
 800a3c6:	4618      	mov	r0, r3
 800a3c8:	370c      	adds	r7, #12
 800a3ca:	46bd      	mov	sp, r7
 800a3cc:	bd90      	pop	{r4, r7, pc}

0800a3ce <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800a3ce:	b590      	push	{r4, r7, lr}
 800a3d0:	b083      	sub	sp, #12
 800a3d2:	af00      	add	r7, sp, #0
 800a3d4:	7138      	strb	r0, [r7, #4]
 800a3d6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800a3d8:	6838      	ldr	r0, [r7, #0]
 800a3da:	f000 faa3 	bl	800a924 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800a3de:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800a3e0:	4619      	mov	r1, r3
 800a3e2:	4620      	mov	r0, r4
 800a3e4:	f7ff ffe1 	bl	800a3aa <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a3e8:	4603      	mov	r3, r0
    }
 800a3ea:	4618      	mov	r0, r3
 800a3ec:	370c      	adds	r7, #12
 800a3ee:	46bd      	mov	sp, r7
 800a3f0:	bd90      	pop	{r4, r7, pc}

0800a3f2 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800a3f2:	b590      	push	{r4, r7, lr}
 800a3f4:	b083      	sub	sp, #12
 800a3f6:	af00      	add	r7, sp, #0
 800a3f8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800a3fa:	6878      	ldr	r0, [r7, #4]
 800a3fc:	f000 fa87 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a400:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800a402:	4619      	mov	r1, r3
 800a404:	4620      	mov	r0, r4
 800a406:	f7ff ffe2 	bl	800a3ce <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800a40a:	4603      	mov	r3, r0
    }
 800a40c:	4618      	mov	r0, r3
 800a40e:	370c      	adds	r7, #12
 800a410:	46bd      	mov	sp, r7
 800a412:	bd90      	pop	{r4, r7, pc}

0800a414 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800a414:	b580      	push	{r7, lr}
 800a416:	b082      	sub	sp, #8
 800a418:	af00      	add	r7, sp, #0
 800a41a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800a41c:	6878      	ldr	r0, [r7, #4]
 800a41e:	f000 fa76 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a422:	4603      	mov	r3, r0
 800a424:	4618      	mov	r0, r3
 800a426:	f7ff ffe4 	bl	800a3f2 <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800a42a:	4603      	mov	r3, r0
	}
 800a42c:	4618      	mov	r0, r3
 800a42e:	3708      	adds	r7, #8
 800a430:	46bd      	mov	sp, r7
 800a432:	bd80      	pop	{r7, pc}

0800a434 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800a434:	b5b0      	push	{r4, r5, r7, lr}
 800a436:	b082      	sub	sp, #8
 800a438:	af00      	add	r7, sp, #0
 800a43a:	6078      	str	r0, [r7, #4]
 800a43c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800a43e:	6878      	ldr	r0, [r7, #4]
 800a440:	f000 fa5a 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a444:	4604      	mov	r4, r0
 800a446:	6838      	ldr	r0, [r7, #0]
 800a448:	f000 fa61 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a44c:	4603      	mov	r3, r0
 800a44e:	4618      	mov	r0, r3
 800a450:	f7ff ffe0 	bl	800a414 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcSH_>
 800a454:	4603      	mov	r3, r0
 800a456:	4619      	mov	r1, r3
 800a458:	4620      	mov	r0, r4
 800a45a:	f000 fb02 	bl	800aa62 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>
		std::forward<_Variants>(__vars))...);
 800a45e:	462b      	mov	r3, r5
      }
 800a460:	4618      	mov	r0, r3
 800a462:	3708      	adds	r7, #8
 800a464:	46bd      	mov	sp, r7
 800a466:	bdb0      	pop	{r4, r5, r7, pc}

0800a468 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a468:	b5b0      	push	{r4, r5, r7, lr}
 800a46a:	b082      	sub	sp, #8
 800a46c:	af00      	add	r7, sp, #0
 800a46e:	6078      	str	r0, [r7, #4]
 800a470:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800a472:	6878      	ldr	r0, [r7, #4]
 800a474:	f000 fa40 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a478:	4604      	mov	r4, r0
 800a47a:	6838      	ldr	r0, [r7, #0]
 800a47c:	f000 fa47 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a480:	4603      	mov	r3, r0
 800a482:	4619      	mov	r1, r3
 800a484:	4620      	mov	r0, r4
 800a486:	f7ff ffd5 	bl	800a434 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESN_SR_>
				   std::forward<_Variants>(__vars)...);
 800a48a:	462b      	mov	r3, r5
      }
 800a48c:	4618      	mov	r0, r3
 800a48e:	3708      	adds	r7, #8
 800a490:	46bd      	mov	sp, r7
 800a492:	bdb0      	pop	{r4, r5, r7, pc}

0800a494 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESN_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800a494:	b5b0      	push	{r4, r5, r7, lr}
 800a496:	b082      	sub	sp, #8
 800a498:	af00      	add	r7, sp, #0
 800a49a:	6078      	str	r0, [r7, #4]
 800a49c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800a49e:	6878      	ldr	r0, [r7, #4]
 800a4a0:	f000 fa2a 	bl	800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a4a4:	4604      	mov	r4, r0
 800a4a6:	6838      	ldr	r0, [r7, #0]
 800a4a8:	f000 fa31 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a4ac:	4603      	mov	r3, r0
 800a4ae:	4619      	mov	r1, r3
 800a4b0:	4620      	mov	r0, r4
 800a4b2:	f7ff ffd9 	bl	800a468 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJSA_ifbEEERKSC_EEvOT0_OT1_EUlOT_E_RKSt7variantIJSA_ifbEEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESN_SR_>
				   std::forward<_Variants>(__vars)...);
 800a4b6:	462b      	mov	r3, r5
      }
 800a4b8:	4618      	mov	r0, r3
 800a4ba:	3708      	adds	r7, #8
 800a4bc:	46bd      	mov	sp, r7
 800a4be:	bdb0      	pop	{r4, r5, r7, pc}

0800a4c0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800a4c0:	b580      	push	{r7, lr}
 800a4c2:	b082      	sub	sp, #8
 800a4c4:	af00      	add	r7, sp, #0
 800a4c6:	6078      	str	r0, [r7, #4]
 800a4c8:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800a4ca:	683b      	ldr	r3, [r7, #0]
 800a4cc:	009b      	lsls	r3, r3, #2
 800a4ce:	687a      	ldr	r2, [r7, #4]
 800a4d0:	4413      	add	r3, r2
 800a4d2:	4618      	mov	r0, r3
 800a4d4:	f000 fadc 	bl	800aa90 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 800a4d8:	4603      	mov	r3, r0
	}
 800a4da:	4618      	mov	r0, r3
 800a4dc:	3708      	adds	r7, #8
 800a4de:	46bd      	mov	sp, r7
 800a4e0:	bd80      	pop	{r7, pc}
	...

0800a4e4 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800a4e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a4e6:	b085      	sub	sp, #20
 800a4e8:	af00      	add	r7, sp, #0
 800a4ea:	6078      	str	r0, [r7, #4]
 800a4ec:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800a4ee:	4b0f      	ldr	r3, [pc, #60]	; (800a52c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_+0x48>)
 800a4f0:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800a4f2:	6838      	ldr	r0, [r7, #0]
 800a4f4:	f7fc fcdc 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800a4f8:	4603      	mov	r3, r0
 800a4fa:	4619      	mov	r1, r3
 800a4fc:	68f8      	ldr	r0, [r7, #12]
 800a4fe:	f7ff ffdf 	bl	800a4c0 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSS_jDpT_>
 800a502:	4603      	mov	r3, r0
 800a504:	681b      	ldr	r3, [r3, #0]
 800a506:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800a508:	68bc      	ldr	r4, [r7, #8]
 800a50a:	6878      	ldr	r0, [r7, #4]
 800a50c:	f000 facb 	bl	800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a510:	4605      	mov	r5, r0
 800a512:	6838      	ldr	r0, [r7, #0]
 800a514:	f000 f9fb 	bl	800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>
 800a518:	4603      	mov	r3, r0
 800a51a:	4619      	mov	r1, r3
 800a51c:	4628      	mov	r0, r5
 800a51e:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800a520:	4633      	mov	r3, r6
    }
 800a522:	4618      	mov	r0, r3
 800a524:	3714      	adds	r7, #20
 800a526:	46bd      	mov	sp, r7
 800a528:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a52a:	bf00      	nop
 800a52c:	08025220 	.word	0x08025220

0800a530 <_ZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 800a530:	b580      	push	{r7, lr}
 800a532:	b084      	sub	sp, #16
 800a534:	af00      	add	r7, sp, #0
 800a536:	6078      	str	r0, [r7, #4]
 800a538:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 800a53a:	683b      	ldr	r3, [r7, #0]
 800a53c:	7e1a      	ldrb	r2, [r3, #24]
 800a53e:	687b      	ldr	r3, [r7, #4]
 800a540:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800a542:	687b      	ldr	r3, [r7, #4]
 800a544:	60fb      	str	r3, [r7, #12]
 800a546:	6838      	ldr	r0, [r7, #0]
 800a548:	f000 f9cb 	bl	800a8e2 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>
 800a54c:	4603      	mov	r3, r0
 800a54e:	4618      	mov	r0, r3
 800a550:	f7ff fd5f 	bl	800a012 <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJS5_ifbEEEEDcOT0_>
 800a554:	4602      	mov	r2, r0
 800a556:	f107 030c 	add.w	r3, r7, #12
 800a55a:	4611      	mov	r1, r2
 800a55c:	4618      	mov	r0, r3
 800a55e:	f7ff ffc1 	bl	800a4e4 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJS8_ifbEEEEDcSH_DpOT2_>
    }
 800a562:	bf00      	nop
 800a564:	3710      	adds	r7, #16
 800a566:	46bd      	mov	sp, r7
 800a568:	bd80      	pop	{r7, pc}

0800a56a <_ZSt9addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
   *  @param  __r  Reference to an object or function.
   *  @return   The actual address.
  */
  template<typename _Tp>
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
 800a56a:	b580      	push	{r7, lr}
 800a56c:	b082      	sub	sp, #8
 800a56e:	af00      	add	r7, sp, #0
 800a570:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800a572:	6878      	ldr	r0, [r7, #4]
 800a574:	f000 faa2 	bl	800aabc <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>
 800a578:	4603      	mov	r3, r0
 800a57a:	4618      	mov	r0, r3
 800a57c:	3708      	adds	r7, #8
 800a57e:	46bd      	mov	sp, r7
 800a580:	bd80      	pop	{r7, pc}

0800a582 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 800a582:	b480      	push	{r7}
 800a584:	b083      	sub	sp, #12
 800a586:	af00      	add	r7, sp, #0
 800a588:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 800a58a:	687b      	ldr	r3, [r7, #4]
 800a58c:	689b      	ldr	r3, [r3, #8]
      }
 800a58e:	4618      	mov	r0, r3
 800a590:	370c      	adds	r7, #12
 800a592:	46bd      	mov	sp, r7
 800a594:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a598:	4770      	bx	lr

0800a59a <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 800a59a:	b480      	push	{r7}
 800a59c:	b083      	sub	sp, #12
 800a59e:	af00      	add	r7, sp, #0
 800a5a0:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800a5a2:	687b      	ldr	r3, [r7, #4]
 800a5a4:	3304      	adds	r3, #4
 800a5a6:	4618      	mov	r0, r3
 800a5a8:	370c      	adds	r7, #12
 800a5aa:	46bd      	mov	sp, r7
 800a5ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5b0:	4770      	bx	lr

0800a5b2 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800a5b2:	b590      	push	{r4, r7, lr}
 800a5b4:	b087      	sub	sp, #28
 800a5b6:	af00      	add	r7, sp, #0
 800a5b8:	60f8      	str	r0, [r7, #12]
 800a5ba:	60b9      	str	r1, [r7, #8]
 800a5bc:	607a      	str	r2, [r7, #4]
 800a5be:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800a5c0:	68bb      	ldr	r3, [r7, #8]
 800a5c2:	2b00      	cmp	r3, #0
 800a5c4:	d01b      	beq.n	800a5fe <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 800a5c6:	68fc      	ldr	r4, [r7, #12]
 800a5c8:	68b8      	ldr	r0, [r7, #8]
 800a5ca:	f7f8 ff2b 	bl	8003424 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 800a5ce:	4603      	mov	r3, r0
 800a5d0:	683a      	ldr	r2, [r7, #0]
 800a5d2:	4619      	mov	r1, r3
 800a5d4:	4620      	mov	r0, r4
 800a5d6:	f7f8 fb4a 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 800a5da:	4603      	mov	r3, r0
 800a5dc:	f083 0301 	eor.w	r3, r3, #1
 800a5e0:	b2db      	uxtb	r3, r3
 800a5e2:	2b00      	cmp	r3, #0
 800a5e4:	d006      	beq.n	800a5f4 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 800a5e6:	68bb      	ldr	r3, [r7, #8]
 800a5e8:	607b      	str	r3, [r7, #4]
 800a5ea:	68b8      	ldr	r0, [r7, #8]
 800a5ec:	f000 fa71 	bl	800aad2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 800a5f0:	60b8      	str	r0, [r7, #8]
 800a5f2:	e7e5      	b.n	800a5c0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 800a5f4:	68b8      	ldr	r0, [r7, #8]
 800a5f6:	f000 fa78 	bl	800aaea <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 800a5fa:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 800a5fc:	e7e0      	b.n	800a5c0 <_ZNKSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 800a5fe:	f107 0314 	add.w	r3, r7, #20
 800a602:	6879      	ldr	r1, [r7, #4]
 800a604:	4618      	mov	r0, r3
 800a606:	f000 f819 	bl	800a63c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>
 800a60a:	697b      	ldr	r3, [r7, #20]
    }
 800a60c:	4618      	mov	r0, r3
 800a60e:	371c      	adds	r7, #28
 800a610:	46bd      	mov	sp, r7
 800a612:	bd90      	pop	{r4, r7, pc}

0800a614 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800a614:	b480      	push	{r7}
 800a616:	b083      	sub	sp, #12
 800a618:	af00      	add	r7, sp, #0
 800a61a:	6078      	str	r0, [r7, #4]
 800a61c:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800a61e:	687b      	ldr	r3, [r7, #4]
 800a620:	681a      	ldr	r2, [r3, #0]
 800a622:	683b      	ldr	r3, [r7, #0]
 800a624:	681b      	ldr	r3, [r3, #0]
 800a626:	429a      	cmp	r2, r3
 800a628:	bf0c      	ite	eq
 800a62a:	2301      	moveq	r3, #1
 800a62c:	2300      	movne	r3, #0
 800a62e:	b2db      	uxtb	r3, r3
 800a630:	4618      	mov	r0, r3
 800a632:	370c      	adds	r7, #12
 800a634:	46bd      	mov	sp, r7
 800a636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a63a:	4770      	bx	lr

0800a63c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800a63c:	b480      	push	{r7}
 800a63e:	b083      	sub	sp, #12
 800a640:	af00      	add	r7, sp, #0
 800a642:	6078      	str	r0, [r7, #4]
 800a644:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800a646:	687b      	ldr	r3, [r7, #4]
 800a648:	683a      	ldr	r2, [r7, #0]
 800a64a:	601a      	str	r2, [r3, #0]
 800a64c:	687b      	ldr	r3, [r7, #4]
 800a64e:	4618      	mov	r0, r3
 800a650:	370c      	adds	r7, #12
 800a652:	46bd      	mov	sp, r7
 800a654:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a658:	4770      	bx	lr

0800a65a <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 800a65a:	b480      	push	{r7}
 800a65c:	b083      	sub	sp, #12
 800a65e:	af00      	add	r7, sp, #0
 800a660:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 800a662:	687b      	ldr	r3, [r7, #4]
 800a664:	689b      	ldr	r3, [r3, #8]
      }
 800a666:	4618      	mov	r0, r3
 800a668:	370c      	adds	r7, #12
 800a66a:	46bd      	mov	sp, r7
 800a66c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a670:	4770      	bx	lr

0800a672 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 800a672:	b480      	push	{r7}
 800a674:	b083      	sub	sp, #12
 800a676:	af00      	add	r7, sp, #0
 800a678:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800a67a:	687b      	ldr	r3, [r7, #4]
 800a67c:	3304      	adds	r3, #4
 800a67e:	4618      	mov	r0, r3
 800a680:	370c      	adds	r7, #12
 800a682:	46bd      	mov	sp, r7
 800a684:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a688:	4770      	bx	lr

0800a68a <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800a68a:	b590      	push	{r4, r7, lr}
 800a68c:	b087      	sub	sp, #28
 800a68e:	af00      	add	r7, sp, #0
 800a690:	60f8      	str	r0, [r7, #12]
 800a692:	60b9      	str	r1, [r7, #8]
 800a694:	607a      	str	r2, [r7, #4]
 800a696:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800a698:	68bb      	ldr	r3, [r7, #8]
 800a69a:	2b00      	cmp	r3, #0
 800a69c:	d01b      	beq.n	800a6d6 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 800a69e:	68fc      	ldr	r4, [r7, #12]
 800a6a0:	68b8      	ldr	r0, [r7, #8]
 800a6a2:	f7f9 f814 	bl	80036ce <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE6_S_keyEPKSt13_Rb_tree_nodeIS3_E>
 800a6a6:	4603      	mov	r3, r0
 800a6a8:	683a      	ldr	r2, [r7, #0]
 800a6aa:	4619      	mov	r1, r3
 800a6ac:	4620      	mov	r0, r4
 800a6ae:	f7f8 fade 	bl	8002c6e <_ZNKSt4lessIcEclERKcS2_>
 800a6b2:	4603      	mov	r3, r0
 800a6b4:	f083 0301 	eor.w	r3, r3, #1
 800a6b8:	b2db      	uxtb	r3, r3
 800a6ba:	2b00      	cmp	r3, #0
 800a6bc:	d006      	beq.n	800a6cc <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0x42>
	  __y = __x, __x = _S_left(__x);
 800a6be:	68bb      	ldr	r3, [r7, #8]
 800a6c0:	607b      	str	r3, [r7, #4]
 800a6c2:	68b8      	ldr	r0, [r7, #8]
 800a6c4:	f000 fa1d 	bl	800ab02 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>
 800a6c8:	60b8      	str	r0, [r7, #8]
 800a6ca:	e7e5      	b.n	800a698 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
	  __x = _S_right(__x);
 800a6cc:	68b8      	ldr	r0, [r7, #8]
 800a6ce:	f000 fa24 	bl	800ab1a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>
 800a6d2:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 800a6d4:	e7e0      	b.n	800a698 <_ZNKSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS3_EPKSt18_Rb_tree_node_baseRS1_+0xe>
      return const_iterator(__y);
 800a6d6:	f107 0314 	add.w	r3, r7, #20
 800a6da:	6879      	ldr	r1, [r7, #4]
 800a6dc:	4618      	mov	r0, r3
 800a6de:	f000 f819 	bl	800a714 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>
 800a6e2:	697b      	ldr	r3, [r7, #20]
    }
 800a6e4:	4618      	mov	r0, r3
 800a6e6:	371c      	adds	r7, #28
 800a6e8:	46bd      	mov	sp, r7
 800a6ea:	bd90      	pop	{r4, r7, pc}

0800a6ec <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEES6_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800a6ec:	b480      	push	{r7}
 800a6ee:	b083      	sub	sp, #12
 800a6f0:	af00      	add	r7, sp, #0
 800a6f2:	6078      	str	r0, [r7, #4]
 800a6f4:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800a6f6:	687b      	ldr	r3, [r7, #4]
 800a6f8:	681a      	ldr	r2, [r3, #0]
 800a6fa:	683b      	ldr	r3, [r7, #0]
 800a6fc:	681b      	ldr	r3, [r3, #0]
 800a6fe:	429a      	cmp	r2, r3
 800a700:	bf0c      	ite	eq
 800a702:	2301      	moveq	r3, #1
 800a704:	2300      	movne	r3, #0
 800a706:	b2db      	uxtb	r3, r3
 800a708:	4618      	mov	r0, r3
 800a70a:	370c      	adds	r7, #12
 800a70c:	46bd      	mov	sp, r7
 800a70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a712:	4770      	bx	lr

0800a714 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKc12double_tokenEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800a714:	b480      	push	{r7}
 800a716:	b083      	sub	sp, #12
 800a718:	af00      	add	r7, sp, #0
 800a71a:	6078      	str	r0, [r7, #4]
 800a71c:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800a71e:	687b      	ldr	r3, [r7, #4]
 800a720:	683a      	ldr	r2, [r7, #0]
 800a722:	601a      	str	r2, [r3, #0]
 800a724:	687b      	ldr	r3, [r7, #4]
 800a726:	4618      	mov	r0, r3
 800a728:	370c      	adds	r7, #12
 800a72a:	46bd      	mov	sp, r7
 800a72c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a730:	4770      	bx	lr

0800a732 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() const _GLIBCXX_NOEXCEPT
 800a732:	b480      	push	{r7}
 800a734:	b083      	sub	sp, #12
 800a736:	af00      	add	r7, sp, #0
 800a738:	6078      	str	r0, [r7, #4]
	  (this->_M_impl._M_header._M_parent);
 800a73a:	687b      	ldr	r3, [r7, #4]
 800a73c:	689b      	ldr	r3, [r3, #8]
      }
 800a73e:	4618      	mov	r0, r3
 800a740:	370c      	adds	r7, #12
 800a742:	46bd      	mov	sp, r7
 800a744:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a748:	4770      	bx	lr

0800a74a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() const _GLIBCXX_NOEXCEPT
 800a74a:	b480      	push	{r7}
 800a74c:	b083      	sub	sp, #12
 800a74e:	af00      	add	r7, sp, #0
 800a750:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 800a752:	687b      	ldr	r3, [r7, #4]
 800a754:	3304      	adds	r3, #4
 800a756:	4618      	mov	r0, r3
 800a758:	370c      	adds	r7, #12
 800a75a:	46bd      	mov	sp, r7
 800a75c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a760:	4770      	bx	lr

0800a762 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800a762:	b590      	push	{r4, r7, lr}
 800a764:	b087      	sub	sp, #28
 800a766:	af00      	add	r7, sp, #0
 800a768:	60f8      	str	r0, [r7, #12]
 800a76a:	60b9      	str	r1, [r7, #8]
 800a76c:	607a      	str	r2, [r7, #4]
 800a76e:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800a770:	68bb      	ldr	r3, [r7, #8]
 800a772:	2b00      	cmp	r3, #0
 800a774:	d01b      	beq.n	800a7ae <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 800a776:	68fc      	ldr	r4, [r7, #12]
 800a778:	68b8      	ldr	r0, [r7, #8]
 800a77a:	f7f8 fefb 	bl	8003574 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 800a77e:	4603      	mov	r3, r0
 800a780:	683a      	ldr	r2, [r7, #0]
 800a782:	4619      	mov	r1, r3
 800a784:	4620      	mov	r0, r4
 800a786:	f7f8 fc07 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800a78a:	4603      	mov	r3, r0
 800a78c:	f083 0301 	eor.w	r3, r3, #1
 800a790:	b2db      	uxtb	r3, r3
 800a792:	2b00      	cmp	r3, #0
 800a794:	d006      	beq.n	800a7a4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 800a796:	68bb      	ldr	r3, [r7, #8]
 800a798:	607b      	str	r3, [r7, #4]
 800a79a:	68b8      	ldr	r0, [r7, #8]
 800a79c:	f000 f9c9 	bl	800ab32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>
 800a7a0:	60b8      	str	r0, [r7, #8]
 800a7a2:	e7e5      	b.n	800a770 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 800a7a4:	68b8      	ldr	r0, [r7, #8]
 800a7a6:	f000 f9d0 	bl	800ab4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>
 800a7aa:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 800a7ac:	e7e0      	b.n	800a770 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS9_EPKSt18_Rb_tree_node_baseRS7_+0xe>
      return const_iterator(__y);
 800a7ae:	f107 0314 	add.w	r3, r7, #20
 800a7b2:	6879      	ldr	r1, [r7, #4]
 800a7b4:	4618      	mov	r0, r3
 800a7b6:	f000 f819 	bl	800a7ec <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>
 800a7ba:	697b      	ldr	r3, [r7, #20]
    }
 800a7bc:	4618      	mov	r0, r3
 800a7be:	371c      	adds	r7, #28
 800a7c0:	46bd      	mov	sp, r7
 800a7c2:	bd90      	pop	{r4, r7, pc}

0800a7c4 <_ZSteqRKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800a7c4:	b480      	push	{r7}
 800a7c6:	b083      	sub	sp, #12
 800a7c8:	af00      	add	r7, sp, #0
 800a7ca:	6078      	str	r0, [r7, #4]
 800a7cc:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800a7ce:	687b      	ldr	r3, [r7, #4]
 800a7d0:	681a      	ldr	r2, [r3, #0]
 800a7d2:	683b      	ldr	r3, [r7, #0]
 800a7d4:	681b      	ldr	r3, [r3, #0]
 800a7d6:	429a      	cmp	r2, r3
 800a7d8:	bf0c      	ite	eq
 800a7da:	2301      	moveq	r3, #1
 800a7dc:	2300      	movne	r3, #0
 800a7de:	b2db      	uxtb	r3, r3
 800a7e0:	4618      	mov	r0, r3
 800a7e2:	370c      	adds	r7, #12
 800a7e4:	46bd      	mov	sp, r7
 800a7e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7ea:	4770      	bx	lr

0800a7ec <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800a7ec:	b480      	push	{r7}
 800a7ee:	b083      	sub	sp, #12
 800a7f0:	af00      	add	r7, sp, #0
 800a7f2:	6078      	str	r0, [r7, #4]
 800a7f4:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 800a7f6:	687b      	ldr	r3, [r7, #4]
 800a7f8:	683a      	ldr	r2, [r7, #0]
 800a7fa:	601a      	str	r2, [r3, #0]
 800a7fc:	687b      	ldr	r3, [r7, #4]
 800a7fe:	4618      	mov	r0, r3
 800a800:	370c      	adds	r7, #12
 800a802:	46bd      	mov	sp, r7
 800a804:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a808:	4770      	bx	lr

0800a80a <_ZSt28__variant_construct_by_indexILj0ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800a80a:	b590      	push	{r4, r7, lr}
 800a80c:	b085      	sub	sp, #20
 800a80e:	af00      	add	r7, sp, #0
 800a810:	6078      	str	r0, [r7, #4]
 800a812:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800a814:	687b      	ldr	r3, [r7, #4]
 800a816:	2200      	movs	r2, #0
 800a818:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800a81a:	6878      	ldr	r0, [r7, #4]
 800a81c:	f7fc fbc8 	bl	8006fb0 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800a820:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800a822:	6838      	ldr	r0, [r7, #0]
 800a824:	f7ff fb5a 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 800a828:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 800a82a:	68f8      	ldr	r0, [r7, #12]
 800a82c:	f000 f999 	bl	800ab62 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800a830:	4603      	mov	r3, r0
 800a832:	4619      	mov	r1, r3
 800a834:	2018      	movs	r0, #24
 800a836:	f7f6 fbf9 	bl	800102c <_ZnwjPv>
 800a83a:	4603      	mov	r3, r0
 800a83c:	4621      	mov	r1, r4
 800a83e:	4618      	mov	r0, r3
 800a840:	f015 fe9f 	bl	8020582 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 800a844:	bf00      	nop
 800a846:	3714      	adds	r7, #20
 800a848:	46bd      	mov	sp, r7
 800a84a:	bd90      	pop	{r4, r7, pc}

0800a84c <_ZSt28__variant_construct_by_indexILj1ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800a84c:	b590      	push	{r4, r7, lr}
 800a84e:	b085      	sub	sp, #20
 800a850:	af00      	add	r7, sp, #0
 800a852:	6078      	str	r0, [r7, #4]
 800a854:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800a856:	687b      	ldr	r3, [r7, #4]
 800a858:	2201      	movs	r2, #1
 800a85a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800a85c:	6878      	ldr	r0, [r7, #4]
 800a85e:	f7fc fb5d 	bl	8006f1c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800a862:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800a864:	6838      	ldr	r0, [r7, #0]
 800a866:	f7fd faf9 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 800a86a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800a86c:	681c      	ldr	r4, [r3, #0]
 800a86e:	68f8      	ldr	r0, [r7, #12]
 800a870:	f000 f983 	bl	800ab7a <_ZSt9addressofIiEPT_RS0_>
 800a874:	4603      	mov	r3, r0
 800a876:	4619      	mov	r1, r3
 800a878:	2004      	movs	r0, #4
 800a87a:	f7f6 fbd7 	bl	800102c <_ZnwjPv>
 800a87e:	4603      	mov	r3, r0
 800a880:	601c      	str	r4, [r3, #0]
    }
 800a882:	bf00      	nop
 800a884:	3714      	adds	r7, #20
 800a886:	46bd      	mov	sp, r7
 800a888:	bd90      	pop	{r4, r7, pc}

0800a88a <_ZSt28__variant_construct_by_indexILj2ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800a88a:	b590      	push	{r4, r7, lr}
 800a88c:	b085      	sub	sp, #20
 800a88e:	af00      	add	r7, sp, #0
 800a890:	6078      	str	r0, [r7, #4]
 800a892:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800a894:	687b      	ldr	r3, [r7, #4]
 800a896:	2202      	movs	r2, #2
 800a898:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800a89a:	6878      	ldr	r0, [r7, #4]
 800a89c:	f7fc fc7a 	bl	8007194 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800a8a0:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800a8a2:	6838      	ldr	r0, [r7, #0]
 800a8a4:	f7ff fb74 	bl	8009f90 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 800a8a8:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800a8aa:	681c      	ldr	r4, [r3, #0]
 800a8ac:	68f8      	ldr	r0, [r7, #12]
 800a8ae:	f000 f970 	bl	800ab92 <_ZSt9addressofIfEPT_RS0_>
 800a8b2:	4603      	mov	r3, r0
 800a8b4:	4619      	mov	r1, r3
 800a8b6:	2004      	movs	r0, #4
 800a8b8:	f7f6 fbb8 	bl	800102c <_ZnwjPv>
 800a8bc:	4603      	mov	r3, r0
 800a8be:	601c      	str	r4, [r3, #0]
    }
 800a8c0:	bf00      	nop
 800a8c2:	3714      	adds	r7, #20
 800a8c4:	46bd      	mov	sp, r7
 800a8c6:	bd90      	pop	{r4, r7, pc}

0800a8c8 <_ZNSt8__detail9__variant15_Variadic_unionIJifbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 800a8c8:	b580      	push	{r7, lr}
 800a8ca:	b082      	sub	sp, #8
 800a8cc:	af00      	add	r7, sp, #0
 800a8ce:	6078      	str	r0, [r7, #4]
 800a8d0:	687b      	ldr	r3, [r7, #4]
 800a8d2:	4618      	mov	r0, r3
 800a8d4:	f000 f969 	bl	800abaa <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>
 800a8d8:	687b      	ldr	r3, [r7, #4]
 800a8da:	4618      	mov	r0, r3
 800a8dc:	3708      	adds	r7, #8
 800a8de:	46bd      	mov	sp, r7
 800a8e0:	bd80      	pop	{r7, pc}

0800a8e2 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a8e2:	b480      	push	{r7}
 800a8e4:	b083      	sub	sp, #12
 800a8e6:	af00      	add	r7, sp, #0
 800a8e8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a8ea:	687b      	ldr	r3, [r7, #4]
 800a8ec:	4618      	mov	r0, r3
 800a8ee:	370c      	adds	r7, #12
 800a8f0:	46bd      	mov	sp, r7
 800a8f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8f6:	4770      	bx	lr

0800a8f8 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a8f8:	b480      	push	{r7}
 800a8fa:	b083      	sub	sp, #12
 800a8fc:	af00      	add	r7, sp, #0
 800a8fe:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a900:	687b      	ldr	r3, [r7, #4]
 800a902:	4618      	mov	r0, r3
 800a904:	370c      	adds	r7, #12
 800a906:	46bd      	mov	sp, r7
 800a908:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a90c:	4770      	bx	lr

0800a90e <_ZSt7forwardIRKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a90e:	b480      	push	{r7}
 800a910:	b083      	sub	sp, #12
 800a912:	af00      	add	r7, sp, #0
 800a914:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a916:	687b      	ldr	r3, [r7, #4]
 800a918:	4618      	mov	r0, r3
 800a91a:	370c      	adds	r7, #12
 800a91c:	46bd      	mov	sp, r7
 800a91e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a922:	4770      	bx	lr

0800a924 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a924:	b480      	push	{r7}
 800a926:	b083      	sub	sp, #12
 800a928:	af00      	add	r7, sp, #0
 800a92a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a92c:	687b      	ldr	r3, [r7, #4]
 800a92e:	4618      	mov	r0, r3
 800a930:	370c      	adds	r7, #12
 800a932:	46bd      	mov	sp, r7
 800a934:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a938:	4770      	bx	lr

0800a93a <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 800a93a:	b580      	push	{r7, lr}
 800a93c:	b082      	sub	sp, #8
 800a93e:	af00      	add	r7, sp, #0
 800a940:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 800a942:	687b      	ldr	r3, [r7, #4]
 800a944:	4618      	mov	r0, r3
 800a946:	f000 f93d 	bl	800abc4 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 800a94a:	4603      	mov	r3, r0
 800a94c:	4618      	mov	r0, r3
 800a94e:	3708      	adds	r7, #8
 800a950:	46bd      	mov	sp, r7
 800a952:	bd80      	pop	{r7, pc}

0800a954 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a954:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a956:	b083      	sub	sp, #12
 800a958:	af00      	add	r7, sp, #0
 800a95a:	6078      	str	r0, [r7, #4]
 800a95c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a95e:	6878      	ldr	r0, [r7, #4]
 800a960:	f000 f8a1 	bl	800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a964:	4604      	mov	r4, r0
 800a966:	6838      	ldr	r0, [r7, #0]
 800a968:	f000 f938 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800a96c:	4603      	mov	r3, r0
 800a96e:	461a      	mov	r2, r3
 800a970:	4621      	mov	r1, r4
 800a972:	4628      	mov	r0, r5
 800a974:	f000 f93d 	bl	800abf2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 800a978:	4633      	mov	r3, r6
    }
 800a97a:	4618      	mov	r0, r3
 800a97c:	370c      	adds	r7, #12
 800a97e:	46bd      	mov	sp, r7
 800a980:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a982 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a982:	b480      	push	{r7}
 800a984:	b083      	sub	sp, #12
 800a986:	af00      	add	r7, sp, #0
 800a988:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a98a:	687b      	ldr	r3, [r7, #4]
 800a98c:	4618      	mov	r0, r3
 800a98e:	370c      	adds	r7, #12
 800a990:	46bd      	mov	sp, r7
 800a992:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a996:	4770      	bx	lr

0800a998 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 800a998:	b480      	push	{r7}
 800a99a:	b083      	sub	sp, #12
 800a99c:	af00      	add	r7, sp, #0
 800a99e:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800a9a0:	687b      	ldr	r3, [r7, #4]
 800a9a2:	4618      	mov	r0, r3
 800a9a4:	370c      	adds	r7, #12
 800a9a6:	46bd      	mov	sp, r7
 800a9a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9ac:	4770      	bx	lr

0800a9ae <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800a9ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a9b0:	b083      	sub	sp, #12
 800a9b2:	af00      	add	r7, sp, #0
 800a9b4:	6078      	str	r0, [r7, #4]
 800a9b6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800a9b8:	6878      	ldr	r0, [r7, #4]
 800a9ba:	f000 f874 	bl	800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800a9be:	4604      	mov	r4, r0
 800a9c0:	6838      	ldr	r0, [r7, #0]
 800a9c2:	f000 f92d 	bl	800ac20 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800a9c6:	4603      	mov	r3, r0
 800a9c8:	461a      	mov	r2, r3
 800a9ca:	4621      	mov	r1, r4
 800a9cc:	4628      	mov	r0, r5
 800a9ce:	f000 f932 	bl	800ac36 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 800a9d2:	4633      	mov	r3, r6
    }
 800a9d4:	4618      	mov	r0, r3
 800a9d6:	370c      	adds	r7, #12
 800a9d8:	46bd      	mov	sp, r7
 800a9da:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800a9dc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800a9dc:	b480      	push	{r7}
 800a9de:	b083      	sub	sp, #12
 800a9e0:	af00      	add	r7, sp, #0
 800a9e2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800a9e4:	687b      	ldr	r3, [r7, #4]
 800a9e6:	4618      	mov	r0, r3
 800a9e8:	370c      	adds	r7, #12
 800a9ea:	46bd      	mov	sp, r7
 800a9ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9f0:	4770      	bx	lr

0800a9f2 <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 800a9f2:	b480      	push	{r7}
 800a9f4:	b083      	sub	sp, #12
 800a9f6:	af00      	add	r7, sp, #0
 800a9f8:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	4618      	mov	r0, r3
 800a9fe:	370c      	adds	r7, #12
 800aa00:	46bd      	mov	sp, r7
 800aa02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa06:	4770      	bx	lr

0800aa08 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800aa08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa0a:	b083      	sub	sp, #12
 800aa0c:	af00      	add	r7, sp, #0
 800aa0e:	6078      	str	r0, [r7, #4]
 800aa10:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800aa12:	6878      	ldr	r0, [r7, #4]
 800aa14:	f000 f847 	bl	800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800aa18:	4604      	mov	r4, r0
 800aa1a:	6838      	ldr	r0, [r7, #0]
 800aa1c:	f000 f922 	bl	800ac64 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800aa20:	4603      	mov	r3, r0
 800aa22:	461a      	mov	r2, r3
 800aa24:	4621      	mov	r1, r4
 800aa26:	4628      	mov	r0, r5
 800aa28:	f000 f927 	bl	800ac7a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 800aa2c:	4633      	mov	r3, r6
    }
 800aa2e:	4618      	mov	r0, r3
 800aa30:	370c      	adds	r7, #12
 800aa32:	46bd      	mov	sp, r7
 800aa34:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800aa36 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800aa36:	b480      	push	{r7}
 800aa38:	b083      	sub	sp, #12
 800aa3a:	af00      	add	r7, sp, #0
 800aa3c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800aa3e:	687b      	ldr	r3, [r7, #4]
 800aa40:	4618      	mov	r0, r3
 800aa42:	370c      	adds	r7, #12
 800aa44:	46bd      	mov	sp, r7
 800aa46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa4a:	4770      	bx	lr

0800aa4c <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr const _Type& _M_get() const & noexcept
 800aa4c:	b480      	push	{r7}
 800aa4e:	b083      	sub	sp, #12
 800aa50:	af00      	add	r7, sp, #0
 800aa52:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800aa54:	687b      	ldr	r3, [r7, #4]
 800aa56:	4618      	mov	r0, r3
 800aa58:	370c      	adds	r7, #12
 800aa5a:	46bd      	mov	sp, r7
 800aa5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa60:	4770      	bx	lr

0800aa62 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISI_JDpT0_EE4typeESJ_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800aa62:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa64:	b083      	sub	sp, #12
 800aa66:	af00      	add	r7, sp, #0
 800aa68:	6078      	str	r0, [r7, #4]
 800aa6a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800aa6c:	6878      	ldr	r0, [r7, #4]
 800aa6e:	f000 f81a 	bl	800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800aa72:	4604      	mov	r4, r0
 800aa74:	6838      	ldr	r0, [r7, #0]
 800aa76:	f000 f917 	bl	800aca8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800aa7a:	4603      	mov	r3, r0
 800aa7c:	461a      	mov	r2, r3
 800aa7e:	4621      	mov	r1, r4
 800aa80:	4628      	mov	r0, r5
 800aa82:	f000 f91c 	bl	800acbe <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>
					std::forward<_Args>(__args)...);
 800aa86:	4633      	mov	r3, r6
    }
 800aa88:	4618      	mov	r0, r3
 800aa8a:	370c      	adds	r7, #12
 800aa8c:	46bd      	mov	sp, r7
 800aa8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800aa90 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_RKSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 800aa90:	b480      	push	{r7}
 800aa92:	b083      	sub	sp, #12
 800aa94:	af00      	add	r7, sp, #0
 800aa96:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800aa98:	687b      	ldr	r3, [r7, #4]
 800aa9a:	4618      	mov	r0, r3
 800aa9c:	370c      	adds	r7, #12
 800aa9e:	46bd      	mov	sp, r7
 800aaa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaa4:	4770      	bx	lr

0800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800aaa6:	b480      	push	{r7}
 800aaa8:	b083      	sub	sp, #12
 800aaaa:	af00      	add	r7, sp, #0
 800aaac:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800aaae:	687b      	ldr	r3, [r7, #4]
 800aab0:	4618      	mov	r0, r3
 800aab2:	370c      	adds	r7, #12
 800aab4:	46bd      	mov	sp, r7
 800aab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaba:	4770      	bx	lr

0800aabc <_ZSt11__addressofIN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEPT_RS9_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800aabc:	b480      	push	{r7}
 800aabe:	b083      	sub	sp, #12
 800aac0:	af00      	add	r7, sp, #0
 800aac2:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800aac4:	687b      	ldr	r3, [r7, #4]
 800aac6:	4618      	mov	r0, r3
 800aac8:	370c      	adds	r7, #12
 800aaca:	46bd      	mov	sp, r7
 800aacc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aad0:	4770      	bx	lr

0800aad2 <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800aad2:	b480      	push	{r7}
 800aad4:	b083      	sub	sp, #12
 800aad6:	af00      	add	r7, sp, #0
 800aad8:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 800aada:	687b      	ldr	r3, [r7, #4]
 800aadc:	689b      	ldr	r3, [r3, #8]
 800aade:	4618      	mov	r0, r3
 800aae0:	370c      	adds	r7, #12
 800aae2:	46bd      	mov	sp, r7
 800aae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aae8:	4770      	bx	lr

0800aaea <_ZNSt8_Rb_treeIcSt4pairIKc10token_typeESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800aaea:	b480      	push	{r7}
 800aaec:	b083      	sub	sp, #12
 800aaee:	af00      	add	r7, sp, #0
 800aaf0:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 800aaf2:	687b      	ldr	r3, [r7, #4]
 800aaf4:	68db      	ldr	r3, [r3, #12]
 800aaf6:	4618      	mov	r0, r3
 800aaf8:	370c      	adds	r7, #12
 800aafa:	46bd      	mov	sp, r7
 800aafc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab00:	4770      	bx	lr

0800ab02 <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800ab02:	b480      	push	{r7}
 800ab04:	b083      	sub	sp, #12
 800ab06:	af00      	add	r7, sp, #0
 800ab08:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 800ab0a:	687b      	ldr	r3, [r7, #4]
 800ab0c:	689b      	ldr	r3, [r3, #8]
 800ab0e:	4618      	mov	r0, r3
 800ab10:	370c      	adds	r7, #12
 800ab12:	46bd      	mov	sp, r7
 800ab14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab18:	4770      	bx	lr

0800ab1a <_ZNSt8_Rb_treeIcSt4pairIKc12double_tokenESt10_Select1stIS3_ESt4lessIcESaIS3_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800ab1a:	b480      	push	{r7}
 800ab1c:	b083      	sub	sp, #12
 800ab1e:	af00      	add	r7, sp, #0
 800ab20:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 800ab22:	687b      	ldr	r3, [r7, #4]
 800ab24:	68db      	ldr	r3, [r3, #12]
 800ab26:	4618      	mov	r0, r3
 800ab28:	370c      	adds	r7, #12
 800ab2a:	46bd      	mov	sp, r7
 800ab2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab30:	4770      	bx	lr

0800ab32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPKSt18_Rb_tree_node_base>:
      _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800ab32:	b480      	push	{r7}
 800ab34:	b083      	sub	sp, #12
 800ab36:	af00      	add	r7, sp, #0
 800ab38:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_left); }
 800ab3a:	687b      	ldr	r3, [r7, #4]
 800ab3c:	689b      	ldr	r3, [r3, #8]
 800ab3e:	4618      	mov	r0, r3
 800ab40:	370c      	adds	r7, #12
 800ab42:	46bd      	mov	sp, r7
 800ab44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab48:	4770      	bx	lr

0800ab4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_10token_typeESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPKSt18_Rb_tree_node_base>:
      _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800ab4a:	b480      	push	{r7}
 800ab4c:	b083      	sub	sp, #12
 800ab4e:	af00      	add	r7, sp, #0
 800ab50:	6078      	str	r0, [r7, #4]
      { return static_cast<_Const_Link_type>(__x->_M_right); }
 800ab52:	687b      	ldr	r3, [r7, #4]
 800ab54:	68db      	ldr	r3, [r3, #12]
 800ab56:	4618      	mov	r0, r3
 800ab58:	370c      	adds	r7, #12
 800ab5a:	46bd      	mov	sp, r7
 800ab5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab60:	4770      	bx	lr

0800ab62 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
    addressof(_Tp& __r) noexcept
 800ab62:	b580      	push	{r7, lr}
 800ab64:	b082      	sub	sp, #8
 800ab66:	af00      	add	r7, sp, #0
 800ab68:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800ab6a:	6878      	ldr	r0, [r7, #4]
 800ab6c:	f7fb fbf3 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 800ab70:	4603      	mov	r3, r0
 800ab72:	4618      	mov	r0, r3
 800ab74:	3708      	adds	r7, #8
 800ab76:	46bd      	mov	sp, r7
 800ab78:	bd80      	pop	{r7, pc}

0800ab7a <_ZSt9addressofIiEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 800ab7a:	b580      	push	{r7, lr}
 800ab7c:	b082      	sub	sp, #8
 800ab7e:	af00      	add	r7, sp, #0
 800ab80:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800ab82:	6878      	ldr	r0, [r7, #4]
 800ab84:	f7fb fbbd 	bl	8006302 <_ZSt11__addressofIiEPT_RS0_>
 800ab88:	4603      	mov	r3, r0
 800ab8a:	4618      	mov	r0, r3
 800ab8c:	3708      	adds	r7, #8
 800ab8e:	46bd      	mov	sp, r7
 800ab90:	bd80      	pop	{r7, pc}

0800ab92 <_ZSt9addressofIfEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 800ab92:	b580      	push	{r7, lr}
 800ab94:	b082      	sub	sp, #8
 800ab96:	af00      	add	r7, sp, #0
 800ab98:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800ab9a:	6878      	ldr	r0, [r7, #4]
 800ab9c:	f7fb fbc6 	bl	800632c <_ZSt11__addressofIfEPT_RS0_>
 800aba0:	4603      	mov	r3, r0
 800aba2:	4618      	mov	r0, r3
 800aba4:	3708      	adds	r7, #8
 800aba6:	46bd      	mov	sp, r7
 800aba8:	bd80      	pop	{r7, pc}

0800abaa <_ZNSt8__detail9__variant15_Variadic_unionIJfbEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 800abaa:	b580      	push	{r7, lr}
 800abac:	b082      	sub	sp, #8
 800abae:	af00      	add	r7, sp, #0
 800abb0:	6078      	str	r0, [r7, #4]
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	4618      	mov	r0, r3
 800abb6:	f000 f899 	bl	800acec <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>
 800abba:	687b      	ldr	r3, [r7, #4]
 800abbc:	4618      	mov	r0, r3
 800abbe:	3708      	adds	r7, #8
 800abc0:	46bd      	mov	sp, r7
 800abc2:	bd80      	pop	{r7, pc}

0800abc4 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 800abc4:	b580      	push	{r7, lr}
 800abc6:	b082      	sub	sp, #8
 800abc8:	af00      	add	r7, sp, #0
 800abca:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 800abcc:	6878      	ldr	r0, [r7, #4]
 800abce:	f000 f898 	bl	800ad02 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
 800abd2:	4603      	mov	r3, r0
 800abd4:	4618      	mov	r0, r3
 800abd6:	3708      	adds	r7, #8
 800abd8:	46bd      	mov	sp, r7
 800abda:	bd80      	pop	{r7, pc}

0800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800abdc:	b480      	push	{r7}
 800abde:	b083      	sub	sp, #12
 800abe0:	af00      	add	r7, sp, #0
 800abe2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800abe4:	687b      	ldr	r3, [r7, #4]
 800abe6:	4618      	mov	r0, r3
 800abe8:	370c      	adds	r7, #12
 800abea:	46bd      	mov	sp, r7
 800abec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abf0:	4770      	bx	lr

0800abf2 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKS9_EESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800abf2:	b5b0      	push	{r4, r5, r7, lr}
 800abf4:	b084      	sub	sp, #16
 800abf6:	af00      	add	r7, sp, #0
 800abf8:	7338      	strb	r0, [r7, #12]
 800abfa:	60b9      	str	r1, [r7, #8]
 800abfc:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800abfe:	68b8      	ldr	r0, [r7, #8]
 800ac00:	f7ff ff51 	bl	800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800ac04:	4604      	mov	r4, r0
 800ac06:	6878      	ldr	r0, [r7, #4]
 800ac08:	f7ff ffe8 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800ac0c:	4603      	mov	r3, r0
 800ac0e:	4619      	mov	r1, r3
 800ac10:	4620      	mov	r0, r4
 800ac12:	f000 f881 	bl	800ad18 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>
 800ac16:	462b      	mov	r3, r5
 800ac18:	4618      	mov	r0, r3
 800ac1a:	3710      	adds	r7, #16
 800ac1c:	46bd      	mov	sp, r7
 800ac1e:	bdb0      	pop	{r4, r5, r7, pc}

0800ac20 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800ac20:	b480      	push	{r7}
 800ac22:	b083      	sub	sp, #12
 800ac24:	af00      	add	r7, sp, #0
 800ac26:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800ac28:	687b      	ldr	r3, [r7, #4]
 800ac2a:	4618      	mov	r0, r3
 800ac2c:	370c      	adds	r7, #12
 800ac2e:	46bd      	mov	sp, r7
 800ac30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac34:	4770      	bx	lr

0800ac36 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKiEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800ac36:	b5b0      	push	{r4, r5, r7, lr}
 800ac38:	b084      	sub	sp, #16
 800ac3a:	af00      	add	r7, sp, #0
 800ac3c:	7338      	strb	r0, [r7, #12]
 800ac3e:	60b9      	str	r1, [r7, #8]
 800ac40:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800ac42:	68b8      	ldr	r0, [r7, #8]
 800ac44:	f7ff ff2f 	bl	800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800ac48:	4604      	mov	r4, r0
 800ac4a:	6878      	ldr	r0, [r7, #4]
 800ac4c:	f7ff ffe8 	bl	800ac20 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800ac50:	4603      	mov	r3, r0
 800ac52:	4619      	mov	r1, r3
 800ac54:	4620      	mov	r0, r4
 800ac56:	f000 f877 	bl	800ad48 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>
 800ac5a:	462b      	mov	r3, r5
 800ac5c:	4618      	mov	r0, r3
 800ac5e:	3710      	adds	r7, #16
 800ac60:	46bd      	mov	sp, r7
 800ac62:	bdb0      	pop	{r4, r5, r7, pc}

0800ac64 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800ac64:	b480      	push	{r7}
 800ac66:	b083      	sub	sp, #12
 800ac68:	af00      	add	r7, sp, #0
 800ac6a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800ac6c:	687b      	ldr	r3, [r7, #4]
 800ac6e:	4618      	mov	r0, r3
 800ac70:	370c      	adds	r7, #12
 800ac72:	46bd      	mov	sp, r7
 800ac74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac78:	4770      	bx	lr

0800ac7a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKfEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800ac7a:	b5b0      	push	{r4, r5, r7, lr}
 800ac7c:	b084      	sub	sp, #16
 800ac7e:	af00      	add	r7, sp, #0
 800ac80:	7338      	strb	r0, [r7, #12]
 800ac82:	60b9      	str	r1, [r7, #8]
 800ac84:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800ac86:	68b8      	ldr	r0, [r7, #8]
 800ac88:	f7ff ff0d 	bl	800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800ac8c:	4604      	mov	r4, r0
 800ac8e:	6878      	ldr	r0, [r7, #4]
 800ac90:	f7ff ffe8 	bl	800ac64 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800ac94:	4603      	mov	r3, r0
 800ac96:	4619      	mov	r1, r3
 800ac98:	4620      	mov	r0, r4
 800ac9a:	f000 f86d 	bl	800ad78 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>
 800ac9e:	462b      	mov	r3, r5
 800aca0:	4618      	mov	r0, r3
 800aca2:	3710      	adds	r7, #16
 800aca4:	46bd      	mov	sp, r7
 800aca6:	bdb0      	pop	{r4, r5, r7, pc}

0800aca8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800aca8:	b480      	push	{r7}
 800acaa:	b083      	sub	sp, #12
 800acac:	af00      	add	r7, sp, #0
 800acae:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800acb0:	687b      	ldr	r3, [r7, #4]
 800acb2:	4618      	mov	r0, r3
 800acb4:	370c      	adds	r7, #12
 800acb6:	46bd      	mov	sp, r7
 800acb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acbc:	4770      	bx	lr

0800acbe <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS9_ifbEEERKSB_EEvOT0_OT1_EUlOT_E_JRKbEESJ_St14__invoke_otherSG_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800acbe:	b5b0      	push	{r4, r5, r7, lr}
 800acc0:	b084      	sub	sp, #16
 800acc2:	af00      	add	r7, sp, #0
 800acc4:	7338      	strb	r0, [r7, #12]
 800acc6:	60b9      	str	r1, [r7, #8]
 800acc8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800acca:	68b8      	ldr	r0, [r7, #8]
 800accc:	f7ff feeb 	bl	800aaa6 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS1_15_Copy_ctor_baseILb0EJS8_ifbEEERKSA_EEvOT0_OT1_EUlOT_E_ESJ_RNSt16remove_referenceISI_E4typeE>
 800acd0:	4604      	mov	r4, r0
 800acd2:	6878      	ldr	r0, [r7, #4]
 800acd4:	f7ff ffe8 	bl	800aca8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800acd8:	4603      	mov	r3, r0
 800acda:	4619      	mov	r1, r3
 800acdc:	4620      	mov	r0, r4
 800acde:	f000 f863 	bl	800ada8 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>
 800ace2:	462b      	mov	r3, r5
 800ace4:	4618      	mov	r0, r3
 800ace6:	3710      	adds	r7, #16
 800ace8:	46bd      	mov	sp, r7
 800acea:	bdb0      	pop	{r4, r5, r7, pc}

0800acec <_ZNSt8__detail9__variant15_Variadic_unionIJbEEC1Ev>:
 800acec:	b480      	push	{r7}
 800acee:	b083      	sub	sp, #12
 800acf0:	af00      	add	r7, sp, #0
 800acf2:	6078      	str	r0, [r7, #4]
 800acf4:	687b      	ldr	r3, [r7, #4]
 800acf6:	4618      	mov	r0, r3
 800acf8:	370c      	adds	r7, #12
 800acfa:	46bd      	mov	sp, r7
 800acfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad00:	4770      	bx	lr

0800ad02 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
 800ad02:	b480      	push	{r7}
 800ad04:	b083      	sub	sp, #12
 800ad06:	af00      	add	r7, sp, #0
 800ad08:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	4618      	mov	r0, r3
 800ad0e:	370c      	adds	r7, #12
 800ad10:	46bd      	mov	sp, r7
 800ad12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad16:	4770      	bx	lr

0800ad18 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESI_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800ad18:	b5b0      	push	{r4, r5, r7, lr}
 800ad1a:	b082      	sub	sp, #8
 800ad1c:	af00      	add	r7, sp, #0
 800ad1e:	6078      	str	r0, [r7, #4]
 800ad20:	6039      	str	r1, [r7, #0]
 800ad22:	687b      	ldr	r3, [r7, #4]
 800ad24:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800ad26:	4618      	mov	r0, r3
 800ad28:	f000 f856 	bl	800add8 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800ad2c:	4604      	mov	r4, r0
 800ad2e:	6838      	ldr	r0, [r7, #0]
 800ad30:	f7ff ff54 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800ad34:	4603      	mov	r3, r0
 800ad36:	4619      	mov	r1, r3
 800ad38:	4620      	mov	r0, r4
 800ad3a:	f000 f86f 	bl	800ae1c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>
	  return {};
 800ad3e:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800ad40:	4618      	mov	r0, r3
 800ad42:	3708      	adds	r7, #8
 800ad44:	46bd      	mov	sp, r7
 800ad46:	bdb0      	pop	{r4, r5, r7, pc}

0800ad48 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESI_>:
 800ad48:	b5b0      	push	{r4, r5, r7, lr}
 800ad4a:	b082      	sub	sp, #8
 800ad4c:	af00      	add	r7, sp, #0
 800ad4e:	6078      	str	r0, [r7, #4]
 800ad50:	6039      	str	r1, [r7, #0]
 800ad52:	687b      	ldr	r3, [r7, #4]
 800ad54:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800ad56:	4618      	mov	r0, r3
 800ad58:	f000 f83e 	bl	800add8 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800ad5c:	4604      	mov	r4, r0
 800ad5e:	6838      	ldr	r0, [r7, #0]
 800ad60:	f7ff ff5e 	bl	800ac20 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800ad64:	4603      	mov	r3, r0
 800ad66:	4619      	mov	r1, r3
 800ad68:	4620      	mov	r0, r4
 800ad6a:	f000 f873 	bl	800ae54 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>
	  return {};
 800ad6e:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800ad70:	4618      	mov	r0, r3
 800ad72:	3708      	adds	r7, #8
 800ad74:	46bd      	mov	sp, r7
 800ad76:	bdb0      	pop	{r4, r5, r7, pc}

0800ad78 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESI_>:
 800ad78:	b5b0      	push	{r4, r5, r7, lr}
 800ad7a:	b082      	sub	sp, #8
 800ad7c:	af00      	add	r7, sp, #0
 800ad7e:	6078      	str	r0, [r7, #4]
 800ad80:	6039      	str	r1, [r7, #0]
 800ad82:	687b      	ldr	r3, [r7, #4]
 800ad84:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800ad86:	4618      	mov	r0, r3
 800ad88:	f000 f826 	bl	800add8 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800ad8c:	4604      	mov	r4, r0
 800ad8e:	6838      	ldr	r0, [r7, #0]
 800ad90:	f7ff ff68 	bl	800ac64 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800ad94:	4603      	mov	r3, r0
 800ad96:	4619      	mov	r1, r3
 800ad98:	4620      	mov	r0, r4
 800ad9a:	f000 f875 	bl	800ae88 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>
	  return {};
 800ad9e:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800ada0:	4618      	mov	r0, r3
 800ada2:	3708      	adds	r7, #8
 800ada4:	46bd      	mov	sp, r7
 800ada6:	bdb0      	pop	{r4, r5, r7, pc}

0800ada8 <_ZZNSt8__detail9__variant19__variant_constructIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNS0_15_Copy_ctor_baseILb0EJS7_ifbEEERKS9_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESI_>:
 800ada8:	b5b0      	push	{r4, r5, r7, lr}
 800adaa:	b082      	sub	sp, #8
 800adac:	af00      	add	r7, sp, #0
 800adae:	6078      	str	r0, [r7, #4]
 800adb0:	6039      	str	r1, [r7, #0]
 800adb2:	687b      	ldr	r3, [r7, #4]
 800adb4:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 800adb6:	4618      	mov	r0, r3
 800adb8:	f000 f80e 	bl	800add8 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800adbc:	4604      	mov	r4, r0
 800adbe:	6838      	ldr	r0, [r7, #0]
 800adc0:	f7ff ff72 	bl	800aca8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800adc4:	4603      	mov	r3, r0
 800adc6:	4619      	mov	r1, r3
 800adc8:	4620      	mov	r0, r4
 800adca:	f000 f877 	bl	800aebc <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>
	  return {};
 800adce:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 800add0:	4618      	mov	r0, r3
 800add2:	3708      	adds	r7, #8
 800add4:	46bd      	mov	sp, r7
 800add6:	bdb0      	pop	{r4, r5, r7, pc}

0800add8 <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800add8:	b480      	push	{r7}
 800adda:	b083      	sub	sp, #12
 800addc:	af00      	add	r7, sp, #0
 800adde:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800ade0:	687b      	ldr	r3, [r7, #4]
 800ade2:	4618      	mov	r0, r3
 800ade4:	370c      	adds	r7, #12
 800ade6:	46bd      	mov	sp, r7
 800ade8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adec:	4770      	bx	lr

0800adee <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    addressof(_Tp& __r) noexcept
 800adee:	b580      	push	{r7, lr}
 800adf0:	b082      	sub	sp, #8
 800adf2:	af00      	add	r7, sp, #0
 800adf4:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800adf6:	6878      	ldr	r0, [r7, #4]
 800adf8:	f000 f805 	bl	800ae06 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 800adfc:	4603      	mov	r3, r0
 800adfe:	4618      	mov	r0, r3
 800ae00:	3708      	adds	r7, #8
 800ae02:	46bd      	mov	sp, r7
 800ae04:	bd80      	pop	{r7, pc}

0800ae06 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800ae06:	b480      	push	{r7}
 800ae08:	b083      	sub	sp, #12
 800ae0a:	af00      	add	r7, sp, #0
 800ae0c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800ae0e:	687b      	ldr	r3, [r7, #4]
 800ae10:	4618      	mov	r0, r3
 800ae12:	370c      	adds	r7, #12
 800ae14:	46bd      	mov	sp, r7
 800ae16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae1a:	4770      	bx	lr

0800ae1c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800ae1c:	b590      	push	{r4, r7, lr}
 800ae1e:	b085      	sub	sp, #20
 800ae20:	af00      	add	r7, sp, #0
 800ae22:	6078      	str	r0, [r7, #4]
 800ae24:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800ae26:	687b      	ldr	r3, [r7, #4]
 800ae28:	4618      	mov	r0, r3
 800ae2a:	f7ff ffe0 	bl	800adee <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 800ae2e:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800ae30:	6838      	ldr	r0, [r7, #0]
 800ae32:	f7ff fed3 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 800ae36:	4604      	mov	r4, r0
        ::new (__storage)
 800ae38:	68fb      	ldr	r3, [r7, #12]
 800ae3a:	4619      	mov	r1, r3
 800ae3c:	2018      	movs	r0, #24
 800ae3e:	f7f6 f8f5 	bl	800102c <_ZnwjPv>
 800ae42:	4603      	mov	r3, r0
 800ae44:	4621      	mov	r1, r4
 800ae46:	4618      	mov	r0, r3
 800ae48:	f015 fce2 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 800ae4c:	bf00      	nop
 800ae4e:	3714      	adds	r7, #20
 800ae50:	46bd      	mov	sp, r7
 800ae52:	bd90      	pop	{r4, r7, pc}

0800ae54 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800ae54:	b590      	push	{r4, r7, lr}
 800ae56:	b085      	sub	sp, #20
 800ae58:	af00      	add	r7, sp, #0
 800ae5a:	6078      	str	r0, [r7, #4]
 800ae5c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800ae5e:	687b      	ldr	r3, [r7, #4]
 800ae60:	4618      	mov	r0, r3
 800ae62:	f7ff ffc4 	bl	800adee <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 800ae66:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800ae68:	6838      	ldr	r0, [r7, #0]
 800ae6a:	f7ff fed9 	bl	800ac20 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 800ae6e:	4603      	mov	r3, r0
        ::new (__storage)
 800ae70:	681c      	ldr	r4, [r3, #0]
 800ae72:	68fb      	ldr	r3, [r7, #12]
 800ae74:	4619      	mov	r1, r3
 800ae76:	2004      	movs	r0, #4
 800ae78:	f7f6 f8d8 	bl	800102c <_ZnwjPv>
 800ae7c:	4603      	mov	r3, r0
 800ae7e:	601c      	str	r4, [r3, #0]
    }
 800ae80:	bf00      	nop
 800ae82:	3714      	adds	r7, #20
 800ae84:	46bd      	mov	sp, r7
 800ae86:	bd90      	pop	{r4, r7, pc}

0800ae88 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800ae88:	b590      	push	{r4, r7, lr}
 800ae8a:	b085      	sub	sp, #20
 800ae8c:	af00      	add	r7, sp, #0
 800ae8e:	6078      	str	r0, [r7, #4]
 800ae90:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800ae92:	687b      	ldr	r3, [r7, #4]
 800ae94:	4618      	mov	r0, r3
 800ae96:	f7ff ffaa 	bl	800adee <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 800ae9a:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800ae9c:	6838      	ldr	r0, [r7, #0]
 800ae9e:	f7ff fee1 	bl	800ac64 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 800aea2:	4603      	mov	r3, r0
        ::new (__storage)
 800aea4:	681c      	ldr	r4, [r3, #0]
 800aea6:	68fb      	ldr	r3, [r7, #12]
 800aea8:	4619      	mov	r1, r3
 800aeaa:	2004      	movs	r0, #4
 800aeac:	f7f6 f8be 	bl	800102c <_ZnwjPv>
 800aeb0:	4603      	mov	r3, r0
 800aeb2:	601c      	str	r4, [r3, #0]
    }
 800aeb4:	bf00      	nop
 800aeb6:	3714      	adds	r7, #20
 800aeb8:	46bd      	mov	sp, r7
 800aeba:	bd90      	pop	{r4, r7, pc}

0800aebc <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 800aebc:	b590      	push	{r4, r7, lr}
 800aebe:	b085      	sub	sp, #20
 800aec0:	af00      	add	r7, sp, #0
 800aec2:	6078      	str	r0, [r7, #4]
 800aec4:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 800aec6:	687b      	ldr	r3, [r7, #4]
 800aec8:	4618      	mov	r0, r3
 800aeca:	f7ff ff90 	bl	800adee <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEPT_RSA_>
 800aece:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 800aed0:	6838      	ldr	r0, [r7, #0]
 800aed2:	f7ff fee9 	bl	800aca8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 800aed6:	4603      	mov	r3, r0
        ::new (__storage)
 800aed8:	781c      	ldrb	r4, [r3, #0]
 800aeda:	68fb      	ldr	r3, [r7, #12]
 800aedc:	4619      	mov	r1, r3
 800aede:	2001      	movs	r0, #1
 800aee0:	f7f6 f8a4 	bl	800102c <_ZnwjPv>
 800aee4:	4603      	mov	r3, r0
 800aee6:	4622      	mov	r2, r4
 800aee8:	701a      	strb	r2, [r3, #0]
    }
 800aeea:	bf00      	nop
 800aeec:	3714      	adds	r7, #20
 800aeee:	46bd      	mov	sp, r7
 800aef0:	bd90      	pop	{r4, r7, pc}
	...

0800aef4 <_Z41__static_initialization_and_destruction_0ii>:
 800aef4:	b590      	push	{r4, r7, lr}
 800aef6:	b0e7      	sub	sp, #412	; 0x19c
 800aef8:	af02      	add	r7, sp, #8
 800aefa:	1d3b      	adds	r3, r7, #4
 800aefc:	6018      	str	r0, [r3, #0]
 800aefe:	463b      	mov	r3, r7
 800af00:	6019      	str	r1, [r3, #0]
 800af02:	1d3b      	adds	r3, r7, #4
 800af04:	681b      	ldr	r3, [r3, #0]
 800af06:	2b01      	cmp	r3, #1
 800af08:	f040 819d 	bne.w	800b246 <_Z41__static_initialization_and_destruction_0ii+0x352>
 800af0c:	463b      	mov	r3, r7
 800af0e:	681b      	ldr	r3, [r3, #0]
 800af10:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800af14:	4293      	cmp	r3, r2
 800af16:	f040 8196 	bne.w	800b246 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800af1a:	f107 0314 	add.w	r3, r7, #20
 800af1e:	4618      	mov	r0, r3
 800af20:	2322      	movs	r3, #34	; 0x22
 800af22:	461a      	mov	r2, r3
 800af24:	2100      	movs	r1, #0
 800af26:	f016 fcf1 	bl	802190c <memset>
 800af2a:	f107 0314 	add.w	r3, r7, #20
 800af2e:	223a      	movs	r2, #58	; 0x3a
 800af30:	701a      	strb	r2, [r3, #0]
 800af32:	f107 0314 	add.w	r3, r7, #20
 800af36:	2201      	movs	r2, #1
 800af38:	705a      	strb	r2, [r3, #1]
 800af3a:	f107 0314 	add.w	r3, r7, #20
 800af3e:	220a      	movs	r2, #10
 800af40:	709a      	strb	r2, [r3, #2]
 800af42:	f107 0314 	add.w	r3, r7, #20
 800af46:	220a      	movs	r2, #10
 800af48:	70da      	strb	r2, [r3, #3]
 800af4a:	f107 0314 	add.w	r3, r7, #20
 800af4e:	222c      	movs	r2, #44	; 0x2c
 800af50:	711a      	strb	r2, [r3, #4]
 800af52:	f107 0314 	add.w	r3, r7, #20
 800af56:	220c      	movs	r2, #12
 800af58:	715a      	strb	r2, [r3, #5]
 800af5a:	f107 0314 	add.w	r3, r7, #20
 800af5e:	222e      	movs	r2, #46	; 0x2e
 800af60:	719a      	strb	r2, [r3, #6]
 800af62:	f107 0314 	add.w	r3, r7, #20
 800af66:	220b      	movs	r2, #11
 800af68:	71da      	strb	r2, [r3, #7]
 800af6a:	f107 0314 	add.w	r3, r7, #20
 800af6e:	225b      	movs	r2, #91	; 0x5b
 800af70:	721a      	strb	r2, [r3, #8]
 800af72:	f107 0314 	add.w	r3, r7, #20
 800af76:	220d      	movs	r2, #13
 800af78:	725a      	strb	r2, [r3, #9]
 800af7a:	f107 0314 	add.w	r3, r7, #20
 800af7e:	225d      	movs	r2, #93	; 0x5d
 800af80:	729a      	strb	r2, [r3, #10]
 800af82:	f107 0314 	add.w	r3, r7, #20
 800af86:	220e      	movs	r2, #14
 800af88:	72da      	strb	r2, [r3, #11]
 800af8a:	f107 0314 	add.w	r3, r7, #20
 800af8e:	227c      	movs	r2, #124	; 0x7c
 800af90:	731a      	strb	r2, [r3, #12]
 800af92:	f107 0314 	add.w	r3, r7, #20
 800af96:	2215      	movs	r2, #21
 800af98:	735a      	strb	r2, [r3, #13]
 800af9a:	f107 0314 	add.w	r3, r7, #20
 800af9e:	2226      	movs	r2, #38	; 0x26
 800afa0:	739a      	strb	r2, [r3, #14]
 800afa2:	f107 0314 	add.w	r3, r7, #20
 800afa6:	2216      	movs	r2, #22
 800afa8:	73da      	strb	r2, [r3, #15]
 800afaa:	f107 0314 	add.w	r3, r7, #20
 800afae:	222b      	movs	r2, #43	; 0x2b
 800afb0:	741a      	strb	r2, [r3, #16]
 800afb2:	f107 0314 	add.w	r3, r7, #20
 800afb6:	221f      	movs	r2, #31
 800afb8:	745a      	strb	r2, [r3, #17]
 800afba:	f107 0314 	add.w	r3, r7, #20
 800afbe:	222d      	movs	r2, #45	; 0x2d
 800afc0:	749a      	strb	r2, [r3, #18]
 800afc2:	f107 0314 	add.w	r3, r7, #20
 800afc6:	2220      	movs	r2, #32
 800afc8:	74da      	strb	r2, [r3, #19]
 800afca:	f107 0314 	add.w	r3, r7, #20
 800afce:	222a      	movs	r2, #42	; 0x2a
 800afd0:	751a      	strb	r2, [r3, #20]
 800afd2:	f107 0314 	add.w	r3, r7, #20
 800afd6:	2221      	movs	r2, #33	; 0x21
 800afd8:	755a      	strb	r2, [r3, #21]
 800afda:	f107 0314 	add.w	r3, r7, #20
 800afde:	222f      	movs	r2, #47	; 0x2f
 800afe0:	759a      	strb	r2, [r3, #22]
 800afe2:	f107 0314 	add.w	r3, r7, #20
 800afe6:	2222      	movs	r2, #34	; 0x22
 800afe8:	75da      	strb	r2, [r3, #23]
 800afea:	f107 0314 	add.w	r3, r7, #20
 800afee:	225e      	movs	r2, #94	; 0x5e
 800aff0:	761a      	strb	r2, [r3, #24]
 800aff2:	f107 0314 	add.w	r3, r7, #20
 800aff6:	2223      	movs	r2, #35	; 0x23
 800aff8:	765a      	strb	r2, [r3, #25]
 800affa:	f107 0314 	add.w	r3, r7, #20
 800affe:	2225      	movs	r2, #37	; 0x25
 800b000:	769a      	strb	r2, [r3, #26]
 800b002:	f107 0314 	add.w	r3, r7, #20
 800b006:	2224      	movs	r2, #36	; 0x24
 800b008:	76da      	strb	r2, [r3, #27]
 800b00a:	f107 0314 	add.w	r3, r7, #20
 800b00e:	2228      	movs	r2, #40	; 0x28
 800b010:	771a      	strb	r2, [r3, #28]
 800b012:	f107 0314 	add.w	r3, r7, #20
 800b016:	2226      	movs	r2, #38	; 0x26
 800b018:	775a      	strb	r2, [r3, #29]
 800b01a:	f107 0314 	add.w	r3, r7, #20
 800b01e:	2229      	movs	r2, #41	; 0x29
 800b020:	779a      	strb	r2, [r3, #30]
 800b022:	f107 0314 	add.w	r3, r7, #20
 800b026:	2227      	movs	r2, #39	; 0x27
 800b028:	77da      	strb	r2, [r3, #31]
 800b02a:	f107 0314 	add.w	r3, r7, #20
 800b02e:	2225      	movs	r2, #37	; 0x25
 800b030:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800b034:	f107 030c 	add.w	r3, r7, #12
 800b038:	f107 0214 	add.w	r2, r7, #20
 800b03c:	601a      	str	r2, [r3, #0]
 800b03e:	f107 030c 	add.w	r3, r7, #12
 800b042:	2211      	movs	r2, #17
 800b044:	605a      	str	r2, [r3, #4]
 800b046:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b04a:	4618      	mov	r0, r3
 800b04c:	f7f6 f94a 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800b050:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800b054:	f107 020c 	add.w	r2, r7, #12
 800b058:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b05c:	9300      	str	r3, [sp, #0]
 800b05e:	460b      	mov	r3, r1
 800b060:	ca06      	ldmia	r2, {r1, r2}
 800b062:	4885      	ldr	r0, [pc, #532]	; (800b278 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800b064:	f7f6 f956 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800b068:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b06c:	4618      	mov	r0, r3
 800b06e:	f7f6 f945 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800b072:	2305      	movs	r3, #5
 800b074:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800b078:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800b07c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b080:	497e      	ldr	r1, [pc, #504]	; (800b27c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800b082:	4618      	mov	r0, r3
 800b084:	f7f6 f832 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800b088:	2306      	movs	r3, #6
 800b08a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800b08e:	f207 1263 	addw	r2, r7, #355	; 0x163
 800b092:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b096:	331c      	adds	r3, #28
 800b098:	4979      	ldr	r1, [pc, #484]	; (800b280 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800b09a:	4618      	mov	r0, r3
 800b09c:	f7f6 f84e 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800b0a0:	2307      	movs	r3, #7
 800b0a2:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800b0a6:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800b0aa:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b0ae:	3338      	adds	r3, #56	; 0x38
 800b0b0:	4974      	ldr	r1, [pc, #464]	; (800b284 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800b0b2:	4618      	mov	r0, r3
 800b0b4:	f7f6 f842 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800b0b8:	2308      	movs	r3, #8
 800b0ba:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800b0be:	f207 1265 	addw	r2, r7, #357	; 0x165
 800b0c2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b0c6:	3354      	adds	r3, #84	; 0x54
 800b0c8:	496f      	ldr	r1, [pc, #444]	; (800b288 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800b0ca:	4618      	mov	r0, r3
 800b0cc:	f7f6 f80e 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800b0d0:	2309      	movs	r3, #9
 800b0d2:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800b0d6:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800b0da:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b0de:	3370      	adds	r3, #112	; 0x70
 800b0e0:	496a      	ldr	r1, [pc, #424]	; (800b28c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800b0e2:	4618      	mov	r0, r3
 800b0e4:	f7f6 f852 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800b0e8:	2310      	movs	r3, #16
 800b0ea:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800b0ee:	f207 1267 	addw	r2, r7, #359	; 0x167
 800b0f2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b0f6:	338c      	adds	r3, #140	; 0x8c
 800b0f8:	4965      	ldr	r1, [pc, #404]	; (800b290 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800b0fa:	4618      	mov	r0, r3
 800b0fc:	f7f6 f86e 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800b100:	2311      	movs	r3, #17
 800b102:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800b106:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800b10a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b10e:	33a8      	adds	r3, #168	; 0xa8
 800b110:	4960      	ldr	r1, [pc, #384]	; (800b294 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800b112:	4618      	mov	r0, r3
 800b114:	f7f6 f83a 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800b118:	2312      	movs	r3, #18
 800b11a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800b11e:	f207 1269 	addw	r2, r7, #361	; 0x169
 800b122:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b126:	33c4      	adds	r3, #196	; 0xc4
 800b128:	495b      	ldr	r1, [pc, #364]	; (800b298 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800b12a:	4618      	mov	r0, r3
 800b12c:	f7f5 ffde 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800b130:	2313      	movs	r3, #19
 800b132:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800b136:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800b13a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b13e:	33e0      	adds	r3, #224	; 0xe0
 800b140:	4956      	ldr	r1, [pc, #344]	; (800b29c <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800b142:	4618      	mov	r0, r3
 800b144:	f7f5 fffa 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800b148:	2314      	movs	r3, #20
 800b14a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800b14e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800b152:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b156:	33fc      	adds	r3, #252	; 0xfc
 800b158:	4951      	ldr	r1, [pc, #324]	; (800b2a0 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800b15a:	4618      	mov	r0, r3
 800b15c:	f7f6 f866 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800b160:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800b164:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800b168:	601a      	str	r2, [r3, #0]
 800b16a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800b16e:	220a      	movs	r2, #10
 800b170:	605a      	str	r2, [r3, #4]
 800b172:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800b176:	4618      	mov	r0, r3
 800b178:	f7f6 f959 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800b17c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800b180:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800b184:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800b188:	9300      	str	r3, [sp, #0]
 800b18a:	460b      	mov	r3, r1
 800b18c:	ca06      	ldmia	r2, {r1, r2}
 800b18e:	4845      	ldr	r0, [pc, #276]	; (800b2a4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800b190:	f7f6 f965 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800b194:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800b198:	4618      	mov	r0, r3
 800b19a:	f7f6 f954 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800b19e:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800b1a2:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800b1a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800b1aa:	429c      	cmp	r4, r3
 800b1ac:	d004      	beq.n	800b1b8 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800b1ae:	3c1c      	subs	r4, #28
 800b1b0:	4620      	mov	r0, r4
 800b1b2:	f7f5 ff8e 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800b1b6:	e7f6      	b.n	800b1a6 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800b1b8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800b1bc:	2200      	movs	r2, #0
 800b1be:	601a      	str	r2, [r3, #0]
 800b1c0:	605a      	str	r2, [r3, #4]
 800b1c2:	609a      	str	r2, [r3, #8]
 800b1c4:	233c      	movs	r3, #60	; 0x3c
 800b1c6:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800b1ca:	231b      	movs	r3, #27
 800b1cc:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800b1d0:	231c      	movs	r3, #28
 800b1d2:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800b1d6:	233e      	movs	r3, #62	; 0x3e
 800b1d8:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800b1dc:	2319      	movs	r3, #25
 800b1de:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800b1e2:	231a      	movs	r3, #26
 800b1e4:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800b1e8:	233d      	movs	r3, #61	; 0x3d
 800b1ea:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800b1ee:	2318      	movs	r3, #24
 800b1f0:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800b1f4:	231d      	movs	r3, #29
 800b1f6:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800b1fa:	2321      	movs	r3, #33	; 0x21
 800b1fc:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800b200:	2317      	movs	r3, #23
 800b202:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800b206:	231e      	movs	r3, #30
 800b208:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800b20c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800b210:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800b214:	2304      	movs	r3, #4
 800b216:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800b21a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800b21e:	4618      	mov	r0, r3
 800b220:	f7f6 f94d 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800b224:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800b228:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800b22c:	9300      	str	r3, [sp, #0]
 800b22e:	4613      	mov	r3, r2
 800b230:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800b234:	ca06      	ldmia	r2, {r1, r2}
 800b236:	481c      	ldr	r0, [pc, #112]	; (800b2a8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800b238:	f7f6 f959 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800b23c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800b240:	4618      	mov	r0, r3
 800b242:	f7f6 f948 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800b246:	1d3b      	adds	r3, r7, #4
 800b248:	681b      	ldr	r3, [r3, #0]
 800b24a:	2b00      	cmp	r3, #0
 800b24c:	d10e      	bne.n	800b26c <_Z41__static_initialization_and_destruction_0ii+0x378>
 800b24e:	463b      	mov	r3, r7
 800b250:	681b      	ldr	r3, [r3, #0]
 800b252:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b256:	4293      	cmp	r3, r2
 800b258:	d108      	bne.n	800b26c <_Z41__static_initialization_and_destruction_0ii+0x378>
 800b25a:	4813      	ldr	r0, [pc, #76]	; (800b2a8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800b25c:	f7f8 fda0 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800b260:	4810      	ldr	r0, [pc, #64]	; (800b2a4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800b262:	f7f8 fdaa 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800b266:	4804      	ldr	r0, [pc, #16]	; (800b278 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800b268:	f7f8 fdb4 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800b26c:	bf00      	nop
 800b26e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800b272:	46bd      	mov	sp, r7
 800b274:	bd90      	pop	{r4, r7, pc}
 800b276:	bf00      	nop
 800b278:	20000344 	.word	0x20000344
 800b27c:	08024b54 	.word	0x08024b54
 800b280:	08024b5c 	.word	0x08024b5c
 800b284:	08024b64 	.word	0x08024b64
 800b288:	08024b6c 	.word	0x08024b6c
 800b28c:	08024b74 	.word	0x08024b74
 800b290:	08024b7c 	.word	0x08024b7c
 800b294:	08024b80 	.word	0x08024b80
 800b298:	08024b88 	.word	0x08024b88
 800b29c:	08024b90 	.word	0x08024b90
 800b2a0:	08024b98 	.word	0x08024b98
 800b2a4:	2000035c 	.word	0x2000035c
 800b2a8:	20000374 	.word	0x20000374

0800b2ac <_GLOBAL__sub_I__ZN5LexerC2Ev>:
 800b2ac:	b580      	push	{r7, lr}
 800b2ae:	af00      	add	r7, sp, #0
 800b2b0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b2b4:	2001      	movs	r0, #1
 800b2b6:	f7ff fe1d 	bl	800aef4 <_Z41__static_initialization_and_destruction_0ii>
 800b2ba:	bd80      	pop	{r7, pc}

0800b2bc <_GLOBAL__sub_D__ZN5LexerC2Ev>:
 800b2bc:	b580      	push	{r7, lr}
 800b2be:	af00      	add	r7, sp, #0
 800b2c0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b2c4:	2000      	movs	r0, #0
 800b2c6:	f7ff fe15 	bl	800aef4 <_Z41__static_initialization_and_destruction_0ii>
 800b2ca:	bd80      	pop	{r7, pc}

0800b2cc <_ZN7ProgramD1Ev>:
#include "Parser.h"

Program::~Program()
 800b2cc:	b590      	push	{r4, r7, lr}
 800b2ce:	b083      	sub	sp, #12
 800b2d0:	af00      	add	r7, sp, #0
 800b2d2:	6078      	str	r0, [r7, #4]
{
	delete setup;
 800b2d4:	687b      	ldr	r3, [r7, #4]
 800b2d6:	681c      	ldr	r4, [r3, #0]
 800b2d8:	2c00      	cmp	r4, #0
 800b2da:	d006      	beq.n	800b2ea <_ZN7ProgramD1Ev+0x1e>
 800b2dc:	4620      	mov	r0, r4
 800b2de:	f003 fe57 	bl	800ef90 <_ZN4BodyD1Ev>
 800b2e2:	210c      	movs	r1, #12
 800b2e4:	4620      	mov	r0, r4
 800b2e6:	f014 ff7e 	bl	80201e6 <_ZdlPvj>
	delete loop;
 800b2ea:	687b      	ldr	r3, [r7, #4]
 800b2ec:	685c      	ldr	r4, [r3, #4]
 800b2ee:	2c00      	cmp	r4, #0
 800b2f0:	d006      	beq.n	800b300 <_ZN7ProgramD1Ev+0x34>
 800b2f2:	4620      	mov	r0, r4
 800b2f4:	f003 fe4c 	bl	800ef90 <_ZN4BodyD1Ev>
 800b2f8:	210c      	movs	r1, #12
 800b2fa:	4620      	mov	r0, r4
 800b2fc:	f014 ff73 	bl	80201e6 <_ZdlPvj>
	delete finish;
 800b300:	687b      	ldr	r3, [r7, #4]
 800b302:	689c      	ldr	r4, [r3, #8]
 800b304:	2c00      	cmp	r4, #0
 800b306:	d006      	beq.n	800b316 <_ZN7ProgramD1Ev+0x4a>
 800b308:	4620      	mov	r0, r4
 800b30a:	f003 fe41 	bl	800ef90 <_ZN4BodyD1Ev>
 800b30e:	210c      	movs	r1, #12
 800b310:	4620      	mov	r0, r4
 800b312:	f014 ff68 	bl	80201e6 <_ZdlPvj>
}
 800b316:	687b      	ldr	r3, [r7, #4]
 800b318:	4618      	mov	r0, r3
 800b31a:	370c      	adds	r7, #12
 800b31c:	46bd      	mov	sp, r7
 800b31e:	bd90      	pop	{r4, r7, pc}

0800b320 <_ZN6Parser11parse_whileEv>:

While_statement* Parser::parse_while()
{
 800b320:	b580      	push	{r7, lr}
 800b322:	b092      	sub	sp, #72	; 0x48
 800b324:	af00      	add	r7, sp, #0
 800b326:	6078      	str	r0, [r7, #4]
	auto st = new While_statement();
 800b328:	2008      	movs	r0, #8
 800b32a:	f014 ff6d 	bl	8020208 <_Znwj>
 800b32e:	4603      	mov	r3, r0
 800b330:	2200      	movs	r2, #0
 800b332:	601a      	str	r2, [r3, #0]
 800b334:	2200      	movs	r2, #0
 800b336:	605a      	str	r2, [r3, #4]
 800b338:	647b      	str	r3, [r7, #68]	; 0x44
	st->condition = parse_expression();
 800b33a:	6878      	ldr	r0, [r7, #4]
 800b33c:	f008 f81e 	bl	801337c <_ZN6Parser16parse_expressionEv>
 800b340:	4602      	mov	r2, r0
 800b342:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b344:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 800b346:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800b34a:	4618      	mov	r0, r3
 800b34c:	f014 ff6d 	bl	802022a <_ZNSaIcEC1Ev>
 800b350:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800b354:	f107 030c 	add.w	r3, r7, #12
 800b358:	4921      	ldr	r1, [pc, #132]	; (800b3e0 <_ZN6Parser11parse_whileEv+0xc0>)
 800b35a:	4618      	mov	r0, r3
 800b35c:	f7f6 f815 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b360:	f107 030c 	add.w	r3, r7, #12
 800b364:	461a      	mov	r2, r3
 800b366:	210a      	movs	r1, #10
 800b368:	6878      	ldr	r0, [r7, #4]
 800b36a:	f000 fb1b 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b36e:	f107 030c 	add.w	r3, r7, #12
 800b372:	4618      	mov	r0, r3
 800b374:	f015 f91f 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b378:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800b37c:	4618      	mov	r0, r3
 800b37e:	f014 ff55 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800b382:	6878      	ldr	r0, [r7, #4]
 800b384:	f000 fe31 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	st->while_body = parse_body();
 800b388:	6878      	ldr	r0, [r7, #4]
 800b38a:	f000 fdc3 	bl	800bf14 <_ZN6Parser10parse_bodyEv>
 800b38e:	4602      	mov	r2, r0
 800b390:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b392:	605a      	str	r2, [r3, #4]
	assert_token(TOKEN_END, "\"end\" after if body");
 800b394:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800b398:	4618      	mov	r0, r3
 800b39a:	f014 ff46 	bl	802022a <_ZNSaIcEC1Ev>
 800b39e:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800b3a2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b3a6:	490f      	ldr	r1, [pc, #60]	; (800b3e4 <_ZN6Parser11parse_whileEv+0xc4>)
 800b3a8:	4618      	mov	r0, r3
 800b3aa:	f7f5 ffee 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b3ae:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b3b2:	461a      	mov	r2, r3
 800b3b4:	2114      	movs	r1, #20
 800b3b6:	6878      	ldr	r0, [r7, #4]
 800b3b8:	f000 faf4 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b3bc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b3c0:	4618      	mov	r0, r3
 800b3c2:	f015 f8f8 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b3c6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800b3ca:	4618      	mov	r0, r3
 800b3cc:	f014 ff2e 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800b3d0:	6878      	ldr	r0, [r7, #4]
 800b3d2:	f000 fe0a 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	return st;
 800b3d6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 800b3d8:	4618      	mov	r0, r3
 800b3da:	3748      	adds	r7, #72	; 0x48
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	bd80      	pop	{r7, pc}
 800b3e0:	08024b9c 	.word	0x08024b9c
 800b3e4:	08024bc4 	.word	0x08024bc4

0800b3e8 <_ZN6Parser20parse_elseif_contentEP12If_statement>:

void Parser::parse_elseif_content(If_statement *st)
{
 800b3e8:	b590      	push	{r4, r7, lr}
 800b3ea:	b08d      	sub	sp, #52	; 0x34
 800b3ec:	af00      	add	r7, sp, #0
 800b3ee:	6078      	str	r0, [r7, #4]
 800b3f0:	6039      	str	r1, [r7, #0]
	get_next_token();
 800b3f2:	6878      	ldr	r0, [r7, #4]
 800b3f4:	f000 fdf9 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	st->conditions.push_back(parse_expression());
 800b3f8:	683c      	ldr	r4, [r7, #0]
 800b3fa:	6878      	ldr	r0, [r7, #4]
 800b3fc:	f007 ffbe 	bl	801337c <_ZN6Parser16parse_expressionEv>
 800b400:	4603      	mov	r3, r0
 800b402:	60fb      	str	r3, [r7, #12]
 800b404:	f107 030c 	add.w	r3, r7, #12
 800b408:	4619      	mov	r1, r3
 800b40a:	4620      	mov	r0, r4
 800b40c:	f000 ff70 	bl	800c2f0 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 800b410:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b414:	4618      	mov	r0, r3
 800b416:	f014 ff08 	bl	802022a <_ZNSaIcEC1Ev>
 800b41a:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800b41e:	f107 0310 	add.w	r3, r7, #16
 800b422:	4915      	ldr	r1, [pc, #84]	; (800b478 <_ZN6Parser20parse_elseif_contentEP12If_statement+0x90>)
 800b424:	4618      	mov	r0, r3
 800b426:	f7f5 ffb0 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b42a:	f107 0310 	add.w	r3, r7, #16
 800b42e:	461a      	mov	r2, r3
 800b430:	210a      	movs	r1, #10
 800b432:	6878      	ldr	r0, [r7, #4]
 800b434:	f000 fab6 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b438:	f107 0310 	add.w	r3, r7, #16
 800b43c:	4618      	mov	r0, r3
 800b43e:	f015 f8ba 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b442:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b446:	4618      	mov	r0, r3
 800b448:	f014 fef0 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800b44c:	6878      	ldr	r0, [r7, #4]
 800b44e:	f000 fdcc 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 800b452:	683b      	ldr	r3, [r7, #0]
 800b454:	f103 040c 	add.w	r4, r3, #12
 800b458:	6878      	ldr	r0, [r7, #4]
 800b45a:	f000 fd5b 	bl	800bf14 <_ZN6Parser10parse_bodyEv>
 800b45e:	4603      	mov	r3, r0
 800b460:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b462:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800b466:	4619      	mov	r1, r3
 800b468:	4620      	mov	r0, r4
 800b46a:	f000 ff52 	bl	800c312 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 800b46e:	bf00      	nop
 800b470:	3734      	adds	r7, #52	; 0x34
 800b472:	46bd      	mov	sp, r7
 800b474:	bd90      	pop	{r4, r7, pc}
 800b476:	bf00      	nop
 800b478:	08024b9c 	.word	0x08024b9c

0800b47c <_ZN6Parser18parse_else_contentEP12If_statement>:

void Parser::parse_else_content(If_statement *st)
{
 800b47c:	b590      	push	{r4, r7, lr}
 800b47e:	b08b      	sub	sp, #44	; 0x2c
 800b480:	af00      	add	r7, sp, #0
 800b482:	6078      	str	r0, [r7, #4]
 800b484:	6039      	str	r1, [r7, #0]
	get_next_token();
 800b486:	6878      	ldr	r0, [r7, #4]
 800b488:	f000 fdaf 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after \"else\"");
 800b48c:	f107 0320 	add.w	r3, r7, #32
 800b490:	4618      	mov	r0, r3
 800b492:	f014 feca 	bl	802022a <_ZNSaIcEC1Ev>
 800b496:	f107 0220 	add.w	r2, r7, #32
 800b49a:	f107 0308 	add.w	r3, r7, #8
 800b49e:	4915      	ldr	r1, [pc, #84]	; (800b4f4 <_ZN6Parser18parse_else_contentEP12If_statement+0x78>)
 800b4a0:	4618      	mov	r0, r3
 800b4a2:	f7f5 ff72 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b4a6:	f107 0308 	add.w	r3, r7, #8
 800b4aa:	461a      	mov	r2, r3
 800b4ac:	210a      	movs	r1, #10
 800b4ae:	6878      	ldr	r0, [r7, #4]
 800b4b0:	f000 fa78 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b4b4:	f107 0308 	add.w	r3, r7, #8
 800b4b8:	4618      	mov	r0, r3
 800b4ba:	f015 f87c 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b4be:	f107 0320 	add.w	r3, r7, #32
 800b4c2:	4618      	mov	r0, r3
 800b4c4:	f014 feb2 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800b4c8:	6878      	ldr	r0, [r7, #4]
 800b4ca:	f000 fd8e 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 800b4ce:	683b      	ldr	r3, [r7, #0]
 800b4d0:	f103 040c 	add.w	r4, r3, #12
 800b4d4:	6878      	ldr	r0, [r7, #4]
 800b4d6:	f000 fd1d 	bl	800bf14 <_ZN6Parser10parse_bodyEv>
 800b4da:	4603      	mov	r3, r0
 800b4dc:	627b      	str	r3, [r7, #36]	; 0x24
 800b4de:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800b4e2:	4619      	mov	r1, r3
 800b4e4:	4620      	mov	r0, r4
 800b4e6:	f000 ff14 	bl	800c312 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 800b4ea:	bf00      	nop
 800b4ec:	372c      	adds	r7, #44	; 0x2c
 800b4ee:	46bd      	mov	sp, r7
 800b4f0:	bd90      	pop	{r4, r7, pc}
 800b4f2:	bf00      	nop
 800b4f4:	08024bd8 	.word	0x08024bd8

0800b4f8 <_ZN6Parser16parse_if_contentEP12If_statement>:

void Parser::parse_if_content(If_statement *st)
{
 800b4f8:	b590      	push	{r4, r7, lr}
 800b4fa:	b08d      	sub	sp, #52	; 0x34
 800b4fc:	af00      	add	r7, sp, #0
 800b4fe:	6078      	str	r0, [r7, #4]
 800b500:	6039      	str	r1, [r7, #0]
	st->conditions.push_back(parse_expression());
 800b502:	683c      	ldr	r4, [r7, #0]
 800b504:	6878      	ldr	r0, [r7, #4]
 800b506:	f007 ff39 	bl	801337c <_ZN6Parser16parse_expressionEv>
 800b50a:	4603      	mov	r3, r0
 800b50c:	60fb      	str	r3, [r7, #12]
 800b50e:	f107 030c 	add.w	r3, r7, #12
 800b512:	4619      	mov	r1, r3
 800b514:	4620      	mov	r0, r4
 800b516:	f000 feeb 	bl	800c2f0 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
	assert_token(TOKEN_NEWLINE, "line break after condition expression");
 800b51a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b51e:	4618      	mov	r0, r3
 800b520:	f014 fe83 	bl	802022a <_ZNSaIcEC1Ev>
 800b524:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800b528:	f107 0310 	add.w	r3, r7, #16
 800b52c:	4914      	ldr	r1, [pc, #80]	; (800b580 <_ZN6Parser16parse_if_contentEP12If_statement+0x88>)
 800b52e:	4618      	mov	r0, r3
 800b530:	f7f5 ff2b 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b534:	f107 0310 	add.w	r3, r7, #16
 800b538:	461a      	mov	r2, r3
 800b53a:	210a      	movs	r1, #10
 800b53c:	6878      	ldr	r0, [r7, #4]
 800b53e:	f000 fa31 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b542:	f107 0310 	add.w	r3, r7, #16
 800b546:	4618      	mov	r0, r3
 800b548:	f015 f835 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b54c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b550:	4618      	mov	r0, r3
 800b552:	f014 fe6b 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800b556:	6878      	ldr	r0, [r7, #4]
 800b558:	f000 fd47 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	st->if_bodies.push_back(parse_body());
 800b55c:	683b      	ldr	r3, [r7, #0]
 800b55e:	f103 040c 	add.w	r4, r3, #12
 800b562:	6878      	ldr	r0, [r7, #4]
 800b564:	f000 fcd6 	bl	800bf14 <_ZN6Parser10parse_bodyEv>
 800b568:	4603      	mov	r3, r0
 800b56a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b56c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800b570:	4619      	mov	r1, r3
 800b572:	4620      	mov	r0, r4
 800b574:	f000 fecd 	bl	800c312 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>
}
 800b578:	bf00      	nop
 800b57a:	3734      	adds	r7, #52	; 0x34
 800b57c:	46bd      	mov	sp, r7
 800b57e:	bd90      	pop	{r4, r7, pc}
 800b580:	08024b9c 	.word	0x08024b9c

0800b584 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 800b584:	b580      	push	{r7, lr}
 800b586:	b082      	sub	sp, #8
 800b588:	af00      	add	r7, sp, #0
 800b58a:	6078      	str	r0, [r7, #4]
 800b58c:	687b      	ldr	r3, [r7, #4]
 800b58e:	4618      	mov	r0, r3
 800b590:	f000 fed0 	bl	800c334 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>
 800b594:	687b      	ldr	r3, [r7, #4]
 800b596:	4618      	mov	r0, r3
 800b598:	3708      	adds	r7, #8
 800b59a:	46bd      	mov	sp, r7
 800b59c:	bd80      	pop	{r7, pc}

0800b59e <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>:
      vector() = default;
 800b59e:	b580      	push	{r7, lr}
 800b5a0:	b082      	sub	sp, #8
 800b5a2:	af00      	add	r7, sp, #0
 800b5a4:	6078      	str	r0, [r7, #4]
 800b5a6:	687b      	ldr	r3, [r7, #4]
 800b5a8:	4618      	mov	r0, r3
 800b5aa:	f7ff ffeb 	bl	800b584 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EEC1Ev>
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	4618      	mov	r0, r3
 800b5b2:	3708      	adds	r7, #8
 800b5b4:	46bd      	mov	sp, r7
 800b5b6:	bd80      	pop	{r7, pc}

0800b5b8 <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>:
      _Vector_base() = default;
 800b5b8:	b580      	push	{r7, lr}
 800b5ba:	b082      	sub	sp, #8
 800b5bc:	af00      	add	r7, sp, #0
 800b5be:	6078      	str	r0, [r7, #4]
 800b5c0:	687b      	ldr	r3, [r7, #4]
 800b5c2:	4618      	mov	r0, r3
 800b5c4:	f000 fec6 	bl	800c354 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>
 800b5c8:	687b      	ldr	r3, [r7, #4]
 800b5ca:	4618      	mov	r0, r3
 800b5cc:	3708      	adds	r7, #8
 800b5ce:	46bd      	mov	sp, r7
 800b5d0:	bd80      	pop	{r7, pc}

0800b5d2 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>:
      vector() = default;
 800b5d2:	b580      	push	{r7, lr}
 800b5d4:	b082      	sub	sp, #8
 800b5d6:	af00      	add	r7, sp, #0
 800b5d8:	6078      	str	r0, [r7, #4]
 800b5da:	687b      	ldr	r3, [r7, #4]
 800b5dc:	4618      	mov	r0, r3
 800b5de:	f7ff ffeb 	bl	800b5b8 <_ZNSt12_Vector_baseIP4BodySaIS1_EEC1Ev>
 800b5e2:	687b      	ldr	r3, [r7, #4]
 800b5e4:	4618      	mov	r0, r3
 800b5e6:	3708      	adds	r7, #8
 800b5e8:	46bd      	mov	sp, r7
 800b5ea:	bd80      	pop	{r7, pc}

0800b5ec <_ZN12If_statementC1Ev>:
public:
	~Body();
	std::vector<Statement*> statements;
};

class If_statement
 800b5ec:	b580      	push	{r7, lr}
 800b5ee:	b082      	sub	sp, #8
 800b5f0:	af00      	add	r7, sp, #0
 800b5f2:	6078      	str	r0, [r7, #4]
 800b5f4:	687b      	ldr	r3, [r7, #4]
 800b5f6:	4618      	mov	r0, r3
 800b5f8:	f7ff ffd1 	bl	800b59e <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 800b5fc:	687b      	ldr	r3, [r7, #4]
 800b5fe:	330c      	adds	r3, #12
 800b600:	4618      	mov	r0, r3
 800b602:	f7ff ffe6 	bl	800b5d2 <_ZNSt6vectorIP4BodySaIS1_EEC1Ev>
 800b606:	687b      	ldr	r3, [r7, #4]
 800b608:	4618      	mov	r0, r3
 800b60a:	3708      	adds	r7, #8
 800b60c:	46bd      	mov	sp, r7
 800b60e:	bd80      	pop	{r7, pc}

0800b610 <_ZN6Parser8parse_ifEv>:

If_statement* Parser::parse_if()
{
 800b610:	b590      	push	{r4, r7, lr}
 800b612:	b08b      	sub	sp, #44	; 0x2c
 800b614:	af00      	add	r7, sp, #0
 800b616:	6078      	str	r0, [r7, #4]
	auto st = new If_statement();
 800b618:	2018      	movs	r0, #24
 800b61a:	f014 fdf5 	bl	8020208 <_Znwj>
 800b61e:	4603      	mov	r3, r0
 800b620:	461c      	mov	r4, r3
 800b622:	4622      	mov	r2, r4
 800b624:	2300      	movs	r3, #0
 800b626:	6013      	str	r3, [r2, #0]
 800b628:	6053      	str	r3, [r2, #4]
 800b62a:	6093      	str	r3, [r2, #8]
 800b62c:	60d3      	str	r3, [r2, #12]
 800b62e:	6113      	str	r3, [r2, #16]
 800b630:	6153      	str	r3, [r2, #20]
 800b632:	4620      	mov	r0, r4
 800b634:	f7ff ffda 	bl	800b5ec <_ZN12If_statementC1Ev>
 800b638:	627c      	str	r4, [r7, #36]	; 0x24

	parse_if_content(st);
 800b63a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800b63c:	6878      	ldr	r0, [r7, #4]
 800b63e:	f7ff ff5b 	bl	800b4f8 <_ZN6Parser16parse_if_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 800b642:	687b      	ldr	r3, [r7, #4]
 800b644:	781b      	ldrb	r3, [r3, #0]
 800b646:	2b11      	cmp	r3, #17
 800b648:	d104      	bne.n	800b654 <_ZN6Parser8parse_ifEv+0x44>
	{
		parse_elseif_content(st);
 800b64a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800b64c:	6878      	ldr	r0, [r7, #4]
 800b64e:	f7ff fecb 	bl	800b3e8 <_ZN6Parser20parse_elseif_contentEP12If_statement>
	while (token_buffer.type == TOKEN_ELSEIF)
 800b652:	e7f6      	b.n	800b642 <_ZN6Parser8parse_ifEv+0x32>
	}
	if (token_buffer.type == TOKEN_ELSE)
 800b654:	687b      	ldr	r3, [r7, #4]
 800b656:	781b      	ldrb	r3, [r3, #0]
 800b658:	2b12      	cmp	r3, #18
 800b65a:	d103      	bne.n	800b664 <_ZN6Parser8parse_ifEv+0x54>
	{
		parse_else_content(st);
 800b65c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800b65e:	6878      	ldr	r0, [r7, #4]
 800b660:	f7ff ff0c 	bl	800b47c <_ZN6Parser18parse_else_contentEP12If_statement>
	}
	assert_token(TOKEN_END, "\"end\" after if body");
 800b664:	f107 0320 	add.w	r3, r7, #32
 800b668:	4618      	mov	r0, r3
 800b66a:	f014 fdde 	bl	802022a <_ZNSaIcEC1Ev>
 800b66e:	f107 0220 	add.w	r2, r7, #32
 800b672:	f107 0308 	add.w	r3, r7, #8
 800b676:	490e      	ldr	r1, [pc, #56]	; (800b6b0 <_ZN6Parser8parse_ifEv+0xa0>)
 800b678:	4618      	mov	r0, r3
 800b67a:	f7f5 fe86 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b67e:	f107 0308 	add.w	r3, r7, #8
 800b682:	461a      	mov	r2, r3
 800b684:	2114      	movs	r1, #20
 800b686:	6878      	ldr	r0, [r7, #4]
 800b688:	f000 f98c 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b68c:	f107 0308 	add.w	r3, r7, #8
 800b690:	4618      	mov	r0, r3
 800b692:	f014 ff90 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b696:	f107 0320 	add.w	r3, r7, #32
 800b69a:	4618      	mov	r0, r3
 800b69c:	f014 fdc6 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800b6a0:	6878      	ldr	r0, [r7, #4]
 800b6a2:	f000 fca2 	bl	800bfea <_ZN6Parser14get_next_tokenEv>

	return st;
 800b6a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 800b6a8:	4618      	mov	r0, r3
 800b6aa:	372c      	adds	r7, #44	; 0x2c
 800b6ac:	46bd      	mov	sp, r7
 800b6ae:	bd90      	pop	{r4, r7, pc}
 800b6b0:	08024bc4 	.word	0x08024bc4

0800b6b4 <_ZN6Parser20parse_variable_indexEP8Variable>:

void Parser::parse_variable_index(Variable *var)
{
 800b6b4:	b580      	push	{r7, lr}
 800b6b6:	b08a      	sub	sp, #40	; 0x28
 800b6b8:	af00      	add	r7, sp, #0
 800b6ba:	6078      	str	r0, [r7, #4]
 800b6bc:	6039      	str	r1, [r7, #0]
	if (token_buffer.type == TOKEN_LEFT_SQUARE)
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	781b      	ldrb	r3, [r3, #0]
 800b6c2:	2b0d      	cmp	r3, #13
 800b6c4:	d12a      	bne.n	800b71c <_ZN6Parser20parse_variable_indexEP8Variable+0x68>
	{
		get_next_token();
 800b6c6:	6878      	ldr	r0, [r7, #4]
 800b6c8:	f000 fc8f 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		var->index = parse_expression();
 800b6cc:	6878      	ldr	r0, [r7, #4]
 800b6ce:	f007 fe55 	bl	801337c <_ZN6Parser16parse_expressionEv>
 800b6d2:	4602      	mov	r2, r0
 800b6d4:	683b      	ldr	r3, [r7, #0]
 800b6d6:	61da      	str	r2, [r3, #28]
		assert_token(TOKEN_RIGHT_SQUARE, "closing square bracket");
 800b6d8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800b6dc:	4618      	mov	r0, r3
 800b6de:	f014 fda4 	bl	802022a <_ZNSaIcEC1Ev>
 800b6e2:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800b6e6:	f107 030c 	add.w	r3, r7, #12
 800b6ea:	4910      	ldr	r1, [pc, #64]	; (800b72c <_ZN6Parser20parse_variable_indexEP8Variable+0x78>)
 800b6ec:	4618      	mov	r0, r3
 800b6ee:	f7f5 fe4c 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b6f2:	f107 030c 	add.w	r3, r7, #12
 800b6f6:	461a      	mov	r2, r3
 800b6f8:	210e      	movs	r1, #14
 800b6fa:	6878      	ldr	r0, [r7, #4]
 800b6fc:	f000 f952 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b700:	f107 030c 	add.w	r3, r7, #12
 800b704:	4618      	mov	r0, r3
 800b706:	f014 ff56 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b70a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800b70e:	4618      	mov	r0, r3
 800b710:	f014 fd8c 	bl	802022c <_ZNSaIcED1Ev>
		get_next_token();
 800b714:	6878      	ldr	r0, [r7, #4]
 800b716:	f000 fc68 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	}
	else
	{
		var->index = nullptr;
	}
}
 800b71a:	e002      	b.n	800b722 <_ZN6Parser20parse_variable_indexEP8Variable+0x6e>
		var->index = nullptr;
 800b71c:	683b      	ldr	r3, [r7, #0]
 800b71e:	2200      	movs	r2, #0
 800b720:	61da      	str	r2, [r3, #28]
}
 800b722:	bf00      	nop
 800b724:	3728      	adds	r7, #40	; 0x28
 800b726:	46bd      	mov	sp, r7
 800b728:	bd80      	pop	{r7, pc}
 800b72a:	bf00      	nop
 800b72c:	08024bf0 	.word	0x08024bf0

0800b730 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::parse_member_selection_id(std::string &id)
{
 800b730:	b580      	push	{r7, lr}
 800b732:	b096      	sub	sp, #88	; 0x58
 800b734:	af00      	add	r7, sp, #0
 800b736:	6078      	str	r0, [r7, #4]
 800b738:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_COLON, "colon operator \":\"");
 800b73a:	f107 0320 	add.w	r3, r7, #32
 800b73e:	4618      	mov	r0, r3
 800b740:	f014 fd73 	bl	802022a <_ZNSaIcEC1Ev>
 800b744:	f107 0220 	add.w	r2, r7, #32
 800b748:	f107 0308 	add.w	r3, r7, #8
 800b74c:	4929      	ldr	r1, [pc, #164]	; (800b7f4 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc4>)
 800b74e:	4618      	mov	r0, r3
 800b750:	f7f5 fe1b 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b754:	f107 0308 	add.w	r3, r7, #8
 800b758:	461a      	mov	r2, r3
 800b75a:	2101      	movs	r1, #1
 800b75c:	6878      	ldr	r0, [r7, #4]
 800b75e:	f000 f921 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b762:	f107 0308 	add.w	r3, r7, #8
 800b766:	4618      	mov	r0, r3
 800b768:	f014 ff25 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b76c:	f107 0320 	add.w	r3, r7, #32
 800b770:	4618      	mov	r0, r3
 800b772:	f014 fd5b 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800b776:	6878      	ldr	r0, [r7, #4]
 800b778:	f000 fc37 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_IDENTIFIER, "identifier");
 800b77c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b780:	4618      	mov	r0, r3
 800b782:	f014 fd52 	bl	802022a <_ZNSaIcEC1Ev>
 800b786:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800b78a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800b78e:	491a      	ldr	r1, [pc, #104]	; (800b7f8 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc8>)
 800b790:	4618      	mov	r0, r3
 800b792:	f7f5 fdfa 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b796:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800b79a:	461a      	mov	r2, r3
 800b79c:	2102      	movs	r1, #2
 800b79e:	6878      	ldr	r0, [r7, #4]
 800b7a0:	f000 f900 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b7a4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800b7a8:	4618      	mov	r0, r3
 800b7aa:	f014 ff04 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b7ae:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b7b2:	4618      	mov	r0, r3
 800b7b4:	f014 fd3a 	bl	802022c <_ZNSaIcED1Ev>
	id = std::string(std::get<std::string>(token_buffer.value));
 800b7b8:	687b      	ldr	r3, [r7, #4]
 800b7ba:	3304      	adds	r3, #4
 800b7bc:	4618      	mov	r0, r3
 800b7be:	f000 fdd9 	bl	800c374 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 800b7c2:	4602      	mov	r2, r0
 800b7c4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800b7c8:	4611      	mov	r1, r2
 800b7ca:	4618      	mov	r0, r3
 800b7cc:	f015 f820 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800b7d0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800b7d4:	4619      	mov	r1, r3
 800b7d6:	6838      	ldr	r0, [r7, #0]
 800b7d8:	f014 fef9 	bl	80205ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800b7dc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800b7e0:	4618      	mov	r0, r3
 800b7e2:	f014 fee8 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	get_next_token();
 800b7e6:	6878      	ldr	r0, [r7, #4]
 800b7e8:	f000 fbff 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
}
 800b7ec:	bf00      	nop
 800b7ee:	3758      	adds	r7, #88	; 0x58
 800b7f0:	46bd      	mov	sp, r7
 800b7f2:	bd80      	pop	{r7, pc}
 800b7f4:	08024c08 	.word	0x08024c08
 800b7f8:	08024c1c 	.word	0x08024c1c

0800b7fc <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>:

void Parser::parse_variable_id(std::string &id, Variable *var)
{
 800b7fc:	b580      	push	{r7, lr}
 800b7fe:	b08a      	sub	sp, #40	; 0x28
 800b800:	af00      	add	r7, sp, #0
 800b802:	60f8      	str	r0, [r7, #12]
 800b804:	60b9      	str	r1, [r7, #8]
 800b806:	607a      	str	r2, [r7, #4]
	if (id == "Arg")
 800b808:	491b      	ldr	r1, [pc, #108]	; (800b878 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x7c>)
 800b80a:	68b8      	ldr	r0, [r7, #8]
 800b80c:	f000 fdbe 	bl	800c38c <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 800b810:	4603      	mov	r3, r0
 800b812:	2b00      	cmp	r3, #0
 800b814:	d007      	beq.n	800b826 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x2a>
	{
		var->type = ASSIGNMENT_ARG;
 800b816:	687b      	ldr	r3, [r7, #4]
 800b818:	2201      	movs	r2, #1
 800b81a:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 800b81c:	68b9      	ldr	r1, [r7, #8]
 800b81e:	68f8      	ldr	r0, [r7, #12]
 800b820:	f7ff ff86 	bl	800b730 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b824:	e011      	b.n	800b84a <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else if (id == "Par")
 800b826:	4915      	ldr	r1, [pc, #84]	; (800b87c <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x80>)
 800b828:	68b8      	ldr	r0, [r7, #8]
 800b82a:	f000 fdaf 	bl	800c38c <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>
 800b82e:	4603      	mov	r3, r0
 800b830:	2b00      	cmp	r3, #0
 800b832:	d007      	beq.n	800b844 <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x48>
	{
		var->type = ASSIGNMENT_PAR;
 800b834:	687b      	ldr	r3, [r7, #4]
 800b836:	2202      	movs	r2, #2
 800b838:	701a      	strb	r2, [r3, #0]
		parse_member_selection_id(id);
 800b83a:	68b9      	ldr	r1, [r7, #8]
 800b83c:	68f8      	ldr	r0, [r7, #12]
 800b83e:	f7ff ff77 	bl	800b730 <_ZN6Parser25parse_member_selection_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b842:	e002      	b.n	800b84a <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable+0x4e>
	}
	else
	{
		var->type = ASSIGNMENT_LOCAL;
 800b844:	687b      	ldr	r3, [r7, #4]
 800b846:	2200      	movs	r2, #0
 800b848:	701a      	strb	r2, [r3, #0]
	}

	var->id = std::string(id);
 800b84a:	f107 0310 	add.w	r3, r7, #16
 800b84e:	68b9      	ldr	r1, [r7, #8]
 800b850:	4618      	mov	r0, r3
 800b852:	f014 ffdd 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800b856:	687b      	ldr	r3, [r7, #4]
 800b858:	3304      	adds	r3, #4
 800b85a:	f107 0210 	add.w	r2, r7, #16
 800b85e:	4611      	mov	r1, r2
 800b860:	4618      	mov	r0, r3
 800b862:	f014 feb4 	bl	80205ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800b866:	f107 0310 	add.w	r3, r7, #16
 800b86a:	4618      	mov	r0, r3
 800b86c:	f014 fea3 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800b870:	bf00      	nop
 800b872:	3728      	adds	r7, #40	; 0x28
 800b874:	46bd      	mov	sp, r7
 800b876:	bd80      	pop	{r7, pc}
 800b878:	08024c28 	.word	0x08024c28
 800b87c:	08024c2c 	.word	0x08024c2c

0800b880 <_ZN8VariableC1Ev>:
	ASSIGNMENT_LOCAL,
	ASSIGNMENT_ARG,
	ASSIGNMENT_PAR,
}variable_type;

class Variable
 800b880:	b580      	push	{r7, lr}
 800b882:	b082      	sub	sp, #8
 800b884:	af00      	add	r7, sp, #0
 800b886:	6078      	str	r0, [r7, #4]
 800b888:	687b      	ldr	r3, [r7, #4]
 800b88a:	3304      	adds	r3, #4
 800b88c:	4618      	mov	r0, r3
 800b88e:	f014 fe71 	bl	8020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 800b892:	687b      	ldr	r3, [r7, #4]
 800b894:	4618      	mov	r0, r3
 800b896:	3708      	adds	r7, #8
 800b898:	46bd      	mov	sp, r7
 800b89a:	bd80      	pop	{r7, pc}

0800b89c <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Variable* Parser::parse_variable(std::string &id)
{
 800b89c:	b590      	push	{r4, r7, lr}
 800b89e:	b085      	sub	sp, #20
 800b8a0:	af00      	add	r7, sp, #0
 800b8a2:	6078      	str	r0, [r7, #4]
 800b8a4:	6039      	str	r1, [r7, #0]
	auto var = new Variable();
 800b8a6:	2020      	movs	r0, #32
 800b8a8:	f014 fcae 	bl	8020208 <_Znwj>
 800b8ac:	4603      	mov	r3, r0
 800b8ae:	461c      	mov	r4, r3
 800b8b0:	4620      	mov	r0, r4
 800b8b2:	2320      	movs	r3, #32
 800b8b4:	461a      	mov	r2, r3
 800b8b6:	2100      	movs	r1, #0
 800b8b8:	f016 f828 	bl	802190c <memset>
 800b8bc:	4620      	mov	r0, r4
 800b8be:	f7ff ffdf 	bl	800b880 <_ZN8VariableC1Ev>
 800b8c2:	60fc      	str	r4, [r7, #12]
	parse_variable_id(id, var);
 800b8c4:	68fa      	ldr	r2, [r7, #12]
 800b8c6:	6839      	ldr	r1, [r7, #0]
 800b8c8:	6878      	ldr	r0, [r7, #4]
 800b8ca:	f7ff ff97 	bl	800b7fc <_ZN6Parser17parse_variable_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8Variable>
	parse_variable_index(var);
 800b8ce:	68f9      	ldr	r1, [r7, #12]
 800b8d0:	6878      	ldr	r0, [r7, #4]
 800b8d2:	f7ff feef 	bl	800b6b4 <_ZN6Parser20parse_variable_indexEP8Variable>
	return var;
 800b8d6:	68fb      	ldr	r3, [r7, #12]
}
 800b8d8:	4618      	mov	r0, r3
 800b8da:	3714      	adds	r7, #20
 800b8dc:	46bd      	mov	sp, r7
 800b8de:	bd90      	pop	{r4, r7, pc}

0800b8e0 <_ZN6Parser16parse_assignmentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Assignment* Parser::parse_assignment(std::string &id)
{
 800b8e0:	b580      	push	{r7, lr}
 800b8e2:	b08a      	sub	sp, #40	; 0x28
 800b8e4:	af00      	add	r7, sp, #0
 800b8e6:	6078      	str	r0, [r7, #4]
 800b8e8:	6039      	str	r1, [r7, #0]
	auto st = new Assignment();
 800b8ea:	2008      	movs	r0, #8
 800b8ec:	f014 fc8c 	bl	8020208 <_Znwj>
 800b8f0:	4603      	mov	r3, r0
 800b8f2:	2200      	movs	r2, #0
 800b8f4:	601a      	str	r2, [r3, #0]
 800b8f6:	2200      	movs	r2, #0
 800b8f8:	605a      	str	r2, [r3, #4]
 800b8fa:	627b      	str	r3, [r7, #36]	; 0x24
	st->var = parse_variable(id);
 800b8fc:	6839      	ldr	r1, [r7, #0]
 800b8fe:	6878      	ldr	r0, [r7, #4]
 800b900:	f7ff ffcc 	bl	800b89c <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b904:	4602      	mov	r2, r0
 800b906:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b908:	601a      	str	r2, [r3, #0]
	assert_token(TOKEN_ASSIGN, "assignment operator \"=\"");
 800b90a:	f107 0320 	add.w	r3, r7, #32
 800b90e:	4618      	mov	r0, r3
 800b910:	f014 fc8b 	bl	802022a <_ZNSaIcEC1Ev>
 800b914:	f107 0220 	add.w	r2, r7, #32
 800b918:	f107 0308 	add.w	r3, r7, #8
 800b91c:	4911      	ldr	r1, [pc, #68]	; (800b964 <_ZN6Parser16parse_assignmentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x84>)
 800b91e:	4618      	mov	r0, r3
 800b920:	f7f5 fd33 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800b924:	f107 0308 	add.w	r3, r7, #8
 800b928:	461a      	mov	r2, r3
 800b92a:	2118      	movs	r1, #24
 800b92c:	6878      	ldr	r0, [r7, #4]
 800b92e:	f000 f839 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800b932:	f107 0308 	add.w	r3, r7, #8
 800b936:	4618      	mov	r0, r3
 800b938:	f014 fe3d 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800b93c:	f107 0320 	add.w	r3, r7, #32
 800b940:	4618      	mov	r0, r3
 800b942:	f014 fc73 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800b946:	6878      	ldr	r0, [r7, #4]
 800b948:	f000 fb4f 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	st->value = parse_expression();
 800b94c:	6878      	ldr	r0, [r7, #4]
 800b94e:	f007 fd15 	bl	801337c <_ZN6Parser16parse_expressionEv>
 800b952:	4602      	mov	r2, r0
 800b954:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b956:	605a      	str	r2, [r3, #4]
	return st;
 800b958:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 800b95a:	4618      	mov	r0, r3
 800b95c:	3728      	adds	r7, #40	; 0x28
 800b95e:	46bd      	mov	sp, r7
 800b960:	bd80      	pop	{r7, pc}
 800b962:	bf00      	nop
 800b964:	08024c30 	.word	0x08024c30

0800b968 <_ZN6Parser12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::report_error(const std::string message)
{
 800b968:	b580      	push	{r7, lr}
 800b96a:	b088      	sub	sp, #32
 800b96c:	af00      	add	r7, sp, #0
 800b96e:	6078      	str	r0, [r7, #4]
 800b970:	6039      	str	r1, [r7, #0]
	Transmitter::report_error(message, token_buffer.line,
 800b972:	f107 0308 	add.w	r3, r7, #8
 800b976:	6839      	ldr	r1, [r7, #0]
 800b978:	4618      	mov	r0, r3
 800b97a:	f014 ff49 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800b97e:	687b      	ldr	r3, [r7, #4]
 800b980:	6a19      	ldr	r1, [r3, #32]
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800b986:	f107 0308 	add.w	r3, r7, #8
 800b98a:	4618      	mov	r0, r3
 800b98c:	f004 f874 	bl	800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>
			token_buffer.position);
 800b990:	f107 0308 	add.w	r3, r7, #8
 800b994:	4618      	mov	r0, r3
 800b996:	f014 fe0e 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800b99a:	bf00      	nop
 800b99c:	3720      	adds	r7, #32
 800b99e:	46bd      	mov	sp, r7
 800b9a0:	bd80      	pop	{r7, pc}
	...

0800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Parser::assert_token(token_type type, const std::string message)
{
 800b9a4:	b580      	push	{r7, lr}
 800b9a6:	b096      	sub	sp, #88	; 0x58
 800b9a8:	af00      	add	r7, sp, #0
 800b9aa:	60f8      	str	r0, [r7, #12]
 800b9ac:	460b      	mov	r3, r1
 800b9ae:	607a      	str	r2, [r7, #4]
 800b9b0:	72fb      	strb	r3, [r7, #11]
	if (token_buffer.type != type)
 800b9b2:	68fb      	ldr	r3, [r7, #12]
 800b9b4:	781b      	ldrb	r3, [r3, #0]
 800b9b6:	7afa      	ldrb	r2, [r7, #11]
 800b9b8:	429a      	cmp	r2, r3
 800b9ba:	d02b      	beq.n	800ba14 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x70>
	{
		std::string msg = "expected " + message + "\n";
 800b9bc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b9c0:	687a      	ldr	r2, [r7, #4]
 800b9c2:	4916      	ldr	r1, [pc, #88]	; (800ba1c <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>)
 800b9c4:	4618      	mov	r0, r3
 800b9c6:	f7fc f9f4 	bl	8007db2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
 800b9ca:	f107 0310 	add.w	r3, r7, #16
 800b9ce:	f107 0128 	add.w	r1, r7, #40	; 0x28
 800b9d2:	4a13      	ldr	r2, [pc, #76]	; (800ba20 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c>)
 800b9d4:	4618      	mov	r0, r3
 800b9d6:	f7fc fa11 	bl	8007dfc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 800b9da:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800b9de:	4618      	mov	r0, r3
 800b9e0:	f014 fde9 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		report_error(msg);
 800b9e4:	f107 0210 	add.w	r2, r7, #16
 800b9e8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800b9ec:	4611      	mov	r1, r2
 800b9ee:	4618      	mov	r0, r3
 800b9f0:	f014 ff0e 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800b9f4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800b9f8:	4619      	mov	r1, r3
 800b9fa:	68f8      	ldr	r0, [r7, #12]
 800b9fc:	f7ff ffb4 	bl	800b968 <_ZN6Parser12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800ba00:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ba04:	4618      	mov	r0, r3
 800ba06:	f014 fdd6 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		std::string msg = "expected " + message + "\n";
 800ba0a:	f107 0310 	add.w	r3, r7, #16
 800ba0e:	4618      	mov	r0, r3
 800ba10:	f014 fdd1 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 800ba14:	bf00      	nop
 800ba16:	3758      	adds	r7, #88	; 0x58
 800ba18:	46bd      	mov	sp, r7
 800ba1a:	bd80      	pop	{r7, pc}
 800ba1c:	08024c48 	.word	0x08024c48
 800ba20:	08024c54 	.word	0x08024c54

0800ba24 <_ZN6Parser24parse_function_argumentsEP13Function_call>:

void Parser::parse_function_arguments(Function_call *f)
{
 800ba24:	b590      	push	{r4, r7, lr}
 800ba26:	b085      	sub	sp, #20
 800ba28:	af00      	add	r7, sp, #0
 800ba2a:	6078      	str	r0, [r7, #4]
 800ba2c:	6039      	str	r1, [r7, #0]
	if (token_buffer.type != TOKEN_RIGHT_BRACKET)
 800ba2e:	687b      	ldr	r3, [r7, #4]
 800ba30:	781b      	ldrb	r3, [r3, #0]
 800ba32:	2b27      	cmp	r3, #39	; 0x27
 800ba34:	d023      	beq.n	800ba7e <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
	{
		f->arguments.push_back(parse_expression());
 800ba36:	683b      	ldr	r3, [r7, #0]
 800ba38:	f103 0420 	add.w	r4, r3, #32
 800ba3c:	6878      	ldr	r0, [r7, #4]
 800ba3e:	f007 fc9d 	bl	801337c <_ZN6Parser16parse_expressionEv>
 800ba42:	4603      	mov	r3, r0
 800ba44:	60bb      	str	r3, [r7, #8]
 800ba46:	f107 0308 	add.w	r3, r7, #8
 800ba4a:	4619      	mov	r1, r3
 800ba4c:	4620      	mov	r0, r4
 800ba4e:	f000 fc4f 	bl	800c2f0 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	781b      	ldrb	r3, [r3, #0]
 800ba56:	2b0c      	cmp	r3, #12
 800ba58:	d111      	bne.n	800ba7e <_ZN6Parser24parse_function_argumentsEP13Function_call+0x5a>
		{
			get_next_token();
 800ba5a:	6878      	ldr	r0, [r7, #4]
 800ba5c:	f000 fac5 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
			f->arguments.push_back(parse_expression());
 800ba60:	683b      	ldr	r3, [r7, #0]
 800ba62:	f103 0420 	add.w	r4, r3, #32
 800ba66:	6878      	ldr	r0, [r7, #4]
 800ba68:	f007 fc88 	bl	801337c <_ZN6Parser16parse_expressionEv>
 800ba6c:	4603      	mov	r3, r0
 800ba6e:	60fb      	str	r3, [r7, #12]
 800ba70:	f107 030c 	add.w	r3, r7, #12
 800ba74:	4619      	mov	r1, r3
 800ba76:	4620      	mov	r0, r4
 800ba78:	f000 fc3a 	bl	800c2f0 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>
		while (token_buffer.type == TOKEN_COMA)
 800ba7c:	e7e9      	b.n	800ba52 <_ZN6Parser24parse_function_argumentsEP13Function_call+0x2e>
		}
	}
}
 800ba7e:	bf00      	nop
 800ba80:	3714      	adds	r7, #20
 800ba82:	46bd      	mov	sp, r7
 800ba84:	bd90      	pop	{r4, r7, pc}

0800ba86 <_ZN13Function_callC1Ev>:
	variable_type type;
	std::string id;
	Expression* index;
};

class Function_call
 800ba86:	b580      	push	{r7, lr}
 800ba88:	b082      	sub	sp, #8
 800ba8a:	af00      	add	r7, sp, #0
 800ba8c:	6078      	str	r0, [r7, #4]
 800ba8e:	687b      	ldr	r3, [r7, #4]
 800ba90:	3308      	adds	r3, #8
 800ba92:	4618      	mov	r0, r3
 800ba94:	f014 fd6e 	bl	8020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 800ba98:	687b      	ldr	r3, [r7, #4]
 800ba9a:	3320      	adds	r3, #32
 800ba9c:	4618      	mov	r0, r3
 800ba9e:	f7ff fd7e 	bl	800b59e <_ZNSt6vectorIP10ExpressionSaIS1_EEC1Ev>
 800baa2:	687b      	ldr	r3, [r7, #4]
 800baa4:	4618      	mov	r0, r3
 800baa6:	3708      	adds	r7, #8
 800baa8:	46bd      	mov	sp, r7
 800baaa:	bd80      	pop	{r7, pc}

0800baac <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Function_call* Parser::parse_function_call(std::string &id)
{
 800baac:	b590      	push	{r4, r7, lr}
 800baae:	b091      	sub	sp, #68	; 0x44
 800bab0:	af00      	add	r7, sp, #0
 800bab2:	6078      	str	r0, [r7, #4]
 800bab4:	6039      	str	r1, [r7, #0]
	auto f = new Function_call();
 800bab6:	202c      	movs	r0, #44	; 0x2c
 800bab8:	f014 fba6 	bl	8020208 <_Znwj>
 800babc:	4603      	mov	r3, r0
 800babe:	461c      	mov	r4, r3
 800bac0:	4620      	mov	r0, r4
 800bac2:	232c      	movs	r3, #44	; 0x2c
 800bac4:	461a      	mov	r2, r3
 800bac6:	2100      	movs	r1, #0
 800bac8:	f015 ff20 	bl	802190c <memset>
 800bacc:	4620      	mov	r0, r4
 800bace:	f7ff ffda 	bl	800ba86 <_ZN13Function_callC1Ev>
 800bad2:	63fc      	str	r4, [r7, #60]	; 0x3c
	f->id = std::string(id);
 800bad4:	f107 0308 	add.w	r3, r7, #8
 800bad8:	6839      	ldr	r1, [r7, #0]
 800bada:	4618      	mov	r0, r3
 800badc:	f014 fe98 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800bae0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800bae2:	3308      	adds	r3, #8
 800bae4:	f107 0208 	add.w	r2, r7, #8
 800bae8:	4611      	mov	r1, r2
 800baea:	4618      	mov	r0, r3
 800baec:	f014 fd6f 	bl	80205ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800baf0:	f107 0308 	add.w	r3, r7, #8
 800baf4:	4618      	mov	r0, r3
 800baf6:	f014 fd5e 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	f->line = token_buffer.line;
 800bafa:	687b      	ldr	r3, [r7, #4]
 800bafc:	6a1a      	ldr	r2, [r3, #32]
 800bafe:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800bb00:	601a      	str	r2, [r3, #0]
	f->position = token_buffer.position;
 800bb02:	687b      	ldr	r3, [r7, #4]
 800bb04:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800bb06:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800bb08:	605a      	str	r2, [r3, #4]
	get_next_token();
 800bb0a:	6878      	ldr	r0, [r7, #4]
 800bb0c:	f000 fa6d 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	parse_function_arguments(f);
 800bb10:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800bb12:	6878      	ldr	r0, [r7, #4]
 800bb14:	f7ff ff86 	bl	800ba24 <_ZN6Parser24parse_function_argumentsEP13Function_call>
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 800bb18:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800bb1c:	4618      	mov	r0, r3
 800bb1e:	f014 fb84 	bl	802022a <_ZNSaIcEC1Ev>
 800bb22:	f107 0238 	add.w	r2, r7, #56	; 0x38
 800bb26:	f107 0320 	add.w	r3, r7, #32
 800bb2a:	490e      	ldr	r1, [pc, #56]	; (800bb64 <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb8>)
 800bb2c:	4618      	mov	r0, r3
 800bb2e:	f7f5 fc2c 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800bb32:	f107 0320 	add.w	r3, r7, #32
 800bb36:	461a      	mov	r2, r3
 800bb38:	2127      	movs	r1, #39	; 0x27
 800bb3a:	6878      	ldr	r0, [r7, #4]
 800bb3c:	f7ff ff32 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800bb40:	f107 0320 	add.w	r3, r7, #32
 800bb44:	4618      	mov	r0, r3
 800bb46:	f014 fd36 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800bb4a:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800bb4e:	4618      	mov	r0, r3
 800bb50:	f014 fb6c 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800bb54:	6878      	ldr	r0, [r7, #4]
 800bb56:	f000 fa48 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	return f;
 800bb5a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
}
 800bb5c:	4618      	mov	r0, r3
 800bb5e:	3744      	adds	r7, #68	; 0x44
 800bb60:	46bd      	mov	sp, r7
 800bb62:	bd90      	pop	{r4, r7, pc}
 800bb64:	08024c58 	.word	0x08024c58

0800bb68 <_ZN11Method_callC1Ev>:
	int position;
	std::string id;
	arglist arguments;
};

class Method_call
 800bb68:	b580      	push	{r7, lr}
 800bb6a:	b082      	sub	sp, #8
 800bb6c:	af00      	add	r7, sp, #0
 800bb6e:	6078      	str	r0, [r7, #4]
 800bb70:	687b      	ldr	r3, [r7, #4]
 800bb72:	3308      	adds	r3, #8
 800bb74:	4618      	mov	r0, r3
 800bb76:	f014 fcfd 	bl	8020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 800bb7a:	687b      	ldr	r3, [r7, #4]
 800bb7c:	4618      	mov	r0, r3
 800bb7e:	3708      	adds	r7, #8
 800bb80:	46bd      	mov	sp, r7
 800bb82:	bd80      	pop	{r7, pc}

0800bb84 <_ZN6Parser17parse_method_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

Method_call* Parser::parse_method_call(std::string &id)
{
 800bb84:	b590      	push	{r4, r7, lr}
 800bb86:	b099      	sub	sp, #100	; 0x64
 800bb88:	af00      	add	r7, sp, #0
 800bb8a:	6078      	str	r0, [r7, #4]
 800bb8c:	6039      	str	r1, [r7, #0]
	auto m = new Method_call();
 800bb8e:	2024      	movs	r0, #36	; 0x24
 800bb90:	f014 fb3a 	bl	8020208 <_Znwj>
 800bb94:	4603      	mov	r3, r0
 800bb96:	461c      	mov	r4, r3
 800bb98:	4620      	mov	r0, r4
 800bb9a:	2324      	movs	r3, #36	; 0x24
 800bb9c:	461a      	mov	r2, r3
 800bb9e:	2100      	movs	r1, #0
 800bba0:	f015 feb4 	bl	802190c <memset>
 800bba4:	4620      	mov	r0, r4
 800bba6:	f7ff ffdf 	bl	800bb68 <_ZN11Method_callC1Ev>
 800bbaa:	65fc      	str	r4, [r7, #92]	; 0x5c
	m->vector_id = std::string(id);
 800bbac:	f107 030c 	add.w	r3, r7, #12
 800bbb0:	6839      	ldr	r1, [r7, #0]
 800bbb2:	4618      	mov	r0, r3
 800bbb4:	f014 fe2c 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800bbb8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800bbba:	3308      	adds	r3, #8
 800bbbc:	f107 020c 	add.w	r2, r7, #12
 800bbc0:	4611      	mov	r1, r2
 800bbc2:	4618      	mov	r0, r3
 800bbc4:	f014 fd03 	bl	80205ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 800bbc8:	f107 030c 	add.w	r3, r7, #12
 800bbcc:	4618      	mov	r0, r3
 800bbce:	f014 fcf2 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	m->line = token_buffer.line;
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	6a1a      	ldr	r2, [r3, #32]
 800bbd6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800bbd8:	601a      	str	r2, [r3, #0]
	m->position = token_buffer.position;
 800bbda:	687b      	ldr	r3, [r7, #4]
 800bbdc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800bbde:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800bbe0:	605a      	str	r2, [r3, #4]
	get_next_token();
 800bbe2:	6878      	ldr	r0, [r7, #4]
 800bbe4:	f000 fa01 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_IDENTIFIER, "method identifier");
 800bbe8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800bbec:	4618      	mov	r0, r3
 800bbee:	f014 fb1c 	bl	802022a <_ZNSaIcEC1Ev>
 800bbf2:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800bbf6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800bbfa:	4926      	ldr	r1, [pc, #152]	; (800bc94 <_ZN6Parser17parse_method_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x110>)
 800bbfc:	4618      	mov	r0, r3
 800bbfe:	f7f5 fbc4 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800bc02:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800bc06:	461a      	mov	r2, r3
 800bc08:	2102      	movs	r1, #2
 800bc0a:	6878      	ldr	r0, [r7, #4]
 800bc0c:	f7ff feca 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800bc10:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800bc14:	4618      	mov	r0, r3
 800bc16:	f014 fcce 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800bc1a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800bc1e:	4618      	mov	r0, r3
 800bc20:	f014 fb04 	bl	802022c <_ZNSaIcED1Ev>
	id = std::get<std::string>(token_buffer.value);
 800bc24:	687b      	ldr	r3, [r7, #4]
 800bc26:	3304      	adds	r3, #4
 800bc28:	4618      	mov	r0, r3
 800bc2a:	f000 fba3 	bl	800c374 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 800bc2e:	4603      	mov	r3, r0
 800bc30:	4619      	mov	r1, r3
 800bc32:	6838      	ldr	r0, [r7, #0]
 800bc34:	f014 fcc5 	bl	80205c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
	get_next_token();
 800bc38:	6878      	ldr	r0, [r7, #4]
 800bc3a:	f000 f9d6 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_LEFT_BRACKET, "opening bracket");
 800bc3e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800bc42:	4618      	mov	r0, r3
 800bc44:	f014 faf1 	bl	802022a <_ZNSaIcEC1Ev>
 800bc48:	f107 0258 	add.w	r2, r7, #88	; 0x58
 800bc4c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bc50:	4911      	ldr	r1, [pc, #68]	; (800bc98 <_ZN6Parser17parse_method_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x114>)
 800bc52:	4618      	mov	r0, r3
 800bc54:	f7f5 fb99 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800bc58:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bc5c:	461a      	mov	r2, r3
 800bc5e:	2126      	movs	r1, #38	; 0x26
 800bc60:	6878      	ldr	r0, [r7, #4]
 800bc62:	f7ff fe9f 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800bc66:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800bc6a:	4618      	mov	r0, r3
 800bc6c:	f014 fca3 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800bc70:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800bc74:	4618      	mov	r0, r3
 800bc76:	f014 fad9 	bl	802022c <_ZNSaIcED1Ev>
	m->call = parse_function_call(id);
 800bc7a:	6839      	ldr	r1, [r7, #0]
 800bc7c:	6878      	ldr	r0, [r7, #4]
 800bc7e:	f7ff ff15 	bl	800baac <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800bc82:	4602      	mov	r2, r0
 800bc84:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800bc86:	621a      	str	r2, [r3, #32]
	return m;
 800bc88:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
}
 800bc8a:	4618      	mov	r0, r3
 800bc8c:	3764      	adds	r7, #100	; 0x64
 800bc8e:	46bd      	mov	sp, r7
 800bc90:	bd90      	pop	{r4, r7, pc}
 800bc92:	bf00      	nop
 800bc94:	08024c68 	.word	0x08024c68
 800bc98:	08024c7c 	.word	0x08024c7c

0800bc9c <_ZN6Parser26parse_identifier_statementEP9Statement>:

void Parser::parse_identifier_statement(Statement *s)
{
 800bc9c:	b580      	push	{r7, lr}
 800bc9e:	b08c      	sub	sp, #48	; 0x30
 800bca0:	af00      	add	r7, sp, #0
 800bca2:	6078      	str	r0, [r7, #4]
 800bca4:	6039      	str	r1, [r7, #0]
	std::string id = std::get<std::string>(token_buffer.value);
 800bca6:	687b      	ldr	r3, [r7, #4]
 800bca8:	3304      	adds	r3, #4
 800bcaa:	4618      	mov	r0, r3
 800bcac:	f000 fb62 	bl	800c374 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 800bcb0:	4602      	mov	r2, r0
 800bcb2:	f107 030c 	add.w	r3, r7, #12
 800bcb6:	4611      	mov	r1, r2
 800bcb8:	4618      	mov	r0, r3
 800bcba:	f014 fda9 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 800bcbe:	6878      	ldr	r0, [r7, #4]
 800bcc0:	f000 f993 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 800bcc4:	687b      	ldr	r3, [r7, #4]
 800bcc6:	781b      	ldrb	r3, [r3, #0]
 800bcc8:	2b26      	cmp	r3, #38	; 0x26
 800bcca:	d113      	bne.n	800bcf4 <_ZN6Parser26parse_identifier_statementEP9Statement+0x58>
	{
		s->type = STATEMENT_FUNCTION_CALL;
 800bccc:	683b      	ldr	r3, [r7, #0]
 800bcce:	2201      	movs	r2, #1
 800bcd0:	701a      	strb	r2, [r3, #0]
		s->content = parse_function_call(id);
 800bcd2:	f107 030c 	add.w	r3, r7, #12
 800bcd6:	4619      	mov	r1, r3
 800bcd8:	6878      	ldr	r0, [r7, #4]
 800bcda:	f7ff fee7 	bl	800baac <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800bcde:	4603      	mov	r3, r0
 800bce0:	627b      	str	r3, [r7, #36]	; 0x24
 800bce2:	683b      	ldr	r3, [r7, #0]
 800bce4:	3304      	adds	r3, #4
 800bce6:	f107 0224 	add.w	r2, r7, #36	; 0x24
 800bcea:	4611      	mov	r1, r2
 800bcec:	4618      	mov	r0, r3
 800bcee:	f000 fb73 	bl	800c3d8 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 800bcf2:	e02a      	b.n	800bd4a <_ZN6Parser26parse_identifier_statementEP9Statement+0xae>
	}
	else if(token_buffer.type == TOKEN_DOT)
 800bcf4:	687b      	ldr	r3, [r7, #4]
 800bcf6:	781b      	ldrb	r3, [r3, #0]
 800bcf8:	2b0b      	cmp	r3, #11
 800bcfa:	d113      	bne.n	800bd24 <_ZN6Parser26parse_identifier_statementEP9Statement+0x88>
	{
		s->type = STATEMENT_METHOD_CALL;
 800bcfc:	683b      	ldr	r3, [r7, #0]
 800bcfe:	2202      	movs	r2, #2
 800bd00:	701a      	strb	r2, [r3, #0]
		s->content = parse_method_call(id);
 800bd02:	f107 030c 	add.w	r3, r7, #12
 800bd06:	4619      	mov	r1, r3
 800bd08:	6878      	ldr	r0, [r7, #4]
 800bd0a:	f7ff ff3b 	bl	800bb84 <_ZN6Parser17parse_method_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800bd0e:	4603      	mov	r3, r0
 800bd10:	62bb      	str	r3, [r7, #40]	; 0x28
 800bd12:	683b      	ldr	r3, [r7, #0]
 800bd14:	3304      	adds	r3, #4
 800bd16:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800bd1a:	4611      	mov	r1, r2
 800bd1c:	4618      	mov	r0, r3
 800bd1e:	f000 fb85 	bl	800c42c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 800bd22:	e012      	b.n	800bd4a <_ZN6Parser26parse_identifier_statementEP9Statement+0xae>
	}
	else
	{
		s->type = STATEMENT_ASSIGNMENT;
 800bd24:	683b      	ldr	r3, [r7, #0]
 800bd26:	2200      	movs	r2, #0
 800bd28:	701a      	strb	r2, [r3, #0]
		s->content = parse_assignment(id);
 800bd2a:	f107 030c 	add.w	r3, r7, #12
 800bd2e:	4619      	mov	r1, r3
 800bd30:	6878      	ldr	r0, [r7, #4]
 800bd32:	f7ff fdd5 	bl	800b8e0 <_ZN6Parser16parse_assignmentERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800bd36:	4603      	mov	r3, r0
 800bd38:	62fb      	str	r3, [r7, #44]	; 0x2c
 800bd3a:	683b      	ldr	r3, [r7, #0]
 800bd3c:	3304      	adds	r3, #4
 800bd3e:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 800bd42:	4611      	mov	r1, r2
 800bd44:	4618      	mov	r0, r3
 800bd46:	f000 fb9b 	bl	800c480 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id = std::get<std::string>(token_buffer.value);
 800bd4a:	f107 030c 	add.w	r3, r7, #12
 800bd4e:	4618      	mov	r0, r3
 800bd50:	f014 fc31 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 800bd54:	bf00      	nop
 800bd56:	3730      	adds	r7, #48	; 0x30
 800bd58:	46bd      	mov	sp, r7
 800bd5a:	bd80      	pop	{r7, pc}

0800bd5c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      variant() = default;
 800bd5c:	b580      	push	{r7, lr}
 800bd5e:	b082      	sub	sp, #8
 800bd60:	af00      	add	r7, sp, #0
 800bd62:	6078      	str	r0, [r7, #4]
 800bd64:	687b      	ldr	r3, [r7, #4]
 800bd66:	4618      	mov	r0, r3
 800bd68:	f000 fbff 	bl	800c56a <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 800bd6c:	687b      	ldr	r3, [r7, #4]
 800bd6e:	4618      	mov	r0, r3
 800bd70:	3708      	adds	r7, #8
 800bd72:	46bd      	mov	sp, r7
 800bd74:	bd80      	pop	{r7, pc}

0800bd76 <_ZN9StatementC1Ev>:
	STATEMENT_IF
}statement_type;

typedef std::variant<Assignment*, Function_call*, Method_call*, While_statement*, If_statement*> statement_content;

class Statement
 800bd76:	b580      	push	{r7, lr}
 800bd78:	b082      	sub	sp, #8
 800bd7a:	af00      	add	r7, sp, #0
 800bd7c:	6078      	str	r0, [r7, #4]
 800bd7e:	687b      	ldr	r3, [r7, #4]
 800bd80:	3304      	adds	r3, #4
 800bd82:	4618      	mov	r0, r3
 800bd84:	f7ff ffea 	bl	800bd5c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>
 800bd88:	687b      	ldr	r3, [r7, #4]
 800bd8a:	4618      	mov	r0, r3
 800bd8c:	3708      	adds	r7, #8
 800bd8e:	46bd      	mov	sp, r7
 800bd90:	bd80      	pop	{r7, pc}
	...

0800bd94 <_ZN6Parser15parse_statementEv>:

Statement* Parser::parse_statement() //todo refactor
{
 800bd94:	b590      	push	{r4, r7, lr}
 800bd96:	b08d      	sub	sp, #52	; 0x34
 800bd98:	af00      	add	r7, sp, #0
 800bd9a:	6078      	str	r0, [r7, #4]
	auto s = new Statement();
 800bd9c:	200c      	movs	r0, #12
 800bd9e:	f014 fa33 	bl	8020208 <_Znwj>
 800bda2:	4603      	mov	r3, r0
 800bda4:	461c      	mov	r4, r3
 800bda6:	2300      	movs	r3, #0
 800bda8:	7023      	strb	r3, [r4, #0]
 800bdaa:	2300      	movs	r3, #0
 800bdac:	6063      	str	r3, [r4, #4]
 800bdae:	2300      	movs	r3, #0
 800bdb0:	7223      	strb	r3, [r4, #8]
 800bdb2:	4620      	mov	r0, r4
 800bdb4:	f7ff ffdf 	bl	800bd76 <_ZN9StatementC1Ev>
 800bdb8:	62fc      	str	r4, [r7, #44]	; 0x2c
	switch (token_buffer.type)
 800bdba:	687b      	ldr	r3, [r7, #4]
 800bdbc:	781b      	ldrb	r3, [r3, #0]
 800bdbe:	2b13      	cmp	r3, #19
 800bdc0:	d00b      	beq.n	800bdda <_ZN6Parser15parse_statementEv+0x46>
 800bdc2:	2b13      	cmp	r3, #19
 800bdc4:	dc31      	bgt.n	800be2a <_ZN6Parser15parse_statementEv+0x96>
 800bdc6:	2b02      	cmp	r3, #2
 800bdc8:	d002      	beq.n	800bdd0 <_ZN6Parser15parse_statementEv+0x3c>
 800bdca:	2b10      	cmp	r3, #16
 800bdcc:	d019      	beq.n	800be02 <_ZN6Parser15parse_statementEv+0x6e>
 800bdce:	e02c      	b.n	800be2a <_ZN6Parser15parse_statementEv+0x96>
	{
	case TOKEN_IDENTIFIER:
		parse_identifier_statement(s);
 800bdd0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800bdd2:	6878      	ldr	r0, [r7, #4]
 800bdd4:	f7ff ff62 	bl	800bc9c <_ZN6Parser26parse_identifier_statementEP9Statement>
		break;
 800bdd8:	e045      	b.n	800be66 <_ZN6Parser15parse_statementEv+0xd2>
	case TOKEN_WHILE:
		s->type = STATEMENT_WHILE;
 800bdda:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bddc:	2203      	movs	r2, #3
 800bdde:	701a      	strb	r2, [r3, #0]
		get_next_token();
 800bde0:	6878      	ldr	r0, [r7, #4]
 800bde2:	f000 f902 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		s->content = parse_while();
 800bde6:	6878      	ldr	r0, [r7, #4]
 800bde8:	f7ff fa9a 	bl	800b320 <_ZN6Parser11parse_whileEv>
 800bdec:	4603      	mov	r3, r0
 800bdee:	60bb      	str	r3, [r7, #8]
 800bdf0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bdf2:	3304      	adds	r3, #4
 800bdf4:	f107 0208 	add.w	r2, r7, #8
 800bdf8:	4611      	mov	r1, r2
 800bdfa:	4618      	mov	r0, r3
 800bdfc:	f000 fbc2 	bl	800c584 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 800be00:	e031      	b.n	800be66 <_ZN6Parser15parse_statementEv+0xd2>
	case TOKEN_IF:
		s->type = STATEMENT_IF;
 800be02:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800be04:	2204      	movs	r2, #4
 800be06:	701a      	strb	r2, [r3, #0]
		get_next_token();
 800be08:	6878      	ldr	r0, [r7, #4]
 800be0a:	f000 f8ee 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		s->content = parse_if();
 800be0e:	6878      	ldr	r0, [r7, #4]
 800be10:	f7ff fbfe 	bl	800b610 <_ZN6Parser8parse_ifEv>
 800be14:	4603      	mov	r3, r0
 800be16:	60fb      	str	r3, [r7, #12]
 800be18:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800be1a:	3304      	adds	r3, #4
 800be1c:	f107 020c 	add.w	r2, r7, #12
 800be20:	4611      	mov	r1, r2
 800be22:	4618      	mov	r0, r3
 800be24:	f000 fbd8 	bl	800c5d8 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		break;
 800be28:	e01d      	b.n	800be66 <_ZN6Parser15parse_statementEv+0xd2>
	default:
		report_error("expected statement:\nidentifier, if, while\n");
 800be2a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800be2e:	4618      	mov	r0, r3
 800be30:	f014 f9fb 	bl	802022a <_ZNSaIcEC1Ev>
 800be34:	f107 0228 	add.w	r2, r7, #40	; 0x28
 800be38:	f107 0310 	add.w	r3, r7, #16
 800be3c:	490c      	ldr	r1, [pc, #48]	; (800be70 <_ZN6Parser15parse_statementEv+0xdc>)
 800be3e:	4618      	mov	r0, r3
 800be40:	f7f5 faa3 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800be44:	f107 0310 	add.w	r3, r7, #16
 800be48:	4619      	mov	r1, r3
 800be4a:	6878      	ldr	r0, [r7, #4]
 800be4c:	f7ff fd8c 	bl	800b968 <_ZN6Parser12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800be50:	f107 0310 	add.w	r3, r7, #16
 800be54:	4618      	mov	r0, r3
 800be56:	f014 fbae 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800be5a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800be5e:	4618      	mov	r0, r3
 800be60:	f014 f9e4 	bl	802022c <_ZNSaIcED1Ev>
		break;
 800be64:	bf00      	nop
	}
	return s;
 800be66:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 800be68:	4618      	mov	r0, r3
 800be6a:	3734      	adds	r7, #52	; 0x34
 800be6c:	46bd      	mov	sp, r7
 800be6e:	bd90      	pop	{r4, r7, pc}
 800be70:	08024c8c 	.word	0x08024c8c

0800be74 <_ZN6Parser24is_token_statement_firstEv>:

bool Parser::is_token_statement_first()
{
 800be74:	b480      	push	{r7}
 800be76:	b083      	sub	sp, #12
 800be78:	af00      	add	r7, sp, #0
 800be7a:	6078      	str	r0, [r7, #4]
	return token_buffer.type == TOKEN_IDENTIFIER
 800be7c:	687b      	ldr	r3, [r7, #4]
 800be7e:	781b      	ldrb	r3, [r3, #0]
			|| token_buffer.type == TOKEN_WHILE
			|| token_buffer.type == TOKEN_IF;
 800be80:	2b02      	cmp	r3, #2
 800be82:	d007      	beq.n	800be94 <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_WHILE
 800be84:	687b      	ldr	r3, [r7, #4]
 800be86:	781b      	ldrb	r3, [r3, #0]
 800be88:	2b13      	cmp	r3, #19
 800be8a:	d003      	beq.n	800be94 <_ZN6Parser24is_token_statement_firstEv+0x20>
			|| token_buffer.type == TOKEN_IF;
 800be8c:	687b      	ldr	r3, [r7, #4]
 800be8e:	781b      	ldrb	r3, [r3, #0]
 800be90:	2b10      	cmp	r3, #16
 800be92:	d101      	bne.n	800be98 <_ZN6Parser24is_token_statement_firstEv+0x24>
 800be94:	2301      	movs	r3, #1
 800be96:	e000      	b.n	800be9a <_ZN6Parser24is_token_statement_firstEv+0x26>
 800be98:	2300      	movs	r3, #0
}
 800be9a:	4618      	mov	r0, r3
 800be9c:	370c      	adds	r7, #12
 800be9e:	46bd      	mov	sp, r7
 800bea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bea4:	4770      	bx	lr

0800bea6 <_ZN6Parser13skip_newlinesEv>:

void Parser::skip_newlines()
{
 800bea6:	b580      	push	{r7, lr}
 800bea8:	b082      	sub	sp, #8
 800beaa:	af00      	add	r7, sp, #0
 800beac:	6078      	str	r0, [r7, #4]
	while (token_buffer.type == TOKEN_NEWLINE)
 800beae:	687b      	ldr	r3, [r7, #4]
 800beb0:	781b      	ldrb	r3, [r3, #0]
 800beb2:	2b0a      	cmp	r3, #10
 800beb4:	d103      	bne.n	800bebe <_ZN6Parser13skip_newlinesEv+0x18>
	{
		get_next_token();
 800beb6:	6878      	ldr	r0, [r7, #4]
 800beb8:	f000 f897 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	while (token_buffer.type == TOKEN_NEWLINE)
 800bebc:	e7f7      	b.n	800beae <_ZN6Parser13skip_newlinesEv+0x8>
	}
}
 800bebe:	bf00      	nop
 800bec0:	3708      	adds	r7, #8
 800bec2:	46bd      	mov	sp, r7
 800bec4:	bd80      	pop	{r7, pc}

0800bec6 <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>:
      _Vector_base() = default;
 800bec6:	b580      	push	{r7, lr}
 800bec8:	b082      	sub	sp, #8
 800beca:	af00      	add	r7, sp, #0
 800becc:	6078      	str	r0, [r7, #4]
 800bece:	687b      	ldr	r3, [r7, #4]
 800bed0:	4618      	mov	r0, r3
 800bed2:	f000 fbab 	bl	800c62c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>
 800bed6:	687b      	ldr	r3, [r7, #4]
 800bed8:	4618      	mov	r0, r3
 800beda:	3708      	adds	r7, #8
 800bedc:	46bd      	mov	sp, r7
 800bede:	bd80      	pop	{r7, pc}

0800bee0 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>:
      vector() = default;
 800bee0:	b580      	push	{r7, lr}
 800bee2:	b082      	sub	sp, #8
 800bee4:	af00      	add	r7, sp, #0
 800bee6:	6078      	str	r0, [r7, #4]
 800bee8:	687b      	ldr	r3, [r7, #4]
 800beea:	4618      	mov	r0, r3
 800beec:	f7ff ffeb 	bl	800bec6 <_ZNSt12_Vector_baseIP9StatementSaIS1_EEC1Ev>
 800bef0:	687b      	ldr	r3, [r7, #4]
 800bef2:	4618      	mov	r0, r3
 800bef4:	3708      	adds	r7, #8
 800bef6:	46bd      	mov	sp, r7
 800bef8:	bd80      	pop	{r7, pc}

0800befa <_ZN4BodyC1Ev>:
class Body
 800befa:	b580      	push	{r7, lr}
 800befc:	b082      	sub	sp, #8
 800befe:	af00      	add	r7, sp, #0
 800bf00:	6078      	str	r0, [r7, #4]
 800bf02:	687b      	ldr	r3, [r7, #4]
 800bf04:	4618      	mov	r0, r3
 800bf06:	f7ff ffeb 	bl	800bee0 <_ZNSt6vectorIP9StatementSaIS1_EEC1Ev>
 800bf0a:	687b      	ldr	r3, [r7, #4]
 800bf0c:	4618      	mov	r0, r3
 800bf0e:	3708      	adds	r7, #8
 800bf10:	46bd      	mov	sp, r7
 800bf12:	bd80      	pop	{r7, pc}

0800bf14 <_ZN6Parser10parse_bodyEv>:

Body* Parser::parse_body()
{
 800bf14:	b590      	push	{r4, r7, lr}
 800bf16:	b085      	sub	sp, #20
 800bf18:	af00      	add	r7, sp, #0
 800bf1a:	6078      	str	r0, [r7, #4]
	auto bod = new Body();
 800bf1c:	200c      	movs	r0, #12
 800bf1e:	f014 f973 	bl	8020208 <_Znwj>
 800bf22:	4603      	mov	r3, r0
 800bf24:	461c      	mov	r4, r3
 800bf26:	4622      	mov	r2, r4
 800bf28:	2300      	movs	r3, #0
 800bf2a:	6013      	str	r3, [r2, #0]
 800bf2c:	6053      	str	r3, [r2, #4]
 800bf2e:	6093      	str	r3, [r2, #8]
 800bf30:	4620      	mov	r0, r4
 800bf32:	f7ff ffe2 	bl	800befa <_ZN4BodyC1Ev>
 800bf36:	60fc      	str	r4, [r7, #12]
	while (is_token_statement_first())
 800bf38:	6878      	ldr	r0, [r7, #4]
 800bf3a:	f7ff ff9b 	bl	800be74 <_ZN6Parser24is_token_statement_firstEv>
 800bf3e:	4603      	mov	r3, r0
 800bf40:	2b00      	cmp	r3, #0
 800bf42:	d00f      	beq.n	800bf64 <_ZN6Parser10parse_bodyEv+0x50>
	{
		bod->statements.push_back(parse_statement());
 800bf44:	68fc      	ldr	r4, [r7, #12]
 800bf46:	6878      	ldr	r0, [r7, #4]
 800bf48:	f7ff ff24 	bl	800bd94 <_ZN6Parser15parse_statementEv>
 800bf4c:	4603      	mov	r3, r0
 800bf4e:	60bb      	str	r3, [r7, #8]
 800bf50:	f107 0308 	add.w	r3, r7, #8
 800bf54:	4619      	mov	r1, r3
 800bf56:	4620      	mov	r0, r4
 800bf58:	f000 fb78 	bl	800c64c <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>
		skip_newlines();
 800bf5c:	6878      	ldr	r0, [r7, #4]
 800bf5e:	f7ff ffa2 	bl	800bea6 <_ZN6Parser13skip_newlinesEv>
	while (is_token_statement_first())
 800bf62:	e7e9      	b.n	800bf38 <_ZN6Parser10parse_bodyEv+0x24>
	}
	return bod;
 800bf64:	68fb      	ldr	r3, [r7, #12]
}
 800bf66:	4618      	mov	r0, r3
 800bf68:	3714      	adds	r7, #20
 800bf6a:	46bd      	mov	sp, r7
 800bf6c:	bd90      	pop	{r4, r7, pc}

0800bf6e <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 800bf6e:	b580      	push	{r7, lr}
 800bf70:	b082      	sub	sp, #8
 800bf72:	af00      	add	r7, sp, #0
 800bf74:	6078      	str	r0, [r7, #4]
 800bf76:	6039      	str	r1, [r7, #0]
 800bf78:	687b      	ldr	r3, [r7, #4]
 800bf7a:	683a      	ldr	r2, [r7, #0]
 800bf7c:	4611      	mov	r1, r2
 800bf7e:	4618      	mov	r0, r3
 800bf80:	f000 fd18 	bl	800c9b4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 800bf84:	687b      	ldr	r3, [r7, #4]
 800bf86:	4618      	mov	r0, r3
 800bf88:	3708      	adds	r7, #8
 800bf8a:	46bd      	mov	sp, r7
 800bf8c:	bd80      	pop	{r7, pc}

0800bf8e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>:
    class variant
 800bf8e:	b580      	push	{r7, lr}
 800bf90:	b082      	sub	sp, #8
 800bf92:	af00      	add	r7, sp, #0
 800bf94:	6078      	str	r0, [r7, #4]
 800bf96:	6039      	str	r1, [r7, #0]
 800bf98:	687b      	ldr	r3, [r7, #4]
 800bf9a:	683a      	ldr	r2, [r7, #0]
 800bf9c:	4611      	mov	r1, r2
 800bf9e:	4618      	mov	r0, r3
 800bfa0:	f7ff ffe5 	bl	800bf6e <_ZNSt8__detail9__variant13_Variant_baseIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>
 800bfa4:	687b      	ldr	r3, [r7, #4]
 800bfa6:	4618      	mov	r0, r3
 800bfa8:	3708      	adds	r7, #8
 800bfaa:	46bd      	mov	sp, r7
 800bfac:	bd80      	pop	{r7, pc}

0800bfae <_ZN5TokenaSEOS_>:
 800bfae:	b580      	push	{r7, lr}
 800bfb0:	b082      	sub	sp, #8
 800bfb2:	af00      	add	r7, sp, #0
 800bfb4:	6078      	str	r0, [r7, #4]
 800bfb6:	6039      	str	r1, [r7, #0]
 800bfb8:	683b      	ldr	r3, [r7, #0]
 800bfba:	781a      	ldrb	r2, [r3, #0]
 800bfbc:	687b      	ldr	r3, [r7, #4]
 800bfbe:	701a      	strb	r2, [r3, #0]
 800bfc0:	683b      	ldr	r3, [r7, #0]
 800bfc2:	1d1a      	adds	r2, r3, #4
 800bfc4:	687b      	ldr	r3, [r7, #4]
 800bfc6:	3304      	adds	r3, #4
 800bfc8:	4611      	mov	r1, r2
 800bfca:	4618      	mov	r0, r3
 800bfcc:	f7ff ffdf 	bl	800bf8e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS6_>
 800bfd0:	683b      	ldr	r3, [r7, #0]
 800bfd2:	6a1a      	ldr	r2, [r3, #32]
 800bfd4:	687b      	ldr	r3, [r7, #4]
 800bfd6:	621a      	str	r2, [r3, #32]
 800bfd8:	683b      	ldr	r3, [r7, #0]
 800bfda:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800bfdc:	687b      	ldr	r3, [r7, #4]
 800bfde:	625a      	str	r2, [r3, #36]	; 0x24
 800bfe0:	687b      	ldr	r3, [r7, #4]
 800bfe2:	4618      	mov	r0, r3
 800bfe4:	3708      	adds	r7, #8
 800bfe6:	46bd      	mov	sp, r7
 800bfe8:	bd80      	pop	{r7, pc}

0800bfea <_ZN6Parser14get_next_tokenEv>:

void Parser::get_next_token()
{
 800bfea:	b580      	push	{r7, lr}
 800bfec:	b092      	sub	sp, #72	; 0x48
 800bfee:	af00      	add	r7, sp, #0
 800bff0:	6078      	str	r0, [r7, #4]
	token_buffer = Lexer::build_token();
 800bff2:	f107 0308 	add.w	r3, r7, #8
 800bff6:	4618      	mov	r0, r3
 800bff8:	f7fd fac8 	bl	800958c <_ZN5Lexer11build_tokenEv>
 800bffc:	687b      	ldr	r3, [r7, #4]
 800bffe:	f107 0208 	add.w	r2, r7, #8
 800c002:	4611      	mov	r1, r2
 800c004:	4618      	mov	r0, r3
 800c006:	f7ff ffd2 	bl	800bfae <_ZN5TokenaSEOS_>
 800c00a:	f107 0308 	add.w	r3, r7, #8
 800c00e:	4618      	mov	r0, r3
 800c010:	f7fc fedf 	bl	8008dd2 <_ZN5TokenD1Ev>
	if (token_buffer.type == TOKEN_ERROR)
 800c014:	687b      	ldr	r3, [r7, #4]
 800c016:	781b      	ldrb	r3, [r3, #0]
 800c018:	2b00      	cmp	r3, #0
 800c01a:	d119      	bne.n	800c050 <_ZN6Parser14get_next_tokenEv+0x66>
	{
		Transmitter::report_error(std::get<std::string>(token_buffer.value),
 800c01c:	687b      	ldr	r3, [r7, #4]
 800c01e:	3304      	adds	r3, #4
 800c020:	4618      	mov	r0, r3
 800c022:	f000 f9a7 	bl	800c374 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 800c026:	4602      	mov	r2, r0
 800c028:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c02c:	4611      	mov	r1, r2
 800c02e:	4618      	mov	r0, r3
 800c030:	f014 fbee 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800c034:	687b      	ldr	r3, [r7, #4]
 800c036:	6a19      	ldr	r1, [r3, #32]
 800c038:	687b      	ldr	r3, [r7, #4]
 800c03a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800c03c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c040:	4618      	mov	r0, r3
 800c042:	f003 fd19 	bl	800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>
				token_buffer.line, token_buffer.position);
 800c046:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800c04a:	4618      	mov	r0, r3
 800c04c:	f014 fab3 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 800c050:	bf00      	nop
 800c052:	3748      	adds	r7, #72	; 0x48
 800c054:	46bd      	mov	sp, r7
 800c056:	bd80      	pop	{r7, pc}

0800c058 <_ZN6Parser11parse_setupEP7Program>:

void Parser::parse_setup(Program *Prog)
{
 800c058:	b580      	push	{r7, lr}
 800c05a:	b090      	sub	sp, #64	; 0x40
 800c05c:	af00      	add	r7, sp, #0
 800c05e:	6078      	str	r0, [r7, #4]
 800c060:	6039      	str	r1, [r7, #0]
	get_next_token();
 800c062:	6878      	ldr	r0, [r7, #4]
 800c064:	f7ff ffc1 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_SETUP, "\"setup\" keyword");
 800c068:	f107 0320 	add.w	r3, r7, #32
 800c06c:	4618      	mov	r0, r3
 800c06e:	f014 f8dc 	bl	802022a <_ZNSaIcEC1Ev>
 800c072:	f107 0220 	add.w	r2, r7, #32
 800c076:	f107 0308 	add.w	r3, r7, #8
 800c07a:	4923      	ldr	r1, [pc, #140]	; (800c108 <_ZN6Parser11parse_setupEP7Program+0xb0>)
 800c07c:	4618      	mov	r0, r3
 800c07e:	f7f5 f984 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c082:	f107 0308 	add.w	r3, r7, #8
 800c086:	461a      	mov	r2, r3
 800c088:	2107      	movs	r1, #7
 800c08a:	6878      	ldr	r0, [r7, #4]
 800c08c:	f7ff fc8a 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c090:	f107 0308 	add.w	r3, r7, #8
 800c094:	4618      	mov	r0, r3
 800c096:	f014 fa8e 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c09a:	f107 0320 	add.w	r3, r7, #32
 800c09e:	4618      	mov	r0, r3
 800c0a0:	f014 f8c4 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800c0a4:	6878      	ldr	r0, [r7, #4]
 800c0a6:	f7ff ffa0 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after setup");
 800c0aa:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800c0ae:	4618      	mov	r0, r3
 800c0b0:	f014 f8bb 	bl	802022a <_ZNSaIcEC1Ev>
 800c0b4:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800c0b8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c0bc:	4913      	ldr	r1, [pc, #76]	; (800c10c <_ZN6Parser11parse_setupEP7Program+0xb4>)
 800c0be:	4618      	mov	r0, r3
 800c0c0:	f7f5 f963 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c0c4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c0c8:	461a      	mov	r2, r3
 800c0ca:	210a      	movs	r1, #10
 800c0cc:	6878      	ldr	r0, [r7, #4]
 800c0ce:	f7ff fc69 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c0d2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c0d6:	4618      	mov	r0, r3
 800c0d8:	f014 fa6d 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c0dc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800c0e0:	4618      	mov	r0, r3
 800c0e2:	f014 f8a3 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800c0e6:	6878      	ldr	r0, [r7, #4]
 800c0e8:	f7ff ff7f 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 800c0ec:	6878      	ldr	r0, [r7, #4]
 800c0ee:	f7ff feda 	bl	800bea6 <_ZN6Parser13skip_newlinesEv>
	Prog->setup = parse_body();
 800c0f2:	6878      	ldr	r0, [r7, #4]
 800c0f4:	f7ff ff0e 	bl	800bf14 <_ZN6Parser10parse_bodyEv>
 800c0f8:	4602      	mov	r2, r0
 800c0fa:	683b      	ldr	r3, [r7, #0]
 800c0fc:	601a      	str	r2, [r3, #0]
}
 800c0fe:	bf00      	nop
 800c100:	3740      	adds	r7, #64	; 0x40
 800c102:	46bd      	mov	sp, r7
 800c104:	bd80      	pop	{r7, pc}
 800c106:	bf00      	nop
 800c108:	08024cb8 	.word	0x08024cb8
 800c10c:	08024cc8 	.word	0x08024cc8

0800c110 <_ZN6Parser10parse_loopEP7Program>:

void Parser::parse_loop(Program *Prog)
{
 800c110:	b580      	push	{r7, lr}
 800c112:	b090      	sub	sp, #64	; 0x40
 800c114:	af00      	add	r7, sp, #0
 800c116:	6078      	str	r0, [r7, #4]
 800c118:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_LOOP, "\"loop\" keyword");
 800c11a:	f107 0320 	add.w	r3, r7, #32
 800c11e:	4618      	mov	r0, r3
 800c120:	f014 f883 	bl	802022a <_ZNSaIcEC1Ev>
 800c124:	f107 0220 	add.w	r2, r7, #32
 800c128:	f107 0308 	add.w	r3, r7, #8
 800c12c:	4922      	ldr	r1, [pc, #136]	; (800c1b8 <_ZN6Parser10parse_loopEP7Program+0xa8>)
 800c12e:	4618      	mov	r0, r3
 800c130:	f7f5 f92b 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c134:	f107 0308 	add.w	r3, r7, #8
 800c138:	461a      	mov	r2, r3
 800c13a:	2108      	movs	r1, #8
 800c13c:	6878      	ldr	r0, [r7, #4]
 800c13e:	f7ff fc31 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c142:	f107 0308 	add.w	r3, r7, #8
 800c146:	4618      	mov	r0, r3
 800c148:	f014 fa35 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c14c:	f107 0320 	add.w	r3, r7, #32
 800c150:	4618      	mov	r0, r3
 800c152:	f014 f86b 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800c156:	6878      	ldr	r0, [r7, #4]
 800c158:	f7ff ff47 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after loop");
 800c15c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800c160:	4618      	mov	r0, r3
 800c162:	f014 f862 	bl	802022a <_ZNSaIcEC1Ev>
 800c166:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800c16a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c16e:	4913      	ldr	r1, [pc, #76]	; (800c1bc <_ZN6Parser10parse_loopEP7Program+0xac>)
 800c170:	4618      	mov	r0, r3
 800c172:	f7f5 f90a 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c176:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c17a:	461a      	mov	r2, r3
 800c17c:	210a      	movs	r1, #10
 800c17e:	6878      	ldr	r0, [r7, #4]
 800c180:	f7ff fc10 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c184:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c188:	4618      	mov	r0, r3
 800c18a:	f014 fa14 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c18e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800c192:	4618      	mov	r0, r3
 800c194:	f014 f84a 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800c198:	6878      	ldr	r0, [r7, #4]
 800c19a:	f7ff ff26 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 800c19e:	6878      	ldr	r0, [r7, #4]
 800c1a0:	f7ff fe81 	bl	800bea6 <_ZN6Parser13skip_newlinesEv>
	Prog->loop = parse_body();
 800c1a4:	6878      	ldr	r0, [r7, #4]
 800c1a6:	f7ff feb5 	bl	800bf14 <_ZN6Parser10parse_bodyEv>
 800c1aa:	4602      	mov	r2, r0
 800c1ac:	683b      	ldr	r3, [r7, #0]
 800c1ae:	605a      	str	r2, [r3, #4]
}
 800c1b0:	bf00      	nop
 800c1b2:	3740      	adds	r7, #64	; 0x40
 800c1b4:	46bd      	mov	sp, r7
 800c1b6:	bd80      	pop	{r7, pc}
 800c1b8:	08024ce0 	.word	0x08024ce0
 800c1bc:	08024cf0 	.word	0x08024cf0

0800c1c0 <_ZN6Parser12parse_finishEP7Program>:

void Parser::parse_finish(Program *Prog)
{
 800c1c0:	b580      	push	{r7, lr}
 800c1c2:	b090      	sub	sp, #64	; 0x40
 800c1c4:	af00      	add	r7, sp, #0
 800c1c6:	6078      	str	r0, [r7, #4]
 800c1c8:	6039      	str	r1, [r7, #0]
	assert_token(TOKEN_FINISH, "\"finish\" keyword");
 800c1ca:	f107 0320 	add.w	r3, r7, #32
 800c1ce:	4618      	mov	r0, r3
 800c1d0:	f014 f82b 	bl	802022a <_ZNSaIcEC1Ev>
 800c1d4:	f107 0220 	add.w	r2, r7, #32
 800c1d8:	f107 0308 	add.w	r3, r7, #8
 800c1dc:	4922      	ldr	r1, [pc, #136]	; (800c268 <_ZN6Parser12parse_finishEP7Program+0xa8>)
 800c1de:	4618      	mov	r0, r3
 800c1e0:	f7f5 f8d3 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c1e4:	f107 0308 	add.w	r3, r7, #8
 800c1e8:	461a      	mov	r2, r3
 800c1ea:	2109      	movs	r1, #9
 800c1ec:	6878      	ldr	r0, [r7, #4]
 800c1ee:	f7ff fbd9 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c1f2:	f107 0308 	add.w	r3, r7, #8
 800c1f6:	4618      	mov	r0, r3
 800c1f8:	f014 f9dd 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c1fc:	f107 0320 	add.w	r3, r7, #32
 800c200:	4618      	mov	r0, r3
 800c202:	f014 f813 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800c206:	6878      	ldr	r0, [r7, #4]
 800c208:	f7ff feef 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	assert_token(TOKEN_NEWLINE, "line break after finish");
 800c20c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800c210:	4618      	mov	r0, r3
 800c212:	f014 f80a 	bl	802022a <_ZNSaIcEC1Ev>
 800c216:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800c21a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c21e:	4913      	ldr	r1, [pc, #76]	; (800c26c <_ZN6Parser12parse_finishEP7Program+0xac>)
 800c220:	4618      	mov	r0, r3
 800c222:	f7f5 f8b2 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c226:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c22a:	461a      	mov	r2, r3
 800c22c:	210a      	movs	r1, #10
 800c22e:	6878      	ldr	r0, [r7, #4]
 800c230:	f7ff fbb8 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c234:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c238:	4618      	mov	r0, r3
 800c23a:	f014 f9bc 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c23e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800c242:	4618      	mov	r0, r3
 800c244:	f013 fff2 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 800c248:	6878      	ldr	r0, [r7, #4]
 800c24a:	f7ff fece 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	skip_newlines();
 800c24e:	6878      	ldr	r0, [r7, #4]
 800c250:	f7ff fe29 	bl	800bea6 <_ZN6Parser13skip_newlinesEv>
	Prog->finish = parse_body();
 800c254:	6878      	ldr	r0, [r7, #4]
 800c256:	f7ff fe5d 	bl	800bf14 <_ZN6Parser10parse_bodyEv>
 800c25a:	4602      	mov	r2, r0
 800c25c:	683b      	ldr	r3, [r7, #0]
 800c25e:	609a      	str	r2, [r3, #8]
}
 800c260:	bf00      	nop
 800c262:	3740      	adds	r7, #64	; 0x40
 800c264:	46bd      	mov	sp, r7
 800c266:	bd80      	pop	{r7, pc}
 800c268:	08024d08 	.word	0x08024d08
 800c26c:	08024d1c 	.word	0x08024d1c

0800c270 <_ZN6Parser13parse_programEv>:

Program* Parser::parse_program()
{
 800c270:	b580      	push	{r7, lr}
 800c272:	b08a      	sub	sp, #40	; 0x28
 800c274:	af00      	add	r7, sp, #0
 800c276:	6078      	str	r0, [r7, #4]
	auto Prog = new Program();
 800c278:	200c      	movs	r0, #12
 800c27a:	f013 ffc5 	bl	8020208 <_Znwj>
 800c27e:	4603      	mov	r3, r0
 800c280:	2200      	movs	r2, #0
 800c282:	601a      	str	r2, [r3, #0]
 800c284:	2200      	movs	r2, #0
 800c286:	605a      	str	r2, [r3, #4]
 800c288:	2200      	movs	r2, #0
 800c28a:	609a      	str	r2, [r3, #8]
 800c28c:	627b      	str	r3, [r7, #36]	; 0x24
	parse_setup(Prog);
 800c28e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800c290:	6878      	ldr	r0, [r7, #4]
 800c292:	f7ff fee1 	bl	800c058 <_ZN6Parser11parse_setupEP7Program>
	parse_loop(Prog);
 800c296:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800c298:	6878      	ldr	r0, [r7, #4]
 800c29a:	f7ff ff39 	bl	800c110 <_ZN6Parser10parse_loopEP7Program>
	parse_finish(Prog);
 800c29e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800c2a0:	6878      	ldr	r0, [r7, #4]
 800c2a2:	f7ff ff8d 	bl	800c1c0 <_ZN6Parser12parse_finishEP7Program>
	assert_token(TOKEN_END_OF_FILE, "end of file");
 800c2a6:	f107 0320 	add.w	r3, r7, #32
 800c2aa:	4618      	mov	r0, r3
 800c2ac:	f013 ffbd 	bl	802022a <_ZNSaIcEC1Ev>
 800c2b0:	f107 0220 	add.w	r2, r7, #32
 800c2b4:	f107 0308 	add.w	r3, r7, #8
 800c2b8:	490c      	ldr	r1, [pc, #48]	; (800c2ec <_ZN6Parser13parse_programEv+0x7c>)
 800c2ba:	4618      	mov	r0, r3
 800c2bc:	f7f5 f865 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 800c2c0:	f107 0308 	add.w	r3, r7, #8
 800c2c4:	461a      	mov	r2, r3
 800c2c6:	2125      	movs	r1, #37	; 0x25
 800c2c8:	6878      	ldr	r0, [r7, #4]
 800c2ca:	f7ff fb6b 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800c2ce:	f107 0308 	add.w	r3, r7, #8
 800c2d2:	4618      	mov	r0, r3
 800c2d4:	f014 f96f 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800c2d8:	f107 0320 	add.w	r3, r7, #32
 800c2dc:	4618      	mov	r0, r3
 800c2de:	f013 ffa5 	bl	802022c <_ZNSaIcED1Ev>
	return Prog;
 800c2e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 800c2e4:	4618      	mov	r0, r3
 800c2e6:	3728      	adds	r7, #40	; 0x28
 800c2e8:	46bd      	mov	sp, r7
 800c2ea:	bd80      	pop	{r7, pc}
 800c2ec:	08024d34 	.word	0x08024d34

0800c2f0 <_ZNSt6vectorIP10ExpressionSaIS1_EE9push_backEOS1_>:
	  _M_realloc_insert(end(), __x);
      }

#if __cplusplus >= 201103L
      void
      push_back(value_type&& __x)
 800c2f0:	b580      	push	{r7, lr}
 800c2f2:	b082      	sub	sp, #8
 800c2f4:	af00      	add	r7, sp, #0
 800c2f6:	6078      	str	r0, [r7, #4]
 800c2f8:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 800c2fa:	6838      	ldr	r0, [r7, #0]
 800c2fc:	f000 fb70 	bl	800c9e0 <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>
 800c300:	4603      	mov	r3, r0
 800c302:	4619      	mov	r1, r3
 800c304:	6878      	ldr	r0, [r7, #4]
 800c306:	f000 fb76 	bl	800c9f6 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 800c30a:	bf00      	nop
 800c30c:	3708      	adds	r7, #8
 800c30e:	46bd      	mov	sp, r7
 800c310:	bd80      	pop	{r7, pc}

0800c312 <_ZNSt6vectorIP4BodySaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 800c312:	b580      	push	{r7, lr}
 800c314:	b082      	sub	sp, #8
 800c316:	af00      	add	r7, sp, #0
 800c318:	6078      	str	r0, [r7, #4]
 800c31a:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 800c31c:	6838      	ldr	r0, [r7, #0]
 800c31e:	f000 fb9c 	bl	800ca5a <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>
 800c322:	4603      	mov	r3, r0
 800c324:	4619      	mov	r1, r3
 800c326:	6878      	ldr	r0, [r7, #4]
 800c328:	f000 fba2 	bl	800ca70 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 800c32c:	bf00      	nop
 800c32e:	3708      	adds	r7, #8
 800c330:	46bd      	mov	sp, r7
 800c332:	bd80      	pop	{r7, pc}

0800c334 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 800c334:	b580      	push	{r7, lr}
 800c336:	b082      	sub	sp, #8
 800c338:	af00      	add	r7, sp, #0
 800c33a:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 800c33c:	6878      	ldr	r0, [r7, #4]
 800c33e:	f000 fbc9 	bl	800cad4 <_ZNSaIP10ExpressionEC1Ev>
 800c342:	687b      	ldr	r3, [r7, #4]
 800c344:	4618      	mov	r0, r3
 800c346:	f7fc f943 	bl	80085d0 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 800c34a:	687b      	ldr	r3, [r7, #4]
 800c34c:	4618      	mov	r0, r3
 800c34e:	3708      	adds	r7, #8
 800c350:	46bd      	mov	sp, r7
 800c352:	bd80      	pop	{r7, pc}

0800c354 <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 800c354:	b580      	push	{r7, lr}
 800c356:	b082      	sub	sp, #8
 800c358:	af00      	add	r7, sp, #0
 800c35a:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 800c35c:	6878      	ldr	r0, [r7, #4]
 800c35e:	f000 fbc5 	bl	800caec <_ZNSaIP4BodyEC1Ev>
 800c362:	687b      	ldr	r3, [r7, #4]
 800c364:	4618      	mov	r0, r3
 800c366:	f000 fbcd 	bl	800cb04 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 800c36a:	687b      	ldr	r3, [r7, #4]
 800c36c:	4618      	mov	r0, r3
 800c36e:	3708      	adds	r7, #8
 800c370:	46bd      	mov	sp, r7
 800c372:	bd80      	pop	{r7, pc}

0800c374 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800c374:	b580      	push	{r7, lr}
 800c376:	b082      	sub	sp, #8
 800c378:	af00      	add	r7, sp, #0
 800c37a:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800c37c:	6878      	ldr	r0, [r7, #4]
 800c37e:	f7fd fd91 	bl	8009ea4 <_ZSt3getILj0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800c382:	4603      	mov	r3, r0
    }
 800c384:	4618      	mov	r0, r3
 800c386:	3708      	adds	r7, #8
 800c388:	46bd      	mov	sp, r7
 800c38a:	bd80      	pop	{r7, pc}

0800c38c <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_>:
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 800c38c:	b580      	push	{r7, lr}
 800c38e:	b082      	sub	sp, #8
 800c390:	af00      	add	r7, sp, #0
 800c392:	6078      	str	r0, [r7, #4]
 800c394:	6039      	str	r1, [r7, #0]
    { return __lhs.compare(__rhs) == 0; }
 800c396:	6839      	ldr	r1, [r7, #0]
 800c398:	6878      	ldr	r0, [r7, #4]
 800c39a:	f014 f9ff 	bl	802079c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 800c39e:	4603      	mov	r3, r0
 800c3a0:	2b00      	cmp	r3, #0
 800c3a2:	bf0c      	ite	eq
 800c3a4:	2301      	moveq	r3, #1
 800c3a6:	2300      	movne	r3, #0
 800c3a8:	b2db      	uxtb	r3, r3
 800c3aa:	4618      	mov	r0, r3
 800c3ac:	3708      	adds	r7, #8
 800c3ae:	46bd      	mov	sp, r7
 800c3b0:	bd80      	pop	{r7, pc}

0800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>:
      constexpr size_t index() const noexcept
 800c3b2:	b480      	push	{r7}
 800c3b4:	b083      	sub	sp, #12
 800c3b6:	af00      	add	r7, sp, #0
 800c3b8:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 800c3ba:	687b      	ldr	r3, [r7, #4]
 800c3bc:	791b      	ldrb	r3, [r3, #4]
 800c3be:	2bff      	cmp	r3, #255	; 0xff
 800c3c0:	d102      	bne.n	800c3c8 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x16>
	  return variant_npos;
 800c3c2:	f04f 33ff 	mov.w	r3, #4294967295
 800c3c6:	e001      	b.n	800c3cc <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv+0x1a>
	return this->_M_index;
 800c3c8:	687b      	ldr	r3, [r7, #4]
 800c3ca:	791b      	ldrb	r3, [r3, #4]
      }
 800c3cc:	4618      	mov	r0, r3
 800c3ce:	370c      	adds	r7, #12
 800c3d0:	46bd      	mov	sp, r7
 800c3d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3d6:	4770      	bx	lr

0800c3d8 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 800c3d8:	b590      	push	{r4, r7, lr}
 800c3da:	b085      	sub	sp, #20
 800c3dc:	af00      	add	r7, sp, #0
 800c3de:	6078      	str	r0, [r7, #4]
 800c3e0:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800c3e2:	2301      	movs	r3, #1
 800c3e4:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800c3e6:	6878      	ldr	r0, [r7, #4]
 800c3e8:	f7ff ffe3 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800c3ec:	4603      	mov	r3, r0
 800c3ee:	2b01      	cmp	r3, #1
 800c3f0:	bf0c      	ite	eq
 800c3f2:	2301      	moveq	r3, #1
 800c3f4:	2300      	movne	r3, #0
 800c3f6:	b2db      	uxtb	r3, r3
 800c3f8:	2b00      	cmp	r3, #0
 800c3fa:	d00a      	beq.n	800c412 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800c3fc:	6838      	ldr	r0, [r7, #0]
 800c3fe:	f000 fc03 	bl	800cc08 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 800c402:	4603      	mov	r3, r0
 800c404:	681c      	ldr	r4, [r3, #0]
 800c406:	6878      	ldr	r0, [r7, #4]
 800c408:	f000 fbe2 	bl	800cbd0 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800c40c:	4603      	mov	r3, r0
 800c40e:	601c      	str	r4, [r3, #0]
 800c410:	e007      	b.n	800c422 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800c412:	6838      	ldr	r0, [r7, #0]
 800c414:	f000 fbf8 	bl	800cc08 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 800c418:	4603      	mov	r3, r0
 800c41a:	4619      	mov	r1, r3
 800c41c:	6878      	ldr	r0, [r7, #4]
 800c41e:	f000 fbfe 	bl	800cc1e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 800c422:	687b      	ldr	r3, [r7, #4]
	}
 800c424:	4618      	mov	r0, r3
 800c426:	3714      	adds	r7, #20
 800c428:	46bd      	mov	sp, r7
 800c42a:	bd90      	pop	{r4, r7, pc}

0800c42c <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 800c42c:	b590      	push	{r4, r7, lr}
 800c42e:	b085      	sub	sp, #20
 800c430:	af00      	add	r7, sp, #0
 800c432:	6078      	str	r0, [r7, #4]
 800c434:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800c436:	2302      	movs	r3, #2
 800c438:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800c43a:	6878      	ldr	r0, [r7, #4]
 800c43c:	f7ff ffb9 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800c440:	4603      	mov	r3, r0
 800c442:	2b02      	cmp	r3, #2
 800c444:	bf0c      	ite	eq
 800c446:	2301      	moveq	r3, #1
 800c448:	2300      	movne	r3, #0
 800c44a:	b2db      	uxtb	r3, r3
 800c44c:	2b00      	cmp	r3, #0
 800c44e:	d00a      	beq.n	800c466 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800c450:	6838      	ldr	r0, [r7, #0]
 800c452:	f000 fc5f 	bl	800cd14 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 800c456:	4603      	mov	r3, r0
 800c458:	681c      	ldr	r4, [r3, #0]
 800c45a:	6878      	ldr	r0, [r7, #4]
 800c45c:	f000 fc3e 	bl	800ccdc <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800c460:	4603      	mov	r3, r0
 800c462:	601c      	str	r4, [r3, #0]
 800c464:	e007      	b.n	800c476 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800c466:	6838      	ldr	r0, [r7, #0]
 800c468:	f000 fc54 	bl	800cd14 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 800c46c:	4603      	mov	r3, r0
 800c46e:	4619      	mov	r1, r3
 800c470:	6878      	ldr	r0, [r7, #4]
 800c472:	f000 fc5a 	bl	800cd2a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 800c476:	687b      	ldr	r3, [r7, #4]
	}
 800c478:	4618      	mov	r0, r3
 800c47a:	3714      	adds	r7, #20
 800c47c:	46bd      	mov	sp, r7
 800c47e:	bd90      	pop	{r4, r7, pc}

0800c480 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 800c480:	b590      	push	{r4, r7, lr}
 800c482:	b085      	sub	sp, #20
 800c484:	af00      	add	r7, sp, #0
 800c486:	6078      	str	r0, [r7, #4]
 800c488:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800c48a:	2300      	movs	r3, #0
 800c48c:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800c48e:	6878      	ldr	r0, [r7, #4]
 800c490:	f7ff ff8f 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800c494:	4603      	mov	r3, r0
 800c496:	2b00      	cmp	r3, #0
 800c498:	bf0c      	ite	eq
 800c49a:	2301      	moveq	r3, #1
 800c49c:	2300      	movne	r3, #0
 800c49e:	b2db      	uxtb	r3, r3
 800c4a0:	2b00      	cmp	r3, #0
 800c4a2:	d00a      	beq.n	800c4ba <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800c4a4:	6838      	ldr	r0, [r7, #0]
 800c4a6:	f000 fc97 	bl	800cdd8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 800c4aa:	4603      	mov	r3, r0
 800c4ac:	681c      	ldr	r4, [r3, #0]
 800c4ae:	6878      	ldr	r0, [r7, #4]
 800c4b0:	f000 fc76 	bl	800cda0 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800c4b4:	4603      	mov	r3, r0
 800c4b6:	601c      	str	r4, [r3, #0]
 800c4b8:	e007      	b.n	800c4ca <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800c4ba:	6838      	ldr	r0, [r7, #0]
 800c4bc:	f000 fc8c 	bl	800cdd8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 800c4c0:	4603      	mov	r3, r0
 800c4c2:	4619      	mov	r1, r3
 800c4c4:	6878      	ldr	r0, [r7, #4]
 800c4c6:	f000 fc92 	bl	800cdee <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 800c4ca:	687b      	ldr	r3, [r7, #4]
	}
 800c4cc:	4618      	mov	r0, r3
 800c4ce:	3714      	adds	r7, #20
 800c4d0:	46bd      	mov	sp, r7
 800c4d2:	bd90      	pop	{r4, r7, pc}

0800c4d4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800c4d4:	b580      	push	{r7, lr}
 800c4d6:	b082      	sub	sp, #8
 800c4d8:	af00      	add	r7, sp, #0
 800c4da:	6078      	str	r0, [r7, #4]
 800c4dc:	7039      	strb	r1, [r7, #0]
 800c4de:	687b      	ldr	r3, [r7, #4]
 800c4e0:	4611      	mov	r1, r2
 800c4e2:	4618      	mov	r0, r3
 800c4e4:	f000 fcba 	bl	800ce5c <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800c4e8:	687b      	ldr	r3, [r7, #4]
 800c4ea:	4618      	mov	r0, r3
 800c4ec:	3708      	adds	r7, #8
 800c4ee:	46bd      	mov	sp, r7
 800c4f0:	bd80      	pop	{r7, pc}

0800c4f2 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800c4f2:	b580      	push	{r7, lr}
 800c4f4:	b082      	sub	sp, #8
 800c4f6:	af00      	add	r7, sp, #0
 800c4f8:	6078      	str	r0, [r7, #4]
 800c4fa:	7039      	strb	r1, [r7, #0]
 800c4fc:	687b      	ldr	r3, [r7, #4]
 800c4fe:	4611      	mov	r1, r2
 800c500:	4618      	mov	r0, r3
 800c502:	f7ff ffe7 	bl	800c4d4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800c506:	687b      	ldr	r3, [r7, #4]
 800c508:	4618      	mov	r0, r3
 800c50a:	3708      	adds	r7, #8
 800c50c:	46bd      	mov	sp, r7
 800c50e:	bd80      	pop	{r7, pc}

0800c510 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800c510:	b580      	push	{r7, lr}
 800c512:	b082      	sub	sp, #8
 800c514:	af00      	add	r7, sp, #0
 800c516:	6078      	str	r0, [r7, #4]
 800c518:	7039      	strb	r1, [r7, #0]
 800c51a:	687b      	ldr	r3, [r7, #4]
 800c51c:	4611      	mov	r1, r2
 800c51e:	4618      	mov	r0, r3
 800c520:	f7ff ffe7 	bl	800c4f2 <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800c524:	687b      	ldr	r3, [r7, #4]
 800c526:	4618      	mov	r0, r3
 800c528:	3708      	adds	r7, #8
 800c52a:	46bd      	mov	sp, r7
 800c52c:	bd80      	pop	{r7, pc}

0800c52e <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 800c52e:	b580      	push	{r7, lr}
 800c530:	b082      	sub	sp, #8
 800c532:	af00      	add	r7, sp, #0
 800c534:	6078      	str	r0, [r7, #4]
 800c536:	7039      	strb	r1, [r7, #0]
 800c538:	687b      	ldr	r3, [r7, #4]
 800c53a:	4611      	mov	r1, r2
 800c53c:	4618      	mov	r0, r3
 800c53e:	f7ff ffe7 	bl	800c510 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800c542:	687b      	ldr	r3, [r7, #4]
 800c544:	4618      	mov	r0, r3
 800c546:	3708      	adds	r7, #8
 800c548:	46bd      	mov	sp, r7
 800c54a:	bd80      	pop	{r7, pc}

0800c54c <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 800c54c:	b580      	push	{r7, lr}
 800c54e:	b082      	sub	sp, #8
 800c550:	af00      	add	r7, sp, #0
 800c552:	6078      	str	r0, [r7, #4]
 800c554:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 800c556:	687b      	ldr	r3, [r7, #4]
 800c558:	4611      	mov	r1, r2
 800c55a:	4618      	mov	r0, r3
 800c55c:	f7ff ffe7 	bl	800c52e <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEECI1NS0_16_Variant_storageILb1EJS3_S5_S7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 800c560:	687b      	ldr	r3, [r7, #4]
 800c562:	4618      	mov	r0, r3
 800c564:	3708      	adds	r7, #8
 800c566:	46bd      	mov	sp, r7
 800c568:	bd80      	pop	{r7, pc}

0800c56a <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1Ev>:
      _Variant_base()
 800c56a:	b580      	push	{r7, lr}
 800c56c:	b082      	sub	sp, #8
 800c56e:	af00      	add	r7, sp, #0
 800c570:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 800c572:	4619      	mov	r1, r3
 800c574:	6878      	ldr	r0, [r7, #4]
 800c576:	f7ff ffe9 	bl	800c54c <_ZNSt8__detail9__variant13_Variant_baseIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 800c57a:	687b      	ldr	r3, [r7, #4]
 800c57c:	4618      	mov	r0, r3
 800c57e:	3708      	adds	r7, #8
 800c580:	46bd      	mov	sp, r7
 800c582:	bd80      	pop	{r7, pc}

0800c584 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 800c584:	b590      	push	{r4, r7, lr}
 800c586:	b085      	sub	sp, #20
 800c588:	af00      	add	r7, sp, #0
 800c58a:	6078      	str	r0, [r7, #4]
 800c58c:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800c58e:	2303      	movs	r3, #3
 800c590:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800c592:	6878      	ldr	r0, [r7, #4]
 800c594:	f7ff ff0d 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800c598:	4603      	mov	r3, r0
 800c59a:	2b03      	cmp	r3, #3
 800c59c:	bf0c      	ite	eq
 800c59e:	2301      	moveq	r3, #1
 800c5a0:	2300      	movne	r3, #0
 800c5a2:	b2db      	uxtb	r3, r3
 800c5a4:	2b00      	cmp	r3, #0
 800c5a6:	d00a      	beq.n	800c5be <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800c5a8:	6838      	ldr	r0, [r7, #0]
 800c5aa:	f000 fcdd 	bl	800cf68 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 800c5ae:	4603      	mov	r3, r0
 800c5b0:	681c      	ldr	r4, [r3, #0]
 800c5b2:	6878      	ldr	r0, [r7, #4]
 800c5b4:	f000 fcbc 	bl	800cf30 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800c5b8:	4603      	mov	r3, r0
 800c5ba:	601c      	str	r4, [r3, #0]
 800c5bc:	e007      	b.n	800c5ce <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800c5be:	6838      	ldr	r0, [r7, #0]
 800c5c0:	f000 fcd2 	bl	800cf68 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 800c5c4:	4603      	mov	r3, r0
 800c5c6:	4619      	mov	r1, r3
 800c5c8:	6878      	ldr	r0, [r7, #4]
 800c5ca:	f000 fcd8 	bl	800cf7e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 800c5ce:	687b      	ldr	r3, [r7, #4]
	}
 800c5d0:	4618      	mov	r0, r3
 800c5d2:	3714      	adds	r7, #20
 800c5d4:	46bd      	mov	sp, r7
 800c5d6:	bd90      	pop	{r4, r7, pc}

0800c5d8 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 800c5d8:	b590      	push	{r4, r7, lr}
 800c5da:	b085      	sub	sp, #20
 800c5dc:	af00      	add	r7, sp, #0
 800c5de:	6078      	str	r0, [r7, #4]
 800c5e0:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 800c5e2:	2304      	movs	r3, #4
 800c5e4:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 800c5e6:	6878      	ldr	r0, [r7, #4]
 800c5e8:	f7ff fee3 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800c5ec:	4603      	mov	r3, r0
 800c5ee:	2b04      	cmp	r3, #4
 800c5f0:	bf0c      	ite	eq
 800c5f2:	2301      	moveq	r3, #1
 800c5f4:	2300      	movne	r3, #0
 800c5f6:	b2db      	uxtb	r3, r3
 800c5f8:	2b00      	cmp	r3, #0
 800c5fa:	d00a      	beq.n	800c612 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 800c5fc:	6838      	ldr	r0, [r7, #0]
 800c5fe:	f000 fd5d 	bl	800d0bc <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 800c602:	4603      	mov	r3, r0
 800c604:	681c      	ldr	r4, [r3, #0]
 800c606:	6878      	ldr	r0, [r7, #4]
 800c608:	f000 fd3c 	bl	800d084 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800c60c:	4603      	mov	r3, r0
 800c60e:	601c      	str	r4, [r3, #0]
 800c610:	e007      	b.n	800c622 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 800c612:	6838      	ldr	r0, [r7, #0]
 800c614:	f000 fd52 	bl	800d0bc <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 800c618:	4603      	mov	r3, r0
 800c61a:	4619      	mov	r1, r3
 800c61c:	6878      	ldr	r0, [r7, #4]
 800c61e:	f000 fd58 	bl	800d0d2 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 800c622:	687b      	ldr	r3, [r7, #4]
	}
 800c624:	4618      	mov	r0, r3
 800c626:	3714      	adds	r7, #20
 800c628:	46bd      	mov	sp, r7
 800c62a:	bd90      	pop	{r4, r7, pc}

0800c62c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 800c62c:	b580      	push	{r7, lr}
 800c62e:	b082      	sub	sp, #8
 800c630:	af00      	add	r7, sp, #0
 800c632:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 800c634:	6878      	ldr	r0, [r7, #4]
 800c636:	f000 fd65 	bl	800d104 <_ZNSaIP9StatementEC1Ev>
 800c63a:	687b      	ldr	r3, [r7, #4]
 800c63c:	4618      	mov	r0, r3
 800c63e:	f000 fd6d 	bl	800d11c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 800c642:	687b      	ldr	r3, [r7, #4]
 800c644:	4618      	mov	r0, r3
 800c646:	3708      	adds	r7, #8
 800c648:	46bd      	mov	sp, r7
 800c64a:	bd80      	pop	{r7, pc}

0800c64c <_ZNSt6vectorIP9StatementSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 800c64c:	b580      	push	{r7, lr}
 800c64e:	b082      	sub	sp, #8
 800c650:	af00      	add	r7, sp, #0
 800c652:	6078      	str	r0, [r7, #4]
 800c654:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 800c656:	6838      	ldr	r0, [r7, #0]
 800c658:	f000 fd92 	bl	800d180 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>
 800c65c:	4603      	mov	r3, r0
 800c65e:	4619      	mov	r1, r3
 800c660:	6878      	ldr	r0, [r7, #4]
 800c662:	f000 fd98 	bl	800d196 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 800c666:	bf00      	nop
 800c668:	3708      	adds	r7, #8
 800c66a:	46bd      	mov	sp, r7
 800c66c:	bd80      	pop	{r7, pc}

0800c66e <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 800c66e:	b480      	push	{r7}
 800c670:	b083      	sub	sp, #12
 800c672:	af00      	add	r7, sp, #0
 800c674:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 800c676:	687b      	ldr	r3, [r7, #4]
    }
 800c678:	4618      	mov	r0, r3
 800c67a:	370c      	adds	r7, #12
 800c67c:	46bd      	mov	sp, r7
 800c67e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c682:	4770      	bx	lr

0800c684 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800c684:	b580      	push	{r7, lr}
 800c686:	b082      	sub	sp, #8
 800c688:	af00      	add	r7, sp, #0
 800c68a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800c68c:	6878      	ldr	r0, [r7, #4]
 800c68e:	f7fa fedf 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c692:	4603      	mov	r3, r0
 800c694:	4618      	mov	r0, r3
 800c696:	f7fa fc8b 	bl	8006fb0 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800c69a:	4603      	mov	r3, r0
	}
 800c69c:	4618      	mov	r0, r3
 800c69e:	3708      	adds	r7, #8
 800c6a0:	46bd      	mov	sp, r7
 800c6a2:	bd80      	pop	{r7, pc}

0800c6a4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800c6a4:	b5b0      	push	{r4, r5, r7, lr}
 800c6a6:	b084      	sub	sp, #16
 800c6a8:	af00      	add	r7, sp, #0
 800c6aa:	6078      	str	r0, [r7, #4]
 800c6ac:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800c6ae:	6878      	ldr	r0, [r7, #4]
 800c6b0:	f000 fda3 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c6b4:	4604      	mov	r4, r0
 800c6b6:	6838      	ldr	r0, [r7, #0]
 800c6b8:	f7fa feca 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c6bc:	4603      	mov	r3, r0
 800c6be:	4618      	mov	r0, r3
 800c6c0:	f7ff ffe0 	bl	800c684 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESK_EEDcOSF_>
 800c6c4:	4601      	mov	r1, r0
 800c6c6:	f107 030c 	add.w	r3, r7, #12
 800c6ca:	461a      	mov	r2, r3
 800c6cc:	4620      	mov	r0, r4
 800c6ce:	f000 fd9f 	bl	800d210 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 800c6d2:	462b      	mov	r3, r5
      }
 800c6d4:	4618      	mov	r0, r3
 800c6d6:	3710      	adds	r7, #16
 800c6d8:	46bd      	mov	sp, r7
 800c6da:	bdb0      	pop	{r4, r5, r7, pc}

0800c6dc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800c6dc:	b5b0      	push	{r4, r5, r7, lr}
 800c6de:	b082      	sub	sp, #8
 800c6e0:	af00      	add	r7, sp, #0
 800c6e2:	6078      	str	r0, [r7, #4]
 800c6e4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800c6e6:	6878      	ldr	r0, [r7, #4]
 800c6e8:	f000 fd87 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c6ec:	4604      	mov	r4, r0
 800c6ee:	6838      	ldr	r0, [r7, #0]
 800c6f0:	f7fa feae 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c6f4:	4603      	mov	r3, r0
 800c6f6:	4619      	mov	r1, r3
 800c6f8:	4620      	mov	r0, r4
 800c6fa:	f7ff ffd3 	bl	800c6a4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 800c6fe:	462b      	mov	r3, r5
      }
 800c700:	4618      	mov	r0, r3
 800c702:	3708      	adds	r7, #8
 800c704:	46bd      	mov	sp, r7
 800c706:	bdb0      	pop	{r4, r5, r7, pc}

0800c708 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800c708:	b5b0      	push	{r4, r5, r7, lr}
 800c70a:	b082      	sub	sp, #8
 800c70c:	af00      	add	r7, sp, #0
 800c70e:	6078      	str	r0, [r7, #4]
 800c710:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800c712:	6878      	ldr	r0, [r7, #4]
 800c714:	f000 fd71 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c718:	4604      	mov	r4, r0
 800c71a:	6838      	ldr	r0, [r7, #0]
 800c71c:	f7fa fe98 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c720:	4603      	mov	r3, r0
 800c722:	4619      	mov	r1, r3
 800c724:	4620      	mov	r0, r4
 800c726:	f7ff ffd9 	bl	800c6dc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 800c72a:	462b      	mov	r3, r5
      }
 800c72c:	4618      	mov	r0, r3
 800c72e:	3708      	adds	r7, #8
 800c730:	46bd      	mov	sp, r7
 800c732:	bdb0      	pop	{r4, r5, r7, pc}

0800c734 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800c734:	b580      	push	{r7, lr}
 800c736:	b082      	sub	sp, #8
 800c738:	af00      	add	r7, sp, #0
 800c73a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800c73c:	6878      	ldr	r0, [r7, #4]
 800c73e:	f7fa fe87 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c742:	4603      	mov	r3, r0
 800c744:	4618      	mov	r0, r3
 800c746:	f7fa fbe9 	bl	8006f1c <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800c74a:	4603      	mov	r3, r0
	}
 800c74c:	4618      	mov	r0, r3
 800c74e:	3708      	adds	r7, #8
 800c750:	46bd      	mov	sp, r7
 800c752:	bd80      	pop	{r7, pc}

0800c754 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800c754:	b5b0      	push	{r4, r5, r7, lr}
 800c756:	b084      	sub	sp, #16
 800c758:	af00      	add	r7, sp, #0
 800c75a:	6078      	str	r0, [r7, #4]
 800c75c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800c75e:	6878      	ldr	r0, [r7, #4]
 800c760:	f000 fd4b 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c764:	4604      	mov	r4, r0
 800c766:	6838      	ldr	r0, [r7, #0]
 800c768:	f7fa fe72 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c76c:	4603      	mov	r3, r0
 800c76e:	4618      	mov	r0, r3
 800c770:	f7ff ffe0 	bl	800c734 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESK_EEDcOSF_>
 800c774:	4601      	mov	r1, r0
 800c776:	f107 030c 	add.w	r3, r7, #12
 800c77a:	461a      	mov	r2, r3
 800c77c:	4620      	mov	r0, r4
 800c77e:	f000 fd65 	bl	800d24c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 800c782:	462b      	mov	r3, r5
      }
 800c784:	4618      	mov	r0, r3
 800c786:	3710      	adds	r7, #16
 800c788:	46bd      	mov	sp, r7
 800c78a:	bdb0      	pop	{r4, r5, r7, pc}

0800c78c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800c78c:	b5b0      	push	{r4, r5, r7, lr}
 800c78e:	b082      	sub	sp, #8
 800c790:	af00      	add	r7, sp, #0
 800c792:	6078      	str	r0, [r7, #4]
 800c794:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800c796:	6878      	ldr	r0, [r7, #4]
 800c798:	f000 fd2f 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c79c:	4604      	mov	r4, r0
 800c79e:	6838      	ldr	r0, [r7, #0]
 800c7a0:	f7fa fe56 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c7a4:	4603      	mov	r3, r0
 800c7a6:	4619      	mov	r1, r3
 800c7a8:	4620      	mov	r0, r4
 800c7aa:	f7ff ffd3 	bl	800c754 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 800c7ae:	462b      	mov	r3, r5
      }
 800c7b0:	4618      	mov	r0, r3
 800c7b2:	3708      	adds	r7, #8
 800c7b4:	46bd      	mov	sp, r7
 800c7b6:	bdb0      	pop	{r4, r5, r7, pc}

0800c7b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800c7b8:	b5b0      	push	{r4, r5, r7, lr}
 800c7ba:	b082      	sub	sp, #8
 800c7bc:	af00      	add	r7, sp, #0
 800c7be:	6078      	str	r0, [r7, #4]
 800c7c0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800c7c2:	6878      	ldr	r0, [r7, #4]
 800c7c4:	f000 fd19 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c7c8:	4604      	mov	r4, r0
 800c7ca:	6838      	ldr	r0, [r7, #0]
 800c7cc:	f7fa fe40 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c7d0:	4603      	mov	r3, r0
 800c7d2:	4619      	mov	r1, r3
 800c7d4:	4620      	mov	r0, r4
 800c7d6:	f7ff ffd9 	bl	800c78c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 800c7da:	462b      	mov	r3, r5
      }
 800c7dc:	4618      	mov	r0, r3
 800c7de:	3708      	adds	r7, #8
 800c7e0:	46bd      	mov	sp, r7
 800c7e2:	bdb0      	pop	{r4, r5, r7, pc}

0800c7e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800c7e4:	b580      	push	{r7, lr}
 800c7e6:	b082      	sub	sp, #8
 800c7e8:	af00      	add	r7, sp, #0
 800c7ea:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800c7ec:	6878      	ldr	r0, [r7, #4]
 800c7ee:	f7fa fe2f 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c7f2:	4603      	mov	r3, r0
 800c7f4:	4618      	mov	r0, r3
 800c7f6:	f7fa fccd 	bl	8007194 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800c7fa:	4603      	mov	r3, r0
	}
 800c7fc:	4618      	mov	r0, r3
 800c7fe:	3708      	adds	r7, #8
 800c800:	46bd      	mov	sp, r7
 800c802:	bd80      	pop	{r7, pc}

0800c804 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800c804:	b5b0      	push	{r4, r5, r7, lr}
 800c806:	b084      	sub	sp, #16
 800c808:	af00      	add	r7, sp, #0
 800c80a:	6078      	str	r0, [r7, #4]
 800c80c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800c80e:	6878      	ldr	r0, [r7, #4]
 800c810:	f000 fcf3 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c814:	4604      	mov	r4, r0
 800c816:	6838      	ldr	r0, [r7, #0]
 800c818:	f7fa fe1a 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c81c:	4603      	mov	r3, r0
 800c81e:	4618      	mov	r0, r3
 800c820:	f7ff ffe0 	bl	800c7e4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESK_EEDcOSF_>
 800c824:	4601      	mov	r1, r0
 800c826:	f107 030c 	add.w	r3, r7, #12
 800c82a:	461a      	mov	r2, r3
 800c82c:	4620      	mov	r0, r4
 800c82e:	f000 fd2b 	bl	800d288 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 800c832:	462b      	mov	r3, r5
      }
 800c834:	4618      	mov	r0, r3
 800c836:	3710      	adds	r7, #16
 800c838:	46bd      	mov	sp, r7
 800c83a:	bdb0      	pop	{r4, r5, r7, pc}

0800c83c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800c83c:	b5b0      	push	{r4, r5, r7, lr}
 800c83e:	b082      	sub	sp, #8
 800c840:	af00      	add	r7, sp, #0
 800c842:	6078      	str	r0, [r7, #4]
 800c844:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800c846:	6878      	ldr	r0, [r7, #4]
 800c848:	f000 fcd7 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c84c:	4604      	mov	r4, r0
 800c84e:	6838      	ldr	r0, [r7, #0]
 800c850:	f7fa fdfe 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c854:	4603      	mov	r3, r0
 800c856:	4619      	mov	r1, r3
 800c858:	4620      	mov	r0, r4
 800c85a:	f7ff ffd3 	bl	800c804 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 800c85e:	462b      	mov	r3, r5
      }
 800c860:	4618      	mov	r0, r3
 800c862:	3708      	adds	r7, #8
 800c864:	46bd      	mov	sp, r7
 800c866:	bdb0      	pop	{r4, r5, r7, pc}

0800c868 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800c868:	b5b0      	push	{r4, r5, r7, lr}
 800c86a:	b082      	sub	sp, #8
 800c86c:	af00      	add	r7, sp, #0
 800c86e:	6078      	str	r0, [r7, #4]
 800c870:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800c872:	6878      	ldr	r0, [r7, #4]
 800c874:	f000 fcc1 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c878:	4604      	mov	r4, r0
 800c87a:	6838      	ldr	r0, [r7, #0]
 800c87c:	f7fa fde8 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c880:	4603      	mov	r3, r0
 800c882:	4619      	mov	r1, r3
 800c884:	4620      	mov	r0, r4
 800c886:	f7ff ffd9 	bl	800c83c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 800c88a:	462b      	mov	r3, r5
      }
 800c88c:	4618      	mov	r0, r3
 800c88e:	3708      	adds	r7, #8
 800c890:	46bd      	mov	sp, r7
 800c892:	bdb0      	pop	{r4, r5, r7, pc}

0800c894 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 800c894:	b580      	push	{r7, lr}
 800c896:	b082      	sub	sp, #8
 800c898:	af00      	add	r7, sp, #0
 800c89a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 800c89c:	6878      	ldr	r0, [r7, #4]
 800c89e:	f7fa fdd7 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c8a2:	4603      	mov	r3, r0
 800c8a4:	4618      	mov	r0, r3
 800c8a6:	f7fa fd23 	bl	80072f0 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800c8aa:	4603      	mov	r3, r0
	}
 800c8ac:	4618      	mov	r0, r3
 800c8ae:	3708      	adds	r7, #8
 800c8b0:	46bd      	mov	sp, r7
 800c8b2:	bd80      	pop	{r7, pc}

0800c8b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 800c8b4:	b5b0      	push	{r4, r5, r7, lr}
 800c8b6:	b084      	sub	sp, #16
 800c8b8:	af00      	add	r7, sp, #0
 800c8ba:	6078      	str	r0, [r7, #4]
 800c8bc:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 800c8be:	6878      	ldr	r0, [r7, #4]
 800c8c0:	f000 fc9b 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c8c4:	4604      	mov	r4, r0
 800c8c6:	6838      	ldr	r0, [r7, #0]
 800c8c8:	f7fa fdc2 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c8cc:	4603      	mov	r3, r0
 800c8ce:	4618      	mov	r0, r3
 800c8d0:	f7ff ffe0 	bl	800c894 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESK_EEDcOSF_>
 800c8d4:	4601      	mov	r1, r0
 800c8d6:	f107 030c 	add.w	r3, r7, #12
 800c8da:	461a      	mov	r2, r3
 800c8dc:	4620      	mov	r0, r4
 800c8de:	f000 fcf1 	bl	800d2c4 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>
	      integral_constant<size_t, __indices>()...);
 800c8e2:	462b      	mov	r3, r5
      }
 800c8e4:	4618      	mov	r0, r3
 800c8e6:	3710      	adds	r7, #16
 800c8e8:	46bd      	mov	sp, r7
 800c8ea:	bdb0      	pop	{r4, r5, r7, pc}

0800c8ec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800c8ec:	b5b0      	push	{r4, r5, r7, lr}
 800c8ee:	b082      	sub	sp, #8
 800c8f0:	af00      	add	r7, sp, #0
 800c8f2:	6078      	str	r0, [r7, #4]
 800c8f4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 800c8f6:	6878      	ldr	r0, [r7, #4]
 800c8f8:	f000 fc7f 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c8fc:	4604      	mov	r4, r0
 800c8fe:	6838      	ldr	r0, [r7, #0]
 800c900:	f7fa fda6 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c904:	4603      	mov	r3, r0
 800c906:	4619      	mov	r1, r3
 800c908:	4620      	mov	r0, r4
 800c90a:	f7ff ffd3 	bl	800c8b4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESH_SK_>
				   std::forward<_Variants>(__vars)...);
 800c90e:	462b      	mov	r3, r5
      }
 800c910:	4618      	mov	r0, r3
 800c912:	3708      	adds	r7, #8
 800c914:	46bd      	mov	sp, r7
 800c916:	bdb0      	pop	{r4, r5, r7, pc}

0800c918 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESH_SK_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 800c918:	b5b0      	push	{r4, r5, r7, lr}
 800c91a:	b082      	sub	sp, #8
 800c91c:	af00      	add	r7, sp, #0
 800c91e:	6078      	str	r0, [r7, #4]
 800c920:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 800c922:	6878      	ldr	r0, [r7, #4]
 800c924:	f000 fc69 	bl	800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c928:	4604      	mov	r4, r0
 800c92a:	6838      	ldr	r0, [r7, #0]
 800c92c:	f7fa fd90 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c930:	4603      	mov	r3, r0
 800c932:	4619      	mov	r1, r3
 800c934:	4620      	mov	r0, r4
 800c936:	f7ff ffd9 	bl	800c8ec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSB_EUlOT_T0_E_RSt7variantIJSA_ifbEEEJEEESt5tupleIJSK_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESH_SK_>
				   std::forward<_Variants>(__vars)...);
 800c93a:	462b      	mov	r3, r5
      }
 800c93c:	4618      	mov	r0, r3
 800c93e:	3708      	adds	r7, #8
 800c940:	46bd      	mov	sp, r7
 800c942:	bdb0      	pop	{r4, r5, r7, pc}

0800c944 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 800c944:	b580      	push	{r7, lr}
 800c946:	b082      	sub	sp, #8
 800c948:	af00      	add	r7, sp, #0
 800c94a:	6078      	str	r0, [r7, #4]
 800c94c:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 800c94e:	683b      	ldr	r3, [r7, #0]
 800c950:	009b      	lsls	r3, r3, #2
 800c952:	687a      	ldr	r2, [r7, #4]
 800c954:	4413      	add	r3, r2
 800c956:	4618      	mov	r0, r3
 800c958:	f000 fcd2 	bl	800d300 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>
 800c95c:	4603      	mov	r3, r0
	}
 800c95e:	4618      	mov	r0, r3
 800c960:	3708      	adds	r7, #8
 800c962:	46bd      	mov	sp, r7
 800c964:	bd80      	pop	{r7, pc}
	...

0800c968 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 800c968:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c96a:	b085      	sub	sp, #20
 800c96c:	af00      	add	r7, sp, #0
 800c96e:	6078      	str	r0, [r7, #4]
 800c970:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 800c972:	4b0f      	ldr	r3, [pc, #60]	; (800c9b0 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_+0x48>)
 800c974:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 800c976:	6838      	ldr	r0, [r7, #0]
 800c978:	f7fa fa9a 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800c97c:	4603      	mov	r3, r0
 800c97e:	4619      	mov	r1, r3
 800c980:	68f8      	ldr	r0, [r7, #12]
 800c982:	f7ff ffdf 	bl	800c944 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJLj4EEE9_M_accessIJEEERKSL_jDpT_>
 800c986:	4603      	mov	r3, r0
 800c988:	681b      	ldr	r3, [r3, #0]
 800c98a:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 800c98c:	68bc      	ldr	r4, [r7, #8]
 800c98e:	6878      	ldr	r0, [r7, #4]
 800c990:	f000 fcc1 	bl	800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800c994:	4605      	mov	r5, r0
 800c996:	6838      	ldr	r0, [r7, #0]
 800c998:	f7fa fd5a 	bl	8007450 <_ZSt7forwardIRSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800c99c:	4603      	mov	r3, r0
 800c99e:	4619      	mov	r1, r3
 800c9a0:	4628      	mov	r0, r5
 800c9a2:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 800c9a4:	4633      	mov	r3, r6
    }
 800c9a6:	4618      	mov	r0, r3
 800c9a8:	3714      	adds	r7, #20
 800c9aa:	46bd      	mov	sp, r7
 800c9ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c9ae:	bf00      	nop
 800c9b0:	08025230 	.word	0x08025230

0800c9b4 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_>:
      operator=(_Move_assign_base&& __rhs)
 800c9b4:	b580      	push	{r7, lr}
 800c9b6:	b084      	sub	sp, #16
 800c9b8:	af00      	add	r7, sp, #0
 800c9ba:	6078      	str	r0, [r7, #4]
 800c9bc:	6039      	str	r1, [r7, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800c9be:	687b      	ldr	r3, [r7, #4]
 800c9c0:	60fb      	str	r3, [r7, #12]
 800c9c2:	6838      	ldr	r0, [r7, #0]
 800c9c4:	f7ff fe53 	bl	800c66e <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 800c9c8:	4602      	mov	r2, r0
 800c9ca:	f107 030c 	add.w	r3, r7, #12
 800c9ce:	4611      	mov	r1, r2
 800c9d0:	4618      	mov	r0, r3
 800c9d2:	f7ff ffc9 	bl	800c968 <_ZSt10__do_visitILb1ELb1EZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRSt7variantIJS8_ifbEEEEDcOT1_DpOT2_>
	return *this;
 800c9d6:	687b      	ldr	r3, [r7, #4]
      }
 800c9d8:	4618      	mov	r0, r3
 800c9da:	3710      	adds	r7, #16
 800c9dc:	46bd      	mov	sp, r7
 800c9de:	bd80      	pop	{r7, pc}

0800c9e0 <_ZSt4moveIRP10ExpressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 800c9e0:	b480      	push	{r7}
 800c9e2:	b083      	sub	sp, #12
 800c9e4:	af00      	add	r7, sp, #0
 800c9e6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800c9e8:	687b      	ldr	r3, [r7, #4]
 800c9ea:	4618      	mov	r0, r3
 800c9ec:	370c      	adds	r7, #12
 800c9ee:	46bd      	mov	sp, r7
 800c9f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9f4:	4770      	bx	lr

0800c9f6 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
#if __cplusplus > 201402L
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
 800c9f6:	b5b0      	push	{r4, r5, r7, lr}
 800c9f8:	b082      	sub	sp, #8
 800c9fa:	af00      	add	r7, sp, #0
 800c9fc:	6078      	str	r0, [r7, #4]
 800c9fe:	6039      	str	r1, [r7, #0]
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 800ca00:	687b      	ldr	r3, [r7, #4]
 800ca02:	685a      	ldr	r2, [r3, #4]
 800ca04:	687b      	ldr	r3, [r7, #4]
 800ca06:	689b      	ldr	r3, [r3, #8]
 800ca08:	429a      	cmp	r2, r3
 800ca0a:	d011      	beq.n	800ca30 <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 800ca0c:	687c      	ldr	r4, [r7, #4]
 800ca0e:	687b      	ldr	r3, [r7, #4]
 800ca10:	685d      	ldr	r5, [r3, #4]
 800ca12:	6838      	ldr	r0, [r7, #0]
 800ca14:	f000 fc8a 	bl	800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 800ca18:	4603      	mov	r3, r0
 800ca1a:	461a      	mov	r2, r3
 800ca1c:	4629      	mov	r1, r5
 800ca1e:	4620      	mov	r0, r4
 800ca20:	f000 fc8f 	bl	800d342 <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
 800ca24:	687b      	ldr	r3, [r7, #4]
 800ca26:	685b      	ldr	r3, [r3, #4]
 800ca28:	1d1a      	adds	r2, r3, #4
 800ca2a:	687b      	ldr	r3, [r7, #4]
 800ca2c:	605a      	str	r2, [r3, #4]
 800ca2e:	e00c      	b.n	800ca4a <_ZNSt6vectorIP10ExpressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 800ca30:	6878      	ldr	r0, [r7, #4]
 800ca32:	f000 fc99 	bl	800d368 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 800ca36:	4604      	mov	r4, r0
 800ca38:	6838      	ldr	r0, [r7, #0]
 800ca3a:	f000 fc77 	bl	800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 800ca3e:	4603      	mov	r3, r0
 800ca40:	461a      	mov	r2, r3
 800ca42:	4621      	mov	r1, r4
 800ca44:	6878      	ldr	r0, [r7, #4]
 800ca46:	f000 fca1 	bl	800d38c <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
 800ca4a:	6878      	ldr	r0, [r7, #4]
 800ca4c:	f000 fd1a 	bl	800d484 <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>
 800ca50:	4603      	mov	r3, r0
#endif
      }
 800ca52:	4618      	mov	r0, r3
 800ca54:	3708      	adds	r7, #8
 800ca56:	46bd      	mov	sp, r7
 800ca58:	bdb0      	pop	{r4, r5, r7, pc}

0800ca5a <_ZSt4moveIRP4BodyEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 800ca5a:	b480      	push	{r7}
 800ca5c:	b083      	sub	sp, #12
 800ca5e:	af00      	add	r7, sp, #0
 800ca60:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800ca62:	687b      	ldr	r3, [r7, #4]
 800ca64:	4618      	mov	r0, r3
 800ca66:	370c      	adds	r7, #12
 800ca68:	46bd      	mov	sp, r7
 800ca6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca6e:	4770      	bx	lr

0800ca70 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 800ca70:	b5b0      	push	{r4, r5, r7, lr}
 800ca72:	b082      	sub	sp, #8
 800ca74:	af00      	add	r7, sp, #0
 800ca76:	6078      	str	r0, [r7, #4]
 800ca78:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 800ca7a:	687b      	ldr	r3, [r7, #4]
 800ca7c:	685a      	ldr	r2, [r3, #4]
 800ca7e:	687b      	ldr	r3, [r7, #4]
 800ca80:	689b      	ldr	r3, [r3, #8]
 800ca82:	429a      	cmp	r2, r3
 800ca84:	d011      	beq.n	800caaa <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 800ca86:	687c      	ldr	r4, [r7, #4]
 800ca88:	687b      	ldr	r3, [r7, #4]
 800ca8a:	685d      	ldr	r5, [r3, #4]
 800ca8c:	6838      	ldr	r0, [r7, #0]
 800ca8e:	f000 fd14 	bl	800d4ba <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 800ca92:	4603      	mov	r3, r0
 800ca94:	461a      	mov	r2, r3
 800ca96:	4629      	mov	r1, r5
 800ca98:	4620      	mov	r0, r4
 800ca9a:	f000 fd19 	bl	800d4d0 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 800ca9e:	687b      	ldr	r3, [r7, #4]
 800caa0:	685b      	ldr	r3, [r3, #4]
 800caa2:	1d1a      	adds	r2, r3, #4
 800caa4:	687b      	ldr	r3, [r7, #4]
 800caa6:	605a      	str	r2, [r3, #4]
 800caa8:	e00c      	b.n	800cac4 <_ZNSt6vectorIP4BodySaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 800caaa:	6878      	ldr	r0, [r7, #4]
 800caac:	f000 fd23 	bl	800d4f6 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 800cab0:	4604      	mov	r4, r0
 800cab2:	6838      	ldr	r0, [r7, #0]
 800cab4:	f000 fd01 	bl	800d4ba <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 800cab8:	4603      	mov	r3, r0
 800caba:	461a      	mov	r2, r3
 800cabc:	4621      	mov	r1, r4
 800cabe:	6878      	ldr	r0, [r7, #4]
 800cac0:	f000 fd2a 	bl	800d518 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 800cac4:	6878      	ldr	r0, [r7, #4]
 800cac6:	f000 fda3 	bl	800d610 <_ZNSt6vectorIP4BodySaIS1_EE4backEv>
 800caca:	4603      	mov	r3, r0
      }
 800cacc:	4618      	mov	r0, r3
 800cace:	3708      	adds	r7, #8
 800cad0:	46bd      	mov	sp, r7
 800cad2:	bdb0      	pop	{r4, r5, r7, pc}

0800cad4 <_ZNSaIP10ExpressionEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 800cad4:	b580      	push	{r7, lr}
 800cad6:	b082      	sub	sp, #8
 800cad8:	af00      	add	r7, sp, #0
 800cada:	6078      	str	r0, [r7, #4]
 800cadc:	6878      	ldr	r0, [r7, #4]
 800cade:	f000 fdb2 	bl	800d646 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>
 800cae2:	687b      	ldr	r3, [r7, #4]
 800cae4:	4618      	mov	r0, r3
 800cae6:	3708      	adds	r7, #8
 800cae8:	46bd      	mov	sp, r7
 800caea:	bd80      	pop	{r7, pc}

0800caec <_ZNSaIP4BodyEC1Ev>:
 800caec:	b580      	push	{r7, lr}
 800caee:	b082      	sub	sp, #8
 800caf0:	af00      	add	r7, sp, #0
 800caf2:	6078      	str	r0, [r7, #4]
 800caf4:	6878      	ldr	r0, [r7, #4]
 800caf6:	f000 fdb1 	bl	800d65c <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>
 800cafa:	687b      	ldr	r3, [r7, #4]
 800cafc:	4618      	mov	r0, r3
 800cafe:	3708      	adds	r7, #8
 800cb00:	46bd      	mov	sp, r7
 800cb02:	bd80      	pop	{r7, pc}

0800cb04 <_ZNSt12_Vector_baseIP4BodySaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800cb04:	b480      	push	{r7}
 800cb06:	b083      	sub	sp, #12
 800cb08:	af00      	add	r7, sp, #0
 800cb0a:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 800cb0c:	687b      	ldr	r3, [r7, #4]
 800cb0e:	2200      	movs	r2, #0
 800cb10:	601a      	str	r2, [r3, #0]
 800cb12:	687b      	ldr	r3, [r7, #4]
 800cb14:	2200      	movs	r2, #0
 800cb16:	605a      	str	r2, [r3, #4]
 800cb18:	687b      	ldr	r3, [r7, #4]
 800cb1a:	2200      	movs	r2, #0
 800cb1c:	609a      	str	r2, [r3, #8]
	{ }
 800cb1e:	687b      	ldr	r3, [r7, #4]
 800cb20:	4618      	mov	r0, r3
 800cb22:	370c      	adds	r7, #12
 800cb24:	46bd      	mov	sp, r7
 800cb26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb2a:	4770      	bx	lr

0800cb2c <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800cb2c:	b580      	push	{r7, lr}
 800cb2e:	b084      	sub	sp, #16
 800cb30:	af00      	add	r7, sp, #0
 800cb32:	60f8      	str	r0, [r7, #12]
 800cb34:	60b9      	str	r1, [r7, #8]
 800cb36:	607a      	str	r2, [r7, #4]
	if (__p)
 800cb38:	68bb      	ldr	r3, [r7, #8]
 800cb3a:	2b00      	cmp	r3, #0
 800cb3c:	d005      	beq.n	800cb4a <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800cb3e:	68fb      	ldr	r3, [r7, #12]
 800cb40:	687a      	ldr	r2, [r7, #4]
 800cb42:	68b9      	ldr	r1, [r7, #8]
 800cb44:	4618      	mov	r0, r3
 800cb46:	f000 fd94 	bl	800d672 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>
      }
 800cb4a:	bf00      	nop
 800cb4c:	3710      	adds	r7, #16
 800cb4e:	46bd      	mov	sp, r7
 800cb50:	bd80      	pop	{r7, pc}

0800cb52 <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800cb52:	b480      	push	{r7}
 800cb54:	b083      	sub	sp, #12
 800cb56:	af00      	add	r7, sp, #0
 800cb58:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800cb5a:	687b      	ldr	r3, [r7, #4]
 800cb5c:	4618      	mov	r0, r3
 800cb5e:	370c      	adds	r7, #12
 800cb60:	46bd      	mov	sp, r7
 800cb62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb66:	4770      	bx	lr

0800cb68 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cb68:	b580      	push	{r7, lr}
 800cb6a:	b082      	sub	sp, #8
 800cb6c:	af00      	add	r7, sp, #0
 800cb6e:	7138      	strb	r0, [r7, #4]
 800cb70:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cb72:	6838      	ldr	r0, [r7, #0]
 800cb74:	f000 fda2 	bl	800d6bc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cb78:	4603      	mov	r3, r0
 800cb7a:	4618      	mov	r0, r3
 800cb7c:	f7f8 ff1a 	bl	80059b4 <_ZNRSt8__detail9__variant14_UninitializedIP13Function_callLb1EE6_M_getEv>
 800cb80:	4603      	mov	r3, r0
 800cb82:	4618      	mov	r0, r3
 800cb84:	3708      	adds	r7, #8
 800cb86:	46bd      	mov	sp, r7
 800cb88:	bd80      	pop	{r7, pc}

0800cb8a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cb8a:	b590      	push	{r4, r7, lr}
 800cb8c:	b083      	sub	sp, #12
 800cb8e:	af00      	add	r7, sp, #0
 800cb90:	7138      	strb	r0, [r7, #4]
 800cb92:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cb94:	6838      	ldr	r0, [r7, #0]
 800cb96:	f000 fd86 	bl	800d6a6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800cb9a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cb9c:	4619      	mov	r1, r3
 800cb9e:	4620      	mov	r0, r4
 800cba0:	f7ff ffe2 	bl	800cb68 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cba4:	4603      	mov	r3, r0
    }
 800cba6:	4618      	mov	r0, r3
 800cba8:	370c      	adds	r7, #12
 800cbaa:	46bd      	mov	sp, r7
 800cbac:	bd90      	pop	{r4, r7, pc}

0800cbae <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cbae:	b590      	push	{r4, r7, lr}
 800cbb0:	b083      	sub	sp, #12
 800cbb2:	af00      	add	r7, sp, #0
 800cbb4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cbb6:	6878      	ldr	r0, [r7, #4]
 800cbb8:	f000 fd6a 	bl	800d690 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cbbc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cbbe:	4619      	mov	r1, r3
 800cbc0:	4620      	mov	r0, r4
 800cbc2:	f7ff ffe2 	bl	800cb8a <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cbc6:	4603      	mov	r3, r0
    }
 800cbc8:	4618      	mov	r0, r3
 800cbca:	370c      	adds	r7, #12
 800cbcc:	46bd      	mov	sp, r7
 800cbce:	bd90      	pop	{r4, r7, pc}

0800cbd0 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800cbd0:	b580      	push	{r7, lr}
 800cbd2:	b082      	sub	sp, #8
 800cbd4:	af00      	add	r7, sp, #0
 800cbd6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800cbd8:	6878      	ldr	r0, [r7, #4]
 800cbda:	f7ff fbea 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800cbde:	4603      	mov	r3, r0
 800cbe0:	2b01      	cmp	r3, #1
 800cbe2:	bf14      	ite	ne
 800cbe4:	2301      	movne	r3, #1
 800cbe6:	2300      	moveq	r3, #0
 800cbe8:	b2db      	uxtb	r3, r3
 800cbea:	2b00      	cmp	r3, #0
 800cbec:	d002      	beq.n	800cbf4 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800cbee:	4805      	ldr	r0, [pc, #20]	; (800cc04 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800cbf0:	f7f7 faea 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800cbf4:	6878      	ldr	r0, [r7, #4]
 800cbf6:	f7ff ffda 	bl	800cbae <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800cbfa:	4603      	mov	r3, r0
    }
 800cbfc:	4618      	mov	r0, r3
 800cbfe:	3708      	adds	r7, #8
 800cc00:	46bd      	mov	sp, r7
 800cc02:	bd80      	pop	{r7, pc}
 800cc04:	08024d40 	.word	0x08024d40

0800cc08 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800cc08:	b480      	push	{r7}
 800cc0a:	b083      	sub	sp, #12
 800cc0c:	af00      	add	r7, sp, #0
 800cc0e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800cc10:	687b      	ldr	r3, [r7, #4]
 800cc12:	4618      	mov	r0, r3
 800cc14:	370c      	adds	r7, #12
 800cc16:	46bd      	mov	sp, r7
 800cc18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc1c:	4770      	bx	lr

0800cc1e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800cc1e:	b580      	push	{r7, lr}
 800cc20:	b082      	sub	sp, #8
 800cc22:	af00      	add	r7, sp, #0
 800cc24:	6078      	str	r0, [r7, #4]
 800cc26:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800cc28:	687b      	ldr	r3, [r7, #4]
 800cc2a:	4618      	mov	r0, r3
 800cc2c:	f000 fd51 	bl	800d6d2 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800cc30:	6838      	ldr	r0, [r7, #0]
 800cc32:	f7ff ffe9 	bl	800cc08 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 800cc36:	4603      	mov	r3, r0
 800cc38:	4619      	mov	r1, r3
 800cc3a:	6878      	ldr	r0, [r7, #4]
 800cc3c:	f000 fd56 	bl	800d6ec <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800cc40:	6878      	ldr	r0, [r7, #4]
 800cc42:	f7ff ffc5 	bl	800cbd0 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cc46:	4603      	mov	r3, r0
	}
 800cc48:	4618      	mov	r0, r3
 800cc4a:	3708      	adds	r7, #8
 800cc4c:	46bd      	mov	sp, r7
 800cc4e:	bd80      	pop	{r7, pc}

0800cc50 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cc50:	b580      	push	{r7, lr}
 800cc52:	b082      	sub	sp, #8
 800cc54:	af00      	add	r7, sp, #0
 800cc56:	7138      	strb	r0, [r7, #4]
 800cc58:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cc5a:	6838      	ldr	r0, [r7, #0]
 800cc5c:	f000 fd65 	bl	800d72a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800cc60:	4603      	mov	r3, r0
 800cc62:	4618      	mov	r0, r3
 800cc64:	f000 fd6c 	bl	800d740 <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>
 800cc68:	4603      	mov	r3, r0
 800cc6a:	4618      	mov	r0, r3
 800cc6c:	3708      	adds	r7, #8
 800cc6e:	46bd      	mov	sp, r7
 800cc70:	bd80      	pop	{r7, pc}

0800cc72 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cc72:	b590      	push	{r4, r7, lr}
 800cc74:	b083      	sub	sp, #12
 800cc76:	af00      	add	r7, sp, #0
 800cc78:	7138      	strb	r0, [r7, #4]
 800cc7a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cc7c:	6838      	ldr	r0, [r7, #0]
 800cc7e:	f000 fd1d 	bl	800d6bc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cc82:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cc84:	4619      	mov	r1, r3
 800cc86:	4620      	mov	r0, r4
 800cc88:	f7ff ffe2 	bl	800cc50 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cc8c:	4603      	mov	r3, r0
    }
 800cc8e:	4618      	mov	r0, r3
 800cc90:	370c      	adds	r7, #12
 800cc92:	46bd      	mov	sp, r7
 800cc94:	bd90      	pop	{r4, r7, pc}

0800cc96 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cc96:	b590      	push	{r4, r7, lr}
 800cc98:	b083      	sub	sp, #12
 800cc9a:	af00      	add	r7, sp, #0
 800cc9c:	7138      	strb	r0, [r7, #4]
 800cc9e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cca0:	6838      	ldr	r0, [r7, #0]
 800cca2:	f000 fd00 	bl	800d6a6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800cca6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cca8:	4619      	mov	r1, r3
 800ccaa:	4620      	mov	r0, r4
 800ccac:	f7ff ffe1 	bl	800cc72 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ccb0:	4603      	mov	r3, r0
    }
 800ccb2:	4618      	mov	r0, r3
 800ccb4:	370c      	adds	r7, #12
 800ccb6:	46bd      	mov	sp, r7
 800ccb8:	bd90      	pop	{r4, r7, pc}

0800ccba <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800ccba:	b590      	push	{r4, r7, lr}
 800ccbc:	b083      	sub	sp, #12
 800ccbe:	af00      	add	r7, sp, #0
 800ccc0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800ccc2:	6878      	ldr	r0, [r7, #4]
 800ccc4:	f000 fce4 	bl	800d690 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ccc8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800ccca:	4619      	mov	r1, r3
 800cccc:	4620      	mov	r0, r4
 800ccce:	f7ff ffe2 	bl	800cc96 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800ccd2:	4603      	mov	r3, r0
    }
 800ccd4:	4618      	mov	r0, r3
 800ccd6:	370c      	adds	r7, #12
 800ccd8:	46bd      	mov	sp, r7
 800ccda:	bd90      	pop	{r4, r7, pc}

0800ccdc <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800ccdc:	b580      	push	{r7, lr}
 800ccde:	b082      	sub	sp, #8
 800cce0:	af00      	add	r7, sp, #0
 800cce2:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800cce4:	6878      	ldr	r0, [r7, #4]
 800cce6:	f7ff fb64 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800ccea:	4603      	mov	r3, r0
 800ccec:	2b02      	cmp	r3, #2
 800ccee:	bf14      	ite	ne
 800ccf0:	2301      	movne	r3, #1
 800ccf2:	2300      	moveq	r3, #0
 800ccf4:	b2db      	uxtb	r3, r3
 800ccf6:	2b00      	cmp	r3, #0
 800ccf8:	d002      	beq.n	800cd00 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800ccfa:	4805      	ldr	r0, [pc, #20]	; (800cd10 <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800ccfc:	f7f7 fa64 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800cd00:	6878      	ldr	r0, [r7, #4]
 800cd02:	f7ff ffda 	bl	800ccba <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800cd06:	4603      	mov	r3, r0
    }
 800cd08:	4618      	mov	r0, r3
 800cd0a:	3708      	adds	r7, #8
 800cd0c:	46bd      	mov	sp, r7
 800cd0e:	bd80      	pop	{r7, pc}
 800cd10:	08024d40 	.word	0x08024d40

0800cd14 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800cd14:	b480      	push	{r7}
 800cd16:	b083      	sub	sp, #12
 800cd18:	af00      	add	r7, sp, #0
 800cd1a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800cd1c:	687b      	ldr	r3, [r7, #4]
 800cd1e:	4618      	mov	r0, r3
 800cd20:	370c      	adds	r7, #12
 800cd22:	46bd      	mov	sp, r7
 800cd24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd28:	4770      	bx	lr

0800cd2a <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj2EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800cd2a:	b580      	push	{r7, lr}
 800cd2c:	b082      	sub	sp, #8
 800cd2e:	af00      	add	r7, sp, #0
 800cd30:	6078      	str	r0, [r7, #4]
 800cd32:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800cd34:	687b      	ldr	r3, [r7, #4]
 800cd36:	4618      	mov	r0, r3
 800cd38:	f000 fccb 	bl	800d6d2 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800cd3c:	6838      	ldr	r0, [r7, #0]
 800cd3e:	f7ff ffe9 	bl	800cd14 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 800cd42:	4603      	mov	r3, r0
 800cd44:	4619      	mov	r1, r3
 800cd46:	6878      	ldr	r0, [r7, #4]
 800cd48:	f000 fd05 	bl	800d756 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800cd4c:	6878      	ldr	r0, [r7, #4]
 800cd4e:	f7ff ffc5 	bl	800ccdc <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cd52:	4603      	mov	r3, r0
	}
 800cd54:	4618      	mov	r0, r3
 800cd56:	3708      	adds	r7, #8
 800cd58:	46bd      	mov	sp, r7
 800cd5a:	bd80      	pop	{r7, pc}

0800cd5c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cd5c:	b580      	push	{r7, lr}
 800cd5e:	b082      	sub	sp, #8
 800cd60:	af00      	add	r7, sp, #0
 800cd62:	7138      	strb	r0, [r7, #4]
 800cd64:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cd66:	6838      	ldr	r0, [r7, #0]
 800cd68:	f000 fc9d 	bl	800d6a6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800cd6c:	4603      	mov	r3, r0
 800cd6e:	4618      	mov	r0, r3
 800cd70:	f000 fd10 	bl	800d794 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>
 800cd74:	4603      	mov	r3, r0
 800cd76:	4618      	mov	r0, r3
 800cd78:	3708      	adds	r7, #8
 800cd7a:	46bd      	mov	sp, r7
 800cd7c:	bd80      	pop	{r7, pc}

0800cd7e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cd7e:	b590      	push	{r4, r7, lr}
 800cd80:	b083      	sub	sp, #12
 800cd82:	af00      	add	r7, sp, #0
 800cd84:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cd86:	6878      	ldr	r0, [r7, #4]
 800cd88:	f000 fc82 	bl	800d690 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cd8c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cd8e:	4619      	mov	r1, r3
 800cd90:	4620      	mov	r0, r4
 800cd92:	f7ff ffe3 	bl	800cd5c <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cd96:	4603      	mov	r3, r0
    }
 800cd98:	4618      	mov	r0, r3
 800cd9a:	370c      	adds	r7, #12
 800cd9c:	46bd      	mov	sp, r7
 800cd9e:	bd90      	pop	{r4, r7, pc}

0800cda0 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800cda0:	b580      	push	{r7, lr}
 800cda2:	b082      	sub	sp, #8
 800cda4:	af00      	add	r7, sp, #0
 800cda6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800cda8:	6878      	ldr	r0, [r7, #4]
 800cdaa:	f7ff fb02 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800cdae:	4603      	mov	r3, r0
 800cdb0:	2b00      	cmp	r3, #0
 800cdb2:	bf14      	ite	ne
 800cdb4:	2301      	movne	r3, #1
 800cdb6:	2300      	moveq	r3, #0
 800cdb8:	b2db      	uxtb	r3, r3
 800cdba:	2b00      	cmp	r3, #0
 800cdbc:	d002      	beq.n	800cdc4 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800cdbe:	4805      	ldr	r0, [pc, #20]	; (800cdd4 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800cdc0:	f7f7 fa02 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800cdc4:	6878      	ldr	r0, [r7, #4]
 800cdc6:	f7ff ffda 	bl	800cd7e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800cdca:	4603      	mov	r3, r0
    }
 800cdcc:	4618      	mov	r0, r3
 800cdce:	3708      	adds	r7, #8
 800cdd0:	46bd      	mov	sp, r7
 800cdd2:	bd80      	pop	{r7, pc}
 800cdd4:	08024d40 	.word	0x08024d40

0800cdd8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800cdd8:	b480      	push	{r7}
 800cdda:	b083      	sub	sp, #12
 800cddc:	af00      	add	r7, sp, #0
 800cdde:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800cde0:	687b      	ldr	r3, [r7, #4]
 800cde2:	4618      	mov	r0, r3
 800cde4:	370c      	adds	r7, #12
 800cde6:	46bd      	mov	sp, r7
 800cde8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdec:	4770      	bx	lr

0800cdee <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800cdee:	b580      	push	{r7, lr}
 800cdf0:	b082      	sub	sp, #8
 800cdf2:	af00      	add	r7, sp, #0
 800cdf4:	6078      	str	r0, [r7, #4]
 800cdf6:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800cdf8:	687b      	ldr	r3, [r7, #4]
 800cdfa:	4618      	mov	r0, r3
 800cdfc:	f000 fc69 	bl	800d6d2 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800ce00:	6838      	ldr	r0, [r7, #0]
 800ce02:	f7ff ffe9 	bl	800cdd8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 800ce06:	4603      	mov	r3, r0
 800ce08:	4619      	mov	r1, r3
 800ce0a:	6878      	ldr	r0, [r7, #4]
 800ce0c:	f000 fccd 	bl	800d7aa <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800ce10:	6878      	ldr	r0, [r7, #4]
 800ce12:	f7ff ffc5 	bl	800cda0 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800ce16:	4603      	mov	r3, r0
	}
 800ce18:	4618      	mov	r0, r3
 800ce1a:	3708      	adds	r7, #8
 800ce1c:	46bd      	mov	sp, r7
 800ce1e:	bd80      	pop	{r7, pc}

0800ce20 <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 800ce20:	b480      	push	{r7}
 800ce22:	b083      	sub	sp, #12
 800ce24:	af00      	add	r7, sp, #0
 800ce26:	6078      	str	r0, [r7, #4]
 800ce28:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 800ce2a:	687b      	ldr	r3, [r7, #4]
 800ce2c:	2200      	movs	r2, #0
 800ce2e:	601a      	str	r2, [r3, #0]
	{ }
 800ce30:	687b      	ldr	r3, [r7, #4]
 800ce32:	4618      	mov	r0, r3
 800ce34:	370c      	adds	r7, #12
 800ce36:	46bd      	mov	sp, r7
 800ce38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce3c:	4770      	bx	lr

0800ce3e <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 800ce3e:	b580      	push	{r7, lr}
 800ce40:	b082      	sub	sp, #8
 800ce42:	af00      	add	r7, sp, #0
 800ce44:	6078      	str	r0, [r7, #4]
 800ce46:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 800ce48:	687b      	ldr	r3, [r7, #4]
 800ce4a:	4611      	mov	r1, r2
 800ce4c:	4618      	mov	r0, r3
 800ce4e:	f7ff ffe7 	bl	800ce20 <_ZNSt8__detail9__variant14_UninitializedIP10AssignmentLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 800ce52:	687b      	ldr	r3, [r7, #4]
 800ce54:	4618      	mov	r0, r3
 800ce56:	3708      	adds	r7, #8
 800ce58:	46bd      	mov	sp, r7
 800ce5a:	bd80      	pop	{r7, pc}

0800ce5c <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 800ce5c:	b580      	push	{r7, lr}
 800ce5e:	b082      	sub	sp, #8
 800ce60:	af00      	add	r7, sp, #0
 800ce62:	6078      	str	r0, [r7, #4]
 800ce64:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 800ce66:	687b      	ldr	r3, [r7, #4]
 800ce68:	4611      	mov	r1, r2
 800ce6a:	4618      	mov	r0, r3
 800ce6c:	f7ff ffe7 	bl	800ce3e <_ZNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 800ce70:	687b      	ldr	r3, [r7, #4]
 800ce72:	2200      	movs	r2, #0
 800ce74:	711a      	strb	r2, [r3, #4]
	{ }
 800ce76:	687b      	ldr	r3, [r7, #4]
 800ce78:	4618      	mov	r0, r3
 800ce7a:	3708      	adds	r7, #8
 800ce7c:	46bd      	mov	sp, r7
 800ce7e:	bd80      	pop	{r7, pc}

0800ce80 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800ce80:	b580      	push	{r7, lr}
 800ce82:	b082      	sub	sp, #8
 800ce84:	af00      	add	r7, sp, #0
 800ce86:	7138      	strb	r0, [r7, #4]
 800ce88:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800ce8a:	6838      	ldr	r0, [r7, #0]
 800ce8c:	f000 fcac 	bl	800d7e8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800ce90:	4603      	mov	r3, r0
 800ce92:	4618      	mov	r0, r3
 800ce94:	f000 fcb3 	bl	800d7fe <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>
 800ce98:	4603      	mov	r3, r0
 800ce9a:	4618      	mov	r0, r3
 800ce9c:	3708      	adds	r7, #8
 800ce9e:	46bd      	mov	sp, r7
 800cea0:	bd80      	pop	{r7, pc}

0800cea2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cea2:	b590      	push	{r4, r7, lr}
 800cea4:	b083      	sub	sp, #12
 800cea6:	af00      	add	r7, sp, #0
 800cea8:	7138      	strb	r0, [r7, #4]
 800ceaa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ceac:	6838      	ldr	r0, [r7, #0]
 800ceae:	f000 fc3c 	bl	800d72a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800ceb2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ceb4:	4619      	mov	r1, r3
 800ceb6:	4620      	mov	r0, r4
 800ceb8:	f7ff ffe2 	bl	800ce80 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cebc:	4603      	mov	r3, r0
    }
 800cebe:	4618      	mov	r0, r3
 800cec0:	370c      	adds	r7, #12
 800cec2:	46bd      	mov	sp, r7
 800cec4:	bd90      	pop	{r4, r7, pc}

0800cec6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cec6:	b590      	push	{r4, r7, lr}
 800cec8:	b083      	sub	sp, #12
 800ceca:	af00      	add	r7, sp, #0
 800cecc:	7138      	strb	r0, [r7, #4]
 800cece:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800ced0:	6838      	ldr	r0, [r7, #0]
 800ced2:	f000 fbf3 	bl	800d6bc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800ced6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800ced8:	4619      	mov	r1, r3
 800ceda:	4620      	mov	r0, r4
 800cedc:	f7ff ffe1 	bl	800cea2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cee0:	4603      	mov	r3, r0
    }
 800cee2:	4618      	mov	r0, r3
 800cee4:	370c      	adds	r7, #12
 800cee6:	46bd      	mov	sp, r7
 800cee8:	bd90      	pop	{r4, r7, pc}

0800ceea <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800ceea:	b590      	push	{r4, r7, lr}
 800ceec:	b083      	sub	sp, #12
 800ceee:	af00      	add	r7, sp, #0
 800cef0:	7138      	strb	r0, [r7, #4]
 800cef2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cef4:	6838      	ldr	r0, [r7, #0]
 800cef6:	f000 fbd6 	bl	800d6a6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800cefa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cefc:	4619      	mov	r1, r3
 800cefe:	4620      	mov	r0, r4
 800cf00:	f7ff ffe1 	bl	800cec6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cf04:	4603      	mov	r3, r0
    }
 800cf06:	4618      	mov	r0, r3
 800cf08:	370c      	adds	r7, #12
 800cf0a:	46bd      	mov	sp, r7
 800cf0c:	bd90      	pop	{r4, r7, pc}

0800cf0e <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800cf0e:	b590      	push	{r4, r7, lr}
 800cf10:	b083      	sub	sp, #12
 800cf12:	af00      	add	r7, sp, #0
 800cf14:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800cf16:	6878      	ldr	r0, [r7, #4]
 800cf18:	f000 fbba 	bl	800d690 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 800cf1c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800cf1e:	4619      	mov	r1, r3
 800cf20:	4620      	mov	r0, r4
 800cf22:	f7ff ffe2 	bl	800ceea <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800cf26:	4603      	mov	r3, r0
    }
 800cf28:	4618      	mov	r0, r3
 800cf2a:	370c      	adds	r7, #12
 800cf2c:	46bd      	mov	sp, r7
 800cf2e:	bd90      	pop	{r4, r7, pc}

0800cf30 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800cf30:	b580      	push	{r7, lr}
 800cf32:	b082      	sub	sp, #8
 800cf34:	af00      	add	r7, sp, #0
 800cf36:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800cf38:	6878      	ldr	r0, [r7, #4]
 800cf3a:	f7ff fa3a 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800cf3e:	4603      	mov	r3, r0
 800cf40:	2b03      	cmp	r3, #3
 800cf42:	bf14      	ite	ne
 800cf44:	2301      	movne	r3, #1
 800cf46:	2300      	moveq	r3, #0
 800cf48:	b2db      	uxtb	r3, r3
 800cf4a:	2b00      	cmp	r3, #0
 800cf4c:	d002      	beq.n	800cf54 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800cf4e:	4805      	ldr	r0, [pc, #20]	; (800cf64 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800cf50:	f7f7 f93a 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800cf54:	6878      	ldr	r0, [r7, #4]
 800cf56:	f7ff ffda 	bl	800cf0e <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800cf5a:	4603      	mov	r3, r0
    }
 800cf5c:	4618      	mov	r0, r3
 800cf5e:	3708      	adds	r7, #8
 800cf60:	46bd      	mov	sp, r7
 800cf62:	bd80      	pop	{r7, pc}
 800cf64:	08024d40 	.word	0x08024d40

0800cf68 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800cf68:	b480      	push	{r7}
 800cf6a:	b083      	sub	sp, #12
 800cf6c:	af00      	add	r7, sp, #0
 800cf6e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800cf70:	687b      	ldr	r3, [r7, #4]
 800cf72:	4618      	mov	r0, r3
 800cf74:	370c      	adds	r7, #12
 800cf76:	46bd      	mov	sp, r7
 800cf78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf7c:	4770      	bx	lr

0800cf7e <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj3EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800cf7e:	b580      	push	{r7, lr}
 800cf80:	b082      	sub	sp, #8
 800cf82:	af00      	add	r7, sp, #0
 800cf84:	6078      	str	r0, [r7, #4]
 800cf86:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800cf88:	687b      	ldr	r3, [r7, #4]
 800cf8a:	4618      	mov	r0, r3
 800cf8c:	f000 fba1 	bl	800d6d2 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800cf90:	6838      	ldr	r0, [r7, #0]
 800cf92:	f7ff ffe9 	bl	800cf68 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 800cf96:	4603      	mov	r3, r0
 800cf98:	4619      	mov	r1, r3
 800cf9a:	6878      	ldr	r0, [r7, #4]
 800cf9c:	f000 fc3a 	bl	800d814 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800cfa0:	6878      	ldr	r0, [r7, #4]
 800cfa2:	f7ff ffc5 	bl	800cf30 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800cfa6:	4603      	mov	r3, r0
	}
 800cfa8:	4618      	mov	r0, r3
 800cfaa:	3708      	adds	r7, #8
 800cfac:	46bd      	mov	sp, r7
 800cfae:	bd80      	pop	{r7, pc}

0800cfb0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 800cfb0:	b580      	push	{r7, lr}
 800cfb2:	b082      	sub	sp, #8
 800cfb4:	af00      	add	r7, sp, #0
 800cfb6:	7138      	strb	r0, [r7, #4]
 800cfb8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 800cfba:	6838      	ldr	r0, [r7, #0]
 800cfbc:	f000 fc49 	bl	800d852 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800cfc0:	4603      	mov	r3, r0
 800cfc2:	4618      	mov	r0, r3
 800cfc4:	f000 fc50 	bl	800d868 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>
 800cfc8:	4603      	mov	r3, r0
 800cfca:	4618      	mov	r0, r3
 800cfcc:	3708      	adds	r7, #8
 800cfce:	46bd      	mov	sp, r7
 800cfd0:	bd80      	pop	{r7, pc}

0800cfd2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cfd2:	b590      	push	{r4, r7, lr}
 800cfd4:	b083      	sub	sp, #12
 800cfd6:	af00      	add	r7, sp, #0
 800cfd8:	7138      	strb	r0, [r7, #4]
 800cfda:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800cfdc:	6838      	ldr	r0, [r7, #0]
 800cfde:	f000 fc03 	bl	800d7e8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 800cfe2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800cfe4:	4619      	mov	r1, r3
 800cfe6:	4620      	mov	r0, r4
 800cfe8:	f7ff ffe2 	bl	800cfb0 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJP12If_statementEEEEEDcSt16in_place_index_tILj0EEOT_>
 800cfec:	4603      	mov	r3, r0
    }
 800cfee:	4618      	mov	r0, r3
 800cff0:	370c      	adds	r7, #12
 800cff2:	46bd      	mov	sp, r7
 800cff4:	bd90      	pop	{r4, r7, pc}

0800cff6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800cff6:	b590      	push	{r4, r7, lr}
 800cff8:	b083      	sub	sp, #12
 800cffa:	af00      	add	r7, sp, #0
 800cffc:	7138      	strb	r0, [r7, #4]
 800cffe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d000:	6838      	ldr	r0, [r7, #0]
 800d002:	f000 fb92 	bl	800d72a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800d006:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d008:	4619      	mov	r1, r3
 800d00a:	4620      	mov	r0, r4
 800d00c:	f7ff ffe1 	bl	800cfd2 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d010:	4603      	mov	r3, r0
    }
 800d012:	4618      	mov	r0, r3
 800d014:	370c      	adds	r7, #12
 800d016:	46bd      	mov	sp, r7
 800d018:	bd90      	pop	{r4, r7, pc}

0800d01a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d01a:	b590      	push	{r4, r7, lr}
 800d01c:	b083      	sub	sp, #12
 800d01e:	af00      	add	r7, sp, #0
 800d020:	7138      	strb	r0, [r7, #4]
 800d022:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d024:	6838      	ldr	r0, [r7, #0]
 800d026:	f000 fb49 	bl	800d6bc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d02a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d02c:	4619      	mov	r1, r3
 800d02e:	4620      	mov	r0, r4
 800d030:	f7ff ffe1 	bl	800cff6 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d034:	4603      	mov	r3, r0
    }
 800d036:	4618      	mov	r0, r3
 800d038:	370c      	adds	r7, #12
 800d03a:	46bd      	mov	sp, r7
 800d03c:	bd90      	pop	{r4, r7, pc}

0800d03e <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 800d03e:	b590      	push	{r4, r7, lr}
 800d040:	b083      	sub	sp, #12
 800d042:	af00      	add	r7, sp, #0
 800d044:	7138      	strb	r0, [r7, #4]
 800d046:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 800d048:	6838      	ldr	r0, [r7, #0]
 800d04a:	f000 fb2c 	bl	800d6a6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>
 800d04e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 800d050:	4619      	mov	r1, r3
 800d052:	4620      	mov	r0, r4
 800d054:	f7ff ffe1 	bl	800d01a <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d058:	4603      	mov	r3, r0
    }
 800d05a:	4618      	mov	r0, r3
 800d05c:	370c      	adds	r7, #12
 800d05e:	46bd      	mov	sp, r7
 800d060:	bd90      	pop	{r4, r7, pc}

0800d062 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800d062:	b590      	push	{r4, r7, lr}
 800d064:	b083      	sub	sp, #12
 800d066:	af00      	add	r7, sp, #0
 800d068:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800d06a:	6878      	ldr	r0, [r7, #4]
 800d06c:	f000 fb10 	bl	800d690 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>
 800d070:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800d072:	4619      	mov	r1, r3
 800d074:	4620      	mov	r0, r4
 800d076:	f7ff ffe2 	bl	800d03e <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800d07a:	4603      	mov	r3, r0
    }
 800d07c:	4618      	mov	r0, r3
 800d07e:	370c      	adds	r7, #12
 800d080:	46bd      	mov	sp, r7
 800d082:	bd90      	pop	{r4, r7, pc}

0800d084 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 800d084:	b580      	push	{r7, lr}
 800d086:	b082      	sub	sp, #8
 800d088:	af00      	add	r7, sp, #0
 800d08a:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800d08c:	6878      	ldr	r0, [r7, #4]
 800d08e:	f7ff f990 	bl	800c3b2 <_ZNKSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE5indexEv>
 800d092:	4603      	mov	r3, r0
 800d094:	2b04      	cmp	r3, #4
 800d096:	bf14      	ite	ne
 800d098:	2301      	movne	r3, #1
 800d09a:	2300      	moveq	r3, #0
 800d09c:	b2db      	uxtb	r3, r3
 800d09e:	2b00      	cmp	r3, #0
 800d0a0:	d002      	beq.n	800d0a8 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800d0a2:	4805      	ldr	r0, [pc, #20]	; (800d0b8 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 800d0a4:	f7f7 f890 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800d0a8:	6878      	ldr	r0, [r7, #4]
 800d0aa:	f7ff ffda 	bl	800d062 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800d0ae:	4603      	mov	r3, r0
    }
 800d0b0:	4618      	mov	r0, r3
 800d0b2:	3708      	adds	r7, #8
 800d0b4:	46bd      	mov	sp, r7
 800d0b6:	bd80      	pop	{r7, pc}
 800d0b8:	08024d40 	.word	0x08024d40

0800d0bc <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d0bc:	b480      	push	{r7}
 800d0be:	b083      	sub	sp, #12
 800d0c0:	af00      	add	r7, sp, #0
 800d0c2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d0c4:	687b      	ldr	r3, [r7, #4]
 800d0c6:	4618      	mov	r0, r3
 800d0c8:	370c      	adds	r7, #12
 800d0ca:	46bd      	mov	sp, r7
 800d0cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0d0:	4770      	bx	lr

0800d0d2 <_ZNSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE7emplaceILj4EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 800d0d2:	b580      	push	{r7, lr}
 800d0d4:	b082      	sub	sp, #8
 800d0d6:	af00      	add	r7, sp, #0
 800d0d8:	6078      	str	r0, [r7, #4]
 800d0da:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800d0dc:	687b      	ldr	r3, [r7, #4]
 800d0de:	4618      	mov	r0, r3
 800d0e0:	f000 faf7 	bl	800d6d2 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800d0e4:	6838      	ldr	r0, [r7, #0]
 800d0e6:	f7ff ffe9 	bl	800d0bc <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 800d0ea:	4603      	mov	r3, r0
 800d0ec:	4619      	mov	r1, r3
 800d0ee:	6878      	ldr	r0, [r7, #4]
 800d0f0:	f000 fbc5 	bl	800d87e <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800d0f4:	6878      	ldr	r0, [r7, #4]
 800d0f6:	f7ff ffc5 	bl	800d084 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800d0fa:	4603      	mov	r3, r0
	}
 800d0fc:	4618      	mov	r0, r3
 800d0fe:	3708      	adds	r7, #8
 800d100:	46bd      	mov	sp, r7
 800d102:	bd80      	pop	{r7, pc}

0800d104 <_ZNSaIP9StatementEC1Ev>:
 800d104:	b580      	push	{r7, lr}
 800d106:	b082      	sub	sp, #8
 800d108:	af00      	add	r7, sp, #0
 800d10a:	6078      	str	r0, [r7, #4]
 800d10c:	6878      	ldr	r0, [r7, #4]
 800d10e:	f000 fbd5 	bl	800d8bc <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>
 800d112:	687b      	ldr	r3, [r7, #4]
 800d114:	4618      	mov	r0, r3
 800d116:	3708      	adds	r7, #8
 800d118:	46bd      	mov	sp, r7
 800d11a:	bd80      	pop	{r7, pc}

0800d11c <_ZNSt12_Vector_baseIP9StatementSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 800d11c:	b480      	push	{r7}
 800d11e:	b083      	sub	sp, #12
 800d120:	af00      	add	r7, sp, #0
 800d122:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 800d124:	687b      	ldr	r3, [r7, #4]
 800d126:	2200      	movs	r2, #0
 800d128:	601a      	str	r2, [r3, #0]
 800d12a:	687b      	ldr	r3, [r7, #4]
 800d12c:	2200      	movs	r2, #0
 800d12e:	605a      	str	r2, [r3, #4]
 800d130:	687b      	ldr	r3, [r7, #4]
 800d132:	2200      	movs	r2, #0
 800d134:	609a      	str	r2, [r3, #8]
	{ }
 800d136:	687b      	ldr	r3, [r7, #4]
 800d138:	4618      	mov	r0, r3
 800d13a:	370c      	adds	r7, #12
 800d13c:	46bd      	mov	sp, r7
 800d13e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d142:	4770      	bx	lr

0800d144 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>:
      _M_deallocate(pointer __p, size_t __n)
 800d144:	b580      	push	{r7, lr}
 800d146:	b084      	sub	sp, #16
 800d148:	af00      	add	r7, sp, #0
 800d14a:	60f8      	str	r0, [r7, #12]
 800d14c:	60b9      	str	r1, [r7, #8]
 800d14e:	607a      	str	r2, [r7, #4]
	if (__p)
 800d150:	68bb      	ldr	r3, [r7, #8]
 800d152:	2b00      	cmp	r3, #0
 800d154:	d005      	beq.n	800d162 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 800d156:	68fb      	ldr	r3, [r7, #12]
 800d158:	687a      	ldr	r2, [r7, #4]
 800d15a:	68b9      	ldr	r1, [r7, #8]
 800d15c:	4618      	mov	r0, r3
 800d15e:	f000 fbb8 	bl	800d8d2 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>
      }
 800d162:	bf00      	nop
 800d164:	3710      	adds	r7, #16
 800d166:	46bd      	mov	sp, r7
 800d168:	bd80      	pop	{r7, pc}

0800d16a <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 800d16a:	b480      	push	{r7}
 800d16c:	b083      	sub	sp, #12
 800d16e:	af00      	add	r7, sp, #0
 800d170:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800d172:	687b      	ldr	r3, [r7, #4]
 800d174:	4618      	mov	r0, r3
 800d176:	370c      	adds	r7, #12
 800d178:	46bd      	mov	sp, r7
 800d17a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d17e:	4770      	bx	lr

0800d180 <_ZSt4moveIRP9StatementEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 800d180:	b480      	push	{r7}
 800d182:	b083      	sub	sp, #12
 800d184:	af00      	add	r7, sp, #0
 800d186:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800d188:	687b      	ldr	r3, [r7, #4]
 800d18a:	4618      	mov	r0, r3
 800d18c:	370c      	adds	r7, #12
 800d18e:	46bd      	mov	sp, r7
 800d190:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d194:	4770      	bx	lr

0800d196 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 800d196:	b5b0      	push	{r4, r5, r7, lr}
 800d198:	b082      	sub	sp, #8
 800d19a:	af00      	add	r7, sp, #0
 800d19c:	6078      	str	r0, [r7, #4]
 800d19e:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 800d1a0:	687b      	ldr	r3, [r7, #4]
 800d1a2:	685a      	ldr	r2, [r3, #4]
 800d1a4:	687b      	ldr	r3, [r7, #4]
 800d1a6:	689b      	ldr	r3, [r3, #8]
 800d1a8:	429a      	cmp	r2, r3
 800d1aa:	d011      	beq.n	800d1d0 <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 800d1ac:	687c      	ldr	r4, [r7, #4]
 800d1ae:	687b      	ldr	r3, [r7, #4]
 800d1b0:	685d      	ldr	r5, [r3, #4]
 800d1b2:	6838      	ldr	r0, [r7, #0]
 800d1b4:	f000 fb9c 	bl	800d8f0 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 800d1b8:	4603      	mov	r3, r0
 800d1ba:	461a      	mov	r2, r3
 800d1bc:	4629      	mov	r1, r5
 800d1be:	4620      	mov	r0, r4
 800d1c0:	f000 fba1 	bl	800d906 <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 800d1c4:	687b      	ldr	r3, [r7, #4]
 800d1c6:	685b      	ldr	r3, [r3, #4]
 800d1c8:	1d1a      	adds	r2, r3, #4
 800d1ca:	687b      	ldr	r3, [r7, #4]
 800d1cc:	605a      	str	r2, [r3, #4]
 800d1ce:	e00c      	b.n	800d1ea <_ZNSt6vectorIP9StatementSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 800d1d0:	6878      	ldr	r0, [r7, #4]
 800d1d2:	f000 fbab 	bl	800d92c <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 800d1d6:	4604      	mov	r4, r0
 800d1d8:	6838      	ldr	r0, [r7, #0]
 800d1da:	f000 fb89 	bl	800d8f0 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 800d1de:	4603      	mov	r3, r0
 800d1e0:	461a      	mov	r2, r3
 800d1e2:	4621      	mov	r1, r4
 800d1e4:	6878      	ldr	r0, [r7, #4]
 800d1e6:	f000 fbb3 	bl	800d950 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 800d1ea:	6878      	ldr	r0, [r7, #4]
 800d1ec:	f000 fc2c 	bl	800da48 <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>
 800d1f0:	4603      	mov	r3, r0
      }
 800d1f2:	4618      	mov	r0, r3
 800d1f4:	3708      	adds	r7, #8
 800d1f6:	46bd      	mov	sp, r7
 800d1f8:	bdb0      	pop	{r4, r5, r7, pc}

0800d1fa <_ZSt7forwardIOZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d1fa:	b480      	push	{r7}
 800d1fc:	b083      	sub	sp, #12
 800d1fe:	af00      	add	r7, sp, #0
 800d200:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d202:	687b      	ldr	r3, [r7, #4]
 800d204:	4618      	mov	r0, r3
 800d206:	370c      	adds	r7, #12
 800d208:	46bd      	mov	sp, r7
 800d20a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d20e:	4770      	bx	lr

0800d210 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRS8_St17integral_constantIjLj0EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d210:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d214:	b084      	sub	sp, #16
 800d216:	af00      	add	r7, sp, #0
 800d218:	60f8      	str	r0, [r7, #12]
 800d21a:	60b9      	str	r1, [r7, #8]
 800d21c:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d21e:	68f8      	ldr	r0, [r7, #12]
 800d220:	f000 f879 	bl	800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800d224:	4604      	mov	r4, r0
 800d226:	68b8      	ldr	r0, [r7, #8]
 800d228:	f7f8 ff37 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800d22c:	4605      	mov	r5, r0
 800d22e:	6878      	ldr	r0, [r7, #4]
 800d230:	f000 fc25 	bl	800da7e <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800d234:	4603      	mov	r3, r0
 800d236:	462a      	mov	r2, r5
 800d238:	4621      	mov	r1, r4
 800d23a:	4630      	mov	r0, r6
 800d23c:	f000 fc2a 	bl	800da94 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 800d240:	4643      	mov	r3, r8
    }
 800d242:	4618      	mov	r0, r3
 800d244:	3710      	adds	r7, #16
 800d246:	46bd      	mov	sp, r7
 800d248:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d24c <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d24c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d250:	b084      	sub	sp, #16
 800d252:	af00      	add	r7, sp, #0
 800d254:	60f8      	str	r0, [r7, #12]
 800d256:	60b9      	str	r1, [r7, #8]
 800d258:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d25a:	68f8      	ldr	r0, [r7, #12]
 800d25c:	f000 f85b 	bl	800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800d260:	4604      	mov	r4, r0
 800d262:	68b8      	ldr	r0, [r7, #8]
 800d264:	f7f8 fec9 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800d268:	4605      	mov	r5, r0
 800d26a:	6878      	ldr	r0, [r7, #4]
 800d26c:	f000 fc30 	bl	800dad0 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800d270:	4603      	mov	r3, r0
 800d272:	462a      	mov	r2, r5
 800d274:	4621      	mov	r1, r4
 800d276:	4630      	mov	r0, r6
 800d278:	f000 fc35 	bl	800dae6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 800d27c:	4643      	mov	r3, r8
    }
 800d27e:	4618      	mov	r0, r3
 800d280:	3710      	adds	r7, #16
 800d282:	46bd      	mov	sp, r7
 800d284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d288 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d288:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d28c:	b084      	sub	sp, #16
 800d28e:	af00      	add	r7, sp, #0
 800d290:	60f8      	str	r0, [r7, #12]
 800d292:	60b9      	str	r1, [r7, #8]
 800d294:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d296:	68f8      	ldr	r0, [r7, #12]
 800d298:	f000 f83d 	bl	800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800d29c:	4604      	mov	r4, r0
 800d29e:	68b8      	ldr	r0, [r7, #8]
 800d2a0:	f7f8 fecd 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800d2a4:	4605      	mov	r5, r0
 800d2a6:	6878      	ldr	r0, [r7, #4]
 800d2a8:	f000 fc3b 	bl	800db22 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800d2ac:	4603      	mov	r3, r0
 800d2ae:	462a      	mov	r2, r5
 800d2b0:	4621      	mov	r1, r4
 800d2b2:	4630      	mov	r0, r6
 800d2b4:	f000 fc40 	bl	800db38 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 800d2b8:	4643      	mov	r3, r8
    }
 800d2ba:	4618      	mov	r0, r3
 800d2bc:	3710      	adds	r7, #16
 800d2be:	46bd      	mov	sp, r7
 800d2c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d2c4 <_ZSt8__invokeIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEENSt15__invoke_resultISB_JDpT0_EE4typeESC_DpOSJ_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 800d2c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2c8:	b084      	sub	sp, #16
 800d2ca:	af00      	add	r7, sp, #0
 800d2cc:	60f8      	str	r0, [r7, #12]
 800d2ce:	60b9      	str	r1, [r7, #8]
 800d2d0:	607a      	str	r2, [r7, #4]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 800d2d2:	68f8      	ldr	r0, [r7, #12]
 800d2d4:	f000 f81f 	bl	800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800d2d8:	4604      	mov	r4, r0
 800d2da:	68b8      	ldr	r0, [r7, #8]
 800d2dc:	f7f8 fe6b 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800d2e0:	4605      	mov	r5, r0
 800d2e2:	6878      	ldr	r0, [r7, #4]
 800d2e4:	f000 fc46 	bl	800db74 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800d2e8:	4603      	mov	r3, r0
 800d2ea:	462a      	mov	r2, r5
 800d2ec:	4621      	mov	r1, r4
 800d2ee:	4630      	mov	r0, r6
 800d2f0:	f000 fc4b 	bl	800db8a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>
					std::forward<_Args>(__args)...);
 800d2f4:	4643      	mov	r3, r8
    }
 800d2f6:	4618      	mov	r0, r3
 800d2f8:	3710      	adds	r7, #16
 800d2fa:	46bd      	mov	sp, r7
 800d2fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d300 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_20__variant_idx_cookieEOZNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_RSt7variantIJS9_ifbEEEJEE9_M_accessEv>:
      _M_access() const
 800d300:	b480      	push	{r7}
 800d302:	b083      	sub	sp, #12
 800d304:	af00      	add	r7, sp, #0
 800d306:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 800d308:	687b      	ldr	r3, [r7, #4]
 800d30a:	4618      	mov	r0, r3
 800d30c:	370c      	adds	r7, #12
 800d30e:	46bd      	mov	sp, r7
 800d310:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d314:	4770      	bx	lr

0800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d316:	b480      	push	{r7}
 800d318:	b083      	sub	sp, #12
 800d31a:	af00      	add	r7, sp, #0
 800d31c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d31e:	687b      	ldr	r3, [r7, #4]
 800d320:	4618      	mov	r0, r3
 800d322:	370c      	adds	r7, #12
 800d324:	46bd      	mov	sp, r7
 800d326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d32a:	4770      	bx	lr

0800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d32c:	b480      	push	{r7}
 800d32e:	b083      	sub	sp, #12
 800d330:	af00      	add	r7, sp, #0
 800d332:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d334:	687b      	ldr	r3, [r7, #4]
 800d336:	4618      	mov	r0, r3
 800d338:	370c      	adds	r7, #12
 800d33a:	46bd      	mov	sp, r7
 800d33c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d340:	4770      	bx	lr

0800d342 <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 800d342:	b580      	push	{r7, lr}
 800d344:	b084      	sub	sp, #16
 800d346:	af00      	add	r7, sp, #0
 800d348:	60f8      	str	r0, [r7, #12]
 800d34a:	60b9      	str	r1, [r7, #8]
 800d34c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 800d34e:	6878      	ldr	r0, [r7, #4]
 800d350:	f7ff ffec 	bl	800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 800d354:	4603      	mov	r3, r0
 800d356:	461a      	mov	r2, r3
 800d358:	68b9      	ldr	r1, [r7, #8]
 800d35a:	68f8      	ldr	r0, [r7, #12]
 800d35c:	f000 fc33 	bl	800dbc6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 800d360:	bf00      	nop
 800d362:	3710      	adds	r7, #16
 800d364:	46bd      	mov	sp, r7
 800d366:	bd80      	pop	{r7, pc}

0800d368 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800d368:	b580      	push	{r7, lr}
 800d36a:	b084      	sub	sp, #16
 800d36c:	af00      	add	r7, sp, #0
 800d36e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800d370:	687b      	ldr	r3, [r7, #4]
 800d372:	1d1a      	adds	r2, r3, #4
 800d374:	f107 030c 	add.w	r3, r7, #12
 800d378:	4611      	mov	r1, r2
 800d37a:	4618      	mov	r0, r3
 800d37c:	f000 fc39 	bl	800dbf2 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800d380:	68fb      	ldr	r3, [r7, #12]
 800d382:	4618      	mov	r0, r3
 800d384:	3710      	adds	r7, #16
 800d386:	46bd      	mov	sp, r7
 800d388:	bd80      	pop	{r7, pc}
	...

0800d38c <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      void
      vector<_Tp, _Alloc>::
 800d38c:	b5b0      	push	{r4, r5, r7, lr}
 800d38e:	b08c      	sub	sp, #48	; 0x30
 800d390:	af00      	add	r7, sp, #0
 800d392:	60f8      	str	r0, [r7, #12]
 800d394:	60b9      	str	r1, [r7, #8]
 800d396:	607a      	str	r2, [r7, #4]
    void
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
 800d398:	4a39      	ldr	r2, [pc, #228]	; (800d480 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 800d39a:	2101      	movs	r1, #1
 800d39c:	68f8      	ldr	r0, [r7, #12]
 800d39e:	f000 fc38 	bl	800dc12 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>
 800d3a2:	62f8      	str	r0, [r7, #44]	; 0x2c
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
      pointer __old_start = this->_M_impl._M_start;
 800d3a4:	68fb      	ldr	r3, [r7, #12]
 800d3a6:	681b      	ldr	r3, [r3, #0]
 800d3a8:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 800d3aa:	68fb      	ldr	r3, [r7, #12]
 800d3ac:	685b      	ldr	r3, [r3, #4]
 800d3ae:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 800d3b0:	68f8      	ldr	r0, [r7, #12]
 800d3b2:	f000 fc75 	bl	800dca0 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 800d3b6:	4603      	mov	r3, r0
 800d3b8:	617b      	str	r3, [r7, #20]
 800d3ba:	f107 0214 	add.w	r2, r7, #20
 800d3be:	f107 0308 	add.w	r3, r7, #8
 800d3c2:	4611      	mov	r1, r2
 800d3c4:	4618      	mov	r0, r3
 800d3c6:	f000 fc7b 	bl	800dcc0 <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 800d3ca:	4603      	mov	r3, r0
 800d3cc:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 800d3ce:	68fb      	ldr	r3, [r7, #12]
 800d3d0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d3d2:	4618      	mov	r0, r3
 800d3d4:	f7fb f910 	bl	80085f8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 800d3d8:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 800d3da:	69fb      	ldr	r3, [r7, #28]
 800d3dc:	61bb      	str	r3, [r7, #24]
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
 800d3de:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 800d3e0:	6a3b      	ldr	r3, [r7, #32]
 800d3e2:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 800d3e4:	69fa      	ldr	r2, [r7, #28]
 800d3e6:	18d5      	adds	r5, r2, r3
 800d3e8:	6878      	ldr	r0, [r7, #4]
 800d3ea:	f7ff ff9f 	bl	800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 800d3ee:	4603      	mov	r3, r0
 800d3f0:	461a      	mov	r2, r3
 800d3f2:	4629      	mov	r1, r5
 800d3f4:	4620      	mov	r0, r4
 800d3f6:	f7ff ffa4 	bl	800d342 <_ZNSt16allocator_traitsISaIP10ExpressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
 800d3fa:	2300      	movs	r3, #0
 800d3fc:	61bb      	str	r3, [r7, #24]

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
 800d3fe:	f107 0308 	add.w	r3, r7, #8
 800d402:	4618      	mov	r0, r3
 800d404:	f000 fc85 	bl	800dd12 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800d408:	4603      	mov	r3, r0
 800d40a:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 800d40c:	68fb      	ldr	r3, [r7, #12]
 800d40e:	4618      	mov	r0, r3
 800d410:	f7fa fe6a 	bl	80080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800d414:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 800d416:	69fa      	ldr	r2, [r7, #28]
 800d418:	4621      	mov	r1, r4
 800d41a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800d41c:	f000 fc65 	bl	800dcea <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 800d420:	61b8      	str	r0, [r7, #24]

	      ++__new_finish;
 800d422:	69bb      	ldr	r3, [r7, #24]
 800d424:	3304      	adds	r3, #4
 800d426:	61bb      	str	r3, [r7, #24]

	      __new_finish = _S_relocate(__position.base(), __old_finish,
 800d428:	f107 0308 	add.w	r3, r7, #8
 800d42c:	4618      	mov	r0, r3
 800d42e:	f000 fc70 	bl	800dd12 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800d432:	4603      	mov	r3, r0
 800d434:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 800d436:	68fb      	ldr	r3, [r7, #12]
 800d438:	4618      	mov	r0, r3
 800d43a:	f7fa fe55 	bl	80080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800d43e:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 800d440:	69ba      	ldr	r2, [r7, #24]
 800d442:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800d444:	4620      	mov	r0, r4
 800d446:	f000 fc50 	bl	800dcea <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 800d44a:	61b8      	str	r0, [r7, #24]
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
 800d44c:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 800d44e:	68fb      	ldr	r3, [r7, #12]
 800d450:	689a      	ldr	r2, [r3, #8]
 800d452:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d454:	1ad3      	subs	r3, r2, r3
 800d456:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 800d458:	461a      	mov	r2, r3
 800d45a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800d45c:	f7fa ffcf 	bl	80083fe <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 800d460:	68fb      	ldr	r3, [r7, #12]
 800d462:	69fa      	ldr	r2, [r7, #28]
 800d464:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 800d466:	68fb      	ldr	r3, [r7, #12]
 800d468:	69ba      	ldr	r2, [r7, #24]
 800d46a:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 800d46c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d46e:	009b      	lsls	r3, r3, #2
 800d470:	69fa      	ldr	r2, [r7, #28]
 800d472:	441a      	add	r2, r3
 800d474:	68fb      	ldr	r3, [r7, #12]
 800d476:	609a      	str	r2, [r3, #8]
    }
 800d478:	bf00      	nop
 800d47a:	3730      	adds	r7, #48	; 0x30
 800d47c:	46bd      	mov	sp, r7
 800d47e:	bdb0      	pop	{r4, r5, r7, pc}
 800d480:	08024d54 	.word	0x08024d54

0800d484 <_ZNSt6vectorIP10ExpressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 800d484:	b580      	push	{r7, lr}
 800d486:	b084      	sub	sp, #16
 800d488:	af00      	add	r7, sp, #0
 800d48a:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 800d48c:	6878      	ldr	r0, [r7, #4]
 800d48e:	f7ff ff6b 	bl	800d368 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 800d492:	4603      	mov	r3, r0
 800d494:	60fb      	str	r3, [r7, #12]
 800d496:	f107 030c 	add.w	r3, r7, #12
 800d49a:	2101      	movs	r1, #1
 800d49c:	4618      	mov	r0, r3
 800d49e:	f000 fc43 	bl	800dd28 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>
 800d4a2:	4603      	mov	r3, r0
 800d4a4:	60bb      	str	r3, [r7, #8]
 800d4a6:	f107 0308 	add.w	r3, r7, #8
 800d4aa:	4618      	mov	r0, r3
 800d4ac:	f000 fc55 	bl	800dd5a <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 800d4b0:	4603      	mov	r3, r0
      }
 800d4b2:	4618      	mov	r0, r3
 800d4b4:	3710      	adds	r7, #16
 800d4b6:	46bd      	mov	sp, r7
 800d4b8:	bd80      	pop	{r7, pc}

0800d4ba <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d4ba:	b480      	push	{r7}
 800d4bc:	b083      	sub	sp, #12
 800d4be:	af00      	add	r7, sp, #0
 800d4c0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d4c2:	687b      	ldr	r3, [r7, #4]
 800d4c4:	4618      	mov	r0, r3
 800d4c6:	370c      	adds	r7, #12
 800d4c8:	46bd      	mov	sp, r7
 800d4ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4ce:	4770      	bx	lr

0800d4d0 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 800d4d0:	b580      	push	{r7, lr}
 800d4d2:	b084      	sub	sp, #16
 800d4d4:	af00      	add	r7, sp, #0
 800d4d6:	60f8      	str	r0, [r7, #12]
 800d4d8:	60b9      	str	r1, [r7, #8]
 800d4da:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 800d4dc:	6878      	ldr	r0, [r7, #4]
 800d4de:	f7ff ffec 	bl	800d4ba <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 800d4e2:	4603      	mov	r3, r0
 800d4e4:	461a      	mov	r2, r3
 800d4e6:	68b9      	ldr	r1, [r7, #8]
 800d4e8:	68f8      	ldr	r0, [r7, #12]
 800d4ea:	f000 fc42 	bl	800dd72 <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>
 800d4ee:	bf00      	nop
 800d4f0:	3710      	adds	r7, #16
 800d4f2:	46bd      	mov	sp, r7
 800d4f4:	bd80      	pop	{r7, pc}

0800d4f6 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800d4f6:	b580      	push	{r7, lr}
 800d4f8:	b084      	sub	sp, #16
 800d4fa:	af00      	add	r7, sp, #0
 800d4fc:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800d4fe:	687b      	ldr	r3, [r7, #4]
 800d500:	1d1a      	adds	r2, r3, #4
 800d502:	f107 030c 	add.w	r3, r7, #12
 800d506:	4611      	mov	r1, r2
 800d508:	4618      	mov	r0, r3
 800d50a:	f000 fc48 	bl	800dd9e <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800d50e:	68fb      	ldr	r3, [r7, #12]
 800d510:	4618      	mov	r0, r3
 800d512:	3710      	adds	r7, #16
 800d514:	46bd      	mov	sp, r7
 800d516:	bd80      	pop	{r7, pc}

0800d518 <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 800d518:	b5b0      	push	{r4, r5, r7, lr}
 800d51a:	b08c      	sub	sp, #48	; 0x30
 800d51c:	af00      	add	r7, sp, #0
 800d51e:	60f8      	str	r0, [r7, #12]
 800d520:	60b9      	str	r1, [r7, #8]
 800d522:	607a      	str	r2, [r7, #4]
      const size_type __len =
 800d524:	4a39      	ldr	r2, [pc, #228]	; (800d60c <_ZNSt6vectorIP4BodySaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 800d526:	2101      	movs	r1, #1
 800d528:	68f8      	ldr	r0, [r7, #12]
 800d52a:	f000 fc48 	bl	800ddbe <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>
 800d52e:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 800d530:	68fb      	ldr	r3, [r7, #12]
 800d532:	681b      	ldr	r3, [r3, #0]
 800d534:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 800d536:	68fb      	ldr	r3, [r7, #12]
 800d538:	685b      	ldr	r3, [r3, #4]
 800d53a:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 800d53c:	68f8      	ldr	r0, [r7, #12]
 800d53e:	f000 fc85 	bl	800de4c <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>
 800d542:	4603      	mov	r3, r0
 800d544:	617b      	str	r3, [r7, #20]
 800d546:	f107 0214 	add.w	r2, r7, #20
 800d54a:	f107 0308 	add.w	r3, r7, #8
 800d54e:	4611      	mov	r1, r2
 800d550:	4618      	mov	r0, r3
 800d552:	f000 fc8b 	bl	800de6c <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 800d556:	4603      	mov	r3, r0
 800d558:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 800d55a:	68fb      	ldr	r3, [r7, #12]
 800d55c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d55e:	4618      	mov	r0, r3
 800d560:	f000 fc99 	bl	800de96 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>
 800d564:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 800d566:	69fb      	ldr	r3, [r7, #28]
 800d568:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 800d56a:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 800d56c:	6a3b      	ldr	r3, [r7, #32]
 800d56e:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 800d570:	69fa      	ldr	r2, [r7, #28]
 800d572:	18d5      	adds	r5, r2, r3
 800d574:	6878      	ldr	r0, [r7, #4]
 800d576:	f7ff ffa0 	bl	800d4ba <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 800d57a:	4603      	mov	r3, r0
 800d57c:	461a      	mov	r2, r3
 800d57e:	4629      	mov	r1, r5
 800d580:	4620      	mov	r0, r4
 800d582:	f7ff ffa5 	bl	800d4d0 <_ZNSt16allocator_traitsISaIP4BodyEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 800d586:	2300      	movs	r3, #0
 800d588:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 800d58a:	f107 0308 	add.w	r3, r7, #8
 800d58e:	4618      	mov	r0, r3
 800d590:	f000 fca9 	bl	800dee6 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 800d594:	4603      	mov	r3, r0
 800d596:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 800d598:	68fb      	ldr	r3, [r7, #12]
 800d59a:	4618      	mov	r0, r3
 800d59c:	f7ff fad9 	bl	800cb52 <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 800d5a0:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 800d5a2:	69fa      	ldr	r2, [r7, #28]
 800d5a4:	4621      	mov	r1, r4
 800d5a6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800d5a8:	f000 fc89 	bl	800debe <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 800d5ac:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 800d5ae:	69bb      	ldr	r3, [r7, #24]
 800d5b0:	3304      	adds	r3, #4
 800d5b2:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 800d5b4:	f107 0308 	add.w	r3, r7, #8
 800d5b8:	4618      	mov	r0, r3
 800d5ba:	f000 fc94 	bl	800dee6 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 800d5be:	4603      	mov	r3, r0
 800d5c0:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 800d5c2:	68fb      	ldr	r3, [r7, #12]
 800d5c4:	4618      	mov	r0, r3
 800d5c6:	f7ff fac4 	bl	800cb52 <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 800d5ca:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 800d5cc:	69ba      	ldr	r2, [r7, #24]
 800d5ce:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800d5d0:	4620      	mov	r0, r4
 800d5d2:	f000 fc74 	bl	800debe <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 800d5d6:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 800d5d8:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 800d5da:	68fb      	ldr	r3, [r7, #12]
 800d5dc:	689a      	ldr	r2, [r3, #8]
 800d5de:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d5e0:	1ad3      	subs	r3, r2, r3
 800d5e2:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 800d5e4:	461a      	mov	r2, r3
 800d5e6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800d5e8:	f7ff faa0 	bl	800cb2c <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 800d5ec:	68fb      	ldr	r3, [r7, #12]
 800d5ee:	69fa      	ldr	r2, [r7, #28]
 800d5f0:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 800d5f2:	68fb      	ldr	r3, [r7, #12]
 800d5f4:	69ba      	ldr	r2, [r7, #24]
 800d5f6:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 800d5f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d5fa:	009b      	lsls	r3, r3, #2
 800d5fc:	69fa      	ldr	r2, [r7, #28]
 800d5fe:	441a      	add	r2, r3
 800d600:	68fb      	ldr	r3, [r7, #12]
 800d602:	609a      	str	r2, [r3, #8]
    }
 800d604:	bf00      	nop
 800d606:	3730      	adds	r7, #48	; 0x30
 800d608:	46bd      	mov	sp, r7
 800d60a:	bdb0      	pop	{r4, r5, r7, pc}
 800d60c:	08024d54 	.word	0x08024d54

0800d610 <_ZNSt6vectorIP4BodySaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 800d610:	b580      	push	{r7, lr}
 800d612:	b084      	sub	sp, #16
 800d614:	af00      	add	r7, sp, #0
 800d616:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 800d618:	6878      	ldr	r0, [r7, #4]
 800d61a:	f7ff ff6c 	bl	800d4f6 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 800d61e:	4603      	mov	r3, r0
 800d620:	60fb      	str	r3, [r7, #12]
 800d622:	f107 030c 	add.w	r3, r7, #12
 800d626:	2101      	movs	r1, #1
 800d628:	4618      	mov	r0, r3
 800d62a:	f000 fc67 	bl	800defc <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>
 800d62e:	4603      	mov	r3, r0
 800d630:	60bb      	str	r3, [r7, #8]
 800d632:	f107 0308 	add.w	r3, r7, #8
 800d636:	4618      	mov	r0, r3
 800d638:	f000 fc79 	bl	800df2e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>
 800d63c:	4603      	mov	r3, r0
      }
 800d63e:	4618      	mov	r0, r3
 800d640:	3710      	adds	r7, #16
 800d642:	46bd      	mov	sp, r7
 800d644:	bd80      	pop	{r7, pc}

0800d646 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800d646:	b480      	push	{r7}
 800d648:	b083      	sub	sp, #12
 800d64a:	af00      	add	r7, sp, #0
 800d64c:	6078      	str	r0, [r7, #4]
 800d64e:	687b      	ldr	r3, [r7, #4]
 800d650:	4618      	mov	r0, r3
 800d652:	370c      	adds	r7, #12
 800d654:	46bd      	mov	sp, r7
 800d656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d65a:	4770      	bx	lr

0800d65c <_ZN9__gnu_cxx13new_allocatorIP4BodyEC1Ev>:
 800d65c:	b480      	push	{r7}
 800d65e:	b083      	sub	sp, #12
 800d660:	af00      	add	r7, sp, #0
 800d662:	6078      	str	r0, [r7, #4]
 800d664:	687b      	ldr	r3, [r7, #4]
 800d666:	4618      	mov	r0, r3
 800d668:	370c      	adds	r7, #12
 800d66a:	46bd      	mov	sp, r7
 800d66c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d670:	4770      	bx	lr

0800d672 <_ZNSt16allocator_traitsISaIP4BodyEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800d672:	b580      	push	{r7, lr}
 800d674:	b084      	sub	sp, #16
 800d676:	af00      	add	r7, sp, #0
 800d678:	60f8      	str	r0, [r7, #12]
 800d67a:	60b9      	str	r1, [r7, #8]
 800d67c:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800d67e:	687a      	ldr	r2, [r7, #4]
 800d680:	68b9      	ldr	r1, [r7, #8]
 800d682:	68f8      	ldr	r0, [r7, #12]
 800d684:	f000 fc5f 	bl	800df46 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>
 800d688:	bf00      	nop
 800d68a:	3710      	adds	r7, #16
 800d68c:	46bd      	mov	sp, r7
 800d68e:	bd80      	pop	{r7, pc}

0800d690 <_ZSt7forwardIRSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d690:	b480      	push	{r7}
 800d692:	b083      	sub	sp, #12
 800d694:	af00      	add	r7, sp, #0
 800d696:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d698:	687b      	ldr	r3, [r7, #4]
 800d69a:	4618      	mov	r0, r3
 800d69c:	370c      	adds	r7, #12
 800d69e:	46bd      	mov	sp, r7
 800d6a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6a4:	4770      	bx	lr

0800d6a6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d6a6:	b480      	push	{r7}
 800d6a8:	b083      	sub	sp, #12
 800d6aa:	af00      	add	r7, sp, #0
 800d6ac:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d6ae:	687b      	ldr	r3, [r7, #4]
 800d6b0:	4618      	mov	r0, r3
 800d6b2:	370c      	adds	r7, #12
 800d6b4:	46bd      	mov	sp, r7
 800d6b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6ba:	4770      	bx	lr

0800d6bc <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP13Function_callP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d6bc:	b480      	push	{r7}
 800d6be:	b083      	sub	sp, #12
 800d6c0:	af00      	add	r7, sp, #0
 800d6c2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d6c4:	687b      	ldr	r3, [r7, #4]
 800d6c6:	4618      	mov	r0, r3
 800d6c8:	370c      	adds	r7, #12
 800d6ca:	46bd      	mov	sp, r7
 800d6cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6d0:	4770      	bx	lr

0800d6d2 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEE8_M_resetEv>:
      void _M_reset()
 800d6d2:	b480      	push	{r7}
 800d6d4:	b083      	sub	sp, #12
 800d6d6:	af00      	add	r7, sp, #0
 800d6d8:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 800d6da:	687b      	ldr	r3, [r7, #4]
 800d6dc:	22ff      	movs	r2, #255	; 0xff
 800d6de:	711a      	strb	r2, [r3, #4]
 800d6e0:	bf00      	nop
 800d6e2:	370c      	adds	r7, #12
 800d6e4:	46bd      	mov	sp, r7
 800d6e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6ea:	4770      	bx	lr

0800d6ec <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800d6ec:	b590      	push	{r4, r7, lr}
 800d6ee:	b085      	sub	sp, #20
 800d6f0:	af00      	add	r7, sp, #0
 800d6f2:	6078      	str	r0, [r7, #4]
 800d6f4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800d6f6:	687b      	ldr	r3, [r7, #4]
 800d6f8:	2201      	movs	r2, #1
 800d6fa:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800d6fc:	6878      	ldr	r0, [r7, #4]
 800d6fe:	f7ff fa56 	bl	800cbae <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800d702:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800d704:	6838      	ldr	r0, [r7, #0]
 800d706:	f7ff fa7f 	bl	800cc08 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 800d70a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800d70c:	681c      	ldr	r4, [r3, #0]
 800d70e:	68f8      	ldr	r0, [r7, #12]
 800d710:	f000 fc25 	bl	800df5e <_ZSt9addressofIP13Function_callEPT_RS2_>
 800d714:	4603      	mov	r3, r0
 800d716:	4619      	mov	r1, r3
 800d718:	2004      	movs	r0, #4
 800d71a:	f7f3 fc87 	bl	800102c <_ZnwjPv>
 800d71e:	4603      	mov	r3, r0
 800d720:	601c      	str	r4, [r3, #0]
    }
 800d722:	bf00      	nop
 800d724:	3714      	adds	r7, #20
 800d726:	46bd      	mov	sp, r7
 800d728:	bd90      	pop	{r4, r7, pc}

0800d72a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP11Method_callP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d72a:	b480      	push	{r7}
 800d72c:	b083      	sub	sp, #12
 800d72e:	af00      	add	r7, sp, #0
 800d730:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d732:	687b      	ldr	r3, [r7, #4]
 800d734:	4618      	mov	r0, r3
 800d736:	370c      	adds	r7, #12
 800d738:	46bd      	mov	sp, r7
 800d73a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d73e:	4770      	bx	lr

0800d740 <_ZNRSt8__detail9__variant14_UninitializedIP11Method_callLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800d740:	b480      	push	{r7}
 800d742:	b083      	sub	sp, #12
 800d744:	af00      	add	r7, sp, #0
 800d746:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800d748:	687b      	ldr	r3, [r7, #4]
 800d74a:	4618      	mov	r0, r3
 800d74c:	370c      	adds	r7, #12
 800d74e:	46bd      	mov	sp, r7
 800d750:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d754:	4770      	bx	lr

0800d756 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800d756:	b590      	push	{r4, r7, lr}
 800d758:	b085      	sub	sp, #20
 800d75a:	af00      	add	r7, sp, #0
 800d75c:	6078      	str	r0, [r7, #4]
 800d75e:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800d760:	687b      	ldr	r3, [r7, #4]
 800d762:	2202      	movs	r2, #2
 800d764:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800d766:	6878      	ldr	r0, [r7, #4]
 800d768:	f7ff faa7 	bl	800ccba <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800d76c:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800d76e:	6838      	ldr	r0, [r7, #0]
 800d770:	f7ff fad0 	bl	800cd14 <_ZSt7forwardIP11Method_callEOT_RNSt16remove_referenceIS2_E4typeE>
 800d774:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800d776:	681c      	ldr	r4, [r3, #0]
 800d778:	68f8      	ldr	r0, [r7, #12]
 800d77a:	f000 fbfc 	bl	800df76 <_ZSt9addressofIP11Method_callEPT_RS2_>
 800d77e:	4603      	mov	r3, r0
 800d780:	4619      	mov	r1, r3
 800d782:	2004      	movs	r0, #4
 800d784:	f7f3 fc52 	bl	800102c <_ZnwjPv>
 800d788:	4603      	mov	r3, r0
 800d78a:	601c      	str	r4, [r3, #0]
    }
 800d78c:	bf00      	nop
 800d78e:	3714      	adds	r7, #20
 800d790:	46bd      	mov	sp, r7
 800d792:	bd90      	pop	{r4, r7, pc}

0800d794 <_ZNRSt8__detail9__variant14_UninitializedIP10AssignmentLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800d794:	b480      	push	{r7}
 800d796:	b083      	sub	sp, #12
 800d798:	af00      	add	r7, sp, #0
 800d79a:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800d79c:	687b      	ldr	r3, [r7, #4]
 800d79e:	4618      	mov	r0, r3
 800d7a0:	370c      	adds	r7, #12
 800d7a2:	46bd      	mov	sp, r7
 800d7a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7a8:	4770      	bx	lr

0800d7aa <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800d7aa:	b590      	push	{r4, r7, lr}
 800d7ac:	b085      	sub	sp, #20
 800d7ae:	af00      	add	r7, sp, #0
 800d7b0:	6078      	str	r0, [r7, #4]
 800d7b2:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800d7b4:	687b      	ldr	r3, [r7, #4]
 800d7b6:	2200      	movs	r2, #0
 800d7b8:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800d7ba:	6878      	ldr	r0, [r7, #4]
 800d7bc:	f7ff fadf 	bl	800cd7e <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800d7c0:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800d7c2:	6838      	ldr	r0, [r7, #0]
 800d7c4:	f7ff fb08 	bl	800cdd8 <_ZSt7forwardIP10AssignmentEOT_RNSt16remove_referenceIS2_E4typeE>
 800d7c8:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800d7ca:	681c      	ldr	r4, [r3, #0]
 800d7cc:	68f8      	ldr	r0, [r7, #12]
 800d7ce:	f000 fbde 	bl	800df8e <_ZSt9addressofIP10AssignmentEPT_RS2_>
 800d7d2:	4603      	mov	r3, r0
 800d7d4:	4619      	mov	r1, r3
 800d7d6:	2004      	movs	r0, #4
 800d7d8:	f7f3 fc28 	bl	800102c <_ZnwjPv>
 800d7dc:	4603      	mov	r3, r0
 800d7de:	601c      	str	r4, [r3, #0]
    }
 800d7e0:	bf00      	nop
 800d7e2:	3714      	adds	r7, #20
 800d7e4:	46bd      	mov	sp, r7
 800d7e6:	bd90      	pop	{r4, r7, pc}

0800d7e8 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP15While_statementP12If_statementEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d7e8:	b480      	push	{r7}
 800d7ea:	b083      	sub	sp, #12
 800d7ec:	af00      	add	r7, sp, #0
 800d7ee:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d7f0:	687b      	ldr	r3, [r7, #4]
 800d7f2:	4618      	mov	r0, r3
 800d7f4:	370c      	adds	r7, #12
 800d7f6:	46bd      	mov	sp, r7
 800d7f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7fc:	4770      	bx	lr

0800d7fe <_ZNRSt8__detail9__variant14_UninitializedIP15While_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800d7fe:	b480      	push	{r7}
 800d800:	b083      	sub	sp, #12
 800d802:	af00      	add	r7, sp, #0
 800d804:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800d806:	687b      	ldr	r3, [r7, #4]
 800d808:	4618      	mov	r0, r3
 800d80a:	370c      	adds	r7, #12
 800d80c:	46bd      	mov	sp, r7
 800d80e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d812:	4770      	bx	lr

0800d814 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800d814:	b590      	push	{r4, r7, lr}
 800d816:	b085      	sub	sp, #20
 800d818:	af00      	add	r7, sp, #0
 800d81a:	6078      	str	r0, [r7, #4]
 800d81c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800d81e:	687b      	ldr	r3, [r7, #4]
 800d820:	2203      	movs	r2, #3
 800d822:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800d824:	6878      	ldr	r0, [r7, #4]
 800d826:	f7ff fb72 	bl	800cf0e <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800d82a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800d82c:	6838      	ldr	r0, [r7, #0]
 800d82e:	f7ff fb9b 	bl	800cf68 <_ZSt7forwardIP15While_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 800d832:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800d834:	681c      	ldr	r4, [r3, #0]
 800d836:	68f8      	ldr	r0, [r7, #12]
 800d838:	f000 fbb5 	bl	800dfa6 <_ZSt9addressofIP15While_statementEPT_RS2_>
 800d83c:	4603      	mov	r3, r0
 800d83e:	4619      	mov	r1, r3
 800d840:	2004      	movs	r0, #4
 800d842:	f7f3 fbf3 	bl	800102c <_ZnwjPv>
 800d846:	4603      	mov	r3, r0
 800d848:	601c      	str	r4, [r3, #0]
    }
 800d84a:	bf00      	nop
 800d84c:	3714      	adds	r7, #20
 800d84e:	46bd      	mov	sp, r7
 800d850:	bd90      	pop	{r4, r7, pc}

0800d852 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJP12If_statementEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d852:	b480      	push	{r7}
 800d854:	b083      	sub	sp, #12
 800d856:	af00      	add	r7, sp, #0
 800d858:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d85a:	687b      	ldr	r3, [r7, #4]
 800d85c:	4618      	mov	r0, r3
 800d85e:	370c      	adds	r7, #12
 800d860:	46bd      	mov	sp, r7
 800d862:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d866:	4770      	bx	lr

0800d868 <_ZNRSt8__detail9__variant14_UninitializedIP12If_statementLb1EE6_M_getEv>:
      constexpr _Type& _M_get() & noexcept
 800d868:	b480      	push	{r7}
 800d86a:	b083      	sub	sp, #12
 800d86c:	af00      	add	r7, sp, #0
 800d86e:	6078      	str	r0, [r7, #4]
      { return _M_storage; }
 800d870:	687b      	ldr	r3, [r7, #4]
 800d872:	4618      	mov	r0, r3
 800d874:	370c      	adds	r7, #12
 800d876:	46bd      	mov	sp, r7
 800d878:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d87c:	4770      	bx	lr

0800d87e <_ZSt28__variant_construct_by_indexILj4ESt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800d87e:	b590      	push	{r4, r7, lr}
 800d880:	b085      	sub	sp, #20
 800d882:	af00      	add	r7, sp, #0
 800d884:	6078      	str	r0, [r7, #4]
 800d886:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800d888:	687b      	ldr	r3, [r7, #4]
 800d88a:	2204      	movs	r2, #4
 800d88c:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800d88e:	6878      	ldr	r0, [r7, #4]
 800d890:	f7ff fbe7 	bl	800d062 <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEEEEDcOT0_>
 800d894:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800d896:	6838      	ldr	r0, [r7, #0]
 800d898:	f7ff fc10 	bl	800d0bc <_ZSt7forwardIP12If_statementEOT_RNSt16remove_referenceIS2_E4typeE>
 800d89c:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800d89e:	681c      	ldr	r4, [r3, #0]
 800d8a0:	68f8      	ldr	r0, [r7, #12]
 800d8a2:	f000 fb8c 	bl	800dfbe <_ZSt9addressofIP12If_statementEPT_RS2_>
 800d8a6:	4603      	mov	r3, r0
 800d8a8:	4619      	mov	r1, r3
 800d8aa:	2004      	movs	r0, #4
 800d8ac:	f7f3 fbbe 	bl	800102c <_ZnwjPv>
 800d8b0:	4603      	mov	r3, r0
 800d8b2:	601c      	str	r4, [r3, #0]
    }
 800d8b4:	bf00      	nop
 800d8b6:	3714      	adds	r7, #20
 800d8b8:	46bd      	mov	sp, r7
 800d8ba:	bd90      	pop	{r4, r7, pc}

0800d8bc <_ZN9__gnu_cxx13new_allocatorIP9StatementEC1Ev>:
 800d8bc:	b480      	push	{r7}
 800d8be:	b083      	sub	sp, #12
 800d8c0:	af00      	add	r7, sp, #0
 800d8c2:	6078      	str	r0, [r7, #4]
 800d8c4:	687b      	ldr	r3, [r7, #4]
 800d8c6:	4618      	mov	r0, r3
 800d8c8:	370c      	adds	r7, #12
 800d8ca:	46bd      	mov	sp, r7
 800d8cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8d0:	4770      	bx	lr

0800d8d2 <_ZNSt16allocator_traitsISaIP9StatementEE10deallocateERS2_PS1_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800d8d2:	b580      	push	{r7, lr}
 800d8d4:	b084      	sub	sp, #16
 800d8d6:	af00      	add	r7, sp, #0
 800d8d8:	60f8      	str	r0, [r7, #12]
 800d8da:	60b9      	str	r1, [r7, #8]
 800d8dc:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 800d8de:	687a      	ldr	r2, [r7, #4]
 800d8e0:	68b9      	ldr	r1, [r7, #8]
 800d8e2:	68f8      	ldr	r0, [r7, #12]
 800d8e4:	f000 fb77 	bl	800dfd6 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>
 800d8e8:	bf00      	nop
 800d8ea:	3710      	adds	r7, #16
 800d8ec:	46bd      	mov	sp, r7
 800d8ee:	bd80      	pop	{r7, pc}

0800d8f0 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800d8f0:	b480      	push	{r7}
 800d8f2:	b083      	sub	sp, #12
 800d8f4:	af00      	add	r7, sp, #0
 800d8f6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800d8f8:	687b      	ldr	r3, [r7, #4]
 800d8fa:	4618      	mov	r0, r3
 800d8fc:	370c      	adds	r7, #12
 800d8fe:	46bd      	mov	sp, r7
 800d900:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d904:	4770      	bx	lr

0800d906 <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 800d906:	b580      	push	{r7, lr}
 800d908:	b084      	sub	sp, #16
 800d90a:	af00      	add	r7, sp, #0
 800d90c:	60f8      	str	r0, [r7, #12]
 800d90e:	60b9      	str	r1, [r7, #8]
 800d910:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 800d912:	6878      	ldr	r0, [r7, #4]
 800d914:	f7ff ffec 	bl	800d8f0 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 800d918:	4603      	mov	r3, r0
 800d91a:	461a      	mov	r2, r3
 800d91c:	68b9      	ldr	r1, [r7, #8]
 800d91e:	68f8      	ldr	r0, [r7, #12]
 800d920:	f000 fb65 	bl	800dfee <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>
 800d924:	bf00      	nop
 800d926:	3710      	adds	r7, #16
 800d928:	46bd      	mov	sp, r7
 800d92a:	bd80      	pop	{r7, pc}

0800d92c <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800d92c:	b580      	push	{r7, lr}
 800d92e:	b084      	sub	sp, #16
 800d930:	af00      	add	r7, sp, #0
 800d932:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 800d934:	687b      	ldr	r3, [r7, #4]
 800d936:	1d1a      	adds	r2, r3, #4
 800d938:	f107 030c 	add.w	r3, r7, #12
 800d93c:	4611      	mov	r1, r2
 800d93e:	4618      	mov	r0, r3
 800d940:	f000 fb6b 	bl	800e01a <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800d944:	68fb      	ldr	r3, [r7, #12]
 800d946:	4618      	mov	r0, r3
 800d948:	3710      	adds	r7, #16
 800d94a:	46bd      	mov	sp, r7
 800d94c:	bd80      	pop	{r7, pc}
	...

0800d950 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 800d950:	b5b0      	push	{r4, r5, r7, lr}
 800d952:	b08c      	sub	sp, #48	; 0x30
 800d954:	af00      	add	r7, sp, #0
 800d956:	60f8      	str	r0, [r7, #12]
 800d958:	60b9      	str	r1, [r7, #8]
 800d95a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 800d95c:	4a39      	ldr	r2, [pc, #228]	; (800da44 <_ZNSt6vectorIP9StatementSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 800d95e:	2101      	movs	r1, #1
 800d960:	68f8      	ldr	r0, [r7, #12]
 800d962:	f000 fb6a 	bl	800e03a <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>
 800d966:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 800d968:	68fb      	ldr	r3, [r7, #12]
 800d96a:	681b      	ldr	r3, [r3, #0]
 800d96c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 800d96e:	68fb      	ldr	r3, [r7, #12]
 800d970:	685b      	ldr	r3, [r3, #4]
 800d972:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 800d974:	68f8      	ldr	r0, [r7, #12]
 800d976:	f000 fba7 	bl	800e0c8 <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 800d97a:	4603      	mov	r3, r0
 800d97c:	617b      	str	r3, [r7, #20]
 800d97e:	f107 0214 	add.w	r2, r7, #20
 800d982:	f107 0308 	add.w	r3, r7, #8
 800d986:	4611      	mov	r1, r2
 800d988:	4618      	mov	r0, r3
 800d98a:	f000 fbad 	bl	800e0e8 <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 800d98e:	4603      	mov	r3, r0
 800d990:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 800d992:	68fb      	ldr	r3, [r7, #12]
 800d994:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d996:	4618      	mov	r0, r3
 800d998:	f000 fbbb 	bl	800e112 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>
 800d99c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 800d99e:	69fb      	ldr	r3, [r7, #28]
 800d9a0:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 800d9a2:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 800d9a4:	6a3b      	ldr	r3, [r7, #32]
 800d9a6:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 800d9a8:	69fa      	ldr	r2, [r7, #28]
 800d9aa:	18d5      	adds	r5, r2, r3
 800d9ac:	6878      	ldr	r0, [r7, #4]
 800d9ae:	f7ff ff9f 	bl	800d8f0 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 800d9b2:	4603      	mov	r3, r0
 800d9b4:	461a      	mov	r2, r3
 800d9b6:	4629      	mov	r1, r5
 800d9b8:	4620      	mov	r0, r4
 800d9ba:	f7ff ffa4 	bl	800d906 <_ZNSt16allocator_traitsISaIP9StatementEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 800d9be:	2300      	movs	r3, #0
 800d9c0:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 800d9c2:	f107 0308 	add.w	r3, r7, #8
 800d9c6:	4618      	mov	r0, r3
 800d9c8:	f000 fbcb 	bl	800e162 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 800d9cc:	4603      	mov	r3, r0
 800d9ce:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 800d9d0:	68fb      	ldr	r3, [r7, #12]
 800d9d2:	4618      	mov	r0, r3
 800d9d4:	f7ff fbc9 	bl	800d16a <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 800d9d8:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 800d9da:	69fa      	ldr	r2, [r7, #28]
 800d9dc:	4621      	mov	r1, r4
 800d9de:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800d9e0:	f000 fbab 	bl	800e13a <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 800d9e4:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 800d9e6:	69bb      	ldr	r3, [r7, #24]
 800d9e8:	3304      	adds	r3, #4
 800d9ea:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 800d9ec:	f107 0308 	add.w	r3, r7, #8
 800d9f0:	4618      	mov	r0, r3
 800d9f2:	f000 fbb6 	bl	800e162 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 800d9f6:	4603      	mov	r3, r0
 800d9f8:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 800d9fa:	68fb      	ldr	r3, [r7, #12]
 800d9fc:	4618      	mov	r0, r3
 800d9fe:	f7ff fbb4 	bl	800d16a <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 800da02:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 800da04:	69ba      	ldr	r2, [r7, #24]
 800da06:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800da08:	4620      	mov	r0, r4
 800da0a:	f000 fb96 	bl	800e13a <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 800da0e:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 800da10:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 800da12:	68fb      	ldr	r3, [r7, #12]
 800da14:	689a      	ldr	r2, [r3, #8]
 800da16:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800da18:	1ad3      	subs	r3, r2, r3
 800da1a:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 800da1c:	461a      	mov	r2, r3
 800da1e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800da20:	f7ff fb90 	bl	800d144 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 800da24:	68fb      	ldr	r3, [r7, #12]
 800da26:	69fa      	ldr	r2, [r7, #28]
 800da28:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 800da2a:	68fb      	ldr	r3, [r7, #12]
 800da2c:	69ba      	ldr	r2, [r7, #24]
 800da2e:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 800da30:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800da32:	009b      	lsls	r3, r3, #2
 800da34:	69fa      	ldr	r2, [r7, #28]
 800da36:	441a      	add	r2, r3
 800da38:	68fb      	ldr	r3, [r7, #12]
 800da3a:	609a      	str	r2, [r3, #8]
    }
 800da3c:	bf00      	nop
 800da3e:	3730      	adds	r7, #48	; 0x30
 800da40:	46bd      	mov	sp, r7
 800da42:	bdb0      	pop	{r4, r5, r7, pc}
 800da44:	08024d54 	.word	0x08024d54

0800da48 <_ZNSt6vectorIP9StatementSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 800da48:	b580      	push	{r7, lr}
 800da4a:	b084      	sub	sp, #16
 800da4c:	af00      	add	r7, sp, #0
 800da4e:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 800da50:	6878      	ldr	r0, [r7, #4]
 800da52:	f7ff ff6b 	bl	800d92c <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 800da56:	4603      	mov	r3, r0
 800da58:	60fb      	str	r3, [r7, #12]
 800da5a:	f107 030c 	add.w	r3, r7, #12
 800da5e:	2101      	movs	r1, #1
 800da60:	4618      	mov	r0, r3
 800da62:	f000 fb89 	bl	800e178 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>
 800da66:	4603      	mov	r3, r0
 800da68:	60bb      	str	r3, [r7, #8]
 800da6a:	f107 0308 	add.w	r3, r7, #8
 800da6e:	4618      	mov	r0, r3
 800da70:	f000 fb9b 	bl	800e1aa <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 800da74:	4603      	mov	r3, r0
      }
 800da76:	4618      	mov	r0, r3
 800da78:	3710      	adds	r7, #16
 800da7a:	46bd      	mov	sp, r7
 800da7c:	bd80      	pop	{r7, pc}

0800da7e <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800da7e:	b480      	push	{r7}
 800da80:	b083      	sub	sp, #12
 800da82:	af00      	add	r7, sp, #0
 800da84:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800da86:	687b      	ldr	r3, [r7, #4]
 800da88:	4618      	mov	r0, r3
 800da8a:	370c      	adds	r7, #12
 800da8c:	46bd      	mov	sp, r7
 800da8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da92:	4770      	bx	lr

0800da94 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRS9_St17integral_constantIjLj0EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800da94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da98:	b084      	sub	sp, #16
 800da9a:	af00      	add	r7, sp, #0
 800da9c:	7338      	strb	r0, [r7, #12]
 800da9e:	60b9      	str	r1, [r7, #8]
 800daa0:	607a      	str	r2, [r7, #4]
 800daa2:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800daa4:	68b8      	ldr	r0, [r7, #8]
 800daa6:	f7ff fc36 	bl	800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800daaa:	4604      	mov	r4, r0
 800daac:	6878      	ldr	r0, [r7, #4]
 800daae:	f7f8 faf4 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 800dab2:	4605      	mov	r5, r0
 800dab4:	6838      	ldr	r0, [r7, #0]
 800dab6:	f7ff ffe2 	bl	800da7e <_ZSt7forwardISt17integral_constantIjLj0EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800daba:	4632      	mov	r2, r6
 800dabc:	4629      	mov	r1, r5
 800dabe:	4620      	mov	r0, r4
 800dac0:	f000 fb7f 	bl	800e1c2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>
 800dac4:	4643      	mov	r3, r8
 800dac6:	4618      	mov	r0, r3
 800dac8:	3710      	adds	r7, #16
 800daca:	46bd      	mov	sp, r7
 800dacc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800dad0 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800dad0:	b480      	push	{r7}
 800dad2:	b083      	sub	sp, #12
 800dad4:	af00      	add	r7, sp, #0
 800dad6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800dad8:	687b      	ldr	r3, [r7, #4]
 800dada:	4618      	mov	r0, r3
 800dadc:	370c      	adds	r7, #12
 800dade:	46bd      	mov	sp, r7
 800dae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dae4:	4770      	bx	lr

0800dae6 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRiSt17integral_constantIjLj1EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800dae6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800daea:	b084      	sub	sp, #16
 800daec:	af00      	add	r7, sp, #0
 800daee:	7338      	strb	r0, [r7, #12]
 800daf0:	60b9      	str	r1, [r7, #8]
 800daf2:	607a      	str	r2, [r7, #4]
 800daf4:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800daf6:	68b8      	ldr	r0, [r7, #8]
 800daf8:	f7ff fc0d 	bl	800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800dafc:	4604      	mov	r4, r0
 800dafe:	6878      	ldr	r0, [r7, #4]
 800db00:	f7f8 fa7b 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 800db04:	4605      	mov	r5, r0
 800db06:	6838      	ldr	r0, [r7, #0]
 800db08:	f7ff ffe2 	bl	800dad0 <_ZSt7forwardISt17integral_constantIjLj1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800db0c:	4632      	mov	r2, r6
 800db0e:	4629      	mov	r1, r5
 800db10:	4620      	mov	r0, r4
 800db12:	f000 fbaa 	bl	800e26a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>
 800db16:	4643      	mov	r3, r8
 800db18:	4618      	mov	r0, r3
 800db1a:	3710      	adds	r7, #16
 800db1c:	46bd      	mov	sp, r7
 800db1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800db22 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800db22:	b480      	push	{r7}
 800db24:	b083      	sub	sp, #12
 800db26:	af00      	add	r7, sp, #0
 800db28:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800db2a:	687b      	ldr	r3, [r7, #4]
 800db2c:	4618      	mov	r0, r3
 800db2e:	370c      	adds	r7, #12
 800db30:	46bd      	mov	sp, r7
 800db32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db36:	4770      	bx	lr

0800db38 <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRfSt17integral_constantIjLj2EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800db38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db3c:	b084      	sub	sp, #16
 800db3e:	af00      	add	r7, sp, #0
 800db40:	7338      	strb	r0, [r7, #12]
 800db42:	60b9      	str	r1, [r7, #8]
 800db44:	607a      	str	r2, [r7, #4]
 800db46:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800db48:	68b8      	ldr	r0, [r7, #8]
 800db4a:	f7ff fbe4 	bl	800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800db4e:	4604      	mov	r4, r0
 800db50:	6878      	ldr	r0, [r7, #4]
 800db52:	f7f8 fa74 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 800db56:	4605      	mov	r5, r0
 800db58:	6838      	ldr	r0, [r7, #0]
 800db5a:	f7ff ffe2 	bl	800db22 <_ZSt7forwardISt17integral_constantIjLj2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800db5e:	4632      	mov	r2, r6
 800db60:	4629      	mov	r1, r5
 800db62:	4620      	mov	r0, r4
 800db64:	f000 fbd3 	bl	800e30e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>
 800db68:	4643      	mov	r3, r8
 800db6a:	4618      	mov	r0, r3
 800db6c:	3710      	adds	r7, #16
 800db6e:	46bd      	mov	sp, r7
 800db70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800db74 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800db74:	b480      	push	{r7}
 800db76:	b083      	sub	sp, #12
 800db78:	af00      	add	r7, sp, #0
 800db7a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800db7c:	687b      	ldr	r3, [r7, #4]
 800db7e:	4618      	mov	r0, r3
 800db80:	370c      	adds	r7, #12
 800db82:	46bd      	mov	sp, r7
 800db84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db88:	4770      	bx	lr

0800db8a <_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOSA_EUlOT_T0_E_JRbSt17integral_constantIjLj3EEEESC_St14__invoke_otherOSE_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 800db8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db8e:	b084      	sub	sp, #16
 800db90:	af00      	add	r7, sp, #0
 800db92:	7338      	strb	r0, [r7, #12]
 800db94:	60b9      	str	r1, [r7, #8]
 800db96:	607a      	str	r2, [r7, #4]
 800db98:	603b      	str	r3, [r7, #0]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 800db9a:	68b8      	ldr	r0, [r7, #8]
 800db9c:	f7ff fbbb 	bl	800d316 <_ZSt7forwardIZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS9_EUlOT_T0_E_ESC_RNSt16remove_referenceISB_E4typeE>
 800dba0:	4604      	mov	r4, r0
 800dba2:	6878      	ldr	r0, [r7, #4]
 800dba4:	f7f8 fa07 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 800dba8:	4605      	mov	r5, r0
 800dbaa:	6838      	ldr	r0, [r7, #0]
 800dbac:	f7ff ffe2 	bl	800db74 <_ZSt7forwardISt17integral_constantIjLj3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800dbb0:	4632      	mov	r2, r6
 800dbb2:	4629      	mov	r1, r5
 800dbb4:	4620      	mov	r0, r4
 800dbb6:	f000 fbfc 	bl	800e3b2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>
 800dbba:	4643      	mov	r3, r8
 800dbbc:	4618      	mov	r0, r3
 800dbbe:	3710      	adds	r7, #16
 800dbc0:	46bd      	mov	sp, r7
 800dbc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800dbc6 <_ZN9__gnu_cxx13new_allocatorIP10ExpressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 800dbc6:	b590      	push	{r4, r7, lr}
 800dbc8:	b085      	sub	sp, #20
 800dbca:	af00      	add	r7, sp, #0
 800dbcc:	60f8      	str	r0, [r7, #12]
 800dbce:	60b9      	str	r1, [r7, #8]
 800dbd0:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 800dbd2:	6878      	ldr	r0, [r7, #4]
 800dbd4:	f7ff fbaa 	bl	800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 800dbd8:	4603      	mov	r3, r0
 800dbda:	681c      	ldr	r4, [r3, #0]
 800dbdc:	68bb      	ldr	r3, [r7, #8]
 800dbde:	4619      	mov	r1, r3
 800dbe0:	2004      	movs	r0, #4
 800dbe2:	f7f3 fa23 	bl	800102c <_ZnwjPv>
 800dbe6:	4603      	mov	r3, r0
 800dbe8:	601c      	str	r4, [r3, #0]
 800dbea:	bf00      	nop
 800dbec:	3714      	adds	r7, #20
 800dbee:	46bd      	mov	sp, r7
 800dbf0:	bd90      	pop	{r4, r7, pc}

0800dbf2 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800dbf2:	b480      	push	{r7}
 800dbf4:	b083      	sub	sp, #12
 800dbf6:	af00      	add	r7, sp, #0
 800dbf8:	6078      	str	r0, [r7, #4]
 800dbfa:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800dbfc:	683b      	ldr	r3, [r7, #0]
 800dbfe:	681a      	ldr	r2, [r3, #0]
 800dc00:	687b      	ldr	r3, [r7, #4]
 800dc02:	601a      	str	r2, [r3, #0]
 800dc04:	687b      	ldr	r3, [r7, #4]
 800dc06:	4618      	mov	r0, r3
 800dc08:	370c      	adds	r7, #12
 800dc0a:	46bd      	mov	sp, r7
 800dc0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc10:	4770      	bx	lr

0800dc12 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc>:
      { return _M_insert_rval(__position, std::move(__v)); }
#endif

      // Called by _M_fill_insert, _M_insert_aux etc.
      size_type
      _M_check_len(size_type __n, const char* __s) const
 800dc12:	b590      	push	{r4, r7, lr}
 800dc14:	b087      	sub	sp, #28
 800dc16:	af00      	add	r7, sp, #0
 800dc18:	60f8      	str	r0, [r7, #12]
 800dc1a:	60b9      	str	r1, [r7, #8]
 800dc1c:	607a      	str	r2, [r7, #4]
      {
	if (max_size() - size() < __n)
 800dc1e:	68f8      	ldr	r0, [r7, #12]
 800dc20:	f000 fc1a 	bl	800e458 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 800dc24:	4604      	mov	r4, r0
 800dc26:	68f8      	ldr	r0, [r7, #12]
 800dc28:	f7fa f9c8 	bl	8007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800dc2c:	4603      	mov	r3, r0
 800dc2e:	1ae2      	subs	r2, r4, r3
 800dc30:	68bb      	ldr	r3, [r7, #8]
 800dc32:	429a      	cmp	r2, r3
 800dc34:	bf34      	ite	cc
 800dc36:	2301      	movcc	r3, #1
 800dc38:	2300      	movcs	r3, #0
 800dc3a:	b2db      	uxtb	r3, r3
 800dc3c:	2b00      	cmp	r3, #0
 800dc3e:	d002      	beq.n	800dc46 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 800dc40:	6878      	ldr	r0, [r7, #4]
 800dc42:	f012 fbaf 	bl	80203a4 <_ZSt20__throw_length_errorPKc>

	const size_type __len = size() + (std::max)(size(), __n);
 800dc46:	68f8      	ldr	r0, [r7, #12]
 800dc48:	f7fa f9b8 	bl	8007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800dc4c:	4604      	mov	r4, r0
 800dc4e:	68f8      	ldr	r0, [r7, #12]
 800dc50:	f7fa f9b4 	bl	8007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800dc54:	4603      	mov	r3, r0
 800dc56:	613b      	str	r3, [r7, #16]
 800dc58:	f107 0208 	add.w	r2, r7, #8
 800dc5c:	f107 0310 	add.w	r3, r7, #16
 800dc60:	4611      	mov	r1, r2
 800dc62:	4618      	mov	r0, r3
 800dc64:	f000 fc09 	bl	800e47a <_ZSt3maxIjERKT_S2_S2_>
 800dc68:	4603      	mov	r3, r0
 800dc6a:	681b      	ldr	r3, [r3, #0]
 800dc6c:	4423      	add	r3, r4
 800dc6e:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 800dc70:	68f8      	ldr	r0, [r7, #12]
 800dc72:	f7fa f9a3 	bl	8007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 800dc76:	4602      	mov	r2, r0
 800dc78:	697b      	ldr	r3, [r7, #20]
 800dc7a:	4293      	cmp	r3, r2
 800dc7c:	d306      	bcc.n	800dc8c <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 800dc7e:	68f8      	ldr	r0, [r7, #12]
 800dc80:	f000 fbea 	bl	800e458 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 800dc84:	4602      	mov	r2, r0
 800dc86:	697b      	ldr	r3, [r7, #20]
 800dc88:	4293      	cmp	r3, r2
 800dc8a:	d904      	bls.n	800dc96 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 800dc8c:	68f8      	ldr	r0, [r7, #12]
 800dc8e:	f000 fbe3 	bl	800e458 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>
 800dc92:	4603      	mov	r3, r0
 800dc94:	e000      	b.n	800dc98 <_ZNKSt6vectorIP10ExpressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 800dc96:	697b      	ldr	r3, [r7, #20]
      }
 800dc98:	4618      	mov	r0, r3
 800dc9a:	371c      	adds	r7, #28
 800dc9c:	46bd      	mov	sp, r7
 800dc9e:	bd90      	pop	{r4, r7, pc}

0800dca0 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800dca0:	b580      	push	{r7, lr}
 800dca2:	b084      	sub	sp, #16
 800dca4:	af00      	add	r7, sp, #0
 800dca6:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800dca8:	687a      	ldr	r2, [r7, #4]
 800dcaa:	f107 030c 	add.w	r3, r7, #12
 800dcae:	4611      	mov	r1, r2
 800dcb0:	4618      	mov	r0, r3
 800dcb2:	f7ff ff9e 	bl	800dbf2 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800dcb6:	68fb      	ldr	r3, [r7, #12]
 800dcb8:	4618      	mov	r0, r3
 800dcba:	3710      	adds	r7, #16
 800dcbc:	46bd      	mov	sp, r7
 800dcbe:	bd80      	pop	{r7, pc}

0800dcc0 <_ZN9__gnu_cxxmiIPP10ExpressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 800dcc0:	b590      	push	{r4, r7, lr}
 800dcc2:	b083      	sub	sp, #12
 800dcc4:	af00      	add	r7, sp, #0
 800dcc6:	6078      	str	r0, [r7, #4]
 800dcc8:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 800dcca:	6878      	ldr	r0, [r7, #4]
 800dccc:	f000 f821 	bl	800dd12 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800dcd0:	4603      	mov	r3, r0
 800dcd2:	681c      	ldr	r4, [r3, #0]
 800dcd4:	6838      	ldr	r0, [r7, #0]
 800dcd6:	f000 f81c 	bl	800dd12 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800dcda:	4603      	mov	r3, r0
 800dcdc:	681b      	ldr	r3, [r3, #0]
 800dcde:	1ae3      	subs	r3, r4, r3
 800dce0:	109b      	asrs	r3, r3, #2
 800dce2:	4618      	mov	r0, r3
 800dce4:	370c      	adds	r7, #12
 800dce6:	46bd      	mov	sp, r7
 800dce8:	bd90      	pop	{r4, r7, pc}

0800dcea <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 800dcea:	b590      	push	{r4, r7, lr}
 800dcec:	b089      	sub	sp, #36	; 0x24
 800dcee:	af02      	add	r7, sp, #8
 800dcf0:	60f8      	str	r0, [r7, #12]
 800dcf2:	60b9      	str	r1, [r7, #8]
 800dcf4:	607a      	str	r2, [r7, #4]
 800dcf6:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 800dcf8:	f88d 4000 	strb.w	r4, [sp]
 800dcfc:	683b      	ldr	r3, [r7, #0]
 800dcfe:	687a      	ldr	r2, [r7, #4]
 800dd00:	68b9      	ldr	r1, [r7, #8]
 800dd02:	68f8      	ldr	r0, [r7, #12]
 800dd04:	f000 fbcd 	bl	800e4a2 <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 800dd08:	4603      	mov	r3, r0
      }
 800dd0a:	4618      	mov	r0, r3
 800dd0c:	371c      	adds	r7, #28
 800dd0e:	46bd      	mov	sp, r7
 800dd10:	bd90      	pop	{r4, r7, pc}

0800dd12 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800dd12:	b480      	push	{r7}
 800dd14:	b083      	sub	sp, #12
 800dd16:	af00      	add	r7, sp, #0
 800dd18:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800dd1a:	687b      	ldr	r3, [r7, #4]
 800dd1c:	4618      	mov	r0, r3
 800dd1e:	370c      	adds	r7, #12
 800dd20:	46bd      	mov	sp, r7
 800dd22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd26:	4770      	bx	lr

0800dd28 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 800dd28:	b580      	push	{r7, lr}
 800dd2a:	b084      	sub	sp, #16
 800dd2c:	af00      	add	r7, sp, #0
 800dd2e:	6078      	str	r0, [r7, #4]
 800dd30:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 800dd32:	687b      	ldr	r3, [r7, #4]
 800dd34:	681a      	ldr	r2, [r3, #0]
 800dd36:	683b      	ldr	r3, [r7, #0]
 800dd38:	009b      	lsls	r3, r3, #2
 800dd3a:	425b      	negs	r3, r3
 800dd3c:	4413      	add	r3, r2
 800dd3e:	60fb      	str	r3, [r7, #12]
 800dd40:	f107 020c 	add.w	r2, r7, #12
 800dd44:	f107 0308 	add.w	r3, r7, #8
 800dd48:	4611      	mov	r1, r2
 800dd4a:	4618      	mov	r0, r3
 800dd4c:	f7ff ff51 	bl	800dbf2 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800dd50:	68bb      	ldr	r3, [r7, #8]
 800dd52:	4618      	mov	r0, r3
 800dd54:	3710      	adds	r7, #16
 800dd56:	46bd      	mov	sp, r7
 800dd58:	bd80      	pop	{r7, pc}

0800dd5a <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800dd5a:	b480      	push	{r7}
 800dd5c:	b083      	sub	sp, #12
 800dd5e:	af00      	add	r7, sp, #0
 800dd60:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800dd62:	687b      	ldr	r3, [r7, #4]
 800dd64:	681b      	ldr	r3, [r3, #0]
 800dd66:	4618      	mov	r0, r3
 800dd68:	370c      	adds	r7, #12
 800dd6a:	46bd      	mov	sp, r7
 800dd6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd70:	4770      	bx	lr

0800dd72 <_ZN9__gnu_cxx13new_allocatorIP4BodyE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 800dd72:	b590      	push	{r4, r7, lr}
 800dd74:	b085      	sub	sp, #20
 800dd76:	af00      	add	r7, sp, #0
 800dd78:	60f8      	str	r0, [r7, #12]
 800dd7a:	60b9      	str	r1, [r7, #8]
 800dd7c:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 800dd7e:	6878      	ldr	r0, [r7, #4]
 800dd80:	f7ff fb9b 	bl	800d4ba <_ZSt7forwardIP4BodyEOT_RNSt16remove_referenceIS2_E4typeE>
 800dd84:	4603      	mov	r3, r0
 800dd86:	681c      	ldr	r4, [r3, #0]
 800dd88:	68bb      	ldr	r3, [r7, #8]
 800dd8a:	4619      	mov	r1, r3
 800dd8c:	2004      	movs	r0, #4
 800dd8e:	f7f3 f94d 	bl	800102c <_ZnwjPv>
 800dd92:	4603      	mov	r3, r0
 800dd94:	601c      	str	r4, [r3, #0]
 800dd96:	bf00      	nop
 800dd98:	3714      	adds	r7, #20
 800dd9a:	46bd      	mov	sp, r7
 800dd9c:	bd90      	pop	{r4, r7, pc}

0800dd9e <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800dd9e:	b480      	push	{r7}
 800dda0:	b083      	sub	sp, #12
 800dda2:	af00      	add	r7, sp, #0
 800dda4:	6078      	str	r0, [r7, #4]
 800dda6:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800dda8:	683b      	ldr	r3, [r7, #0]
 800ddaa:	681a      	ldr	r2, [r3, #0]
 800ddac:	687b      	ldr	r3, [r7, #4]
 800ddae:	601a      	str	r2, [r3, #0]
 800ddb0:	687b      	ldr	r3, [r7, #4]
 800ddb2:	4618      	mov	r0, r3
 800ddb4:	370c      	adds	r7, #12
 800ddb6:	46bd      	mov	sp, r7
 800ddb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddbc:	4770      	bx	lr

0800ddbe <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 800ddbe:	b590      	push	{r4, r7, lr}
 800ddc0:	b087      	sub	sp, #28
 800ddc2:	af00      	add	r7, sp, #0
 800ddc4:	60f8      	str	r0, [r7, #12]
 800ddc6:	60b9      	str	r1, [r7, #8]
 800ddc8:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 800ddca:	68f8      	ldr	r0, [r7, #12]
 800ddcc:	f000 fb7b 	bl	800e4c6 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 800ddd0:	4604      	mov	r4, r0
 800ddd2:	68f8      	ldr	r0, [r7, #12]
 800ddd4:	f000 fb88 	bl	800e4e8 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 800ddd8:	4603      	mov	r3, r0
 800ddda:	1ae2      	subs	r2, r4, r3
 800dddc:	68bb      	ldr	r3, [r7, #8]
 800ddde:	429a      	cmp	r2, r3
 800dde0:	bf34      	ite	cc
 800dde2:	2301      	movcc	r3, #1
 800dde4:	2300      	movcs	r3, #0
 800dde6:	b2db      	uxtb	r3, r3
 800dde8:	2b00      	cmp	r3, #0
 800ddea:	d002      	beq.n	800ddf2 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 800ddec:	6878      	ldr	r0, [r7, #4]
 800ddee:	f012 fad9 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 800ddf2:	68f8      	ldr	r0, [r7, #12]
 800ddf4:	f000 fb78 	bl	800e4e8 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 800ddf8:	4604      	mov	r4, r0
 800ddfa:	68f8      	ldr	r0, [r7, #12]
 800ddfc:	f000 fb74 	bl	800e4e8 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 800de00:	4603      	mov	r3, r0
 800de02:	613b      	str	r3, [r7, #16]
 800de04:	f107 0208 	add.w	r2, r7, #8
 800de08:	f107 0310 	add.w	r3, r7, #16
 800de0c:	4611      	mov	r1, r2
 800de0e:	4618      	mov	r0, r3
 800de10:	f000 fb33 	bl	800e47a <_ZSt3maxIjERKT_S2_S2_>
 800de14:	4603      	mov	r3, r0
 800de16:	681b      	ldr	r3, [r3, #0]
 800de18:	4423      	add	r3, r4
 800de1a:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 800de1c:	68f8      	ldr	r0, [r7, #12]
 800de1e:	f000 fb63 	bl	800e4e8 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>
 800de22:	4602      	mov	r2, r0
 800de24:	697b      	ldr	r3, [r7, #20]
 800de26:	4293      	cmp	r3, r2
 800de28:	d306      	bcc.n	800de38 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x7a>
 800de2a:	68f8      	ldr	r0, [r7, #12]
 800de2c:	f000 fb4b 	bl	800e4c6 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 800de30:	4602      	mov	r2, r0
 800de32:	697b      	ldr	r3, [r7, #20]
 800de34:	4293      	cmp	r3, r2
 800de36:	d904      	bls.n	800de42 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x84>
 800de38:	68f8      	ldr	r0, [r7, #12]
 800de3a:	f000 fb44 	bl	800e4c6 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>
 800de3e:	4603      	mov	r3, r0
 800de40:	e000      	b.n	800de44 <_ZNKSt6vectorIP4BodySaIS1_EE12_M_check_lenEjPKc+0x86>
 800de42:	697b      	ldr	r3, [r7, #20]
      }
 800de44:	4618      	mov	r0, r3
 800de46:	371c      	adds	r7, #28
 800de48:	46bd      	mov	sp, r7
 800de4a:	bd90      	pop	{r4, r7, pc}

0800de4c <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800de4c:	b580      	push	{r7, lr}
 800de4e:	b084      	sub	sp, #16
 800de50:	af00      	add	r7, sp, #0
 800de52:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800de54:	687a      	ldr	r2, [r7, #4]
 800de56:	f107 030c 	add.w	r3, r7, #12
 800de5a:	4611      	mov	r1, r2
 800de5c:	4618      	mov	r0, r3
 800de5e:	f7ff ff9e 	bl	800dd9e <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800de62:	68fb      	ldr	r3, [r7, #12]
 800de64:	4618      	mov	r0, r3
 800de66:	3710      	adds	r7, #16
 800de68:	46bd      	mov	sp, r7
 800de6a:	bd80      	pop	{r7, pc}

0800de6c <_ZN9__gnu_cxxmiIPP4BodySt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 800de6c:	b590      	push	{r4, r7, lr}
 800de6e:	b083      	sub	sp, #12
 800de70:	af00      	add	r7, sp, #0
 800de72:	6078      	str	r0, [r7, #4]
 800de74:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 800de76:	6878      	ldr	r0, [r7, #4]
 800de78:	f000 f835 	bl	800dee6 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 800de7c:	4603      	mov	r3, r0
 800de7e:	681c      	ldr	r4, [r3, #0]
 800de80:	6838      	ldr	r0, [r7, #0]
 800de82:	f000 f830 	bl	800dee6 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 800de86:	4603      	mov	r3, r0
 800de88:	681b      	ldr	r3, [r3, #0]
 800de8a:	1ae3      	subs	r3, r4, r3
 800de8c:	109b      	asrs	r3, r3, #2
 800de8e:	4618      	mov	r0, r3
 800de90:	370c      	adds	r7, #12
 800de92:	46bd      	mov	sp, r7
 800de94:	bd90      	pop	{r4, r7, pc}

0800de96 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800de96:	b580      	push	{r7, lr}
 800de98:	b082      	sub	sp, #8
 800de9a:	af00      	add	r7, sp, #0
 800de9c:	6078      	str	r0, [r7, #4]
 800de9e:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800dea0:	683b      	ldr	r3, [r7, #0]
 800dea2:	2b00      	cmp	r3, #0
 800dea4:	d006      	beq.n	800deb4 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x1e>
 800dea6:	687b      	ldr	r3, [r7, #4]
 800dea8:	6839      	ldr	r1, [r7, #0]
 800deaa:	4618      	mov	r0, r3
 800deac:	f000 fb2c 	bl	800e508 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>
 800deb0:	4603      	mov	r3, r0
 800deb2:	e000      	b.n	800deb6 <_ZNSt12_Vector_baseIP4BodySaIS1_EE11_M_allocateEj+0x20>
 800deb4:	2300      	movs	r3, #0
      }
 800deb6:	4618      	mov	r0, r3
 800deb8:	3708      	adds	r7, #8
 800deba:	46bd      	mov	sp, r7
 800debc:	bd80      	pop	{r7, pc}

0800debe <_ZNSt6vectorIP4BodySaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 800debe:	b590      	push	{r4, r7, lr}
 800dec0:	b089      	sub	sp, #36	; 0x24
 800dec2:	af02      	add	r7, sp, #8
 800dec4:	60f8      	str	r0, [r7, #12]
 800dec6:	60b9      	str	r1, [r7, #8]
 800dec8:	607a      	str	r2, [r7, #4]
 800deca:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 800decc:	f88d 4000 	strb.w	r4, [sp]
 800ded0:	683b      	ldr	r3, [r7, #0]
 800ded2:	687a      	ldr	r2, [r7, #4]
 800ded4:	68b9      	ldr	r1, [r7, #8]
 800ded6:	68f8      	ldr	r0, [r7, #12]
 800ded8:	f000 fb25 	bl	800e526 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 800dedc:	4603      	mov	r3, r0
      }
 800dede:	4618      	mov	r0, r3
 800dee0:	371c      	adds	r7, #28
 800dee2:	46bd      	mov	sp, r7
 800dee4:	bd90      	pop	{r4, r7, pc}

0800dee6 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800dee6:	b480      	push	{r7}
 800dee8:	b083      	sub	sp, #12
 800deea:	af00      	add	r7, sp, #0
 800deec:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800deee:	687b      	ldr	r3, [r7, #4]
 800def0:	4618      	mov	r0, r3
 800def2:	370c      	adds	r7, #12
 800def4:	46bd      	mov	sp, r7
 800def6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800defa:	4770      	bx	lr

0800defc <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 800defc:	b580      	push	{r7, lr}
 800defe:	b084      	sub	sp, #16
 800df00:	af00      	add	r7, sp, #0
 800df02:	6078      	str	r0, [r7, #4]
 800df04:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 800df06:	687b      	ldr	r3, [r7, #4]
 800df08:	681a      	ldr	r2, [r3, #0]
 800df0a:	683b      	ldr	r3, [r7, #0]
 800df0c:	009b      	lsls	r3, r3, #2
 800df0e:	425b      	negs	r3, r3
 800df10:	4413      	add	r3, r2
 800df12:	60fb      	str	r3, [r7, #12]
 800df14:	f107 020c 	add.w	r2, r7, #12
 800df18:	f107 0308 	add.w	r3, r7, #8
 800df1c:	4611      	mov	r1, r2
 800df1e:	4618      	mov	r0, r3
 800df20:	f7ff ff3d 	bl	800dd9e <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800df24:	68bb      	ldr	r3, [r7, #8]
 800df26:	4618      	mov	r0, r3
 800df28:	3710      	adds	r7, #16
 800df2a:	46bd      	mov	sp, r7
 800df2c:	bd80      	pop	{r7, pc}

0800df2e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800df2e:	b480      	push	{r7}
 800df30:	b083      	sub	sp, #12
 800df32:	af00      	add	r7, sp, #0
 800df34:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800df36:	687b      	ldr	r3, [r7, #4]
 800df38:	681b      	ldr	r3, [r3, #0]
 800df3a:	4618      	mov	r0, r3
 800df3c:	370c      	adds	r7, #12
 800df3e:	46bd      	mov	sp, r7
 800df40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df44:	4770      	bx	lr

0800df46 <_ZN9__gnu_cxx13new_allocatorIP4BodyE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800df46:	b580      	push	{r7, lr}
 800df48:	b084      	sub	sp, #16
 800df4a:	af00      	add	r7, sp, #0
 800df4c:	60f8      	str	r0, [r7, #12]
 800df4e:	60b9      	str	r1, [r7, #8]
 800df50:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800df52:	68b8      	ldr	r0, [r7, #8]
 800df54:	f012 f945 	bl	80201e2 <_ZdlPv>
      }
 800df58:	3710      	adds	r7, #16
 800df5a:	46bd      	mov	sp, r7
 800df5c:	bd80      	pop	{r7, pc}

0800df5e <_ZSt9addressofIP13Function_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 800df5e:	b580      	push	{r7, lr}
 800df60:	b082      	sub	sp, #8
 800df62:	af00      	add	r7, sp, #0
 800df64:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800df66:	6878      	ldr	r0, [r7, #4]
 800df68:	f7f8 fa20 	bl	80063ac <_ZSt11__addressofIP13Function_callEPT_RS2_>
 800df6c:	4603      	mov	r3, r0
 800df6e:	4618      	mov	r0, r3
 800df70:	3708      	adds	r7, #8
 800df72:	46bd      	mov	sp, r7
 800df74:	bd80      	pop	{r7, pc}

0800df76 <_ZSt9addressofIP11Method_callEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 800df76:	b580      	push	{r7, lr}
 800df78:	b082      	sub	sp, #8
 800df7a:	af00      	add	r7, sp, #0
 800df7c:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800df7e:	6878      	ldr	r0, [r7, #4]
 800df80:	f000 fae3 	bl	800e54a <_ZSt11__addressofIP11Method_callEPT_RS2_>
 800df84:	4603      	mov	r3, r0
 800df86:	4618      	mov	r0, r3
 800df88:	3708      	adds	r7, #8
 800df8a:	46bd      	mov	sp, r7
 800df8c:	bd80      	pop	{r7, pc}

0800df8e <_ZSt9addressofIP10AssignmentEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 800df8e:	b580      	push	{r7, lr}
 800df90:	b082      	sub	sp, #8
 800df92:	af00      	add	r7, sp, #0
 800df94:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800df96:	6878      	ldr	r0, [r7, #4]
 800df98:	f000 fae2 	bl	800e560 <_ZSt11__addressofIP10AssignmentEPT_RS2_>
 800df9c:	4603      	mov	r3, r0
 800df9e:	4618      	mov	r0, r3
 800dfa0:	3708      	adds	r7, #8
 800dfa2:	46bd      	mov	sp, r7
 800dfa4:	bd80      	pop	{r7, pc}

0800dfa6 <_ZSt9addressofIP15While_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 800dfa6:	b580      	push	{r7, lr}
 800dfa8:	b082      	sub	sp, #8
 800dfaa:	af00      	add	r7, sp, #0
 800dfac:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800dfae:	6878      	ldr	r0, [r7, #4]
 800dfb0:	f000 fae1 	bl	800e576 <_ZSt11__addressofIP15While_statementEPT_RS2_>
 800dfb4:	4603      	mov	r3, r0
 800dfb6:	4618      	mov	r0, r3
 800dfb8:	3708      	adds	r7, #8
 800dfba:	46bd      	mov	sp, r7
 800dfbc:	bd80      	pop	{r7, pc}

0800dfbe <_ZSt9addressofIP12If_statementEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 800dfbe:	b580      	push	{r7, lr}
 800dfc0:	b082      	sub	sp, #8
 800dfc2:	af00      	add	r7, sp, #0
 800dfc4:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800dfc6:	6878      	ldr	r0, [r7, #4]
 800dfc8:	f000 fae0 	bl	800e58c <_ZSt11__addressofIP12If_statementEPT_RS2_>
 800dfcc:	4603      	mov	r3, r0
 800dfce:	4618      	mov	r0, r3
 800dfd0:	3708      	adds	r7, #8
 800dfd2:	46bd      	mov	sp, r7
 800dfd4:	bd80      	pop	{r7, pc}

0800dfd6 <_ZN9__gnu_cxx13new_allocatorIP9StatementE10deallocateEPS2_j>:
      deallocate(pointer __p, size_type)
 800dfd6:	b580      	push	{r7, lr}
 800dfd8:	b084      	sub	sp, #16
 800dfda:	af00      	add	r7, sp, #0
 800dfdc:	60f8      	str	r0, [r7, #12]
 800dfde:	60b9      	str	r1, [r7, #8]
 800dfe0:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 800dfe2:	68b8      	ldr	r0, [r7, #8]
 800dfe4:	f012 f8fd 	bl	80201e2 <_ZdlPv>
      }
 800dfe8:	3710      	adds	r7, #16
 800dfea:	46bd      	mov	sp, r7
 800dfec:	bd80      	pop	{r7, pc}

0800dfee <_ZN9__gnu_cxx13new_allocatorIP9StatementE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 800dfee:	b590      	push	{r4, r7, lr}
 800dff0:	b085      	sub	sp, #20
 800dff2:	af00      	add	r7, sp, #0
 800dff4:	60f8      	str	r0, [r7, #12]
 800dff6:	60b9      	str	r1, [r7, #8]
 800dff8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 800dffa:	6878      	ldr	r0, [r7, #4]
 800dffc:	f7ff fc78 	bl	800d8f0 <_ZSt7forwardIP9StatementEOT_RNSt16remove_referenceIS2_E4typeE>
 800e000:	4603      	mov	r3, r0
 800e002:	681c      	ldr	r4, [r3, #0]
 800e004:	68bb      	ldr	r3, [r7, #8]
 800e006:	4619      	mov	r1, r3
 800e008:	2004      	movs	r0, #4
 800e00a:	f7f3 f80f 	bl	800102c <_ZnwjPv>
 800e00e:	4603      	mov	r3, r0
 800e010:	601c      	str	r4, [r3, #0]
 800e012:	bf00      	nop
 800e014:	3714      	adds	r7, #20
 800e016:	46bd      	mov	sp, r7
 800e018:	bd90      	pop	{r4, r7, pc}

0800e01a <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 800e01a:	b480      	push	{r7}
 800e01c:	b083      	sub	sp, #12
 800e01e:	af00      	add	r7, sp, #0
 800e020:	6078      	str	r0, [r7, #4]
 800e022:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 800e024:	683b      	ldr	r3, [r7, #0]
 800e026:	681a      	ldr	r2, [r3, #0]
 800e028:	687b      	ldr	r3, [r7, #4]
 800e02a:	601a      	str	r2, [r3, #0]
 800e02c:	687b      	ldr	r3, [r7, #4]
 800e02e:	4618      	mov	r0, r3
 800e030:	370c      	adds	r7, #12
 800e032:	46bd      	mov	sp, r7
 800e034:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e038:	4770      	bx	lr

0800e03a <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 800e03a:	b590      	push	{r4, r7, lr}
 800e03c:	b087      	sub	sp, #28
 800e03e:	af00      	add	r7, sp, #0
 800e040:	60f8      	str	r0, [r7, #12]
 800e042:	60b9      	str	r1, [r7, #8]
 800e044:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 800e046:	68f8      	ldr	r0, [r7, #12]
 800e048:	f000 faab 	bl	800e5a2 <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 800e04c:	4604      	mov	r4, r0
 800e04e:	68f8      	ldr	r0, [r7, #12]
 800e050:	f000 fab8 	bl	800e5c4 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 800e054:	4603      	mov	r3, r0
 800e056:	1ae2      	subs	r2, r4, r3
 800e058:	68bb      	ldr	r3, [r7, #8]
 800e05a:	429a      	cmp	r2, r3
 800e05c:	bf34      	ite	cc
 800e05e:	2301      	movcc	r3, #1
 800e060:	2300      	movcs	r3, #0
 800e062:	b2db      	uxtb	r3, r3
 800e064:	2b00      	cmp	r3, #0
 800e066:	d002      	beq.n	800e06e <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 800e068:	6878      	ldr	r0, [r7, #4]
 800e06a:	f012 f99b 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 800e06e:	68f8      	ldr	r0, [r7, #12]
 800e070:	f000 faa8 	bl	800e5c4 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 800e074:	4604      	mov	r4, r0
 800e076:	68f8      	ldr	r0, [r7, #12]
 800e078:	f000 faa4 	bl	800e5c4 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 800e07c:	4603      	mov	r3, r0
 800e07e:	613b      	str	r3, [r7, #16]
 800e080:	f107 0208 	add.w	r2, r7, #8
 800e084:	f107 0310 	add.w	r3, r7, #16
 800e088:	4611      	mov	r1, r2
 800e08a:	4618      	mov	r0, r3
 800e08c:	f000 f9f5 	bl	800e47a <_ZSt3maxIjERKT_S2_S2_>
 800e090:	4603      	mov	r3, r0
 800e092:	681b      	ldr	r3, [r3, #0]
 800e094:	4423      	add	r3, r4
 800e096:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 800e098:	68f8      	ldr	r0, [r7, #12]
 800e09a:	f000 fa93 	bl	800e5c4 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>
 800e09e:	4602      	mov	r2, r0
 800e0a0:	697b      	ldr	r3, [r7, #20]
 800e0a2:	4293      	cmp	r3, r2
 800e0a4:	d306      	bcc.n	800e0b4 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x7a>
 800e0a6:	68f8      	ldr	r0, [r7, #12]
 800e0a8:	f000 fa7b 	bl	800e5a2 <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 800e0ac:	4602      	mov	r2, r0
 800e0ae:	697b      	ldr	r3, [r7, #20]
 800e0b0:	4293      	cmp	r3, r2
 800e0b2:	d904      	bls.n	800e0be <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x84>
 800e0b4:	68f8      	ldr	r0, [r7, #12]
 800e0b6:	f000 fa74 	bl	800e5a2 <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>
 800e0ba:	4603      	mov	r3, r0
 800e0bc:	e000      	b.n	800e0c0 <_ZNKSt6vectorIP9StatementSaIS1_EE12_M_check_lenEjPKc+0x86>
 800e0be:	697b      	ldr	r3, [r7, #20]
      }
 800e0c0:	4618      	mov	r0, r3
 800e0c2:	371c      	adds	r7, #28
 800e0c4:	46bd      	mov	sp, r7
 800e0c6:	bd90      	pop	{r4, r7, pc}

0800e0c8 <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 800e0c8:	b580      	push	{r7, lr}
 800e0ca:	b084      	sub	sp, #16
 800e0cc:	af00      	add	r7, sp, #0
 800e0ce:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 800e0d0:	687a      	ldr	r2, [r7, #4]
 800e0d2:	f107 030c 	add.w	r3, r7, #12
 800e0d6:	4611      	mov	r1, r2
 800e0d8:	4618      	mov	r0, r3
 800e0da:	f7ff ff9e 	bl	800e01a <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800e0de:	68fb      	ldr	r3, [r7, #12]
 800e0e0:	4618      	mov	r0, r3
 800e0e2:	3710      	adds	r7, #16
 800e0e4:	46bd      	mov	sp, r7
 800e0e6:	bd80      	pop	{r7, pc}

0800e0e8 <_ZN9__gnu_cxxmiIPP9StatementSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 800e0e8:	b590      	push	{r4, r7, lr}
 800e0ea:	b083      	sub	sp, #12
 800e0ec:	af00      	add	r7, sp, #0
 800e0ee:	6078      	str	r0, [r7, #4]
 800e0f0:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 800e0f2:	6878      	ldr	r0, [r7, #4]
 800e0f4:	f000 f835 	bl	800e162 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 800e0f8:	4603      	mov	r3, r0
 800e0fa:	681c      	ldr	r4, [r3, #0]
 800e0fc:	6838      	ldr	r0, [r7, #0]
 800e0fe:	f000 f830 	bl	800e162 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 800e102:	4603      	mov	r3, r0
 800e104:	681b      	ldr	r3, [r3, #0]
 800e106:	1ae3      	subs	r3, r4, r3
 800e108:	109b      	asrs	r3, r3, #2
 800e10a:	4618      	mov	r0, r3
 800e10c:	370c      	adds	r7, #12
 800e10e:	46bd      	mov	sp, r7
 800e110:	bd90      	pop	{r4, r7, pc}

0800e112 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 800e112:	b580      	push	{r7, lr}
 800e114:	b082      	sub	sp, #8
 800e116:	af00      	add	r7, sp, #0
 800e118:	6078      	str	r0, [r7, #4]
 800e11a:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 800e11c:	683b      	ldr	r3, [r7, #0]
 800e11e:	2b00      	cmp	r3, #0
 800e120:	d006      	beq.n	800e130 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x1e>
 800e122:	687b      	ldr	r3, [r7, #4]
 800e124:	6839      	ldr	r1, [r7, #0]
 800e126:	4618      	mov	r0, r3
 800e128:	f000 fa5c 	bl	800e5e4 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>
 800e12c:	4603      	mov	r3, r0
 800e12e:	e000      	b.n	800e132 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE11_M_allocateEj+0x20>
 800e130:	2300      	movs	r3, #0
      }
 800e132:	4618      	mov	r0, r3
 800e134:	3708      	adds	r7, #8
 800e136:	46bd      	mov	sp, r7
 800e138:	bd80      	pop	{r7, pc}

0800e13a <_ZNSt6vectorIP9StatementSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 800e13a:	b590      	push	{r4, r7, lr}
 800e13c:	b089      	sub	sp, #36	; 0x24
 800e13e:	af02      	add	r7, sp, #8
 800e140:	60f8      	str	r0, [r7, #12]
 800e142:	60b9      	str	r1, [r7, #8]
 800e144:	607a      	str	r2, [r7, #4]
 800e146:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 800e148:	f88d 4000 	strb.w	r4, [sp]
 800e14c:	683b      	ldr	r3, [r7, #0]
 800e14e:	687a      	ldr	r2, [r7, #4]
 800e150:	68b9      	ldr	r1, [r7, #8]
 800e152:	68f8      	ldr	r0, [r7, #12]
 800e154:	f000 fa55 	bl	800e602 <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 800e158:	4603      	mov	r3, r0
      }
 800e15a:	4618      	mov	r0, r3
 800e15c:	371c      	adds	r7, #28
 800e15e:	46bd      	mov	sp, r7
 800e160:	bd90      	pop	{r4, r7, pc}

0800e162 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 800e162:	b480      	push	{r7}
 800e164:	b083      	sub	sp, #12
 800e166:	af00      	add	r7, sp, #0
 800e168:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 800e16a:	687b      	ldr	r3, [r7, #4]
 800e16c:	4618      	mov	r0, r3
 800e16e:	370c      	adds	r7, #12
 800e170:	46bd      	mov	sp, r7
 800e172:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e176:	4770      	bx	lr

0800e178 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 800e178:	b580      	push	{r7, lr}
 800e17a:	b084      	sub	sp, #16
 800e17c:	af00      	add	r7, sp, #0
 800e17e:	6078      	str	r0, [r7, #4]
 800e180:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 800e182:	687b      	ldr	r3, [r7, #4]
 800e184:	681a      	ldr	r2, [r3, #0]
 800e186:	683b      	ldr	r3, [r7, #0]
 800e188:	009b      	lsls	r3, r3, #2
 800e18a:	425b      	negs	r3, r3
 800e18c:	4413      	add	r3, r2
 800e18e:	60fb      	str	r3, [r7, #12]
 800e190:	f107 020c 	add.w	r2, r7, #12
 800e194:	f107 0308 	add.w	r3, r7, #8
 800e198:	4611      	mov	r1, r2
 800e19a:	4618      	mov	r0, r3
 800e19c:	f7ff ff3d 	bl	800e01a <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 800e1a0:	68bb      	ldr	r3, [r7, #8]
 800e1a2:	4618      	mov	r0, r3
 800e1a4:	3710      	adds	r7, #16
 800e1a6:	46bd      	mov	sp, r7
 800e1a8:	bd80      	pop	{r7, pc}

0800e1aa <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800e1aa:	b480      	push	{r7}
 800e1ac:	b083      	sub	sp, #12
 800e1ae:	af00      	add	r7, sp, #0
 800e1b0:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 800e1b2:	687b      	ldr	r3, [r7, #4]
 800e1b4:	681b      	ldr	r3, [r3, #0]
 800e1b6:	4618      	mov	r0, r3
 800e1b8:	370c      	adds	r7, #12
 800e1ba:	46bd      	mov	sp, r7
 800e1bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1c0:	4770      	bx	lr

0800e1c2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e1c2:	b5b0      	push	{r4, r5, r7, lr}
 800e1c4:	b084      	sub	sp, #16
 800e1c6:	af00      	add	r7, sp, #0
 800e1c8:	60f8      	str	r0, [r7, #12]
 800e1ca:	60b9      	str	r1, [r7, #8]
 800e1cc:	713a      	strb	r2, [r7, #4]
 800e1ce:	68fb      	ldr	r3, [r7, #12]
 800e1d0:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800e1d2:	7e1b      	ldrb	r3, [r3, #24]
 800e1d4:	461c      	mov	r4, r3
 800e1d6:	1d3b      	adds	r3, r7, #4
 800e1d8:	4618      	mov	r0, r3
 800e1da:	f000 f82a 	bl	800e232 <_ZNKSt17integral_constantIjLj0EEcvjEv>
 800e1de:	4603      	mov	r3, r0
 800e1e0:	429c      	cmp	r4, r3
 800e1e2:	bf0c      	ite	eq
 800e1e4:	2301      	moveq	r3, #1
 800e1e6:	2300      	movne	r3, #0
 800e1e8:	b2db      	uxtb	r3, r3
 800e1ea:	2b00      	cmp	r3, #0
 800e1ec:	d00e      	beq.n	800e20c <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x4a>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800e1ee:	68b8      	ldr	r0, [r7, #8]
 800e1f0:	f7f9 ffa4 	bl	800813c <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800e1f4:	4604      	mov	r4, r0
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e1f6:	68fb      	ldr	r3, [r7, #12]
 800e1f8:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800e1fa:	4618      	mov	r0, r3
 800e1fc:	f000 f824 	bl	800e248 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 800e200:	4603      	mov	r3, r0
 800e202:	4621      	mov	r1, r4
 800e204:	4618      	mov	r0, r3
 800e206:	f012 f9e2 	bl	80205ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
	    return {};
 800e20a:	e00d      	b.n	800e228 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRS7_St17integral_constantIjLj0EEEENS0_20__variant_idx_cookieESB_SC_+0x66>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e20c:	68fb      	ldr	r3, [r7, #12]
 800e20e:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800e210:	4618      	mov	r0, r3
 800e212:	f7fe fa2c 	bl	800c66e <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 800e216:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800e218:	68b8      	ldr	r0, [r7, #8]
 800e21a:	f7f9 ff8f 	bl	800813c <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 800e21e:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800e220:	4619      	mov	r1, r3
 800e222:	4620      	mov	r0, r4
 800e224:	f7fb fe65 	bl	8009ef2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj0EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 800e228:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e22a:	4618      	mov	r0, r3
 800e22c:	3710      	adds	r7, #16
 800e22e:	46bd      	mov	sp, r7
 800e230:	bdb0      	pop	{r4, r5, r7, pc}

0800e232 <_ZNKSt17integral_constantIjLj0EEcvjEv>:
    struct integral_constant
    {
      static constexpr _Tp                  value = __v;
      typedef _Tp                           value_type;
      typedef integral_constant<_Tp, __v>   type;
      constexpr operator value_type() const noexcept { return value; }
 800e232:	b480      	push	{r7}
 800e234:	b083      	sub	sp, #12
 800e236:	af00      	add	r7, sp, #0
 800e238:	6078      	str	r0, [r7, #4]
 800e23a:	2300      	movs	r3, #0
 800e23c:	4618      	mov	r0, r3
 800e23e:	370c      	adds	r7, #12
 800e240:	46bd      	mov	sp, r7
 800e242:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e246:	4770      	bx	lr

0800e248 <_ZNSt8__detail9__variant5__getILj0ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800e248:	b590      	push	{r4, r7, lr}
 800e24a:	b083      	sub	sp, #12
 800e24c:	af00      	add	r7, sp, #0
 800e24e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800e250:	6878      	ldr	r0, [r7, #4]
 800e252:	f000 f9e8 	bl	800e626 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800e256:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800e258:	4619      	mov	r1, r3
 800e25a:	4620      	mov	r0, r4
 800e25c:	f7f8 fe97 	bl	8006f8e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tILj0EEOT_>
 800e260:	4603      	mov	r3, r0
    }
 800e262:	4618      	mov	r0, r3
 800e264:	370c      	adds	r7, #12
 800e266:	46bd      	mov	sp, r7
 800e268:	bd90      	pop	{r4, r7, pc}

0800e26a <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e26a:	b5b0      	push	{r4, r5, r7, lr}
 800e26c:	b084      	sub	sp, #16
 800e26e:	af00      	add	r7, sp, #0
 800e270:	60f8      	str	r0, [r7, #12]
 800e272:	60b9      	str	r1, [r7, #8]
 800e274:	713a      	strb	r2, [r7, #4]
 800e276:	68fb      	ldr	r3, [r7, #12]
 800e278:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800e27a:	7e1b      	ldrb	r3, [r3, #24]
 800e27c:	461c      	mov	r4, r3
 800e27e:	1d3b      	adds	r3, r7, #4
 800e280:	4618      	mov	r0, r3
 800e282:	f000 f828 	bl	800e2d6 <_ZNKSt17integral_constantIjLj1EEcvjEv>
 800e286:	4603      	mov	r3, r0
 800e288:	429c      	cmp	r4, r3
 800e28a:	bf0c      	ite	eq
 800e28c:	2301      	moveq	r3, #1
 800e28e:	2300      	movne	r3, #0
 800e290:	b2db      	uxtb	r3, r3
 800e292:	2b00      	cmp	r3, #0
 800e294:	d00c      	beq.n	800e2b0 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800e296:	68b8      	ldr	r0, [r7, #8]
 800e298:	f000 f9d0 	bl	800e63c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800e29c:	4603      	mov	r3, r0
 800e29e:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e2a0:	68fb      	ldr	r3, [r7, #12]
 800e2a2:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800e2a4:	4618      	mov	r0, r3
 800e2a6:	f000 f821 	bl	800e2ec <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 800e2aa:	4603      	mov	r3, r0
 800e2ac:	601c      	str	r4, [r3, #0]
	    return {};
 800e2ae:	e00d      	b.n	800e2cc <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRiSt17integral_constantIjLj1EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e2b0:	68fb      	ldr	r3, [r7, #12]
 800e2b2:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800e2b4:	4618      	mov	r0, r3
 800e2b6:	f7fe f9da 	bl	800c66e <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 800e2ba:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800e2bc:	68b8      	ldr	r0, [r7, #8]
 800e2be:	f000 f9bd 	bl	800e63c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 800e2c2:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800e2c4:	4619      	mov	r1, r3
 800e2c6:	4620      	mov	r0, r4
 800e2c8:	f7fb fe2c 	bl	8009f24 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj1EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 800e2cc:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e2ce:	4618      	mov	r0, r3
 800e2d0:	3710      	adds	r7, #16
 800e2d2:	46bd      	mov	sp, r7
 800e2d4:	bdb0      	pop	{r4, r5, r7, pc}

0800e2d6 <_ZNKSt17integral_constantIjLj1EEcvjEv>:
 800e2d6:	b480      	push	{r7}
 800e2d8:	b083      	sub	sp, #12
 800e2da:	af00      	add	r7, sp, #0
 800e2dc:	6078      	str	r0, [r7, #4]
 800e2de:	2301      	movs	r3, #1
 800e2e0:	4618      	mov	r0, r3
 800e2e2:	370c      	adds	r7, #12
 800e2e4:	46bd      	mov	sp, r7
 800e2e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2ea:	4770      	bx	lr

0800e2ec <_ZNSt8__detail9__variant5__getILj1ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800e2ec:	b590      	push	{r4, r7, lr}
 800e2ee:	b083      	sub	sp, #12
 800e2f0:	af00      	add	r7, sp, #0
 800e2f2:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800e2f4:	6878      	ldr	r0, [r7, #4]
 800e2f6:	f000 f996 	bl	800e626 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800e2fa:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800e2fc:	4619      	mov	r1, r3
 800e2fe:	4620      	mov	r0, r4
 800e300:	f7f8 fdfa 	bl	8006ef8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800e304:	4603      	mov	r3, r0
    }
 800e306:	4618      	mov	r0, r3
 800e308:	370c      	adds	r7, #12
 800e30a:	46bd      	mov	sp, r7
 800e30c:	bd90      	pop	{r4, r7, pc}

0800e30e <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e30e:	b5b0      	push	{r4, r5, r7, lr}
 800e310:	b084      	sub	sp, #16
 800e312:	af00      	add	r7, sp, #0
 800e314:	60f8      	str	r0, [r7, #12]
 800e316:	60b9      	str	r1, [r7, #8]
 800e318:	713a      	strb	r2, [r7, #4]
 800e31a:	68fb      	ldr	r3, [r7, #12]
 800e31c:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800e31e:	7e1b      	ldrb	r3, [r3, #24]
 800e320:	461c      	mov	r4, r3
 800e322:	1d3b      	adds	r3, r7, #4
 800e324:	4618      	mov	r0, r3
 800e326:	f000 f828 	bl	800e37a <_ZNKSt17integral_constantIjLj2EEcvjEv>
 800e32a:	4603      	mov	r3, r0
 800e32c:	429c      	cmp	r4, r3
 800e32e:	bf0c      	ite	eq
 800e330:	2301      	moveq	r3, #1
 800e332:	2300      	movne	r3, #0
 800e334:	b2db      	uxtb	r3, r3
 800e336:	2b00      	cmp	r3, #0
 800e338:	d00c      	beq.n	800e354 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x46>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800e33a:	68b8      	ldr	r0, [r7, #8]
 800e33c:	f000 f989 	bl	800e652 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 800e340:	4603      	mov	r3, r0
 800e342:	681c      	ldr	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e344:	68fb      	ldr	r3, [r7, #12]
 800e346:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800e348:	4618      	mov	r0, r3
 800e34a:	f000 f821 	bl	800e390 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 800e34e:	4603      	mov	r3, r0
 800e350:	601c      	str	r4, [r3, #0]
	    return {};
 800e352:	e00d      	b.n	800e370 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRfSt17integral_constantIjLj2EEEENS0_20__variant_idx_cookieESB_SC_+0x62>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e354:	68fb      	ldr	r3, [r7, #12]
 800e356:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800e358:	4618      	mov	r0, r3
 800e35a:	f7fe f988 	bl	800c66e <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 800e35e:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800e360:	68b8      	ldr	r0, [r7, #8]
 800e362:	f000 f976 	bl	800e652 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 800e366:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800e368:	4619      	mov	r1, r3
 800e36a:	4620      	mov	r0, r4
 800e36c:	f7fb fe1b 	bl	8009fa6 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj2EJfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 800e370:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e372:	4618      	mov	r0, r3
 800e374:	3710      	adds	r7, #16
 800e376:	46bd      	mov	sp, r7
 800e378:	bdb0      	pop	{r4, r5, r7, pc}

0800e37a <_ZNKSt17integral_constantIjLj2EEcvjEv>:
 800e37a:	b480      	push	{r7}
 800e37c:	b083      	sub	sp, #12
 800e37e:	af00      	add	r7, sp, #0
 800e380:	6078      	str	r0, [r7, #4]
 800e382:	2302      	movs	r3, #2
 800e384:	4618      	mov	r0, r3
 800e386:	370c      	adds	r7, #12
 800e388:	46bd      	mov	sp, r7
 800e38a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e38e:	4770      	bx	lr

0800e390 <_ZNSt8__detail9__variant5__getILj2ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800e390:	b590      	push	{r4, r7, lr}
 800e392:	b083      	sub	sp, #12
 800e394:	af00      	add	r7, sp, #0
 800e396:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800e398:	6878      	ldr	r0, [r7, #4]
 800e39a:	f000 f944 	bl	800e626 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800e39e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800e3a0:	4619      	mov	r1, r3
 800e3a2:	4620      	mov	r0, r4
 800e3a4:	f7f8 fee4 	bl	8007170 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800e3a8:	4603      	mov	r3, r0
    }
 800e3aa:	4618      	mov	r0, r3
 800e3ac:	370c      	adds	r7, #12
 800e3ae:	46bd      	mov	sp, r7
 800e3b0:	bd90      	pop	{r4, r7, pc}

0800e3b2 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_>:
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e3b2:	b5b0      	push	{r4, r5, r7, lr}
 800e3b4:	b084      	sub	sp, #16
 800e3b6:	af00      	add	r7, sp, #0
 800e3b8:	60f8      	str	r0, [r7, #12]
 800e3ba:	60b9      	str	r1, [r7, #8]
 800e3bc:	713a      	strb	r2, [r7, #4]
 800e3be:	68fb      	ldr	r3, [r7, #12]
 800e3c0:	681b      	ldr	r3, [r3, #0]
		if (this->_M_index == __rhs_index)
 800e3c2:	7e1b      	ldrb	r3, [r3, #24]
 800e3c4:	461c      	mov	r4, r3
 800e3c6:	1d3b      	adds	r3, r7, #4
 800e3c8:	4618      	mov	r0, r3
 800e3ca:	f000 f829 	bl	800e420 <_ZNKSt17integral_constantIjLj3EEcvjEv>
 800e3ce:	4603      	mov	r3, r0
 800e3d0:	429c      	cmp	r4, r3
 800e3d2:	bf0c      	ite	eq
 800e3d4:	2301      	moveq	r3, #1
 800e3d6:	2300      	movne	r3, #0
 800e3d8:	b2db      	uxtb	r3, r3
 800e3da:	2b00      	cmp	r3, #0
 800e3dc:	d00d      	beq.n	800e3fa <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x48>
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800e3de:	68b8      	ldr	r0, [r7, #8]
 800e3e0:	f000 f942 	bl	800e668 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800e3e4:	4603      	mov	r3, r0
 800e3e6:	781c      	ldrb	r4, [r3, #0]
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e3e8:	68fb      	ldr	r3, [r7, #12]
 800e3ea:	681b      	ldr	r3, [r3, #0]
		  __variant::__get<__rhs_index>(*this) = std::move(__rhs_mem);
 800e3ec:	4618      	mov	r0, r3
 800e3ee:	f000 f822 	bl	800e436 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>
 800e3f2:	4603      	mov	r3, r0
 800e3f4:	4622      	mov	r2, r4
 800e3f6:	701a      	strb	r2, [r3, #0]
	    return {};
 800e3f8:	e00d      	b.n	800e416 <_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEaSEOS8_ENUlOT_T0_E_clIRbSt17integral_constantIjLj3EEEENS0_20__variant_idx_cookieESB_SC_+0x64>
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e3fa:	68fb      	ldr	r3, [r7, #12]
 800e3fc:	681b      	ldr	r3, [r3, #0]
		  __variant_cast<_Types...>(*this)
 800e3fe:	4618      	mov	r0, r3
 800e400:	f7fe f935 	bl	800c66e <_ZSt14__variant_castIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbERNSt8__detail9__variant17_Move_assign_baseILb0EJS5_ifbEEEEDcOT0_>
 800e404:	4604      	mov	r4, r0
		    .template emplace<__rhs_index>(std::move(__rhs_mem));
 800e406:	68b8      	ldr	r0, [r7, #8]
 800e408:	f000 f92e 	bl	800e668 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 800e40c:	4603      	mov	r3, r0
		  __variant_cast<_Types...>(*this)
 800e40e:	4619      	mov	r1, r3
 800e410:	4620      	mov	r0, r4
 800e412:	f000 f934 	bl	800e67e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>
	    return {};
 800e416:	462b      	mov	r3, r5
	__do_visit<__visit_with_index>([this](auto&& __rhs_mem,
 800e418:	4618      	mov	r0, r3
 800e41a:	3710      	adds	r7, #16
 800e41c:	46bd      	mov	sp, r7
 800e41e:	bdb0      	pop	{r4, r5, r7, pc}

0800e420 <_ZNKSt17integral_constantIjLj3EEcvjEv>:
 800e420:	b480      	push	{r7}
 800e422:	b083      	sub	sp, #12
 800e424:	af00      	add	r7, sp, #0
 800e426:	6078      	str	r0, [r7, #4]
 800e428:	2303      	movs	r3, #3
 800e42a:	4618      	mov	r0, r3
 800e42c:	370c      	adds	r7, #12
 800e42e:	46bd      	mov	sp, r7
 800e430:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e434:	4770      	bx	lr

0800e436 <_ZNSt8__detail9__variant5__getILj3ERNS0_17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 800e436:	b590      	push	{r4, r7, lr}
 800e438:	b083      	sub	sp, #12
 800e43a:	af00      	add	r7, sp, #0
 800e43c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 800e43e:	6878      	ldr	r0, [r7, #4]
 800e440:	f000 f8f1 	bl	800e626 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>
 800e444:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 800e446:	4619      	mov	r1, r3
 800e448:	4620      	mov	r0, r4
 800e44a:	f7f8 ff3f 	bl	80072cc <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 800e44e:	4603      	mov	r3, r0
    }
 800e450:	4618      	mov	r0, r3
 800e452:	370c      	adds	r7, #12
 800e454:	46bd      	mov	sp, r7
 800e456:	bd90      	pop	{r4, r7, pc}

0800e458 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 800e458:	b580      	push	{r7, lr}
 800e45a:	b082      	sub	sp, #8
 800e45c:	af00      	add	r7, sp, #0
 800e45e:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 800e460:	687b      	ldr	r3, [r7, #4]
 800e462:	4618      	mov	r0, r3
 800e464:	f7f9 fdc8 	bl	8007ff8 <_ZNKSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 800e468:	4603      	mov	r3, r0
 800e46a:	4618      	mov	r0, r3
 800e46c:	f000 f920 	bl	800e6b0 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>
 800e470:	4603      	mov	r3, r0
 800e472:	4618      	mov	r0, r3
 800e474:	3708      	adds	r7, #8
 800e476:	46bd      	mov	sp, r7
 800e478:	bd80      	pop	{r7, pc}

0800e47a <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
 800e47a:	b480      	push	{r7}
 800e47c:	b083      	sub	sp, #12
 800e47e:	af00      	add	r7, sp, #0
 800e480:	6078      	str	r0, [r7, #4]
 800e482:	6039      	str	r1, [r7, #0]
      if (__a < __b)
 800e484:	687b      	ldr	r3, [r7, #4]
 800e486:	681a      	ldr	r2, [r3, #0]
 800e488:	683b      	ldr	r3, [r7, #0]
 800e48a:	681b      	ldr	r3, [r3, #0]
 800e48c:	429a      	cmp	r2, r3
 800e48e:	d201      	bcs.n	800e494 <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 800e490:	683b      	ldr	r3, [r7, #0]
 800e492:	e000      	b.n	800e496 <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 800e494:	687b      	ldr	r3, [r7, #4]
    }
 800e496:	4618      	mov	r0, r3
 800e498:	370c      	adds	r7, #12
 800e49a:	46bd      	mov	sp, r7
 800e49c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4a0:	4770      	bx	lr

0800e4a2 <_ZNSt6vectorIP10ExpressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 800e4a2:	b580      	push	{r7, lr}
 800e4a4:	b084      	sub	sp, #16
 800e4a6:	af00      	add	r7, sp, #0
 800e4a8:	60f8      	str	r0, [r7, #12]
 800e4aa:	60b9      	str	r1, [r7, #8]
 800e4ac:	607a      	str	r2, [r7, #4]
 800e4ae:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 800e4b0:	683b      	ldr	r3, [r7, #0]
 800e4b2:	687a      	ldr	r2, [r7, #4]
 800e4b4:	68b9      	ldr	r1, [r7, #8]
 800e4b6:	68f8      	ldr	r0, [r7, #12]
 800e4b8:	f000 f914 	bl	800e6e4 <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 800e4bc:	4603      	mov	r3, r0
      }
 800e4be:	4618      	mov	r0, r3
 800e4c0:	3710      	adds	r7, #16
 800e4c2:	46bd      	mov	sp, r7
 800e4c4:	bd80      	pop	{r7, pc}

0800e4c6 <_ZNKSt6vectorIP4BodySaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 800e4c6:	b580      	push	{r7, lr}
 800e4c8:	b082      	sub	sp, #8
 800e4ca:	af00      	add	r7, sp, #0
 800e4cc:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 800e4ce:	687b      	ldr	r3, [r7, #4]
 800e4d0:	4618      	mov	r0, r3
 800e4d2:	f000 f93e 	bl	800e752 <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 800e4d6:	4603      	mov	r3, r0
 800e4d8:	4618      	mov	r0, r3
 800e4da:	f000 f920 	bl	800e71e <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>
 800e4de:	4603      	mov	r3, r0
 800e4e0:	4618      	mov	r0, r3
 800e4e2:	3708      	adds	r7, #8
 800e4e4:	46bd      	mov	sp, r7
 800e4e6:	bd80      	pop	{r7, pc}

0800e4e8 <_ZNKSt6vectorIP4BodySaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800e4e8:	b480      	push	{r7}
 800e4ea:	b083      	sub	sp, #12
 800e4ec:	af00      	add	r7, sp, #0
 800e4ee:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800e4f0:	687b      	ldr	r3, [r7, #4]
 800e4f2:	685a      	ldr	r2, [r3, #4]
 800e4f4:	687b      	ldr	r3, [r7, #4]
 800e4f6:	681b      	ldr	r3, [r3, #0]
 800e4f8:	1ad3      	subs	r3, r2, r3
 800e4fa:	109b      	asrs	r3, r3, #2
 800e4fc:	4618      	mov	r0, r3
 800e4fe:	370c      	adds	r7, #12
 800e500:	46bd      	mov	sp, r7
 800e502:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e506:	4770      	bx	lr

0800e508 <_ZNSt16allocator_traitsISaIP4BodyEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 800e508:	b580      	push	{r7, lr}
 800e50a:	b082      	sub	sp, #8
 800e50c:	af00      	add	r7, sp, #0
 800e50e:	6078      	str	r0, [r7, #4]
 800e510:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800e512:	2200      	movs	r2, #0
 800e514:	6839      	ldr	r1, [r7, #0]
 800e516:	6878      	ldr	r0, [r7, #4]
 800e518:	f000 f926 	bl	800e768 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>
 800e51c:	4603      	mov	r3, r0
 800e51e:	4618      	mov	r0, r3
 800e520:	3708      	adds	r7, #8
 800e522:	46bd      	mov	sp, r7
 800e524:	bd80      	pop	{r7, pc}

0800e526 <_ZNSt6vectorIP4BodySaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 800e526:	b580      	push	{r7, lr}
 800e528:	b084      	sub	sp, #16
 800e52a:	af00      	add	r7, sp, #0
 800e52c:	60f8      	str	r0, [r7, #12]
 800e52e:	60b9      	str	r1, [r7, #8]
 800e530:	607a      	str	r2, [r7, #4]
 800e532:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 800e534:	683b      	ldr	r3, [r7, #0]
 800e536:	687a      	ldr	r2, [r7, #4]
 800e538:	68b9      	ldr	r1, [r7, #8]
 800e53a:	68f8      	ldr	r0, [r7, #12]
 800e53c:	f000 f933 	bl	800e7a6 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>
 800e540:	4603      	mov	r3, r0
      }
 800e542:	4618      	mov	r0, r3
 800e544:	3710      	adds	r7, #16
 800e546:	46bd      	mov	sp, r7
 800e548:	bd80      	pop	{r7, pc}

0800e54a <_ZSt11__addressofIP11Method_callEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800e54a:	b480      	push	{r7}
 800e54c:	b083      	sub	sp, #12
 800e54e:	af00      	add	r7, sp, #0
 800e550:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800e552:	687b      	ldr	r3, [r7, #4]
 800e554:	4618      	mov	r0, r3
 800e556:	370c      	adds	r7, #12
 800e558:	46bd      	mov	sp, r7
 800e55a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e55e:	4770      	bx	lr

0800e560 <_ZSt11__addressofIP10AssignmentEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800e560:	b480      	push	{r7}
 800e562:	b083      	sub	sp, #12
 800e564:	af00      	add	r7, sp, #0
 800e566:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800e568:	687b      	ldr	r3, [r7, #4]
 800e56a:	4618      	mov	r0, r3
 800e56c:	370c      	adds	r7, #12
 800e56e:	46bd      	mov	sp, r7
 800e570:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e574:	4770      	bx	lr

0800e576 <_ZSt11__addressofIP15While_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800e576:	b480      	push	{r7}
 800e578:	b083      	sub	sp, #12
 800e57a:	af00      	add	r7, sp, #0
 800e57c:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800e57e:	687b      	ldr	r3, [r7, #4]
 800e580:	4618      	mov	r0, r3
 800e582:	370c      	adds	r7, #12
 800e584:	46bd      	mov	sp, r7
 800e586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e58a:	4770      	bx	lr

0800e58c <_ZSt11__addressofIP12If_statementEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 800e58c:	b480      	push	{r7}
 800e58e:	b083      	sub	sp, #12
 800e590:	af00      	add	r7, sp, #0
 800e592:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 800e594:	687b      	ldr	r3, [r7, #4]
 800e596:	4618      	mov	r0, r3
 800e598:	370c      	adds	r7, #12
 800e59a:	46bd      	mov	sp, r7
 800e59c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5a0:	4770      	bx	lr

0800e5a2 <_ZNKSt6vectorIP9StatementSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 800e5a2:	b580      	push	{r7, lr}
 800e5a4:	b082      	sub	sp, #8
 800e5a6:	af00      	add	r7, sp, #0
 800e5a8:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 800e5aa:	687b      	ldr	r3, [r7, #4]
 800e5ac:	4618      	mov	r0, r3
 800e5ae:	f000 f931 	bl	800e814 <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 800e5b2:	4603      	mov	r3, r0
 800e5b4:	4618      	mov	r0, r3
 800e5b6:	f000 f913 	bl	800e7e0 <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>
 800e5ba:	4603      	mov	r3, r0
 800e5bc:	4618      	mov	r0, r3
 800e5be:	3708      	adds	r7, #8
 800e5c0:	46bd      	mov	sp, r7
 800e5c2:	bd80      	pop	{r7, pc}

0800e5c4 <_ZNKSt6vectorIP9StatementSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 800e5c4:	b480      	push	{r7}
 800e5c6:	b083      	sub	sp, #12
 800e5c8:	af00      	add	r7, sp, #0
 800e5ca:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 800e5cc:	687b      	ldr	r3, [r7, #4]
 800e5ce:	685a      	ldr	r2, [r3, #4]
 800e5d0:	687b      	ldr	r3, [r7, #4]
 800e5d2:	681b      	ldr	r3, [r3, #0]
 800e5d4:	1ad3      	subs	r3, r2, r3
 800e5d6:	109b      	asrs	r3, r3, #2
 800e5d8:	4618      	mov	r0, r3
 800e5da:	370c      	adds	r7, #12
 800e5dc:	46bd      	mov	sp, r7
 800e5de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5e2:	4770      	bx	lr

0800e5e4 <_ZNSt16allocator_traitsISaIP9StatementEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 800e5e4:	b580      	push	{r7, lr}
 800e5e6:	b082      	sub	sp, #8
 800e5e8:	af00      	add	r7, sp, #0
 800e5ea:	6078      	str	r0, [r7, #4]
 800e5ec:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 800e5ee:	2200      	movs	r2, #0
 800e5f0:	6839      	ldr	r1, [r7, #0]
 800e5f2:	6878      	ldr	r0, [r7, #4]
 800e5f4:	f000 f919 	bl	800e82a <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>
 800e5f8:	4603      	mov	r3, r0
 800e5fa:	4618      	mov	r0, r3
 800e5fc:	3708      	adds	r7, #8
 800e5fe:	46bd      	mov	sp, r7
 800e600:	bd80      	pop	{r7, pc}

0800e602 <_ZNSt6vectorIP9StatementSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 800e602:	b580      	push	{r7, lr}
 800e604:	b084      	sub	sp, #16
 800e606:	af00      	add	r7, sp, #0
 800e608:	60f8      	str	r0, [r7, #12]
 800e60a:	60b9      	str	r1, [r7, #8]
 800e60c:	607a      	str	r2, [r7, #4]
 800e60e:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 800e610:	683b      	ldr	r3, [r7, #0]
 800e612:	687a      	ldr	r2, [r7, #4]
 800e614:	68b9      	ldr	r1, [r7, #8]
 800e616:	68f8      	ldr	r0, [r7, #12]
 800e618:	f000 f926 	bl	800e868 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>
 800e61c:	4603      	mov	r3, r0
      }
 800e61e:	4618      	mov	r0, r3
 800e620:	3710      	adds	r7, #16
 800e622:	46bd      	mov	sp, r7
 800e624:	bd80      	pop	{r7, pc}

0800e626 <_ZSt7forwardIRNSt8__detail9__variant17_Move_assign_baseILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800e626:	b480      	push	{r7}
 800e628:	b083      	sub	sp, #12
 800e62a:	af00      	add	r7, sp, #0
 800e62c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800e62e:	687b      	ldr	r3, [r7, #4]
 800e630:	4618      	mov	r0, r3
 800e632:	370c      	adds	r7, #12
 800e634:	46bd      	mov	sp, r7
 800e636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e63a:	4770      	bx	lr

0800e63c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 800e63c:	b480      	push	{r7}
 800e63e:	b083      	sub	sp, #12
 800e640:	af00      	add	r7, sp, #0
 800e642:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800e644:	687b      	ldr	r3, [r7, #4]
 800e646:	4618      	mov	r0, r3
 800e648:	370c      	adds	r7, #12
 800e64a:	46bd      	mov	sp, r7
 800e64c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e650:	4770      	bx	lr

0800e652 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 800e652:	b480      	push	{r7}
 800e654:	b083      	sub	sp, #12
 800e656:	af00      	add	r7, sp, #0
 800e658:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800e65a:	687b      	ldr	r3, [r7, #4]
 800e65c:	4618      	mov	r0, r3
 800e65e:	370c      	adds	r7, #12
 800e660:	46bd      	mov	sp, r7
 800e662:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e666:	4770      	bx	lr

0800e668 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
 800e668:	b480      	push	{r7}
 800e66a:	b083      	sub	sp, #12
 800e66c:	af00      	add	r7, sp, #0
 800e66e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800e670:	687b      	ldr	r3, [r7, #4]
 800e672:	4618      	mov	r0, r3
 800e674:	370c      	adds	r7, #12
 800e676:	46bd      	mov	sp, r7
 800e678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e67c:	4770      	bx	lr

0800e67e <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE7emplaceILj3EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES6_E4typeEDpT0_EERSB_E4typeEDpOSC_>:
	emplace(_Args&&... __args)
 800e67e:	b580      	push	{r7, lr}
 800e680:	b082      	sub	sp, #8
 800e682:	af00      	add	r7, sp, #0
 800e684:	6078      	str	r0, [r7, #4]
 800e686:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 800e688:	687b      	ldr	r3, [r7, #4]
 800e68a:	4618      	mov	r0, r3
 800e68c:	f7f8 fc02 	bl	8006e94 <_ZNSt8__detail9__variant16_Variant_storageILb0EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 800e690:	6838      	ldr	r0, [r7, #0]
 800e692:	f000 f906 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800e696:	4603      	mov	r3, r0
 800e698:	4619      	mov	r1, r3
 800e69a:	6878      	ldr	r0, [r7, #4]
 800e69c:	f000 f90c 	bl	800e8b8 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 800e6a0:	6878      	ldr	r0, [r7, #4]
 800e6a2:	f000 f929 	bl	800e8f8 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 800e6a6:	4603      	mov	r3, r0
	}
 800e6a8:	4618      	mov	r0, r3
 800e6aa:	3708      	adds	r7, #8
 800e6ac:	46bd      	mov	sp, r7
 800e6ae:	bd80      	pop	{r7, pc}

0800e6b0 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>:
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
      }

      static size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 800e6b0:	b580      	push	{r7, lr}
 800e6b2:	b084      	sub	sp, #16
 800e6b4:	af00      	add	r7, sp, #0
 800e6b6:	6078      	str	r0, [r7, #4]
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
 800e6b8:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800e6bc:	60fb      	str	r3, [r7, #12]
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 800e6be:	6878      	ldr	r0, [r7, #4]
 800e6c0:	f000 f94a 	bl	800e958 <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>
 800e6c4:	4603      	mov	r3, r0
 800e6c6:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 800e6c8:	f107 0208 	add.w	r2, r7, #8
 800e6cc:	f107 030c 	add.w	r3, r7, #12
 800e6d0:	4611      	mov	r1, r2
 800e6d2:	4618      	mov	r0, r3
 800e6d4:	f000 f92c 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 800e6d8:	4603      	mov	r3, r0
 800e6da:	681b      	ldr	r3, [r3, #0]
      }
 800e6dc:	4618      	mov	r0, r3
 800e6de:	3710      	adds	r7, #16
 800e6e0:	46bd      	mov	sp, r7
 800e6e2:	bd80      	pop	{r7, pc}

0800e6e4 <_ZSt12__relocate_aIPP10ExpressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    }

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
 800e6e4:	b5b0      	push	{r4, r5, r7, lr}
 800e6e6:	b084      	sub	sp, #16
 800e6e8:	af00      	add	r7, sp, #0
 800e6ea:	60f8      	str	r0, [r7, #12]
 800e6ec:	60b9      	str	r1, [r7, #8]
 800e6ee:	607a      	str	r2, [r7, #4]
 800e6f0:	603b      	str	r3, [r7, #0]
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return __relocate_a_1(std::__niter_base(__first),
 800e6f2:	68f8      	ldr	r0, [r7, #12]
 800e6f4:	f7fa f8e1 	bl	80088ba <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 800e6f8:	4604      	mov	r4, r0
 800e6fa:	68b8      	ldr	r0, [r7, #8]
 800e6fc:	f7fa f8dd 	bl	80088ba <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 800e700:	4605      	mov	r5, r0
 800e702:	6878      	ldr	r0, [r7, #4]
 800e704:	f7fa f8d9 	bl	80088ba <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 800e708:	4602      	mov	r2, r0
 800e70a:	683b      	ldr	r3, [r7, #0]
 800e70c:	4629      	mov	r1, r5
 800e70e:	4620      	mov	r0, r4
 800e710:	f000 f92e 	bl	800e970 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 800e714:	4603      	mov	r3, r0
			    std::__niter_base(__last),
			    std::__niter_base(__result), __alloc);
    }
 800e716:	4618      	mov	r0, r3
 800e718:	3710      	adds	r7, #16
 800e71a:	46bd      	mov	sp, r7
 800e71c:	bdb0      	pop	{r4, r5, r7, pc}

0800e71e <_ZNSt6vectorIP4BodySaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 800e71e:	b580      	push	{r7, lr}
 800e720:	b084      	sub	sp, #16
 800e722:	af00      	add	r7, sp, #0
 800e724:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 800e726:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800e72a:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 800e72c:	6878      	ldr	r0, [r7, #4]
 800e72e:	f000 f93d 	bl	800e9ac <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>
 800e732:	4603      	mov	r3, r0
 800e734:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 800e736:	f107 0208 	add.w	r2, r7, #8
 800e73a:	f107 030c 	add.w	r3, r7, #12
 800e73e:	4611      	mov	r1, r2
 800e740:	4618      	mov	r0, r3
 800e742:	f000 f8f5 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 800e746:	4603      	mov	r3, r0
 800e748:	681b      	ldr	r3, [r3, #0]
      }
 800e74a:	4618      	mov	r0, r3
 800e74c:	3710      	adds	r7, #16
 800e74e:	46bd      	mov	sp, r7
 800e750:	bd80      	pop	{r7, pc}

0800e752 <_ZNKSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800e752:	b480      	push	{r7}
 800e754:	b083      	sub	sp, #12
 800e756:	af00      	add	r7, sp, #0
 800e758:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e75a:	687b      	ldr	r3, [r7, #4]
 800e75c:	4618      	mov	r0, r3
 800e75e:	370c      	adds	r7, #12
 800e760:	46bd      	mov	sp, r7
 800e762:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e766:	4770      	bx	lr

0800e768 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 800e768:	b580      	push	{r7, lr}
 800e76a:	b084      	sub	sp, #16
 800e76c:	af00      	add	r7, sp, #0
 800e76e:	60f8      	str	r0, [r7, #12]
 800e770:	60b9      	str	r1, [r7, #8]
 800e772:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800e774:	68f8      	ldr	r0, [r7, #12]
 800e776:	f000 f925 	bl	800e9c4 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 800e77a:	4602      	mov	r2, r0
 800e77c:	68bb      	ldr	r3, [r7, #8]
 800e77e:	4293      	cmp	r3, r2
 800e780:	bf8c      	ite	hi
 800e782:	2301      	movhi	r3, #1
 800e784:	2300      	movls	r3, #0
 800e786:	b2db      	uxtb	r3, r3
 800e788:	2b00      	cmp	r3, #0
 800e78a:	d001      	beq.n	800e790 <_ZN9__gnu_cxx13new_allocatorIP4BodyE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800e78c:	f011 fe01 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800e790:	68bb      	ldr	r3, [r7, #8]
 800e792:	009b      	lsls	r3, r3, #2
 800e794:	4618      	mov	r0, r3
 800e796:	f011 fd37 	bl	8020208 <_Znwj>
 800e79a:	4603      	mov	r3, r0
 800e79c:	bf00      	nop
      }
 800e79e:	4618      	mov	r0, r3
 800e7a0:	3710      	adds	r7, #16
 800e7a2:	46bd      	mov	sp, r7
 800e7a4:	bd80      	pop	{r7, pc}

0800e7a6 <_ZSt12__relocate_aIPP4BodyS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 800e7a6:	b5b0      	push	{r4, r5, r7, lr}
 800e7a8:	b084      	sub	sp, #16
 800e7aa:	af00      	add	r7, sp, #0
 800e7ac:	60f8      	str	r0, [r7, #12]
 800e7ae:	60b9      	str	r1, [r7, #8]
 800e7b0:	607a      	str	r2, [r7, #4]
 800e7b2:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 800e7b4:	68f8      	ldr	r0, [r7, #12]
 800e7b6:	f000 f911 	bl	800e9dc <_ZSt12__niter_baseIPP4BodyET_S3_>
 800e7ba:	4604      	mov	r4, r0
 800e7bc:	68b8      	ldr	r0, [r7, #8]
 800e7be:	f000 f90d 	bl	800e9dc <_ZSt12__niter_baseIPP4BodyET_S3_>
 800e7c2:	4605      	mov	r5, r0
 800e7c4:	6878      	ldr	r0, [r7, #4]
 800e7c6:	f000 f909 	bl	800e9dc <_ZSt12__niter_baseIPP4BodyET_S3_>
 800e7ca:	4602      	mov	r2, r0
 800e7cc:	683b      	ldr	r3, [r7, #0]
 800e7ce:	4629      	mov	r1, r5
 800e7d0:	4620      	mov	r0, r4
 800e7d2:	f000 f90e 	bl	800e9f2 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 800e7d6:	4603      	mov	r3, r0
    }
 800e7d8:	4618      	mov	r0, r3
 800e7da:	3710      	adds	r7, #16
 800e7dc:	46bd      	mov	sp, r7
 800e7de:	bdb0      	pop	{r4, r5, r7, pc}

0800e7e0 <_ZNSt6vectorIP9StatementSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 800e7e0:	b580      	push	{r7, lr}
 800e7e2:	b084      	sub	sp, #16
 800e7e4:	af00      	add	r7, sp, #0
 800e7e6:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 800e7e8:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800e7ec:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 800e7ee:	6878      	ldr	r0, [r7, #4]
 800e7f0:	f000 f91d 	bl	800ea2e <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>
 800e7f4:	4603      	mov	r3, r0
 800e7f6:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 800e7f8:	f107 0208 	add.w	r2, r7, #8
 800e7fc:	f107 030c 	add.w	r3, r7, #12
 800e800:	4611      	mov	r1, r2
 800e802:	4618      	mov	r0, r3
 800e804:	f000 f894 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 800e808:	4603      	mov	r3, r0
 800e80a:	681b      	ldr	r3, [r3, #0]
      }
 800e80c:	4618      	mov	r0, r3
 800e80e:	3710      	adds	r7, #16
 800e810:	46bd      	mov	sp, r7
 800e812:	bd80      	pop	{r7, pc}

0800e814 <_ZNKSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 800e814:	b480      	push	{r7}
 800e816:	b083      	sub	sp, #12
 800e818:	af00      	add	r7, sp, #0
 800e81a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800e81c:	687b      	ldr	r3, [r7, #4]
 800e81e:	4618      	mov	r0, r3
 800e820:	370c      	adds	r7, #12
 800e822:	46bd      	mov	sp, r7
 800e824:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e828:	4770      	bx	lr

0800e82a <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 800e82a:	b580      	push	{r7, lr}
 800e82c:	b084      	sub	sp, #16
 800e82e:	af00      	add	r7, sp, #0
 800e830:	60f8      	str	r0, [r7, #12]
 800e832:	60b9      	str	r1, [r7, #8]
 800e834:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 800e836:	68f8      	ldr	r0, [r7, #12]
 800e838:	f000 f905 	bl	800ea46 <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 800e83c:	4602      	mov	r2, r0
 800e83e:	68bb      	ldr	r3, [r7, #8]
 800e840:	4293      	cmp	r3, r2
 800e842:	bf8c      	ite	hi
 800e844:	2301      	movhi	r3, #1
 800e846:	2300      	movls	r3, #0
 800e848:	b2db      	uxtb	r3, r3
 800e84a:	2b00      	cmp	r3, #0
 800e84c:	d001      	beq.n	800e852 <_ZN9__gnu_cxx13new_allocatorIP9StatementE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 800e84e:	f011 fda0 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 800e852:	68bb      	ldr	r3, [r7, #8]
 800e854:	009b      	lsls	r3, r3, #2
 800e856:	4618      	mov	r0, r3
 800e858:	f011 fcd6 	bl	8020208 <_Znwj>
 800e85c:	4603      	mov	r3, r0
 800e85e:	bf00      	nop
      }
 800e860:	4618      	mov	r0, r3
 800e862:	3710      	adds	r7, #16
 800e864:	46bd      	mov	sp, r7
 800e866:	bd80      	pop	{r7, pc}

0800e868 <_ZSt12__relocate_aIPP9StatementS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 800e868:	b5b0      	push	{r4, r5, r7, lr}
 800e86a:	b084      	sub	sp, #16
 800e86c:	af00      	add	r7, sp, #0
 800e86e:	60f8      	str	r0, [r7, #12]
 800e870:	60b9      	str	r1, [r7, #8]
 800e872:	607a      	str	r2, [r7, #4]
 800e874:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 800e876:	68f8      	ldr	r0, [r7, #12]
 800e878:	f000 f8f1 	bl	800ea5e <_ZSt12__niter_baseIPP9StatementET_S3_>
 800e87c:	4604      	mov	r4, r0
 800e87e:	68b8      	ldr	r0, [r7, #8]
 800e880:	f000 f8ed 	bl	800ea5e <_ZSt12__niter_baseIPP9StatementET_S3_>
 800e884:	4605      	mov	r5, r0
 800e886:	6878      	ldr	r0, [r7, #4]
 800e888:	f000 f8e9 	bl	800ea5e <_ZSt12__niter_baseIPP9StatementET_S3_>
 800e88c:	4602      	mov	r2, r0
 800e88e:	683b      	ldr	r3, [r7, #0]
 800e890:	4629      	mov	r1, r5
 800e892:	4620      	mov	r0, r4
 800e894:	f000 f8ee 	bl	800ea74 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 800e898:	4603      	mov	r3, r0
    }
 800e89a:	4618      	mov	r0, r3
 800e89c:	3710      	adds	r7, #16
 800e89e:	46bd      	mov	sp, r7
 800e8a0:	bdb0      	pop	{r4, r5, r7, pc}

0800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800e8a2:	b480      	push	{r7}
 800e8a4:	b083      	sub	sp, #12
 800e8a6:	af00      	add	r7, sp, #0
 800e8a8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800e8aa:	687b      	ldr	r3, [r7, #4]
 800e8ac:	4618      	mov	r0, r3
 800e8ae:	370c      	adds	r7, #12
 800e8b0:	46bd      	mov	sp, r7
 800e8b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8b6:	4770      	bx	lr

0800e8b8 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 800e8b8:	b590      	push	{r4, r7, lr}
 800e8ba:	b085      	sub	sp, #20
 800e8bc:	af00      	add	r7, sp, #0
 800e8be:	6078      	str	r0, [r7, #4]
 800e8c0:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 800e8c2:	687b      	ldr	r3, [r7, #4]
 800e8c4:	2203      	movs	r2, #3
 800e8c6:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 800e8c8:	6878      	ldr	r0, [r7, #4]
 800e8ca:	f7f8 fd11 	bl	80072f0 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800e8ce:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 800e8d0:	6838      	ldr	r0, [r7, #0]
 800e8d2:	f7ff ffe6 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 800e8d6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 800e8d8:	781c      	ldrb	r4, [r3, #0]
 800e8da:	68f8      	ldr	r0, [r7, #12]
 800e8dc:	f000 f8e8 	bl	800eab0 <_ZSt9addressofIbEPT_RS0_>
 800e8e0:	4603      	mov	r3, r0
 800e8e2:	4619      	mov	r1, r3
 800e8e4:	2001      	movs	r0, #1
 800e8e6:	f7f2 fba1 	bl	800102c <_ZnwjPv>
 800e8ea:	4603      	mov	r3, r0
 800e8ec:	4622      	mov	r2, r4
 800e8ee:	701a      	strb	r2, [r3, #0]
    }
 800e8f0:	bf00      	nop
 800e8f2:	3714      	adds	r7, #20
 800e8f4:	46bd      	mov	sp, r7
 800e8f6:	bd90      	pop	{r4, r7, pc}

0800e8f8 <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>:
    get(variant<_Types...>& __v)
 800e8f8:	b580      	push	{r7, lr}
 800e8fa:	b082      	sub	sp, #8
 800e8fc:	af00      	add	r7, sp, #0
 800e8fe:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 800e900:	6878      	ldr	r0, [r7, #4]
 800e902:	f7f8 fad5 	bl	8006eb0 <_ZNKSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEE5indexEv>
 800e906:	4603      	mov	r3, r0
 800e908:	2b03      	cmp	r3, #3
 800e90a:	bf14      	ite	ne
 800e90c:	2301      	movne	r3, #1
 800e90e:	2300      	moveq	r3, #0
 800e910:	b2db      	uxtb	r3, r3
 800e912:	2b00      	cmp	r3, #0
 800e914:	d002      	beq.n	800e91c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x24>
	__throw_bad_variant_access("Unexpected index");
 800e916:	4805      	ldr	r0, [pc, #20]	; (800e92c <_ZSt3getILj3EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_+0x34>)
 800e918:	f7f5 fc56 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 800e91c:	6878      	ldr	r0, [r7, #4]
 800e91e:	f7f8 fce7 	bl	80072f0 <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEEEDcOT0_>
 800e922:	4603      	mov	r3, r0
    }
 800e924:	4618      	mov	r0, r3
 800e926:	3708      	adds	r7, #8
 800e928:	46bd      	mov	sp, r7
 800e92a:	bd80      	pop	{r7, pc}
 800e92c:	08024d40 	.word	0x08024d40

0800e930 <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 800e930:	b480      	push	{r7}
 800e932:	b083      	sub	sp, #12
 800e934:	af00      	add	r7, sp, #0
 800e936:	6078      	str	r0, [r7, #4]
 800e938:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 800e93a:	683b      	ldr	r3, [r7, #0]
 800e93c:	681a      	ldr	r2, [r3, #0]
 800e93e:	687b      	ldr	r3, [r7, #4]
 800e940:	681b      	ldr	r3, [r3, #0]
 800e942:	429a      	cmp	r2, r3
 800e944:	d201      	bcs.n	800e94a <_ZSt3minIjERKT_S2_S2_+0x1a>
	return __b;
 800e946:	683b      	ldr	r3, [r7, #0]
 800e948:	e000      	b.n	800e94c <_ZSt3minIjERKT_S2_S2_+0x1c>
      return __a;
 800e94a:	687b      	ldr	r3, [r7, #4]
    }
 800e94c:	4618      	mov	r0, r3
 800e94e:	370c      	adds	r7, #12
 800e950:	46bd      	mov	sp, r7
 800e952:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e956:	4770      	bx	lr

0800e958 <_ZNSt16allocator_traitsISaIP10ExpressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 800e958:	b580      	push	{r7, lr}
 800e95a:	b082      	sub	sp, #8
 800e95c:	af00      	add	r7, sp, #0
 800e95e:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 800e960:	6878      	ldr	r0, [r7, #4]
 800e962:	f7f9 ff90 	bl	8008886 <_ZNK9__gnu_cxx13new_allocatorIP10ExpressionE8max_sizeEv>
 800e966:	4603      	mov	r3, r0
 800e968:	4618      	mov	r0, r3
 800e96a:	3708      	adds	r7, #8
 800e96c:	46bd      	mov	sp, r7
 800e96e:	bd80      	pop	{r7, pc}

0800e970 <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 800e970:	b580      	push	{r7, lr}
 800e972:	b086      	sub	sp, #24
 800e974:	af00      	add	r7, sp, #0
 800e976:	60f8      	str	r0, [r7, #12]
 800e978:	60b9      	str	r1, [r7, #8]
 800e97a:	607a      	str	r2, [r7, #4]
 800e97c:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 800e97e:	68ba      	ldr	r2, [r7, #8]
 800e980:	68fb      	ldr	r3, [r7, #12]
 800e982:	1ad3      	subs	r3, r2, r3
 800e984:	109b      	asrs	r3, r3, #2
 800e986:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 800e988:	697b      	ldr	r3, [r7, #20]
 800e98a:	2b00      	cmp	r3, #0
 800e98c:	dd06      	ble.n	800e99c <_ZSt14__relocate_a_1IP10ExpressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 800e98e:	697b      	ldr	r3, [r7, #20]
 800e990:	009b      	lsls	r3, r3, #2
 800e992:	461a      	mov	r2, r3
 800e994:	68f9      	ldr	r1, [r7, #12]
 800e996:	6878      	ldr	r0, [r7, #4]
 800e998:	f012 ff9e 	bl	80218d8 <memmove>
      return __result + __count;
 800e99c:	697b      	ldr	r3, [r7, #20]
 800e99e:	009b      	lsls	r3, r3, #2
 800e9a0:	687a      	ldr	r2, [r7, #4]
 800e9a2:	4413      	add	r3, r2
    }
 800e9a4:	4618      	mov	r0, r3
 800e9a6:	3718      	adds	r7, #24
 800e9a8:	46bd      	mov	sp, r7
 800e9aa:	bd80      	pop	{r7, pc}

0800e9ac <_ZNSt16allocator_traitsISaIP4BodyEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 800e9ac:	b580      	push	{r7, lr}
 800e9ae:	b082      	sub	sp, #8
 800e9b0:	af00      	add	r7, sp, #0
 800e9b2:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 800e9b4:	6878      	ldr	r0, [r7, #4]
 800e9b6:	f000 f805 	bl	800e9c4 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>
 800e9ba:	4603      	mov	r3, r0
 800e9bc:	4618      	mov	r0, r3
 800e9be:	3708      	adds	r7, #8
 800e9c0:	46bd      	mov	sp, r7
 800e9c2:	bd80      	pop	{r7, pc}

0800e9c4 <_ZNK9__gnu_cxx13new_allocatorIP4BodyE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800e9c4:	b480      	push	{r7}
 800e9c6:	b083      	sub	sp, #12
 800e9c8:	af00      	add	r7, sp, #0
 800e9ca:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800e9cc:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 800e9d0:	4618      	mov	r0, r3
 800e9d2:	370c      	adds	r7, #12
 800e9d4:	46bd      	mov	sp, r7
 800e9d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9da:	4770      	bx	lr

0800e9dc <_ZSt12__niter_baseIPP4BodyET_S3_>:
    __niter_base(_Iterator __it)
 800e9dc:	b480      	push	{r7}
 800e9de:	b083      	sub	sp, #12
 800e9e0:	af00      	add	r7, sp, #0
 800e9e2:	6078      	str	r0, [r7, #4]
    { return __it; }
 800e9e4:	687b      	ldr	r3, [r7, #4]
 800e9e6:	4618      	mov	r0, r3
 800e9e8:	370c      	adds	r7, #12
 800e9ea:	46bd      	mov	sp, r7
 800e9ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9f0:	4770      	bx	lr

0800e9f2 <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 800e9f2:	b580      	push	{r7, lr}
 800e9f4:	b086      	sub	sp, #24
 800e9f6:	af00      	add	r7, sp, #0
 800e9f8:	60f8      	str	r0, [r7, #12]
 800e9fa:	60b9      	str	r1, [r7, #8]
 800e9fc:	607a      	str	r2, [r7, #4]
 800e9fe:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 800ea00:	68ba      	ldr	r2, [r7, #8]
 800ea02:	68fb      	ldr	r3, [r7, #12]
 800ea04:	1ad3      	subs	r3, r2, r3
 800ea06:	109b      	asrs	r3, r3, #2
 800ea08:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 800ea0a:	697b      	ldr	r3, [r7, #20]
 800ea0c:	2b00      	cmp	r3, #0
 800ea0e:	dd06      	ble.n	800ea1e <_ZSt14__relocate_a_1IP4BodyS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 800ea10:	697b      	ldr	r3, [r7, #20]
 800ea12:	009b      	lsls	r3, r3, #2
 800ea14:	461a      	mov	r2, r3
 800ea16:	68f9      	ldr	r1, [r7, #12]
 800ea18:	6878      	ldr	r0, [r7, #4]
 800ea1a:	f012 ff5d 	bl	80218d8 <memmove>
      return __result + __count;
 800ea1e:	697b      	ldr	r3, [r7, #20]
 800ea20:	009b      	lsls	r3, r3, #2
 800ea22:	687a      	ldr	r2, [r7, #4]
 800ea24:	4413      	add	r3, r2
    }
 800ea26:	4618      	mov	r0, r3
 800ea28:	3718      	adds	r7, #24
 800ea2a:	46bd      	mov	sp, r7
 800ea2c:	bd80      	pop	{r7, pc}

0800ea2e <_ZNSt16allocator_traitsISaIP9StatementEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 800ea2e:	b580      	push	{r7, lr}
 800ea30:	b082      	sub	sp, #8
 800ea32:	af00      	add	r7, sp, #0
 800ea34:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 800ea36:	6878      	ldr	r0, [r7, #4]
 800ea38:	f000 f805 	bl	800ea46 <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>
 800ea3c:	4603      	mov	r3, r0
 800ea3e:	4618      	mov	r0, r3
 800ea40:	3708      	adds	r7, #8
 800ea42:	46bd      	mov	sp, r7
 800ea44:	bd80      	pop	{r7, pc}

0800ea46 <_ZNK9__gnu_cxx13new_allocatorIP9StatementE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 800ea46:	b480      	push	{r7}
 800ea48:	b083      	sub	sp, #12
 800ea4a:	af00      	add	r7, sp, #0
 800ea4c:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 800ea4e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 800ea52:	4618      	mov	r0, r3
 800ea54:	370c      	adds	r7, #12
 800ea56:	46bd      	mov	sp, r7
 800ea58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea5c:	4770      	bx	lr

0800ea5e <_ZSt12__niter_baseIPP9StatementET_S3_>:
    __niter_base(_Iterator __it)
 800ea5e:	b480      	push	{r7}
 800ea60:	b083      	sub	sp, #12
 800ea62:	af00      	add	r7, sp, #0
 800ea64:	6078      	str	r0, [r7, #4]
    { return __it; }
 800ea66:	687b      	ldr	r3, [r7, #4]
 800ea68:	4618      	mov	r0, r3
 800ea6a:	370c      	adds	r7, #12
 800ea6c:	46bd      	mov	sp, r7
 800ea6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea72:	4770      	bx	lr

0800ea74 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 800ea74:	b580      	push	{r7, lr}
 800ea76:	b086      	sub	sp, #24
 800ea78:	af00      	add	r7, sp, #0
 800ea7a:	60f8      	str	r0, [r7, #12]
 800ea7c:	60b9      	str	r1, [r7, #8]
 800ea7e:	607a      	str	r2, [r7, #4]
 800ea80:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 800ea82:	68ba      	ldr	r2, [r7, #8]
 800ea84:	68fb      	ldr	r3, [r7, #12]
 800ea86:	1ad3      	subs	r3, r2, r3
 800ea88:	109b      	asrs	r3, r3, #2
 800ea8a:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 800ea8c:	697b      	ldr	r3, [r7, #20]
 800ea8e:	2b00      	cmp	r3, #0
 800ea90:	dd06      	ble.n	800eaa0 <_ZSt14__relocate_a_1IP9StatementS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 800ea92:	697b      	ldr	r3, [r7, #20]
 800ea94:	009b      	lsls	r3, r3, #2
 800ea96:	461a      	mov	r2, r3
 800ea98:	68f9      	ldr	r1, [r7, #12]
 800ea9a:	6878      	ldr	r0, [r7, #4]
 800ea9c:	f012 ff1c 	bl	80218d8 <memmove>
      return __result + __count;
 800eaa0:	697b      	ldr	r3, [r7, #20]
 800eaa2:	009b      	lsls	r3, r3, #2
 800eaa4:	687a      	ldr	r2, [r7, #4]
 800eaa6:	4413      	add	r3, r2
    }
 800eaa8:	4618      	mov	r0, r3
 800eaaa:	3718      	adds	r7, #24
 800eaac:	46bd      	mov	sp, r7
 800eaae:	bd80      	pop	{r7, pc}

0800eab0 <_ZSt9addressofIbEPT_RS0_>:
    addressof(_Tp& __r) noexcept
 800eab0:	b580      	push	{r7, lr}
 800eab2:	b082      	sub	sp, #8
 800eab4:	af00      	add	r7, sp, #0
 800eab6:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 800eab8:	6878      	ldr	r0, [r7, #4]
 800eaba:	f7f7 fc0d 	bl	80062d8 <_ZSt11__addressofIbEPT_RS0_>
 800eabe:	4603      	mov	r3, r0
 800eac0:	4618      	mov	r0, r3
 800eac2:	3708      	adds	r7, #8
 800eac4:	46bd      	mov	sp, r7
 800eac6:	bd80      	pop	{r7, pc}

0800eac8 <_Z41__static_initialization_and_destruction_0ii>:
 800eac8:	b590      	push	{r4, r7, lr}
 800eaca:	b0e7      	sub	sp, #412	; 0x19c
 800eacc:	af02      	add	r7, sp, #8
 800eace:	1d3b      	adds	r3, r7, #4
 800ead0:	6018      	str	r0, [r3, #0]
 800ead2:	463b      	mov	r3, r7
 800ead4:	6019      	str	r1, [r3, #0]
 800ead6:	1d3b      	adds	r3, r7, #4
 800ead8:	681b      	ldr	r3, [r3, #0]
 800eada:	2b01      	cmp	r3, #1
 800eadc:	f040 819d 	bne.w	800ee1a <_Z41__static_initialization_and_destruction_0ii+0x352>
 800eae0:	463b      	mov	r3, r7
 800eae2:	681b      	ldr	r3, [r3, #0]
 800eae4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800eae8:	4293      	cmp	r3, r2
 800eaea:	f040 8196 	bne.w	800ee1a <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800eaee:	f107 0314 	add.w	r3, r7, #20
 800eaf2:	4618      	mov	r0, r3
 800eaf4:	2322      	movs	r3, #34	; 0x22
 800eaf6:	461a      	mov	r2, r3
 800eaf8:	2100      	movs	r1, #0
 800eafa:	f012 ff07 	bl	802190c <memset>
 800eafe:	f107 0314 	add.w	r3, r7, #20
 800eb02:	223a      	movs	r2, #58	; 0x3a
 800eb04:	701a      	strb	r2, [r3, #0]
 800eb06:	f107 0314 	add.w	r3, r7, #20
 800eb0a:	2201      	movs	r2, #1
 800eb0c:	705a      	strb	r2, [r3, #1]
 800eb0e:	f107 0314 	add.w	r3, r7, #20
 800eb12:	220a      	movs	r2, #10
 800eb14:	709a      	strb	r2, [r3, #2]
 800eb16:	f107 0314 	add.w	r3, r7, #20
 800eb1a:	220a      	movs	r2, #10
 800eb1c:	70da      	strb	r2, [r3, #3]
 800eb1e:	f107 0314 	add.w	r3, r7, #20
 800eb22:	222c      	movs	r2, #44	; 0x2c
 800eb24:	711a      	strb	r2, [r3, #4]
 800eb26:	f107 0314 	add.w	r3, r7, #20
 800eb2a:	220c      	movs	r2, #12
 800eb2c:	715a      	strb	r2, [r3, #5]
 800eb2e:	f107 0314 	add.w	r3, r7, #20
 800eb32:	222e      	movs	r2, #46	; 0x2e
 800eb34:	719a      	strb	r2, [r3, #6]
 800eb36:	f107 0314 	add.w	r3, r7, #20
 800eb3a:	220b      	movs	r2, #11
 800eb3c:	71da      	strb	r2, [r3, #7]
 800eb3e:	f107 0314 	add.w	r3, r7, #20
 800eb42:	225b      	movs	r2, #91	; 0x5b
 800eb44:	721a      	strb	r2, [r3, #8]
 800eb46:	f107 0314 	add.w	r3, r7, #20
 800eb4a:	220d      	movs	r2, #13
 800eb4c:	725a      	strb	r2, [r3, #9]
 800eb4e:	f107 0314 	add.w	r3, r7, #20
 800eb52:	225d      	movs	r2, #93	; 0x5d
 800eb54:	729a      	strb	r2, [r3, #10]
 800eb56:	f107 0314 	add.w	r3, r7, #20
 800eb5a:	220e      	movs	r2, #14
 800eb5c:	72da      	strb	r2, [r3, #11]
 800eb5e:	f107 0314 	add.w	r3, r7, #20
 800eb62:	227c      	movs	r2, #124	; 0x7c
 800eb64:	731a      	strb	r2, [r3, #12]
 800eb66:	f107 0314 	add.w	r3, r7, #20
 800eb6a:	2215      	movs	r2, #21
 800eb6c:	735a      	strb	r2, [r3, #13]
 800eb6e:	f107 0314 	add.w	r3, r7, #20
 800eb72:	2226      	movs	r2, #38	; 0x26
 800eb74:	739a      	strb	r2, [r3, #14]
 800eb76:	f107 0314 	add.w	r3, r7, #20
 800eb7a:	2216      	movs	r2, #22
 800eb7c:	73da      	strb	r2, [r3, #15]
 800eb7e:	f107 0314 	add.w	r3, r7, #20
 800eb82:	222b      	movs	r2, #43	; 0x2b
 800eb84:	741a      	strb	r2, [r3, #16]
 800eb86:	f107 0314 	add.w	r3, r7, #20
 800eb8a:	221f      	movs	r2, #31
 800eb8c:	745a      	strb	r2, [r3, #17]
 800eb8e:	f107 0314 	add.w	r3, r7, #20
 800eb92:	222d      	movs	r2, #45	; 0x2d
 800eb94:	749a      	strb	r2, [r3, #18]
 800eb96:	f107 0314 	add.w	r3, r7, #20
 800eb9a:	2220      	movs	r2, #32
 800eb9c:	74da      	strb	r2, [r3, #19]
 800eb9e:	f107 0314 	add.w	r3, r7, #20
 800eba2:	222a      	movs	r2, #42	; 0x2a
 800eba4:	751a      	strb	r2, [r3, #20]
 800eba6:	f107 0314 	add.w	r3, r7, #20
 800ebaa:	2221      	movs	r2, #33	; 0x21
 800ebac:	755a      	strb	r2, [r3, #21]
 800ebae:	f107 0314 	add.w	r3, r7, #20
 800ebb2:	222f      	movs	r2, #47	; 0x2f
 800ebb4:	759a      	strb	r2, [r3, #22]
 800ebb6:	f107 0314 	add.w	r3, r7, #20
 800ebba:	2222      	movs	r2, #34	; 0x22
 800ebbc:	75da      	strb	r2, [r3, #23]
 800ebbe:	f107 0314 	add.w	r3, r7, #20
 800ebc2:	225e      	movs	r2, #94	; 0x5e
 800ebc4:	761a      	strb	r2, [r3, #24]
 800ebc6:	f107 0314 	add.w	r3, r7, #20
 800ebca:	2223      	movs	r2, #35	; 0x23
 800ebcc:	765a      	strb	r2, [r3, #25]
 800ebce:	f107 0314 	add.w	r3, r7, #20
 800ebd2:	2225      	movs	r2, #37	; 0x25
 800ebd4:	769a      	strb	r2, [r3, #26]
 800ebd6:	f107 0314 	add.w	r3, r7, #20
 800ebda:	2224      	movs	r2, #36	; 0x24
 800ebdc:	76da      	strb	r2, [r3, #27]
 800ebde:	f107 0314 	add.w	r3, r7, #20
 800ebe2:	2228      	movs	r2, #40	; 0x28
 800ebe4:	771a      	strb	r2, [r3, #28]
 800ebe6:	f107 0314 	add.w	r3, r7, #20
 800ebea:	2226      	movs	r2, #38	; 0x26
 800ebec:	775a      	strb	r2, [r3, #29]
 800ebee:	f107 0314 	add.w	r3, r7, #20
 800ebf2:	2229      	movs	r2, #41	; 0x29
 800ebf4:	779a      	strb	r2, [r3, #30]
 800ebf6:	f107 0314 	add.w	r3, r7, #20
 800ebfa:	2227      	movs	r2, #39	; 0x27
 800ebfc:	77da      	strb	r2, [r3, #31]
 800ebfe:	f107 0314 	add.w	r3, r7, #20
 800ec02:	2225      	movs	r2, #37	; 0x25
 800ec04:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800ec08:	f107 030c 	add.w	r3, r7, #12
 800ec0c:	f107 0214 	add.w	r2, r7, #20
 800ec10:	601a      	str	r2, [r3, #0]
 800ec12:	f107 030c 	add.w	r3, r7, #12
 800ec16:	2211      	movs	r2, #17
 800ec18:	605a      	str	r2, [r3, #4]
 800ec1a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ec1e:	4618      	mov	r0, r3
 800ec20:	f7f2 fb60 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800ec24:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800ec28:	f107 020c 	add.w	r2, r7, #12
 800ec2c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ec30:	9300      	str	r3, [sp, #0]
 800ec32:	460b      	mov	r3, r1
 800ec34:	ca06      	ldmia	r2, {r1, r2}
 800ec36:	4885      	ldr	r0, [pc, #532]	; (800ee4c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800ec38:	f7f2 fb6c 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800ec3c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800ec40:	4618      	mov	r0, r3
 800ec42:	f7f2 fb5b 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800ec46:	2305      	movs	r3, #5
 800ec48:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800ec4c:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800ec50:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec54:	497e      	ldr	r1, [pc, #504]	; (800ee50 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800ec56:	4618      	mov	r0, r3
 800ec58:	f7f2 fa48 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800ec5c:	2306      	movs	r3, #6
 800ec5e:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800ec62:	f207 1263 	addw	r2, r7, #355	; 0x163
 800ec66:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec6a:	331c      	adds	r3, #28
 800ec6c:	4979      	ldr	r1, [pc, #484]	; (800ee54 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800ec6e:	4618      	mov	r0, r3
 800ec70:	f7f2 fa64 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800ec74:	2307      	movs	r3, #7
 800ec76:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800ec7a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800ec7e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec82:	3338      	adds	r3, #56	; 0x38
 800ec84:	4974      	ldr	r1, [pc, #464]	; (800ee58 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800ec86:	4618      	mov	r0, r3
 800ec88:	f7f2 fa58 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800ec8c:	2308      	movs	r3, #8
 800ec8e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800ec92:	f207 1265 	addw	r2, r7, #357	; 0x165
 800ec96:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ec9a:	3354      	adds	r3, #84	; 0x54
 800ec9c:	496f      	ldr	r1, [pc, #444]	; (800ee5c <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800ec9e:	4618      	mov	r0, r3
 800eca0:	f7f2 fa24 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800eca4:	2309      	movs	r3, #9
 800eca6:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800ecaa:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800ecae:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ecb2:	3370      	adds	r3, #112	; 0x70
 800ecb4:	496a      	ldr	r1, [pc, #424]	; (800ee60 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800ecb6:	4618      	mov	r0, r3
 800ecb8:	f7f2 fa68 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800ecbc:	2310      	movs	r3, #16
 800ecbe:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800ecc2:	f207 1267 	addw	r2, r7, #359	; 0x167
 800ecc6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ecca:	338c      	adds	r3, #140	; 0x8c
 800eccc:	4965      	ldr	r1, [pc, #404]	; (800ee64 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800ecce:	4618      	mov	r0, r3
 800ecd0:	f7f2 fa84 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800ecd4:	2311      	movs	r3, #17
 800ecd6:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800ecda:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800ecde:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ece2:	33a8      	adds	r3, #168	; 0xa8
 800ece4:	4960      	ldr	r1, [pc, #384]	; (800ee68 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800ece6:	4618      	mov	r0, r3
 800ece8:	f7f2 fa50 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800ecec:	2312      	movs	r3, #18
 800ecee:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800ecf2:	f207 1269 	addw	r2, r7, #361	; 0x169
 800ecf6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ecfa:	33c4      	adds	r3, #196	; 0xc4
 800ecfc:	495b      	ldr	r1, [pc, #364]	; (800ee6c <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800ecfe:	4618      	mov	r0, r3
 800ed00:	f7f2 f9f4 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800ed04:	2313      	movs	r3, #19
 800ed06:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800ed0a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800ed0e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ed12:	33e0      	adds	r3, #224	; 0xe0
 800ed14:	4956      	ldr	r1, [pc, #344]	; (800ee70 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800ed16:	4618      	mov	r0, r3
 800ed18:	f7f2 fa10 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800ed1c:	2314      	movs	r3, #20
 800ed1e:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800ed22:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800ed26:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ed2a:	33fc      	adds	r3, #252	; 0xfc
 800ed2c:	4951      	ldr	r1, [pc, #324]	; (800ee74 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800ed2e:	4618      	mov	r0, r3
 800ed30:	f7f2 fa7c 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800ed34:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ed38:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800ed3c:	601a      	str	r2, [r3, #0]
 800ed3e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800ed42:	220a      	movs	r2, #10
 800ed44:	605a      	str	r2, [r3, #4]
 800ed46:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ed4a:	4618      	mov	r0, r3
 800ed4c:	f7f2 fb6f 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800ed50:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800ed54:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800ed58:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ed5c:	9300      	str	r3, [sp, #0]
 800ed5e:	460b      	mov	r3, r1
 800ed60:	ca06      	ldmia	r2, {r1, r2}
 800ed62:	4845      	ldr	r0, [pc, #276]	; (800ee78 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800ed64:	f7f2 fb7b 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800ed68:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800ed6c:	4618      	mov	r0, r3
 800ed6e:	f7f2 fb6a 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800ed72:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800ed76:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800ed7a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800ed7e:	429c      	cmp	r4, r3
 800ed80:	d004      	beq.n	800ed8c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800ed82:	3c1c      	subs	r4, #28
 800ed84:	4620      	mov	r0, r4
 800ed86:	f7f2 f9a4 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800ed8a:	e7f6      	b.n	800ed7a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800ed8c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800ed90:	2200      	movs	r2, #0
 800ed92:	601a      	str	r2, [r3, #0]
 800ed94:	605a      	str	r2, [r3, #4]
 800ed96:	609a      	str	r2, [r3, #8]
 800ed98:	233c      	movs	r3, #60	; 0x3c
 800ed9a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800ed9e:	231b      	movs	r3, #27
 800eda0:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800eda4:	231c      	movs	r3, #28
 800eda6:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800edaa:	233e      	movs	r3, #62	; 0x3e
 800edac:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800edb0:	2319      	movs	r3, #25
 800edb2:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800edb6:	231a      	movs	r3, #26
 800edb8:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800edbc:	233d      	movs	r3, #61	; 0x3d
 800edbe:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800edc2:	2318      	movs	r3, #24
 800edc4:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800edc8:	231d      	movs	r3, #29
 800edca:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800edce:	2321      	movs	r3, #33	; 0x21
 800edd0:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800edd4:	2317      	movs	r3, #23
 800edd6:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800edda:	231e      	movs	r3, #30
 800eddc:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800ede0:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800ede4:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800ede8:	2304      	movs	r3, #4
 800edea:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800edee:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800edf2:	4618      	mov	r0, r3
 800edf4:	f7f2 fb63 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800edf8:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800edfc:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800ee00:	9300      	str	r3, [sp, #0]
 800ee02:	4613      	mov	r3, r2
 800ee04:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800ee08:	ca06      	ldmia	r2, {r1, r2}
 800ee0a:	481c      	ldr	r0, [pc, #112]	; (800ee7c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800ee0c:	f7f2 fb6f 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800ee10:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800ee14:	4618      	mov	r0, r3
 800ee16:	f7f2 fb5e 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800ee1a:	1d3b      	adds	r3, r7, #4
 800ee1c:	681b      	ldr	r3, [r3, #0]
 800ee1e:	2b00      	cmp	r3, #0
 800ee20:	d10e      	bne.n	800ee40 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800ee22:	463b      	mov	r3, r7
 800ee24:	681b      	ldr	r3, [r3, #0]
 800ee26:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ee2a:	4293      	cmp	r3, r2
 800ee2c:	d108      	bne.n	800ee40 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800ee2e:	4813      	ldr	r0, [pc, #76]	; (800ee7c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800ee30:	f7f4 ffb6 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800ee34:	4810      	ldr	r0, [pc, #64]	; (800ee78 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800ee36:	f7f4 ffc0 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800ee3a:	4804      	ldr	r0, [pc, #16]	; (800ee4c <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800ee3c:	f7f4 ffca 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800ee40:	bf00      	nop
 800ee42:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800ee46:	46bd      	mov	sp, r7
 800ee48:	bd90      	pop	{r4, r7, pc}
 800ee4a:	bf00      	nop
 800ee4c:	200003c0 	.word	0x200003c0
 800ee50:	08024d9c 	.word	0x08024d9c
 800ee54:	08024da4 	.word	0x08024da4
 800ee58:	08024dac 	.word	0x08024dac
 800ee5c:	08024db4 	.word	0x08024db4
 800ee60:	08024dbc 	.word	0x08024dbc
 800ee64:	08024dc4 	.word	0x08024dc4
 800ee68:	08024dc8 	.word	0x08024dc8
 800ee6c:	08024dd0 	.word	0x08024dd0
 800ee70:	08024dd8 	.word	0x08024dd8
 800ee74:	08024de0 	.word	0x08024de0
 800ee78:	200003d8 	.word	0x200003d8
 800ee7c:	200003f0 	.word	0x200003f0

0800ee80 <_GLOBAL__sub_I__ZN7ProgramD2Ev>:
 800ee80:	b580      	push	{r7, lr}
 800ee82:	af00      	add	r7, sp, #0
 800ee84:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ee88:	2001      	movs	r0, #1
 800ee8a:	f7ff fe1d 	bl	800eac8 <_Z41__static_initialization_and_destruction_0ii>
 800ee8e:	bd80      	pop	{r7, pc}

0800ee90 <_GLOBAL__sub_D__ZN7ProgramD2Ev>:
 800ee90:	b580      	push	{r7, lr}
 800ee92:	af00      	add	r7, sp, #0
 800ee94:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ee98:	2000      	movs	r0, #0
 800ee9a:	f7ff fe15 	bl	800eac8 <_Z41__static_initialization_and_destruction_0ii>
 800ee9e:	bd80      	pop	{r7, pc}

0800eea0 <_ZN6SourceC1Ev>:
static std::ifstream indata{};
#endif

extern UART_HandleTypeDef huart1;

Source::Source()
 800eea0:	b480      	push	{r7}
 800eea2:	b083      	sub	sp, #12
 800eea4:	af00      	add	r7, sp, #0
 800eea6:	6078      	str	r0, [r7, #4]
{
	line = 1;
 800eea8:	687b      	ldr	r3, [r7, #4]
 800eeaa:	2201      	movs	r2, #1
 800eeac:	601a      	str	r2, [r3, #0]
	position = 0;
 800eeae:	687b      	ldr	r3, [r7, #4]
 800eeb0:	2200      	movs	r2, #0
 800eeb2:	605a      	str	r2, [r3, #4]
#ifdef TESTS
    indata.open("code.txt");
#endif
}
 800eeb4:	687b      	ldr	r3, [r7, #4]
 800eeb6:	4618      	mov	r0, r3
 800eeb8:	370c      	adds	r7, #12
 800eeba:	46bd      	mov	sp, r7
 800eebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eec0:	4770      	bx	lr

0800eec2 <_ZN6SourceD1Ev>:

Source::~Source()
 800eec2:	b480      	push	{r7}
 800eec4:	b083      	sub	sp, #12
 800eec6:	af00      	add	r7, sp, #0
 800eec8:	6078      	str	r0, [r7, #4]
{
#ifdef TESTS
    indata.close();
#endif
}
 800eeca:	687b      	ldr	r3, [r7, #4]
 800eecc:	4618      	mov	r0, r3
 800eece:	370c      	adds	r7, #12
 800eed0:	46bd      	mov	sp, r7
 800eed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eed6:	4770      	bx	lr

0800eed8 <_ZN6Source8get_lineEv>:

int Source::get_line()
{
 800eed8:	b480      	push	{r7}
 800eeda:	b083      	sub	sp, #12
 800eedc:	af00      	add	r7, sp, #0
 800eede:	6078      	str	r0, [r7, #4]
	return line;
 800eee0:	687b      	ldr	r3, [r7, #4]
 800eee2:	681b      	ldr	r3, [r3, #0]
}
 800eee4:	4618      	mov	r0, r3
 800eee6:	370c      	adds	r7, #12
 800eee8:	46bd      	mov	sp, r7
 800eeea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eeee:	4770      	bx	lr

0800eef0 <_ZN6Source12get_positionEv>:

int Source::get_position()
{
 800eef0:	b480      	push	{r7}
 800eef2:	b083      	sub	sp, #12
 800eef4:	af00      	add	r7, sp, #0
 800eef6:	6078      	str	r0, [r7, #4]
	return position;
 800eef8:	687b      	ldr	r3, [r7, #4]
 800eefa:	685b      	ldr	r3, [r3, #4]
}
 800eefc:	4618      	mov	r0, r3
 800eefe:	370c      	adds	r7, #12
 800ef00:	46bd      	mov	sp, r7
 800ef02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef06:	4770      	bx	lr

0800ef08 <_ZN6Source15update_positionEh>:

// update line and position in line depending on received char
void Source::update_position(uint8_t rx_buffer)
{
 800ef08:	b480      	push	{r7}
 800ef0a:	b083      	sub	sp, #12
 800ef0c:	af00      	add	r7, sp, #0
 800ef0e:	6078      	str	r0, [r7, #4]
 800ef10:	460b      	mov	r3, r1
 800ef12:	70fb      	strb	r3, [r7, #3]
	if (rx_buffer == '\n')
 800ef14:	78fb      	ldrb	r3, [r7, #3]
 800ef16:	2b0a      	cmp	r3, #10
 800ef18:	d108      	bne.n	800ef2c <_ZN6Source15update_positionEh+0x24>
	{
		++line;
 800ef1a:	687b      	ldr	r3, [r7, #4]
 800ef1c:	681b      	ldr	r3, [r3, #0]
 800ef1e:	1c5a      	adds	r2, r3, #1
 800ef20:	687b      	ldr	r3, [r7, #4]
 800ef22:	601a      	str	r2, [r3, #0]
		position = 0;
 800ef24:	687b      	ldr	r3, [r7, #4]
 800ef26:	2200      	movs	r2, #0
 800ef28:	605a      	str	r2, [r3, #4]
	}
	else
	{
		++position;
	}
}
 800ef2a:	e004      	b.n	800ef36 <_ZN6Source15update_positionEh+0x2e>
		++position;
 800ef2c:	687b      	ldr	r3, [r7, #4]
 800ef2e:	685b      	ldr	r3, [r3, #4]
 800ef30:	1c5a      	adds	r2, r3, #1
 800ef32:	687b      	ldr	r3, [r7, #4]
 800ef34:	605a      	str	r2, [r3, #4]
}
 800ef36:	bf00      	nop
 800ef38:	370c      	adds	r7, #12
 800ef3a:	46bd      	mov	sp, r7
 800ef3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef40:	4770      	bx	lr
	...

0800ef44 <_ZN6Source17receive_code_charEv>:

// receive char with UART in blocking mode
char Source::receive_code_char()
{
 800ef44:	b580      	push	{r7, lr}
 800ef46:	b082      	sub	sp, #8
 800ef48:	af00      	add	r7, sp, #0
 800ef4a:	6078      	str	r0, [r7, #4]
    static uint8_t rx_buffer;
#ifndef TESTS
    static uint8_t tx_buf;
    tx_buf = 'c';
 800ef4c:	4b0d      	ldr	r3, [pc, #52]	; (800ef84 <_ZN6Source17receive_code_charEv+0x40>)
 800ef4e:	2263      	movs	r2, #99	; 0x63
 800ef50:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(&huart1, &tx_buf, 1, 100);
 800ef52:	2364      	movs	r3, #100	; 0x64
 800ef54:	2201      	movs	r2, #1
 800ef56:	490b      	ldr	r1, [pc, #44]	; (800ef84 <_ZN6Source17receive_code_charEv+0x40>)
 800ef58:	480b      	ldr	r0, [pc, #44]	; (800ef88 <_ZN6Source17receive_code_charEv+0x44>)
 800ef5a:	f010 f9c1 	bl	801f2e0 <HAL_UART_Transmit>
	HAL_UART_Receive(&huart1, &rx_buffer, 1, -1);
 800ef5e:	f04f 33ff 	mov.w	r3, #4294967295
 800ef62:	2201      	movs	r2, #1
 800ef64:	4909      	ldr	r1, [pc, #36]	; (800ef8c <_ZN6Source17receive_code_charEv+0x48>)
 800ef66:	4808      	ldr	r0, [pc, #32]	; (800ef88 <_ZN6Source17receive_code_charEv+0x44>)
 800ef68:	f010 fa4d 	bl	801f406 <HAL_UART_Receive>
	rx_buffer = (uint8_t)indata.get();
    std::cout << rx_buffer << '\n';
    if(rx_buffer == 255)
        rx_buffer = '\0';
#endif
	update_position(rx_buffer);
 800ef6c:	4b07      	ldr	r3, [pc, #28]	; (800ef8c <_ZN6Source17receive_code_charEv+0x48>)
 800ef6e:	781b      	ldrb	r3, [r3, #0]
 800ef70:	4619      	mov	r1, r3
 800ef72:	6878      	ldr	r0, [r7, #4]
 800ef74:	f7ff ffc8 	bl	800ef08 <_ZN6Source15update_positionEh>

	return rx_buffer;
 800ef78:	4b04      	ldr	r3, [pc, #16]	; (800ef8c <_ZN6Source17receive_code_charEv+0x48>)
 800ef7a:	781b      	ldrb	r3, [r3, #0]
}
 800ef7c:	4618      	mov	r0, r3
 800ef7e:	3708      	adds	r7, #8
 800ef80:	46bd      	mov	sp, r7
 800ef82:	bd80      	pop	{r7, pc}
 800ef84:	20000409 	.word	0x20000409
 800ef88:	20000578 	.word	0x20000578
 800ef8c:	20000408 	.word	0x20000408

0800ef90 <_ZN4BodyD1Ev>:
#include <Statement.h>

Body::~Body()
 800ef90:	b590      	push	{r4, r7, lr}
 800ef92:	b087      	sub	sp, #28
 800ef94:	af00      	add	r7, sp, #0
 800ef96:	6078      	str	r0, [r7, #4]
{
	for (Statement *s : statements)
 800ef98:	687b      	ldr	r3, [r7, #4]
 800ef9a:	617b      	str	r3, [r7, #20]
 800ef9c:	6978      	ldr	r0, [r7, #20]
 800ef9e:	f7ff f893 	bl	800e0c8 <_ZNSt6vectorIP9StatementSaIS1_EE5beginEv>
 800efa2:	4603      	mov	r3, r0
 800efa4:	60fb      	str	r3, [r7, #12]
 800efa6:	6978      	ldr	r0, [r7, #20]
 800efa8:	f7fe fcc0 	bl	800d92c <_ZNSt6vectorIP9StatementSaIS1_EE3endEv>
 800efac:	4603      	mov	r3, r0
 800efae:	60bb      	str	r3, [r7, #8]
 800efb0:	f107 0208 	add.w	r2, r7, #8
 800efb4:	f107 030c 	add.w	r3, r7, #12
 800efb8:	4611      	mov	r1, r2
 800efba:	4618      	mov	r0, r3
 800efbc:	f000 f9dd 	bl	800f37a <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800efc0:	4603      	mov	r3, r0
 800efc2:	2b00      	cmp	r3, #0
 800efc4:	d017      	beq.n	800eff6 <_ZN4BodyD1Ev+0x66>
 800efc6:	f107 030c 	add.w	r3, r7, #12
 800efca:	4618      	mov	r0, r3
 800efcc:	f7ff f8ed 	bl	800e1aa <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEdeEv>
 800efd0:	4603      	mov	r3, r0
 800efd2:	681b      	ldr	r3, [r3, #0]
 800efd4:	613b      	str	r3, [r7, #16]
	{
		delete s;
 800efd6:	693c      	ldr	r4, [r7, #16]
 800efd8:	2c00      	cmp	r4, #0
 800efda:	d006      	beq.n	800efea <_ZN4BodyD1Ev+0x5a>
 800efdc:	4620      	mov	r0, r4
 800efde:	f000 f813 	bl	800f008 <_ZN9StatementD1Ev>
 800efe2:	210c      	movs	r1, #12
 800efe4:	4620      	mov	r0, r4
 800efe6:	f011 f8fe 	bl	80201e6 <_ZdlPvj>
	for (Statement *s : statements)
 800efea:	f107 030c 	add.w	r3, r7, #12
 800efee:	4618      	mov	r0, r3
 800eff0:	f000 f9db 	bl	800f3aa <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>
 800eff4:	e7dc      	b.n	800efb0 <_ZN4BodyD1Ev+0x20>
Body::~Body()
 800eff6:	687b      	ldr	r3, [r7, #4]
 800eff8:	4618      	mov	r0, r3
 800effa:	f000 f9a3 	bl	800f344 <_ZNSt6vectorIP9StatementSaIS1_EED1Ev>
	}
}
 800effe:	687b      	ldr	r3, [r7, #4]
 800f000:	4618      	mov	r0, r3
 800f002:	371c      	adds	r7, #28
 800f004:	46bd      	mov	sp, r7
 800f006:	bd90      	pop	{r4, r7, pc}

0800f008 <_ZN9StatementD1Ev>:

Statement::~Statement()
 800f008:	b590      	push	{r4, r7, lr}
 800f00a:	b083      	sub	sp, #12
 800f00c:	af00      	add	r7, sp, #0
 800f00e:	6078      	str	r0, [r7, #4]
{
	switch (type)
 800f010:	687b      	ldr	r3, [r7, #4]
 800f012:	781b      	ldrb	r3, [r3, #0]
 800f014:	2b04      	cmp	r3, #4
 800f016:	d86b      	bhi.n	800f0f0 <_ZN9StatementD1Ev+0xe8>
 800f018:	a201      	add	r2, pc, #4	; (adr r2, 800f020 <_ZN9StatementD1Ev+0x18>)
 800f01a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f01e:	bf00      	nop
 800f020:	0800f035 	.word	0x0800f035
 800f024:	0800f057 	.word	0x0800f057
 800f028:	0800f079 	.word	0x0800f079
 800f02c:	0800f09b 	.word	0x0800f09b
 800f030:	0800f0bd 	.word	0x0800f0bd
	{
	case STATEMENT_ASSIGNMENT:
		delete std::get<Assignment*>(content);
 800f034:	687b      	ldr	r3, [r7, #4]
 800f036:	3304      	adds	r3, #4
 800f038:	4618      	mov	r0, r3
 800f03a:	f000 f9c6 	bl	800f3ca <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 800f03e:	4603      	mov	r3, r0
 800f040:	681c      	ldr	r4, [r3, #0]
 800f042:	2c00      	cmp	r4, #0
 800f044:	d04b      	beq.n	800f0de <_ZN9StatementD1Ev+0xd6>
 800f046:	4620      	mov	r0, r4
 800f048:	f000 f944 	bl	800f2d4 <_ZN10AssignmentD1Ev>
 800f04c:	2108      	movs	r1, #8
 800f04e:	4620      	mov	r0, r4
 800f050:	f011 f8c9 	bl	80201e6 <_ZdlPvj>
		break;
 800f054:	e043      	b.n	800f0de <_ZN9StatementD1Ev+0xd6>
	case STATEMENT_FUNCTION_CALL:
		delete std::get<Function_call*>(content);
 800f056:	687b      	ldr	r3, [r7, #4]
 800f058:	3304      	adds	r3, #4
 800f05a:	4618      	mov	r0, r3
 800f05c:	f000 f9c1 	bl	800f3e2 <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 800f060:	4603      	mov	r3, r0
 800f062:	681c      	ldr	r4, [r3, #0]
 800f064:	2c00      	cmp	r4, #0
 800f066:	d03c      	beq.n	800f0e2 <_ZN9StatementD1Ev+0xda>
 800f068:	4620      	mov	r0, r4
 800f06a:	f000 f8d7 	bl	800f21c <_ZN13Function_callD1Ev>
 800f06e:	212c      	movs	r1, #44	; 0x2c
 800f070:	4620      	mov	r0, r4
 800f072:	f011 f8b8 	bl	80201e6 <_ZdlPvj>
		break;
 800f076:	e034      	b.n	800f0e2 <_ZN9StatementD1Ev+0xda>
	case STATEMENT_METHOD_CALL:
		delete std::get<Method_call*>(content);
 800f078:	687b      	ldr	r3, [r7, #4]
 800f07a:	3304      	adds	r3, #4
 800f07c:	4618      	mov	r0, r3
 800f07e:	f000 f9bc 	bl	800f3fa <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>
 800f082:	4603      	mov	r3, r0
 800f084:	681c      	ldr	r4, [r3, #0]
 800f086:	2c00      	cmp	r4, #0
 800f088:	d02d      	beq.n	800f0e6 <_ZN9StatementD1Ev+0xde>
 800f08a:	4620      	mov	r0, r4
 800f08c:	f000 f909 	bl	800f2a2 <_ZN11Method_callD1Ev>
 800f090:	2124      	movs	r1, #36	; 0x24
 800f092:	4620      	mov	r0, r4
 800f094:	f011 f8a7 	bl	80201e6 <_ZdlPvj>
		break;
 800f098:	e025      	b.n	800f0e6 <_ZN9StatementD1Ev+0xde>
	case STATEMENT_WHILE:
		delete std::get<While_statement*>(content);
 800f09a:	687b      	ldr	r3, [r7, #4]
 800f09c:	3304      	adds	r3, #4
 800f09e:	4618      	mov	r0, r3
 800f0a0:	f000 f9b7 	bl	800f412 <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>
 800f0a4:	4603      	mov	r3, r0
 800f0a6:	681c      	ldr	r4, [r3, #0]
 800f0a8:	2c00      	cmp	r4, #0
 800f0aa:	d01e      	beq.n	800f0ea <_ZN9StatementD1Ev+0xe2>
 800f0ac:	4620      	mov	r0, r4
 800f0ae:	f000 f825 	bl	800f0fc <_ZN15While_statementD1Ev>
 800f0b2:	2108      	movs	r1, #8
 800f0b4:	4620      	mov	r0, r4
 800f0b6:	f011 f896 	bl	80201e6 <_ZdlPvj>
		break;
 800f0ba:	e016      	b.n	800f0ea <_ZN9StatementD1Ev+0xe2>
	case STATEMENT_IF:
		delete std::get<If_statement*>(content);
 800f0bc:	687b      	ldr	r3, [r7, #4]
 800f0be:	3304      	adds	r3, #4
 800f0c0:	4618      	mov	r0, r3
 800f0c2:	f000 f9b2 	bl	800f42a <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>
 800f0c6:	4603      	mov	r3, r0
 800f0c8:	681c      	ldr	r4, [r3, #0]
 800f0ca:	2c00      	cmp	r4, #0
 800f0cc:	d00f      	beq.n	800f0ee <_ZN9StatementD1Ev+0xe6>
 800f0ce:	4620      	mov	r0, r4
 800f0d0:	f000 f833 	bl	800f13a <_ZN12If_statementD1Ev>
 800f0d4:	2118      	movs	r1, #24
 800f0d6:	4620      	mov	r0, r4
 800f0d8:	f011 f885 	bl	80201e6 <_ZdlPvj>
		break;
 800f0dc:	e007      	b.n	800f0ee <_ZN9StatementD1Ev+0xe6>
		break;
 800f0de:	bf00      	nop
 800f0e0:	e006      	b.n	800f0f0 <_ZN9StatementD1Ev+0xe8>
		break;
 800f0e2:	bf00      	nop
 800f0e4:	e004      	b.n	800f0f0 <_ZN9StatementD1Ev+0xe8>
		break;
 800f0e6:	bf00      	nop
 800f0e8:	e002      	b.n	800f0f0 <_ZN9StatementD1Ev+0xe8>
		break;
 800f0ea:	bf00      	nop
 800f0ec:	e000      	b.n	800f0f0 <_ZN9StatementD1Ev+0xe8>
		break;
 800f0ee:	bf00      	nop
	}
}
 800f0f0:	687b      	ldr	r3, [r7, #4]
 800f0f2:	4618      	mov	r0, r3
 800f0f4:	370c      	adds	r7, #12
 800f0f6:	46bd      	mov	sp, r7
 800f0f8:	bd90      	pop	{r4, r7, pc}
 800f0fa:	bf00      	nop

0800f0fc <_ZN15While_statementD1Ev>:

While_statement::~While_statement()
 800f0fc:	b590      	push	{r4, r7, lr}
 800f0fe:	b083      	sub	sp, #12
 800f100:	af00      	add	r7, sp, #0
 800f102:	6078      	str	r0, [r7, #4]
{
	delete condition;
 800f104:	687b      	ldr	r3, [r7, #4]
 800f106:	681c      	ldr	r4, [r3, #0]
 800f108:	2c00      	cmp	r4, #0
 800f10a:	d006      	beq.n	800f11a <_ZN15While_statementD1Ev+0x1e>
 800f10c:	4620      	mov	r0, r4
 800f10e:	f7f5 fa4c 	bl	80045aa <_ZN10ExpressionD1Ev>
 800f112:	2114      	movs	r1, #20
 800f114:	4620      	mov	r0, r4
 800f116:	f011 f866 	bl	80201e6 <_ZdlPvj>
	delete while_body;
 800f11a:	687b      	ldr	r3, [r7, #4]
 800f11c:	685c      	ldr	r4, [r3, #4]
 800f11e:	2c00      	cmp	r4, #0
 800f120:	d006      	beq.n	800f130 <_ZN15While_statementD1Ev+0x34>
 800f122:	4620      	mov	r0, r4
 800f124:	f7ff ff34 	bl	800ef90 <_ZN4BodyD1Ev>
 800f128:	210c      	movs	r1, #12
 800f12a:	4620      	mov	r0, r4
 800f12c:	f011 f85b 	bl	80201e6 <_ZdlPvj>
}
 800f130:	687b      	ldr	r3, [r7, #4]
 800f132:	4618      	mov	r0, r3
 800f134:	370c      	adds	r7, #12
 800f136:	46bd      	mov	sp, r7
 800f138:	bd90      	pop	{r4, r7, pc}

0800f13a <_ZN12If_statementD1Ev>:

If_statement::~If_statement()
 800f13a:	b590      	push	{r4, r7, lr}
 800f13c:	b08b      	sub	sp, #44	; 0x2c
 800f13e:	af00      	add	r7, sp, #0
 800f140:	6078      	str	r0, [r7, #4]
{
	for (Expression *e : conditions)
 800f142:	687b      	ldr	r3, [r7, #4]
 800f144:	627b      	str	r3, [r7, #36]	; 0x24
 800f146:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800f148:	f7fe fdaa 	bl	800dca0 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 800f14c:	4603      	mov	r3, r0
 800f14e:	617b      	str	r3, [r7, #20]
 800f150:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800f152:	f7fe f909 	bl	800d368 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 800f156:	4603      	mov	r3, r0
 800f158:	613b      	str	r3, [r7, #16]
 800f15a:	f107 0210 	add.w	r2, r7, #16
 800f15e:	f107 0314 	add.w	r3, r7, #20
 800f162:	4611      	mov	r1, r2
 800f164:	4618      	mov	r0, r3
 800f166:	f000 f987 	bl	800f478 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800f16a:	4603      	mov	r3, r0
 800f16c:	2b00      	cmp	r3, #0
 800f16e:	d017      	beq.n	800f1a0 <_ZN12If_statementD1Ev+0x66>
 800f170:	f107 0314 	add.w	r3, r7, #20
 800f174:	4618      	mov	r0, r3
 800f176:	f7fe fdf0 	bl	800dd5a <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 800f17a:	4603      	mov	r3, r0
 800f17c:	681b      	ldr	r3, [r3, #0]
 800f17e:	61bb      	str	r3, [r7, #24]
	{
		delete e;
 800f180:	69bc      	ldr	r4, [r7, #24]
 800f182:	2c00      	cmp	r4, #0
 800f184:	d006      	beq.n	800f194 <_ZN12If_statementD1Ev+0x5a>
 800f186:	4620      	mov	r0, r4
 800f188:	f7f5 fa0f 	bl	80045aa <_ZN10ExpressionD1Ev>
 800f18c:	2114      	movs	r1, #20
 800f18e:	4620      	mov	r0, r4
 800f190:	f011 f829 	bl	80201e6 <_ZdlPvj>
	for (Expression *e : conditions)
 800f194:	f107 0314 	add.w	r3, r7, #20
 800f198:	4618      	mov	r0, r3
 800f19a:	f000 f985 	bl	800f4a8 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>
 800f19e:	e7dc      	b.n	800f15a <_ZN12If_statementD1Ev+0x20>
	}

	for (Body *b : if_bodies)
 800f1a0:	687b      	ldr	r3, [r7, #4]
 800f1a2:	330c      	adds	r3, #12
 800f1a4:	623b      	str	r3, [r7, #32]
 800f1a6:	6a38      	ldr	r0, [r7, #32]
 800f1a8:	f7fe fe50 	bl	800de4c <_ZNSt6vectorIP4BodySaIS1_EE5beginEv>
 800f1ac:	4603      	mov	r3, r0
 800f1ae:	60fb      	str	r3, [r7, #12]
 800f1b0:	6a38      	ldr	r0, [r7, #32]
 800f1b2:	f7fe f9a0 	bl	800d4f6 <_ZNSt6vectorIP4BodySaIS1_EE3endEv>
 800f1b6:	4603      	mov	r3, r0
 800f1b8:	60bb      	str	r3, [r7, #8]
 800f1ba:	f107 0208 	add.w	r2, r7, #8
 800f1be:	f107 030c 	add.w	r3, r7, #12
 800f1c2:	4611      	mov	r1, r2
 800f1c4:	4618      	mov	r0, r3
 800f1c6:	f000 f97f 	bl	800f4c8 <_ZN9__gnu_cxxneIPP4BodySt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800f1ca:	4603      	mov	r3, r0
 800f1cc:	2b00      	cmp	r3, #0
 800f1ce:	d017      	beq.n	800f200 <_ZN12If_statementD1Ev+0xc6>
 800f1d0:	f107 030c 	add.w	r3, r7, #12
 800f1d4:	4618      	mov	r0, r3
 800f1d6:	f7fe feaa 	bl	800df2e <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEdeEv>
 800f1da:	4603      	mov	r3, r0
 800f1dc:	681b      	ldr	r3, [r3, #0]
 800f1de:	61fb      	str	r3, [r7, #28]
	{
		delete b;
 800f1e0:	69fc      	ldr	r4, [r7, #28]
 800f1e2:	2c00      	cmp	r4, #0
 800f1e4:	d006      	beq.n	800f1f4 <_ZN12If_statementD1Ev+0xba>
 800f1e6:	4620      	mov	r0, r4
 800f1e8:	f7ff fed2 	bl	800ef90 <_ZN4BodyD1Ev>
 800f1ec:	210c      	movs	r1, #12
 800f1ee:	4620      	mov	r0, r4
 800f1f0:	f010 fff9 	bl	80201e6 <_ZdlPvj>
	for (Body *b : if_bodies)
 800f1f4:	f107 030c 	add.w	r3, r7, #12
 800f1f8:	4618      	mov	r0, r3
 800f1fa:	f000 f97d 	bl	800f4f8 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEppEv>
 800f1fe:	e7dc      	b.n	800f1ba <_ZN12If_statementD1Ev+0x80>
If_statement::~If_statement()
 800f200:	687b      	ldr	r3, [r7, #4]
 800f202:	330c      	adds	r3, #12
 800f204:	4618      	mov	r0, r3
 800f206:	f000 f91c 	bl	800f442 <_ZNSt6vectorIP4BodySaIS1_EED1Ev>
 800f20a:	687b      	ldr	r3, [r7, #4]
 800f20c:	4618      	mov	r0, r3
 800f20e:	f7f8 fdb5 	bl	8007d7c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
	}
}
 800f212:	687b      	ldr	r3, [r7, #4]
 800f214:	4618      	mov	r0, r3
 800f216:	372c      	adds	r7, #44	; 0x2c
 800f218:	46bd      	mov	sp, r7
 800f21a:	bd90      	pop	{r4, r7, pc}

0800f21c <_ZN13Function_callD1Ev>:

Function_call::~Function_call()
 800f21c:	b590      	push	{r4, r7, lr}
 800f21e:	b087      	sub	sp, #28
 800f220:	af00      	add	r7, sp, #0
 800f222:	6078      	str	r0, [r7, #4]
{
	for (Expression *e : arguments)
 800f224:	687b      	ldr	r3, [r7, #4]
 800f226:	3320      	adds	r3, #32
 800f228:	617b      	str	r3, [r7, #20]
 800f22a:	6978      	ldr	r0, [r7, #20]
 800f22c:	f7fe fd38 	bl	800dca0 <_ZNSt6vectorIP10ExpressionSaIS1_EE5beginEv>
 800f230:	4603      	mov	r3, r0
 800f232:	60fb      	str	r3, [r7, #12]
 800f234:	6978      	ldr	r0, [r7, #20]
 800f236:	f7fe f897 	bl	800d368 <_ZNSt6vectorIP10ExpressionSaIS1_EE3endEv>
 800f23a:	4603      	mov	r3, r0
 800f23c:	60bb      	str	r3, [r7, #8]
 800f23e:	f107 0208 	add.w	r2, r7, #8
 800f242:	f107 030c 	add.w	r3, r7, #12
 800f246:	4611      	mov	r1, r2
 800f248:	4618      	mov	r0, r3
 800f24a:	f000 f915 	bl	800f478 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
 800f24e:	4603      	mov	r3, r0
 800f250:	2b00      	cmp	r3, #0
 800f252:	d017      	beq.n	800f284 <_ZN13Function_callD1Ev+0x68>
 800f254:	f107 030c 	add.w	r3, r7, #12
 800f258:	4618      	mov	r0, r3
 800f25a:	f7fe fd7e 	bl	800dd5a <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEdeEv>
 800f25e:	4603      	mov	r3, r0
 800f260:	681b      	ldr	r3, [r3, #0]
 800f262:	613b      	str	r3, [r7, #16]
	{
		delete e;
 800f264:	693c      	ldr	r4, [r7, #16]
 800f266:	2c00      	cmp	r4, #0
 800f268:	d006      	beq.n	800f278 <_ZN13Function_callD1Ev+0x5c>
 800f26a:	4620      	mov	r0, r4
 800f26c:	f7f5 f99d 	bl	80045aa <_ZN10ExpressionD1Ev>
 800f270:	2114      	movs	r1, #20
 800f272:	4620      	mov	r0, r4
 800f274:	f010 ffb7 	bl	80201e6 <_ZdlPvj>
	for (Expression *e : arguments)
 800f278:	f107 030c 	add.w	r3, r7, #12
 800f27c:	4618      	mov	r0, r3
 800f27e:	f000 f913 	bl	800f4a8 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>
 800f282:	e7dc      	b.n	800f23e <_ZN13Function_callD1Ev+0x22>
Function_call::~Function_call()
 800f284:	687b      	ldr	r3, [r7, #4]
 800f286:	3320      	adds	r3, #32
 800f288:	4618      	mov	r0, r3
 800f28a:	f7f8 fd77 	bl	8007d7c <_ZNSt6vectorIP10ExpressionSaIS1_EED1Ev>
 800f28e:	687b      	ldr	r3, [r7, #4]
 800f290:	3308      	adds	r3, #8
 800f292:	4618      	mov	r0, r3
 800f294:	f011 f98f 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 800f298:	687b      	ldr	r3, [r7, #4]
 800f29a:	4618      	mov	r0, r3
 800f29c:	371c      	adds	r7, #28
 800f29e:	46bd      	mov	sp, r7
 800f2a0:	bd90      	pop	{r4, r7, pc}

0800f2a2 <_ZN11Method_callD1Ev>:

Method_call::~Method_call()
 800f2a2:	b590      	push	{r4, r7, lr}
 800f2a4:	b083      	sub	sp, #12
 800f2a6:	af00      	add	r7, sp, #0
 800f2a8:	6078      	str	r0, [r7, #4]
{
	delete call;
 800f2aa:	687b      	ldr	r3, [r7, #4]
 800f2ac:	6a1c      	ldr	r4, [r3, #32]
 800f2ae:	2c00      	cmp	r4, #0
 800f2b0:	d006      	beq.n	800f2c0 <_ZN11Method_callD1Ev+0x1e>
 800f2b2:	4620      	mov	r0, r4
 800f2b4:	f7ff ffb2 	bl	800f21c <_ZN13Function_callD1Ev>
 800f2b8:	212c      	movs	r1, #44	; 0x2c
 800f2ba:	4620      	mov	r0, r4
 800f2bc:	f010 ff93 	bl	80201e6 <_ZdlPvj>
Method_call::~Method_call()
 800f2c0:	687b      	ldr	r3, [r7, #4]
 800f2c2:	3308      	adds	r3, #8
 800f2c4:	4618      	mov	r0, r3
 800f2c6:	f011 f976 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800f2ca:	687b      	ldr	r3, [r7, #4]
 800f2cc:	4618      	mov	r0, r3
 800f2ce:	370c      	adds	r7, #12
 800f2d0:	46bd      	mov	sp, r7
 800f2d2:	bd90      	pop	{r4, r7, pc}

0800f2d4 <_ZN10AssignmentD1Ev>:

Assignment::~Assignment()
 800f2d4:	b590      	push	{r4, r7, lr}
 800f2d6:	b083      	sub	sp, #12
 800f2d8:	af00      	add	r7, sp, #0
 800f2da:	6078      	str	r0, [r7, #4]
{
	delete value;
 800f2dc:	687b      	ldr	r3, [r7, #4]
 800f2de:	685c      	ldr	r4, [r3, #4]
 800f2e0:	2c00      	cmp	r4, #0
 800f2e2:	d006      	beq.n	800f2f2 <_ZN10AssignmentD1Ev+0x1e>
 800f2e4:	4620      	mov	r0, r4
 800f2e6:	f7f5 f960 	bl	80045aa <_ZN10ExpressionD1Ev>
 800f2ea:	2114      	movs	r1, #20
 800f2ec:	4620      	mov	r0, r4
 800f2ee:	f010 ff7a 	bl	80201e6 <_ZdlPvj>
	delete var;
 800f2f2:	687b      	ldr	r3, [r7, #4]
 800f2f4:	681c      	ldr	r4, [r3, #0]
 800f2f6:	2c00      	cmp	r4, #0
 800f2f8:	d006      	beq.n	800f308 <_ZN10AssignmentD1Ev+0x34>
 800f2fa:	4620      	mov	r0, r4
 800f2fc:	f000 f809 	bl	800f312 <_ZN8VariableD1Ev>
 800f300:	2120      	movs	r1, #32
 800f302:	4620      	mov	r0, r4
 800f304:	f010 ff6f 	bl	80201e6 <_ZdlPvj>
}
 800f308:	687b      	ldr	r3, [r7, #4]
 800f30a:	4618      	mov	r0, r3
 800f30c:	370c      	adds	r7, #12
 800f30e:	46bd      	mov	sp, r7
 800f310:	bd90      	pop	{r4, r7, pc}

0800f312 <_ZN8VariableD1Ev>:

Variable::~Variable()
 800f312:	b590      	push	{r4, r7, lr}
 800f314:	b083      	sub	sp, #12
 800f316:	af00      	add	r7, sp, #0
 800f318:	6078      	str	r0, [r7, #4]
{
	delete index;
 800f31a:	687b      	ldr	r3, [r7, #4]
 800f31c:	69dc      	ldr	r4, [r3, #28]
 800f31e:	2c00      	cmp	r4, #0
 800f320:	d006      	beq.n	800f330 <_ZN8VariableD1Ev+0x1e>
 800f322:	4620      	mov	r0, r4
 800f324:	f7f5 f941 	bl	80045aa <_ZN10ExpressionD1Ev>
 800f328:	2114      	movs	r1, #20
 800f32a:	4620      	mov	r0, r4
 800f32c:	f010 ff5b 	bl	80201e6 <_ZdlPvj>
Variable::~Variable()
 800f330:	687b      	ldr	r3, [r7, #4]
 800f332:	3304      	adds	r3, #4
 800f334:	4618      	mov	r0, r3
 800f336:	f011 f93e 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800f33a:	687b      	ldr	r3, [r7, #4]
 800f33c:	4618      	mov	r0, r3
 800f33e:	370c      	adds	r7, #12
 800f340:	46bd      	mov	sp, r7
 800f342:	bd90      	pop	{r4, r7, pc}

0800f344 <_ZNSt6vectorIP9StatementSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800f344:	b5b0      	push	{r4, r5, r7, lr}
 800f346:	b082      	sub	sp, #8
 800f348:	af00      	add	r7, sp, #0
 800f34a:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800f34c:	687b      	ldr	r3, [r7, #4]
 800f34e:	681c      	ldr	r4, [r3, #0]
 800f350:	687b      	ldr	r3, [r7, #4]
 800f352:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800f354:	687b      	ldr	r3, [r7, #4]
 800f356:	4618      	mov	r0, r3
 800f358:	f7fd ff07 	bl	800d16a <_ZNSt12_Vector_baseIP9StatementSaIS1_EE19_M_get_Tp_allocatorEv>
 800f35c:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800f35e:	461a      	mov	r2, r3
 800f360:	4629      	mov	r1, r5
 800f362:	4620      	mov	r0, r4
 800f364:	f000 f8fd 	bl	800f562 <_ZSt8_DestroyIPP9StatementS1_EvT_S3_RSaIT0_E>
      }
 800f368:	687b      	ldr	r3, [r7, #4]
 800f36a:	4618      	mov	r0, r3
 800f36c:	f000 f8e0 	bl	800f530 <_ZNSt12_Vector_baseIP9StatementSaIS1_EED1Ev>
 800f370:	687b      	ldr	r3, [r7, #4]
 800f372:	4618      	mov	r0, r3
 800f374:	3708      	adds	r7, #8
 800f376:	46bd      	mov	sp, r7
 800f378:	bdb0      	pop	{r4, r5, r7, pc}

0800f37a <_ZN9__gnu_cxxneIPP9StatementSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800f37a:	b590      	push	{r4, r7, lr}
 800f37c:	b083      	sub	sp, #12
 800f37e:	af00      	add	r7, sp, #0
 800f380:	6078      	str	r0, [r7, #4]
 800f382:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800f384:	6878      	ldr	r0, [r7, #4]
 800f386:	f7fe feec 	bl	800e162 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 800f38a:	4603      	mov	r3, r0
 800f38c:	681c      	ldr	r4, [r3, #0]
 800f38e:	6838      	ldr	r0, [r7, #0]
 800f390:	f7fe fee7 	bl	800e162 <_ZNK9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEE4baseEv>
 800f394:	4603      	mov	r3, r0
 800f396:	681b      	ldr	r3, [r3, #0]
 800f398:	429c      	cmp	r4, r3
 800f39a:	bf14      	ite	ne
 800f39c:	2301      	movne	r3, #1
 800f39e:	2300      	moveq	r3, #0
 800f3a0:	b2db      	uxtb	r3, r3
 800f3a2:	4618      	mov	r0, r3
 800f3a4:	370c      	adds	r7, #12
 800f3a6:	46bd      	mov	sp, r7
 800f3a8:	bd90      	pop	{r4, r7, pc}

0800f3aa <_ZN9__gnu_cxx17__normal_iteratorIPP9StatementSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800f3aa:	b480      	push	{r7}
 800f3ac:	b083      	sub	sp, #12
 800f3ae:	af00      	add	r7, sp, #0
 800f3b0:	6078      	str	r0, [r7, #4]
	++_M_current;
 800f3b2:	687b      	ldr	r3, [r7, #4]
 800f3b4:	681b      	ldr	r3, [r3, #0]
 800f3b6:	1d1a      	adds	r2, r3, #4
 800f3b8:	687b      	ldr	r3, [r7, #4]
 800f3ba:	601a      	str	r2, [r3, #0]
	return *this;
 800f3bc:	687b      	ldr	r3, [r7, #4]
      }
 800f3be:	4618      	mov	r0, r3
 800f3c0:	370c      	adds	r7, #12
 800f3c2:	46bd      	mov	sp, r7
 800f3c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3c8:	4770      	bx	lr

0800f3ca <_ZSt3getIP10AssignmentJS1_P13Function_callP11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800f3ca:	b580      	push	{r7, lr}
 800f3cc:	b082      	sub	sp, #8
 800f3ce:	af00      	add	r7, sp, #0
 800f3d0:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800f3d2:	6878      	ldr	r0, [r7, #4]
 800f3d4:	f7fd fce4 	bl	800cda0 <_ZSt3getILj0EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800f3d8:	4603      	mov	r3, r0
    }
 800f3da:	4618      	mov	r0, r3
 800f3dc:	3708      	adds	r7, #8
 800f3de:	46bd      	mov	sp, r7
 800f3e0:	bd80      	pop	{r7, pc}

0800f3e2 <_ZSt3getIP13Function_callJP10AssignmentS1_P11Method_callP15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800f3e2:	b580      	push	{r7, lr}
 800f3e4:	b082      	sub	sp, #8
 800f3e6:	af00      	add	r7, sp, #0
 800f3e8:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800f3ea:	6878      	ldr	r0, [r7, #4]
 800f3ec:	f7fd fbf0 	bl	800cbd0 <_ZSt3getILj1EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800f3f0:	4603      	mov	r3, r0
    }
 800f3f2:	4618      	mov	r0, r3
 800f3f4:	3708      	adds	r7, #8
 800f3f6:	46bd      	mov	sp, r7
 800f3f8:	bd80      	pop	{r7, pc}

0800f3fa <_ZSt3getIP11Method_callJP10AssignmentP13Function_callS1_P15While_statementP12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800f3fa:	b580      	push	{r7, lr}
 800f3fc:	b082      	sub	sp, #8
 800f3fe:	af00      	add	r7, sp, #0
 800f400:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800f402:	6878      	ldr	r0, [r7, #4]
 800f404:	f7fd fc6a 	bl	800ccdc <_ZSt3getILj2EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800f408:	4603      	mov	r3, r0
    }
 800f40a:	4618      	mov	r0, r3
 800f40c:	3708      	adds	r7, #8
 800f40e:	46bd      	mov	sp, r7
 800f410:	bd80      	pop	{r7, pc}

0800f412 <_ZSt3getIP15While_statementJP10AssignmentP13Function_callP11Method_callS1_P12If_statementEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800f412:	b580      	push	{r7, lr}
 800f414:	b082      	sub	sp, #8
 800f416:	af00      	add	r7, sp, #0
 800f418:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800f41a:	6878      	ldr	r0, [r7, #4]
 800f41c:	f7fd fd88 	bl	800cf30 <_ZSt3getILj3EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800f420:	4603      	mov	r3, r0
    }
 800f422:	4618      	mov	r0, r3
 800f424:	3708      	adds	r7, #8
 800f426:	46bd      	mov	sp, r7
 800f428:	bd80      	pop	{r7, pc}

0800f42a <_ZSt3getIP12If_statementJP10AssignmentP13Function_callP11Method_callP15While_statementS1_EERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 800f42a:	b580      	push	{r7, lr}
 800f42c:	b082      	sub	sp, #8
 800f42e:	af00      	add	r7, sp, #0
 800f430:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 800f432:	6878      	ldr	r0, [r7, #4]
 800f434:	f7fd fe26 	bl	800d084 <_ZSt3getILj4EJP10AssignmentP13Function_callP11Method_callP15While_statementP12If_statementEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 800f438:	4603      	mov	r3, r0
    }
 800f43a:	4618      	mov	r0, r3
 800f43c:	3708      	adds	r7, #8
 800f43e:	46bd      	mov	sp, r7
 800f440:	bd80      	pop	{r7, pc}

0800f442 <_ZNSt6vectorIP4BodySaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 800f442:	b5b0      	push	{r4, r5, r7, lr}
 800f444:	b082      	sub	sp, #8
 800f446:	af00      	add	r7, sp, #0
 800f448:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800f44a:	687b      	ldr	r3, [r7, #4]
 800f44c:	681c      	ldr	r4, [r3, #0]
 800f44e:	687b      	ldr	r3, [r7, #4]
 800f450:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800f452:	687b      	ldr	r3, [r7, #4]
 800f454:	4618      	mov	r0, r3
 800f456:	f7fd fb7c 	bl	800cb52 <_ZNSt12_Vector_baseIP4BodySaIS1_EE19_M_get_Tp_allocatorEv>
 800f45a:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800f45c:	461a      	mov	r2, r3
 800f45e:	4629      	mov	r1, r5
 800f460:	4620      	mov	r0, r4
 800f462:	f000 f8b1 	bl	800f5c8 <_ZSt8_DestroyIPP4BodyS1_EvT_S3_RSaIT0_E>
      }
 800f466:	687b      	ldr	r3, [r7, #4]
 800f468:	4618      	mov	r0, r3
 800f46a:	f000 f894 	bl	800f596 <_ZNSt12_Vector_baseIP4BodySaIS1_EED1Ev>
 800f46e:	687b      	ldr	r3, [r7, #4]
 800f470:	4618      	mov	r0, r3
 800f472:	3708      	adds	r7, #8
 800f474:	46bd      	mov	sp, r7
 800f476:	bdb0      	pop	{r4, r5, r7, pc}

0800f478 <_ZN9__gnu_cxxneIPP10ExpressionSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800f478:	b590      	push	{r4, r7, lr}
 800f47a:	b083      	sub	sp, #12
 800f47c:	af00      	add	r7, sp, #0
 800f47e:	6078      	str	r0, [r7, #4]
 800f480:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800f482:	6878      	ldr	r0, [r7, #4]
 800f484:	f7fe fc45 	bl	800dd12 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800f488:	4603      	mov	r3, r0
 800f48a:	681c      	ldr	r4, [r3, #0]
 800f48c:	6838      	ldr	r0, [r7, #0]
 800f48e:	f7fe fc40 	bl	800dd12 <_ZNK9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEE4baseEv>
 800f492:	4603      	mov	r3, r0
 800f494:	681b      	ldr	r3, [r3, #0]
 800f496:	429c      	cmp	r4, r3
 800f498:	bf14      	ite	ne
 800f49a:	2301      	movne	r3, #1
 800f49c:	2300      	moveq	r3, #0
 800f49e:	b2db      	uxtb	r3, r3
 800f4a0:	4618      	mov	r0, r3
 800f4a2:	370c      	adds	r7, #12
 800f4a4:	46bd      	mov	sp, r7
 800f4a6:	bd90      	pop	{r4, r7, pc}

0800f4a8 <_ZN9__gnu_cxx17__normal_iteratorIPP10ExpressionSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800f4a8:	b480      	push	{r7}
 800f4aa:	b083      	sub	sp, #12
 800f4ac:	af00      	add	r7, sp, #0
 800f4ae:	6078      	str	r0, [r7, #4]
	++_M_current;
 800f4b0:	687b      	ldr	r3, [r7, #4]
 800f4b2:	681b      	ldr	r3, [r3, #0]
 800f4b4:	1d1a      	adds	r2, r3, #4
 800f4b6:	687b      	ldr	r3, [r7, #4]
 800f4b8:	601a      	str	r2, [r3, #0]
	return *this;
 800f4ba:	687b      	ldr	r3, [r7, #4]
      }
 800f4bc:	4618      	mov	r0, r3
 800f4be:	370c      	adds	r7, #12
 800f4c0:	46bd      	mov	sp, r7
 800f4c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4c6:	4770      	bx	lr

0800f4c8 <_ZN9__gnu_cxxneIPP4BodySt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 800f4c8:	b590      	push	{r4, r7, lr}
 800f4ca:	b083      	sub	sp, #12
 800f4cc:	af00      	add	r7, sp, #0
 800f4ce:	6078      	str	r0, [r7, #4]
 800f4d0:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 800f4d2:	6878      	ldr	r0, [r7, #4]
 800f4d4:	f7fe fd07 	bl	800dee6 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 800f4d8:	4603      	mov	r3, r0
 800f4da:	681c      	ldr	r4, [r3, #0]
 800f4dc:	6838      	ldr	r0, [r7, #0]
 800f4de:	f7fe fd02 	bl	800dee6 <_ZNK9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEE4baseEv>
 800f4e2:	4603      	mov	r3, r0
 800f4e4:	681b      	ldr	r3, [r3, #0]
 800f4e6:	429c      	cmp	r4, r3
 800f4e8:	bf14      	ite	ne
 800f4ea:	2301      	movne	r3, #1
 800f4ec:	2300      	moveq	r3, #0
 800f4ee:	b2db      	uxtb	r3, r3
 800f4f0:	4618      	mov	r0, r3
 800f4f2:	370c      	adds	r7, #12
 800f4f4:	46bd      	mov	sp, r7
 800f4f6:	bd90      	pop	{r4, r7, pc}

0800f4f8 <_ZN9__gnu_cxx17__normal_iteratorIPP4BodySt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 800f4f8:	b480      	push	{r7}
 800f4fa:	b083      	sub	sp, #12
 800f4fc:	af00      	add	r7, sp, #0
 800f4fe:	6078      	str	r0, [r7, #4]
	++_M_current;
 800f500:	687b      	ldr	r3, [r7, #4]
 800f502:	681b      	ldr	r3, [r3, #0]
 800f504:	1d1a      	adds	r2, r3, #4
 800f506:	687b      	ldr	r3, [r7, #4]
 800f508:	601a      	str	r2, [r3, #0]
	return *this;
 800f50a:	687b      	ldr	r3, [r7, #4]
      }
 800f50c:	4618      	mov	r0, r3
 800f50e:	370c      	adds	r7, #12
 800f510:	46bd      	mov	sp, r7
 800f512:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f516:	4770      	bx	lr

0800f518 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800f518:	b580      	push	{r7, lr}
 800f51a:	b082      	sub	sp, #8
 800f51c:	af00      	add	r7, sp, #0
 800f51e:	6078      	str	r0, [r7, #4]
 800f520:	6878      	ldr	r0, [r7, #4]
 800f522:	f000 f85f 	bl	800f5e4 <_ZNSaIP9StatementED1Ev>
 800f526:	687b      	ldr	r3, [r7, #4]
 800f528:	4618      	mov	r0, r3
 800f52a:	3708      	adds	r7, #8
 800f52c:	46bd      	mov	sp, r7
 800f52e:	bd80      	pop	{r7, pc}

0800f530 <_ZNSt12_Vector_baseIP9StatementSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800f530:	b580      	push	{r7, lr}
 800f532:	b082      	sub	sp, #8
 800f534:	af00      	add	r7, sp, #0
 800f536:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800f538:	687b      	ldr	r3, [r7, #4]
 800f53a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800f53c:	687b      	ldr	r3, [r7, #4]
 800f53e:	689a      	ldr	r2, [r3, #8]
 800f540:	687b      	ldr	r3, [r7, #4]
 800f542:	681b      	ldr	r3, [r3, #0]
 800f544:	1ad3      	subs	r3, r2, r3
 800f546:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800f548:	461a      	mov	r2, r3
 800f54a:	6878      	ldr	r0, [r7, #4]
 800f54c:	f7fd fdfa 	bl	800d144 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE13_M_deallocateEPS1_j>
      }
 800f550:	687b      	ldr	r3, [r7, #4]
 800f552:	4618      	mov	r0, r3
 800f554:	f7ff ffe0 	bl	800f518 <_ZNSt12_Vector_baseIP9StatementSaIS1_EE12_Vector_implD1Ev>
 800f558:	687b      	ldr	r3, [r7, #4]
 800f55a:	4618      	mov	r0, r3
 800f55c:	3708      	adds	r7, #8
 800f55e:	46bd      	mov	sp, r7
 800f560:	bd80      	pop	{r7, pc}

0800f562 <_ZSt8_DestroyIPP9StatementS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800f562:	b580      	push	{r7, lr}
 800f564:	b084      	sub	sp, #16
 800f566:	af00      	add	r7, sp, #0
 800f568:	60f8      	str	r0, [r7, #12]
 800f56a:	60b9      	str	r1, [r7, #8]
 800f56c:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800f56e:	68b9      	ldr	r1, [r7, #8]
 800f570:	68f8      	ldr	r0, [r7, #12]
 800f572:	f000 f843 	bl	800f5fc <_ZSt8_DestroyIPP9StatementEvT_S3_>
    }
 800f576:	bf00      	nop
 800f578:	3710      	adds	r7, #16
 800f57a:	46bd      	mov	sp, r7
 800f57c:	bd80      	pop	{r7, pc}

0800f57e <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 800f57e:	b580      	push	{r7, lr}
 800f580:	b082      	sub	sp, #8
 800f582:	af00      	add	r7, sp, #0
 800f584:	6078      	str	r0, [r7, #4]
 800f586:	6878      	ldr	r0, [r7, #4]
 800f588:	f000 f845 	bl	800f616 <_ZNSaIP4BodyED1Ev>
 800f58c:	687b      	ldr	r3, [r7, #4]
 800f58e:	4618      	mov	r0, r3
 800f590:	3708      	adds	r7, #8
 800f592:	46bd      	mov	sp, r7
 800f594:	bd80      	pop	{r7, pc}

0800f596 <_ZNSt12_Vector_baseIP4BodySaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 800f596:	b580      	push	{r7, lr}
 800f598:	b082      	sub	sp, #8
 800f59a:	af00      	add	r7, sp, #0
 800f59c:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 800f59e:	687b      	ldr	r3, [r7, #4]
 800f5a0:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800f5a2:	687b      	ldr	r3, [r7, #4]
 800f5a4:	689a      	ldr	r2, [r3, #8]
 800f5a6:	687b      	ldr	r3, [r7, #4]
 800f5a8:	681b      	ldr	r3, [r3, #0]
 800f5aa:	1ad3      	subs	r3, r2, r3
 800f5ac:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 800f5ae:	461a      	mov	r2, r3
 800f5b0:	6878      	ldr	r0, [r7, #4]
 800f5b2:	f7fd fabb 	bl	800cb2c <_ZNSt12_Vector_baseIP4BodySaIS1_EE13_M_deallocateEPS1_j>
      }
 800f5b6:	687b      	ldr	r3, [r7, #4]
 800f5b8:	4618      	mov	r0, r3
 800f5ba:	f7ff ffe0 	bl	800f57e <_ZNSt12_Vector_baseIP4BodySaIS1_EE12_Vector_implD1Ev>
 800f5be:	687b      	ldr	r3, [r7, #4]
 800f5c0:	4618      	mov	r0, r3
 800f5c2:	3708      	adds	r7, #8
 800f5c4:	46bd      	mov	sp, r7
 800f5c6:	bd80      	pop	{r7, pc}

0800f5c8 <_ZSt8_DestroyIPP4BodyS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800f5c8:	b580      	push	{r7, lr}
 800f5ca:	b084      	sub	sp, #16
 800f5cc:	af00      	add	r7, sp, #0
 800f5ce:	60f8      	str	r0, [r7, #12]
 800f5d0:	60b9      	str	r1, [r7, #8]
 800f5d2:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 800f5d4:	68b9      	ldr	r1, [r7, #8]
 800f5d6:	68f8      	ldr	r0, [r7, #12]
 800f5d8:	f000 f829 	bl	800f62e <_ZSt8_DestroyIPP4BodyEvT_S3_>
    }
 800f5dc:	bf00      	nop
 800f5de:	3710      	adds	r7, #16
 800f5e0:	46bd      	mov	sp, r7
 800f5e2:	bd80      	pop	{r7, pc}

0800f5e4 <_ZNSaIP9StatementED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 800f5e4:	b580      	push	{r7, lr}
 800f5e6:	b082      	sub	sp, #8
 800f5e8:	af00      	add	r7, sp, #0
 800f5ea:	6078      	str	r0, [r7, #4]
 800f5ec:	6878      	ldr	r0, [r7, #4]
 800f5ee:	f000 f82b 	bl	800f648 <_ZN9__gnu_cxx13new_allocatorIP9StatementED1Ev>
 800f5f2:	687b      	ldr	r3, [r7, #4]
 800f5f4:	4618      	mov	r0, r3
 800f5f6:	3708      	adds	r7, #8
 800f5f8:	46bd      	mov	sp, r7
 800f5fa:	bd80      	pop	{r7, pc}

0800f5fc <_ZSt8_DestroyIPP9StatementEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800f5fc:	b580      	push	{r7, lr}
 800f5fe:	b082      	sub	sp, #8
 800f600:	af00      	add	r7, sp, #0
 800f602:	6078      	str	r0, [r7, #4]
 800f604:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800f606:	6839      	ldr	r1, [r7, #0]
 800f608:	6878      	ldr	r0, [r7, #4]
 800f60a:	f000 f828 	bl	800f65e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9StatementEEvT_S5_>
    }
 800f60e:	bf00      	nop
 800f610:	3708      	adds	r7, #8
 800f612:	46bd      	mov	sp, r7
 800f614:	bd80      	pop	{r7, pc}

0800f616 <_ZNSaIP4BodyED1Ev>:
 800f616:	b580      	push	{r7, lr}
 800f618:	b082      	sub	sp, #8
 800f61a:	af00      	add	r7, sp, #0
 800f61c:	6078      	str	r0, [r7, #4]
 800f61e:	6878      	ldr	r0, [r7, #4]
 800f620:	f000 f828 	bl	800f674 <_ZN9__gnu_cxx13new_allocatorIP4BodyED1Ev>
 800f624:	687b      	ldr	r3, [r7, #4]
 800f626:	4618      	mov	r0, r3
 800f628:	3708      	adds	r7, #8
 800f62a:	46bd      	mov	sp, r7
 800f62c:	bd80      	pop	{r7, pc}

0800f62e <_ZSt8_DestroyIPP4BodyEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800f62e:	b580      	push	{r7, lr}
 800f630:	b082      	sub	sp, #8
 800f632:	af00      	add	r7, sp, #0
 800f634:	6078      	str	r0, [r7, #4]
 800f636:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 800f638:	6839      	ldr	r1, [r7, #0]
 800f63a:	6878      	ldr	r0, [r7, #4]
 800f63c:	f000 f825 	bl	800f68a <_ZNSt12_Destroy_auxILb1EE9__destroyIPP4BodyEEvT_S5_>
    }
 800f640:	bf00      	nop
 800f642:	3708      	adds	r7, #8
 800f644:	46bd      	mov	sp, r7
 800f646:	bd80      	pop	{r7, pc}

0800f648 <_ZN9__gnu_cxx13new_allocatorIP9StatementED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800f648:	b480      	push	{r7}
 800f64a:	b083      	sub	sp, #12
 800f64c:	af00      	add	r7, sp, #0
 800f64e:	6078      	str	r0, [r7, #4]
 800f650:	687b      	ldr	r3, [r7, #4]
 800f652:	4618      	mov	r0, r3
 800f654:	370c      	adds	r7, #12
 800f656:	46bd      	mov	sp, r7
 800f658:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f65c:	4770      	bx	lr

0800f65e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9StatementEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 800f65e:	b480      	push	{r7}
 800f660:	b083      	sub	sp, #12
 800f662:	af00      	add	r7, sp, #0
 800f664:	6078      	str	r0, [r7, #4]
 800f666:	6039      	str	r1, [r7, #0]
 800f668:	bf00      	nop
 800f66a:	370c      	adds	r7, #12
 800f66c:	46bd      	mov	sp, r7
 800f66e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f672:	4770      	bx	lr

0800f674 <_ZN9__gnu_cxx13new_allocatorIP4BodyED1Ev>:
 800f674:	b480      	push	{r7}
 800f676:	b083      	sub	sp, #12
 800f678:	af00      	add	r7, sp, #0
 800f67a:	6078      	str	r0, [r7, #4]
 800f67c:	687b      	ldr	r3, [r7, #4]
 800f67e:	4618      	mov	r0, r3
 800f680:	370c      	adds	r7, #12
 800f682:	46bd      	mov	sp, r7
 800f684:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f688:	4770      	bx	lr

0800f68a <_ZNSt12_Destroy_auxILb1EE9__destroyIPP4BodyEEvT_S5_>:
 800f68a:	b480      	push	{r7}
 800f68c:	b083      	sub	sp, #12
 800f68e:	af00      	add	r7, sp, #0
 800f690:	6078      	str	r0, [r7, #4]
 800f692:	6039      	str	r1, [r7, #0]
 800f694:	bf00      	nop
 800f696:	370c      	adds	r7, #12
 800f698:	46bd      	mov	sp, r7
 800f69a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f69e:	4770      	bx	lr

0800f6a0 <_Z41__static_initialization_and_destruction_0ii>:
 800f6a0:	b590      	push	{r4, r7, lr}
 800f6a2:	b0e7      	sub	sp, #412	; 0x19c
 800f6a4:	af02      	add	r7, sp, #8
 800f6a6:	1d3b      	adds	r3, r7, #4
 800f6a8:	6018      	str	r0, [r3, #0]
 800f6aa:	463b      	mov	r3, r7
 800f6ac:	6019      	str	r1, [r3, #0]
 800f6ae:	1d3b      	adds	r3, r7, #4
 800f6b0:	681b      	ldr	r3, [r3, #0]
 800f6b2:	2b01      	cmp	r3, #1
 800f6b4:	f040 819d 	bne.w	800f9f2 <_Z41__static_initialization_and_destruction_0ii+0x352>
 800f6b8:	463b      	mov	r3, r7
 800f6ba:	681b      	ldr	r3, [r3, #0]
 800f6bc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f6c0:	4293      	cmp	r3, r2
 800f6c2:	f040 8196 	bne.w	800f9f2 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 800f6c6:	f107 0314 	add.w	r3, r7, #20
 800f6ca:	4618      	mov	r0, r3
 800f6cc:	2322      	movs	r3, #34	; 0x22
 800f6ce:	461a      	mov	r2, r3
 800f6d0:	2100      	movs	r1, #0
 800f6d2:	f012 f91b 	bl	802190c <memset>
 800f6d6:	f107 0314 	add.w	r3, r7, #20
 800f6da:	223a      	movs	r2, #58	; 0x3a
 800f6dc:	701a      	strb	r2, [r3, #0]
 800f6de:	f107 0314 	add.w	r3, r7, #20
 800f6e2:	2201      	movs	r2, #1
 800f6e4:	705a      	strb	r2, [r3, #1]
 800f6e6:	f107 0314 	add.w	r3, r7, #20
 800f6ea:	220a      	movs	r2, #10
 800f6ec:	709a      	strb	r2, [r3, #2]
 800f6ee:	f107 0314 	add.w	r3, r7, #20
 800f6f2:	220a      	movs	r2, #10
 800f6f4:	70da      	strb	r2, [r3, #3]
 800f6f6:	f107 0314 	add.w	r3, r7, #20
 800f6fa:	222c      	movs	r2, #44	; 0x2c
 800f6fc:	711a      	strb	r2, [r3, #4]
 800f6fe:	f107 0314 	add.w	r3, r7, #20
 800f702:	220c      	movs	r2, #12
 800f704:	715a      	strb	r2, [r3, #5]
 800f706:	f107 0314 	add.w	r3, r7, #20
 800f70a:	222e      	movs	r2, #46	; 0x2e
 800f70c:	719a      	strb	r2, [r3, #6]
 800f70e:	f107 0314 	add.w	r3, r7, #20
 800f712:	220b      	movs	r2, #11
 800f714:	71da      	strb	r2, [r3, #7]
 800f716:	f107 0314 	add.w	r3, r7, #20
 800f71a:	225b      	movs	r2, #91	; 0x5b
 800f71c:	721a      	strb	r2, [r3, #8]
 800f71e:	f107 0314 	add.w	r3, r7, #20
 800f722:	220d      	movs	r2, #13
 800f724:	725a      	strb	r2, [r3, #9]
 800f726:	f107 0314 	add.w	r3, r7, #20
 800f72a:	225d      	movs	r2, #93	; 0x5d
 800f72c:	729a      	strb	r2, [r3, #10]
 800f72e:	f107 0314 	add.w	r3, r7, #20
 800f732:	220e      	movs	r2, #14
 800f734:	72da      	strb	r2, [r3, #11]
 800f736:	f107 0314 	add.w	r3, r7, #20
 800f73a:	227c      	movs	r2, #124	; 0x7c
 800f73c:	731a      	strb	r2, [r3, #12]
 800f73e:	f107 0314 	add.w	r3, r7, #20
 800f742:	2215      	movs	r2, #21
 800f744:	735a      	strb	r2, [r3, #13]
 800f746:	f107 0314 	add.w	r3, r7, #20
 800f74a:	2226      	movs	r2, #38	; 0x26
 800f74c:	739a      	strb	r2, [r3, #14]
 800f74e:	f107 0314 	add.w	r3, r7, #20
 800f752:	2216      	movs	r2, #22
 800f754:	73da      	strb	r2, [r3, #15]
 800f756:	f107 0314 	add.w	r3, r7, #20
 800f75a:	222b      	movs	r2, #43	; 0x2b
 800f75c:	741a      	strb	r2, [r3, #16]
 800f75e:	f107 0314 	add.w	r3, r7, #20
 800f762:	221f      	movs	r2, #31
 800f764:	745a      	strb	r2, [r3, #17]
 800f766:	f107 0314 	add.w	r3, r7, #20
 800f76a:	222d      	movs	r2, #45	; 0x2d
 800f76c:	749a      	strb	r2, [r3, #18]
 800f76e:	f107 0314 	add.w	r3, r7, #20
 800f772:	2220      	movs	r2, #32
 800f774:	74da      	strb	r2, [r3, #19]
 800f776:	f107 0314 	add.w	r3, r7, #20
 800f77a:	222a      	movs	r2, #42	; 0x2a
 800f77c:	751a      	strb	r2, [r3, #20]
 800f77e:	f107 0314 	add.w	r3, r7, #20
 800f782:	2221      	movs	r2, #33	; 0x21
 800f784:	755a      	strb	r2, [r3, #21]
 800f786:	f107 0314 	add.w	r3, r7, #20
 800f78a:	222f      	movs	r2, #47	; 0x2f
 800f78c:	759a      	strb	r2, [r3, #22]
 800f78e:	f107 0314 	add.w	r3, r7, #20
 800f792:	2222      	movs	r2, #34	; 0x22
 800f794:	75da      	strb	r2, [r3, #23]
 800f796:	f107 0314 	add.w	r3, r7, #20
 800f79a:	225e      	movs	r2, #94	; 0x5e
 800f79c:	761a      	strb	r2, [r3, #24]
 800f79e:	f107 0314 	add.w	r3, r7, #20
 800f7a2:	2223      	movs	r2, #35	; 0x23
 800f7a4:	765a      	strb	r2, [r3, #25]
 800f7a6:	f107 0314 	add.w	r3, r7, #20
 800f7aa:	2225      	movs	r2, #37	; 0x25
 800f7ac:	769a      	strb	r2, [r3, #26]
 800f7ae:	f107 0314 	add.w	r3, r7, #20
 800f7b2:	2224      	movs	r2, #36	; 0x24
 800f7b4:	76da      	strb	r2, [r3, #27]
 800f7b6:	f107 0314 	add.w	r3, r7, #20
 800f7ba:	2228      	movs	r2, #40	; 0x28
 800f7bc:	771a      	strb	r2, [r3, #28]
 800f7be:	f107 0314 	add.w	r3, r7, #20
 800f7c2:	2226      	movs	r2, #38	; 0x26
 800f7c4:	775a      	strb	r2, [r3, #29]
 800f7c6:	f107 0314 	add.w	r3, r7, #20
 800f7ca:	2229      	movs	r2, #41	; 0x29
 800f7cc:	779a      	strb	r2, [r3, #30]
 800f7ce:	f107 0314 	add.w	r3, r7, #20
 800f7d2:	2227      	movs	r2, #39	; 0x27
 800f7d4:	77da      	strb	r2, [r3, #31]
 800f7d6:	f107 0314 	add.w	r3, r7, #20
 800f7da:	2225      	movs	r2, #37	; 0x25
 800f7dc:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800f7e0:	f107 030c 	add.w	r3, r7, #12
 800f7e4:	f107 0214 	add.w	r2, r7, #20
 800f7e8:	601a      	str	r2, [r3, #0]
 800f7ea:	f107 030c 	add.w	r3, r7, #12
 800f7ee:	2211      	movs	r2, #17
 800f7f0:	605a      	str	r2, [r3, #4]
 800f7f2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800f7f6:	4618      	mov	r0, r3
 800f7f8:	f7f1 fd74 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 800f7fc:	f107 0138 	add.w	r1, r7, #56	; 0x38
 800f800:	f107 020c 	add.w	r2, r7, #12
 800f804:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800f808:	9300      	str	r3, [sp, #0]
 800f80a:	460b      	mov	r3, r1
 800f80c:	ca06      	ldmia	r2, {r1, r2}
 800f80e:	4885      	ldr	r0, [pc, #532]	; (800fa24 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800f810:	f7f1 fd80 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800f814:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800f818:	4618      	mov	r0, r3
 800f81a:	f7f1 fd6f 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 800f81e:	2305      	movs	r3, #5
 800f820:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 800f824:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 800f828:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f82c:	497e      	ldr	r1, [pc, #504]	; (800fa28 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 800f82e:	4618      	mov	r0, r3
 800f830:	f7f1 fc5c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 800f834:	2306      	movs	r3, #6
 800f836:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 800f83a:	f207 1263 	addw	r2, r7, #355	; 0x163
 800f83e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f842:	331c      	adds	r3, #28
 800f844:	4979      	ldr	r1, [pc, #484]	; (800fa2c <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 800f846:	4618      	mov	r0, r3
 800f848:	f7f1 fc78 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 800f84c:	2307      	movs	r3, #7
 800f84e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 800f852:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 800f856:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f85a:	3338      	adds	r3, #56	; 0x38
 800f85c:	4974      	ldr	r1, [pc, #464]	; (800fa30 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 800f85e:	4618      	mov	r0, r3
 800f860:	f7f1 fc6c 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 800f864:	2308      	movs	r3, #8
 800f866:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 800f86a:	f207 1265 	addw	r2, r7, #357	; 0x165
 800f86e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f872:	3354      	adds	r3, #84	; 0x54
 800f874:	496f      	ldr	r1, [pc, #444]	; (800fa34 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 800f876:	4618      	mov	r0, r3
 800f878:	f7f1 fc38 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 800f87c:	2309      	movs	r3, #9
 800f87e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 800f882:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 800f886:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f88a:	3370      	adds	r3, #112	; 0x70
 800f88c:	496a      	ldr	r1, [pc, #424]	; (800fa38 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 800f88e:	4618      	mov	r0, r3
 800f890:	f7f1 fc7c 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 800f894:	2310      	movs	r3, #16
 800f896:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 800f89a:	f207 1267 	addw	r2, r7, #359	; 0x167
 800f89e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f8a2:	338c      	adds	r3, #140	; 0x8c
 800f8a4:	4965      	ldr	r1, [pc, #404]	; (800fa3c <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 800f8a6:	4618      	mov	r0, r3
 800f8a8:	f7f1 fc98 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 800f8ac:	2311      	movs	r3, #17
 800f8ae:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 800f8b2:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 800f8b6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f8ba:	33a8      	adds	r3, #168	; 0xa8
 800f8bc:	4960      	ldr	r1, [pc, #384]	; (800fa40 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 800f8be:	4618      	mov	r0, r3
 800f8c0:	f7f1 fc64 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 800f8c4:	2312      	movs	r3, #18
 800f8c6:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 800f8ca:	f207 1269 	addw	r2, r7, #361	; 0x169
 800f8ce:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f8d2:	33c4      	adds	r3, #196	; 0xc4
 800f8d4:	495b      	ldr	r1, [pc, #364]	; (800fa44 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 800f8d6:	4618      	mov	r0, r3
 800f8d8:	f7f1 fc08 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 800f8dc:	2313      	movs	r3, #19
 800f8de:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 800f8e2:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 800f8e6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f8ea:	33e0      	adds	r3, #224	; 0xe0
 800f8ec:	4956      	ldr	r1, [pc, #344]	; (800fa48 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 800f8ee:	4618      	mov	r0, r3
 800f8f0:	f7f1 fc24 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 800f8f4:	2314      	movs	r3, #20
 800f8f6:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 800f8fa:	f207 126b 	addw	r2, r7, #363	; 0x16b
 800f8fe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f902:	33fc      	adds	r3, #252	; 0xfc
 800f904:	4951      	ldr	r1, [pc, #324]	; (800fa4c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 800f906:	4618      	mov	r0, r3
 800f908:	f7f1 fc90 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 800f90c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800f910:	f107 0248 	add.w	r2, r7, #72	; 0x48
 800f914:	601a      	str	r2, [r3, #0]
 800f916:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800f91a:	220a      	movs	r2, #10
 800f91c:	605a      	str	r2, [r3, #4]
 800f91e:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800f922:	4618      	mov	r0, r3
 800f924:	f7f1 fd83 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 800f928:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 800f92c:	f107 0240 	add.w	r2, r7, #64	; 0x40
 800f930:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800f934:	9300      	str	r3, [sp, #0]
 800f936:	460b      	mov	r3, r1
 800f938:	ca06      	ldmia	r2, {r1, r2}
 800f93a:	4845      	ldr	r0, [pc, #276]	; (800fa50 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800f93c:	f7f1 fd8f 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 800f940:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 800f944:	4618      	mov	r0, r3
 800f946:	f7f1 fd7e 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 800f94a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 800f94e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 800f952:	f107 0348 	add.w	r3, r7, #72	; 0x48
 800f956:	429c      	cmp	r4, r3
 800f958:	d004      	beq.n	800f964 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 800f95a:	3c1c      	subs	r4, #28
 800f95c:	4620      	mov	r0, r4
 800f95e:	f7f1 fbb8 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 800f962:	e7f6      	b.n	800f952 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 800f964:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800f968:	2200      	movs	r2, #0
 800f96a:	601a      	str	r2, [r3, #0]
 800f96c:	605a      	str	r2, [r3, #4]
 800f96e:	609a      	str	r2, [r3, #8]
 800f970:	233c      	movs	r3, #60	; 0x3c
 800f972:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 800f976:	231b      	movs	r3, #27
 800f978:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 800f97c:	231c      	movs	r3, #28
 800f97e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 800f982:	233e      	movs	r3, #62	; 0x3e
 800f984:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 800f988:	2319      	movs	r3, #25
 800f98a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 800f98e:	231a      	movs	r3, #26
 800f990:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 800f994:	233d      	movs	r3, #61	; 0x3d
 800f996:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 800f99a:	2318      	movs	r3, #24
 800f99c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 800f9a0:	231d      	movs	r3, #29
 800f9a2:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 800f9a6:	2321      	movs	r3, #33	; 0x21
 800f9a8:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 800f9ac:	2317      	movs	r3, #23
 800f9ae:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 800f9b2:	231e      	movs	r3, #30
 800f9b4:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 800f9b8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 800f9bc:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 800f9c0:	2304      	movs	r3, #4
 800f9c2:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 800f9c6:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f9ca:	4618      	mov	r0, r3
 800f9cc:	f7f1 fd77 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 800f9d0:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 800f9d4:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f9d8:	9300      	str	r3, [sp, #0]
 800f9da:	4613      	mov	r3, r2
 800f9dc:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 800f9e0:	ca06      	ldmia	r2, {r1, r2}
 800f9e2:	481c      	ldr	r0, [pc, #112]	; (800fa54 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800f9e4:	f7f1 fd83 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 800f9e8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 800f9ec:	4618      	mov	r0, r3
 800f9ee:	f7f1 fd72 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 800f9f2:	1d3b      	adds	r3, r7, #4
 800f9f4:	681b      	ldr	r3, [r3, #0]
 800f9f6:	2b00      	cmp	r3, #0
 800f9f8:	d10e      	bne.n	800fa18 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800f9fa:	463b      	mov	r3, r7
 800f9fc:	681b      	ldr	r3, [r3, #0]
 800f9fe:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fa02:	4293      	cmp	r3, r2
 800fa04:	d108      	bne.n	800fa18 <_Z41__static_initialization_and_destruction_0ii+0x378>
 800fa06:	4813      	ldr	r0, [pc, #76]	; (800fa54 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 800fa08:	f7f4 f9ca 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 800fa0c:	4810      	ldr	r0, [pc, #64]	; (800fa50 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 800fa0e:	f7f4 f9d4 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 800fa12:	4804      	ldr	r0, [pc, #16]	; (800fa24 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 800fa14:	f7f4 f9de 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 800fa18:	bf00      	nop
 800fa1a:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 800fa1e:	46bd      	mov	sp, r7
 800fa20:	bd90      	pop	{r4, r7, pc}
 800fa22:	bf00      	nop
 800fa24:	2000040c 	.word	0x2000040c
 800fa28:	08024e24 	.word	0x08024e24
 800fa2c:	08024e2c 	.word	0x08024e2c
 800fa30:	08024e34 	.word	0x08024e34
 800fa34:	08024e3c 	.word	0x08024e3c
 800fa38:	08024e44 	.word	0x08024e44
 800fa3c:	08024e4c 	.word	0x08024e4c
 800fa40:	08024e50 	.word	0x08024e50
 800fa44:	08024e58 	.word	0x08024e58
 800fa48:	08024e60 	.word	0x08024e60
 800fa4c:	08024e68 	.word	0x08024e68
 800fa50:	20000424 	.word	0x20000424
 800fa54:	2000043c 	.word	0x2000043c

0800fa58 <_GLOBAL__sub_I__ZN4BodyD2Ev>:
 800fa58:	b580      	push	{r7, lr}
 800fa5a:	af00      	add	r7, sp, #0
 800fa5c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fa60:	2001      	movs	r0, #1
 800fa62:	f7ff fe1d 	bl	800f6a0 <_Z41__static_initialization_and_destruction_0ii>
 800fa66:	bd80      	pop	{r7, pc}

0800fa68 <_GLOBAL__sub_D__ZN4BodyD2Ev>:
 800fa68:	b580      	push	{r7, lr}
 800fa6a:	af00      	add	r7, sp, #0
 800fa6c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fa70:	2000      	movs	r0, #0
 800fa72:	f7ff fe15 	bl	800f6a0 <_Z41__static_initialization_and_destruction_0ii>
 800fa76:	bd80      	pop	{r7, pc}

0800fa78 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii>:
{
	return rx_buffer;
}

void Transmitter::report_error(std::string message, int line, int position)
{
 800fa78:	b590      	push	{r4, r7, lr}
 800fa7a:	b0a3      	sub	sp, #140	; 0x8c
 800fa7c:	af00      	add	r7, sp, #0
 800fa7e:	60f8      	str	r0, [r7, #12]
 800fa80:	60b9      	str	r1, [r7, #8]
 800fa82:	607a      	str	r2, [r7, #4]
	std::string full_message = message + "\nin line: " + itoa(line, nullptr, 10)
 800fa84:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800fa88:	4a2c      	ldr	r2, [pc, #176]	; (800fb3c <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii+0xc4>)
 800fa8a:	68f9      	ldr	r1, [r7, #12]
 800fa8c:	4618      	mov	r0, r3
 800fa8e:	f000 f85d 	bl	800fb4c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>
 800fa92:	220a      	movs	r2, #10
 800fa94:	2100      	movs	r1, #0
 800fa96:	68b8      	ldr	r0, [r7, #8]
 800fa98:	f011 fef0 	bl	802187c <itoa>
 800fa9c:	4602      	mov	r2, r0
 800fa9e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800faa2:	f107 0170 	add.w	r1, r7, #112	; 0x70
 800faa6:	4618      	mov	r0, r3
 800faa8:	f7f8 f9a8 	bl	8007dfc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
			+ " in position: " + itoa(position, nullptr, 10) + "\n";
 800faac:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800fab0:	f107 0158 	add.w	r1, r7, #88	; 0x58
 800fab4:	4a22      	ldr	r2, [pc, #136]	; (800fb40 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii+0xc8>)
 800fab6:	4618      	mov	r0, r3
 800fab8:	f7f8 f9a0 	bl	8007dfc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 800fabc:	220a      	movs	r2, #10
 800fabe:	2100      	movs	r1, #0
 800fac0:	6878      	ldr	r0, [r7, #4]
 800fac2:	f011 fedb 	bl	802187c <itoa>
 800fac6:	4602      	mov	r2, r0
 800fac8:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800facc:	f107 0140 	add.w	r1, r7, #64	; 0x40
 800fad0:	4618      	mov	r0, r3
 800fad2:	f7f8 f993 	bl	8007dfc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 800fad6:	f107 0310 	add.w	r3, r7, #16
 800fada:	f107 0128 	add.w	r1, r7, #40	; 0x28
 800fade:	4a19      	ldr	r2, [pc, #100]	; (800fb44 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii+0xcc>)
 800fae0:	4618      	mov	r0, r3
 800fae2:	f7f8 f98b 	bl	8007dfc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
 800fae6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800faea:	4618      	mov	r0, r3
 800faec:	f010 fd63 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800faf0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800faf4:	4618      	mov	r0, r3
 800faf6:	f010 fd5e 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	std::string full_message = message + "\nin line: " + itoa(line, nullptr, 10)
 800fafa:	f107 0358 	add.w	r3, r7, #88	; 0x58
 800fafe:	4618      	mov	r0, r3
 800fb00:	f010 fd59 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 800fb04:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800fb08:	4618      	mov	r0, r3
 800fb0a:	f010 fd54 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
#ifndef TESTS
	while (1)
	{
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 800fb0e:	f107 0310 	add.w	r3, r7, #16
 800fb12:	4618      	mov	r0, r3
 800fb14:	f010 fe32 	bl	802077c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800fb18:	4604      	mov	r4, r0
				full_message.length(), 100);
 800fb1a:	f107 0310 	add.w	r3, r7, #16
 800fb1e:	4618      	mov	r0, r3
 800fb20:	f010 fd7f 	bl	8020622 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
 800fb24:	4603      	mov	r3, r0
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 800fb26:	b29a      	uxth	r2, r3
 800fb28:	2364      	movs	r3, #100	; 0x64
 800fb2a:	4621      	mov	r1, r4
 800fb2c:	4806      	ldr	r0, [pc, #24]	; (800fb48 <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii+0xd0>)
 800fb2e:	f00f fbd7 	bl	801f2e0 <HAL_UART_Transmit>
		HAL_Delay(500);
 800fb32:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800fb36:	f00d ff57 	bl	801d9e8 <HAL_Delay>
		HAL_UART_Transmit(&huart1, (uint8_t*) full_message.c_str(),
 800fb3a:	e7e8      	b.n	800fb0e <_ZN11Transmitter12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEii+0x96>
 800fb3c:	08024e6c 	.word	0x08024e6c
 800fb40:	08024e78 	.word	0x08024e78
 800fb44:	08024e88 	.word	0x08024e88
 800fb48:	20000578 	.word	0x20000578

0800fb4c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_>:
    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 800fb4c:	b580      	push	{r7, lr}
 800fb4e:	b084      	sub	sp, #16
 800fb50:	af00      	add	r7, sp, #0
 800fb52:	60f8      	str	r0, [r7, #12]
 800fb54:	60b9      	str	r1, [r7, #8]
 800fb56:	607a      	str	r2, [r7, #4]
      basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
 800fb58:	68b9      	ldr	r1, [r7, #8]
 800fb5a:	68f8      	ldr	r0, [r7, #12]
 800fb5c:	f010 fe58 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
      __str.append(__rhs);
 800fb60:	6879      	ldr	r1, [r7, #4]
 800fb62:	68f8      	ldr	r0, [r7, #12]
 800fb64:	f010 fdf4 	bl	8020750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
      return __str;
 800fb68:	bf00      	nop
    }
 800fb6a:	68f8      	ldr	r0, [r7, #12]
 800fb6c:	3710      	adds	r7, #16
 800fb6e:	46bd      	mov	sp, r7
 800fb70:	bd80      	pop	{r7, pc}

0800fb72 <_ZNSt18_Bit_iterator_baseC1EPmj>:
  : public std::iterator<std::random_access_iterator_tag, bool>
  {
    _Bit_type * _M_p;
    unsigned int _M_offset;

    _Bit_iterator_base(_Bit_type * __x, unsigned int __y)
 800fb72:	b480      	push	{r7}
 800fb74:	b085      	sub	sp, #20
 800fb76:	af00      	add	r7, sp, #0
 800fb78:	60f8      	str	r0, [r7, #12]
 800fb7a:	60b9      	str	r1, [r7, #8]
 800fb7c:	607a      	str	r2, [r7, #4]
    : _M_p(__x), _M_offset(__y) { }
 800fb7e:	68fb      	ldr	r3, [r7, #12]
 800fb80:	68ba      	ldr	r2, [r7, #8]
 800fb82:	601a      	str	r2, [r3, #0]
 800fb84:	68fb      	ldr	r3, [r7, #12]
 800fb86:	687a      	ldr	r2, [r7, #4]
 800fb88:	605a      	str	r2, [r3, #4]
 800fb8a:	68fb      	ldr	r3, [r7, #12]
 800fb8c:	4618      	mov	r0, r3
 800fb8e:	3714      	adds	r7, #20
 800fb90:	46bd      	mov	sp, r7
 800fb92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb96:	4770      	bx	lr

0800fb98 <_ZNSt13_Bit_iteratorC1Ev>:
  {
    typedef _Bit_reference  reference;
    typedef _Bit_reference* pointer;
    typedef _Bit_iterator   iterator;

    _Bit_iterator() : _Bit_iterator_base(0, 0) { }
 800fb98:	b580      	push	{r7, lr}
 800fb9a:	b082      	sub	sp, #8
 800fb9c:	af00      	add	r7, sp, #0
 800fb9e:	6078      	str	r0, [r7, #4]
 800fba0:	687b      	ldr	r3, [r7, #4]
 800fba2:	2200      	movs	r2, #0
 800fba4:	2100      	movs	r1, #0
 800fba6:	4618      	mov	r0, r3
 800fba8:	f7ff ffe3 	bl	800fb72 <_ZNSt18_Bit_iterator_baseC1EPmj>
 800fbac:	687b      	ldr	r3, [r7, #4]
 800fbae:	4618      	mov	r0, r3
 800fbb0:	3708      	adds	r7, #8
 800fbb2:	46bd      	mov	sp, r7
 800fbb4:	bd80      	pop	{r7, pc}

0800fbb6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>:
      ~map() = default;
 800fbb6:	b580      	push	{r7, lr}
 800fbb8:	b082      	sub	sp, #8
 800fbba:	af00      	add	r7, sp, #0
 800fbbc:	6078      	str	r0, [r7, #4]
 800fbbe:	687b      	ldr	r3, [r7, #4]
 800fbc0:	4618      	mov	r0, r3
 800fbc2:	f000 f870 	bl	800fca6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>
 800fbc6:	687b      	ldr	r3, [r7, #4]
 800fbc8:	4618      	mov	r0, r3
 800fbca:	3708      	adds	r7, #8
 800fbcc:	46bd      	mov	sp, r7
 800fbce:	bd80      	pop	{r7, pc}

0800fbd0 <_ZN16Variable_handlerD1Ev>:
{
	symbol_type type;
	symbol_value value;
};

class Variable_handler
 800fbd0:	b580      	push	{r7, lr}
 800fbd2:	b082      	sub	sp, #8
 800fbd4:	af00      	add	r7, sp, #0
 800fbd6:	6078      	str	r0, [r7, #4]
 800fbd8:	687b      	ldr	r3, [r7, #4]
 800fbda:	3330      	adds	r3, #48	; 0x30
 800fbdc:	4618      	mov	r0, r3
 800fbde:	f7ff ffea 	bl	800fbb6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 800fbe2:	687b      	ldr	r3, [r7, #4]
 800fbe4:	3318      	adds	r3, #24
 800fbe6:	4618      	mov	r0, r3
 800fbe8:	f7ff ffe5 	bl	800fbb6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 800fbec:	687b      	ldr	r3, [r7, #4]
 800fbee:	4618      	mov	r0, r3
 800fbf0:	f7ff ffe1 	bl	800fbb6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
 800fbf4:	687b      	ldr	r3, [r7, #4]
 800fbf6:	4618      	mov	r0, r3
 800fbf8:	3708      	adds	r7, #8
 800fbfa:	46bd      	mov	sp, r7
 800fbfc:	bd80      	pop	{r7, pc}
	...

0800fc00 <__tcf_0>:
#include <Variable_handler.h>

Variable_handler* Variable_handler::get_instance()
{
	static Variable_handler instance;
 800fc00:	b580      	push	{r7, lr}
 800fc02:	af00      	add	r7, sp, #0
 800fc04:	4801      	ldr	r0, [pc, #4]	; (800fc0c <__tcf_0+0xc>)
 800fc06:	f7ff ffe3 	bl	800fbd0 <_ZN16Variable_handlerD1Ev>
 800fc0a:	bd80      	pop	{r7, pc}
 800fc0c:	2000049c 	.word	0x2000049c

0800fc10 <_ZN16Variable_handler12get_instanceEv>:
{
 800fc10:	b580      	push	{r7, lr}
 800fc12:	af00      	add	r7, sp, #0
	static Variable_handler instance;
 800fc14:	4b12      	ldr	r3, [pc, #72]	; (800fc60 <_ZN16Variable_handler12get_instanceEv+0x50>)
 800fc16:	781b      	ldrb	r3, [r3, #0]
 800fc18:	f3bf 8f5b 	dmb	ish
 800fc1c:	b2db      	uxtb	r3, r3
 800fc1e:	f003 0301 	and.w	r3, r3, #1
 800fc22:	2b00      	cmp	r3, #0
 800fc24:	bf0c      	ite	eq
 800fc26:	2301      	moveq	r3, #1
 800fc28:	2300      	movne	r3, #0
 800fc2a:	b2db      	uxtb	r3, r3
 800fc2c:	2b00      	cmp	r3, #0
 800fc2e:	d013      	beq.n	800fc58 <_ZN16Variable_handler12get_instanceEv+0x48>
 800fc30:	480b      	ldr	r0, [pc, #44]	; (800fc60 <_ZN16Variable_handler12get_instanceEv+0x50>)
 800fc32:	f010 fada 	bl	80201ea <__cxa_guard_acquire>
 800fc36:	4603      	mov	r3, r0
 800fc38:	2b00      	cmp	r3, #0
 800fc3a:	bf14      	ite	ne
 800fc3c:	2301      	movne	r3, #1
 800fc3e:	2300      	moveq	r3, #0
 800fc40:	b2db      	uxtb	r3, r3
 800fc42:	2b00      	cmp	r3, #0
 800fc44:	d008      	beq.n	800fc58 <_ZN16Variable_handler12get_instanceEv+0x48>
 800fc46:	4807      	ldr	r0, [pc, #28]	; (800fc64 <_ZN16Variable_handler12get_instanceEv+0x54>)
 800fc48:	f008 f818 	bl	8017c7c <_ZN16Variable_handlerC1Ev>
 800fc4c:	4804      	ldr	r0, [pc, #16]	; (800fc60 <_ZN16Variable_handler12get_instanceEv+0x50>)
 800fc4e:	f010 fad8 	bl	8020202 <__cxa_guard_release>
 800fc52:	4805      	ldr	r0, [pc, #20]	; (800fc68 <_ZN16Variable_handler12get_instanceEv+0x58>)
 800fc54:	f011 fdb1 	bl	80217ba <atexit>
	return &instance;
 800fc58:	4b02      	ldr	r3, [pc, #8]	; (800fc64 <_ZN16Variable_handler12get_instanceEv+0x54>)
}
 800fc5a:	4618      	mov	r0, r3
 800fc5c:	bd80      	pop	{r7, pc}
 800fc5e:	bf00      	nop
 800fc60:	200004e4 	.word	0x200004e4
 800fc64:	2000049c 	.word	0x2000049c
 800fc68:	0800fc01 	.word	0x0800fc01

0800fc6c <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

symbol_value& Variable_handler::get_arg(std::string name)
{
 800fc6c:	b580      	push	{r7, lr}
 800fc6e:	b082      	sub	sp, #8
 800fc70:	af00      	add	r7, sp, #0
 800fc72:	6078      	str	r0, [r7, #4]
 800fc74:	6039      	str	r1, [r7, #0]
	return Arg[name].value;
 800fc76:	687b      	ldr	r3, [r7, #4]
 800fc78:	3330      	adds	r3, #48	; 0x30
 800fc7a:	6839      	ldr	r1, [r7, #0]
 800fc7c:	4618      	mov	r0, r3
 800fc7e:	f000 f827 	bl	800fcd0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>
 800fc82:	4603      	mov	r3, r0
 800fc84:	3304      	adds	r3, #4
}
 800fc86:	4618      	mov	r0, r3
 800fc88:	3708      	adds	r7, #8
 800fc8a:	46bd      	mov	sp, r7
 800fc8c:	bd80      	pop	{r7, pc}

0800fc8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>:
	struct _Rb_tree_impl
 800fc8e:	b580      	push	{r7, lr}
 800fc90:	b082      	sub	sp, #8
 800fc92:	af00      	add	r7, sp, #0
 800fc94:	6078      	str	r0, [r7, #4]
 800fc96:	6878      	ldr	r0, [r7, #4]
 800fc98:	f000 f876 	bl	800fd88 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 800fc9c:	687b      	ldr	r3, [r7, #4]
 800fc9e:	4618      	mov	r0, r3
 800fca0:	3708      	adds	r7, #8
 800fca2:	46bd      	mov	sp, r7
 800fca4:	bd80      	pop	{r7, pc}

0800fca6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
 800fca6:	b580      	push	{r7, lr}
 800fca8:	b082      	sub	sp, #8
 800fcaa:	af00      	add	r7, sp, #0
 800fcac:	6078      	str	r0, [r7, #4]
      { _M_erase(_M_begin()); }
 800fcae:	6878      	ldr	r0, [r7, #4]
 800fcb0:	f000 f895 	bl	800fdde <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 800fcb4:	4603      	mov	r3, r0
 800fcb6:	4619      	mov	r1, r3
 800fcb8:	6878      	ldr	r0, [r7, #4]
 800fcba:	f000 f871 	bl	800fda0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
 800fcbe:	687b      	ldr	r3, [r7, #4]
 800fcc0:	4618      	mov	r0, r3
 800fcc2:	f7ff ffe4 	bl	800fc8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EED1Ev>
 800fcc6:	687b      	ldr	r3, [r7, #4]
 800fcc8:	4618      	mov	r0, r3
 800fcca:	3708      	adds	r7, #8
 800fccc:	46bd      	mov	sp, r7
 800fcce:	bd80      	pop	{r7, pc}

0800fcd0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_>:
      operator[](const key_type& __k)
 800fcd0:	b590      	push	{r4, r7, lr}
 800fcd2:	b08b      	sub	sp, #44	; 0x2c
 800fcd4:	af02      	add	r7, sp, #8
 800fcd6:	6078      	str	r0, [r7, #4]
 800fcd8:	6039      	str	r1, [r7, #0]
	iterator __i = lower_bound(__k);
 800fcda:	6839      	ldr	r1, [r7, #0]
 800fcdc:	6878      	ldr	r0, [r7, #4]
 800fcde:	f000 f88a 	bl	800fdf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>
 800fce2:	4603      	mov	r3, r0
 800fce4:	60bb      	str	r3, [r7, #8]
	if (__i == end() || key_comp()(__k, (*__i).first))
 800fce6:	6878      	ldr	r0, [r7, #4]
 800fce8:	f000 f894 	bl	800fe14 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>
 800fcec:	4603      	mov	r3, r0
 800fcee:	60fb      	str	r3, [r7, #12]
 800fcf0:	f107 020c 	add.w	r2, r7, #12
 800fcf4:	f107 0308 	add.w	r3, r7, #8
 800fcf8:	4611      	mov	r1, r2
 800fcfa:	4618      	mov	r0, r3
 800fcfc:	f000 f897 	bl	800fe2e <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 800fd00:	4603      	mov	r3, r0
 800fd02:	2b00      	cmp	r3, #0
 800fd04:	d112      	bne.n	800fd2c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x5c>
 800fd06:	6878      	ldr	r0, [r7, #4]
 800fd08:	f000 f8a5 	bl	800fe56 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>
 800fd0c:	f107 0308 	add.w	r3, r7, #8
 800fd10:	4618      	mov	r0, r3
 800fd12:	f000 f8ad 	bl	800fe70 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 800fd16:	4603      	mov	r3, r0
 800fd18:	461a      	mov	r2, r3
 800fd1a:	f107 0310 	add.w	r3, r7, #16
 800fd1e:	6839      	ldr	r1, [r7, #0]
 800fd20:	4618      	mov	r0, r3
 800fd22:	f7f3 f939 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 800fd26:	4603      	mov	r3, r0
 800fd28:	2b00      	cmp	r3, #0
 800fd2a:	d001      	beq.n	800fd30 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x60>
 800fd2c:	2301      	movs	r3, #1
 800fd2e:	e000      	b.n	800fd32 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x62>
 800fd30:	2300      	movs	r3, #0
 800fd32:	2b00      	cmp	r3, #0
 800fd34:	d01b      	beq.n	800fd6e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0x9e>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
 800fd36:	687c      	ldr	r4, [r7, #4]
 800fd38:	f107 0208 	add.w	r2, r7, #8
 800fd3c:	f107 0314 	add.w	r3, r7, #20
 800fd40:	4611      	mov	r1, r2
 800fd42:	4618      	mov	r0, r3
 800fd44:	f000 f8b1 	bl	800feaa <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>
 800fd48:	f107 0318 	add.w	r3, r7, #24
 800fd4c:	6839      	ldr	r1, [r7, #0]
 800fd4e:	4618      	mov	r0, r3
 800fd50:	f000 f89c 	bl	800fe8c <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>
 800fd54:	f107 0218 	add.w	r2, r7, #24
 800fd58:	f107 031c 	add.w	r3, r7, #28
 800fd5c:	9300      	str	r3, [sp, #0]
 800fd5e:	4613      	mov	r3, r2
 800fd60:	4a08      	ldr	r2, [pc, #32]	; (800fd84 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEixERSA_+0xb4>)
 800fd62:	6979      	ldr	r1, [r7, #20]
 800fd64:	4620      	mov	r0, r4
 800fd66:	f000 f8b0 	bl	800feca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>
 800fd6a:	4603      	mov	r3, r0
 800fd6c:	60bb      	str	r3, [r7, #8]
	return (*__i).second;
 800fd6e:	f107 0308 	add.w	r3, r7, #8
 800fd72:	4618      	mov	r0, r3
 800fd74:	f000 f87c 	bl	800fe70 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>
 800fd78:	4603      	mov	r3, r0
 800fd7a:	3318      	adds	r3, #24
      }
 800fd7c:	4618      	mov	r0, r3
 800fd7e:	3724      	adds	r7, #36	; 0x24
 800fd80:	46bd      	mov	sp, r7
 800fd82:	bd90      	pop	{r4, r7, pc}
 800fd84:	08025240 	.word	0x08025240

0800fd88 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
 800fd88:	b580      	push	{r7, lr}
 800fd8a:	b082      	sub	sp, #8
 800fd8c:	af00      	add	r7, sp, #0
 800fd8e:	6078      	str	r0, [r7, #4]
 800fd90:	6878      	ldr	r0, [r7, #4]
 800fd92:	f000 f8d8 	bl	800ff46 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>
 800fd96:	687b      	ldr	r3, [r7, #4]
 800fd98:	4618      	mov	r0, r3
 800fd9a:	3708      	adds	r7, #8
 800fd9c:	46bd      	mov	sp, r7
 800fd9e:	bd80      	pop	{r7, pc}

0800fda0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800fda0:	b580      	push	{r7, lr}
 800fda2:	b084      	sub	sp, #16
 800fda4:	af00      	add	r7, sp, #0
 800fda6:	6078      	str	r0, [r7, #4]
 800fda8:	6039      	str	r1, [r7, #0]
      while (__x != 0)
 800fdaa:	683b      	ldr	r3, [r7, #0]
 800fdac:	2b00      	cmp	r3, #0
 800fdae:	d012      	beq.n	800fdd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0x36>
	  _M_erase(_S_right(__x));
 800fdb0:	6838      	ldr	r0, [r7, #0]
 800fdb2:	f000 f8d3 	bl	800ff5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 800fdb6:	4603      	mov	r3, r0
 800fdb8:	4619      	mov	r1, r3
 800fdba:	6878      	ldr	r0, [r7, #4]
 800fdbc:	f7ff fff0 	bl	800fda0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E>
	  _Link_type __y = _S_left(__x);
 800fdc0:	6838      	ldr	r0, [r7, #0]
 800fdc2:	f000 f8d7 	bl	800ff74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 800fdc6:	60f8      	str	r0, [r7, #12]
	  _M_drop_node(__x);
 800fdc8:	6839      	ldr	r1, [r7, #0]
 800fdca:	6878      	ldr	r0, [r7, #4]
 800fdcc:	f000 f8de 	bl	800ff8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	  __x = __y;
 800fdd0:	68fb      	ldr	r3, [r7, #12]
 800fdd2:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 800fdd4:	e7e9      	b.n	800fdaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E+0xa>
    }
 800fdd6:	bf00      	nop
 800fdd8:	3710      	adds	r7, #16
 800fdda:	46bd      	mov	sp, r7
 800fddc:	bd80      	pop	{r7, pc}

0800fdde <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
 800fdde:	b480      	push	{r7}
 800fde0:	b083      	sub	sp, #12
 800fde2:	af00      	add	r7, sp, #0
 800fde4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
 800fde6:	687b      	ldr	r3, [r7, #4]
 800fde8:	689b      	ldr	r3, [r3, #8]
 800fdea:	4618      	mov	r0, r3
 800fdec:	370c      	adds	r7, #12
 800fdee:	46bd      	mov	sp, r7
 800fdf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdf4:	4770      	bx	lr

0800fdf6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE11lower_boundERSA_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
 800fdf6:	b580      	push	{r7, lr}
 800fdf8:	b082      	sub	sp, #8
 800fdfa:	af00      	add	r7, sp, #0
 800fdfc:	6078      	str	r0, [r7, #4]
 800fdfe:	6039      	str	r1, [r7, #0]
      { return _M_t.lower_bound(__x); }
 800fe00:	687b      	ldr	r3, [r7, #4]
 800fe02:	6839      	ldr	r1, [r7, #0]
 800fe04:	4618      	mov	r0, r3
 800fe06:	f000 f8d2 	bl	800ffae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>
 800fe0a:	4603      	mov	r3, r0
 800fe0c:	4618      	mov	r0, r3
 800fe0e:	3708      	adds	r7, #8
 800fe10:	46bd      	mov	sp, r7
 800fe12:	bd80      	pop	{r7, pc}

0800fe14 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800fe14:	b580      	push	{r7, lr}
 800fe16:	b082      	sub	sp, #8
 800fe18:	af00      	add	r7, sp, #0
 800fe1a:	6078      	str	r0, [r7, #4]
      { return _M_t.end(); }
 800fe1c:	687b      	ldr	r3, [r7, #4]
 800fe1e:	4618      	mov	r0, r3
 800fe20:	f000 f8dc 	bl	800ffdc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>
 800fe24:	4603      	mov	r3, r0
 800fe26:	4618      	mov	r0, r3
 800fe28:	3708      	adds	r7, #8
 800fe2a:	46bd      	mov	sp, r7
 800fe2c:	bd80      	pop	{r7, pc}

0800fe2e <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 800fe2e:	b480      	push	{r7}
 800fe30:	b083      	sub	sp, #12
 800fe32:	af00      	add	r7, sp, #0
 800fe34:	6078      	str	r0, [r7, #4]
 800fe36:	6039      	str	r1, [r7, #0]
      { return __x._M_node == __y._M_node; }
 800fe38:	687b      	ldr	r3, [r7, #4]
 800fe3a:	681a      	ldr	r2, [r3, #0]
 800fe3c:	683b      	ldr	r3, [r7, #0]
 800fe3e:	681b      	ldr	r3, [r3, #0]
 800fe40:	429a      	cmp	r2, r3
 800fe42:	bf0c      	ite	eq
 800fe44:	2301      	moveq	r3, #1
 800fe46:	2300      	movne	r3, #0
 800fe48:	b2db      	uxtb	r3, r3
 800fe4a:	4618      	mov	r0, r3
 800fe4c:	370c      	adds	r7, #12
 800fe4e:	46bd      	mov	sp, r7
 800fe50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe54:	4770      	bx	lr

0800fe56 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE8key_compEv>:
      key_comp() const
 800fe56:	b590      	push	{r4, r7, lr}
 800fe58:	b083      	sub	sp, #12
 800fe5a:	af00      	add	r7, sp, #0
 800fe5c:	6078      	str	r0, [r7, #4]
      { return _M_t.key_comp(); }
 800fe5e:	687b      	ldr	r3, [r7, #4]
 800fe60:	4618      	mov	r0, r3
 800fe62:	f000 f8cc 	bl	800fffe <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>
 800fe66:	4623      	mov	r3, r4
 800fe68:	4618      	mov	r0, r3
 800fe6a:	370c      	adds	r7, #12
 800fe6c:	46bd      	mov	sp, r7
 800fe6e:	bd90      	pop	{r4, r7, pc}

0800fe70 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 800fe70:	b580      	push	{r7, lr}
 800fe72:	b082      	sub	sp, #8
 800fe74:	af00      	add	r7, sp, #0
 800fe76:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
 800fe78:	687b      	ldr	r3, [r7, #4]
 800fe7a:	681b      	ldr	r3, [r3, #0]
 800fe7c:	4618      	mov	r0, r3
 800fe7e:	f000 f8c8 	bl	8010012 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 800fe82:	4603      	mov	r3, r0
 800fe84:	4618      	mov	r0, r3
 800fe86:	3708      	adds	r7, #8
 800fe88:	46bd      	mov	sp, r7
 800fe8a:	bd80      	pop	{r7, pc}

0800fe8c <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IvLb1EEES7_>:
                   _ConstructibleTuple<_Elements...>()
                 && _TCC<_Dummy>::template
                   _ImplicitlyConvertibleTuple<_Elements...>()
                 && (sizeof...(_Elements) >= 1),
               bool>::type=true>
        constexpr tuple(const _Elements&... __elements)
 800fe8c:	b580      	push	{r7, lr}
 800fe8e:	b082      	sub	sp, #8
 800fe90:	af00      	add	r7, sp, #0
 800fe92:	6078      	str	r0, [r7, #4]
 800fe94:	6039      	str	r1, [r7, #0]
      : _Inherited(__elements...) { }
 800fe96:	687b      	ldr	r3, [r7, #4]
 800fe98:	6839      	ldr	r1, [r7, #0]
 800fe9a:	4618      	mov	r0, r3
 800fe9c:	f000 f8c7 	bl	801002e <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>
 800fea0:	687b      	ldr	r3, [r7, #4]
 800fea2:	4618      	mov	r0, r3
 800fea4:	3708      	adds	r7, #8
 800fea6:	46bd      	mov	sp, r7
 800fea8:	bd80      	pop	{r7, pc}

0800feaa <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1ERKSt17_Rb_tree_iteratorIS9_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
 800feaa:	b480      	push	{r7}
 800feac:	b083      	sub	sp, #12
 800feae:	af00      	add	r7, sp, #0
 800feb0:	6078      	str	r0, [r7, #4]
 800feb2:	6039      	str	r1, [r7, #0]
      : _M_node(__it._M_node) { }
 800feb4:	683b      	ldr	r3, [r7, #0]
 800feb6:	681a      	ldr	r2, [r3, #0]
 800feb8:	687b      	ldr	r3, [r7, #4]
 800feba:	601a      	str	r2, [r3, #0]
 800febc:	687b      	ldr	r3, [r7, #4]
 800febe:	4618      	mov	r0, r3
 800fec0:	370c      	adds	r7, #12
 800fec2:	46bd      	mov	sp, r7
 800fec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fec8:	4770      	bx	lr

0800feca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 800feca:	b5b0      	push	{r4, r5, r7, lr}
 800fecc:	b088      	sub	sp, #32
 800fece:	af00      	add	r7, sp, #0
 800fed0:	60f8      	str	r0, [r7, #12]
 800fed2:	60b9      	str	r1, [r7, #8]
 800fed4:	607a      	str	r2, [r7, #4]
 800fed6:	603b      	str	r3, [r7, #0]
	_Link_type __z = _M_create_node(std::forward<_Args>(__args)...);
 800fed8:	6878      	ldr	r0, [r7, #4]
 800feda:	f000 f8b7 	bl	801004c <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 800fede:	4604      	mov	r4, r0
 800fee0:	6838      	ldr	r0, [r7, #0]
 800fee2:	f000 f8be 	bl	8010062 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 800fee6:	4605      	mov	r5, r0
 800fee8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800feea:	f000 f8c5 	bl	8010078 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 800feee:	4603      	mov	r3, r0
 800fef0:	462a      	mov	r2, r5
 800fef2:	4621      	mov	r1, r4
 800fef4:	68f8      	ldr	r0, [r7, #12]
 800fef6:	f000 f8ca 	bl	801008e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 800fefa:	61f8      	str	r0, [r7, #28]
	    auto __res = _M_get_insert_hint_unique_pos(__pos, _S_key(__z));
 800fefc:	69f8      	ldr	r0, [r7, #28]
 800fefe:	f000 fa0c 	bl	801031a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 800ff02:	4603      	mov	r3, r0
 800ff04:	f107 0010 	add.w	r0, r7, #16
 800ff08:	68ba      	ldr	r2, [r7, #8]
 800ff0a:	68f9      	ldr	r1, [r7, #12]
 800ff0c:	f000 f8e2 	bl	80100d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>
	    if (__res.second)
 800ff10:	697b      	ldr	r3, [r7, #20]
 800ff12:	2b00      	cmp	r3, #0
 800ff14:	d007      	beq.n	800ff26 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x5c>
	      return _M_insert_node(__res.first, __res.second, __z);
 800ff16:	6939      	ldr	r1, [r7, #16]
 800ff18:	697a      	ldr	r2, [r7, #20]
 800ff1a:	69fb      	ldr	r3, [r7, #28]
 800ff1c:	68f8      	ldr	r0, [r7, #12]
 800ff1e:	f000 fa0f 	bl	8010340 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>
 800ff22:	4603      	mov	r3, r0
 800ff24:	e00b      	b.n	800ff3e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEESt17_Rb_tree_iteratorIS9_ESt23_Rb_tree_const_iteratorIS9_EDpOT_+0x74>
	    _M_drop_node(__z);
 800ff26:	69f9      	ldr	r1, [r7, #28]
 800ff28:	68f8      	ldr	r0, [r7, #12]
 800ff2a:	f000 f82f 	bl	800ff8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>
	    return iterator(__res.first);
 800ff2e:	693a      	ldr	r2, [r7, #16]
 800ff30:	f107 0318 	add.w	r3, r7, #24
 800ff34:	4611      	mov	r1, r2
 800ff36:	4618      	mov	r0, r3
 800ff38:	f000 fa3f 	bl	80103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 800ff3c:	69bb      	ldr	r3, [r7, #24]
      }
 800ff3e:	4618      	mov	r0, r3
 800ff40:	3720      	adds	r7, #32
 800ff42:	46bd      	mov	sp, r7
 800ff44:	bdb0      	pop	{r4, r5, r7, pc}

0800ff46 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEED1Ev>:
 800ff46:	b480      	push	{r7}
 800ff48:	b083      	sub	sp, #12
 800ff4a:	af00      	add	r7, sp, #0
 800ff4c:	6078      	str	r0, [r7, #4]
 800ff4e:	687b      	ldr	r3, [r7, #4]
 800ff50:	4618      	mov	r0, r3
 800ff52:	370c      	adds	r7, #12
 800ff54:	46bd      	mov	sp, r7
 800ff56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff5a:	4770      	bx	lr

0800ff5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800ff5c:	b480      	push	{r7}
 800ff5e:	b083      	sub	sp, #12
 800ff60:	af00      	add	r7, sp, #0
 800ff62:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_right); }
 800ff64:	687b      	ldr	r3, [r7, #4]
 800ff66:	68db      	ldr	r3, [r3, #12]
 800ff68:	4618      	mov	r0, r3
 800ff6a:	370c      	adds	r7, #12
 800ff6c:	46bd      	mov	sp, r7
 800ff6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff72:	4770      	bx	lr

0800ff74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 800ff74:	b480      	push	{r7}
 800ff76:	b083      	sub	sp, #12
 800ff78:	af00      	add	r7, sp, #0
 800ff7a:	6078      	str	r0, [r7, #4]
      { return static_cast<_Link_type>(__x->_M_left); }
 800ff7c:	687b      	ldr	r3, [r7, #4]
 800ff7e:	689b      	ldr	r3, [r3, #8]
 800ff80:	4618      	mov	r0, r3
 800ff82:	370c      	adds	r7, #12
 800ff84:	46bd      	mov	sp, r7
 800ff86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff8a:	4770      	bx	lr

0800ff8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 800ff8c:	b580      	push	{r7, lr}
 800ff8e:	b082      	sub	sp, #8
 800ff90:	af00      	add	r7, sp, #0
 800ff92:	6078      	str	r0, [r7, #4]
 800ff94:	6039      	str	r1, [r7, #0]
	_M_destroy_node(__p);
 800ff96:	6839      	ldr	r1, [r7, #0]
 800ff98:	6878      	ldr	r0, [r7, #4]
 800ff9a:	f000 fa1d 	bl	80103d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>
	_M_put_node(__p);
 800ff9e:	6839      	ldr	r1, [r7, #0]
 800ffa0:	6878      	ldr	r0, [r7, #4]
 800ffa2:	f000 fa2e 	bl	8010402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>
      }
 800ffa6:	bf00      	nop
 800ffa8:	3708      	adds	r7, #8
 800ffaa:	46bd      	mov	sp, r7
 800ffac:	bd80      	pop	{r7, pc}

0800ffae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
 800ffae:	b590      	push	{r4, r7, lr}
 800ffb0:	b083      	sub	sp, #12
 800ffb2:	af00      	add	r7, sp, #0
 800ffb4:	6078      	str	r0, [r7, #4]
 800ffb6:	6039      	str	r1, [r7, #0]
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
 800ffb8:	6878      	ldr	r0, [r7, #4]
 800ffba:	f7ff ff10 	bl	800fdde <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 800ffbe:	4604      	mov	r4, r0
 800ffc0:	6878      	ldr	r0, [r7, #4]
 800ffc2:	f000 fa30 	bl	8010426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 800ffc6:	4602      	mov	r2, r0
 800ffc8:	683b      	ldr	r3, [r7, #0]
 800ffca:	4621      	mov	r1, r4
 800ffcc:	6878      	ldr	r0, [r7, #4]
 800ffce:	f000 fa36 	bl	801043e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>
 800ffd2:	4603      	mov	r3, r0
 800ffd4:	4618      	mov	r0, r3
 800ffd6:	370c      	adds	r7, #12
 800ffd8:	46bd      	mov	sp, r7
 800ffda:	bd90      	pop	{r4, r7, pc}

0800ffdc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 800ffdc:	b580      	push	{r7, lr}
 800ffde:	b084      	sub	sp, #16
 800ffe0:	af00      	add	r7, sp, #0
 800ffe2:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_header); }
 800ffe4:	687b      	ldr	r3, [r7, #4]
 800ffe6:	1d1a      	adds	r2, r3, #4
 800ffe8:	f107 030c 	add.w	r3, r7, #12
 800ffec:	4611      	mov	r1, r2
 800ffee:	4618      	mov	r0, r3
 800fff0:	f000 f9e3 	bl	80103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 800fff4:	68fb      	ldr	r3, [r7, #12]
 800fff6:	4618      	mov	r0, r3
 800fff8:	3710      	adds	r7, #16
 800fffa:	46bd      	mov	sp, r7
 800fffc:	bd80      	pop	{r7, pc}

0800fffe <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8key_compEv>:
      key_comp() const
 800fffe:	b480      	push	{r7}
 8010000:	b083      	sub	sp, #12
 8010002:	af00      	add	r7, sp, #0
 8010004:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_key_compare; }
 8010006:	4618      	mov	r0, r3
 8010008:	370c      	adds	r7, #12
 801000a:	46bd      	mov	sp, r7
 801000c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010010:	4770      	bx	lr

08010012 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr()
 8010012:	b580      	push	{r7, lr}
 8010014:	b082      	sub	sp, #8
 8010016:	af00      	add	r7, sp, #0
 8010018:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 801001a:	687b      	ldr	r3, [r7, #4]
 801001c:	3310      	adds	r3, #16
 801001e:	4618      	mov	r0, r3
 8010020:	f000 fa3e 	bl	80104a0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 8010024:	4603      	mov	r3, r0
 8010026:	4618      	mov	r0, r3
 8010028:	3708      	adds	r7, #8
 801002a:	46bd      	mov	sp, r7
 801002c:	bd80      	pop	{r7, pc}

0801002e <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1ES7_>:
      constexpr _Tuple_impl(const _Head& __head)
 801002e:	b580      	push	{r7, lr}
 8010030:	b082      	sub	sp, #8
 8010032:	af00      	add	r7, sp, #0
 8010034:	6078      	str	r0, [r7, #4]
 8010036:	6039      	str	r1, [r7, #0]
      : _Base(__head) { }
 8010038:	687b      	ldr	r3, [r7, #4]
 801003a:	6839      	ldr	r1, [r7, #0]
 801003c:	4618      	mov	r0, r3
 801003e:	f000 fa3b 	bl	80104b8 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 8010042:	687b      	ldr	r3, [r7, #4]
 8010044:	4618      	mov	r0, r3
 8010046:	3708      	adds	r7, #8
 8010048:	46bd      	mov	sp, r7
 801004a:	bd80      	pop	{r7, pc}

0801004c <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801004c:	b480      	push	{r7}
 801004e:	b083      	sub	sp, #12
 8010050:	af00      	add	r7, sp, #0
 8010052:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010054:	687b      	ldr	r3, [r7, #4]
 8010056:	4618      	mov	r0, r3
 8010058:	370c      	adds	r7, #12
 801005a:	46bd      	mov	sp, r7
 801005c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010060:	4770      	bx	lr

08010062 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010062:	b480      	push	{r7}
 8010064:	b083      	sub	sp, #12
 8010066:	af00      	add	r7, sp, #0
 8010068:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801006a:	687b      	ldr	r3, [r7, #4]
 801006c:	4618      	mov	r0, r3
 801006e:	370c      	adds	r7, #12
 8010070:	46bd      	mov	sp, r7
 8010072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010076:	4770      	bx	lr

08010078 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010078:	b480      	push	{r7}
 801007a:	b083      	sub	sp, #12
 801007c:	af00      	add	r7, sp, #0
 801007e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010080:	687b      	ldr	r3, [r7, #4]
 8010082:	4618      	mov	r0, r3
 8010084:	370c      	adds	r7, #12
 8010086:	46bd      	mov	sp, r7
 8010088:	f85d 7b04 	ldr.w	r7, [sp], #4
 801008c:	4770      	bx	lr

0801008e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 801008e:	b5b0      	push	{r4, r5, r7, lr}
 8010090:	b088      	sub	sp, #32
 8010092:	af02      	add	r7, sp, #8
 8010094:	60f8      	str	r0, [r7, #12]
 8010096:	60b9      	str	r1, [r7, #8]
 8010098:	607a      	str	r2, [r7, #4]
 801009a:	603b      	str	r3, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 801009c:	68f8      	ldr	r0, [r7, #12]
 801009e:	f000 fa1a 	bl	80104d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 80100a2:	6178      	str	r0, [r7, #20]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 80100a4:	68b8      	ldr	r0, [r7, #8]
 80100a6:	f7ff ffd1 	bl	801004c <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 80100aa:	4604      	mov	r4, r0
 80100ac:	6878      	ldr	r0, [r7, #4]
 80100ae:	f7ff ffd8 	bl	8010062 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 80100b2:	4605      	mov	r5, r0
 80100b4:	6838      	ldr	r0, [r7, #0]
 80100b6:	f7ff ffdf 	bl	8010078 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 80100ba:	4603      	mov	r3, r0
 80100bc:	9300      	str	r3, [sp, #0]
 80100be:	462b      	mov	r3, r5
 80100c0:	4622      	mov	r2, r4
 80100c2:	6979      	ldr	r1, [r7, #20]
 80100c4:	68f8      	ldr	r0, [r7, #12]
 80100c6:	f000 fa17 	bl	80104f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 80100ca:	697b      	ldr	r3, [r7, #20]
	}
 80100cc:	4618      	mov	r0, r3
 80100ce:	3718      	adds	r7, #24
 80100d0:	46bd      	mov	sp, r7
 80100d2:	bdb0      	pop	{r4, r5, r7, pc}

080100d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80100d4:	b590      	push	{r4, r7, lr}
 80100d6:	b08d      	sub	sp, #52	; 0x34
 80100d8:	af00      	add	r7, sp, #0
 80100da:	60f8      	str	r0, [r7, #12]
 80100dc:	60b9      	str	r1, [r7, #8]
 80100de:	607a      	str	r2, [r7, #4]
 80100e0:	603b      	str	r3, [r7, #0]
      iterator __pos = __position._M_const_cast();
 80100e2:	1d3b      	adds	r3, r7, #4
 80100e4:	4618      	mov	r0, r3
 80100e6:	f000 fa34 	bl	8010552 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>
 80100ea:	4603      	mov	r3, r0
 80100ec:	61bb      	str	r3, [r7, #24]
      if (__pos._M_node == _M_end())
 80100ee:	69bc      	ldr	r4, [r7, #24]
 80100f0:	68b8      	ldr	r0, [r7, #8]
 80100f2:	f000 f998 	bl	8010426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80100f6:	4603      	mov	r3, r0
 80100f8:	429c      	cmp	r4, r3
 80100fa:	bf0c      	ite	eq
 80100fc:	2301      	moveq	r3, #1
 80100fe:	2300      	movne	r3, #0
 8010100:	b2db      	uxtb	r3, r3
 8010102:	2b00      	cmp	r3, #0
 8010104:	d030      	beq.n	8010168 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x94>
	  if (size() > 0
 8010106:	68b8      	ldr	r0, [r7, #8]
 8010108:	f000 fa34 	bl	8010574 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>
 801010c:	4603      	mov	r3, r0
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
 801010e:	2b00      	cmp	r3, #0
 8010110:	d013      	beq.n	801013a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8010112:	68bc      	ldr	r4, [r7, #8]
 8010114:	68b8      	ldr	r0, [r7, #8]
 8010116:	f000 fa39 	bl	801058c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 801011a:	4603      	mov	r3, r0
 801011c:	681b      	ldr	r3, [r3, #0]
 801011e:	4618      	mov	r0, r3
 8010120:	f000 fa40 	bl	80105a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8010124:	4603      	mov	r3, r0
 8010126:	683a      	ldr	r2, [r7, #0]
 8010128:	4619      	mov	r1, r3
 801012a:	4620      	mov	r0, r4
 801012c:	f7f2 ff34 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8010130:	4603      	mov	r3, r0
 8010132:	2b00      	cmp	r3, #0
 8010134:	d001      	beq.n	801013a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x66>
 8010136:	2301      	movs	r3, #1
 8010138:	e000      	b.n	801013c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x68>
 801013a:	2300      	movs	r3, #0
	  if (size() > 0
 801013c:	2b00      	cmp	r3, #0
 801013e:	d00c      	beq.n	801015a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x86>
	    return _Res(0, _M_rightmost());
 8010140:	2300      	movs	r3, #0
 8010142:	61fb      	str	r3, [r7, #28]
 8010144:	68b8      	ldr	r0, [r7, #8]
 8010146:	f000 fa21 	bl	801058c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 801014a:	4602      	mov	r2, r0
 801014c:	f107 031c 	add.w	r3, r7, #28
 8010150:	4619      	mov	r1, r3
 8010152:	68f8      	ldr	r0, [r7, #12]
 8010154:	f7f2 fda0 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8010158:	e0db      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 801015a:	68fb      	ldr	r3, [r7, #12]
 801015c:	683a      	ldr	r2, [r7, #0]
 801015e:	68b9      	ldr	r1, [r7, #8]
 8010160:	4618      	mov	r0, r3
 8010162:	f000 fa2b 	bl	80105bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8010166:	e0d4      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
 8010168:	68bc      	ldr	r4, [r7, #8]
 801016a:	69bb      	ldr	r3, [r7, #24]
 801016c:	4618      	mov	r0, r3
 801016e:	f000 fa19 	bl	80105a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8010172:	4603      	mov	r3, r0
 8010174:	461a      	mov	r2, r3
 8010176:	6839      	ldr	r1, [r7, #0]
 8010178:	4620      	mov	r0, r4
 801017a:	f7f2 ff0d 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801017e:	4603      	mov	r3, r0
 8010180:	2b00      	cmp	r3, #0
 8010182:	d057      	beq.n	8010234 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x160>
	  iterator __before = __pos;
 8010184:	69bb      	ldr	r3, [r7, #24]
 8010186:	617b      	str	r3, [r7, #20]
	  if (__pos._M_node == _M_leftmost()) // begin()
 8010188:	69bc      	ldr	r4, [r7, #24]
 801018a:	68b8      	ldr	r0, [r7, #8]
 801018c:	f000 fa9b 	bl	80106c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 8010190:	4603      	mov	r3, r0
 8010192:	681b      	ldr	r3, [r3, #0]
 8010194:	429c      	cmp	r4, r3
 8010196:	bf0c      	ite	eq
 8010198:	2301      	moveq	r3, #1
 801019a:	2300      	movne	r3, #0
 801019c:	b2db      	uxtb	r3, r3
 801019e:	2b00      	cmp	r3, #0
 80101a0:	d00d      	beq.n	80101be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0xea>
	    return _Res(_M_leftmost(), _M_leftmost());
 80101a2:	68b8      	ldr	r0, [r7, #8]
 80101a4:	f000 fa8f 	bl	80106c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 80101a8:	4604      	mov	r4, r0
 80101aa:	68b8      	ldr	r0, [r7, #8]
 80101ac:	f000 fa8b 	bl	80106c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>
 80101b0:	4603      	mov	r3, r0
 80101b2:	461a      	mov	r2, r3
 80101b4:	4621      	mov	r1, r4
 80101b6:	68f8      	ldr	r0, [r7, #12]
 80101b8:	f7f2 fe15 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80101bc:	e0a9      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
 80101be:	68bc      	ldr	r4, [r7, #8]
 80101c0:	f107 0314 	add.w	r3, r7, #20
 80101c4:	4618      	mov	r0, r3
 80101c6:	f000 fa8a 	bl	80106de <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
 80101ca:	4603      	mov	r3, r0
 80101cc:	681b      	ldr	r3, [r3, #0]
 80101ce:	4618      	mov	r0, r3
 80101d0:	f000 f9e8 	bl	80105a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80101d4:	4603      	mov	r3, r0
 80101d6:	683a      	ldr	r2, [r7, #0]
 80101d8:	4619      	mov	r1, r3
 80101da:	4620      	mov	r0, r4
 80101dc:	f7f2 fedc 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80101e0:	4603      	mov	r3, r0
 80101e2:	2b00      	cmp	r3, #0
 80101e4:	d01f      	beq.n	8010226 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x152>
	      if (_S_right(__before._M_node) == 0)
 80101e6:	697b      	ldr	r3, [r7, #20]
 80101e8:	4618      	mov	r0, r3
 80101ea:	f7ff feb7 	bl	800ff5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80101ee:	4603      	mov	r3, r0
 80101f0:	2b00      	cmp	r3, #0
 80101f2:	bf0c      	ite	eq
 80101f4:	2301      	moveq	r3, #1
 80101f6:	2300      	movne	r3, #0
 80101f8:	b2db      	uxtb	r3, r3
 80101fa:	2b00      	cmp	r3, #0
 80101fc:	d00a      	beq.n	8010214 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x140>
		return _Res(0, __before._M_node);
 80101fe:	2300      	movs	r3, #0
 8010200:	623b      	str	r3, [r7, #32]
 8010202:	f107 0214 	add.w	r2, r7, #20
 8010206:	f107 0320 	add.w	r3, r7, #32
 801020a:	4619      	mov	r1, r3
 801020c:	68f8      	ldr	r0, [r7, #12]
 801020e:	f7f2 fd43 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8010212:	e07e      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__pos._M_node, __pos._M_node);
 8010214:	f107 0218 	add.w	r2, r7, #24
 8010218:	f107 0318 	add.w	r3, r7, #24
 801021c:	4619      	mov	r1, r3
 801021e:	68f8      	ldr	r0, [r7, #12]
 8010220:	f7f2 fde1 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 8010224:	e075      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 8010226:	68fb      	ldr	r3, [r7, #12]
 8010228:	683a      	ldr	r2, [r7, #0]
 801022a:	68b9      	ldr	r1, [r7, #8]
 801022c:	4618      	mov	r0, r3
 801022e:	f000 f9c5 	bl	80105bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 8010232:	e06e      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
 8010234:	68bc      	ldr	r4, [r7, #8]
 8010236:	69bb      	ldr	r3, [r7, #24]
 8010238:	4618      	mov	r0, r3
 801023a:	f000 f9b3 	bl	80105a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801023e:	4603      	mov	r3, r0
 8010240:	683a      	ldr	r2, [r7, #0]
 8010242:	4619      	mov	r1, r3
 8010244:	4620      	mov	r0, r4
 8010246:	f7f2 fea7 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801024a:	4603      	mov	r3, r0
 801024c:	2b00      	cmp	r3, #0
 801024e:	d056      	beq.n	80102fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x22a>
	  iterator __after = __pos;
 8010250:	69bb      	ldr	r3, [r7, #24]
 8010252:	613b      	str	r3, [r7, #16]
	  if (__pos._M_node == _M_rightmost())
 8010254:	69bc      	ldr	r4, [r7, #24]
 8010256:	68b8      	ldr	r0, [r7, #8]
 8010258:	f000 f998 	bl	801058c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 801025c:	4603      	mov	r3, r0
 801025e:	681b      	ldr	r3, [r3, #0]
 8010260:	429c      	cmp	r4, r3
 8010262:	bf0c      	ite	eq
 8010264:	2301      	moveq	r3, #1
 8010266:	2300      	movne	r3, #0
 8010268:	b2db      	uxtb	r3, r3
 801026a:	2b00      	cmp	r3, #0
 801026c:	d00c      	beq.n	8010288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x1b4>
	    return _Res(0, _M_rightmost());
 801026e:	2300      	movs	r3, #0
 8010270:	627b      	str	r3, [r7, #36]	; 0x24
 8010272:	68b8      	ldr	r0, [r7, #8]
 8010274:	f000 f98a 	bl	801058c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>
 8010278:	4602      	mov	r2, r0
 801027a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 801027e:	4619      	mov	r1, r3
 8010280:	68f8      	ldr	r0, [r7, #12]
 8010282:	f7f2 fd09 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 8010286:	e044      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
 8010288:	68bc      	ldr	r4, [r7, #8]
 801028a:	f107 0310 	add.w	r3, r7, #16
 801028e:	4618      	mov	r0, r3
 8010290:	f000 fa36 	bl	8010700 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>
 8010294:	4603      	mov	r3, r0
 8010296:	681b      	ldr	r3, [r3, #0]
 8010298:	4618      	mov	r0, r3
 801029a:	f000 f983 	bl	80105a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 801029e:	4603      	mov	r3, r0
 80102a0:	461a      	mov	r2, r3
 80102a2:	6839      	ldr	r1, [r7, #0]
 80102a4:	4620      	mov	r0, r4
 80102a6:	f7f2 fe77 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80102aa:	4603      	mov	r3, r0
 80102ac:	2b00      	cmp	r3, #0
 80102ae:	d01f      	beq.n	80102f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x21c>
	      if (_S_right(__pos._M_node) == 0)
 80102b0:	69bb      	ldr	r3, [r7, #24]
 80102b2:	4618      	mov	r0, r3
 80102b4:	f7ff fe52 	bl	800ff5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 80102b8:	4603      	mov	r3, r0
 80102ba:	2b00      	cmp	r3, #0
 80102bc:	bf0c      	ite	eq
 80102be:	2301      	moveq	r3, #1
 80102c0:	2300      	movne	r3, #0
 80102c2:	b2db      	uxtb	r3, r3
 80102c4:	2b00      	cmp	r3, #0
 80102c6:	d00a      	beq.n	80102de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x20a>
		return _Res(0, __pos._M_node);
 80102c8:	2300      	movs	r3, #0
 80102ca:	62bb      	str	r3, [r7, #40]	; 0x28
 80102cc:	f107 0218 	add.w	r2, r7, #24
 80102d0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80102d4:	4619      	mov	r1, r3
 80102d6:	68f8      	ldr	r0, [r7, #12]
 80102d8:	f7f2 fcde 	bl	8002c98 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEERKS1_OT_>
 80102dc:	e019      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
		return _Res(__after._M_node, __after._M_node);
 80102de:	f107 0210 	add.w	r2, r7, #16
 80102e2:	f107 0310 	add.w	r3, r7, #16
 80102e6:	4619      	mov	r1, r3
 80102e8:	68f8      	ldr	r0, [r7, #12]
 80102ea:	f7f2 fd7c 	bl	8002de6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
 80102ee:	e010      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	    return _M_get_insert_unique_pos(__k);
 80102f0:	68fb      	ldr	r3, [r7, #12]
 80102f2:	683a      	ldr	r2, [r7, #0]
 80102f4:	68b9      	ldr	r1, [r7, #8]
 80102f6:	4618      	mov	r0, r3
 80102f8:	f000 f960 	bl	80105bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
 80102fc:	e009      	b.n	8010312 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS9_ERS7_+0x23e>
	return _Res(__pos._M_node, 0);
 80102fe:	2300      	movs	r3, #0
 8010300:	62fb      	str	r3, [r7, #44]	; 0x2c
 8010302:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8010306:	f107 0318 	add.w	r3, r7, #24
 801030a:	4619      	mov	r1, r3
 801030c:	68f8      	ldr	r0, [r7, #12]
 801030e:	f7f2 fda5 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 8010312:	68f8      	ldr	r0, [r7, #12]
 8010314:	3734      	adds	r7, #52	; 0x34
 8010316:	46bd      	mov	sp, r7
 8010318:	bd90      	pop	{r4, r7, pc}

0801031a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>:
      _S_key(_Const_Link_type __x)
 801031a:	b580      	push	{r7, lr}
 801031c:	b084      	sub	sp, #16
 801031e:	af00      	add	r7, sp, #0
 8010320:	6078      	str	r0, [r7, #4]
	return _KeyOfValue()(*__x->_M_valptr());
 8010322:	6878      	ldr	r0, [r7, #4]
 8010324:	f000 f9fd 	bl	8010722 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8010328:	4602      	mov	r2, r0
 801032a:	f107 030c 	add.w	r3, r7, #12
 801032e:	4611      	mov	r1, r2
 8010330:	4618      	mov	r0, r3
 8010332:	f000 fa04 	bl	801073e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>
 8010336:	4603      	mov	r3, r0
      }
 8010338:	4618      	mov	r0, r3
 801033a:	3710      	adds	r7, #16
 801033c:	46bd      	mov	sp, r7
 801033e:	bd80      	pop	{r7, pc}

08010340 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 8010340:	b5b0      	push	{r4, r5, r7, lr}
 8010342:	b086      	sub	sp, #24
 8010344:	af00      	add	r7, sp, #0
 8010346:	60f8      	str	r0, [r7, #12]
 8010348:	60b9      	str	r1, [r7, #8]
 801034a:	607a      	str	r2, [r7, #4]
 801034c:	603b      	str	r3, [r7, #0]
			    || _M_impl._M_key_compare(_S_key(__z),
 801034e:	68bb      	ldr	r3, [r7, #8]
 8010350:	2b00      	cmp	r3, #0
 8010352:	d117      	bne.n	8010384 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
      bool __insert_left = (__x != 0 || __p == _M_end()
 8010354:	68f8      	ldr	r0, [r7, #12]
 8010356:	f000 f866 	bl	8010426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 801035a:	4602      	mov	r2, r0
 801035c:	687b      	ldr	r3, [r7, #4]
 801035e:	4293      	cmp	r3, r2
 8010360:	d010      	beq.n	8010384 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x44>
			    || _M_impl._M_key_compare(_S_key(__z),
 8010362:	68fc      	ldr	r4, [r7, #12]
 8010364:	6838      	ldr	r0, [r7, #0]
 8010366:	f7ff ffd8 	bl	801031a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 801036a:	4605      	mov	r5, r0
 801036c:	6878      	ldr	r0, [r7, #4]
 801036e:	f000 f919 	bl	80105a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8010372:	4603      	mov	r3, r0
 8010374:	461a      	mov	r2, r3
 8010376:	4629      	mov	r1, r5
 8010378:	4620      	mov	r0, r4
 801037a:	f7f2 fe0d 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801037e:	4603      	mov	r3, r0
 8010380:	2b00      	cmp	r3, #0
 8010382:	d001      	beq.n	8010388 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x48>
 8010384:	2301      	movs	r3, #1
 8010386:	e000      	b.n	801038a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSH_PSt13_Rb_tree_nodeIS9_E+0x4a>
 8010388:	2300      	movs	r3, #0
      bool __insert_left = (__x != 0 || __p == _M_end()
 801038a:	75fb      	strb	r3, [r7, #23]
				    this->_M_impl._M_header);
 801038c:	68fb      	ldr	r3, [r7, #12]
 801038e:	3304      	adds	r3, #4
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8010390:	7df8      	ldrb	r0, [r7, #23]
 8010392:	687a      	ldr	r2, [r7, #4]
 8010394:	6839      	ldr	r1, [r7, #0]
 8010396:	f00f ffa0 	bl	80202da <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
      ++_M_impl._M_node_count;
 801039a:	68fb      	ldr	r3, [r7, #12]
 801039c:	695b      	ldr	r3, [r3, #20]
 801039e:	1c5a      	adds	r2, r3, #1
 80103a0:	68fb      	ldr	r3, [r7, #12]
 80103a2:	615a      	str	r2, [r3, #20]
      return iterator(__z);
 80103a4:	f107 0310 	add.w	r3, r7, #16
 80103a8:	6839      	ldr	r1, [r7, #0]
 80103aa:	4618      	mov	r0, r3
 80103ac:	f000 f805 	bl	80103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 80103b0:	693b      	ldr	r3, [r7, #16]
    }
 80103b2:	4618      	mov	r0, r3
 80103b4:	3718      	adds	r7, #24
 80103b6:	46bd      	mov	sp, r7
 80103b8:	bdb0      	pop	{r4, r5, r7, pc}

080103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
 80103ba:	b480      	push	{r7}
 80103bc:	b083      	sub	sp, #12
 80103be:	af00      	add	r7, sp, #0
 80103c0:	6078      	str	r0, [r7, #4]
 80103c2:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 80103c4:	687b      	ldr	r3, [r7, #4]
 80103c6:	683a      	ldr	r2, [r7, #0]
 80103c8:	601a      	str	r2, [r3, #0]
 80103ca:	687b      	ldr	r3, [r7, #4]
 80103cc:	4618      	mov	r0, r3
 80103ce:	370c      	adds	r7, #12
 80103d0:	46bd      	mov	sp, r7
 80103d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103d6:	4770      	bx	lr

080103d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 80103d8:	b590      	push	{r4, r7, lr}
 80103da:	b083      	sub	sp, #12
 80103dc:	af00      	add	r7, sp, #0
 80103de:	6078      	str	r0, [r7, #4]
 80103e0:	6039      	str	r1, [r7, #0]
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
 80103e2:	6878      	ldr	r0, [r7, #4]
 80103e4:	f000 f9b7 	bl	8010756 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80103e8:	4604      	mov	r4, r0
 80103ea:	6838      	ldr	r0, [r7, #0]
 80103ec:	f7ff fe11 	bl	8010012 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 80103f0:	4603      	mov	r3, r0
 80103f2:	4619      	mov	r1, r3
 80103f4:	4620      	mov	r0, r4
 80103f6:	f000 f9b9 	bl	801076c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>
      }
 80103fa:	bf00      	nop
 80103fc:	370c      	adds	r7, #12
 80103fe:	46bd      	mov	sp, r7
 8010400:	bd90      	pop	{r4, r7, pc}

08010402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
 8010402:	b580      	push	{r7, lr}
 8010404:	b082      	sub	sp, #8
 8010406:	af00      	add	r7, sp, #0
 8010408:	6078      	str	r0, [r7, #4]
 801040a:	6039      	str	r1, [r7, #0]
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
 801040c:	6878      	ldr	r0, [r7, #4]
 801040e:	f000 f9a2 	bl	8010756 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8010412:	4603      	mov	r3, r0
 8010414:	2201      	movs	r2, #1
 8010416:	6839      	ldr	r1, [r7, #0]
 8010418:	4618      	mov	r0, r3
 801041a:	f000 f9b4 	bl	8010786 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>
 801041e:	bf00      	nop
 8010420:	3708      	adds	r7, #8
 8010422:	46bd      	mov	sp, r7
 8010424:	bd80      	pop	{r7, pc}

08010426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
 8010426:	b480      	push	{r7}
 8010428:	b083      	sub	sp, #12
 801042a:	af00      	add	r7, sp, #0
 801042c:	6078      	str	r0, [r7, #4]
      { return &this->_M_impl._M_header; }
 801042e:	687b      	ldr	r3, [r7, #4]
 8010430:	3304      	adds	r3, #4
 8010432:	4618      	mov	r0, r3
 8010434:	370c      	adds	r7, #12
 8010436:	46bd      	mov	sp, r7
 8010438:	f85d 7b04 	ldr.w	r7, [sp], #4
 801043c:	4770      	bx	lr

0801043e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801043e:	b590      	push	{r4, r7, lr}
 8010440:	b087      	sub	sp, #28
 8010442:	af00      	add	r7, sp, #0
 8010444:	60f8      	str	r0, [r7, #12]
 8010446:	60b9      	str	r1, [r7, #8]
 8010448:	607a      	str	r2, [r7, #4]
 801044a:	603b      	str	r3, [r7, #0]
      while (__x != 0)
 801044c:	68bb      	ldr	r3, [r7, #8]
 801044e:	2b00      	cmp	r3, #0
 8010450:	d01b      	beq.n	801048a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x4c>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
 8010452:	68fc      	ldr	r4, [r7, #12]
 8010454:	68b8      	ldr	r0, [r7, #8]
 8010456:	f7ff ff60 	bl	801031a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 801045a:	4603      	mov	r3, r0
 801045c:	683a      	ldr	r2, [r7, #0]
 801045e:	4619      	mov	r1, r3
 8010460:	4620      	mov	r0, r4
 8010462:	f7f2 fd99 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8010466:	4603      	mov	r3, r0
 8010468:	f083 0301 	eor.w	r3, r3, #1
 801046c:	b2db      	uxtb	r3, r3
 801046e:	2b00      	cmp	r3, #0
 8010470:	d006      	beq.n	8010480 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0x42>
	  __y = __x, __x = _S_left(__x);
 8010472:	68bb      	ldr	r3, [r7, #8]
 8010474:	607b      	str	r3, [r7, #4]
 8010476:	68b8      	ldr	r0, [r7, #8]
 8010478:	f7ff fd7c 	bl	800ff74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 801047c:	60b8      	str	r0, [r7, #8]
 801047e:	e7e5      	b.n	801044c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
	  __x = _S_right(__x);
 8010480:	68b8      	ldr	r0, [r7, #8]
 8010482:	f7ff fd6b 	bl	800ff5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8010486:	60b8      	str	r0, [r7, #8]
      while (__x != 0)
 8010488:	e7e0      	b.n	801044c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_EPSt18_Rb_tree_node_baseRS7_+0xe>
      return iterator(__y);
 801048a:	f107 0314 	add.w	r3, r7, #20
 801048e:	6879      	ldr	r1, [r7, #4]
 8010490:	4618      	mov	r0, r3
 8010492:	f7ff ff92 	bl	80103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8010496:	697b      	ldr	r3, [r7, #20]
    }
 8010498:	4618      	mov	r0, r3
 801049a:	371c      	adds	r7, #28
 801049c:	46bd      	mov	sp, r7
 801049e:	bd90      	pop	{r4, r7, pc}

080104a0 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() noexcept
 80104a0:	b580      	push	{r7, lr}
 80104a2:	b082      	sub	sp, #8
 80104a4:	af00      	add	r7, sp, #0
 80104a6:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 80104a8:	6878      	ldr	r0, [r7, #4]
 80104aa:	f000 f97b 	bl	80107a4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 80104ae:	4603      	mov	r3, r0
 80104b0:	4618      	mov	r0, r3
 80104b2:	3708      	adds	r7, #8
 80104b4:	46bd      	mov	sp, r7
 80104b6:	bd80      	pop	{r7, pc}

080104b8 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>:
      constexpr _Head_base(const _Head& __h)
 80104b8:	b480      	push	{r7}
 80104ba:	b083      	sub	sp, #12
 80104bc:	af00      	add	r7, sp, #0
 80104be:	6078      	str	r0, [r7, #4]
 80104c0:	6039      	str	r1, [r7, #0]
      : _M_head_impl(__h) { }
 80104c2:	687b      	ldr	r3, [r7, #4]
 80104c4:	683a      	ldr	r2, [r7, #0]
 80104c6:	601a      	str	r2, [r3, #0]
 80104c8:	687b      	ldr	r3, [r7, #4]
 80104ca:	4618      	mov	r0, r3
 80104cc:	370c      	adds	r7, #12
 80104ce:	46bd      	mov	sp, r7
 80104d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104d4:	4770      	bx	lr

080104d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>:
      _M_get_node()
 80104d6:	b580      	push	{r7, lr}
 80104d8:	b082      	sub	sp, #8
 80104da:	af00      	add	r7, sp, #0
 80104dc:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 80104de:	6878      	ldr	r0, [r7, #4]
 80104e0:	f000 f939 	bl	8010756 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 80104e4:	4603      	mov	r3, r0
 80104e6:	2101      	movs	r1, #1
 80104e8:	4618      	mov	r0, r3
 80104ea:	f000 f966 	bl	80107ba <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>
 80104ee:	4603      	mov	r3, r0
 80104f0:	4618      	mov	r0, r3
 80104f2:	3708      	adds	r7, #8
 80104f4:	46bd      	mov	sp, r7
 80104f6:	bd80      	pop	{r7, pc}

080104f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESK_IJEEEEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 80104f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104fc:	b086      	sub	sp, #24
 80104fe:	af02      	add	r7, sp, #8
 8010500:	60f8      	str	r0, [r7, #12]
 8010502:	60b9      	str	r1, [r7, #8]
 8010504:	607a      	str	r2, [r7, #4]
 8010506:	603b      	str	r3, [r7, #0]
	      ::new(__node) _Rb_tree_node<_Val>;
 8010508:	68bb      	ldr	r3, [r7, #8]
 801050a:	4619      	mov	r1, r3
 801050c:	2048      	movs	r0, #72	; 0x48
 801050e:	f7f0 fd8d 	bl	800102c <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 8010512:	68f8      	ldr	r0, [r7, #12]
 8010514:	f000 f91f 	bl	8010756 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 8010518:	4604      	mov	r4, r0
 801051a:	68b8      	ldr	r0, [r7, #8]
 801051c:	f7ff fd79 	bl	8010012 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 8010520:	4605      	mov	r5, r0
 8010522:	6878      	ldr	r0, [r7, #4]
 8010524:	f7ff fd92 	bl	801004c <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8010528:	4606      	mov	r6, r0
 801052a:	6838      	ldr	r0, [r7, #0]
 801052c:	f7ff fd99 	bl	8010062 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010530:	4680      	mov	r8, r0
 8010532:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8010534:	f7ff fda0 	bl	8010078 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8010538:	4603      	mov	r3, r0
 801053a:	9300      	str	r3, [sp, #0]
 801053c:	4643      	mov	r3, r8
 801053e:	4632      	mov	r2, r6
 8010540:	4629      	mov	r1, r5
 8010542:	4620      	mov	r0, r4
 8010544:	f000 f948 	bl	80107d8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>
	}
 8010548:	bf00      	nop
 801054a:	3710      	adds	r7, #16
 801054c:	46bd      	mov	sp, r7
 801054e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010552 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8010552:	b580      	push	{r7, lr}
 8010554:	b084      	sub	sp, #16
 8010556:	af00      	add	r7, sp, #0
 8010558:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
 801055a:	687b      	ldr	r3, [r7, #4]
 801055c:	681a      	ldr	r2, [r3, #0]
 801055e:	f107 030c 	add.w	r3, r7, #12
 8010562:	4611      	mov	r1, r2
 8010564:	4618      	mov	r0, r3
 8010566:	f7ff ff28 	bl	80103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801056a:	68fb      	ldr	r3, [r7, #12]
 801056c:	4618      	mov	r0, r3
 801056e:	3710      	adds	r7, #16
 8010570:	46bd      	mov	sp, r7
 8010572:	bd80      	pop	{r7, pc}

08010574 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8010574:	b480      	push	{r7}
 8010576:	b083      	sub	sp, #12
 8010578:	af00      	add	r7, sp, #0
 801057a:	6078      	str	r0, [r7, #4]
      { return _M_impl._M_node_count; }
 801057c:	687b      	ldr	r3, [r7, #4]
 801057e:	695b      	ldr	r3, [r3, #20]
 8010580:	4618      	mov	r0, r3
 8010582:	370c      	adds	r7, #12
 8010584:	46bd      	mov	sp, r7
 8010586:	f85d 7b04 	ldr.w	r7, [sp], #4
 801058a:	4770      	bx	lr

0801058c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
 801058c:	b480      	push	{r7}
 801058e:	b083      	sub	sp, #12
 8010590:	af00      	add	r7, sp, #0
 8010592:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_right; }
 8010594:	687b      	ldr	r3, [r7, #4]
 8010596:	3310      	adds	r3, #16
 8010598:	4618      	mov	r0, r3
 801059a:	370c      	adds	r7, #12
 801059c:	46bd      	mov	sp, r7
 801059e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80105a2:	4770      	bx	lr

080105a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
 80105a4:	b580      	push	{r7, lr}
 80105a6:	b082      	sub	sp, #8
 80105a8:	af00      	add	r7, sp, #0
 80105aa:	6078      	str	r0, [r7, #4]
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
 80105ac:	6878      	ldr	r0, [r7, #4]
 80105ae:	f7ff feb4 	bl	801031a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 80105b2:	4603      	mov	r3, r0
 80105b4:	4618      	mov	r0, r3
 80105b6:	3708      	adds	r7, #8
 80105b8:	46bd      	mov	sp, r7
 80105ba:	bd80      	pop	{r7, pc}

080105bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80105bc:	b590      	push	{r4, r7, lr}
 80105be:	b08b      	sub	sp, #44	; 0x2c
 80105c0:	af00      	add	r7, sp, #0
 80105c2:	60f8      	str	r0, [r7, #12]
 80105c4:	60b9      	str	r1, [r7, #8]
 80105c6:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 80105c8:	68b8      	ldr	r0, [r7, #8]
 80105ca:	f7ff fc08 	bl	800fdde <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>
 80105ce:	4603      	mov	r3, r0
 80105d0:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 80105d2:	68b8      	ldr	r0, [r7, #8]
 80105d4:	f7ff ff27 	bl	8010426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80105d8:	4603      	mov	r3, r0
 80105da:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 80105dc:	2301      	movs	r3, #1
 80105de:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 80105e2:	69bb      	ldr	r3, [r7, #24]
 80105e4:	2b00      	cmp	r3, #0
 80105e6:	d020      	beq.n	801062a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 80105e8:	69bb      	ldr	r3, [r7, #24]
 80105ea:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 80105ec:	68bc      	ldr	r4, [r7, #8]
 80105ee:	69bb      	ldr	r3, [r7, #24]
 80105f0:	4618      	mov	r0, r3
 80105f2:	f7ff fe92 	bl	801031a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>
 80105f6:	4603      	mov	r3, r0
 80105f8:	461a      	mov	r2, r3
 80105fa:	6879      	ldr	r1, [r7, #4]
 80105fc:	4620      	mov	r0, r4
 80105fe:	f7f2 fccb 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8010602:	4603      	mov	r3, r0
 8010604:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8010608:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801060c:	2b00      	cmp	r3, #0
 801060e:	d005      	beq.n	801061c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x60>
 8010610:	69bb      	ldr	r3, [r7, #24]
 8010612:	4618      	mov	r0, r3
 8010614:	f7ff fcae 	bl	800ff74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>
 8010618:	4603      	mov	r3, r0
 801061a:	e004      	b.n	8010626 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x6a>
 801061c:	69bb      	ldr	r3, [r7, #24]
 801061e:	4618      	mov	r0, r3
 8010620:	f7ff fc9c 	bl	800ff5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>
 8010624:	4603      	mov	r3, r0
 8010626:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8010628:	e7db      	b.n	80105e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 801062a:	697a      	ldr	r2, [r7, #20]
 801062c:	f107 0310 	add.w	r3, r7, #16
 8010630:	4611      	mov	r1, r2
 8010632:	4618      	mov	r0, r3
 8010634:	f7ff fec1 	bl	80103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8010638:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 801063c:	2b00      	cmp	r3, #0
 801063e:	d01d      	beq.n	801067c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 8010640:	68b8      	ldr	r0, [r7, #8]
 8010642:	f000 f8e7 	bl	8010814 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>
 8010646:	4603      	mov	r3, r0
 8010648:	61fb      	str	r3, [r7, #28]
 801064a:	f107 021c 	add.w	r2, r7, #28
 801064e:	f107 0310 	add.w	r3, r7, #16
 8010652:	4611      	mov	r1, r2
 8010654:	4618      	mov	r0, r3
 8010656:	f7ff fbea 	bl	800fe2e <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEESC_>
 801065a:	4603      	mov	r3, r0
 801065c:	2b00      	cmp	r3, #0
 801065e:	d008      	beq.n	8010672 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8010660:	f107 0214 	add.w	r2, r7, #20
 8010664:	f107 0318 	add.w	r3, r7, #24
 8010668:	4619      	mov	r1, r3
 801066a:	68f8      	ldr	r0, [r7, #12]
 801066c:	f000 f8e3 	bl	8010836 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 8010670:	e025      	b.n	80106be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 8010672:	f107 0310 	add.w	r3, r7, #16
 8010676:	4618      	mov	r0, r3
 8010678:	f000 f831 	bl	80106de <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 801067c:	68bc      	ldr	r4, [r7, #8]
 801067e:	693b      	ldr	r3, [r7, #16]
 8010680:	4618      	mov	r0, r3
 8010682:	f7ff ff8f 	bl	80105a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8010686:	4603      	mov	r3, r0
 8010688:	687a      	ldr	r2, [r7, #4]
 801068a:	4619      	mov	r1, r3
 801068c:	4620      	mov	r0, r4
 801068e:	f7f2 fc83 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 8010692:	4603      	mov	r3, r0
 8010694:	2b00      	cmp	r3, #0
 8010696:	d008      	beq.n	80106aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 8010698:	f107 0214 	add.w	r2, r7, #20
 801069c:	f107 0318 	add.w	r3, r7, #24
 80106a0:	4619      	mov	r1, r3
 80106a2:	68f8      	ldr	r0, [r7, #12]
 80106a4:	f000 f8c7 	bl	8010836 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>
 80106a8:	e009      	b.n	80106be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 80106aa:	2300      	movs	r3, #0
 80106ac:	623b      	str	r3, [r7, #32]
 80106ae:	f107 0220 	add.w	r2, r7, #32
 80106b2:	f107 0310 	add.w	r3, r7, #16
 80106b6:	4619      	mov	r1, r3
 80106b8:	68f8      	ldr	r0, [r7, #12]
 80106ba:	f7f2 fbcf 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80106be:	68f8      	ldr	r0, [r7, #12]
 80106c0:	372c      	adds	r7, #44	; 0x2c
 80106c2:	46bd      	mov	sp, r7
 80106c4:	bd90      	pop	{r4, r7, pc}

080106c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
 80106c6:	b480      	push	{r7}
 80106c8:	b083      	sub	sp, #12
 80106ca:	af00      	add	r7, sp, #0
 80106cc:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_header._M_left; }
 80106ce:	687b      	ldr	r3, [r7, #4]
 80106d0:	330c      	adds	r3, #12
 80106d2:	4618      	mov	r0, r3
 80106d4:	370c      	adds	r7, #12
 80106d6:	46bd      	mov	sp, r7
 80106d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106dc:	4770      	bx	lr

080106de <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 80106de:	b580      	push	{r7, lr}
 80106e0:	b082      	sub	sp, #8
 80106e2:	af00      	add	r7, sp, #0
 80106e4:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 80106e6:	687b      	ldr	r3, [r7, #4]
 80106e8:	681b      	ldr	r3, [r3, #0]
 80106ea:	4618      	mov	r0, r3
 80106ec:	f00f fdf3 	bl	80202d6 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 80106f0:	4602      	mov	r2, r0
 80106f2:	687b      	ldr	r3, [r7, #4]
 80106f4:	601a      	str	r2, [r3, #0]
	return *this;
 80106f6:	687b      	ldr	r3, [r7, #4]
      }
 80106f8:	4618      	mov	r0, r3
 80106fa:	3708      	adds	r7, #8
 80106fc:	46bd      	mov	sp, r7
 80106fe:	bd80      	pop	{r7, pc}

08010700 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8010700:	b580      	push	{r7, lr}
 8010702:	b082      	sub	sp, #8
 8010704:	af00      	add	r7, sp, #0
 8010706:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_increment(_M_node);
 8010708:	687b      	ldr	r3, [r7, #4]
 801070a:	681b      	ldr	r3, [r3, #0]
 801070c:	4618      	mov	r0, r3
 801070e:	f00f fdcf 	bl	80202b0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 8010712:	4602      	mov	r2, r0
 8010714:	687b      	ldr	r3, [r7, #4]
 8010716:	601a      	str	r2, [r3, #0]
	return *this;
 8010718:	687b      	ldr	r3, [r7, #4]
      }
 801071a:	4618      	mov	r0, r3
 801071c:	3708      	adds	r7, #8
 801071e:	46bd      	mov	sp, r7
 8010720:	bd80      	pop	{r7, pc}

08010722 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>:
      _M_valptr() const
 8010722:	b580      	push	{r7, lr}
 8010724:	b082      	sub	sp, #8
 8010726:	af00      	add	r7, sp, #0
 8010728:	6078      	str	r0, [r7, #4]
      { return _M_storage._M_ptr(); }
 801072a:	687b      	ldr	r3, [r7, #4]
 801072c:	3310      	adds	r3, #16
 801072e:	4618      	mov	r0, r3
 8010730:	f000 f89a 	bl	8010868 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>
 8010734:	4603      	mov	r3, r0
 8010736:	4618      	mov	r0, r3
 8010738:	3708      	adds	r7, #8
 801073a:	46bd      	mov	sp, r7
 801073c:	bd80      	pop	{r7, pc}

0801073e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERKS9_>:
      operator()(const _Pair& __x) const
 801073e:	b480      	push	{r7}
 8010740:	b083      	sub	sp, #12
 8010742:	af00      	add	r7, sp, #0
 8010744:	6078      	str	r0, [r7, #4]
 8010746:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8010748:	683b      	ldr	r3, [r7, #0]
 801074a:	4618      	mov	r0, r3
 801074c:	370c      	adds	r7, #12
 801074e:	46bd      	mov	sp, r7
 8010750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010754:	4770      	bx	lr

08010756 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 8010756:	b480      	push	{r7}
 8010758:	b083      	sub	sp, #12
 801075a:	af00      	add	r7, sp, #0
 801075c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801075e:	687b      	ldr	r3, [r7, #4]
 8010760:	4618      	mov	r0, r3
 8010762:	370c      	adds	r7, #12
 8010764:	46bd      	mov	sp, r7
 8010766:	f85d 7b04 	ldr.w	r7, [sp], #4
 801076a:	4770      	bx	lr

0801076c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE7destroyISA_EEvRSC_PT_>:
	destroy(allocator_type& __a, _Up* __p)
 801076c:	b580      	push	{r7, lr}
 801076e:	b082      	sub	sp, #8
 8010770:	af00      	add	r7, sp, #0
 8010772:	6078      	str	r0, [r7, #4]
 8010774:	6039      	str	r1, [r7, #0]
	{ __a.destroy(__p); }
 8010776:	6839      	ldr	r1, [r7, #0]
 8010778:	6878      	ldr	r0, [r7, #4]
 801077a:	f000 f8ef 	bl	801095c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>
 801077e:	bf00      	nop
 8010780:	3708      	adds	r7, #8
 8010782:	46bd      	mov	sp, r7
 8010784:	bd80      	pop	{r7, pc}

08010786 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE10deallocateERSC_PSB_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8010786:	b580      	push	{r7, lr}
 8010788:	b084      	sub	sp, #16
 801078a:	af00      	add	r7, sp, #0
 801078c:	60f8      	str	r0, [r7, #12]
 801078e:	60b9      	str	r1, [r7, #8]
 8010790:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8010792:	687a      	ldr	r2, [r7, #4]
 8010794:	68b9      	ldr	r1, [r7, #8]
 8010796:	68f8      	ldr	r0, [r7, #12]
 8010798:	f000 f8ec 	bl	8010974 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>
 801079c:	bf00      	nop
 801079e:	3710      	adds	r7, #16
 80107a0:	46bd      	mov	sp, r7
 80107a2:	bd80      	pop	{r7, pc}

080107a4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() noexcept
 80107a4:	b480      	push	{r7}
 80107a6:	b083      	sub	sp, #12
 80107a8:	af00      	add	r7, sp, #0
 80107aa:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80107ac:	687b      	ldr	r3, [r7, #4]
 80107ae:	4618      	mov	r0, r3
 80107b0:	370c      	adds	r7, #12
 80107b2:	46bd      	mov	sp, r7
 80107b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107b8:	4770      	bx	lr

080107ba <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE8allocateERSC_j>:
      allocate(allocator_type& __a, size_type __n)
 80107ba:	b580      	push	{r7, lr}
 80107bc:	b082      	sub	sp, #8
 80107be:	af00      	add	r7, sp, #0
 80107c0:	6078      	str	r0, [r7, #4]
 80107c2:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 80107c4:	2200      	movs	r2, #0
 80107c6:	6839      	ldr	r1, [r7, #0]
 80107c8:	6878      	ldr	r0, [r7, #4]
 80107ca:	f000 f8df 	bl	801098c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>
 80107ce:	4603      	mov	r3, r0
 80107d0:	4618      	mov	r0, r3
 80107d2:	3708      	adds	r7, #8
 80107d4:	46bd      	mov	sp, r7
 80107d6:	bd80      	pop	{r7, pc}

080107d8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS8_EESI_IJEEEEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80107d8:	b5b0      	push	{r4, r5, r7, lr}
 80107da:	b086      	sub	sp, #24
 80107dc:	af02      	add	r7, sp, #8
 80107de:	60f8      	str	r0, [r7, #12]
 80107e0:	60b9      	str	r1, [r7, #8]
 80107e2:	607a      	str	r2, [r7, #4]
 80107e4:	603b      	str	r3, [r7, #0]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80107e6:	6878      	ldr	r0, [r7, #4]
 80107e8:	f7ff fc30 	bl	801004c <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 80107ec:	4604      	mov	r4, r0
 80107ee:	6838      	ldr	r0, [r7, #0]
 80107f0:	f7ff fc37 	bl	8010062 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 80107f4:	4605      	mov	r5, r0
 80107f6:	6a38      	ldr	r0, [r7, #32]
 80107f8:	f7ff fc3e 	bl	8010078 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 80107fc:	4603      	mov	r3, r0
 80107fe:	9300      	str	r3, [sp, #0]
 8010800:	462b      	mov	r3, r5
 8010802:	4622      	mov	r2, r4
 8010804:	68b9      	ldr	r1, [r7, #8]
 8010806:	68f8      	ldr	r0, [r7, #12]
 8010808:	f000 f8f2 	bl	80109f0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>
 801080c:	bf00      	nop
 801080e:	3710      	adds	r7, #16
 8010810:	46bd      	mov	sp, r7
 8010812:	bdb0      	pop	{r4, r5, r7, pc}

08010814 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8010814:	b580      	push	{r7, lr}
 8010816:	b084      	sub	sp, #16
 8010818:	af00      	add	r7, sp, #0
 801081a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 801081c:	687b      	ldr	r3, [r7, #4]
 801081e:	68da      	ldr	r2, [r3, #12]
 8010820:	f107 030c 	add.w	r3, r7, #12
 8010824:	4611      	mov	r1, r2
 8010826:	4618      	mov	r0, r3
 8010828:	f7ff fdc7 	bl	80103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 801082c:	68fb      	ldr	r3, [r7, #12]
 801082e:	4618      	mov	r0, r3
 8010830:	3710      	adds	r7, #16
 8010832:	46bd      	mov	sp, r7
 8010834:	bd80      	pop	{r7, pc}

08010836 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8010836:	b580      	push	{r7, lr}
 8010838:	b084      	sub	sp, #16
 801083a:	af00      	add	r7, sp, #0
 801083c:	60f8      	str	r0, [r7, #12]
 801083e:	60b9      	str	r1, [r7, #8]
 8010840:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8010842:	68b8      	ldr	r0, [r7, #8]
 8010844:	f000 f8fb 	bl	8010a3e <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>
 8010848:	4603      	mov	r3, r0
 801084a:	681a      	ldr	r2, [r3, #0]
 801084c:	68fb      	ldr	r3, [r7, #12]
 801084e:	601a      	str	r2, [r3, #0]
 8010850:	6878      	ldr	r0, [r7, #4]
 8010852:	f7f2 fdfa 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8010856:	4603      	mov	r3, r0
 8010858:	681a      	ldr	r2, [r3, #0]
 801085a:	68fb      	ldr	r3, [r7, #12]
 801085c:	605a      	str	r2, [r3, #4]
 801085e:	68fb      	ldr	r3, [r7, #12]
 8010860:	4618      	mov	r0, r3
 8010862:	3710      	adds	r7, #16
 8010864:	46bd      	mov	sp, r7
 8010866:	bd80      	pop	{r7, pc}

08010868 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8010868:	b580      	push	{r7, lr}
 801086a:	b082      	sub	sp, #8
 801086c:	af00      	add	r7, sp, #0
 801086e:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8010870:	6878      	ldr	r0, [r7, #4]
 8010872:	f000 f8ef 	bl	8010a54 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>
 8010876:	4603      	mov	r3, r0
 8010878:	4618      	mov	r0, r3
 801087a:	3708      	adds	r7, #8
 801087c:	46bd      	mov	sp, r7
 801087e:	bd80      	pop	{r7, pc}

08010880 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>:
    struct _Copy_ctor_base : _Variant_storage_alias<_Types...>
 8010880:	b580      	push	{r7, lr}
 8010882:	b082      	sub	sp, #8
 8010884:	af00      	add	r7, sp, #0
 8010886:	6078      	str	r0, [r7, #4]
 8010888:	687b      	ldr	r3, [r7, #4]
 801088a:	4618      	mov	r0, r3
 801088c:	f000 f8ed 	bl	8010a6a <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>
 8010890:	687b      	ldr	r3, [r7, #4]
 8010892:	4618      	mov	r0, r3
 8010894:	3708      	adds	r7, #8
 8010896:	46bd      	mov	sp, r7
 8010898:	bd80      	pop	{r7, pc}

0801089a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>:
    struct _Move_ctor_base : _Copy_ctor_alias<_Types...>
 801089a:	b580      	push	{r7, lr}
 801089c:	b082      	sub	sp, #8
 801089e:	af00      	add	r7, sp, #0
 80108a0:	6078      	str	r0, [r7, #4]
 80108a2:	687b      	ldr	r3, [r7, #4]
 80108a4:	4618      	mov	r0, r3
 80108a6:	f7ff ffeb 	bl	8010880 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>
 80108aa:	687b      	ldr	r3, [r7, #4]
 80108ac:	4618      	mov	r0, r3
 80108ae:	3708      	adds	r7, #8
 80108b0:	46bd      	mov	sp, r7
 80108b2:	bd80      	pop	{r7, pc}

080108b4 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>:
    struct _Copy_assign_base : _Move_ctor_alias<_Types...>
 80108b4:	b580      	push	{r7, lr}
 80108b6:	b082      	sub	sp, #8
 80108b8:	af00      	add	r7, sp, #0
 80108ba:	6078      	str	r0, [r7, #4]
 80108bc:	687b      	ldr	r3, [r7, #4]
 80108be:	4618      	mov	r0, r3
 80108c0:	f7ff ffeb 	bl	801089a <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>
 80108c4:	687b      	ldr	r3, [r7, #4]
 80108c6:	4618      	mov	r0, r3
 80108c8:	3708      	adds	r7, #8
 80108ca:	46bd      	mov	sp, r7
 80108cc:	bd80      	pop	{r7, pc}

080108ce <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>:
    struct _Move_assign_base : _Copy_assign_alias<_Types...>
 80108ce:	b580      	push	{r7, lr}
 80108d0:	b082      	sub	sp, #8
 80108d2:	af00      	add	r7, sp, #0
 80108d4:	6078      	str	r0, [r7, #4]
 80108d6:	687b      	ldr	r3, [r7, #4]
 80108d8:	4618      	mov	r0, r3
 80108da:	f7ff ffeb 	bl	80108b4 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>
 80108de:	687b      	ldr	r3, [r7, #4]
 80108e0:	4618      	mov	r0, r3
 80108e2:	3708      	adds	r7, #8
 80108e4:	46bd      	mov	sp, r7
 80108e6:	bd80      	pop	{r7, pc}

080108e8 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>:
    struct _Variant_base : _Move_assign_alias<_Types...>
 80108e8:	b580      	push	{r7, lr}
 80108ea:	b082      	sub	sp, #8
 80108ec:	af00      	add	r7, sp, #0
 80108ee:	6078      	str	r0, [r7, #4]
 80108f0:	687b      	ldr	r3, [r7, #4]
 80108f2:	4618      	mov	r0, r3
 80108f4:	f7ff ffeb 	bl	80108ce <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>
 80108f8:	687b      	ldr	r3, [r7, #4]
 80108fa:	4618      	mov	r0, r3
 80108fc:	3708      	adds	r7, #8
 80108fe:	46bd      	mov	sp, r7
 8010900:	bd80      	pop	{r7, pc}

08010902 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEED1Ev>:
      ~variant() = default;
 8010902:	b580      	push	{r7, lr}
 8010904:	b082      	sub	sp, #8
 8010906:	af00      	add	r7, sp, #0
 8010908:	6078      	str	r0, [r7, #4]
 801090a:	687b      	ldr	r3, [r7, #4]
 801090c:	4618      	mov	r0, r3
 801090e:	f7ff ffeb 	bl	80108e8 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>
 8010912:	687b      	ldr	r3, [r7, #4]
 8010914:	4618      	mov	r0, r3
 8010916:	3708      	adds	r7, #8
 8010918:	46bd      	mov	sp, r7
 801091a:	bd80      	pop	{r7, pc}

0801091c <_ZN6SymbolD1Ev>:
struct Symbol
 801091c:	b580      	push	{r7, lr}
 801091e:	b082      	sub	sp, #8
 8010920:	af00      	add	r7, sp, #0
 8010922:	6078      	str	r0, [r7, #4]
 8010924:	687b      	ldr	r3, [r7, #4]
 8010926:	3304      	adds	r3, #4
 8010928:	4618      	mov	r0, r3
 801092a:	f7ff ffea 	bl	8010902 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEED1Ev>
 801092e:	687b      	ldr	r3, [r7, #4]
 8010930:	4618      	mov	r0, r3
 8010932:	3708      	adds	r7, #8
 8010934:	46bd      	mov	sp, r7
 8010936:	bd80      	pop	{r7, pc}

08010938 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>:
    struct pair
 8010938:	b580      	push	{r7, lr}
 801093a:	b082      	sub	sp, #8
 801093c:	af00      	add	r7, sp, #0
 801093e:	6078      	str	r0, [r7, #4]
 8010940:	687b      	ldr	r3, [r7, #4]
 8010942:	3318      	adds	r3, #24
 8010944:	4618      	mov	r0, r3
 8010946:	f7ff ffe9 	bl	801091c <_ZN6SymbolD1Ev>
 801094a:	687b      	ldr	r3, [r7, #4]
 801094c:	4618      	mov	r0, r3
 801094e:	f00f fe32 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8010952:	687b      	ldr	r3, [r7, #4]
 8010954:	4618      	mov	r0, r3
 8010956:	3708      	adds	r7, #8
 8010958:	46bd      	mov	sp, r7
 801095a:	bd80      	pop	{r7, pc}

0801095c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE7destroyISB_EEvPT_>:
	destroy(_Up* __p)
 801095c:	b580      	push	{r7, lr}
 801095e:	b082      	sub	sp, #8
 8010960:	af00      	add	r7, sp, #0
 8010962:	6078      	str	r0, [r7, #4]
 8010964:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8010966:	6838      	ldr	r0, [r7, #0]
 8010968:	f7ff ffe6 	bl	8010938 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 801096c:	bf00      	nop
 801096e:	3708      	adds	r7, #8
 8010970:	46bd      	mov	sp, r7
 8010972:	bd80      	pop	{r7, pc}

08010974 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE10deallocateEPSC_j>:
      deallocate(pointer __p, size_type)
 8010974:	b580      	push	{r7, lr}
 8010976:	b084      	sub	sp, #16
 8010978:	af00      	add	r7, sp, #0
 801097a:	60f8      	str	r0, [r7, #12]
 801097c:	60b9      	str	r1, [r7, #8]
 801097e:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8010980:	68b8      	ldr	r0, [r7, #8]
 8010982:	f00f fc2e 	bl	80201e2 <_ZdlPv>
      }
 8010986:	3710      	adds	r7, #16
 8010988:	46bd      	mov	sp, r7
 801098a:	bd80      	pop	{r7, pc}

0801098c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801098c:	b580      	push	{r7, lr}
 801098e:	b084      	sub	sp, #16
 8010990:	af00      	add	r7, sp, #0
 8010992:	60f8      	str	r0, [r7, #12]
 8010994:	60b9      	str	r1, [r7, #8]
 8010996:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8010998:	68f8      	ldr	r0, [r7, #12]
 801099a:	f000 f873 	bl	8010a84 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>
 801099e:	4602      	mov	r2, r0
 80109a0:	68bb      	ldr	r3, [r7, #8]
 80109a2:	4293      	cmp	r3, r2
 80109a4:	bf8c      	ite	hi
 80109a6:	2301      	movhi	r3, #1
 80109a8:	2300      	movls	r3, #0
 80109aa:	b2db      	uxtb	r3, r3
 80109ac:	2b00      	cmp	r3, #0
 80109ae:	d001      	beq.n	80109b4 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80109b0:	f00f fcef 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 80109b4:	68ba      	ldr	r2, [r7, #8]
 80109b6:	4613      	mov	r3, r2
 80109b8:	00db      	lsls	r3, r3, #3
 80109ba:	4413      	add	r3, r2
 80109bc:	00db      	lsls	r3, r3, #3
 80109be:	4618      	mov	r0, r3
 80109c0:	f00f fc22 	bl	8020208 <_Znwj>
 80109c4:	4603      	mov	r3, r0
 80109c6:	bf00      	nop
      }
 80109c8:	4618      	mov	r0, r3
 80109ca:	3710      	adds	r7, #16
 80109cc:	46bd      	mov	sp, r7
 80109ce:	bd80      	pop	{r7, pc}

080109d0 <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
        explicit constexpr tuple(_UElements&&... __elements)
	: _Inherited(std::forward<_UElements>(__elements)...) {	}

      constexpr tuple(const tuple&) = default;

      constexpr tuple(tuple&&) = default;
 80109d0:	b580      	push	{r7, lr}
 80109d2:	b082      	sub	sp, #8
 80109d4:	af00      	add	r7, sp, #0
 80109d6:	6078      	str	r0, [r7, #4]
 80109d8:	6039      	str	r1, [r7, #0]
 80109da:	687b      	ldr	r3, [r7, #4]
 80109dc:	683a      	ldr	r2, [r7, #0]
 80109de:	4611      	mov	r1, r2
 80109e0:	4618      	mov	r0, r3
 80109e2:	f000 f85d 	bl	8010aa0 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 80109e6:	687b      	ldr	r3, [r7, #4]
 80109e8:	4618      	mov	r0, r3
 80109ea:	3708      	adds	r7, #8
 80109ec:	46bd      	mov	sp, r7
 80109ee:	bd80      	pop	{r7, pc}

080109f0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JRKSt21piecewise_construct_tSt5tupleIJRS9_EESI_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80109f0:	b590      	push	{r4, r7, lr}
 80109f2:	b089      	sub	sp, #36	; 0x24
 80109f4:	af00      	add	r7, sp, #0
 80109f6:	60f8      	str	r0, [r7, #12]
 80109f8:	60b9      	str	r1, [r7, #8]
 80109fa:	607a      	str	r2, [r7, #4]
 80109fc:	603b      	str	r3, [r7, #0]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80109fe:	6878      	ldr	r0, [r7, #4]
 8010a00:	f7ff fb24 	bl	801004c <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
 8010a04:	6838      	ldr	r0, [r7, #0]
 8010a06:	f7ff fb2c 	bl	8010062 <_ZSt7forwardISt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8010a0a:	4602      	mov	r2, r0
 8010a0c:	f107 0318 	add.w	r3, r7, #24
 8010a10:	4611      	mov	r1, r2
 8010a12:	4618      	mov	r0, r3
 8010a14:	f7ff ffdc 	bl	80109d0 <_ZNSt5tupleIJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>
 8010a18:	f107 0418 	add.w	r4, r7, #24
 8010a1c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8010a1e:	f7ff fb2b 	bl	8010078 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
 8010a22:	68bb      	ldr	r3, [r7, #8]
 8010a24:	4619      	mov	r1, r3
 8010a26:	2038      	movs	r0, #56	; 0x38
 8010a28:	f7f0 fb00 	bl	800102c <_ZnwjPv>
 8010a2c:	7f3b      	ldrb	r3, [r7, #28]
 8010a2e:	4622      	mov	r2, r4
 8010a30:	7d39      	ldrb	r1, [r7, #20]
 8010a32:	f000 f84c 	bl	8010ace <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>
 8010a36:	bf00      	nop
 8010a38:	3724      	adds	r7, #36	; 0x24
 8010a3a:	46bd      	mov	sp, r7
 8010a3c:	bd90      	pop	{r4, r7, pc}

08010a3e <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISE_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8010a3e:	b480      	push	{r7}
 8010a40:	b083      	sub	sp, #12
 8010a42:	af00      	add	r7, sp, #0
 8010a44:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8010a46:	687b      	ldr	r3, [r7, #4]
 8010a48:	4618      	mov	r0, r3
 8010a4a:	370c      	adds	r7, #12
 8010a4c:	46bd      	mov	sp, r7
 8010a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a52:	4770      	bx	lr

08010a54 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE7_M_addrEv>:
      _M_addr() const noexcept
 8010a54:	b480      	push	{r7}
 8010a56:	b083      	sub	sp, #12
 8010a58:	af00      	add	r7, sp, #0
 8010a5a:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 8010a5c:	687b      	ldr	r3, [r7, #4]
 8010a5e:	4618      	mov	r0, r3
 8010a60:	370c      	adds	r7, #12
 8010a62:	46bd      	mov	sp, r7
 8010a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a68:	4770      	bx	lr

08010a6a <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEED1Ev>:
      ~_Variant_storage()
 8010a6a:	b580      	push	{r7, lr}
 8010a6c:	b082      	sub	sp, #8
 8010a6e:	af00      	add	r7, sp, #0
 8010a70:	6078      	str	r0, [r7, #4]
      { _M_reset(); }
 8010a72:	6878      	ldr	r0, [r7, #4]
 8010a74:	f000 f83f 	bl	8010af6 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE8_M_resetEv>
 8010a78:	687b      	ldr	r3, [r7, #4]
 8010a7a:	4618      	mov	r0, r3
 8010a7c:	3708      	adds	r7, #8
 8010a7e:	46bd      	mov	sp, r7
 8010a80:	bd80      	pop	{r7, pc}
	...

08010a84 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8010a84:	b480      	push	{r7}
 8010a86:	b083      	sub	sp, #12
 8010a88:	af00      	add	r7, sp, #0
 8010a8a:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8010a8c:	4b03      	ldr	r3, [pc, #12]	; (8010a9c <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE8max_sizeEv+0x18>)
      }
 8010a8e:	4618      	mov	r0, r3
 8010a90:	370c      	adds	r7, #12
 8010a92:	46bd      	mov	sp, r7
 8010a94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a98:	4770      	bx	lr
 8010a9a:	bf00      	nop
 8010a9c:	01c71c71 	.word	0x01c71c71

08010aa0 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS8_>:
      _Tuple_impl(_Tuple_impl&& __in)
 8010aa0:	b590      	push	{r4, r7, lr}
 8010aa2:	b083      	sub	sp, #12
 8010aa4:	af00      	add	r7, sp, #0
 8010aa6:	6078      	str	r0, [r7, #4]
 8010aa8:	6039      	str	r1, [r7, #0]
      : _Base(std::forward<_Head>(_M_head(__in))) { }
 8010aaa:	687c      	ldr	r4, [r7, #4]
 8010aac:	6838      	ldr	r0, [r7, #0]
 8010aae:	f000 f830 	bl	8010b12 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 8010ab2:	4603      	mov	r3, r0
 8010ab4:	4618      	mov	r0, r3
 8010ab6:	f7fa f891 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8010aba:	4603      	mov	r3, r0
 8010abc:	4619      	mov	r1, r3
 8010abe:	4620      	mov	r0, r4
 8010ac0:	f7ff fcfa 	bl	80104b8 <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1ES7_>
 8010ac4:	687b      	ldr	r3, [r7, #4]
 8010ac6:	4618      	mov	r0, r3
 8010ac8:	370c      	adds	r7, #12
 8010aca:	46bd      	mov	sp, r7
 8010acc:	bd90      	pop	{r4, r7, pc}

08010ace <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESC_IJDpT0_EE>:

  // See stl_pair.h...
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      inline
      pair<_T1, _T2>::
 8010ace:	b5b0      	push	{r4, r5, r7, lr}
 8010ad0:	b086      	sub	sp, #24
 8010ad2:	af02      	add	r7, sp, #8
 8010ad4:	60f8      	str	r0, [r7, #12]
 8010ad6:	7239      	strb	r1, [r7, #8]
 8010ad8:	607a      	str	r2, [r7, #4]
 8010ada:	703b      	strb	r3, [r7, #0]
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
 8010adc:	463a      	mov	r2, r7
 8010ade:	f88d 4000 	strb.w	r4, [sp]
 8010ae2:	462b      	mov	r3, r5
 8010ae4:	6879      	ldr	r1, [r7, #4]
 8010ae6:	68f8      	ldr	r0, [r7, #12]
 8010ae8:	f000 f83b 	bl	8010b62 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>
      { }
 8010aec:	68fb      	ldr	r3, [r7, #12]
 8010aee:	4618      	mov	r0, r3
 8010af0:	3710      	adds	r7, #16
 8010af2:	46bd      	mov	sp, r7
 8010af4:	bdb0      	pop	{r4, r5, r7, pc}

08010af6 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE8_M_resetEv>:
      void _M_reset()
 8010af6:	b580      	push	{r7, lr}
 8010af8:	b082      	sub	sp, #8
 8010afa:	af00      	add	r7, sp, #0
 8010afc:	6078      	str	r0, [r7, #4]
	_M_reset_impl();
 8010afe:	6878      	ldr	r0, [r7, #4]
 8010b00:	f000 fe62 	bl	80117c8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEv>
	_M_index = variant_npos;
 8010b04:	687b      	ldr	r3, [r7, #4]
 8010b06:	22ff      	movs	r2, #255	; 0xff
 8010b08:	761a      	strb	r2, [r3, #24]
      }
 8010b0a:	bf00      	nop
 8010b0c:	3708      	adds	r7, #8
 8010b0e:	46bd      	mov	sp, r7
 8010b10:	bd80      	pop	{r7, pc}

08010b12 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 8010b12:	b580      	push	{r7, lr}
 8010b14:	b082      	sub	sp, #8
 8010b16:	af00      	add	r7, sp, #0
 8010b18:	6078      	str	r0, [r7, #4]
 8010b1a:	687b      	ldr	r3, [r7, #4]
 8010b1c:	4618      	mov	r0, r3
 8010b1e:	f000 fe65 	bl	80117ec <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>
 8010b22:	4603      	mov	r3, r0
 8010b24:	4618      	mov	r0, r3
 8010b26:	3708      	adds	r7, #8
 8010b28:	46bd      	mov	sp, r7
 8010b2a:	bd80      	pop	{r7, pc}

08010b2c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEC1Ev>:
      variant() = default;
 8010b2c:	b580      	push	{r7, lr}
 8010b2e:	b082      	sub	sp, #8
 8010b30:	af00      	add	r7, sp, #0
 8010b32:	6078      	str	r0, [r7, #4]
 8010b34:	687b      	ldr	r3, [r7, #4]
 8010b36:	4618      	mov	r0, r3
 8010b38:	f000 febc 	bl	80118b4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>
 8010b3c:	687b      	ldr	r3, [r7, #4]
 8010b3e:	4618      	mov	r0, r3
 8010b40:	3708      	adds	r7, #8
 8010b42:	46bd      	mov	sp, r7
 8010b44:	bd80      	pop	{r7, pc}

08010b46 <_ZN6SymbolC1Ev>:
 8010b46:	b580      	push	{r7, lr}
 8010b48:	b082      	sub	sp, #8
 8010b4a:	af00      	add	r7, sp, #0
 8010b4c:	6078      	str	r0, [r7, #4]
 8010b4e:	687b      	ldr	r3, [r7, #4]
 8010b50:	3304      	adds	r3, #4
 8010b52:	4618      	mov	r0, r3
 8010b54:	f7ff ffea 	bl	8010b2c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEC1Ev>
 8010b58:	687b      	ldr	r3, [r7, #4]
 8010b5a:	4618      	mov	r0, r3
 8010b5c:	3708      	adds	r7, #8
 8010b5e:	46bd      	mov	sp, r7
 8010b60:	bd80      	pop	{r7, pc}

08010b62 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IJRS6_EJLj0EEJEJEEERSt5tupleIJDpT_EERSB_IJDpT1_EESt12_Index_tupleIJXspT0_EEESK_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, std::size_t... _Indexes1,
             typename... _Args2, std::size_t... _Indexes2>
      inline
      pair<_T1, _T2>::
 8010b62:	b590      	push	{r4, r7, lr}
 8010b64:	b085      	sub	sp, #20
 8010b66:	af00      	add	r7, sp, #0
 8010b68:	60f8      	str	r0, [r7, #12]
 8010b6a:	60b9      	str	r1, [r7, #8]
 8010b6c:	607a      	str	r2, [r7, #4]
 8010b6e:	703b      	strb	r3, [r7, #0]
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 8010b70:	68fc      	ldr	r4, [r7, #12]
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
 8010b72:	68b8      	ldr	r0, [r7, #8]
 8010b74:	f000 fe46 	bl	8011804 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>
 8010b78:	4603      	mov	r3, r0
        second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 8010b7a:	4618      	mov	r0, r3
 8010b7c:	f7fa f82e 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8010b80:	4603      	mov	r3, r0
 8010b82:	4619      	mov	r1, r3
 8010b84:	4620      	mov	r0, r4
 8010b86:	f00f fe43 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8010b8a:	68fb      	ldr	r3, [r7, #12]
 8010b8c:	3318      	adds	r3, #24
 8010b8e:	2220      	movs	r2, #32
 8010b90:	2100      	movs	r1, #0
 8010b92:	4618      	mov	r0, r3
 8010b94:	f010 feba 	bl	802190c <memset>
 8010b98:	68fb      	ldr	r3, [r7, #12]
 8010b9a:	3318      	adds	r3, #24
 8010b9c:	4618      	mov	r0, r3
 8010b9e:	f7ff ffd2 	bl	8010b46 <_ZN6SymbolC1Ev>
      { }
 8010ba2:	68fb      	ldr	r3, [r7, #12]
 8010ba4:	4618      	mov	r0, r3
 8010ba6:	3714      	adds	r7, #20
 8010ba8:	46bd      	mov	sp, r7
 8010baa:	bd90      	pop	{r4, r7, pc}

08010bac <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S8_SA_SC_SE_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8010bac:	b480      	push	{r7}
 8010bae:	b083      	sub	sp, #12
 8010bb0:	af00      	add	r7, sp, #0
 8010bb2:	6078      	str	r0, [r7, #4]
	    return static_cast<variant<_Types...>&>(__rhs);
 8010bb4:	687b      	ldr	r3, [r7, #4]
    }
 8010bb6:	4618      	mov	r0, r3
 8010bb8:	370c      	adds	r7, #12
 8010bba:	46bd      	mov	sp, r7
 8010bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010bc0:	4770      	bx	lr

08010bc2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010bc2:	b580      	push	{r7, lr}
 8010bc4:	b082      	sub	sp, #8
 8010bc6:	af00      	add	r7, sp, #0
 8010bc8:	7138      	strb	r0, [r7, #4]
 8010bca:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010bcc:	6838      	ldr	r0, [r7, #0]
 8010bce:	f000 fe94 	bl	80118fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010bd2:	4603      	mov	r3, r0
 8010bd4:	4618      	mov	r0, r3
 8010bd6:	f7f5 f864 	bl	8005ca2 <_ZNRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8010bda:	4603      	mov	r3, r0
 8010bdc:	4618      	mov	r0, r3
 8010bde:	3708      	adds	r7, #8
 8010be0:	46bd      	mov	sp, r7
 8010be2:	bd80      	pop	{r7, pc}

08010be4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010be4:	b590      	push	{r4, r7, lr}
 8010be6:	b083      	sub	sp, #12
 8010be8:	af00      	add	r7, sp, #0
 8010bea:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010bec:	6878      	ldr	r0, [r7, #4]
 8010bee:	f000 fe79 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010bf2:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010bf4:	4619      	mov	r1, r3
 8010bf6:	4620      	mov	r0, r4
 8010bf8:	f7ff ffe3 	bl	8010bc2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010bfc:	4603      	mov	r3, r0
    }
 8010bfe:	4618      	mov	r0, r3
 8010c00:	370c      	adds	r7, #12
 8010c02:	46bd      	mov	sp, r7
 8010c04:	bd90      	pop	{r4, r7, pc}

08010c06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010c06:	b580      	push	{r7, lr}
 8010c08:	b082      	sub	sp, #8
 8010c0a:	af00      	add	r7, sp, #0
 8010c0c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010c0e:	6878      	ldr	r0, [r7, #4]
 8010c10:	f000 fe68 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010c14:	4603      	mov	r3, r0
 8010c16:	4618      	mov	r0, r3
 8010c18:	f7ff ffe4 	bl	8010be4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8010c1c:	4603      	mov	r3, r0
	}
 8010c1e:	4618      	mov	r0, r3
 8010c20:	3708      	adds	r7, #8
 8010c22:	46bd      	mov	sp, r7
 8010c24:	bd80      	pop	{r7, pc}

08010c26 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESO_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010c26:	b5b0      	push	{r4, r5, r7, lr}
 8010c28:	b082      	sub	sp, #8
 8010c2a:	af00      	add	r7, sp, #0
 8010c2c:	6078      	str	r0, [r7, #4]
 8010c2e:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010c30:	6878      	ldr	r0, [r7, #4]
 8010c32:	f000 fe4c 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010c36:	4604      	mov	r4, r0
 8010c38:	6838      	ldr	r0, [r7, #0]
 8010c3a:	f000 fe53 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010c3e:	4603      	mov	r3, r0
 8010c40:	4618      	mov	r0, r3
 8010c42:	f7ff ffe0 	bl	8010c06 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESR_EEDcOT0_>
 8010c46:	4603      	mov	r3, r0
 8010c48:	4619      	mov	r1, r3
 8010c4a:	4620      	mov	r0, r4
 8010c4c:	f000 fe60 	bl	8011910 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010c50:	462b      	mov	r3, r5
      }
 8010c52:	4618      	mov	r0, r3
 8010c54:	3708      	adds	r7, #8
 8010c56:	46bd      	mov	sp, r7
 8010c58:	bdb0      	pop	{r4, r5, r7, pc}

08010c5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESO_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010c5a:	b5b0      	push	{r4, r5, r7, lr}
 8010c5c:	b082      	sub	sp, #8
 8010c5e:	af00      	add	r7, sp, #0
 8010c60:	6078      	str	r0, [r7, #4]
 8010c62:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010c64:	6878      	ldr	r0, [r7, #4]
 8010c66:	f000 fe32 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010c6a:	4604      	mov	r4, r0
 8010c6c:	6838      	ldr	r0, [r7, #0]
 8010c6e:	f000 fe39 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010c72:	4603      	mov	r3, r0
 8010c74:	4619      	mov	r1, r3
 8010c76:	4620      	mov	r0, r4
 8010c78:	f7ff ffd5 	bl	8010c26 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8010c7c:	462b      	mov	r3, r5
      }
 8010c7e:	4618      	mov	r0, r3
 8010c80:	3708      	adds	r7, #8
 8010c82:	46bd      	mov	sp, r7
 8010c84:	bdb0      	pop	{r4, r5, r7, pc}

08010c86 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESO_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010c86:	b5b0      	push	{r4, r5, r7, lr}
 8010c88:	b082      	sub	sp, #8
 8010c8a:	af00      	add	r7, sp, #0
 8010c8c:	6078      	str	r0, [r7, #4]
 8010c8e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010c90:	6878      	ldr	r0, [r7, #4]
 8010c92:	f000 fe1c 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010c96:	4604      	mov	r4, r0
 8010c98:	6838      	ldr	r0, [r7, #0]
 8010c9a:	f000 fe23 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010c9e:	4603      	mov	r3, r0
 8010ca0:	4619      	mov	r1, r3
 8010ca2:	4620      	mov	r0, r4
 8010ca4:	f7ff ffd9 	bl	8010c5a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8010ca8:	462b      	mov	r3, r5
      }
 8010caa:	4618      	mov	r0, r3
 8010cac:	3708      	adds	r7, #8
 8010cae:	46bd      	mov	sp, r7
 8010cb0:	bdb0      	pop	{r4, r5, r7, pc}

08010cb2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010cb2:	b580      	push	{r7, lr}
 8010cb4:	b082      	sub	sp, #8
 8010cb6:	af00      	add	r7, sp, #0
 8010cb8:	7138      	strb	r0, [r7, #4]
 8010cba:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010cbc:	6838      	ldr	r0, [r7, #0]
 8010cbe:	f000 fe3e 	bl	801193e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010cc2:	4603      	mov	r3, r0
 8010cc4:	4618      	mov	r0, r3
 8010cc6:	f7f5 f80e 	bl	8005ce6 <_ZNRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8010cca:	4603      	mov	r3, r0
 8010ccc:	4618      	mov	r0, r3
 8010cce:	3708      	adds	r7, #8
 8010cd0:	46bd      	mov	sp, r7
 8010cd2:	bd80      	pop	{r7, pc}

08010cd4 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010cd4:	b590      	push	{r4, r7, lr}
 8010cd6:	b083      	sub	sp, #12
 8010cd8:	af00      	add	r7, sp, #0
 8010cda:	7138      	strb	r0, [r7, #4]
 8010cdc:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010cde:	6838      	ldr	r0, [r7, #0]
 8010ce0:	f000 fe0b 	bl	80118fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010ce4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010ce6:	4619      	mov	r1, r3
 8010ce8:	4620      	mov	r0, r4
 8010cea:	f7ff ffe2 	bl	8010cb2 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010cee:	4603      	mov	r3, r0
    }
 8010cf0:	4618      	mov	r0, r3
 8010cf2:	370c      	adds	r7, #12
 8010cf4:	46bd      	mov	sp, r7
 8010cf6:	bd90      	pop	{r4, r7, pc}

08010cf8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010cf8:	b590      	push	{r4, r7, lr}
 8010cfa:	b083      	sub	sp, #12
 8010cfc:	af00      	add	r7, sp, #0
 8010cfe:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010d00:	6878      	ldr	r0, [r7, #4]
 8010d02:	f000 fdef 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010d06:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010d08:	4619      	mov	r1, r3
 8010d0a:	4620      	mov	r0, r4
 8010d0c:	f7ff ffe2 	bl	8010cd4 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010d10:	4603      	mov	r3, r0
    }
 8010d12:	4618      	mov	r0, r3
 8010d14:	370c      	adds	r7, #12
 8010d16:	46bd      	mov	sp, r7
 8010d18:	bd90      	pop	{r4, r7, pc}

08010d1a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010d1a:	b580      	push	{r7, lr}
 8010d1c:	b082      	sub	sp, #8
 8010d1e:	af00      	add	r7, sp, #0
 8010d20:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010d22:	6878      	ldr	r0, [r7, #4]
 8010d24:	f000 fdde 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010d28:	4603      	mov	r3, r0
 8010d2a:	4618      	mov	r0, r3
 8010d2c:	f7ff ffe4 	bl	8010cf8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8010d30:	4603      	mov	r3, r0
	}
 8010d32:	4618      	mov	r0, r3
 8010d34:	3708      	adds	r7, #8
 8010d36:	46bd      	mov	sp, r7
 8010d38:	bd80      	pop	{r7, pc}

08010d3a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESO_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010d3a:	b5b0      	push	{r4, r5, r7, lr}
 8010d3c:	b082      	sub	sp, #8
 8010d3e:	af00      	add	r7, sp, #0
 8010d40:	6078      	str	r0, [r7, #4]
 8010d42:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010d44:	6878      	ldr	r0, [r7, #4]
 8010d46:	f000 fdc2 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010d4a:	4604      	mov	r4, r0
 8010d4c:	6838      	ldr	r0, [r7, #0]
 8010d4e:	f000 fdc9 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010d52:	4603      	mov	r3, r0
 8010d54:	4618      	mov	r0, r3
 8010d56:	f7ff ffe0 	bl	8010d1a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESR_EEDcOT0_>
 8010d5a:	4603      	mov	r3, r0
 8010d5c:	4619      	mov	r1, r3
 8010d5e:	4620      	mov	r0, r4
 8010d60:	f000 fdf8 	bl	8011954 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010d64:	462b      	mov	r3, r5
      }
 8010d66:	4618      	mov	r0, r3
 8010d68:	3708      	adds	r7, #8
 8010d6a:	46bd      	mov	sp, r7
 8010d6c:	bdb0      	pop	{r4, r5, r7, pc}

08010d6e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESO_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010d6e:	b5b0      	push	{r4, r5, r7, lr}
 8010d70:	b082      	sub	sp, #8
 8010d72:	af00      	add	r7, sp, #0
 8010d74:	6078      	str	r0, [r7, #4]
 8010d76:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010d78:	6878      	ldr	r0, [r7, #4]
 8010d7a:	f000 fda8 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010d7e:	4604      	mov	r4, r0
 8010d80:	6838      	ldr	r0, [r7, #0]
 8010d82:	f000 fdaf 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010d86:	4603      	mov	r3, r0
 8010d88:	4619      	mov	r1, r3
 8010d8a:	4620      	mov	r0, r4
 8010d8c:	f7ff ffd5 	bl	8010d3a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8010d90:	462b      	mov	r3, r5
      }
 8010d92:	4618      	mov	r0, r3
 8010d94:	3708      	adds	r7, #8
 8010d96:	46bd      	mov	sp, r7
 8010d98:	bdb0      	pop	{r4, r5, r7, pc}

08010d9a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESO_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010d9a:	b5b0      	push	{r4, r5, r7, lr}
 8010d9c:	b082      	sub	sp, #8
 8010d9e:	af00      	add	r7, sp, #0
 8010da0:	6078      	str	r0, [r7, #4]
 8010da2:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010da4:	6878      	ldr	r0, [r7, #4]
 8010da6:	f000 fd92 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010daa:	4604      	mov	r4, r0
 8010dac:	6838      	ldr	r0, [r7, #0]
 8010dae:	f000 fd99 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010db2:	4603      	mov	r3, r0
 8010db4:	4619      	mov	r1, r3
 8010db6:	4620      	mov	r0, r4
 8010db8:	f7ff ffd9 	bl	8010d6e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8010dbc:	462b      	mov	r3, r5
      }
 8010dbe:	4618      	mov	r0, r3
 8010dc0:	3708      	adds	r7, #8
 8010dc2:	46bd      	mov	sp, r7
 8010dc4:	bdb0      	pop	{r4, r5, r7, pc}

08010dc6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010dc6:	b580      	push	{r7, lr}
 8010dc8:	b082      	sub	sp, #8
 8010dca:	af00      	add	r7, sp, #0
 8010dcc:	7138      	strb	r0, [r7, #4]
 8010dce:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010dd0:	6838      	ldr	r0, [r7, #0]
 8010dd2:	f000 fdd6 	bl	8011982 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010dd6:	4603      	mov	r3, r0
 8010dd8:	4618      	mov	r0, r3
 8010dda:	f7f4 ff40 	bl	8005c5e <_ZNRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8010dde:	4603      	mov	r3, r0
 8010de0:	4618      	mov	r0, r3
 8010de2:	3708      	adds	r7, #8
 8010de4:	46bd      	mov	sp, r7
 8010de6:	bd80      	pop	{r7, pc}

08010de8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010de8:	b590      	push	{r4, r7, lr}
 8010dea:	b083      	sub	sp, #12
 8010dec:	af00      	add	r7, sp, #0
 8010dee:	7138      	strb	r0, [r7, #4]
 8010df0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010df2:	6838      	ldr	r0, [r7, #0]
 8010df4:	f000 fda3 	bl	801193e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010df8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010dfa:	4619      	mov	r1, r3
 8010dfc:	4620      	mov	r0, r4
 8010dfe:	f7ff ffe2 	bl	8010dc6 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010e02:	4603      	mov	r3, r0
    }
 8010e04:	4618      	mov	r0, r3
 8010e06:	370c      	adds	r7, #12
 8010e08:	46bd      	mov	sp, r7
 8010e0a:	bd90      	pop	{r4, r7, pc}

08010e0c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010e0c:	b590      	push	{r4, r7, lr}
 8010e0e:	b083      	sub	sp, #12
 8010e10:	af00      	add	r7, sp, #0
 8010e12:	7138      	strb	r0, [r7, #4]
 8010e14:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010e16:	6838      	ldr	r0, [r7, #0]
 8010e18:	f000 fd6f 	bl	80118fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010e1c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010e1e:	4619      	mov	r1, r3
 8010e20:	4620      	mov	r0, r4
 8010e22:	f7ff ffe1 	bl	8010de8 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010e26:	4603      	mov	r3, r0
    }
 8010e28:	4618      	mov	r0, r3
 8010e2a:	370c      	adds	r7, #12
 8010e2c:	46bd      	mov	sp, r7
 8010e2e:	bd90      	pop	{r4, r7, pc}

08010e30 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010e30:	b590      	push	{r4, r7, lr}
 8010e32:	b083      	sub	sp, #12
 8010e34:	af00      	add	r7, sp, #0
 8010e36:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010e38:	6878      	ldr	r0, [r7, #4]
 8010e3a:	f000 fd53 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010e3e:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010e40:	4619      	mov	r1, r3
 8010e42:	4620      	mov	r0, r4
 8010e44:	f7ff ffe2 	bl	8010e0c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010e48:	4603      	mov	r3, r0
    }
 8010e4a:	4618      	mov	r0, r3
 8010e4c:	370c      	adds	r7, #12
 8010e4e:	46bd      	mov	sp, r7
 8010e50:	bd90      	pop	{r4, r7, pc}

08010e52 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010e52:	b580      	push	{r7, lr}
 8010e54:	b082      	sub	sp, #8
 8010e56:	af00      	add	r7, sp, #0
 8010e58:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010e5a:	6878      	ldr	r0, [r7, #4]
 8010e5c:	f000 fd42 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010e60:	4603      	mov	r3, r0
 8010e62:	4618      	mov	r0, r3
 8010e64:	f7ff ffe4 	bl	8010e30 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8010e68:	4603      	mov	r3, r0
	}
 8010e6a:	4618      	mov	r0, r3
 8010e6c:	3708      	adds	r7, #8
 8010e6e:	46bd      	mov	sp, r7
 8010e70:	bd80      	pop	{r7, pc}

08010e72 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESO_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010e72:	b5b0      	push	{r4, r5, r7, lr}
 8010e74:	b082      	sub	sp, #8
 8010e76:	af00      	add	r7, sp, #0
 8010e78:	6078      	str	r0, [r7, #4]
 8010e7a:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010e7c:	6878      	ldr	r0, [r7, #4]
 8010e7e:	f000 fd26 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010e82:	4604      	mov	r4, r0
 8010e84:	6838      	ldr	r0, [r7, #0]
 8010e86:	f000 fd2d 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010e8a:	4603      	mov	r3, r0
 8010e8c:	4618      	mov	r0, r3
 8010e8e:	f7ff ffe0 	bl	8010e52 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESR_EEDcOT0_>
 8010e92:	4603      	mov	r3, r0
 8010e94:	4619      	mov	r1, r3
 8010e96:	4620      	mov	r0, r4
 8010e98:	f000 fd7e 	bl	8011998 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010e9c:	462b      	mov	r3, r5
      }
 8010e9e:	4618      	mov	r0, r3
 8010ea0:	3708      	adds	r7, #8
 8010ea2:	46bd      	mov	sp, r7
 8010ea4:	bdb0      	pop	{r4, r5, r7, pc}

08010ea6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESO_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010ea6:	b5b0      	push	{r4, r5, r7, lr}
 8010ea8:	b082      	sub	sp, #8
 8010eaa:	af00      	add	r7, sp, #0
 8010eac:	6078      	str	r0, [r7, #4]
 8010eae:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8010eb0:	6878      	ldr	r0, [r7, #4]
 8010eb2:	f000 fd0c 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010eb6:	4604      	mov	r4, r0
 8010eb8:	6838      	ldr	r0, [r7, #0]
 8010eba:	f000 fd13 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010ebe:	4603      	mov	r3, r0
 8010ec0:	4619      	mov	r1, r3
 8010ec2:	4620      	mov	r0, r4
 8010ec4:	f7ff ffd5 	bl	8010e72 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8010ec8:	462b      	mov	r3, r5
      }
 8010eca:	4618      	mov	r0, r3
 8010ecc:	3708      	adds	r7, #8
 8010ece:	46bd      	mov	sp, r7
 8010ed0:	bdb0      	pop	{r4, r5, r7, pc}

08010ed2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESO_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8010ed2:	b5b0      	push	{r4, r5, r7, lr}
 8010ed4:	b082      	sub	sp, #8
 8010ed6:	af00      	add	r7, sp, #0
 8010ed8:	6078      	str	r0, [r7, #4]
 8010eda:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8010edc:	6878      	ldr	r0, [r7, #4]
 8010ede:	f000 fcf6 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010ee2:	4604      	mov	r4, r0
 8010ee4:	6838      	ldr	r0, [r7, #0]
 8010ee6:	f000 fcfd 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010eea:	4603      	mov	r3, r0
 8010eec:	4619      	mov	r1, r3
 8010eee:	4620      	mov	r0, r4
 8010ef0:	f7ff ffd9 	bl	8010ea6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8010ef4:	462b      	mov	r3, r5
      }
 8010ef6:	4618      	mov	r0, r3
 8010ef8:	3708      	adds	r7, #8
 8010efa:	46bd      	mov	sp, r7
 8010efc:	bdb0      	pop	{r4, r5, r7, pc}

08010efe <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8010efe:	b580      	push	{r7, lr}
 8010f00:	b082      	sub	sp, #8
 8010f02:	af00      	add	r7, sp, #0
 8010f04:	7138      	strb	r0, [r7, #4]
 8010f06:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8010f08:	6838      	ldr	r0, [r7, #0]
 8010f0a:	f000 fd5c 	bl	80119c6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010f0e:	4603      	mov	r3, r0
 8010f10:	4618      	mov	r0, r3
 8010f12:	f7f4 ff0a 	bl	8005d2a <_ZNRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8010f16:	4603      	mov	r3, r0
 8010f18:	4618      	mov	r0, r3
 8010f1a:	3708      	adds	r7, #8
 8010f1c:	46bd      	mov	sp, r7
 8010f1e:	bd80      	pop	{r7, pc}

08010f20 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010f20:	b590      	push	{r4, r7, lr}
 8010f22:	b083      	sub	sp, #12
 8010f24:	af00      	add	r7, sp, #0
 8010f26:	7138      	strb	r0, [r7, #4]
 8010f28:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010f2a:	6838      	ldr	r0, [r7, #0]
 8010f2c:	f000 fd29 	bl	8011982 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010f30:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010f32:	4619      	mov	r1, r3
 8010f34:	4620      	mov	r0, r4
 8010f36:	f7ff ffe2 	bl	8010efe <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8010f3a:	4603      	mov	r3, r0
    }
 8010f3c:	4618      	mov	r0, r3
 8010f3e:	370c      	adds	r7, #12
 8010f40:	46bd      	mov	sp, r7
 8010f42:	bd90      	pop	{r4, r7, pc}

08010f44 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010f44:	b590      	push	{r4, r7, lr}
 8010f46:	b083      	sub	sp, #12
 8010f48:	af00      	add	r7, sp, #0
 8010f4a:	7138      	strb	r0, [r7, #4]
 8010f4c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010f4e:	6838      	ldr	r0, [r7, #0]
 8010f50:	f000 fcf5 	bl	801193e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010f54:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010f56:	4619      	mov	r1, r3
 8010f58:	4620      	mov	r0, r4
 8010f5a:	f7ff ffe1 	bl	8010f20 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010f5e:	4603      	mov	r3, r0
    }
 8010f60:	4618      	mov	r0, r3
 8010f62:	370c      	adds	r7, #12
 8010f64:	46bd      	mov	sp, r7
 8010f66:	bd90      	pop	{r4, r7, pc}

08010f68 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8010f68:	b590      	push	{r4, r7, lr}
 8010f6a:	b083      	sub	sp, #12
 8010f6c:	af00      	add	r7, sp, #0
 8010f6e:	7138      	strb	r0, [r7, #4]
 8010f70:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8010f72:	6838      	ldr	r0, [r7, #0]
 8010f74:	f000 fcc1 	bl	80118fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8010f78:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8010f7a:	4619      	mov	r1, r3
 8010f7c:	4620      	mov	r0, r4
 8010f7e:	f7ff ffe1 	bl	8010f44 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010f82:	4603      	mov	r3, r0
    }
 8010f84:	4618      	mov	r0, r3
 8010f86:	370c      	adds	r7, #12
 8010f88:	46bd      	mov	sp, r7
 8010f8a:	bd90      	pop	{r4, r7, pc}

08010f8c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8010f8c:	b590      	push	{r4, r7, lr}
 8010f8e:	b083      	sub	sp, #12
 8010f90:	af00      	add	r7, sp, #0
 8010f92:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8010f94:	6878      	ldr	r0, [r7, #4]
 8010f96:	f000 fca5 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010f9a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8010f9c:	4619      	mov	r1, r3
 8010f9e:	4620      	mov	r0, r4
 8010fa0:	f7ff ffe2 	bl	8010f68 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8010fa4:	4603      	mov	r3, r0
    }
 8010fa6:	4618      	mov	r0, r3
 8010fa8:	370c      	adds	r7, #12
 8010faa:	46bd      	mov	sp, r7
 8010fac:	bd90      	pop	{r4, r7, pc}

08010fae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8010fae:	b580      	push	{r7, lr}
 8010fb0:	b082      	sub	sp, #8
 8010fb2:	af00      	add	r7, sp, #0
 8010fb4:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8010fb6:	6878      	ldr	r0, [r7, #4]
 8010fb8:	f000 fc94 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010fbc:	4603      	mov	r3, r0
 8010fbe:	4618      	mov	r0, r3
 8010fc0:	f7ff ffe4 	bl	8010f8c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8010fc4:	4603      	mov	r3, r0
	}
 8010fc6:	4618      	mov	r0, r3
 8010fc8:	3708      	adds	r7, #8
 8010fca:	46bd      	mov	sp, r7
 8010fcc:	bd80      	pop	{r7, pc}

08010fce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESO_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8010fce:	b5b0      	push	{r4, r5, r7, lr}
 8010fd0:	b082      	sub	sp, #8
 8010fd2:	af00      	add	r7, sp, #0
 8010fd4:	6078      	str	r0, [r7, #4]
 8010fd6:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8010fd8:	6878      	ldr	r0, [r7, #4]
 8010fda:	f000 fc78 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8010fde:	4604      	mov	r4, r0
 8010fe0:	6838      	ldr	r0, [r7, #0]
 8010fe2:	f000 fc7f 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8010fe6:	4603      	mov	r3, r0
 8010fe8:	4618      	mov	r0, r3
 8010fea:	f7ff ffe0 	bl	8010fae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESR_EEDcOT0_>
 8010fee:	4603      	mov	r3, r0
 8010ff0:	4619      	mov	r1, r3
 8010ff2:	4620      	mov	r0, r4
 8010ff4:	f000 fcf2 	bl	80119dc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8010ff8:	462b      	mov	r3, r5
      }
 8010ffa:	4618      	mov	r0, r3
 8010ffc:	3708      	adds	r7, #8
 8010ffe:	46bd      	mov	sp, r7
 8011000:	bdb0      	pop	{r4, r5, r7, pc}

08011002 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESO_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011002:	b5b0      	push	{r4, r5, r7, lr}
 8011004:	b082      	sub	sp, #8
 8011006:	af00      	add	r7, sp, #0
 8011008:	6078      	str	r0, [r7, #4]
 801100a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801100c:	6878      	ldr	r0, [r7, #4]
 801100e:	f000 fc5e 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011012:	4604      	mov	r4, r0
 8011014:	6838      	ldr	r0, [r7, #0]
 8011016:	f000 fc65 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801101a:	4603      	mov	r3, r0
 801101c:	4619      	mov	r1, r3
 801101e:	4620      	mov	r0, r4
 8011020:	f7ff ffd5 	bl	8010fce <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8011024:	462b      	mov	r3, r5
      }
 8011026:	4618      	mov	r0, r3
 8011028:	3708      	adds	r7, #8
 801102a:	46bd      	mov	sp, r7
 801102c:	bdb0      	pop	{r4, r5, r7, pc}

0801102e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESO_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801102e:	b5b0      	push	{r4, r5, r7, lr}
 8011030:	b082      	sub	sp, #8
 8011032:	af00      	add	r7, sp, #0
 8011034:	6078      	str	r0, [r7, #4]
 8011036:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011038:	6878      	ldr	r0, [r7, #4]
 801103a:	f000 fc48 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 801103e:	4604      	mov	r4, r0
 8011040:	6838      	ldr	r0, [r7, #0]
 8011042:	f000 fc4f 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8011046:	4603      	mov	r3, r0
 8011048:	4619      	mov	r1, r3
 801104a:	4620      	mov	r0, r4
 801104c:	f7ff ffd9 	bl	8011002 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8011050:	462b      	mov	r3, r5
      }
 8011052:	4618      	mov	r0, r3
 8011054:	3708      	adds	r7, #8
 8011056:	46bd      	mov	sp, r7
 8011058:	bdb0      	pop	{r4, r5, r7, pc}

0801105a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801105a:	b580      	push	{r7, lr}
 801105c:	b082      	sub	sp, #8
 801105e:	af00      	add	r7, sp, #0
 8011060:	7138      	strb	r0, [r7, #4]
 8011062:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011064:	6838      	ldr	r0, [r7, #0]
 8011066:	f000 fcd0 	bl	8011a0a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801106a:	4603      	mov	r3, r0
 801106c:	4618      	mov	r0, r3
 801106e:	f000 fcd7 	bl	8011a20 <_ZNRSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>
 8011072:	4603      	mov	r3, r0
 8011074:	4618      	mov	r0, r3
 8011076:	3708      	adds	r7, #8
 8011078:	46bd      	mov	sp, r7
 801107a:	bd80      	pop	{r7, pc}

0801107c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801107c:	b590      	push	{r4, r7, lr}
 801107e:	b083      	sub	sp, #12
 8011080:	af00      	add	r7, sp, #0
 8011082:	7138      	strb	r0, [r7, #4]
 8011084:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011086:	6838      	ldr	r0, [r7, #0]
 8011088:	f000 fc9d 	bl	80119c6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801108c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801108e:	4619      	mov	r1, r3
 8011090:	4620      	mov	r0, r4
 8011092:	f7ff ffe2 	bl	801105a <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8011096:	4603      	mov	r3, r0
    }
 8011098:	4618      	mov	r0, r3
 801109a:	370c      	adds	r7, #12
 801109c:	46bd      	mov	sp, r7
 801109e:	bd90      	pop	{r4, r7, pc}

080110a0 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80110a0:	b590      	push	{r4, r7, lr}
 80110a2:	b083      	sub	sp, #12
 80110a4:	af00      	add	r7, sp, #0
 80110a6:	7138      	strb	r0, [r7, #4]
 80110a8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80110aa:	6838      	ldr	r0, [r7, #0]
 80110ac:	f000 fc69 	bl	8011982 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 80110b0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80110b2:	4619      	mov	r1, r3
 80110b4:	4620      	mov	r0, r4
 80110b6:	f7ff ffe1 	bl	801107c <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80110ba:	4603      	mov	r3, r0
    }
 80110bc:	4618      	mov	r0, r3
 80110be:	370c      	adds	r7, #12
 80110c0:	46bd      	mov	sp, r7
 80110c2:	bd90      	pop	{r4, r7, pc}

080110c4 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80110c4:	b590      	push	{r4, r7, lr}
 80110c6:	b083      	sub	sp, #12
 80110c8:	af00      	add	r7, sp, #0
 80110ca:	7138      	strb	r0, [r7, #4]
 80110cc:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80110ce:	6838      	ldr	r0, [r7, #0]
 80110d0:	f000 fc35 	bl	801193e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 80110d4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80110d6:	4619      	mov	r1, r3
 80110d8:	4620      	mov	r0, r4
 80110da:	f7ff ffe1 	bl	80110a0 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80110de:	4603      	mov	r3, r0
    }
 80110e0:	4618      	mov	r0, r3
 80110e2:	370c      	adds	r7, #12
 80110e4:	46bd      	mov	sp, r7
 80110e6:	bd90      	pop	{r4, r7, pc}

080110e8 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80110e8:	b590      	push	{r4, r7, lr}
 80110ea:	b083      	sub	sp, #12
 80110ec:	af00      	add	r7, sp, #0
 80110ee:	7138      	strb	r0, [r7, #4]
 80110f0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80110f2:	6838      	ldr	r0, [r7, #0]
 80110f4:	f000 fc01 	bl	80118fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 80110f8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80110fa:	4619      	mov	r1, r3
 80110fc:	4620      	mov	r0, r4
 80110fe:	f7ff ffe1 	bl	80110c4 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011102:	4603      	mov	r3, r0
    }
 8011104:	4618      	mov	r0, r3
 8011106:	370c      	adds	r7, #12
 8011108:	46bd      	mov	sp, r7
 801110a:	bd90      	pop	{r4, r7, pc}

0801110c <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801110c:	b590      	push	{r4, r7, lr}
 801110e:	b083      	sub	sp, #12
 8011110:	af00      	add	r7, sp, #0
 8011112:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8011114:	6878      	ldr	r0, [r7, #4]
 8011116:	f000 fbe5 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801111a:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801111c:	4619      	mov	r1, r3
 801111e:	4620      	mov	r0, r4
 8011120:	f7ff ffe2 	bl	80110e8 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011124:	4603      	mov	r3, r0
    }
 8011126:	4618      	mov	r0, r3
 8011128:	370c      	adds	r7, #12
 801112a:	46bd      	mov	sp, r7
 801112c:	bd90      	pop	{r4, r7, pc}

0801112e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801112e:	b580      	push	{r7, lr}
 8011130:	b082      	sub	sp, #8
 8011132:	af00      	add	r7, sp, #0
 8011134:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8011136:	6878      	ldr	r0, [r7, #4]
 8011138:	f000 fbd4 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801113c:	4603      	mov	r3, r0
 801113e:	4618      	mov	r0, r3
 8011140:	f7ff ffe4 	bl	801110c <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8011144:	4603      	mov	r3, r0
	}
 8011146:	4618      	mov	r0, r3
 8011148:	3708      	adds	r7, #8
 801114a:	46bd      	mov	sp, r7
 801114c:	bd80      	pop	{r7, pc}

0801114e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESO_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801114e:	b5b0      	push	{r4, r5, r7, lr}
 8011150:	b082      	sub	sp, #8
 8011152:	af00      	add	r7, sp, #0
 8011154:	6078      	str	r0, [r7, #4]
 8011156:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8011158:	6878      	ldr	r0, [r7, #4]
 801115a:	f000 fbb8 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 801115e:	4604      	mov	r4, r0
 8011160:	6838      	ldr	r0, [r7, #0]
 8011162:	f000 fbbf 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8011166:	4603      	mov	r3, r0
 8011168:	4618      	mov	r0, r3
 801116a:	f7ff ffe0 	bl	801112e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESR_EEDcOT0_>
 801116e:	4603      	mov	r3, r0
 8011170:	4619      	mov	r1, r3
 8011172:	4620      	mov	r0, r4
 8011174:	f000 fc61 	bl	8011a3a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSB_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>
		std::forward<_Variants>(__vars))...);
 8011178:	462b      	mov	r3, r5
      }
 801117a:	4618      	mov	r0, r3
 801117c:	3708      	adds	r7, #8
 801117e:	46bd      	mov	sp, r7
 8011180:	bdb0      	pop	{r4, r5, r7, pc}

08011182 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESO_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011182:	b5b0      	push	{r4, r5, r7, lr}
 8011184:	b082      	sub	sp, #8
 8011186:	af00      	add	r7, sp, #0
 8011188:	6078      	str	r0, [r7, #4]
 801118a:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801118c:	6878      	ldr	r0, [r7, #4]
 801118e:	f000 fb9e 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011192:	4604      	mov	r4, r0
 8011194:	6838      	ldr	r0, [r7, #0]
 8011196:	f000 fba5 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801119a:	4603      	mov	r3, r0
 801119c:	4619      	mov	r1, r3
 801119e:	4620      	mov	r0, r4
 80111a0:	f7ff ffd5 	bl	801114e <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESO_SR_>
				   std::forward<_Variants>(__vars)...);
 80111a4:	462b      	mov	r3, r5
      }
 80111a6:	4618      	mov	r0, r3
 80111a8:	3708      	adds	r7, #8
 80111aa:	46bd      	mov	sp, r7
 80111ac:	bdb0      	pop	{r4, r5, r7, pc}

080111ae <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESO_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80111ae:	b5b0      	push	{r4, r5, r7, lr}
 80111b0:	b082      	sub	sp, #8
 80111b2:	af00      	add	r7, sp, #0
 80111b4:	6078      	str	r0, [r7, #4]
 80111b6:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80111b8:	6878      	ldr	r0, [r7, #4]
 80111ba:	f000 fb88 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 80111be:	4604      	mov	r4, r0
 80111c0:	6838      	ldr	r0, [r7, #0]
 80111c2:	f000 fb8f 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80111c6:	4603      	mov	r3, r0
 80111c8:	4619      	mov	r1, r3
 80111ca:	4620      	mov	r0, r4
 80111cc:	f7ff ffd9 	bl	8011182 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESO_SR_>
				   std::forward<_Variants>(__vars)...);
 80111d0:	462b      	mov	r3, r5
      }
 80111d2:	4618      	mov	r0, r3
 80111d4:	3708      	adds	r7, #8
 80111d6:	46bd      	mov	sp, r7
 80111d8:	bdb0      	pop	{r4, r5, r7, pc}

080111da <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80111da:	b580      	push	{r7, lr}
 80111dc:	b082      	sub	sp, #8
 80111de:	af00      	add	r7, sp, #0
 80111e0:	7138      	strb	r0, [r7, #4]
 80111e2:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 80111e4:	6838      	ldr	r0, [r7, #0]
 80111e6:	f000 fc3f 	bl	8011a68 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISC_E4typeE>
 80111ea:	4603      	mov	r3, r0
 80111ec:	4618      	mov	r0, r3
 80111ee:	f000 fc46 	bl	8011a7e <_ZNRSt8__detail9__variant14_UninitializedISt6vectorIiSaIiEELb0EE6_M_getEv>
 80111f2:	4603      	mov	r3, r0
 80111f4:	4618      	mov	r0, r3
 80111f6:	3708      	adds	r7, #8
 80111f8:	46bd      	mov	sp, r7
 80111fa:	bd80      	pop	{r7, pc}

080111fc <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80111fc:	b590      	push	{r4, r7, lr}
 80111fe:	b083      	sub	sp, #12
 8011200:	af00      	add	r7, sp, #0
 8011202:	7138      	strb	r0, [r7, #4]
 8011204:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011206:	6838      	ldr	r0, [r7, #0]
 8011208:	f000 fbff 	bl	8011a0a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801120c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801120e:	4619      	mov	r1, r3
 8011210:	4620      	mov	r0, r4
 8011212:	f7ff ffe2 	bl	80111da <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8011216:	4603      	mov	r3, r0
    }
 8011218:	4618      	mov	r0, r3
 801121a:	370c      	adds	r7, #12
 801121c:	46bd      	mov	sp, r7
 801121e:	bd90      	pop	{r4, r7, pc}

08011220 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011220:	b590      	push	{r4, r7, lr}
 8011222:	b083      	sub	sp, #12
 8011224:	af00      	add	r7, sp, #0
 8011226:	7138      	strb	r0, [r7, #4]
 8011228:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801122a:	6838      	ldr	r0, [r7, #0]
 801122c:	f000 fbcb 	bl	80119c6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8011230:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011232:	4619      	mov	r1, r3
 8011234:	4620      	mov	r0, r4
 8011236:	f7ff ffe1 	bl	80111fc <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801123a:	4603      	mov	r3, r0
    }
 801123c:	4618      	mov	r0, r3
 801123e:	370c      	adds	r7, #12
 8011240:	46bd      	mov	sp, r7
 8011242:	bd90      	pop	{r4, r7, pc}

08011244 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011244:	b590      	push	{r4, r7, lr}
 8011246:	b083      	sub	sp, #12
 8011248:	af00      	add	r7, sp, #0
 801124a:	7138      	strb	r0, [r7, #4]
 801124c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801124e:	6838      	ldr	r0, [r7, #0]
 8011250:	f000 fb97 	bl	8011982 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8011254:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011256:	4619      	mov	r1, r3
 8011258:	4620      	mov	r0, r4
 801125a:	f7ff ffe1 	bl	8011220 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801125e:	4603      	mov	r3, r0
    }
 8011260:	4618      	mov	r0, r3
 8011262:	370c      	adds	r7, #12
 8011264:	46bd      	mov	sp, r7
 8011266:	bd90      	pop	{r4, r7, pc}

08011268 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011268:	b590      	push	{r4, r7, lr}
 801126a:	b083      	sub	sp, #12
 801126c:	af00      	add	r7, sp, #0
 801126e:	7138      	strb	r0, [r7, #4]
 8011270:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011272:	6838      	ldr	r0, [r7, #0]
 8011274:	f000 fb63 	bl	801193e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8011278:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801127a:	4619      	mov	r1, r3
 801127c:	4620      	mov	r0, r4
 801127e:	f7ff ffe1 	bl	8011244 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011282:	4603      	mov	r3, r0
    }
 8011284:	4618      	mov	r0, r3
 8011286:	370c      	adds	r7, #12
 8011288:	46bd      	mov	sp, r7
 801128a:	bd90      	pop	{r4, r7, pc}

0801128c <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801128c:	b590      	push	{r4, r7, lr}
 801128e:	b083      	sub	sp, #12
 8011290:	af00      	add	r7, sp, #0
 8011292:	7138      	strb	r0, [r7, #4]
 8011294:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011296:	6838      	ldr	r0, [r7, #0]
 8011298:	f000 fb2f 	bl	80118fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801129c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801129e:	4619      	mov	r1, r3
 80112a0:	4620      	mov	r0, r4
 80112a2:	f7ff ffe1 	bl	8011268 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80112a6:	4603      	mov	r3, r0
    }
 80112a8:	4618      	mov	r0, r3
 80112aa:	370c      	adds	r7, #12
 80112ac:	46bd      	mov	sp, r7
 80112ae:	bd90      	pop	{r4, r7, pc}

080112b0 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 80112b0:	b590      	push	{r4, r7, lr}
 80112b2:	b083      	sub	sp, #12
 80112b4:	af00      	add	r7, sp, #0
 80112b6:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 80112b8:	6878      	ldr	r0, [r7, #4]
 80112ba:	f000 fb13 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80112be:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 80112c0:	4619      	mov	r1, r3
 80112c2:	4620      	mov	r0, r4
 80112c4:	f7ff ffe2 	bl	801128c <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80112c8:	4603      	mov	r3, r0
    }
 80112ca:	4618      	mov	r0, r3
 80112cc:	370c      	adds	r7, #12
 80112ce:	46bd      	mov	sp, r7
 80112d0:	bd90      	pop	{r4, r7, pc}

080112d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESR_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 80112d2:	b580      	push	{r7, lr}
 80112d4:	b082      	sub	sp, #8
 80112d6:	af00      	add	r7, sp, #0
 80112d8:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80112da:	6878      	ldr	r0, [r7, #4]
 80112dc:	f000 fb02 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80112e0:	4603      	mov	r3, r0
 80112e2:	4618      	mov	r0, r3
 80112e4:	f7ff ffe4 	bl	80112b0 <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 80112e8:	4603      	mov	r3, r0
	}
 80112ea:	4618      	mov	r0, r3
 80112ec:	3708      	adds	r7, #8
 80112ee:	46bd      	mov	sp, r7
 80112f0:	bd80      	pop	{r7, pc}

080112f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESO_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80112f2:	b5b0      	push	{r4, r5, r7, lr}
 80112f4:	b082      	sub	sp, #8
 80112f6:	af00      	add	r7, sp, #0
 80112f8:	6078      	str	r0, [r7, #4]
 80112fa:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80112fc:	6878      	ldr	r0, [r7, #4]
 80112fe:	f000 fae6 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011302:	4604      	mov	r4, r0
 8011304:	6838      	ldr	r0, [r7, #0]
 8011306:	f000 faed 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801130a:	4603      	mov	r3, r0
 801130c:	4618      	mov	r0, r3
 801130e:	f7ff ffe0 	bl	80112d2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESR_EEDcOT0_>
 8011312:	4603      	mov	r3, r0
 8011314:	4619      	mov	r1, r3
 8011316:	4620      	mov	r0, r4
 8011318:	f000 fbbe 	bl	8011a98 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSD_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>
		std::forward<_Variants>(__vars))...);
 801131c:	462b      	mov	r3, r5
      }
 801131e:	4618      	mov	r0, r3
 8011320:	3708      	adds	r7, #8
 8011322:	46bd      	mov	sp, r7
 8011324:	bdb0      	pop	{r4, r5, r7, pc}

08011326 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESO_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011326:	b5b0      	push	{r4, r5, r7, lr}
 8011328:	b082      	sub	sp, #8
 801132a:	af00      	add	r7, sp, #0
 801132c:	6078      	str	r0, [r7, #4]
 801132e:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8011330:	6878      	ldr	r0, [r7, #4]
 8011332:	f000 facc 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011336:	4604      	mov	r4, r0
 8011338:	6838      	ldr	r0, [r7, #0]
 801133a:	f000 fad3 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801133e:	4603      	mov	r3, r0
 8011340:	4619      	mov	r1, r3
 8011342:	4620      	mov	r0, r4
 8011344:	f7ff ffd5 	bl	80112f2 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8011348:	462b      	mov	r3, r5
      }
 801134a:	4618      	mov	r0, r3
 801134c:	3708      	adds	r7, #8
 801134e:	46bd      	mov	sp, r7
 8011350:	bdb0      	pop	{r4, r5, r7, pc}

08011352 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESO_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011352:	b5b0      	push	{r4, r5, r7, lr}
 8011354:	b082      	sub	sp, #8
 8011356:	af00      	add	r7, sp, #0
 8011358:	6078      	str	r0, [r7, #4]
 801135a:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801135c:	6878      	ldr	r0, [r7, #4]
 801135e:	f000 fab6 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011362:	4604      	mov	r4, r0
 8011364:	6838      	ldr	r0, [r7, #0]
 8011366:	f000 fabd 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801136a:	4603      	mov	r3, r0
 801136c:	4619      	mov	r1, r3
 801136e:	4620      	mov	r0, r4
 8011370:	f7ff ffd9 	bl	8011326 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8011374:	462b      	mov	r3, r5
      }
 8011376:	4618      	mov	r0, r3
 8011378:	3708      	adds	r7, #8
 801137a:	46bd      	mov	sp, r7
 801137c:	bdb0      	pop	{r4, r5, r7, pc}

0801137e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801137e:	b580      	push	{r7, lr}
 8011380:	b082      	sub	sp, #8
 8011382:	af00      	add	r7, sp, #0
 8011384:	7138      	strb	r0, [r7, #4]
 8011386:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011388:	6838      	ldr	r0, [r7, #0]
 801138a:	f000 fb9c 	bl	8011ac6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 801138e:	4603      	mov	r3, r0
 8011390:	4618      	mov	r0, r3
 8011392:	f000 fba3 	bl	8011adc <_ZNRSt8__detail9__variant14_UninitializedISt6vectorIfSaIfEELb0EE6_M_getEv>
 8011396:	4603      	mov	r3, r0
 8011398:	4618      	mov	r0, r3
 801139a:	3708      	adds	r7, #8
 801139c:	46bd      	mov	sp, r7
 801139e:	bd80      	pop	{r7, pc}

080113a0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80113a0:	b590      	push	{r4, r7, lr}
 80113a2:	b083      	sub	sp, #12
 80113a4:	af00      	add	r7, sp, #0
 80113a6:	7138      	strb	r0, [r7, #4]
 80113a8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80113aa:	6838      	ldr	r0, [r7, #0]
 80113ac:	f000 fb5c 	bl	8011a68 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISC_E4typeE>
 80113b0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80113b2:	4619      	mov	r1, r3
 80113b4:	4620      	mov	r0, r4
 80113b6:	f7ff ffe2 	bl	801137e <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80113ba:	4603      	mov	r3, r0
    }
 80113bc:	4618      	mov	r0, r3
 80113be:	370c      	adds	r7, #12
 80113c0:	46bd      	mov	sp, r7
 80113c2:	bd90      	pop	{r4, r7, pc}

080113c4 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80113c4:	b590      	push	{r4, r7, lr}
 80113c6:	b083      	sub	sp, #12
 80113c8:	af00      	add	r7, sp, #0
 80113ca:	7138      	strb	r0, [r7, #4]
 80113cc:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80113ce:	6838      	ldr	r0, [r7, #0]
 80113d0:	f000 fb1b 	bl	8011a0a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 80113d4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80113d6:	4619      	mov	r1, r3
 80113d8:	4620      	mov	r0, r4
 80113da:	f7ff ffe1 	bl	80113a0 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80113de:	4603      	mov	r3, r0
    }
 80113e0:	4618      	mov	r0, r3
 80113e2:	370c      	adds	r7, #12
 80113e4:	46bd      	mov	sp, r7
 80113e6:	bd90      	pop	{r4, r7, pc}

080113e8 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80113e8:	b590      	push	{r4, r7, lr}
 80113ea:	b083      	sub	sp, #12
 80113ec:	af00      	add	r7, sp, #0
 80113ee:	7138      	strb	r0, [r7, #4]
 80113f0:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80113f2:	6838      	ldr	r0, [r7, #0]
 80113f4:	f000 fae7 	bl	80119c6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 80113f8:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80113fa:	4619      	mov	r1, r3
 80113fc:	4620      	mov	r0, r4
 80113fe:	f7ff ffe1 	bl	80113c4 <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011402:	4603      	mov	r3, r0
    }
 8011404:	4618      	mov	r0, r3
 8011406:	370c      	adds	r7, #12
 8011408:	46bd      	mov	sp, r7
 801140a:	bd90      	pop	{r4, r7, pc}

0801140c <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801140c:	b590      	push	{r4, r7, lr}
 801140e:	b083      	sub	sp, #12
 8011410:	af00      	add	r7, sp, #0
 8011412:	7138      	strb	r0, [r7, #4]
 8011414:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011416:	6838      	ldr	r0, [r7, #0]
 8011418:	f000 fab3 	bl	8011982 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801141c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801141e:	4619      	mov	r1, r3
 8011420:	4620      	mov	r0, r4
 8011422:	f7ff ffe1 	bl	80113e8 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011426:	4603      	mov	r3, r0
    }
 8011428:	4618      	mov	r0, r3
 801142a:	370c      	adds	r7, #12
 801142c:	46bd      	mov	sp, r7
 801142e:	bd90      	pop	{r4, r7, pc}

08011430 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011430:	b590      	push	{r4, r7, lr}
 8011432:	b083      	sub	sp, #12
 8011434:	af00      	add	r7, sp, #0
 8011436:	7138      	strb	r0, [r7, #4]
 8011438:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801143a:	6838      	ldr	r0, [r7, #0]
 801143c:	f000 fa7f 	bl	801193e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8011440:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011442:	4619      	mov	r1, r3
 8011444:	4620      	mov	r0, r4
 8011446:	f7ff ffe1 	bl	801140c <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801144a:	4603      	mov	r3, r0
    }
 801144c:	4618      	mov	r0, r3
 801144e:	370c      	adds	r7, #12
 8011450:	46bd      	mov	sp, r7
 8011452:	bd90      	pop	{r4, r7, pc}

08011454 <_ZNSt8__detail9__variant5__getILj6ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011454:	b590      	push	{r4, r7, lr}
 8011456:	b083      	sub	sp, #12
 8011458:	af00      	add	r7, sp, #0
 801145a:	7138      	strb	r0, [r7, #4]
 801145c:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801145e:	6838      	ldr	r0, [r7, #0]
 8011460:	f000 fa4b 	bl	80118fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8011464:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011466:	4619      	mov	r1, r3
 8011468:	4620      	mov	r0, r4
 801146a:	f7ff ffe1 	bl	8011430 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801146e:	4603      	mov	r3, r0
    }
 8011470:	4618      	mov	r0, r3
 8011472:	370c      	adds	r7, #12
 8011474:	46bd      	mov	sp, r7
 8011476:	bd90      	pop	{r4, r7, pc}

08011478 <_ZNSt8__detail9__variant5__getILj6ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8011478:	b590      	push	{r4, r7, lr}
 801147a:	b083      	sub	sp, #12
 801147c:	af00      	add	r7, sp, #0
 801147e:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8011480:	6878      	ldr	r0, [r7, #4]
 8011482:	f000 fa2f 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8011486:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8011488:	4619      	mov	r1, r3
 801148a:	4620      	mov	r0, r4
 801148c:	f7ff ffe2 	bl	8011454 <_ZNSt8__detail9__variant5__getILj6ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011490:	4603      	mov	r3, r0
    }
 8011492:	4618      	mov	r0, r3
 8011494:	370c      	adds	r7, #12
 8011496:	46bd      	mov	sp, r7
 8011498:	bd90      	pop	{r4, r7, pc}

0801149a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj6EEEE28__element_by_index_or_cookieILj6ESR_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801149a:	b580      	push	{r7, lr}
 801149c:	b082      	sub	sp, #8
 801149e:	af00      	add	r7, sp, #0
 80114a0:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 80114a2:	6878      	ldr	r0, [r7, #4]
 80114a4:	f000 fa1e 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80114a8:	4603      	mov	r3, r0
 80114aa:	4618      	mov	r0, r3
 80114ac:	f7ff ffe4 	bl	8011478 <_ZNSt8__detail9__variant5__getILj6ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 80114b0:	4603      	mov	r3, r0
	}
 80114b2:	4618      	mov	r0, r3
 80114b4:	3708      	adds	r7, #8
 80114b6:	46bd      	mov	sp, r7
 80114b8:	bd80      	pop	{r7, pc}

080114ba <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj6EEEE19__visit_invoke_implESO_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80114ba:	b5b0      	push	{r4, r5, r7, lr}
 80114bc:	b082      	sub	sp, #8
 80114be:	af00      	add	r7, sp, #0
 80114c0:	6078      	str	r0, [r7, #4]
 80114c2:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80114c4:	6878      	ldr	r0, [r7, #4]
 80114c6:	f000 fa02 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 80114ca:	4604      	mov	r4, r0
 80114cc:	6838      	ldr	r0, [r7, #0]
 80114ce:	f000 fa09 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80114d2:	4603      	mov	r3, r0
 80114d4:	4618      	mov	r0, r3
 80114d6:	f7ff ffe0 	bl	801149a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj6EEEE28__element_by_index_or_cookieILj6ESR_EEDcOT0_>
 80114da:	4603      	mov	r3, r0
 80114dc:	4619      	mov	r1, r3
 80114de:	4620      	mov	r0, r4
 80114e0:	f000 fb09 	bl	8011af6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSF_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80114e4:	462b      	mov	r3, r5
      }
 80114e6:	4618      	mov	r0, r3
 80114e8:	3708      	adds	r7, #8
 80114ea:	46bd      	mov	sp, r7
 80114ec:	bdb0      	pop	{r4, r5, r7, pc}

080114ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj6EEEE17__do_visit_invokeESO_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80114ee:	b5b0      	push	{r4, r5, r7, lr}
 80114f0:	b082      	sub	sp, #8
 80114f2:	af00      	add	r7, sp, #0
 80114f4:	6078      	str	r0, [r7, #4]
 80114f6:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80114f8:	6878      	ldr	r0, [r7, #4]
 80114fa:	f000 f9e8 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 80114fe:	4604      	mov	r4, r0
 8011500:	6838      	ldr	r0, [r7, #0]
 8011502:	f000 f9ef 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8011506:	4603      	mov	r3, r0
 8011508:	4619      	mov	r1, r3
 801150a:	4620      	mov	r0, r4
 801150c:	f7ff ffd5 	bl	80114ba <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj6EEEE19__visit_invoke_implESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8011510:	462b      	mov	r3, r5
      }
 8011512:	4618      	mov	r0, r3
 8011514:	3708      	adds	r7, #8
 8011516:	46bd      	mov	sp, r7
 8011518:	bdb0      	pop	{r4, r5, r7, pc}

0801151a <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj6EEEE14__visit_invokeESO_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801151a:	b5b0      	push	{r4, r5, r7, lr}
 801151c:	b082      	sub	sp, #8
 801151e:	af00      	add	r7, sp, #0
 8011520:	6078      	str	r0, [r7, #4]
 8011522:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011524:	6878      	ldr	r0, [r7, #4]
 8011526:	f000 f9d2 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 801152a:	4604      	mov	r4, r0
 801152c:	6838      	ldr	r0, [r7, #0]
 801152e:	f000 f9d9 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8011532:	4603      	mov	r3, r0
 8011534:	4619      	mov	r1, r3
 8011536:	4620      	mov	r0, r4
 8011538:	f7ff ffd9 	bl	80114ee <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj6EEEE17__do_visit_invokeESO_SR_>
				   std::forward<_Variants>(__vars)...);
 801153c:	462b      	mov	r3, r5
      }
 801153e:	4618      	mov	r0, r3
 8011540:	3708      	adds	r7, #8
 8011542:	46bd      	mov	sp, r7
 8011544:	bdb0      	pop	{r4, r5, r7, pc}

08011546 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorIbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8011546:	b580      	push	{r7, lr}
 8011548:	b082      	sub	sp, #8
 801154a:	af00      	add	r7, sp, #0
 801154c:	7138      	strb	r0, [r7, #4]
 801154e:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8011550:	6838      	ldr	r0, [r7, #0]
 8011552:	f000 fae7 	bl	8011b24 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorIbSaIbEEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8011556:	4603      	mov	r3, r0
 8011558:	4618      	mov	r0, r3
 801155a:	f000 faee 	bl	8011b3a <_ZNRSt8__detail9__variant14_UninitializedISt6vectorIbSaIbEELb0EE6_M_getEv>
 801155e:	4603      	mov	r3, r0
 8011560:	4618      	mov	r0, r3
 8011562:	3708      	adds	r7, #8
 8011564:	46bd      	mov	sp, r7
 8011566:	bd80      	pop	{r7, pc}

08011568 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011568:	b590      	push	{r4, r7, lr}
 801156a:	b083      	sub	sp, #12
 801156c:	af00      	add	r7, sp, #0
 801156e:	7138      	strb	r0, [r7, #4]
 8011570:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011572:	6838      	ldr	r0, [r7, #0]
 8011574:	f000 faa7 	bl	8011ac6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISA_E4typeE>
 8011578:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801157a:	4619      	mov	r1, r3
 801157c:	4620      	mov	r0, r4
 801157e:	f7ff ffe2 	bl	8011546 <_ZNSt8__detail9__variant5__getIRNS0_15_Variadic_unionIJSt6vectorIbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8011582:	4603      	mov	r3, r0
    }
 8011584:	4618      	mov	r0, r3
 8011586:	370c      	adds	r7, #12
 8011588:	46bd      	mov	sp, r7
 801158a:	bd90      	pop	{r4, r7, pc}

0801158c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801158c:	b590      	push	{r4, r7, lr}
 801158e:	b083      	sub	sp, #12
 8011590:	af00      	add	r7, sp, #0
 8011592:	7138      	strb	r0, [r7, #4]
 8011594:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011596:	6838      	ldr	r0, [r7, #0]
 8011598:	f000 fa66 	bl	8011a68 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISC_E4typeE>
 801159c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801159e:	4619      	mov	r1, r3
 80115a0:	4620      	mov	r0, r4
 80115a2:	f7ff ffe1 	bl	8011568 <_ZNSt8__detail9__variant5__getILj1ERNS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80115a6:	4603      	mov	r3, r0
    }
 80115a8:	4618      	mov	r0, r3
 80115aa:	370c      	adds	r7, #12
 80115ac:	46bd      	mov	sp, r7
 80115ae:	bd90      	pop	{r4, r7, pc}

080115b0 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80115b0:	b590      	push	{r4, r7, lr}
 80115b2:	b083      	sub	sp, #12
 80115b4:	af00      	add	r7, sp, #0
 80115b6:	7138      	strb	r0, [r7, #4]
 80115b8:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80115ba:	6838      	ldr	r0, [r7, #0]
 80115bc:	f000 fa25 	bl	8011a0a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 80115c0:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80115c2:	4619      	mov	r1, r3
 80115c4:	4620      	mov	r0, r4
 80115c6:	f7ff ffe1 	bl	801158c <_ZNSt8__detail9__variant5__getILj2ERNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80115ca:	4603      	mov	r3, r0
    }
 80115cc:	4618      	mov	r0, r3
 80115ce:	370c      	adds	r7, #12
 80115d0:	46bd      	mov	sp, r7
 80115d2:	bd90      	pop	{r4, r7, pc}

080115d4 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80115d4:	b590      	push	{r4, r7, lr}
 80115d6:	b083      	sub	sp, #12
 80115d8:	af00      	add	r7, sp, #0
 80115da:	7138      	strb	r0, [r7, #4]
 80115dc:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80115de:	6838      	ldr	r0, [r7, #0]
 80115e0:	f000 f9f1 	bl	80119c6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 80115e4:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80115e6:	4619      	mov	r1, r3
 80115e8:	4620      	mov	r0, r4
 80115ea:	f7ff ffe1 	bl	80115b0 <_ZNSt8__detail9__variant5__getILj3ERNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80115ee:	4603      	mov	r3, r0
    }
 80115f0:	4618      	mov	r0, r3
 80115f2:	370c      	adds	r7, #12
 80115f4:	46bd      	mov	sp, r7
 80115f6:	bd90      	pop	{r4, r7, pc}

080115f8 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80115f8:	b590      	push	{r4, r7, lr}
 80115fa:	b083      	sub	sp, #12
 80115fc:	af00      	add	r7, sp, #0
 80115fe:	7138      	strb	r0, [r7, #4]
 8011600:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011602:	6838      	ldr	r0, [r7, #0]
 8011604:	f000 f9bd 	bl	8011982 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8011608:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801160a:	4619      	mov	r1, r3
 801160c:	4620      	mov	r0, r4
 801160e:	f7ff ffe1 	bl	80115d4 <_ZNSt8__detail9__variant5__getILj4ERNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011612:	4603      	mov	r3, r0
    }
 8011614:	4618      	mov	r0, r3
 8011616:	370c      	adds	r7, #12
 8011618:	46bd      	mov	sp, r7
 801161a:	bd90      	pop	{r4, r7, pc}

0801161c <_ZNSt8__detail9__variant5__getILj6ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801161c:	b590      	push	{r4, r7, lr}
 801161e:	b083      	sub	sp, #12
 8011620:	af00      	add	r7, sp, #0
 8011622:	7138      	strb	r0, [r7, #4]
 8011624:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8011626:	6838      	ldr	r0, [r7, #0]
 8011628:	f000 f989 	bl	801193e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801162c:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801162e:	4619      	mov	r1, r3
 8011630:	4620      	mov	r0, r4
 8011632:	f7ff ffe1 	bl	80115f8 <_ZNSt8__detail9__variant5__getILj5ERNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8011636:	4603      	mov	r3, r0
    }
 8011638:	4618      	mov	r0, r3
 801163a:	370c      	adds	r7, #12
 801163c:	46bd      	mov	sp, r7
 801163e:	bd90      	pop	{r4, r7, pc}

08011640 <_ZNSt8__detail9__variant5__getILj7ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8011640:	b590      	push	{r4, r7, lr}
 8011642:	b083      	sub	sp, #12
 8011644:	af00      	add	r7, sp, #0
 8011646:	7138      	strb	r0, [r7, #4]
 8011648:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801164a:	6838      	ldr	r0, [r7, #0]
 801164c:	f000 f955 	bl	80118fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 8011650:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8011652:	4619      	mov	r1, r3
 8011654:	4620      	mov	r0, r4
 8011656:	f7ff ffe1 	bl	801161c <_ZNSt8__detail9__variant5__getILj6ERNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801165a:	4603      	mov	r3, r0
    }
 801165c:	4618      	mov	r0, r3
 801165e:	370c      	adds	r7, #12
 8011660:	46bd      	mov	sp, r7
 8011662:	bd90      	pop	{r4, r7, pc}

08011664 <_ZNSt8__detail9__variant5__getILj7ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8011664:	b590      	push	{r4, r7, lr}
 8011666:	b083      	sub	sp, #12
 8011668:	af00      	add	r7, sp, #0
 801166a:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801166c:	6878      	ldr	r0, [r7, #4]
 801166e:	f000 f939 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8011672:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8011674:	4619      	mov	r1, r3
 8011676:	4620      	mov	r0, r4
 8011678:	f7ff ffe2 	bl	8011640 <_ZNSt8__detail9__variant5__getILj7ERNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801167c:	4603      	mov	r3, r0
    }
 801167e:	4618      	mov	r0, r3
 8011680:	370c      	adds	r7, #12
 8011682:	46bd      	mov	sp, r7
 8011684:	bd90      	pop	{r4, r7, pc}

08011686 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj7EEEE28__element_by_index_or_cookieILj7ESR_EEDcOT0_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8011686:	b580      	push	{r7, lr}
 8011688:	b082      	sub	sp, #8
 801168a:	af00      	add	r7, sp, #0
 801168c:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801168e:	6878      	ldr	r0, [r7, #4]
 8011690:	f000 f928 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8011694:	4603      	mov	r3, r0
 8011696:	4618      	mov	r0, r3
 8011698:	f7ff ffe4 	bl	8011664 <_ZNSt8__detail9__variant5__getILj7ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801169c:	4603      	mov	r3, r0
	}
 801169e:	4618      	mov	r0, r3
 80116a0:	3708      	adds	r7, #8
 80116a2:	46bd      	mov	sp, r7
 80116a4:	bd80      	pop	{r7, pc}

080116a6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj7EEEE19__visit_invoke_implESO_SR_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80116a6:	b5b0      	push	{r4, r5, r7, lr}
 80116a8:	b082      	sub	sp, #8
 80116aa:	af00      	add	r7, sp, #0
 80116ac:	6078      	str	r0, [r7, #4]
 80116ae:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80116b0:	6878      	ldr	r0, [r7, #4]
 80116b2:	f000 f90c 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 80116b6:	4604      	mov	r4, r0
 80116b8:	6838      	ldr	r0, [r7, #0]
 80116ba:	f000 f913 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80116be:	4603      	mov	r3, r0
 80116c0:	4618      	mov	r0, r3
 80116c2:	f7ff ffe0 	bl	8011686 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj7EEEE28__element_by_index_or_cookieILj7ESR_EEDcOT0_>
 80116c6:	4603      	mov	r3, r0
 80116c8:	4619      	mov	r1, r3
 80116ca:	4620      	mov	r0, r4
 80116cc:	f000 fa42 	bl	8011b54 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSH_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>
		std::forward<_Variants>(__vars))...);
 80116d0:	462b      	mov	r3, r5
      }
 80116d2:	4618      	mov	r0, r3
 80116d4:	3708      	adds	r7, #8
 80116d6:	46bd      	mov	sp, r7
 80116d8:	bdb0      	pop	{r4, r5, r7, pc}

080116da <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj7EEEE17__do_visit_invokeESO_SR_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80116da:	b5b0      	push	{r4, r5, r7, lr}
 80116dc:	b082      	sub	sp, #8
 80116de:	af00      	add	r7, sp, #0
 80116e0:	6078      	str	r0, [r7, #4]
 80116e2:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80116e4:	6878      	ldr	r0, [r7, #4]
 80116e6:	f000 f8f2 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 80116ea:	4604      	mov	r4, r0
 80116ec:	6838      	ldr	r0, [r7, #0]
 80116ee:	f000 f8f9 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80116f2:	4603      	mov	r3, r0
 80116f4:	4619      	mov	r1, r3
 80116f6:	4620      	mov	r0, r4
 80116f8:	f7ff ffd5 	bl	80116a6 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj7EEEE19__visit_invoke_implESO_SR_>
				   std::forward<_Variants>(__vars)...);
 80116fc:	462b      	mov	r3, r5
      }
 80116fe:	4618      	mov	r0, r3
 8011700:	3708      	adds	r7, #8
 8011702:	46bd      	mov	sp, r7
 8011704:	bdb0      	pop	{r4, r5, r7, pc}

08011706 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj7EEEE14__visit_invokeESO_SR_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8011706:	b5b0      	push	{r4, r5, r7, lr}
 8011708:	b082      	sub	sp, #8
 801170a:	af00      	add	r7, sp, #0
 801170c:	6078      	str	r0, [r7, #4]
 801170e:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8011710:	6878      	ldr	r0, [r7, #4]
 8011712:	f000 f8dc 	bl	80118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011716:	4604      	mov	r4, r0
 8011718:	6838      	ldr	r0, [r7, #0]
 801171a:	f000 f8e3 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801171e:	4603      	mov	r3, r0
 8011720:	4619      	mov	r1, r3
 8011722:	4620      	mov	r0, r4
 8011724:	f7ff ffd9 	bl	80116da <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSR_EESt16integer_sequenceIjJLj7EEEE17__do_visit_invokeESO_SR_>
				   std::forward<_Variants>(__vars)...);
 8011728:	462b      	mov	r3, r5
      }
 801172a:	4618      	mov	r0, r3
 801172c:	3708      	adds	r7, #8
 801172e:	46bd      	mov	sp, r7
 8011730:	bdb0      	pop	{r4, r5, r7, pc}

08011732 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SC_SE_SG_SI_EEEJLj8EEE9_M_accessIJEEERKSS_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 8011732:	b580      	push	{r7, lr}
 8011734:	b082      	sub	sp, #8
 8011736:	af00      	add	r7, sp, #0
 8011738:	6078      	str	r0, [r7, #4]
 801173a:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 801173c:	683b      	ldr	r3, [r7, #0]
 801173e:	009b      	lsls	r3, r3, #2
 8011740:	687a      	ldr	r2, [r7, #4]
 8011742:	4413      	add	r3, r2
 8011744:	4618      	mov	r0, r3
 8011746:	f000 fa1c 	bl	8011b82 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SC_SE_SG_SI_EEEJEE9_M_accessEv>
 801174a:	4603      	mov	r3, r0
	}
 801174c:	4618      	mov	r0, r3
 801174e:	3708      	adds	r7, #8
 8011750:	46bd      	mov	sp, r7
 8011752:	bd80      	pop	{r7, pc}

08011754 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv>:
      constexpr size_t index() const noexcept
 8011754:	b480      	push	{r7}
 8011756:	b083      	sub	sp, #12
 8011758:	af00      	add	r7, sp, #0
 801175a:	6078      	str	r0, [r7, #4]
	if (this->_M_index ==
 801175c:	687b      	ldr	r3, [r7, #4]
 801175e:	7e1b      	ldrb	r3, [r3, #24]
 8011760:	2bff      	cmp	r3, #255	; 0xff
 8011762:	d102      	bne.n	801176a <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv+0x16>
	  return variant_npos;
 8011764:	f04f 33ff 	mov.w	r3, #4294967295
 8011768:	e001      	b.n	801176e <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv+0x1a>
	return this->_M_index;
 801176a:	687b      	ldr	r3, [r7, #4]
 801176c:	7e1b      	ldrb	r3, [r3, #24]
      }
 801176e:	4618      	mov	r0, r3
 8011770:	370c      	adds	r7, #12
 8011772:	46bd      	mov	sp, r7
 8011774:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011778:	4770      	bx	lr
	...

0801177c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SB_SD_SF_SH_EEEEDcOT1_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 801177c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801177e:	b085      	sub	sp, #20
 8011780:	af00      	add	r7, sp, #0
 8011782:	6078      	str	r0, [r7, #4]
 8011784:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8011786:	4b0f      	ldr	r3, [pc, #60]	; (80117c4 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SB_SD_SF_SH_EEEEDcOT1_DpOT2_+0x48>)
 8011788:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 801178a:	6838      	ldr	r0, [r7, #0]
 801178c:	f7ff ffe2 	bl	8011754 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv>
 8011790:	4603      	mov	r3, r0
 8011792:	4619      	mov	r1, r3
 8011794:	68f8      	ldr	r0, [r7, #12]
 8011796:	f7ff ffcc 	bl	8011732 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SC_SE_SG_SI_EEEJLj8EEE9_M_accessIJEEERKSS_jDpT_>
 801179a:	4603      	mov	r3, r0
 801179c:	681b      	ldr	r3, [r3, #0]
 801179e:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 80117a0:	68bc      	ldr	r4, [r7, #8]
 80117a2:	6878      	ldr	r0, [r7, #4]
 80117a4:	f000 f9f8 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 80117a8:	4605      	mov	r5, r0
 80117aa:	6838      	ldr	r0, [r7, #0]
 80117ac:	f000 f89a 	bl	80118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80117b0:	4603      	mov	r3, r0
 80117b2:	4619      	mov	r1, r3
 80117b4:	4628      	mov	r0, r5
 80117b6:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 80117b8:	4633      	mov	r3, r6
    }
 80117ba:	4618      	mov	r0, r3
 80117bc:	3714      	adds	r7, #20
 80117be:	46bd      	mov	sp, r7
 80117c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117c2:	bf00      	nop
 80117c4:	08025244 	.word	0x08025244

080117c8 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEv>:
      constexpr void _M_reset_impl()
 80117c8:	b580      	push	{r7, lr}
 80117ca:	b084      	sub	sp, #16
 80117cc:	af00      	add	r7, sp, #0
 80117ce:	6078      	str	r0, [r7, #4]
	__do_visit([](auto&& __this_mem) mutable
 80117d0:	6878      	ldr	r0, [r7, #4]
 80117d2:	f7ff f9eb 	bl	8010bac <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEERNSt8__detail9__variant16_Variant_storageILb0EJifbS5_S8_SA_SC_SE_EEEEDcOT0_>
 80117d6:	4602      	mov	r2, r0
 80117d8:	f107 030c 	add.w	r3, r7, #12
 80117dc:	4611      	mov	r1, r2
 80117de:	4618      	mov	r0, r3
 80117e0:	f7ff ffcc 	bl	801177c <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJifbS8_SB_SD_SF_SH_EEEEDcOT1_DpOT2_>
      }
 80117e4:	bf00      	nop
 80117e6:	3710      	adds	r7, #16
 80117e8:	46bd      	mov	sp, r7
 80117ea:	bd80      	pop	{r7, pc}

080117ec <_ZNSt10_Head_baseILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS8_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 80117ec:	b480      	push	{r7}
 80117ee:	b083      	sub	sp, #12
 80117f0:	af00      	add	r7, sp, #0
 80117f2:	6078      	str	r0, [r7, #4]
 80117f4:	687b      	ldr	r3, [r7, #4]
 80117f6:	681b      	ldr	r3, [r3, #0]
 80117f8:	4618      	mov	r0, r3
 80117fa:	370c      	adds	r7, #12
 80117fc:	46bd      	mov	sp, r7
 80117fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011802:	4770      	bx	lr

08011804 <_ZSt3getILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSC_>:
    get(tuple<_Elements...>& __t) noexcept
 8011804:	b580      	push	{r7, lr}
 8011806:	b082      	sub	sp, #8
 8011808:	af00      	add	r7, sp, #0
 801180a:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 801180c:	687b      	ldr	r3, [r7, #4]
 801180e:	4618      	mov	r0, r3
 8011810:	f000 f9cd 	bl	8011bae <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>
 8011814:	4603      	mov	r3, r0
 8011816:	4618      	mov	r0, r3
 8011818:	3708      	adds	r7, #8
 801181a:	46bd      	mov	sp, r7
 801181c:	bd80      	pop	{r7, pc}

0801181e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801181e:	b580      	push	{r7, lr}
 8011820:	b082      	sub	sp, #8
 8011822:	af00      	add	r7, sp, #0
 8011824:	6078      	str	r0, [r7, #4]
 8011826:	7039      	strb	r1, [r7, #0]
 8011828:	687b      	ldr	r3, [r7, #4]
 801182a:	4611      	mov	r1, r2
 801182c:	4618      	mov	r0, r3
 801182e:	f000 f9e8 	bl	8011c02 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8011832:	687b      	ldr	r3, [r7, #4]
 8011834:	4618      	mov	r0, r3
 8011836:	3708      	adds	r7, #8
 8011838:	46bd      	mov	sp, r7
 801183a:	bd80      	pop	{r7, pc}

0801183c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801183c:	b580      	push	{r7, lr}
 801183e:	b082      	sub	sp, #8
 8011840:	af00      	add	r7, sp, #0
 8011842:	6078      	str	r0, [r7, #4]
 8011844:	7039      	strb	r1, [r7, #0]
 8011846:	687b      	ldr	r3, [r7, #4]
 8011848:	4611      	mov	r1, r2
 801184a:	4618      	mov	r0, r3
 801184c:	f7ff ffe7 	bl	801181e <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8011850:	687b      	ldr	r3, [r7, #4]
 8011852:	4618      	mov	r0, r3
 8011854:	3708      	adds	r7, #8
 8011856:	46bd      	mov	sp, r7
 8011858:	bd80      	pop	{r7, pc}

0801185a <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 801185a:	b580      	push	{r7, lr}
 801185c:	b082      	sub	sp, #8
 801185e:	af00      	add	r7, sp, #0
 8011860:	6078      	str	r0, [r7, #4]
 8011862:	7039      	strb	r1, [r7, #0]
 8011864:	687b      	ldr	r3, [r7, #4]
 8011866:	4611      	mov	r1, r2
 8011868:	4618      	mov	r0, r3
 801186a:	f7ff ffe7 	bl	801183c <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801186e:	687b      	ldr	r3, [r7, #4]
 8011870:	4618      	mov	r0, r3
 8011872:	3708      	adds	r7, #8
 8011874:	46bd      	mov	sp, r7
 8011876:	bd80      	pop	{r7, pc}

08011878 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8011878:	b580      	push	{r7, lr}
 801187a:	b082      	sub	sp, #8
 801187c:	af00      	add	r7, sp, #0
 801187e:	6078      	str	r0, [r7, #4]
 8011880:	7039      	strb	r1, [r7, #0]
 8011882:	687b      	ldr	r3, [r7, #4]
 8011884:	4611      	mov	r1, r2
 8011886:	4618      	mov	r0, r3
 8011888:	f7ff ffe7 	bl	801185a <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801188c:	687b      	ldr	r3, [r7, #4]
 801188e:	4618      	mov	r0, r3
 8011890:	3708      	adds	r7, #8
 8011892:	46bd      	mov	sp, r7
 8011894:	bd80      	pop	{r7, pc}

08011896 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8011896:	b580      	push	{r7, lr}
 8011898:	b082      	sub	sp, #8
 801189a:	af00      	add	r7, sp, #0
 801189c:	6078      	str	r0, [r7, #4]
 801189e:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 80118a0:	687b      	ldr	r3, [r7, #4]
 80118a2:	4611      	mov	r1, r2
 80118a4:	4618      	mov	r0, r3
 80118a6:	f7ff ffe7 	bl	8011878 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 80118aa:	687b      	ldr	r3, [r7, #4]
 80118ac:	4618      	mov	r0, r3
 80118ae:	3708      	adds	r7, #8
 80118b0:	46bd      	mov	sp, r7
 80118b2:	bd80      	pop	{r7, pc}

080118b4 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>:
      _Variant_base()
 80118b4:	b580      	push	{r7, lr}
 80118b6:	b082      	sub	sp, #8
 80118b8:	af00      	add	r7, sp, #0
 80118ba:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 80118bc:	4619      	mov	r1, r3
 80118be:	6878      	ldr	r0, [r7, #4]
 80118c0:	f7ff ffe9 	bl	8011896 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80118c4:	687b      	ldr	r3, [r7, #4]
 80118c6:	4618      	mov	r0, r3
 80118c8:	3708      	adds	r7, #8
 80118ca:	46bd      	mov	sp, r7
 80118cc:	bd80      	pop	{r7, pc}

080118ce <_ZSt7forwardIOZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80118ce:	b480      	push	{r7}
 80118d0:	b083      	sub	sp, #12
 80118d2:	af00      	add	r7, sp, #0
 80118d4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80118d6:	687b      	ldr	r3, [r7, #4]
 80118d8:	4618      	mov	r0, r3
 80118da:	370c      	adds	r7, #12
 80118dc:	46bd      	mov	sp, r7
 80118de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118e2:	4770      	bx	lr

080118e4 <_ZSt7forwardIRSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80118e4:	b480      	push	{r7}
 80118e6:	b083      	sub	sp, #12
 80118e8:	af00      	add	r7, sp, #0
 80118ea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80118ec:	687b      	ldr	r3, [r7, #4]
 80118ee:	4618      	mov	r0, r3
 80118f0:	370c      	adds	r7, #12
 80118f2:	46bd      	mov	sp, r7
 80118f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80118f8:	4770      	bx	lr

080118fa <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80118fa:	b480      	push	{r7}
 80118fc:	b083      	sub	sp, #12
 80118fe:	af00      	add	r7, sp, #0
 8011900:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011902:	687b      	ldr	r3, [r7, #4]
 8011904:	4618      	mov	r0, r3
 8011906:	370c      	adds	r7, #12
 8011908:	46bd      	mov	sp, r7
 801190a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801190e:	4770      	bx	lr

08011910 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRiEENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011910:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011912:	b083      	sub	sp, #12
 8011914:	af00      	add	r7, sp, #0
 8011916:	6078      	str	r0, [r7, #4]
 8011918:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801191a:	6878      	ldr	r0, [r7, #4]
 801191c:	f000 f93c 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011920:	4604      	mov	r4, r0
 8011922:	6838      	ldr	r0, [r7, #0]
 8011924:	f7f4 fb69 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8011928:	4603      	mov	r3, r0
 801192a:	461a      	mov	r2, r3
 801192c:	4621      	mov	r1, r4
 801192e:	4628      	mov	r0, r5
 8011930:	f000 f979 	bl	8011c26 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRiEESK_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011934:	4633      	mov	r3, r6
    }
 8011936:	4618      	mov	r0, r3
 8011938:	370c      	adds	r7, #12
 801193a:	46bd      	mov	sp, r7
 801193c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801193e <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801193e:	b480      	push	{r7}
 8011940:	b083      	sub	sp, #12
 8011942:	af00      	add	r7, sp, #0
 8011944:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011946:	687b      	ldr	r3, [r7, #4]
 8011948:	4618      	mov	r0, r3
 801194a:	370c      	adds	r7, #12
 801194c:	46bd      	mov	sp, r7
 801194e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011952:	4770      	bx	lr

08011954 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRfEENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011954:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011956:	b083      	sub	sp, #12
 8011958:	af00      	add	r7, sp, #0
 801195a:	6078      	str	r0, [r7, #4]
 801195c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801195e:	6878      	ldr	r0, [r7, #4]
 8011960:	f000 f91a 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011964:	4604      	mov	r4, r0
 8011966:	6838      	ldr	r0, [r7, #0]
 8011968:	f7f4 fb69 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801196c:	4603      	mov	r3, r0
 801196e:	461a      	mov	r2, r3
 8011970:	4621      	mov	r1, r4
 8011972:	4628      	mov	r0, r5
 8011974:	f000 f96e 	bl	8011c54 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRfEESK_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011978:	4633      	mov	r3, r6
    }
 801197a:	4618      	mov	r0, r3
 801197c:	370c      	adds	r7, #12
 801197e:	46bd      	mov	sp, r7
 8011980:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011982 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011982:	b480      	push	{r7}
 8011984:	b083      	sub	sp, #12
 8011986:	af00      	add	r7, sp, #0
 8011988:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801198a:	687b      	ldr	r3, [r7, #4]
 801198c:	4618      	mov	r0, r3
 801198e:	370c      	adds	r7, #12
 8011990:	46bd      	mov	sp, r7
 8011992:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011996:	4770      	bx	lr

08011998 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRbEENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011998:	b5f0      	push	{r4, r5, r6, r7, lr}
 801199a:	b083      	sub	sp, #12
 801199c:	af00      	add	r7, sp, #0
 801199e:	6078      	str	r0, [r7, #4]
 80119a0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80119a2:	6878      	ldr	r0, [r7, #4]
 80119a4:	f000 f8f8 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 80119a8:	4604      	mov	r4, r0
 80119aa:	6838      	ldr	r0, [r7, #0]
 80119ac:	f7f4 fb03 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 80119b0:	4603      	mov	r3, r0
 80119b2:	461a      	mov	r2, r3
 80119b4:	4621      	mov	r1, r4
 80119b6:	4628      	mov	r0, r5
 80119b8:	f000 f963 	bl	8011c82 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRbEESK_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 80119bc:	4633      	mov	r3, r6
    }
 80119be:	4618      	mov	r0, r3
 80119c0:	370c      	adds	r7, #12
 80119c2:	46bd      	mov	sp, r7
 80119c4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080119c6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80119c6:	b480      	push	{r7}
 80119c8:	b083      	sub	sp, #12
 80119ca:	af00      	add	r7, sp, #0
 80119cc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80119ce:	687b      	ldr	r3, [r7, #4]
 80119d0:	4618      	mov	r0, r3
 80119d2:	370c      	adds	r7, #12
 80119d4:	46bd      	mov	sp, r7
 80119d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80119da:	4770      	bx	lr

080119dc <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRS8_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 80119dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80119de:	b083      	sub	sp, #12
 80119e0:	af00      	add	r7, sp, #0
 80119e2:	6078      	str	r0, [r7, #4]
 80119e4:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 80119e6:	6878      	ldr	r0, [r7, #4]
 80119e8:	f000 f8d6 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 80119ec:	4604      	mov	r4, r0
 80119ee:	6838      	ldr	r0, [r7, #0]
 80119f0:	f7f4 fb53 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 80119f4:	4603      	mov	r3, r0
 80119f6:	461a      	mov	r2, r3
 80119f8:	4621      	mov	r1, r4
 80119fa:	4628      	mov	r0, r5
 80119fc:	f000 f958 	bl	8011cb0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRS9_EESK_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011a00:	4633      	mov	r3, r6
    }
 8011a02:	4618      	mov	r0, r3
 8011a04:	370c      	adds	r7, #12
 8011a06:	46bd      	mov	sp, r7
 8011a08:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011a0a <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011a0a:	b480      	push	{r7}
 8011a0c:	b083      	sub	sp, #12
 8011a0e:	af00      	add	r7, sp, #0
 8011a10:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011a12:	687b      	ldr	r3, [r7, #4]
 8011a14:	4618      	mov	r0, r3
 8011a16:	370c      	adds	r7, #12
 8011a18:	46bd      	mov	sp, r7
 8011a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011a1e:	4770      	bx	lr

08011a20 <_ZNRSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8011a20:	b580      	push	{r7, lr}
 8011a22:	b082      	sub	sp, #8
 8011a24:	af00      	add	r7, sp, #0
 8011a26:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8011a28:	687b      	ldr	r3, [r7, #4]
 8011a2a:	4618      	mov	r0, r3
 8011a2c:	f000 f957 	bl	8011cde <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>
 8011a30:	4603      	mov	r3, r0
 8011a32:	4618      	mov	r0, r3
 8011a34:	3708      	adds	r7, #8
 8011a36:	46bd      	mov	sp, r7
 8011a38:	bd80      	pop	{r7, pc}

08011a3a <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSB_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011a3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a3c:	b083      	sub	sp, #12
 8011a3e:	af00      	add	r7, sp, #0
 8011a40:	6078      	str	r0, [r7, #4]
 8011a42:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011a44:	6878      	ldr	r0, [r7, #4]
 8011a46:	f000 f8a7 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011a4a:	4604      	mov	r4, r0
 8011a4c:	6838      	ldr	r0, [r7, #0]
 8011a4e:	f000 f952 	bl	8011cf6 <_ZSt7forwardIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 8011a52:	4603      	mov	r3, r0
 8011a54:	461a      	mov	r2, r3
 8011a56:	4621      	mov	r1, r4
 8011a58:	4628      	mov	r0, r5
 8011a5a:	f000 f957 	bl	8011d0c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSC_EESK_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011a5e:	4633      	mov	r3, r6
    }
 8011a60:	4618      	mov	r0, r3
 8011a62:	370c      	adds	r7, #12
 8011a64:	46bd      	mov	sp, r7
 8011a66:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011a68 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011a68:	b480      	push	{r7}
 8011a6a:	b083      	sub	sp, #12
 8011a6c:	af00      	add	r7, sp, #0
 8011a6e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011a70:	687b      	ldr	r3, [r7, #4]
 8011a72:	4618      	mov	r0, r3
 8011a74:	370c      	adds	r7, #12
 8011a76:	46bd      	mov	sp, r7
 8011a78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011a7c:	4770      	bx	lr

08011a7e <_ZNRSt8__detail9__variant14_UninitializedISt6vectorIiSaIiEELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8011a7e:	b580      	push	{r7, lr}
 8011a80:	b082      	sub	sp, #8
 8011a82:	af00      	add	r7, sp, #0
 8011a84:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8011a86:	687b      	ldr	r3, [r7, #4]
 8011a88:	4618      	mov	r0, r3
 8011a8a:	f000 f956 	bl	8011d3a <_ZN9__gnu_cxx16__aligned_membufISt6vectorIiSaIiEEE6_M_ptrEv>
 8011a8e:	4603      	mov	r3, r0
 8011a90:	4618      	mov	r0, r3
 8011a92:	3708      	adds	r7, #8
 8011a94:	46bd      	mov	sp, r7
 8011a96:	bd80      	pop	{r7, pc}

08011a98 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSD_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011a98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a9a:	b083      	sub	sp, #12
 8011a9c:	af00      	add	r7, sp, #0
 8011a9e:	6078      	str	r0, [r7, #4]
 8011aa0:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011aa2:	6878      	ldr	r0, [r7, #4]
 8011aa4:	f000 f878 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011aa8:	4604      	mov	r4, r0
 8011aaa:	6838      	ldr	r0, [r7, #0]
 8011aac:	f000 f951 	bl	8011d52 <_ZSt7forwardIRSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS4_E4typeE>
 8011ab0:	4603      	mov	r3, r0
 8011ab2:	461a      	mov	r2, r3
 8011ab4:	4621      	mov	r1, r4
 8011ab6:	4628      	mov	r0, r5
 8011ab8:	f000 f956 	bl	8011d68 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSE_EESK_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011abc:	4633      	mov	r3, r6
    }
 8011abe:	4618      	mov	r0, r3
 8011ac0:	370c      	adds	r7, #12
 8011ac2:	46bd      	mov	sp, r7
 8011ac4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011ac6 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011ac6:	b480      	push	{r7}
 8011ac8:	b083      	sub	sp, #12
 8011aca:	af00      	add	r7, sp, #0
 8011acc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011ace:	687b      	ldr	r3, [r7, #4]
 8011ad0:	4618      	mov	r0, r3
 8011ad2:	370c      	adds	r7, #12
 8011ad4:	46bd      	mov	sp, r7
 8011ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ada:	4770      	bx	lr

08011adc <_ZNRSt8__detail9__variant14_UninitializedISt6vectorIfSaIfEELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8011adc:	b580      	push	{r7, lr}
 8011ade:	b082      	sub	sp, #8
 8011ae0:	af00      	add	r7, sp, #0
 8011ae2:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8011ae4:	687b      	ldr	r3, [r7, #4]
 8011ae6:	4618      	mov	r0, r3
 8011ae8:	f000 f955 	bl	8011d96 <_ZN9__gnu_cxx16__aligned_membufISt6vectorIfSaIfEEE6_M_ptrEv>
 8011aec:	4603      	mov	r3, r0
 8011aee:	4618      	mov	r0, r3
 8011af0:	3708      	adds	r7, #8
 8011af2:	46bd      	mov	sp, r7
 8011af4:	bd80      	pop	{r7, pc}

08011af6 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSF_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011af6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011af8:	b083      	sub	sp, #12
 8011afa:	af00      	add	r7, sp, #0
 8011afc:	6078      	str	r0, [r7, #4]
 8011afe:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011b00:	6878      	ldr	r0, [r7, #4]
 8011b02:	f000 f849 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011b06:	4604      	mov	r4, r0
 8011b08:	6838      	ldr	r0, [r7, #0]
 8011b0a:	f000 f950 	bl	8011dae <_ZSt7forwardIRSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS4_E4typeE>
 8011b0e:	4603      	mov	r3, r0
 8011b10:	461a      	mov	r2, r3
 8011b12:	4621      	mov	r1, r4
 8011b14:	4628      	mov	r0, r5
 8011b16:	f000 f955 	bl	8011dc4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSG_EESK_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011b1a:	4633      	mov	r3, r6
    }
 8011b1c:	4618      	mov	r0, r3
 8011b1e:	370c      	adds	r7, #12
 8011b20:	46bd      	mov	sp, r7
 8011b22:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011b24 <_ZSt7forwardIRNSt8__detail9__variant15_Variadic_unionIJSt6vectorIbSaIbEEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011b24:	b480      	push	{r7}
 8011b26:	b083      	sub	sp, #12
 8011b28:	af00      	add	r7, sp, #0
 8011b2a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011b2c:	687b      	ldr	r3, [r7, #4]
 8011b2e:	4618      	mov	r0, r3
 8011b30:	370c      	adds	r7, #12
 8011b32:	46bd      	mov	sp, r7
 8011b34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011b38:	4770      	bx	lr

08011b3a <_ZNRSt8__detail9__variant14_UninitializedISt6vectorIbSaIbEELb0EE6_M_getEv>:
      _Type& _M_get() & noexcept
 8011b3a:	b580      	push	{r7, lr}
 8011b3c:	b082      	sub	sp, #8
 8011b3e:	af00      	add	r7, sp, #0
 8011b40:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8011b42:	687b      	ldr	r3, [r7, #4]
 8011b44:	4618      	mov	r0, r3
 8011b46:	f000 f954 	bl	8011df2 <_ZN9__gnu_cxx16__aligned_membufISt6vectorIbSaIbEEE6_M_ptrEv>
 8011b4a:	4603      	mov	r3, r0
 8011b4c:	4618      	mov	r0, r3
 8011b4e:	3708      	adds	r7, #8
 8011b50:	46bd      	mov	sp, r7
 8011b52:	bd80      	pop	{r7, pc}

08011b54 <_ZSt8__invokeIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSH_EENSt15__invoke_resultISJ_JDpT0_EE4typeESK_DpOSO_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8011b54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011b56:	b083      	sub	sp, #12
 8011b58:	af00      	add	r7, sp, #0
 8011b5a:	6078      	str	r0, [r7, #4]
 8011b5c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8011b5e:	6878      	ldr	r0, [r7, #4]
 8011b60:	f000 f81a 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011b64:	4604      	mov	r4, r0
 8011b66:	6838      	ldr	r0, [r7, #0]
 8011b68:	f000 f94f 	bl	8011e0a <_ZSt7forwardIRSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS4_E4typeE>
 8011b6c:	4603      	mov	r3, r0
 8011b6e:	461a      	mov	r2, r3
 8011b70:	4621      	mov	r1, r4
 8011b72:	4628      	mov	r0, r5
 8011b74:	f000 f954 	bl	8011e20 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSI_EESK_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
 8011b78:	4633      	mov	r3, r6
    }
 8011b7a:	4618      	mov	r0, r3
 8011b7c:	370c      	adds	r7, #12
 8011b7e:	46bd      	mov	sp, r7
 8011b80:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011b82 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_RSt7variantIJifbS9_SC_SE_SG_SI_EEEJEE9_M_accessEv>:
      _M_access() const
 8011b82:	b480      	push	{r7}
 8011b84:	b083      	sub	sp, #12
 8011b86:	af00      	add	r7, sp, #0
 8011b88:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8011b8a:	687b      	ldr	r3, [r7, #4]
 8011b8c:	4618      	mov	r0, r3
 8011b8e:	370c      	adds	r7, #12
 8011b90:	46bd      	mov	sp, r7
 8011b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011b96:	4770      	bx	lr

08011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011b98:	b480      	push	{r7}
 8011b9a:	b083      	sub	sp, #12
 8011b9c:	af00      	add	r7, sp, #0
 8011b9e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011ba0:	687b      	ldr	r3, [r7, #4]
 8011ba2:	4618      	mov	r0, r3
 8011ba4:	370c      	adds	r7, #12
 8011ba6:	46bd      	mov	sp, r7
 8011ba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011bac:	4770      	bx	lr

08011bae <_ZSt12__get_helperILj0ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS8_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 8011bae:	b580      	push	{r7, lr}
 8011bb0:	b082      	sub	sp, #8
 8011bb2:	af00      	add	r7, sp, #0
 8011bb4:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 8011bb6:	6878      	ldr	r0, [r7, #4]
 8011bb8:	f7fe ffab 	bl	8010b12 <_ZNSt11_Tuple_implILj0EJRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS8_>
 8011bbc:	4603      	mov	r3, r0
 8011bbe:	4618      	mov	r0, r3
 8011bc0:	3708      	adds	r7, #8
 8011bc2:	46bd      	mov	sp, r7
 8011bc4:	bd80      	pop	{r7, pc}

08011bc6 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8011bc6:	b480      	push	{r7}
 8011bc8:	b083      	sub	sp, #12
 8011bca:	af00      	add	r7, sp, #0
 8011bcc:	6078      	str	r0, [r7, #4]
 8011bce:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 8011bd0:	687b      	ldr	r3, [r7, #4]
 8011bd2:	2200      	movs	r2, #0
 8011bd4:	601a      	str	r2, [r3, #0]
	{ }
 8011bd6:	687b      	ldr	r3, [r7, #4]
 8011bd8:	4618      	mov	r0, r3
 8011bda:	370c      	adds	r7, #12
 8011bdc:	46bd      	mov	sp, r7
 8011bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011be2:	4770      	bx	lr

08011be4 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8011be4:	b580      	push	{r7, lr}
 8011be6:	b082      	sub	sp, #8
 8011be8:	af00      	add	r7, sp, #0
 8011bea:	6078      	str	r0, [r7, #4]
 8011bec:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8011bee:	687b      	ldr	r3, [r7, #4]
 8011bf0:	4611      	mov	r1, r2
 8011bf2:	4618      	mov	r0, r3
 8011bf4:	f7ff ffe7 	bl	8011bc6 <_ZNSt8__detail9__variant14_UninitializedIiLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8011bf8:	687b      	ldr	r3, [r7, #4]
 8011bfa:	4618      	mov	r0, r3
 8011bfc:	3708      	adds	r7, #8
 8011bfe:	46bd      	mov	sp, r7
 8011c00:	bd80      	pop	{r7, pc}

08011c02 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8011c02:	b580      	push	{r7, lr}
 8011c04:	b082      	sub	sp, #8
 8011c06:	af00      	add	r7, sp, #0
 8011c08:	6078      	str	r0, [r7, #4]
 8011c0a:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8011c0c:	687b      	ldr	r3, [r7, #4]
 8011c0e:	4611      	mov	r1, r2
 8011c10:	4618      	mov	r0, r3
 8011c12:	f7ff ffe7 	bl	8011be4 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 8011c16:	687b      	ldr	r3, [r7, #4]
 8011c18:	2200      	movs	r2, #0
 8011c1a:	761a      	strb	r2, [r3, #24]
	{ }
 8011c1c:	687b      	ldr	r3, [r7, #4]
 8011c1e:	4618      	mov	r0, r3
 8011c20:	3708      	adds	r7, #8
 8011c22:	46bd      	mov	sp, r7
 8011c24:	bd80      	pop	{r7, pc}

08011c26 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRiEESK_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011c26:	b5b0      	push	{r4, r5, r7, lr}
 8011c28:	b084      	sub	sp, #16
 8011c2a:	af00      	add	r7, sp, #0
 8011c2c:	7338      	strb	r0, [r7, #12]
 8011c2e:	60b9      	str	r1, [r7, #8]
 8011c30:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011c32:	68b8      	ldr	r0, [r7, #8]
 8011c34:	f7ff ffb0 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011c38:	4604      	mov	r4, r0
 8011c3a:	6878      	ldr	r0, [r7, #4]
 8011c3c:	f7f4 f9dd 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8011c40:	4603      	mov	r3, r0
 8011c42:	4619      	mov	r1, r3
 8011c44:	4620      	mov	r0, r4
 8011c46:	f000 f902 	bl	8011e4e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESJ_>
 8011c4a:	462b      	mov	r3, r5
 8011c4c:	4618      	mov	r0, r3
 8011c4e:	3710      	adds	r7, #16
 8011c50:	46bd      	mov	sp, r7
 8011c52:	bdb0      	pop	{r4, r5, r7, pc}

08011c54 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRfEESK_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011c54:	b5b0      	push	{r4, r5, r7, lr}
 8011c56:	b084      	sub	sp, #16
 8011c58:	af00      	add	r7, sp, #0
 8011c5a:	7338      	strb	r0, [r7, #12]
 8011c5c:	60b9      	str	r1, [r7, #8]
 8011c5e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011c60:	68b8      	ldr	r0, [r7, #8]
 8011c62:	f7ff ff99 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011c66:	4604      	mov	r4, r0
 8011c68:	6878      	ldr	r0, [r7, #4]
 8011c6a:	f7f4 f9e8 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8011c6e:	4603      	mov	r3, r0
 8011c70:	4619      	mov	r1, r3
 8011c72:	4620      	mov	r0, r4
 8011c74:	f000 f8fc 	bl	8011e70 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESJ_>
 8011c78:	462b      	mov	r3, r5
 8011c7a:	4618      	mov	r0, r3
 8011c7c:	3710      	adds	r7, #16
 8011c7e:	46bd      	mov	sp, r7
 8011c80:	bdb0      	pop	{r4, r5, r7, pc}

08011c82 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRbEESK_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011c82:	b5b0      	push	{r4, r5, r7, lr}
 8011c84:	b084      	sub	sp, #16
 8011c86:	af00      	add	r7, sp, #0
 8011c88:	7338      	strb	r0, [r7, #12]
 8011c8a:	60b9      	str	r1, [r7, #8]
 8011c8c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011c8e:	68b8      	ldr	r0, [r7, #8]
 8011c90:	f7ff ff82 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011c94:	4604      	mov	r4, r0
 8011c96:	6878      	ldr	r0, [r7, #4]
 8011c98:	f7f4 f98d 	bl	8005fb6 <_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE>
 8011c9c:	4603      	mov	r3, r0
 8011c9e:	4619      	mov	r1, r3
 8011ca0:	4620      	mov	r0, r4
 8011ca2:	f000 f8f6 	bl	8011e92 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESJ_>
 8011ca6:	462b      	mov	r3, r5
 8011ca8:	4618      	mov	r0, r3
 8011caa:	3710      	adds	r7, #16
 8011cac:	46bd      	mov	sp, r7
 8011cae:	bdb0      	pop	{r4, r5, r7, pc}

08011cb0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRS9_EESK_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011cb0:	b5b0      	push	{r4, r5, r7, lr}
 8011cb2:	b084      	sub	sp, #16
 8011cb4:	af00      	add	r7, sp, #0
 8011cb6:	7338      	strb	r0, [r7, #12]
 8011cb8:	60b9      	str	r1, [r7, #8]
 8011cba:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011cbc:	68b8      	ldr	r0, [r7, #8]
 8011cbe:	f7ff ff6b 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011cc2:	4604      	mov	r4, r0
 8011cc4:	6878      	ldr	r0, [r7, #4]
 8011cc6:	f7f4 f9e8 	bl	800609a <_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 8011cca:	4603      	mov	r3, r0
 8011ccc:	4619      	mov	r1, r3
 8011cce:	4620      	mov	r0, r4
 8011cd0:	f000 f8f0 	bl	8011eb4 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESJ_>
 8011cd4:	462b      	mov	r3, r5
 8011cd6:	4618      	mov	r0, r3
 8011cd8:	3710      	adds	r7, #16
 8011cda:	46bd      	mov	sp, r7
 8011cdc:	bdb0      	pop	{r4, r5, r7, pc}

08011cde <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>:
      _M_ptr() noexcept
 8011cde:	b580      	push	{r7, lr}
 8011ce0:	b082      	sub	sp, #8
 8011ce2:	af00      	add	r7, sp, #0
 8011ce4:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8011ce6:	6878      	ldr	r0, [r7, #4]
 8011ce8:	f000 f8f5 	bl	8011ed6 <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE7_M_addrEv>
 8011cec:	4603      	mov	r3, r0
 8011cee:	4618      	mov	r0, r3
 8011cf0:	3708      	adds	r7, #8
 8011cf2:	46bd      	mov	sp, r7
 8011cf4:	bd80      	pop	{r7, pc}

08011cf6 <_ZSt7forwardIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011cf6:	b480      	push	{r7}
 8011cf8:	b083      	sub	sp, #12
 8011cfa:	af00      	add	r7, sp, #0
 8011cfc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011cfe:	687b      	ldr	r3, [r7, #4]
 8011d00:	4618      	mov	r0, r3
 8011d02:	370c      	adds	r7, #12
 8011d04:	46bd      	mov	sp, r7
 8011d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d0a:	4770      	bx	lr

08011d0c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSC_EESK_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011d0c:	b5b0      	push	{r4, r5, r7, lr}
 8011d0e:	b084      	sub	sp, #16
 8011d10:	af00      	add	r7, sp, #0
 8011d12:	7338      	strb	r0, [r7, #12]
 8011d14:	60b9      	str	r1, [r7, #8]
 8011d16:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011d18:	68b8      	ldr	r0, [r7, #8]
 8011d1a:	f7ff ff3d 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011d1e:	4604      	mov	r4, r0
 8011d20:	6878      	ldr	r0, [r7, #4]
 8011d22:	f7ff ffe8 	bl	8011cf6 <_ZSt7forwardIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 8011d26:	4603      	mov	r3, r0
 8011d28:	4619      	mov	r1, r3
 8011d2a:	4620      	mov	r0, r4
 8011d2c:	f000 f8de 	bl	8011eec <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRSA_EENS0_16__variant_cookieESJ_>
 8011d30:	462b      	mov	r3, r5
 8011d32:	4618      	mov	r0, r3
 8011d34:	3710      	adds	r7, #16
 8011d36:	46bd      	mov	sp, r7
 8011d38:	bdb0      	pop	{r4, r5, r7, pc}

08011d3a <_ZN9__gnu_cxx16__aligned_membufISt6vectorIiSaIiEEE6_M_ptrEv>:
      _M_ptr() noexcept
 8011d3a:	b580      	push	{r7, lr}
 8011d3c:	b082      	sub	sp, #8
 8011d3e:	af00      	add	r7, sp, #0
 8011d40:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8011d42:	6878      	ldr	r0, [r7, #4]
 8011d44:	f000 f8e3 	bl	8011f0e <_ZN9__gnu_cxx16__aligned_membufISt6vectorIiSaIiEEE7_M_addrEv>
 8011d48:	4603      	mov	r3, r0
 8011d4a:	4618      	mov	r0, r3
 8011d4c:	3708      	adds	r7, #8
 8011d4e:	46bd      	mov	sp, r7
 8011d50:	bd80      	pop	{r7, pc}

08011d52 <_ZSt7forwardIRSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011d52:	b480      	push	{r7}
 8011d54:	b083      	sub	sp, #12
 8011d56:	af00      	add	r7, sp, #0
 8011d58:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011d5a:	687b      	ldr	r3, [r7, #4]
 8011d5c:	4618      	mov	r0, r3
 8011d5e:	370c      	adds	r7, #12
 8011d60:	46bd      	mov	sp, r7
 8011d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d66:	4770      	bx	lr

08011d68 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSE_EESK_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011d68:	b5b0      	push	{r4, r5, r7, lr}
 8011d6a:	b084      	sub	sp, #16
 8011d6c:	af00      	add	r7, sp, #0
 8011d6e:	7338      	strb	r0, [r7, #12]
 8011d70:	60b9      	str	r1, [r7, #8]
 8011d72:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011d74:	68b8      	ldr	r0, [r7, #8]
 8011d76:	f7ff ff0f 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011d7a:	4604      	mov	r4, r0
 8011d7c:	6878      	ldr	r0, [r7, #4]
 8011d7e:	f7ff ffe8 	bl	8011d52 <_ZSt7forwardIRSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS4_E4typeE>
 8011d82:	4603      	mov	r3, r0
 8011d84:	4619      	mov	r1, r3
 8011d86:	4620      	mov	r0, r4
 8011d88:	f000 f8cc 	bl	8011f24 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRSC_EENS0_16__variant_cookieESJ_>
 8011d8c:	462b      	mov	r3, r5
 8011d8e:	4618      	mov	r0, r3
 8011d90:	3710      	adds	r7, #16
 8011d92:	46bd      	mov	sp, r7
 8011d94:	bdb0      	pop	{r4, r5, r7, pc}

08011d96 <_ZN9__gnu_cxx16__aligned_membufISt6vectorIfSaIfEEE6_M_ptrEv>:
      _M_ptr() noexcept
 8011d96:	b580      	push	{r7, lr}
 8011d98:	b082      	sub	sp, #8
 8011d9a:	af00      	add	r7, sp, #0
 8011d9c:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8011d9e:	6878      	ldr	r0, [r7, #4]
 8011da0:	f000 f8d1 	bl	8011f46 <_ZN9__gnu_cxx16__aligned_membufISt6vectorIfSaIfEEE7_M_addrEv>
 8011da4:	4603      	mov	r3, r0
 8011da6:	4618      	mov	r0, r3
 8011da8:	3708      	adds	r7, #8
 8011daa:	46bd      	mov	sp, r7
 8011dac:	bd80      	pop	{r7, pc}

08011dae <_ZSt7forwardIRSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011dae:	b480      	push	{r7}
 8011db0:	b083      	sub	sp, #12
 8011db2:	af00      	add	r7, sp, #0
 8011db4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011db6:	687b      	ldr	r3, [r7, #4]
 8011db8:	4618      	mov	r0, r3
 8011dba:	370c      	adds	r7, #12
 8011dbc:	46bd      	mov	sp, r7
 8011dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011dc2:	4770      	bx	lr

08011dc4 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSG_EESK_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011dc4:	b5b0      	push	{r4, r5, r7, lr}
 8011dc6:	b084      	sub	sp, #16
 8011dc8:	af00      	add	r7, sp, #0
 8011dca:	7338      	strb	r0, [r7, #12]
 8011dcc:	60b9      	str	r1, [r7, #8]
 8011dce:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011dd0:	68b8      	ldr	r0, [r7, #8]
 8011dd2:	f7ff fee1 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011dd6:	4604      	mov	r4, r0
 8011dd8:	6878      	ldr	r0, [r7, #4]
 8011dda:	f7ff ffe8 	bl	8011dae <_ZSt7forwardIRSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS4_E4typeE>
 8011dde:	4603      	mov	r3, r0
 8011de0:	4619      	mov	r1, r3
 8011de2:	4620      	mov	r0, r4
 8011de4:	f000 f8ba 	bl	8011f5c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRSE_EENS0_16__variant_cookieESJ_>
 8011de8:	462b      	mov	r3, r5
 8011dea:	4618      	mov	r0, r3
 8011dec:	3710      	adds	r7, #16
 8011dee:	46bd      	mov	sp, r7
 8011df0:	bdb0      	pop	{r4, r5, r7, pc}

08011df2 <_ZN9__gnu_cxx16__aligned_membufISt6vectorIbSaIbEEE6_M_ptrEv>:
      _M_ptr() noexcept
 8011df2:	b580      	push	{r7, lr}
 8011df4:	b082      	sub	sp, #8
 8011df6:	af00      	add	r7, sp, #0
 8011df8:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8011dfa:	6878      	ldr	r0, [r7, #4]
 8011dfc:	f000 f8bf 	bl	8011f7e <_ZN9__gnu_cxx16__aligned_membufISt6vectorIbSaIbEEE7_M_addrEv>
 8011e00:	4603      	mov	r3, r0
 8011e02:	4618      	mov	r0, r3
 8011e04:	3708      	adds	r7, #8
 8011e06:	46bd      	mov	sp, r7
 8011e08:	bd80      	pop	{r7, pc}

08011e0a <_ZSt7forwardIRSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8011e0a:	b480      	push	{r7}
 8011e0c:	b083      	sub	sp, #12
 8011e0e:	af00      	add	r7, sp, #0
 8011e10:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8011e12:	687b      	ldr	r3, [r7, #4]
 8011e14:	4618      	mov	r0, r3
 8011e16:	370c      	adds	r7, #12
 8011e18:	46bd      	mov	sp, r7
 8011e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011e1e:	4770      	bx	lr

08011e20 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEEE13_M_reset_implEvEUlOT_E_JRSI_EESK_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8011e20:	b5b0      	push	{r4, r5, r7, lr}
 8011e22:	b084      	sub	sp, #16
 8011e24:	af00      	add	r7, sp, #0
 8011e26:	7338      	strb	r0, [r7, #12]
 8011e28:	60b9      	str	r1, [r7, #8]
 8011e2a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8011e2c:	68b8      	ldr	r0, [r7, #8]
 8011e2e:	f7ff feb3 	bl	8011b98 <_ZSt7forwardIZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEE13_M_reset_implEvEUlOT_E_ESK_RNSt16remove_referenceISJ_E4typeE>
 8011e32:	4604      	mov	r4, r0
 8011e34:	6878      	ldr	r0, [r7, #4]
 8011e36:	f7ff ffe8 	bl	8011e0a <_ZSt7forwardIRSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS4_E4typeE>
 8011e3a:	4603      	mov	r3, r0
 8011e3c:	4619      	mov	r1, r3
 8011e3e:	4620      	mov	r0, r4
 8011e40:	f000 f8a8 	bl	8011f94 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRSG_EENS0_16__variant_cookieESJ_>
 8011e44:	462b      	mov	r3, r5
 8011e46:	4618      	mov	r0, r3
 8011e48:	3710      	adds	r7, #16
 8011e4a:	46bd      	mov	sp, r7
 8011e4c:	bdb0      	pop	{r4, r5, r7, pc}

08011e4e <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRiEENS0_16__variant_cookieESJ_>:
	__do_visit([](auto&& __this_mem) mutable
 8011e4e:	b590      	push	{r4, r7, lr}
 8011e50:	b083      	sub	sp, #12
 8011e52:	af00      	add	r7, sp, #0
 8011e54:	6078      	str	r0, [r7, #4]
 8011e56:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011e58:	6838      	ldr	r0, [r7, #0]
 8011e5a:	f7f4 fa52 	bl	8006302 <_ZSt11__addressofIiEPT_RS0_>
 8011e5e:	4603      	mov	r3, r0
 8011e60:	4618      	mov	r0, r3
 8011e62:	f7f4 fa59 	bl	8006318 <_ZSt8_DestroyIiEvPT_>
	    return {};
 8011e66:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011e68:	4618      	mov	r0, r3
 8011e6a:	370c      	adds	r7, #12
 8011e6c:	46bd      	mov	sp, r7
 8011e6e:	bd90      	pop	{r4, r7, pc}

08011e70 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRfEENS0_16__variant_cookieESJ_>:
 8011e70:	b590      	push	{r4, r7, lr}
 8011e72:	b083      	sub	sp, #12
 8011e74:	af00      	add	r7, sp, #0
 8011e76:	6078      	str	r0, [r7, #4]
 8011e78:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011e7a:	6838      	ldr	r0, [r7, #0]
 8011e7c:	f7f4 fa56 	bl	800632c <_ZSt11__addressofIfEPT_RS0_>
 8011e80:	4603      	mov	r3, r0
 8011e82:	4618      	mov	r0, r3
 8011e84:	f7f4 fa5d 	bl	8006342 <_ZSt8_DestroyIfEvPT_>
	    return {};
 8011e88:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011e8a:	4618      	mov	r0, r3
 8011e8c:	370c      	adds	r7, #12
 8011e8e:	46bd      	mov	sp, r7
 8011e90:	bd90      	pop	{r4, r7, pc}

08011e92 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRbEENS0_16__variant_cookieESJ_>:
 8011e92:	b590      	push	{r4, r7, lr}
 8011e94:	b083      	sub	sp, #12
 8011e96:	af00      	add	r7, sp, #0
 8011e98:	6078      	str	r0, [r7, #4]
 8011e9a:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011e9c:	6838      	ldr	r0, [r7, #0]
 8011e9e:	f7f4 fa1b 	bl	80062d8 <_ZSt11__addressofIbEPT_RS0_>
 8011ea2:	4603      	mov	r3, r0
 8011ea4:	4618      	mov	r0, r3
 8011ea6:	f7f4 fa22 	bl	80062ee <_ZSt8_DestroyIbEvPT_>
	    return {};
 8011eaa:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011eac:	4618      	mov	r0, r3
 8011eae:	370c      	adds	r7, #12
 8011eb0:	46bd      	mov	sp, r7
 8011eb2:	bd90      	pop	{r4, r7, pc}

08011eb4 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRS7_EENS0_16__variant_cookieESJ_>:
 8011eb4:	b590      	push	{r4, r7, lr}
 8011eb6:	b083      	sub	sp, #12
 8011eb8:	af00      	add	r7, sp, #0
 8011eba:	6078      	str	r0, [r7, #4]
 8011ebc:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011ebe:	6838      	ldr	r0, [r7, #0]
 8011ec0:	f7f4 fa49 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8011ec4:	4603      	mov	r3, r0
 8011ec6:	4618      	mov	r0, r3
 8011ec8:	f7f4 fa50 	bl	800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	    return {};
 8011ecc:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011ece:	4618      	mov	r0, r3
 8011ed0:	370c      	adds	r7, #12
 8011ed2:	46bd      	mov	sp, r7
 8011ed4:	bd90      	pop	{r4, r7, pc}

08011ed6 <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE7_M_addrEv>:
      _M_addr() noexcept
 8011ed6:	b480      	push	{r7}
 8011ed8:	b083      	sub	sp, #12
 8011eda:	af00      	add	r7, sp, #0
 8011edc:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8011ede:	687b      	ldr	r3, [r7, #4]
 8011ee0:	4618      	mov	r0, r3
 8011ee2:	370c      	adds	r7, #12
 8011ee4:	46bd      	mov	sp, r7
 8011ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011eea:	4770      	bx	lr

08011eec <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRSA_EENS0_16__variant_cookieESJ_>:
 8011eec:	b590      	push	{r4, r7, lr}
 8011eee:	b083      	sub	sp, #12
 8011ef0:	af00      	add	r7, sp, #0
 8011ef2:	6078      	str	r0, [r7, #4]
 8011ef4:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011ef6:	6838      	ldr	r0, [r7, #0]
 8011ef8:	f000 f85d 	bl	8011fb6 <_ZSt11__addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>
 8011efc:	4603      	mov	r3, r0
 8011efe:	4618      	mov	r0, r3
 8011f00:	f000 f864 	bl	8011fcc <_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_>
	    return {};
 8011f04:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011f06:	4618      	mov	r0, r3
 8011f08:	370c      	adds	r7, #12
 8011f0a:	46bd      	mov	sp, r7
 8011f0c:	bd90      	pop	{r4, r7, pc}

08011f0e <_ZN9__gnu_cxx16__aligned_membufISt6vectorIiSaIiEEE7_M_addrEv>:
      _M_addr() noexcept
 8011f0e:	b480      	push	{r7}
 8011f10:	b083      	sub	sp, #12
 8011f12:	af00      	add	r7, sp, #0
 8011f14:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8011f16:	687b      	ldr	r3, [r7, #4]
 8011f18:	4618      	mov	r0, r3
 8011f1a:	370c      	adds	r7, #12
 8011f1c:	46bd      	mov	sp, r7
 8011f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f22:	4770      	bx	lr

08011f24 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRSC_EENS0_16__variant_cookieESJ_>:
 8011f24:	b590      	push	{r4, r7, lr}
 8011f26:	b083      	sub	sp, #12
 8011f28:	af00      	add	r7, sp, #0
 8011f2a:	6078      	str	r0, [r7, #4]
 8011f2c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011f2e:	6838      	ldr	r0, [r7, #0]
 8011f30:	f000 f857 	bl	8011fe2 <_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_>
 8011f34:	4603      	mov	r3, r0
 8011f36:	4618      	mov	r0, r3
 8011f38:	f000 f85e 	bl	8011ff8 <_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_>
	    return {};
 8011f3c:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011f3e:	4618      	mov	r0, r3
 8011f40:	370c      	adds	r7, #12
 8011f42:	46bd      	mov	sp, r7
 8011f44:	bd90      	pop	{r4, r7, pc}

08011f46 <_ZN9__gnu_cxx16__aligned_membufISt6vectorIfSaIfEEE7_M_addrEv>:
      _M_addr() noexcept
 8011f46:	b480      	push	{r7}
 8011f48:	b083      	sub	sp, #12
 8011f4a:	af00      	add	r7, sp, #0
 8011f4c:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8011f4e:	687b      	ldr	r3, [r7, #4]
 8011f50:	4618      	mov	r0, r3
 8011f52:	370c      	adds	r7, #12
 8011f54:	46bd      	mov	sp, r7
 8011f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f5a:	4770      	bx	lr

08011f5c <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRSE_EENS0_16__variant_cookieESJ_>:
 8011f5c:	b590      	push	{r4, r7, lr}
 8011f5e:	b083      	sub	sp, #12
 8011f60:	af00      	add	r7, sp, #0
 8011f62:	6078      	str	r0, [r7, #4]
 8011f64:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011f66:	6838      	ldr	r0, [r7, #0]
 8011f68:	f000 f851 	bl	801200e <_ZSt11__addressofISt6vectorIfSaIfEEEPT_RS3_>
 8011f6c:	4603      	mov	r3, r0
 8011f6e:	4618      	mov	r0, r3
 8011f70:	f000 f858 	bl	8012024 <_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_>
	    return {};
 8011f74:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011f76:	4618      	mov	r0, r3
 8011f78:	370c      	adds	r7, #12
 8011f7a:	46bd      	mov	sp, r7
 8011f7c:	bd90      	pop	{r4, r7, pc}

08011f7e <_ZN9__gnu_cxx16__aligned_membufISt6vectorIbSaIbEEE7_M_addrEv>:
      _M_addr() noexcept
 8011f7e:	b480      	push	{r7}
 8011f80:	b083      	sub	sp, #12
 8011f82:	af00      	add	r7, sp, #0
 8011f84:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 8011f86:	687b      	ldr	r3, [r7, #4]
 8011f88:	4618      	mov	r0, r3
 8011f8a:	370c      	adds	r7, #12
 8011f8c:	46bd      	mov	sp, r7
 8011f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f92:	4770      	bx	lr

08011f94 <_ZZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE13_M_reset_implEvENUlOT_E_clIRSG_EENS0_16__variant_cookieESJ_>:
 8011f94:	b590      	push	{r4, r7, lr}
 8011f96:	b083      	sub	sp, #12
 8011f98:	af00      	add	r7, sp, #0
 8011f9a:	6078      	str	r0, [r7, #4]
 8011f9c:	6039      	str	r1, [r7, #0]
	      std::_Destroy(std::__addressof(__this_mem));
 8011f9e:	6838      	ldr	r0, [r7, #0]
 8011fa0:	f000 f84b 	bl	801203a <_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_>
 8011fa4:	4603      	mov	r3, r0
 8011fa6:	4618      	mov	r0, r3
 8011fa8:	f000 f852 	bl	8012050 <_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_>
	    return {};
 8011fac:	4623      	mov	r3, r4
	__do_visit([](auto&& __this_mem) mutable
 8011fae:	4618      	mov	r0, r3
 8011fb0:	370c      	adds	r7, #12
 8011fb2:	46bd      	mov	sp, r7
 8011fb4:	bd90      	pop	{r4, r7, pc}

08011fb6 <_ZSt11__addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8011fb6:	b480      	push	{r7}
 8011fb8:	b083      	sub	sp, #12
 8011fba:	af00      	add	r7, sp, #0
 8011fbc:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8011fbe:	687b      	ldr	r3, [r7, #4]
 8011fc0:	4618      	mov	r0, r3
 8011fc2:	370c      	adds	r7, #12
 8011fc4:	46bd      	mov	sp, r7
 8011fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011fca:	4770      	bx	lr

08011fcc <_ZSt8_DestroyISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEvPT_>:
    _Destroy(_Tp* __pointer)
 8011fcc:	b580      	push	{r7, lr}
 8011fce:	b082      	sub	sp, #8
 8011fd0:	af00      	add	r7, sp, #0
 8011fd2:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8011fd4:	6878      	ldr	r0, [r7, #4]
 8011fd6:	f000 f846 	bl	8012066 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
 8011fda:	bf00      	nop
 8011fdc:	3708      	adds	r7, #8
 8011fde:	46bd      	mov	sp, r7
 8011fe0:	bd80      	pop	{r7, pc}

08011fe2 <_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8011fe2:	b480      	push	{r7}
 8011fe4:	b083      	sub	sp, #12
 8011fe6:	af00      	add	r7, sp, #0
 8011fe8:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8011fea:	687b      	ldr	r3, [r7, #4]
 8011fec:	4618      	mov	r0, r3
 8011fee:	370c      	adds	r7, #12
 8011ff0:	46bd      	mov	sp, r7
 8011ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ff6:	4770      	bx	lr

08011ff8 <_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_>:
    _Destroy(_Tp* __pointer)
 8011ff8:	b580      	push	{r7, lr}
 8011ffa:	b082      	sub	sp, #8
 8011ffc:	af00      	add	r7, sp, #0
 8011ffe:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8012000:	6878      	ldr	r0, [r7, #4]
 8012002:	f000 f84b 	bl	801209c <_ZNSt6vectorIiSaIiEED1Ev>
 8012006:	bf00      	nop
 8012008:	3708      	adds	r7, #8
 801200a:	46bd      	mov	sp, r7
 801200c:	bd80      	pop	{r7, pc}

0801200e <_ZSt11__addressofISt6vectorIfSaIfEEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801200e:	b480      	push	{r7}
 8012010:	b083      	sub	sp, #12
 8012012:	af00      	add	r7, sp, #0
 8012014:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8012016:	687b      	ldr	r3, [r7, #4]
 8012018:	4618      	mov	r0, r3
 801201a:	370c      	adds	r7, #12
 801201c:	46bd      	mov	sp, r7
 801201e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012022:	4770      	bx	lr

08012024 <_ZSt8_DestroyISt6vectorIfSaIfEEEvPT_>:
    _Destroy(_Tp* __pointer)
 8012024:	b580      	push	{r7, lr}
 8012026:	b082      	sub	sp, #8
 8012028:	af00      	add	r7, sp, #0
 801202a:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 801202c:	6878      	ldr	r0, [r7, #4]
 801202e:	f000 f850 	bl	80120d2 <_ZNSt6vectorIfSaIfEED1Ev>
 8012032:	bf00      	nop
 8012034:	3708      	adds	r7, #8
 8012036:	46bd      	mov	sp, r7
 8012038:	bd80      	pop	{r7, pc}

0801203a <_ZSt11__addressofISt6vectorIbSaIbEEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801203a:	b480      	push	{r7}
 801203c:	b083      	sub	sp, #12
 801203e:	af00      	add	r7, sp, #0
 8012040:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8012042:	687b      	ldr	r3, [r7, #4]
 8012044:	4618      	mov	r0, r3
 8012046:	370c      	adds	r7, #12
 8012048:	46bd      	mov	sp, r7
 801204a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801204e:	4770      	bx	lr

08012050 <_ZSt8_DestroyISt6vectorIbSaIbEEEvPT_>:
    _Destroy(_Tp* __pointer)
 8012050:	b580      	push	{r7, lr}
 8012052:	b082      	sub	sp, #8
 8012054:	af00      	add	r7, sp, #0
 8012056:	6078      	str	r0, [r7, #4]
    { __pointer->~_Tp(); }
 8012058:	6878      	ldr	r0, [r7, #4]
 801205a:	f000 f855 	bl	8012108 <_ZNSt6vectorIbSaIbEED1Ev>
 801205e:	bf00      	nop
 8012060:	3708      	adds	r7, #8
 8012062:	46bd      	mov	sp, r7
 8012064:	bd80      	pop	{r7, pc}

08012066 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8012066:	b5b0      	push	{r4, r5, r7, lr}
 8012068:	b082      	sub	sp, #8
 801206a:	af00      	add	r7, sp, #0
 801206c:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 801206e:	687b      	ldr	r3, [r7, #4]
 8012070:	681c      	ldr	r4, [r3, #0]
 8012072:	687b      	ldr	r3, [r7, #4]
 8012074:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8012076:	687b      	ldr	r3, [r7, #4]
 8012078:	4618      	mov	r0, r3
 801207a:	f000 f87d 	bl	8012178 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 801207e:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8012080:	461a      	mov	r2, r3
 8012082:	4629      	mov	r1, r5
 8012084:	4620      	mov	r0, r4
 8012086:	f000 f882 	bl	801218e <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>
      }
 801208a:	687b      	ldr	r3, [r7, #4]
 801208c:	4618      	mov	r0, r3
 801208e:	f000 f855 	bl	801213c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
 8012092:	687b      	ldr	r3, [r7, #4]
 8012094:	4618      	mov	r0, r3
 8012096:	3708      	adds	r7, #8
 8012098:	46bd      	mov	sp, r7
 801209a:	bdb0      	pop	{r4, r5, r7, pc}

0801209c <_ZNSt6vectorIiSaIiEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 801209c:	b5b0      	push	{r4, r5, r7, lr}
 801209e:	b082      	sub	sp, #8
 80120a0:	af00      	add	r7, sp, #0
 80120a2:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80120a4:	687b      	ldr	r3, [r7, #4]
 80120a6:	681c      	ldr	r4, [r3, #0]
 80120a8:	687b      	ldr	r3, [r7, #4]
 80120aa:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 80120ac:	687b      	ldr	r3, [r7, #4]
 80120ae:	4618      	mov	r0, r3
 80120b0:	f000 f8a0 	bl	80121f4 <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
 80120b4:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80120b6:	461a      	mov	r2, r3
 80120b8:	4629      	mov	r1, r5
 80120ba:	4620      	mov	r0, r4
 80120bc:	f000 f8a5 	bl	801220a <_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E>
      }
 80120c0:	687b      	ldr	r3, [r7, #4]
 80120c2:	4618      	mov	r0, r3
 80120c4:	f000 f87d 	bl	80121c2 <_ZNSt12_Vector_baseIiSaIiEED1Ev>
 80120c8:	687b      	ldr	r3, [r7, #4]
 80120ca:	4618      	mov	r0, r3
 80120cc:	3708      	adds	r7, #8
 80120ce:	46bd      	mov	sp, r7
 80120d0:	bdb0      	pop	{r4, r5, r7, pc}

080120d2 <_ZNSt6vectorIfSaIfEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 80120d2:	b5b0      	push	{r4, r5, r7, lr}
 80120d4:	b082      	sub	sp, #8
 80120d6:	af00      	add	r7, sp, #0
 80120d8:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80120da:	687b      	ldr	r3, [r7, #4]
 80120dc:	681c      	ldr	r4, [r3, #0]
 80120de:	687b      	ldr	r3, [r7, #4]
 80120e0:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 80120e2:	687b      	ldr	r3, [r7, #4]
 80120e4:	4618      	mov	r0, r3
 80120e6:	f000 f8c3 	bl	8012270 <_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv>
 80120ea:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 80120ec:	461a      	mov	r2, r3
 80120ee:	4629      	mov	r1, r5
 80120f0:	4620      	mov	r0, r4
 80120f2:	f000 f8c8 	bl	8012286 <_ZSt8_DestroyIPffEvT_S1_RSaIT0_E>
      }
 80120f6:	687b      	ldr	r3, [r7, #4]
 80120f8:	4618      	mov	r0, r3
 80120fa:	f000 f8a0 	bl	801223e <_ZNSt12_Vector_baseIfSaIfEED1Ev>
 80120fe:	687b      	ldr	r3, [r7, #4]
 8012100:	4618      	mov	r0, r3
 8012102:	3708      	adds	r7, #8
 8012104:	46bd      	mov	sp, r7
 8012106:	bdb0      	pop	{r4, r5, r7, pc}

08012108 <_ZNSt6vectorIbSaIbEED1Ev>:
	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
	  _M_initialize_dispatch(__first, __last, _Integral());
	}
#endif

      ~vector() _GLIBCXX_NOEXCEPT { }
 8012108:	b580      	push	{r7, lr}
 801210a:	b082      	sub	sp, #8
 801210c:	af00      	add	r7, sp, #0
 801210e:	6078      	str	r0, [r7, #4]
 8012110:	687b      	ldr	r3, [r7, #4]
 8012112:	4618      	mov	r0, r3
 8012114:	f000 f8d1 	bl	80122ba <_ZNSt13_Bvector_baseISaIbEED1Ev>
 8012118:	687b      	ldr	r3, [r7, #4]
 801211a:	4618      	mov	r0, r3
 801211c:	3708      	adds	r7, #8
 801211e:	46bd      	mov	sp, r7
 8012120:	bd80      	pop	{r7, pc}

08012122 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>:
      struct _Vector_impl
 8012122:	b580      	push	{r7, lr}
 8012124:	b082      	sub	sp, #8
 8012126:	af00      	add	r7, sp, #0
 8012128:	6078      	str	r0, [r7, #4]
 801212a:	6878      	ldr	r0, [r7, #4]
 801212c:	f000 f8d5 	bl	80122da <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
 8012130:	687b      	ldr	r3, [r7, #4]
 8012132:	4618      	mov	r0, r3
 8012134:	3708      	adds	r7, #8
 8012136:	46bd      	mov	sp, r7
 8012138:	bd80      	pop	{r7, pc}
	...

0801213c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 801213c:	b580      	push	{r7, lr}
 801213e:	b082      	sub	sp, #8
 8012140:	af00      	add	r7, sp, #0
 8012142:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8012144:	687b      	ldr	r3, [r7, #4]
 8012146:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8012148:	687b      	ldr	r3, [r7, #4]
 801214a:	689a      	ldr	r2, [r3, #8]
 801214c:	687b      	ldr	r3, [r7, #4]
 801214e:	681b      	ldr	r3, [r3, #0]
 8012150:	1ad3      	subs	r3, r2, r3
 8012152:	10db      	asrs	r3, r3, #3
 8012154:	4a07      	ldr	r2, [pc, #28]	; (8012174 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev+0x38>)
 8012156:	fb02 f303 	mul.w	r3, r2, r3
	_M_deallocate(_M_impl._M_start,
 801215a:	461a      	mov	r2, r3
 801215c:	6878      	ldr	r0, [r7, #4]
 801215e:	f000 f8c8 	bl	80122f2 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_j>
      }
 8012162:	687b      	ldr	r3, [r7, #4]
 8012164:	4618      	mov	r0, r3
 8012166:	f7ff ffdc 	bl	8012122 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>
 801216a:	687b      	ldr	r3, [r7, #4]
 801216c:	4618      	mov	r0, r3
 801216e:	3708      	adds	r7, #8
 8012170:	46bd      	mov	sp, r7
 8012172:	bd80      	pop	{r7, pc}
 8012174:	aaaaaaab 	.word	0xaaaaaaab

08012178 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8012178:	b480      	push	{r7}
 801217a:	b083      	sub	sp, #12
 801217c:	af00      	add	r7, sp, #0
 801217e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8012180:	687b      	ldr	r3, [r7, #4]
 8012182:	4618      	mov	r0, r3
 8012184:	370c      	adds	r7, #12
 8012186:	46bd      	mov	sp, r7
 8012188:	f85d 7b04 	ldr.w	r7, [sp], #4
 801218c:	4770      	bx	lr

0801218e <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 801218e:	b580      	push	{r7, lr}
 8012190:	b084      	sub	sp, #16
 8012192:	af00      	add	r7, sp, #0
 8012194:	60f8      	str	r0, [r7, #12]
 8012196:	60b9      	str	r1, [r7, #8]
 8012198:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 801219a:	68b9      	ldr	r1, [r7, #8]
 801219c:	68f8      	ldr	r0, [r7, #12]
 801219e:	f000 f8bb 	bl	8012318 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    }
 80121a2:	bf00      	nop
 80121a4:	3710      	adds	r7, #16
 80121a6:	46bd      	mov	sp, r7
 80121a8:	bd80      	pop	{r7, pc}

080121aa <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev>:
      struct _Vector_impl
 80121aa:	b580      	push	{r7, lr}
 80121ac:	b082      	sub	sp, #8
 80121ae:	af00      	add	r7, sp, #0
 80121b0:	6078      	str	r0, [r7, #4]
 80121b2:	6878      	ldr	r0, [r7, #4]
 80121b4:	f000 f8bd 	bl	8012332 <_ZNSaIiED1Ev>
 80121b8:	687b      	ldr	r3, [r7, #4]
 80121ba:	4618      	mov	r0, r3
 80121bc:	3708      	adds	r7, #8
 80121be:	46bd      	mov	sp, r7
 80121c0:	bd80      	pop	{r7, pc}

080121c2 <_ZNSt12_Vector_baseIiSaIiEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 80121c2:	b580      	push	{r7, lr}
 80121c4:	b082      	sub	sp, #8
 80121c6:	af00      	add	r7, sp, #0
 80121c8:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 80121ca:	687b      	ldr	r3, [r7, #4]
 80121cc:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 80121ce:	687b      	ldr	r3, [r7, #4]
 80121d0:	689a      	ldr	r2, [r3, #8]
 80121d2:	687b      	ldr	r3, [r7, #4]
 80121d4:	681b      	ldr	r3, [r3, #0]
 80121d6:	1ad3      	subs	r3, r2, r3
 80121d8:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 80121da:	461a      	mov	r2, r3
 80121dc:	6878      	ldr	r0, [r7, #4]
 80121de:	f000 f8b4 	bl	801234a <_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPij>
      }
 80121e2:	687b      	ldr	r3, [r7, #4]
 80121e4:	4618      	mov	r0, r3
 80121e6:	f7ff ffe0 	bl	80121aa <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD1Ev>
 80121ea:	687b      	ldr	r3, [r7, #4]
 80121ec:	4618      	mov	r0, r3
 80121ee:	3708      	adds	r7, #8
 80121f0:	46bd      	mov	sp, r7
 80121f2:	bd80      	pop	{r7, pc}

080121f4 <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 80121f4:	b480      	push	{r7}
 80121f6:	b083      	sub	sp, #12
 80121f8:	af00      	add	r7, sp, #0
 80121fa:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80121fc:	687b      	ldr	r3, [r7, #4]
 80121fe:	4618      	mov	r0, r3
 8012200:	370c      	adds	r7, #12
 8012202:	46bd      	mov	sp, r7
 8012204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012208:	4770      	bx	lr

0801220a <_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 801220a:	b580      	push	{r7, lr}
 801220c:	b084      	sub	sp, #16
 801220e:	af00      	add	r7, sp, #0
 8012210:	60f8      	str	r0, [r7, #12]
 8012212:	60b9      	str	r1, [r7, #8]
 8012214:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8012216:	68b9      	ldr	r1, [r7, #8]
 8012218:	68f8      	ldr	r0, [r7, #12]
 801221a:	f000 f8a9 	bl	8012370 <_ZSt8_DestroyIPiEvT_S1_>
    }
 801221e:	bf00      	nop
 8012220:	3710      	adds	r7, #16
 8012222:	46bd      	mov	sp, r7
 8012224:	bd80      	pop	{r7, pc}

08012226 <_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev>:
      struct _Vector_impl
 8012226:	b580      	push	{r7, lr}
 8012228:	b082      	sub	sp, #8
 801222a:	af00      	add	r7, sp, #0
 801222c:	6078      	str	r0, [r7, #4]
 801222e:	6878      	ldr	r0, [r7, #4]
 8012230:	f000 f8ab 	bl	801238a <_ZNSaIfED1Ev>
 8012234:	687b      	ldr	r3, [r7, #4]
 8012236:	4618      	mov	r0, r3
 8012238:	3708      	adds	r7, #8
 801223a:	46bd      	mov	sp, r7
 801223c:	bd80      	pop	{r7, pc}

0801223e <_ZNSt12_Vector_baseIfSaIfEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 801223e:	b580      	push	{r7, lr}
 8012240:	b082      	sub	sp, #8
 8012242:	af00      	add	r7, sp, #0
 8012244:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8012246:	687b      	ldr	r3, [r7, #4]
 8012248:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 801224a:	687b      	ldr	r3, [r7, #4]
 801224c:	689a      	ldr	r2, [r3, #8]
 801224e:	687b      	ldr	r3, [r7, #4]
 8012250:	681b      	ldr	r3, [r3, #0]
 8012252:	1ad3      	subs	r3, r2, r3
 8012254:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 8012256:	461a      	mov	r2, r3
 8012258:	6878      	ldr	r0, [r7, #4]
 801225a:	f000 f8a2 	bl	80123a2 <_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfj>
      }
 801225e:	687b      	ldr	r3, [r7, #4]
 8012260:	4618      	mov	r0, r3
 8012262:	f7ff ffe0 	bl	8012226 <_ZNSt12_Vector_baseIfSaIfEE12_Vector_implD1Ev>
 8012266:	687b      	ldr	r3, [r7, #4]
 8012268:	4618      	mov	r0, r3
 801226a:	3708      	adds	r7, #8
 801226c:	46bd      	mov	sp, r7
 801226e:	bd80      	pop	{r7, pc}

08012270 <_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8012270:	b480      	push	{r7}
 8012272:	b083      	sub	sp, #12
 8012274:	af00      	add	r7, sp, #0
 8012276:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8012278:	687b      	ldr	r3, [r7, #4]
 801227a:	4618      	mov	r0, r3
 801227c:	370c      	adds	r7, #12
 801227e:	46bd      	mov	sp, r7
 8012280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012284:	4770      	bx	lr

08012286 <_ZSt8_DestroyIPffEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8012286:	b580      	push	{r7, lr}
 8012288:	b084      	sub	sp, #16
 801228a:	af00      	add	r7, sp, #0
 801228c:	60f8      	str	r0, [r7, #12]
 801228e:	60b9      	str	r1, [r7, #8]
 8012290:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8012292:	68b9      	ldr	r1, [r7, #8]
 8012294:	68f8      	ldr	r0, [r7, #12]
 8012296:	f000 f897 	bl	80123c8 <_ZSt8_DestroyIPfEvT_S1_>
    }
 801229a:	bf00      	nop
 801229c:	3710      	adds	r7, #16
 801229e:	46bd      	mov	sp, r7
 80122a0:	bd80      	pop	{r7, pc}

080122a2 <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev>:
      struct _Bvector_impl
 80122a2:	b580      	push	{r7, lr}
 80122a4:	b082      	sub	sp, #8
 80122a6:	af00      	add	r7, sp, #0
 80122a8:	6078      	str	r0, [r7, #4]
 80122aa:	6878      	ldr	r0, [r7, #4]
 80122ac:	f000 f899 	bl	80123e2 <_ZNSaImED1Ev>
 80122b0:	687b      	ldr	r3, [r7, #4]
 80122b2:	4618      	mov	r0, r3
 80122b4:	3708      	adds	r7, #8
 80122b6:	46bd      	mov	sp, r7
 80122b8:	bd80      	pop	{r7, pc}

080122ba <_ZNSt13_Bvector_baseISaIbEED1Ev>:
      ~_Bvector_base()
 80122ba:	b580      	push	{r7, lr}
 80122bc:	b082      	sub	sp, #8
 80122be:	af00      	add	r7, sp, #0
 80122c0:	6078      	str	r0, [r7, #4]
      { this->_M_deallocate(); }
 80122c2:	6878      	ldr	r0, [r7, #4]
 80122c4:	f000 f899 	bl	80123fa <_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv>
 80122c8:	687b      	ldr	r3, [r7, #4]
 80122ca:	4618      	mov	r0, r3
 80122cc:	f7ff ffe9 	bl	80122a2 <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev>
 80122d0:	687b      	ldr	r3, [r7, #4]
 80122d2:	4618      	mov	r0, r3
 80122d4:	3708      	adds	r7, #8
 80122d6:	46bd      	mov	sp, r7
 80122d8:	bd80      	pop	{r7, pc}

080122da <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>:
 80122da:	b580      	push	{r7, lr}
 80122dc:	b082      	sub	sp, #8
 80122de:	af00      	add	r7, sp, #0
 80122e0:	6078      	str	r0, [r7, #4]
 80122e2:	6878      	ldr	r0, [r7, #4]
 80122e4:	f000 f8ae 	bl	8012444 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
 80122e8:	687b      	ldr	r3, [r7, #4]
 80122ea:	4618      	mov	r0, r3
 80122ec:	3708      	adds	r7, #8
 80122ee:	46bd      	mov	sp, r7
 80122f0:	bd80      	pop	{r7, pc}

080122f2 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_j>:
      _M_deallocate(pointer __p, size_t __n)
 80122f2:	b580      	push	{r7, lr}
 80122f4:	b084      	sub	sp, #16
 80122f6:	af00      	add	r7, sp, #0
 80122f8:	60f8      	str	r0, [r7, #12]
 80122fa:	60b9      	str	r1, [r7, #8]
 80122fc:	607a      	str	r2, [r7, #4]
	if (__p)
 80122fe:	68bb      	ldr	r3, [r7, #8]
 8012300:	2b00      	cmp	r3, #0
 8012302:	d005      	beq.n	8012310 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_j+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8012304:	68fb      	ldr	r3, [r7, #12]
 8012306:	687a      	ldr	r2, [r7, #4]
 8012308:	68b9      	ldr	r1, [r7, #8]
 801230a:	4618      	mov	r0, r3
 801230c:	f000 f8a5 	bl	801245a <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_j>
      }
 8012310:	bf00      	nop
 8012312:	3710      	adds	r7, #16
 8012314:	46bd      	mov	sp, r7
 8012316:	bd80      	pop	{r7, pc}

08012318 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8012318:	b580      	push	{r7, lr}
 801231a:	b082      	sub	sp, #8
 801231c:	af00      	add	r7, sp, #0
 801231e:	6078      	str	r0, [r7, #4]
 8012320:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 8012322:	6839      	ldr	r1, [r7, #0]
 8012324:	6878      	ldr	r0, [r7, #4]
 8012326:	f000 f8a7 	bl	8012478 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>
    }
 801232a:	bf00      	nop
 801232c:	3708      	adds	r7, #8
 801232e:	46bd      	mov	sp, r7
 8012330:	bd80      	pop	{r7, pc}

08012332 <_ZNSaIiED1Ev>:
 8012332:	b580      	push	{r7, lr}
 8012334:	b082      	sub	sp, #8
 8012336:	af00      	add	r7, sp, #0
 8012338:	6078      	str	r0, [r7, #4]
 801233a:	6878      	ldr	r0, [r7, #4]
 801233c:	f000 f8b4 	bl	80124a8 <_ZN9__gnu_cxx13new_allocatorIiED1Ev>
 8012340:	687b      	ldr	r3, [r7, #4]
 8012342:	4618      	mov	r0, r3
 8012344:	3708      	adds	r7, #8
 8012346:	46bd      	mov	sp, r7
 8012348:	bd80      	pop	{r7, pc}

0801234a <_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPij>:
      _M_deallocate(pointer __p, size_t __n)
 801234a:	b580      	push	{r7, lr}
 801234c:	b084      	sub	sp, #16
 801234e:	af00      	add	r7, sp, #0
 8012350:	60f8      	str	r0, [r7, #12]
 8012352:	60b9      	str	r1, [r7, #8]
 8012354:	607a      	str	r2, [r7, #4]
	if (__p)
 8012356:	68bb      	ldr	r3, [r7, #8]
 8012358:	2b00      	cmp	r3, #0
 801235a:	d005      	beq.n	8012368 <_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPij+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 801235c:	68fb      	ldr	r3, [r7, #12]
 801235e:	687a      	ldr	r2, [r7, #4]
 8012360:	68b9      	ldr	r1, [r7, #8]
 8012362:	4618      	mov	r0, r3
 8012364:	f000 f8ab 	bl	80124be <_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pij>
      }
 8012368:	bf00      	nop
 801236a:	3710      	adds	r7, #16
 801236c:	46bd      	mov	sp, r7
 801236e:	bd80      	pop	{r7, pc}

08012370 <_ZSt8_DestroyIPiEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 8012370:	b580      	push	{r7, lr}
 8012372:	b082      	sub	sp, #8
 8012374:	af00      	add	r7, sp, #0
 8012376:	6078      	str	r0, [r7, #4]
 8012378:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 801237a:	6839      	ldr	r1, [r7, #0]
 801237c:	6878      	ldr	r0, [r7, #4]
 801237e:	f000 f8ad 	bl	80124dc <_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_>
    }
 8012382:	bf00      	nop
 8012384:	3708      	adds	r7, #8
 8012386:	46bd      	mov	sp, r7
 8012388:	bd80      	pop	{r7, pc}

0801238a <_ZNSaIfED1Ev>:
 801238a:	b580      	push	{r7, lr}
 801238c:	b082      	sub	sp, #8
 801238e:	af00      	add	r7, sp, #0
 8012390:	6078      	str	r0, [r7, #4]
 8012392:	6878      	ldr	r0, [r7, #4]
 8012394:	f000 f8ad 	bl	80124f2 <_ZN9__gnu_cxx13new_allocatorIfED1Ev>
 8012398:	687b      	ldr	r3, [r7, #4]
 801239a:	4618      	mov	r0, r3
 801239c:	3708      	adds	r7, #8
 801239e:	46bd      	mov	sp, r7
 80123a0:	bd80      	pop	{r7, pc}

080123a2 <_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfj>:
      _M_deallocate(pointer __p, size_t __n)
 80123a2:	b580      	push	{r7, lr}
 80123a4:	b084      	sub	sp, #16
 80123a6:	af00      	add	r7, sp, #0
 80123a8:	60f8      	str	r0, [r7, #12]
 80123aa:	60b9      	str	r1, [r7, #8]
 80123ac:	607a      	str	r2, [r7, #4]
	if (__p)
 80123ae:	68bb      	ldr	r3, [r7, #8]
 80123b0:	2b00      	cmp	r3, #0
 80123b2:	d005      	beq.n	80123c0 <_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfj+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 80123b4:	68fb      	ldr	r3, [r7, #12]
 80123b6:	687a      	ldr	r2, [r7, #4]
 80123b8:	68b9      	ldr	r1, [r7, #8]
 80123ba:	4618      	mov	r0, r3
 80123bc:	f000 f8a4 	bl	8012508 <_ZNSt16allocator_traitsISaIfEE10deallocateERS0_Pfj>
      }
 80123c0:	bf00      	nop
 80123c2:	3710      	adds	r7, #16
 80123c4:	46bd      	mov	sp, r7
 80123c6:	bd80      	pop	{r7, pc}

080123c8 <_ZSt8_DestroyIPfEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 80123c8:	b580      	push	{r7, lr}
 80123ca:	b082      	sub	sp, #8
 80123cc:	af00      	add	r7, sp, #0
 80123ce:	6078      	str	r0, [r7, #4]
 80123d0:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 80123d2:	6839      	ldr	r1, [r7, #0]
 80123d4:	6878      	ldr	r0, [r7, #4]
 80123d6:	f000 f8a6 	bl	8012526 <_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_>
    }
 80123da:	bf00      	nop
 80123dc:	3708      	adds	r7, #8
 80123de:	46bd      	mov	sp, r7
 80123e0:	bd80      	pop	{r7, pc}

080123e2 <_ZNSaImED1Ev>:
 80123e2:	b580      	push	{r7, lr}
 80123e4:	b082      	sub	sp, #8
 80123e6:	af00      	add	r7, sp, #0
 80123e8:	6078      	str	r0, [r7, #4]
 80123ea:	6878      	ldr	r0, [r7, #4]
 80123ec:	f000 f8a6 	bl	801253c <_ZN9__gnu_cxx13new_allocatorImED1Ev>
 80123f0:	687b      	ldr	r3, [r7, #4]
 80123f2:	4618      	mov	r0, r3
 80123f4:	3708      	adds	r7, #8
 80123f6:	46bd      	mov	sp, r7
 80123f8:	bd80      	pop	{r7, pc}

080123fa <_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv>:
      _M_deallocate()
 80123fa:	b580      	push	{r7, lr}
 80123fc:	b084      	sub	sp, #16
 80123fe:	af00      	add	r7, sp, #0
 8012400:	6078      	str	r0, [r7, #4]
	if (_M_impl._M_start._M_p)
 8012402:	687b      	ldr	r3, [r7, #4]
 8012404:	681b      	ldr	r3, [r3, #0]
 8012406:	2b00      	cmp	r3, #0
 8012408:	d018      	beq.n	801243c <_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv+0x42>
	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
 801240a:	687b      	ldr	r3, [r7, #4]
 801240c:	4618      	mov	r0, r3
 801240e:	f000 f8a0 	bl	8012552 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv>
 8012412:	4602      	mov	r2, r0
 8012414:	687b      	ldr	r3, [r7, #4]
 8012416:	681b      	ldr	r3, [r3, #0]
 8012418:	1ad3      	subs	r3, r2, r3
 801241a:	109b      	asrs	r3, r3, #2
 801241c:	60fb      	str	r3, [r7, #12]
	    _Bit_alloc_traits::deallocate(_M_impl,
 801241e:	6878      	ldr	r0, [r7, #4]
					  _M_impl._M_end_of_storage - __n,
 8012420:	687b      	ldr	r3, [r7, #4]
 8012422:	691a      	ldr	r2, [r3, #16]
 8012424:	68fb      	ldr	r3, [r7, #12]
 8012426:	009b      	lsls	r3, r3, #2
 8012428:	425b      	negs	r3, r3
	    _Bit_alloc_traits::deallocate(_M_impl,
 801242a:	4413      	add	r3, r2
 801242c:	68fa      	ldr	r2, [r7, #12]
 801242e:	4619      	mov	r1, r3
 8012430:	f000 f8a5 	bl	801257e <_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj>
	    _M_impl._M_reset();
 8012434:	687b      	ldr	r3, [r7, #4]
 8012436:	4618      	mov	r0, r3
 8012438:	f000 f8b0 	bl	801259c <_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv>
      }
 801243c:	bf00      	nop
 801243e:	3710      	adds	r7, #16
 8012440:	46bd      	mov	sp, r7
 8012442:	bd80      	pop	{r7, pc}

08012444 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8012444:	b480      	push	{r7}
 8012446:	b083      	sub	sp, #12
 8012448:	af00      	add	r7, sp, #0
 801244a:	6078      	str	r0, [r7, #4]
 801244c:	687b      	ldr	r3, [r7, #4]
 801244e:	4618      	mov	r0, r3
 8012450:	370c      	adds	r7, #12
 8012452:	46bd      	mov	sp, r7
 8012454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012458:	4770      	bx	lr

0801245a <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 801245a:	b580      	push	{r7, lr}
 801245c:	b084      	sub	sp, #16
 801245e:	af00      	add	r7, sp, #0
 8012460:	60f8      	str	r0, [r7, #12]
 8012462:	60b9      	str	r1, [r7, #8]
 8012464:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8012466:	687a      	ldr	r2, [r7, #4]
 8012468:	68b9      	ldr	r1, [r7, #8]
 801246a:	68f8      	ldr	r0, [r7, #12]
 801246c:	f000 f8b6 	bl	80125dc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_j>
 8012470:	bf00      	nop
 8012472:	3710      	adds	r7, #16
 8012474:	46bd      	mov	sp, r7
 8012476:	bd80      	pop	{r7, pc}

08012478 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>:
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 8012478:	b580      	push	{r7, lr}
 801247a:	b082      	sub	sp, #8
 801247c:	af00      	add	r7, sp, #0
 801247e:	6078      	str	r0, [r7, #4]
 8012480:	6039      	str	r1, [r7, #0]
	  for (; __first != __last; ++__first)
 8012482:	687a      	ldr	r2, [r7, #4]
 8012484:	683b      	ldr	r3, [r7, #0]
 8012486:	429a      	cmp	r2, r3
 8012488:	d00a      	beq.n	80124a0 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x28>
	    std::_Destroy(std::__addressof(*__first));
 801248a:	6878      	ldr	r0, [r7, #4]
 801248c:	f7f3 ff63 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8012490:	4603      	mov	r3, r0
 8012492:	4618      	mov	r0, r3
 8012494:	f7f3 ff6a 	bl	800636c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	  for (; __first != __last; ++__first)
 8012498:	687b      	ldr	r3, [r7, #4]
 801249a:	3318      	adds	r3, #24
 801249c:	607b      	str	r3, [r7, #4]
 801249e:	e7f0      	b.n	8012482 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0xa>
	}
 80124a0:	bf00      	nop
 80124a2:	3708      	adds	r7, #8
 80124a4:	46bd      	mov	sp, r7
 80124a6:	bd80      	pop	{r7, pc}

080124a8 <_ZN9__gnu_cxx13new_allocatorIiED1Ev>:
 80124a8:	b480      	push	{r7}
 80124aa:	b083      	sub	sp, #12
 80124ac:	af00      	add	r7, sp, #0
 80124ae:	6078      	str	r0, [r7, #4]
 80124b0:	687b      	ldr	r3, [r7, #4]
 80124b2:	4618      	mov	r0, r3
 80124b4:	370c      	adds	r7, #12
 80124b6:	46bd      	mov	sp, r7
 80124b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80124bc:	4770      	bx	lr

080124be <_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pij>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80124be:	b580      	push	{r7, lr}
 80124c0:	b084      	sub	sp, #16
 80124c2:	af00      	add	r7, sp, #0
 80124c4:	60f8      	str	r0, [r7, #12]
 80124c6:	60b9      	str	r1, [r7, #8]
 80124c8:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80124ca:	687a      	ldr	r2, [r7, #4]
 80124cc:	68b9      	ldr	r1, [r7, #8]
 80124ce:	68f8      	ldr	r0, [r7, #12]
 80124d0:	f000 f890 	bl	80125f4 <_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPij>
 80124d4:	bf00      	nop
 80124d6:	3710      	adds	r7, #16
 80124d8:	46bd      	mov	sp, r7
 80124da:	bd80      	pop	{r7, pc}

080124dc <_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 80124dc:	b480      	push	{r7}
 80124de:	b083      	sub	sp, #12
 80124e0:	af00      	add	r7, sp, #0
 80124e2:	6078      	str	r0, [r7, #4]
 80124e4:	6039      	str	r1, [r7, #0]
 80124e6:	bf00      	nop
 80124e8:	370c      	adds	r7, #12
 80124ea:	46bd      	mov	sp, r7
 80124ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80124f0:	4770      	bx	lr

080124f2 <_ZN9__gnu_cxx13new_allocatorIfED1Ev>:
 80124f2:	b480      	push	{r7}
 80124f4:	b083      	sub	sp, #12
 80124f6:	af00      	add	r7, sp, #0
 80124f8:	6078      	str	r0, [r7, #4]
 80124fa:	687b      	ldr	r3, [r7, #4]
 80124fc:	4618      	mov	r0, r3
 80124fe:	370c      	adds	r7, #12
 8012500:	46bd      	mov	sp, r7
 8012502:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012506:	4770      	bx	lr

08012508 <_ZNSt16allocator_traitsISaIfEE10deallocateERS0_Pfj>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8012508:	b580      	push	{r7, lr}
 801250a:	b084      	sub	sp, #16
 801250c:	af00      	add	r7, sp, #0
 801250e:	60f8      	str	r0, [r7, #12]
 8012510:	60b9      	str	r1, [r7, #8]
 8012512:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8012514:	687a      	ldr	r2, [r7, #4]
 8012516:	68b9      	ldr	r1, [r7, #8]
 8012518:	68f8      	ldr	r0, [r7, #12]
 801251a:	f000 f877 	bl	801260c <_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfj>
 801251e:	bf00      	nop
 8012520:	3710      	adds	r7, #16
 8012522:	46bd      	mov	sp, r7
 8012524:	bd80      	pop	{r7, pc}

08012526 <_ZNSt12_Destroy_auxILb1EE9__destroyIPfEEvT_S3_>:
 8012526:	b480      	push	{r7}
 8012528:	b083      	sub	sp, #12
 801252a:	af00      	add	r7, sp, #0
 801252c:	6078      	str	r0, [r7, #4]
 801252e:	6039      	str	r1, [r7, #0]
 8012530:	bf00      	nop
 8012532:	370c      	adds	r7, #12
 8012534:	46bd      	mov	sp, r7
 8012536:	f85d 7b04 	ldr.w	r7, [sp], #4
 801253a:	4770      	bx	lr

0801253c <_ZN9__gnu_cxx13new_allocatorImED1Ev>:
 801253c:	b480      	push	{r7}
 801253e:	b083      	sub	sp, #12
 8012540:	af00      	add	r7, sp, #0
 8012542:	6078      	str	r0, [r7, #4]
 8012544:	687b      	ldr	r3, [r7, #4]
 8012546:	4618      	mov	r0, r3
 8012548:	370c      	adds	r7, #12
 801254a:	46bd      	mov	sp, r7
 801254c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012550:	4770      	bx	lr

08012552 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv>:
	_M_end_addr() const _GLIBCXX_NOEXCEPT
 8012552:	b580      	push	{r7, lr}
 8012554:	b082      	sub	sp, #8
 8012556:	af00      	add	r7, sp, #0
 8012558:	6078      	str	r0, [r7, #4]
	  if (this->_M_end_of_storage)
 801255a:	687b      	ldr	r3, [r7, #4]
 801255c:	691b      	ldr	r3, [r3, #16]
 801255e:	2b00      	cmp	r3, #0
 8012560:	d008      	beq.n	8012574 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv+0x22>
	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
 8012562:	687b      	ldr	r3, [r7, #4]
 8012564:	691b      	ldr	r3, [r3, #16]
 8012566:	3b04      	subs	r3, #4
 8012568:	4618      	mov	r0, r3
 801256a:	f000 f85b 	bl	8012624 <_ZSt11__addressofImEPT_RS0_>
 801256e:	4603      	mov	r3, r0
 8012570:	3304      	adds	r3, #4
 8012572:	e000      	b.n	8012576 <_ZNKSt13_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv+0x24>
	  return 0;
 8012574:	2300      	movs	r3, #0
	}
 8012576:	4618      	mov	r0, r3
 8012578:	3708      	adds	r7, #8
 801257a:	46bd      	mov	sp, r7
 801257c:	bd80      	pop	{r7, pc}

0801257e <_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 801257e:	b580      	push	{r7, lr}
 8012580:	b084      	sub	sp, #16
 8012582:	af00      	add	r7, sp, #0
 8012584:	60f8      	str	r0, [r7, #12]
 8012586:	60b9      	str	r1, [r7, #8]
 8012588:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 801258a:	687a      	ldr	r2, [r7, #4]
 801258c:	68b9      	ldr	r1, [r7, #8]
 801258e:	68f8      	ldr	r0, [r7, #12]
 8012590:	f000 f853 	bl	801263a <_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj>
 8012594:	bf00      	nop
 8012596:	3710      	adds	r7, #16
 8012598:	46bd      	mov	sp, r7
 801259a:	bd80      	pop	{r7, pc}

0801259c <_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv>:
	_M_reset() _GLIBCXX_NOEXCEPT
 801259c:	b580      	push	{r7, lr}
 801259e:	b084      	sub	sp, #16
 80125a0:	af00      	add	r7, sp, #0
 80125a2:	6078      	str	r0, [r7, #4]
	  _M_start = _M_finish = _Bit_iterator();
 80125a4:	f107 0308 	add.w	r3, r7, #8
 80125a8:	4618      	mov	r0, r3
 80125aa:	f7fd faf5 	bl	800fb98 <_ZNSt13_Bit_iteratorC1Ev>
 80125ae:	687b      	ldr	r3, [r7, #4]
 80125b0:	3308      	adds	r3, #8
 80125b2:	f107 0208 	add.w	r2, r7, #8
 80125b6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80125ba:	e883 0003 	stmia.w	r3, {r0, r1}
 80125be:	687b      	ldr	r3, [r7, #4]
 80125c0:	f103 0208 	add.w	r2, r3, #8
 80125c4:	687b      	ldr	r3, [r7, #4]
 80125c6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80125ca:	e883 0003 	stmia.w	r3, {r0, r1}
	  _M_end_of_storage = _Bit_pointer();
 80125ce:	687b      	ldr	r3, [r7, #4]
 80125d0:	2200      	movs	r2, #0
 80125d2:	611a      	str	r2, [r3, #16]
	}
 80125d4:	bf00      	nop
 80125d6:	3710      	adds	r7, #16
 80125d8:	46bd      	mov	sp, r7
 80125da:	bd80      	pop	{r7, pc}

080125dc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_j>:
      deallocate(pointer __p, size_type)
 80125dc:	b580      	push	{r7, lr}
 80125de:	b084      	sub	sp, #16
 80125e0:	af00      	add	r7, sp, #0
 80125e2:	60f8      	str	r0, [r7, #12]
 80125e4:	60b9      	str	r1, [r7, #8]
 80125e6:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 80125e8:	68b8      	ldr	r0, [r7, #8]
 80125ea:	f00d fdfa 	bl	80201e2 <_ZdlPv>
      }
 80125ee:	3710      	adds	r7, #16
 80125f0:	46bd      	mov	sp, r7
 80125f2:	bd80      	pop	{r7, pc}

080125f4 <_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPij>:
      deallocate(pointer __p, size_type)
 80125f4:	b580      	push	{r7, lr}
 80125f6:	b084      	sub	sp, #16
 80125f8:	af00      	add	r7, sp, #0
 80125fa:	60f8      	str	r0, [r7, #12]
 80125fc:	60b9      	str	r1, [r7, #8]
 80125fe:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8012600:	68b8      	ldr	r0, [r7, #8]
 8012602:	f00d fdee 	bl	80201e2 <_ZdlPv>
      }
 8012606:	3710      	adds	r7, #16
 8012608:	46bd      	mov	sp, r7
 801260a:	bd80      	pop	{r7, pc}

0801260c <_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfj>:
      deallocate(pointer __p, size_type)
 801260c:	b580      	push	{r7, lr}
 801260e:	b084      	sub	sp, #16
 8012610:	af00      	add	r7, sp, #0
 8012612:	60f8      	str	r0, [r7, #12]
 8012614:	60b9      	str	r1, [r7, #8]
 8012616:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8012618:	68b8      	ldr	r0, [r7, #8]
 801261a:	f00d fde2 	bl	80201e2 <_ZdlPv>
      }
 801261e:	3710      	adds	r7, #16
 8012620:	46bd      	mov	sp, r7
 8012622:	bd80      	pop	{r7, pc}

08012624 <_ZSt11__addressofImEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 8012624:	b480      	push	{r7}
 8012626:	b083      	sub	sp, #12
 8012628:	af00      	add	r7, sp, #0
 801262a:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801262c:	687b      	ldr	r3, [r7, #4]
 801262e:	4618      	mov	r0, r3
 8012630:	370c      	adds	r7, #12
 8012632:	46bd      	mov	sp, r7
 8012634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012638:	4770      	bx	lr

0801263a <_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj>:
      deallocate(pointer __p, size_type)
 801263a:	b580      	push	{r7, lr}
 801263c:	b084      	sub	sp, #16
 801263e:	af00      	add	r7, sp, #0
 8012640:	60f8      	str	r0, [r7, #12]
 8012642:	60b9      	str	r1, [r7, #8]
 8012644:	607a      	str	r2, [r7, #4]
	::operator delete(__p);
 8012646:	68b8      	ldr	r0, [r7, #8]
 8012648:	f00d fdcb 	bl	80201e2 <_ZdlPv>
      }
 801264c:	3710      	adds	r7, #16
 801264e:	46bd      	mov	sp, r7
 8012650:	bd80      	pop	{r7, pc}
	...

08012654 <_Z41__static_initialization_and_destruction_0ii>:
}

symbol_value& Variable_handler::get_local(std::string name)
{
	return local[name].value;
}
 8012654:	b590      	push	{r4, r7, lr}
 8012656:	b0e7      	sub	sp, #412	; 0x19c
 8012658:	af02      	add	r7, sp, #8
 801265a:	1d3b      	adds	r3, r7, #4
 801265c:	6018      	str	r0, [r3, #0]
 801265e:	463b      	mov	r3, r7
 8012660:	6019      	str	r1, [r3, #0]
 8012662:	1d3b      	adds	r3, r7, #4
 8012664:	681b      	ldr	r3, [r3, #0]
 8012666:	2b01      	cmp	r3, #1
 8012668:	f040 819d 	bne.w	80129a6 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801266c:	463b      	mov	r3, r7
 801266e:	681b      	ldr	r3, [r3, #0]
 8012670:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012674:	4293      	cmp	r3, r2
 8012676:	f040 8196 	bne.w	80129a6 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801267a:	f107 0314 	add.w	r3, r7, #20
 801267e:	4618      	mov	r0, r3
 8012680:	2322      	movs	r3, #34	; 0x22
 8012682:	461a      	mov	r2, r3
 8012684:	2100      	movs	r1, #0
 8012686:	f00f f941 	bl	802190c <memset>
 801268a:	f107 0314 	add.w	r3, r7, #20
 801268e:	223a      	movs	r2, #58	; 0x3a
 8012690:	701a      	strb	r2, [r3, #0]
 8012692:	f107 0314 	add.w	r3, r7, #20
 8012696:	2201      	movs	r2, #1
 8012698:	705a      	strb	r2, [r3, #1]
 801269a:	f107 0314 	add.w	r3, r7, #20
 801269e:	220a      	movs	r2, #10
 80126a0:	709a      	strb	r2, [r3, #2]
 80126a2:	f107 0314 	add.w	r3, r7, #20
 80126a6:	220a      	movs	r2, #10
 80126a8:	70da      	strb	r2, [r3, #3]
 80126aa:	f107 0314 	add.w	r3, r7, #20
 80126ae:	222c      	movs	r2, #44	; 0x2c
 80126b0:	711a      	strb	r2, [r3, #4]
 80126b2:	f107 0314 	add.w	r3, r7, #20
 80126b6:	220c      	movs	r2, #12
 80126b8:	715a      	strb	r2, [r3, #5]
 80126ba:	f107 0314 	add.w	r3, r7, #20
 80126be:	222e      	movs	r2, #46	; 0x2e
 80126c0:	719a      	strb	r2, [r3, #6]
 80126c2:	f107 0314 	add.w	r3, r7, #20
 80126c6:	220b      	movs	r2, #11
 80126c8:	71da      	strb	r2, [r3, #7]
 80126ca:	f107 0314 	add.w	r3, r7, #20
 80126ce:	225b      	movs	r2, #91	; 0x5b
 80126d0:	721a      	strb	r2, [r3, #8]
 80126d2:	f107 0314 	add.w	r3, r7, #20
 80126d6:	220d      	movs	r2, #13
 80126d8:	725a      	strb	r2, [r3, #9]
 80126da:	f107 0314 	add.w	r3, r7, #20
 80126de:	225d      	movs	r2, #93	; 0x5d
 80126e0:	729a      	strb	r2, [r3, #10]
 80126e2:	f107 0314 	add.w	r3, r7, #20
 80126e6:	220e      	movs	r2, #14
 80126e8:	72da      	strb	r2, [r3, #11]
 80126ea:	f107 0314 	add.w	r3, r7, #20
 80126ee:	227c      	movs	r2, #124	; 0x7c
 80126f0:	731a      	strb	r2, [r3, #12]
 80126f2:	f107 0314 	add.w	r3, r7, #20
 80126f6:	2215      	movs	r2, #21
 80126f8:	735a      	strb	r2, [r3, #13]
 80126fa:	f107 0314 	add.w	r3, r7, #20
 80126fe:	2226      	movs	r2, #38	; 0x26
 8012700:	739a      	strb	r2, [r3, #14]
 8012702:	f107 0314 	add.w	r3, r7, #20
 8012706:	2216      	movs	r2, #22
 8012708:	73da      	strb	r2, [r3, #15]
 801270a:	f107 0314 	add.w	r3, r7, #20
 801270e:	222b      	movs	r2, #43	; 0x2b
 8012710:	741a      	strb	r2, [r3, #16]
 8012712:	f107 0314 	add.w	r3, r7, #20
 8012716:	221f      	movs	r2, #31
 8012718:	745a      	strb	r2, [r3, #17]
 801271a:	f107 0314 	add.w	r3, r7, #20
 801271e:	222d      	movs	r2, #45	; 0x2d
 8012720:	749a      	strb	r2, [r3, #18]
 8012722:	f107 0314 	add.w	r3, r7, #20
 8012726:	2220      	movs	r2, #32
 8012728:	74da      	strb	r2, [r3, #19]
 801272a:	f107 0314 	add.w	r3, r7, #20
 801272e:	222a      	movs	r2, #42	; 0x2a
 8012730:	751a      	strb	r2, [r3, #20]
 8012732:	f107 0314 	add.w	r3, r7, #20
 8012736:	2221      	movs	r2, #33	; 0x21
 8012738:	755a      	strb	r2, [r3, #21]
 801273a:	f107 0314 	add.w	r3, r7, #20
 801273e:	222f      	movs	r2, #47	; 0x2f
 8012740:	759a      	strb	r2, [r3, #22]
 8012742:	f107 0314 	add.w	r3, r7, #20
 8012746:	2222      	movs	r2, #34	; 0x22
 8012748:	75da      	strb	r2, [r3, #23]
 801274a:	f107 0314 	add.w	r3, r7, #20
 801274e:	225e      	movs	r2, #94	; 0x5e
 8012750:	761a      	strb	r2, [r3, #24]
 8012752:	f107 0314 	add.w	r3, r7, #20
 8012756:	2223      	movs	r2, #35	; 0x23
 8012758:	765a      	strb	r2, [r3, #25]
 801275a:	f107 0314 	add.w	r3, r7, #20
 801275e:	2225      	movs	r2, #37	; 0x25
 8012760:	769a      	strb	r2, [r3, #26]
 8012762:	f107 0314 	add.w	r3, r7, #20
 8012766:	2224      	movs	r2, #36	; 0x24
 8012768:	76da      	strb	r2, [r3, #27]
 801276a:	f107 0314 	add.w	r3, r7, #20
 801276e:	2228      	movs	r2, #40	; 0x28
 8012770:	771a      	strb	r2, [r3, #28]
 8012772:	f107 0314 	add.w	r3, r7, #20
 8012776:	2226      	movs	r2, #38	; 0x26
 8012778:	775a      	strb	r2, [r3, #29]
 801277a:	f107 0314 	add.w	r3, r7, #20
 801277e:	2229      	movs	r2, #41	; 0x29
 8012780:	779a      	strb	r2, [r3, #30]
 8012782:	f107 0314 	add.w	r3, r7, #20
 8012786:	2227      	movs	r2, #39	; 0x27
 8012788:	77da      	strb	r2, [r3, #31]
 801278a:	f107 0314 	add.w	r3, r7, #20
 801278e:	2225      	movs	r2, #37	; 0x25
 8012790:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8012794:	f107 030c 	add.w	r3, r7, #12
 8012798:	f107 0214 	add.w	r2, r7, #20
 801279c:	601a      	str	r2, [r3, #0]
 801279e:	f107 030c 	add.w	r3, r7, #12
 80127a2:	2211      	movs	r2, #17
 80127a4:	605a      	str	r2, [r3, #4]
 80127a6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80127aa:	4618      	mov	r0, r3
 80127ac:	f7ee fd9a 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80127b0:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80127b4:	f107 020c 	add.w	r2, r7, #12
 80127b8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80127bc:	9300      	str	r3, [sp, #0]
 80127be:	460b      	mov	r3, r1
 80127c0:	ca06      	ldmia	r2, {r1, r2}
 80127c2:	4885      	ldr	r0, [pc, #532]	; (80129d8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80127c4:	f7ee fda6 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80127c8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80127cc:	4618      	mov	r0, r3
 80127ce:	f7ee fd95 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80127d2:	2305      	movs	r3, #5
 80127d4:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80127d8:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80127dc:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80127e0:	497e      	ldr	r1, [pc, #504]	; (80129dc <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80127e2:	4618      	mov	r0, r3
 80127e4:	f7ee fc82 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80127e8:	2306      	movs	r3, #6
 80127ea:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80127ee:	f207 1263 	addw	r2, r7, #355	; 0x163
 80127f2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80127f6:	331c      	adds	r3, #28
 80127f8:	4979      	ldr	r1, [pc, #484]	; (80129e0 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80127fa:	4618      	mov	r0, r3
 80127fc:	f7ee fc9e 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8012800:	2307      	movs	r3, #7
 8012802:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8012806:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801280a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801280e:	3338      	adds	r3, #56	; 0x38
 8012810:	4974      	ldr	r1, [pc, #464]	; (80129e4 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8012812:	4618      	mov	r0, r3
 8012814:	f7ee fc92 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8012818:	2308      	movs	r3, #8
 801281a:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801281e:	f207 1265 	addw	r2, r7, #357	; 0x165
 8012822:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012826:	3354      	adds	r3, #84	; 0x54
 8012828:	496f      	ldr	r1, [pc, #444]	; (80129e8 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801282a:	4618      	mov	r0, r3
 801282c:	f7ee fc5e 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8012830:	2309      	movs	r3, #9
 8012832:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8012836:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801283a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801283e:	3370      	adds	r3, #112	; 0x70
 8012840:	496a      	ldr	r1, [pc, #424]	; (80129ec <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8012842:	4618      	mov	r0, r3
 8012844:	f7ee fca2 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8012848:	2310      	movs	r3, #16
 801284a:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801284e:	f207 1267 	addw	r2, r7, #359	; 0x167
 8012852:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012856:	338c      	adds	r3, #140	; 0x8c
 8012858:	4965      	ldr	r1, [pc, #404]	; (80129f0 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801285a:	4618      	mov	r0, r3
 801285c:	f7ee fcbe 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8012860:	2311      	movs	r3, #17
 8012862:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8012866:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801286a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801286e:	33a8      	adds	r3, #168	; 0xa8
 8012870:	4960      	ldr	r1, [pc, #384]	; (80129f4 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8012872:	4618      	mov	r0, r3
 8012874:	f7ee fc8a 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8012878:	2312      	movs	r3, #18
 801287a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801287e:	f207 1269 	addw	r2, r7, #361	; 0x169
 8012882:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8012886:	33c4      	adds	r3, #196	; 0xc4
 8012888:	495b      	ldr	r1, [pc, #364]	; (80129f8 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801288a:	4618      	mov	r0, r3
 801288c:	f7ee fc2e 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8012890:	2313      	movs	r3, #19
 8012892:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 8012896:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801289a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801289e:	33e0      	adds	r3, #224	; 0xe0
 80128a0:	4956      	ldr	r1, [pc, #344]	; (80129fc <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80128a2:	4618      	mov	r0, r3
 80128a4:	f7ee fc4a 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80128a8:	2314      	movs	r3, #20
 80128aa:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80128ae:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80128b2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80128b6:	33fc      	adds	r3, #252	; 0xfc
 80128b8:	4951      	ldr	r1, [pc, #324]	; (8012a00 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80128ba:	4618      	mov	r0, r3
 80128bc:	f7ee fcb6 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80128c0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80128c4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80128c8:	601a      	str	r2, [r3, #0]
 80128ca:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80128ce:	220a      	movs	r2, #10
 80128d0:	605a      	str	r2, [r3, #4]
 80128d2:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80128d6:	4618      	mov	r0, r3
 80128d8:	f7ee fda9 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80128dc:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80128e0:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80128e4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80128e8:	9300      	str	r3, [sp, #0]
 80128ea:	460b      	mov	r3, r1
 80128ec:	ca06      	ldmia	r2, {r1, r2}
 80128ee:	4845      	ldr	r0, [pc, #276]	; (8012a04 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80128f0:	f7ee fdb5 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80128f4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80128f8:	4618      	mov	r0, r3
 80128fa:	f7ee fda4 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80128fe:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8012902:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8012906:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801290a:	429c      	cmp	r4, r3
 801290c:	d004      	beq.n	8012918 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801290e:	3c1c      	subs	r4, #28
 8012910:	4620      	mov	r0, r4
 8012912:	f7ee fbde 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8012916:	e7f6      	b.n	8012906 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8012918:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801291c:	2200      	movs	r2, #0
 801291e:	601a      	str	r2, [r3, #0]
 8012920:	605a      	str	r2, [r3, #4]
 8012922:	609a      	str	r2, [r3, #8]
 8012924:	233c      	movs	r3, #60	; 0x3c
 8012926:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801292a:	231b      	movs	r3, #27
 801292c:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8012930:	231c      	movs	r3, #28
 8012932:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8012936:	233e      	movs	r3, #62	; 0x3e
 8012938:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801293c:	2319      	movs	r3, #25
 801293e:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8012942:	231a      	movs	r3, #26
 8012944:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8012948:	233d      	movs	r3, #61	; 0x3d
 801294a:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801294e:	2318      	movs	r3, #24
 8012950:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8012954:	231d      	movs	r3, #29
 8012956:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801295a:	2321      	movs	r3, #33	; 0x21
 801295c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8012960:	2317      	movs	r3, #23
 8012962:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8012966:	231e      	movs	r3, #30
 8012968:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801296c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8012970:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8012974:	2304      	movs	r3, #4
 8012976:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801297a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801297e:	4618      	mov	r0, r3
 8012980:	f7ee fd9d 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8012984:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8012988:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801298c:	9300      	str	r3, [sp, #0]
 801298e:	4613      	mov	r3, r2
 8012990:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8012994:	ca06      	ldmia	r2, {r1, r2}
 8012996:	481c      	ldr	r0, [pc, #112]	; (8012a08 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8012998:	f7ee fda9 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801299c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80129a0:	4618      	mov	r0, r3
 80129a2:	f7ee fd98 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80129a6:	1d3b      	adds	r3, r7, #4
 80129a8:	681b      	ldr	r3, [r3, #0]
 80129aa:	2b00      	cmp	r3, #0
 80129ac:	d10e      	bne.n	80129cc <_Z41__static_initialization_and_destruction_0ii+0x378>
 80129ae:	463b      	mov	r3, r7
 80129b0:	681b      	ldr	r3, [r3, #0]
 80129b2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80129b6:	4293      	cmp	r3, r2
 80129b8:	d108      	bne.n	80129cc <_Z41__static_initialization_and_destruction_0ii+0x378>
 80129ba:	4813      	ldr	r0, [pc, #76]	; (8012a08 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80129bc:	f7f1 f9f0 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80129c0:	4810      	ldr	r0, [pc, #64]	; (8012a04 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80129c2:	f7f1 f9fa 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80129c6:	4804      	ldr	r0, [pc, #16]	; (80129d8 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80129c8:	f7f1 fa04 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80129cc:	bf00      	nop
 80129ce:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80129d2:	46bd      	mov	sp, r7
 80129d4:	bd90      	pop	{r4, r7, pc}
 80129d6:	bf00      	nop
 80129d8:	20000454 	.word	0x20000454
 80129dc:	08024eb8 	.word	0x08024eb8
 80129e0:	08024ec0 	.word	0x08024ec0
 80129e4:	08024ec8 	.word	0x08024ec8
 80129e8:	08024ed0 	.word	0x08024ed0
 80129ec:	08024ed8 	.word	0x08024ed8
 80129f0:	08024ee0 	.word	0x08024ee0
 80129f4:	08024ee4 	.word	0x08024ee4
 80129f8:	08024eec 	.word	0x08024eec
 80129fc:	08024ef4 	.word	0x08024ef4
 8012a00:	08024efc 	.word	0x08024efc
 8012a04:	2000046c 	.word	0x2000046c
 8012a08:	20000484 	.word	0x20000484

08012a0c <_GLOBAL__sub_I__ZN16Variable_handler12get_instanceEv>:
 8012a0c:	b580      	push	{r7, lr}
 8012a0e:	af00      	add	r7, sp, #0
 8012a10:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012a14:	2001      	movs	r0, #1
 8012a16:	f7ff fe1d 	bl	8012654 <_Z41__static_initialization_and_destruction_0ii>
 8012a1a:	bd80      	pop	{r7, pc}

08012a1c <_GLOBAL__sub_D__ZN16Variable_handler12get_instanceEv>:
 8012a1c:	b580      	push	{r7, lr}
 8012a1e:	af00      	add	r7, sp, #0
 8012a20:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012a24:	2000      	movs	r0, #0
 8012a26:	f7ff fe15 	bl	8012654 <_Z41__static_initialization_and_destruction_0ii>
 8012a2a:	bd80      	pop	{r7, pc}

08012a2c <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
#include "Parser.h"

void Parser::parse_variable_or_function_call(Primal_expression *exp)
{
 8012a2c:	b580      	push	{r7, lr}
 8012a2e:	b08a      	sub	sp, #40	; 0x28
 8012a30:	af00      	add	r7, sp, #0
 8012a32:	6078      	str	r0, [r7, #4]
 8012a34:	6039      	str	r1, [r7, #0]
	std::string id(std::get<std::string>(token_buffer.value));
 8012a36:	687b      	ldr	r3, [r7, #4]
 8012a38:	3304      	adds	r3, #4
 8012a3a:	4618      	mov	r0, r3
 8012a3c:	f7f9 fc9a 	bl	800c374 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8012a40:	4602      	mov	r2, r0
 8012a42:	f107 0308 	add.w	r3, r7, #8
 8012a46:	4611      	mov	r1, r2
 8012a48:	4618      	mov	r0, r3
 8012a4a:	f00d fee1 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
	get_next_token();
 8012a4e:	6878      	ldr	r0, [r7, #4]
 8012a50:	f7f9 facb 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	if (token_buffer.type == TOKEN_LEFT_BRACKET)
 8012a54:	687b      	ldr	r3, [r7, #4]
 8012a56:	781b      	ldrb	r3, [r3, #0]
 8012a58:	2b26      	cmp	r3, #38	; 0x26
 8012a5a:	d113      	bne.n	8012a84 <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x58>
	{
		exp->type = PRIMAL_FUNCTION_CALL;
 8012a5c:	683b      	ldr	r3, [r7, #0]
 8012a5e:	2205      	movs	r2, #5
 8012a60:	701a      	strb	r2, [r3, #0]
		exp->content = parse_function_call(id);
 8012a62:	f107 0308 	add.w	r3, r7, #8
 8012a66:	4619      	mov	r1, r3
 8012a68:	6878      	ldr	r0, [r7, #4]
 8012a6a:	f7f9 f81f 	bl	800baac <_ZN6Parser19parse_function_callERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012a6e:	4603      	mov	r3, r0
 8012a70:	623b      	str	r3, [r7, #32]
 8012a72:	683b      	ldr	r3, [r7, #0]
 8012a74:	3304      	adds	r3, #4
 8012a76:	f107 0220 	add.w	r2, r7, #32
 8012a7a:	4611      	mov	r1, r2
 8012a7c:	4618      	mov	r0, r3
 8012a7e:	f000 fcc2 	bl	8013406 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8012a82:	e012      	b.n	8012aaa <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression+0x7e>
	}
	else
	{
		exp->type = PRIMAL_VARIABLE;
 8012a84:	683b      	ldr	r3, [r7, #0]
 8012a86:	2204      	movs	r2, #4
 8012a88:	701a      	strb	r2, [r3, #0]
		exp->content = parse_variable(id);
 8012a8a:	f107 0308 	add.w	r3, r7, #8
 8012a8e:	4619      	mov	r1, r3
 8012a90:	6878      	ldr	r0, [r7, #4]
 8012a92:	f7f8 ff03 	bl	800b89c <_ZN6Parser14parse_variableERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012a96:	4603      	mov	r3, r0
 8012a98:	627b      	str	r3, [r7, #36]	; 0x24
 8012a9a:	683b      	ldr	r3, [r7, #0]
 8012a9c:	3304      	adds	r3, #4
 8012a9e:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8012aa2:	4611      	mov	r1, r2
 8012aa4:	4618      	mov	r0, r3
 8012aa6:	f000 fcd8 	bl	801345a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
	std::string id(std::get<std::string>(token_buffer.value));
 8012aaa:	f107 0308 	add.w	r3, r7, #8
 8012aae:	4618      	mov	r0, r3
 8012ab0:	f00d fd81 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8012ab4:	bf00      	nop
 8012ab6:	3728      	adds	r7, #40	; 0x28
 8012ab8:	46bd      	mov	sp, r7
 8012aba:	bd80      	pop	{r7, pc}

08012abc <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      variant() = default;
 8012abc:	b580      	push	{r7, lr}
 8012abe:	b082      	sub	sp, #8
 8012ac0:	af00      	add	r7, sp, #0
 8012ac2:	6078      	str	r0, [r7, #4]
 8012ac4:	687b      	ldr	r3, [r7, #4]
 8012ac6:	4618      	mov	r0, r3
 8012ac8:	f000 fd3c 	bl	8013544 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 8012acc:	687b      	ldr	r3, [r7, #4]
 8012ace:	4618      	mov	r0, r3
 8012ad0:	3708      	adds	r7, #8
 8012ad2:	46bd      	mov	sp, r7
 8012ad4:	bd80      	pop	{r7, pc}

08012ad6 <_ZN17Primal_expressionC1Ev>:
	PRIMAL_STRING,
	PRIMAL_VARIABLE,
	PRIMAL_FUNCTION_CALL
}primal_type;

class Primal_expression
 8012ad6:	b580      	push	{r7, lr}
 8012ad8:	b082      	sub	sp, #8
 8012ada:	af00      	add	r7, sp, #0
 8012adc:	6078      	str	r0, [r7, #4]
 8012ade:	687b      	ldr	r3, [r7, #4]
 8012ae0:	3304      	adds	r3, #4
 8012ae2:	4618      	mov	r0, r3
 8012ae4:	f7ff ffea 	bl	8012abc <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>
 8012ae8:	687b      	ldr	r3, [r7, #4]
 8012aea:	4618      	mov	r0, r3
 8012aec:	3708      	adds	r7, #8
 8012aee:	46bd      	mov	sp, r7
 8012af0:	bd80      	pop	{r7, pc}
	...

08012af4 <_ZN6Parser23parse_primal_expressionEv>:

Primal_expression* Parser::parse_primal_expression()
{
 8012af4:	b590      	push	{r4, r7, lr}
 8012af6:	b093      	sub	sp, #76	; 0x4c
 8012af8:	af00      	add	r7, sp, #0
 8012afa:	6078      	str	r0, [r7, #4]
	auto exp = new Primal_expression();
 8012afc:	2020      	movs	r0, #32
 8012afe:	f00d fb83 	bl	8020208 <_Znwj>
 8012b02:	4603      	mov	r3, r0
 8012b04:	461c      	mov	r4, r3
 8012b06:	4620      	mov	r0, r4
 8012b08:	2320      	movs	r3, #32
 8012b0a:	461a      	mov	r2, r3
 8012b0c:	2100      	movs	r1, #0
 8012b0e:	f00e fefd 	bl	802190c <memset>
 8012b12:	4620      	mov	r0, r4
 8012b14:	f7ff ffdf 	bl	8012ad6 <_ZN17Primal_expressionC1Ev>
 8012b18:	647c      	str	r4, [r7, #68]	; 0x44
	switch(token_buffer.type)
 8012b1a:	687b      	ldr	r3, [r7, #4]
 8012b1c:	781b      	ldrb	r3, [r3, #0]
 8012b1e:	3b02      	subs	r3, #2
 8012b20:	2b0d      	cmp	r3, #13
 8012b22:	f200 808b 	bhi.w	8012c3c <_ZN6Parser23parse_primal_expressionEv+0x148>
 8012b26:	a201      	add	r2, pc, #4	; (adr r2, 8012b2c <_ZN6Parser23parse_primal_expressionEv+0x38>)
 8012b28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8012b2c:	08012c33 	.word	0x08012c33
 8012b30:	08012ba7 	.word	0x08012ba7
 8012b34:	08012bcd 	.word	0x08012bcd
 8012b38:	08012b65 	.word	0x08012b65
 8012b3c:	08012b87 	.word	0x08012b87
 8012b40:	08012c3d 	.word	0x08012c3d
 8012b44:	08012c3d 	.word	0x08012c3d
 8012b48:	08012c3d 	.word	0x08012c3d
 8012b4c:	08012c3d 	.word	0x08012c3d
 8012b50:	08012c3d 	.word	0x08012c3d
 8012b54:	08012c3d 	.word	0x08012c3d
 8012b58:	08012c3d 	.word	0x08012c3d
 8012b5c:	08012c3d 	.word	0x08012c3d
 8012b60:	08012bf3 	.word	0x08012bf3
	{
	case TOKEN_TRUE:
		exp->type = PRIMAL_BOOL;
 8012b64:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012b66:	2200      	movs	r2, #0
 8012b68:	701a      	strb	r2, [r3, #0]
		exp->content = true;
 8012b6a:	2301      	movs	r3, #1
 8012b6c:	73bb      	strb	r3, [r7, #14]
 8012b6e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012b70:	3304      	adds	r3, #4
 8012b72:	f107 020e 	add.w	r2, r7, #14
 8012b76:	4611      	mov	r1, r2
 8012b78:	4618      	mov	r0, r3
 8012b7a:	f000 fcf0 	bl	801355e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 8012b7e:	6878      	ldr	r0, [r7, #4]
 8012b80:	f7f9 fa33 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		break;
 8012b84:	e078      	b.n	8012c78 <_ZN6Parser23parse_primal_expressionEv+0x184>
	case TOKEN_FALSE:
		exp->type = PRIMAL_BOOL;
 8012b86:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012b88:	2200      	movs	r2, #0
 8012b8a:	701a      	strb	r2, [r3, #0]
		exp->content = false;
 8012b8c:	2300      	movs	r3, #0
 8012b8e:	73fb      	strb	r3, [r7, #15]
 8012b90:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012b92:	3304      	adds	r3, #4
 8012b94:	f107 020f 	add.w	r2, r7, #15
 8012b98:	4611      	mov	r1, r2
 8012b9a:	4618      	mov	r0, r3
 8012b9c:	f000 fcdf 	bl	801355e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
		get_next_token();
 8012ba0:	6878      	ldr	r0, [r7, #4]
 8012ba2:	f7f9 fa22 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	case TOKEN_INT:
		exp->type = PRIMAL_INT;
 8012ba6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012ba8:	2201      	movs	r2, #1
 8012baa:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<int>(token_buffer.value);
 8012bac:	687b      	ldr	r3, [r7, #4]
 8012bae:	3304      	adds	r3, #4
 8012bb0:	4618      	mov	r0, r3
 8012bb2:	f7f4 f92a 	bl	8006e0a <_ZSt3getIiJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 8012bb6:	4602      	mov	r2, r0
 8012bb8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012bba:	3304      	adds	r3, #4
 8012bbc:	4611      	mov	r1, r2
 8012bbe:	4618      	mov	r0, r3
 8012bc0:	f000 fcf8 	bl	80135b4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 8012bc4:	6878      	ldr	r0, [r7, #4]
 8012bc6:	f7f9 fa10 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		break;
 8012bca:	e055      	b.n	8012c78 <_ZN6Parser23parse_primal_expressionEv+0x184>
	case TOKEN_FLOAT:
		exp->type = PRIMAL_FLOAT;
 8012bcc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012bce:	2202      	movs	r2, #2
 8012bd0:	701a      	strb	r2, [r3, #0]
		exp->content = std::get<float>(token_buffer.value);
 8012bd2:	687b      	ldr	r3, [r7, #4]
 8012bd4:	3304      	adds	r3, #4
 8012bd6:	4618      	mov	r0, r3
 8012bd8:	f000 fd16 	bl	8013608 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>
 8012bdc:	4602      	mov	r2, r0
 8012bde:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012be0:	3304      	adds	r3, #4
 8012be2:	4611      	mov	r1, r2
 8012be4:	4618      	mov	r0, r3
 8012be6:	f000 fd1b 	bl	8013620 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>
		get_next_token();
 8012bea:	6878      	ldr	r0, [r7, #4]
 8012bec:	f7f9 f9fd 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		break;
 8012bf0:	e042      	b.n	8012c78 <_ZN6Parser23parse_primal_expressionEv+0x184>
	case TOKEN_STRING:
		exp->type = PRIMAL_STRING;
 8012bf2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012bf4:	2203      	movs	r2, #3
 8012bf6:	701a      	strb	r2, [r3, #0]
		exp->content = std::string(std::get<std::string>(token_buffer.value));
 8012bf8:	687b      	ldr	r3, [r7, #4]
 8012bfa:	3304      	adds	r3, #4
 8012bfc:	4618      	mov	r0, r3
 8012bfe:	f7f9 fbb9 	bl	800c374 <_ZSt3getINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_ifbEERT_RSt7variantIJDpT0_EE>
 8012c02:	4602      	mov	r2, r0
 8012c04:	f107 0310 	add.w	r3, r7, #16
 8012c08:	4611      	mov	r1, r2
 8012c0a:	4618      	mov	r0, r3
 8012c0c:	f00d fe00 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8012c10:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8012c12:	3304      	adds	r3, #4
 8012c14:	f107 0210 	add.w	r2, r7, #16
 8012c18:	4611      	mov	r1, r2
 8012c1a:	4618      	mov	r0, r3
 8012c1c:	f000 fd2a 	bl	8013674 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>
 8012c20:	f107 0310 	add.w	r3, r7, #16
 8012c24:	4618      	mov	r0, r3
 8012c26:	f00d fcc6 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		get_next_token();
 8012c2a:	6878      	ldr	r0, [r7, #4]
 8012c2c:	f7f9 f9dd 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		break;
 8012c30:	e022      	b.n	8012c78 <_ZN6Parser23parse_primal_expressionEv+0x184>
	case TOKEN_IDENTIFIER:
		parse_variable_or_function_call(exp);
 8012c32:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8012c34:	6878      	ldr	r0, [r7, #4]
 8012c36:	f7ff fef9 	bl	8012a2c <_ZN6Parser31parse_variable_or_function_callEP17Primal_expression>
		break;
 8012c3a:	e01d      	b.n	8012c78 <_ZN6Parser23parse_primal_expressionEv+0x184>
	default:
		report_error("expression");
 8012c3c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012c40:	4618      	mov	r0, r3
 8012c42:	f00d faf2 	bl	802022a <_ZNSaIcEC1Ev>
 8012c46:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8012c4a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012c4e:	490d      	ldr	r1, [pc, #52]	; (8012c84 <_ZN6Parser23parse_primal_expressionEv+0x190>)
 8012c50:	4618      	mov	r0, r3
 8012c52:	f7ee fb9a 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012c56:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012c5a:	4619      	mov	r1, r3
 8012c5c:	6878      	ldr	r0, [r7, #4]
 8012c5e:	f7f8 fe83 	bl	800b968 <_ZN6Parser12report_errorENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012c62:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8012c66:	4618      	mov	r0, r3
 8012c68:	f00d fca5 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8012c6c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8012c70:	4618      	mov	r0, r3
 8012c72:	f00d fadb 	bl	802022c <_ZNSaIcED1Ev>
		break;
 8012c76:	bf00      	nop
	}
	return exp;
 8012c78:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 8012c7a:	4618      	mov	r0, r3
 8012c7c:	374c      	adds	r7, #76	; 0x4c
 8012c7e:	46bd      	mov	sp, r7
 8012c80:	bd90      	pop	{r4, r7, pc}
 8012c82:	bf00      	nop
 8012c84:	08024f00 	.word	0x08024f00

08012c88 <_ZN6Parser23parse_nested_expressionEv>:

Expression* Parser::parse_nested_expression()
{
 8012c88:	b580      	push	{r7, lr}
 8012c8a:	b08a      	sub	sp, #40	; 0x28
 8012c8c:	af00      	add	r7, sp, #0
 8012c8e:	6078      	str	r0, [r7, #4]
	auto exp = parse_expression();
 8012c90:	6878      	ldr	r0, [r7, #4]
 8012c92:	f000 fb73 	bl	801337c <_ZN6Parser16parse_expressionEv>
 8012c96:	6278      	str	r0, [r7, #36]	; 0x24
	assert_token(TOKEN_RIGHT_BRACKET, "closing bracket");
 8012c98:	f107 0320 	add.w	r3, r7, #32
 8012c9c:	4618      	mov	r0, r3
 8012c9e:	f00d fac4 	bl	802022a <_ZNSaIcEC1Ev>
 8012ca2:	f107 0220 	add.w	r2, r7, #32
 8012ca6:	f107 0308 	add.w	r3, r7, #8
 8012caa:	490e      	ldr	r1, [pc, #56]	; (8012ce4 <_ZN6Parser23parse_nested_expressionEv+0x5c>)
 8012cac:	4618      	mov	r0, r3
 8012cae:	f7ee fb6c 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8012cb2:	f107 0308 	add.w	r3, r7, #8
 8012cb6:	461a      	mov	r2, r3
 8012cb8:	2127      	movs	r1, #39	; 0x27
 8012cba:	6878      	ldr	r0, [r7, #4]
 8012cbc:	f7f8 fe72 	bl	800b9a4 <_ZN6Parser12assert_tokenE10token_typeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8012cc0:	f107 0308 	add.w	r3, r7, #8
 8012cc4:	4618      	mov	r0, r3
 8012cc6:	f00d fc76 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8012cca:	f107 0320 	add.w	r3, r7, #32
 8012cce:	4618      	mov	r0, r3
 8012cd0:	f00d faac 	bl	802022c <_ZNSaIcED1Ev>
	get_next_token();
 8012cd4:	6878      	ldr	r0, [r7, #4]
 8012cd6:	f7f9 f988 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	return exp;
 8012cda:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 8012cdc:	4618      	mov	r0, r3
 8012cde:	3728      	adds	r7, #40	; 0x28
 8012ce0:	46bd      	mov	sp, r7
 8012ce2:	bd80      	pop	{r7, pc}
 8012ce4:	08024f0c 	.word	0x08024f0c

08012ce8 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>:
 8012ce8:	b580      	push	{r7, lr}
 8012cea:	b082      	sub	sp, #8
 8012cec:	af00      	add	r7, sp, #0
 8012cee:	6078      	str	r0, [r7, #4]
 8012cf0:	687b      	ldr	r3, [r7, #4]
 8012cf2:	4618      	mov	r0, r3
 8012cf4:	f000 fd35 	bl	8013762 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>
 8012cf8:	687b      	ldr	r3, [r7, #4]
 8012cfa:	4618      	mov	r0, r3
 8012cfc:	3708      	adds	r7, #8
 8012cfe:	46bd      	mov	sp, r7
 8012d00:	bd80      	pop	{r7, pc}

08012d02 <_ZN19Priority_expressionC1Ev>:
	std::variant<bool, int, float, std::string, Variable*, Function_call*> content;
};

class Expression;

class Priority_expression
 8012d02:	b580      	push	{r7, lr}
 8012d04:	b082      	sub	sp, #8
 8012d06:	af00      	add	r7, sp, #0
 8012d08:	6078      	str	r0, [r7, #4]
 8012d0a:	687b      	ldr	r3, [r7, #4]
 8012d0c:	4618      	mov	r0, r3
 8012d0e:	f7ff ffeb 	bl	8012ce8 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEC1Ev>
 8012d12:	687b      	ldr	r3, [r7, #4]
 8012d14:	4618      	mov	r0, r3
 8012d16:	3708      	adds	r7, #8
 8012d18:	46bd      	mov	sp, r7
 8012d1a:	bd80      	pop	{r7, pc}

08012d1c <_ZN6Parser25parse_priority_expressionEv>:

Priority_expression* Parser::parse_priority_expression()
{
 8012d1c:	b590      	push	{r4, r7, lr}
 8012d1e:	b087      	sub	sp, #28
 8012d20:	af00      	add	r7, sp, #0
 8012d22:	6078      	str	r0, [r7, #4]
	auto exp = new Priority_expression();
 8012d24:	2008      	movs	r0, #8
 8012d26:	f00d fa6f 	bl	8020208 <_Znwj>
 8012d2a:	4603      	mov	r3, r0
 8012d2c:	461c      	mov	r4, r3
 8012d2e:	2300      	movs	r3, #0
 8012d30:	6023      	str	r3, [r4, #0]
 8012d32:	2300      	movs	r3, #0
 8012d34:	7123      	strb	r3, [r4, #4]
 8012d36:	4620      	mov	r0, r4
 8012d38:	f7ff ffe3 	bl	8012d02 <_ZN19Priority_expressionC1Ev>
 8012d3c:	617c      	str	r4, [r7, #20]
	if(token_buffer.type == TOKEN_LEFT_BRACKET)
 8012d3e:	687b      	ldr	r3, [r7, #4]
 8012d40:	781b      	ldrb	r3, [r3, #0]
 8012d42:	2b26      	cmp	r3, #38	; 0x26
 8012d44:	d10f      	bne.n	8012d66 <_ZN6Parser25parse_priority_expressionEv+0x4a>
	{
		get_next_token();
 8012d46:	6878      	ldr	r0, [r7, #4]
 8012d48:	f7f9 f94f 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		exp->exp = parse_nested_expression();
 8012d4c:	6878      	ldr	r0, [r7, #4]
 8012d4e:	f7ff ff9b 	bl	8012c88 <_ZN6Parser23parse_nested_expressionEv>
 8012d52:	4603      	mov	r3, r0
 8012d54:	60fb      	str	r3, [r7, #12]
 8012d56:	697b      	ldr	r3, [r7, #20]
 8012d58:	f107 020c 	add.w	r2, r7, #12
 8012d5c:	4611      	mov	r1, r2
 8012d5e:	4618      	mov	r0, r3
 8012d60:	f000 fd0c 	bl	801377c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
 8012d64:	e00b      	b.n	8012d7e <_ZN6Parser25parse_priority_expressionEv+0x62>
	}
	else
	{
		exp->exp = parse_primal_expression();
 8012d66:	6878      	ldr	r0, [r7, #4]
 8012d68:	f7ff fec4 	bl	8012af4 <_ZN6Parser23parse_primal_expressionEv>
 8012d6c:	4603      	mov	r3, r0
 8012d6e:	613b      	str	r3, [r7, #16]
 8012d70:	697b      	ldr	r3, [r7, #20]
 8012d72:	f107 0210 	add.w	r2, r7, #16
 8012d76:	4611      	mov	r1, r2
 8012d78:	4618      	mov	r0, r3
 8012d7a:	f000 fd29 	bl	80137d0 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>
	}
	return exp;
 8012d7e:	697b      	ldr	r3, [r7, #20]
}
 8012d80:	4618      	mov	r0, r3
 8012d82:	371c      	adds	r7, #28
 8012d84:	46bd      	mov	sp, r7
 8012d86:	bd90      	pop	{r4, r7, pc}

08012d88 <_ZN6Parser20match_unary_operatorEP16Unary_expression>:

bool Parser::match_unary_operator(Unary_expression* exp)
{
 8012d88:	b480      	push	{r7}
 8012d8a:	b083      	sub	sp, #12
 8012d8c:	af00      	add	r7, sp, #0
 8012d8e:	6078      	str	r0, [r7, #4]
 8012d90:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 8012d92:	687b      	ldr	r3, [r7, #4]
 8012d94:	781b      	ldrb	r3, [r3, #0]
 8012d96:	2b17      	cmp	r3, #23
 8012d98:	d005      	beq.n	8012da6 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x1e>
 8012d9a:	2b20      	cmp	r3, #32
 8012d9c:	d107      	bne.n	8012dae <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x26>
	{
	case TOKEN_MINUS:
		exp->op = UN_OP_MINUS;
 8012d9e:	683b      	ldr	r3, [r7, #0]
 8012da0:	2201      	movs	r2, #1
 8012da2:	711a      	strb	r2, [r3, #4]
		break;
 8012da4:	e005      	b.n	8012db2 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	case TOKEN_EXCLAMATION:
		exp->op = UN_OP_EXCLAMATION;
 8012da6:	683b      	ldr	r3, [r7, #0]
 8012da8:	2202      	movs	r2, #2
 8012daa:	711a      	strb	r2, [r3, #4]
		break;
 8012dac:	e001      	b.n	8012db2 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2a>
	default:
		return false;
 8012dae:	2300      	movs	r3, #0
 8012db0:	e000      	b.n	8012db4 <_ZN6Parser20match_unary_operatorEP16Unary_expression+0x2c>
	}
	return true;
 8012db2:	2301      	movs	r3, #1
}
 8012db4:	4618      	mov	r0, r3
 8012db6:	370c      	adds	r7, #12
 8012db8:	46bd      	mov	sp, r7
 8012dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012dbe:	4770      	bx	lr

08012dc0 <_ZN6Parser22parse_unary_expressionEv>:

Unary_expression* Parser::parse_unary_expression()
{
 8012dc0:	b580      	push	{r7, lr}
 8012dc2:	b084      	sub	sp, #16
 8012dc4:	af00      	add	r7, sp, #0
 8012dc6:	6078      	str	r0, [r7, #4]
	auto exp = new Unary_expression();
 8012dc8:	2008      	movs	r0, #8
 8012dca:	f00d fa1d 	bl	8020208 <_Znwj>
 8012dce:	4603      	mov	r3, r0
 8012dd0:	2200      	movs	r2, #0
 8012dd2:	601a      	str	r2, [r3, #0]
 8012dd4:	2200      	movs	r2, #0
 8012dd6:	711a      	strb	r2, [r3, #4]
 8012dd8:	60fb      	str	r3, [r7, #12]
	if(match_unary_operator(exp))
 8012dda:	68f9      	ldr	r1, [r7, #12]
 8012ddc:	6878      	ldr	r0, [r7, #4]
 8012dde:	f7ff ffd3 	bl	8012d88 <_ZN6Parser20match_unary_operatorEP16Unary_expression>
 8012de2:	4603      	mov	r3, r0
 8012de4:	2b00      	cmp	r3, #0
 8012de6:	d002      	beq.n	8012dee <_ZN6Parser22parse_unary_expressionEv+0x2e>
	{
		get_next_token();
 8012de8:	6878      	ldr	r0, [r7, #4]
 8012dea:	f7f9 f8fe 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
	}
	exp->prior_exp = parse_priority_expression();
 8012dee:	6878      	ldr	r0, [r7, #4]
 8012df0:	f7ff ff94 	bl	8012d1c <_ZN6Parser25parse_priority_expressionEv>
 8012df4:	4602      	mov	r2, r0
 8012df6:	68fb      	ldr	r3, [r7, #12]
 8012df8:	601a      	str	r2, [r3, #0]
	return exp;
 8012dfa:	68fb      	ldr	r3, [r7, #12]
}
 8012dfc:	4618      	mov	r0, r3
 8012dfe:	3710      	adds	r7, #16
 8012e00:	46bd      	mov	sp, r7
 8012e02:	bd80      	pop	{r7, pc}

08012e04 <_ZN6Parser22parse_power_expressionEv>:

Power_expression* Parser::parse_power_expression()
{
 8012e04:	b580      	push	{r7, lr}
 8012e06:	b084      	sub	sp, #16
 8012e08:	af00      	add	r7, sp, #0
 8012e0a:	6078      	str	r0, [r7, #4]
	auto exp = new Power_expression();
 8012e0c:	2008      	movs	r0, #8
 8012e0e:	f00d f9fb 	bl	8020208 <_Znwj>
 8012e12:	4603      	mov	r3, r0
 8012e14:	2200      	movs	r2, #0
 8012e16:	601a      	str	r2, [r3, #0]
 8012e18:	2200      	movs	r2, #0
 8012e1a:	605a      	str	r2, [r3, #4]
 8012e1c:	60fb      	str	r3, [r7, #12]
	exp->left_un_exp = parse_unary_expression();
 8012e1e:	6878      	ldr	r0, [r7, #4]
 8012e20:	f7ff ffce 	bl	8012dc0 <_ZN6Parser22parse_unary_expressionEv>
 8012e24:	4602      	mov	r2, r0
 8012e26:	68fb      	ldr	r3, [r7, #12]
 8012e28:	601a      	str	r2, [r3, #0]
	if(token_buffer.type == TOKEN_POWER)
 8012e2a:	687b      	ldr	r3, [r7, #4]
 8012e2c:	781b      	ldrb	r3, [r3, #0]
 8012e2e:	2b23      	cmp	r3, #35	; 0x23
 8012e30:	d109      	bne.n	8012e46 <_ZN6Parser22parse_power_expressionEv+0x42>
	{
		get_next_token();
 8012e32:	6878      	ldr	r0, [r7, #4]
 8012e34:	f7f9 f8d9 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		exp->right_un_exp = parse_unary_expression();
 8012e38:	6878      	ldr	r0, [r7, #4]
 8012e3a:	f7ff ffc1 	bl	8012dc0 <_ZN6Parser22parse_unary_expressionEv>
 8012e3e:	4602      	mov	r2, r0
 8012e40:	68fb      	ldr	r3, [r7, #12]
 8012e42:	605a      	str	r2, [r3, #4]
 8012e44:	e002      	b.n	8012e4c <_ZN6Parser22parse_power_expressionEv+0x48>
	}
	else
	{
		exp->right_un_exp = nullptr;
 8012e46:	68fb      	ldr	r3, [r7, #12]
 8012e48:	2200      	movs	r2, #0
 8012e4a:	605a      	str	r2, [r3, #4]
	}
	return exp;
 8012e4c:	68fb      	ldr	r3, [r7, #12]
}
 8012e4e:	4618      	mov	r0, r3
 8012e50:	3710      	adds	r7, #16
 8012e52:	46bd      	mov	sp, r7
 8012e54:	bd80      	pop	{r7, pc}

08012e56 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>:

bool Parser::match_multiply_operator(Multiply_expression* exp)
{
 8012e56:	b580      	push	{r7, lr}
 8012e58:	b084      	sub	sp, #16
 8012e5a:	af00      	add	r7, sp, #0
 8012e5c:	6078      	str	r0, [r7, #4]
 8012e5e:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 8012e60:	687b      	ldr	r3, [r7, #4]
 8012e62:	781b      	ldrb	r3, [r3, #0]
 8012e64:	2b24      	cmp	r3, #36	; 0x24
 8012e66:	d01c      	beq.n	8012ea2 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x4c>
 8012e68:	2b24      	cmp	r3, #36	; 0x24
 8012e6a:	dc25      	bgt.n	8012eb8 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
 8012e6c:	2b21      	cmp	r3, #33	; 0x21
 8012e6e:	d002      	beq.n	8012e76 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x20>
 8012e70:	2b22      	cmp	r3, #34	; 0x22
 8012e72:	d00b      	beq.n	8012e8c <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x36>
 8012e74:	e020      	b.n	8012eb8 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x62>
	{
	case TOKEN_MULTIPLY:
		exp->ops.push_back(MULT_OP_MULTIPLY);
 8012e76:	683b      	ldr	r3, [r7, #0]
 8012e78:	330c      	adds	r3, #12
 8012e7a:	2201      	movs	r2, #1
 8012e7c:	737a      	strb	r2, [r7, #13]
 8012e7e:	f107 020d 	add.w	r2, r7, #13
 8012e82:	4611      	mov	r1, r2
 8012e84:	4618      	mov	r0, r3
 8012e86:	f000 fccd 	bl	8013824 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 8012e8a:	e017      	b.n	8012ebc <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_DIVIDE:
		exp->ops.push_back(MULT_OP_DIVIDE);
 8012e8c:	683b      	ldr	r3, [r7, #0]
 8012e8e:	330c      	adds	r3, #12
 8012e90:	2202      	movs	r2, #2
 8012e92:	73ba      	strb	r2, [r7, #14]
 8012e94:	f107 020e 	add.w	r2, r7, #14
 8012e98:	4611      	mov	r1, r2
 8012e9a:	4618      	mov	r0, r3
 8012e9c:	f000 fcc2 	bl	8013824 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 8012ea0:	e00c      	b.n	8012ebc <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	case TOKEN_MODULO:
		exp->ops.push_back(MULT_OP_MODULO);
 8012ea2:	683b      	ldr	r3, [r7, #0]
 8012ea4:	330c      	adds	r3, #12
 8012ea6:	2203      	movs	r2, #3
 8012ea8:	73fa      	strb	r2, [r7, #15]
 8012eaa:	f107 020f 	add.w	r2, r7, #15
 8012eae:	4611      	mov	r1, r2
 8012eb0:	4618      	mov	r0, r3
 8012eb2:	f000 fcb7 	bl	8013824 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>
		break;
 8012eb6:	e001      	b.n	8012ebc <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x66>
	default:
		return false;
 8012eb8:	2300      	movs	r3, #0
 8012eba:	e000      	b.n	8012ebe <_ZN6Parser23match_multiply_operatorEP19Multiply_expression+0x68>
	}
	return true;
 8012ebc:	2301      	movs	r3, #1
}
 8012ebe:	4618      	mov	r0, r3
 8012ec0:	3710      	adds	r7, #16
 8012ec2:	46bd      	mov	sp, r7
 8012ec4:	bd80      	pop	{r7, pc}

08012ec6 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8012ec6:	b580      	push	{r7, lr}
 8012ec8:	b082      	sub	sp, #8
 8012eca:	af00      	add	r7, sp, #0
 8012ecc:	6078      	str	r0, [r7, #4]
 8012ece:	687b      	ldr	r3, [r7, #4]
 8012ed0:	4618      	mov	r0, r3
 8012ed2:	f000 fcb8 	bl	8013846 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>
 8012ed6:	687b      	ldr	r3, [r7, #4]
 8012ed8:	4618      	mov	r0, r3
 8012eda:	3708      	adds	r7, #8
 8012edc:	46bd      	mov	sp, r7
 8012ede:	bd80      	pop	{r7, pc}

08012ee0 <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>:
      vector() = default;
 8012ee0:	b580      	push	{r7, lr}
 8012ee2:	b082      	sub	sp, #8
 8012ee4:	af00      	add	r7, sp, #0
 8012ee6:	6078      	str	r0, [r7, #4]
 8012ee8:	687b      	ldr	r3, [r7, #4]
 8012eea:	4618      	mov	r0, r3
 8012eec:	f7ff ffeb 	bl	8012ec6 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EEC1Ev>
 8012ef0:	687b      	ldr	r3, [r7, #4]
 8012ef2:	4618      	mov	r0, r3
 8012ef4:	3708      	adds	r7, #8
 8012ef6:	46bd      	mov	sp, r7
 8012ef8:	bd80      	pop	{r7, pc}

08012efa <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 8012efa:	b580      	push	{r7, lr}
 8012efc:	b082      	sub	sp, #8
 8012efe:	af00      	add	r7, sp, #0
 8012f00:	6078      	str	r0, [r7, #4]
 8012f02:	687b      	ldr	r3, [r7, #4]
 8012f04:	4618      	mov	r0, r3
 8012f06:	f000 fcae 	bl	8013866 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>
 8012f0a:	687b      	ldr	r3, [r7, #4]
 8012f0c:	4618      	mov	r0, r3
 8012f0e:	3708      	adds	r7, #8
 8012f10:	46bd      	mov	sp, r7
 8012f12:	bd80      	pop	{r7, pc}

08012f14 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>:
      vector() = default;
 8012f14:	b580      	push	{r7, lr}
 8012f16:	b082      	sub	sp, #8
 8012f18:	af00      	add	r7, sp, #0
 8012f1a:	6078      	str	r0, [r7, #4]
 8012f1c:	687b      	ldr	r3, [r7, #4]
 8012f1e:	4618      	mov	r0, r3
 8012f20:	f7ff ffeb 	bl	8012efa <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EEC1Ev>
 8012f24:	687b      	ldr	r3, [r7, #4]
 8012f26:	4618      	mov	r0, r3
 8012f28:	3708      	adds	r7, #8
 8012f2a:	46bd      	mov	sp, r7
 8012f2c:	bd80      	pop	{r7, pc}

08012f2e <_ZN19Multiply_expressionC1Ev>:
	MULT_OP_MULTIPLY,
	MULT_OP_DIVIDE,
	MULT_OP_MODULO
}mult_operator;

class Multiply_expression
 8012f2e:	b580      	push	{r7, lr}
 8012f30:	b082      	sub	sp, #8
 8012f32:	af00      	add	r7, sp, #0
 8012f34:	6078      	str	r0, [r7, #4]
 8012f36:	687b      	ldr	r3, [r7, #4]
 8012f38:	4618      	mov	r0, r3
 8012f3a:	f7ff ffd1 	bl	8012ee0 <_ZNSt6vectorIP16Power_expressionSaIS1_EEC1Ev>
 8012f3e:	687b      	ldr	r3, [r7, #4]
 8012f40:	330c      	adds	r3, #12
 8012f42:	4618      	mov	r0, r3
 8012f44:	f7ff ffe6 	bl	8012f14 <_ZNSt6vectorI13mult_operatorSaIS0_EEC1Ev>
 8012f48:	687b      	ldr	r3, [r7, #4]
 8012f4a:	4618      	mov	r0, r3
 8012f4c:	3708      	adds	r7, #8
 8012f4e:	46bd      	mov	sp, r7
 8012f50:	bd80      	pop	{r7, pc}

08012f52 <_ZN6Parser25parse_multiply_expressionEv>:

Multiply_expression* Parser::parse_multiply_expression()
{
 8012f52:	b590      	push	{r4, r7, lr}
 8012f54:	b087      	sub	sp, #28
 8012f56:	af00      	add	r7, sp, #0
 8012f58:	6078      	str	r0, [r7, #4]
	auto exp = new Multiply_expression();
 8012f5a:	2018      	movs	r0, #24
 8012f5c:	f00d f954 	bl	8020208 <_Znwj>
 8012f60:	4603      	mov	r3, r0
 8012f62:	461c      	mov	r4, r3
 8012f64:	4622      	mov	r2, r4
 8012f66:	2300      	movs	r3, #0
 8012f68:	6013      	str	r3, [r2, #0]
 8012f6a:	6053      	str	r3, [r2, #4]
 8012f6c:	6093      	str	r3, [r2, #8]
 8012f6e:	60d3      	str	r3, [r2, #12]
 8012f70:	6113      	str	r3, [r2, #16]
 8012f72:	6153      	str	r3, [r2, #20]
 8012f74:	4620      	mov	r0, r4
 8012f76:	f7ff ffda 	bl	8012f2e <_ZN19Multiply_expressionC1Ev>
 8012f7a:	617c      	str	r4, [r7, #20]
	exp->pow_exps.push_back(parse_power_expression());
 8012f7c:	697c      	ldr	r4, [r7, #20]
 8012f7e:	6878      	ldr	r0, [r7, #4]
 8012f80:	f7ff ff40 	bl	8012e04 <_ZN6Parser22parse_power_expressionEv>
 8012f84:	4603      	mov	r3, r0
 8012f86:	60fb      	str	r3, [r7, #12]
 8012f88:	f107 030c 	add.w	r3, r7, #12
 8012f8c:	4619      	mov	r1, r3
 8012f8e:	4620      	mov	r0, r4
 8012f90:	f000 fc79 	bl	8013886 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 8012f94:	6979      	ldr	r1, [r7, #20]
 8012f96:	6878      	ldr	r0, [r7, #4]
 8012f98:	f7ff ff5d 	bl	8012e56 <_ZN6Parser23match_multiply_operatorEP19Multiply_expression>
 8012f9c:	4603      	mov	r3, r0
 8012f9e:	2b00      	cmp	r3, #0
 8012fa0:	d00f      	beq.n	8012fc2 <_ZN6Parser25parse_multiply_expressionEv+0x70>
	{
		get_next_token();
 8012fa2:	6878      	ldr	r0, [r7, #4]
 8012fa4:	f7f9 f821 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		exp->pow_exps.push_back(parse_power_expression());
 8012fa8:	697c      	ldr	r4, [r7, #20]
 8012faa:	6878      	ldr	r0, [r7, #4]
 8012fac:	f7ff ff2a 	bl	8012e04 <_ZN6Parser22parse_power_expressionEv>
 8012fb0:	4603      	mov	r3, r0
 8012fb2:	613b      	str	r3, [r7, #16]
 8012fb4:	f107 0310 	add.w	r3, r7, #16
 8012fb8:	4619      	mov	r1, r3
 8012fba:	4620      	mov	r0, r4
 8012fbc:	f000 fc63 	bl	8013886 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>
	while(match_multiply_operator(exp))
 8012fc0:	e7e8      	b.n	8012f94 <_ZN6Parser25parse_multiply_expressionEv+0x42>
	}
	return exp;
 8012fc2:	697b      	ldr	r3, [r7, #20]
}
 8012fc4:	4618      	mov	r0, r3
 8012fc6:	371c      	adds	r7, #28
 8012fc8:	46bd      	mov	sp, r7
 8012fca:	bd90      	pop	{r4, r7, pc}

08012fcc <_ZN6Parser18match_sum_operatorEP14Sum_expression>:

bool Parser::match_sum_operator(Sum_expression* exp)
{
 8012fcc:	b580      	push	{r7, lr}
 8012fce:	b084      	sub	sp, #16
 8012fd0:	af00      	add	r7, sp, #0
 8012fd2:	6078      	str	r0, [r7, #4]
 8012fd4:	6039      	str	r1, [r7, #0]
	switch(token_buffer.type)
 8012fd6:	687b      	ldr	r3, [r7, #4]
 8012fd8:	781b      	ldrb	r3, [r3, #0]
 8012fda:	2b1f      	cmp	r3, #31
 8012fdc:	d002      	beq.n	8012fe4 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x18>
 8012fde:	2b20      	cmp	r3, #32
 8012fe0:	d00b      	beq.n	8012ffa <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x2e>
 8012fe2:	e015      	b.n	8013010 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x44>
	{
	case TOKEN_PLUS:
		exp->ops.push_back(SUM_OP_PLUS);
 8012fe4:	683b      	ldr	r3, [r7, #0]
 8012fe6:	330c      	adds	r3, #12
 8012fe8:	2201      	movs	r2, #1
 8012fea:	73ba      	strb	r2, [r7, #14]
 8012fec:	f107 020e 	add.w	r2, r7, #14
 8012ff0:	4611      	mov	r1, r2
 8012ff2:	4618      	mov	r0, r3
 8012ff4:	f000 fc58 	bl	80138a8 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 8012ff8:	e00c      	b.n	8013014 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	case TOKEN_MINUS:
		exp->ops.push_back(SUM_OP_MINUS);
 8012ffa:	683b      	ldr	r3, [r7, #0]
 8012ffc:	330c      	adds	r3, #12
 8012ffe:	2202      	movs	r2, #2
 8013000:	73fa      	strb	r2, [r7, #15]
 8013002:	f107 020f 	add.w	r2, r7, #15
 8013006:	4611      	mov	r1, r2
 8013008:	4618      	mov	r0, r3
 801300a:	f000 fc4d 	bl	80138a8 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>
		break;
 801300e:	e001      	b.n	8013014 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x48>
	default:
		return false;
 8013010:	2300      	movs	r3, #0
 8013012:	e000      	b.n	8013016 <_ZN6Parser18match_sum_operatorEP14Sum_expression+0x4a>
	}
	return true;
 8013014:	2301      	movs	r3, #1
}
 8013016:	4618      	mov	r0, r3
 8013018:	3710      	adds	r7, #16
 801301a:	46bd      	mov	sp, r7
 801301c:	bd80      	pop	{r7, pc}

0801301e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801301e:	b580      	push	{r7, lr}
 8013020:	b082      	sub	sp, #8
 8013022:	af00      	add	r7, sp, #0
 8013024:	6078      	str	r0, [r7, #4]
 8013026:	687b      	ldr	r3, [r7, #4]
 8013028:	4618      	mov	r0, r3
 801302a:	f000 fc4e 	bl	80138ca <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>
 801302e:	687b      	ldr	r3, [r7, #4]
 8013030:	4618      	mov	r0, r3
 8013032:	3708      	adds	r7, #8
 8013034:	46bd      	mov	sp, r7
 8013036:	bd80      	pop	{r7, pc}

08013038 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>:
      vector() = default;
 8013038:	b580      	push	{r7, lr}
 801303a:	b082      	sub	sp, #8
 801303c:	af00      	add	r7, sp, #0
 801303e:	6078      	str	r0, [r7, #4]
 8013040:	687b      	ldr	r3, [r7, #4]
 8013042:	4618      	mov	r0, r3
 8013044:	f7ff ffeb 	bl	801301e <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EEC1Ev>
 8013048:	687b      	ldr	r3, [r7, #4]
 801304a:	4618      	mov	r0, r3
 801304c:	3708      	adds	r7, #8
 801304e:	46bd      	mov	sp, r7
 8013050:	bd80      	pop	{r7, pc}

08013052 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>:
      _Vector_base() = default;
 8013052:	b580      	push	{r7, lr}
 8013054:	b082      	sub	sp, #8
 8013056:	af00      	add	r7, sp, #0
 8013058:	6078      	str	r0, [r7, #4]
 801305a:	687b      	ldr	r3, [r7, #4]
 801305c:	4618      	mov	r0, r3
 801305e:	f000 fc44 	bl	80138ea <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>
 8013062:	687b      	ldr	r3, [r7, #4]
 8013064:	4618      	mov	r0, r3
 8013066:	3708      	adds	r7, #8
 8013068:	46bd      	mov	sp, r7
 801306a:	bd80      	pop	{r7, pc}

0801306c <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>:
      vector() = default;
 801306c:	b580      	push	{r7, lr}
 801306e:	b082      	sub	sp, #8
 8013070:	af00      	add	r7, sp, #0
 8013072:	6078      	str	r0, [r7, #4]
 8013074:	687b      	ldr	r3, [r7, #4]
 8013076:	4618      	mov	r0, r3
 8013078:	f7ff ffeb 	bl	8013052 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EEC1Ev>
 801307c:	687b      	ldr	r3, [r7, #4]
 801307e:	4618      	mov	r0, r3
 8013080:	3708      	adds	r7, #8
 8013082:	46bd      	mov	sp, r7
 8013084:	bd80      	pop	{r7, pc}

08013086 <_ZN14Sum_expressionC1Ev>:
	SUM_OP_NONE,
	SUM_OP_PLUS,
	SUM_OP_MINUS
}sum_operator;

class Sum_expression
 8013086:	b580      	push	{r7, lr}
 8013088:	b082      	sub	sp, #8
 801308a:	af00      	add	r7, sp, #0
 801308c:	6078      	str	r0, [r7, #4]
 801308e:	687b      	ldr	r3, [r7, #4]
 8013090:	4618      	mov	r0, r3
 8013092:	f7ff ffd1 	bl	8013038 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EEC1Ev>
 8013096:	687b      	ldr	r3, [r7, #4]
 8013098:	330c      	adds	r3, #12
 801309a:	4618      	mov	r0, r3
 801309c:	f7ff ffe6 	bl	801306c <_ZNSt6vectorI12sum_operatorSaIS0_EEC1Ev>
 80130a0:	687b      	ldr	r3, [r7, #4]
 80130a2:	4618      	mov	r0, r3
 80130a4:	3708      	adds	r7, #8
 80130a6:	46bd      	mov	sp, r7
 80130a8:	bd80      	pop	{r7, pc}

080130aa <_ZN6Parser20parse_sum_expressionEv>:

Sum_expression* Parser::parse_sum_expression()
{
 80130aa:	b590      	push	{r4, r7, lr}
 80130ac:	b087      	sub	sp, #28
 80130ae:	af00      	add	r7, sp, #0
 80130b0:	6078      	str	r0, [r7, #4]
	auto exp = new Sum_expression();
 80130b2:	2018      	movs	r0, #24
 80130b4:	f00d f8a8 	bl	8020208 <_Znwj>
 80130b8:	4603      	mov	r3, r0
 80130ba:	461c      	mov	r4, r3
 80130bc:	4622      	mov	r2, r4
 80130be:	2300      	movs	r3, #0
 80130c0:	6013      	str	r3, [r2, #0]
 80130c2:	6053      	str	r3, [r2, #4]
 80130c4:	6093      	str	r3, [r2, #8]
 80130c6:	60d3      	str	r3, [r2, #12]
 80130c8:	6113      	str	r3, [r2, #16]
 80130ca:	6153      	str	r3, [r2, #20]
 80130cc:	4620      	mov	r0, r4
 80130ce:	f7ff ffda 	bl	8013086 <_ZN14Sum_expressionC1Ev>
 80130d2:	617c      	str	r4, [r7, #20]
	exp->mult_exps.push_back(parse_multiply_expression());
 80130d4:	697c      	ldr	r4, [r7, #20]
 80130d6:	6878      	ldr	r0, [r7, #4]
 80130d8:	f7ff ff3b 	bl	8012f52 <_ZN6Parser25parse_multiply_expressionEv>
 80130dc:	4603      	mov	r3, r0
 80130de:	60fb      	str	r3, [r7, #12]
 80130e0:	f107 030c 	add.w	r3, r7, #12
 80130e4:	4619      	mov	r1, r3
 80130e6:	4620      	mov	r0, r4
 80130e8:	f000 fc0f 	bl	801390a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 80130ec:	6979      	ldr	r1, [r7, #20]
 80130ee:	6878      	ldr	r0, [r7, #4]
 80130f0:	f7ff ff6c 	bl	8012fcc <_ZN6Parser18match_sum_operatorEP14Sum_expression>
 80130f4:	4603      	mov	r3, r0
 80130f6:	2b00      	cmp	r3, #0
 80130f8:	d00f      	beq.n	801311a <_ZN6Parser20parse_sum_expressionEv+0x70>
	{
		get_next_token();
 80130fa:	6878      	ldr	r0, [r7, #4]
 80130fc:	f7f8 ff75 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		exp->mult_exps.push_back(parse_multiply_expression());
 8013100:	697c      	ldr	r4, [r7, #20]
 8013102:	6878      	ldr	r0, [r7, #4]
 8013104:	f7ff ff25 	bl	8012f52 <_ZN6Parser25parse_multiply_expressionEv>
 8013108:	4603      	mov	r3, r0
 801310a:	613b      	str	r3, [r7, #16]
 801310c:	f107 0310 	add.w	r3, r7, #16
 8013110:	4619      	mov	r1, r3
 8013112:	4620      	mov	r0, r4
 8013114:	f000 fbf9 	bl	801390a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>
	while(match_sum_operator(exp))
 8013118:	e7e8      	b.n	80130ec <_ZN6Parser20parse_sum_expressionEv+0x42>
	}
	return exp;
 801311a:	697b      	ldr	r3, [r7, #20]
}
 801311c:	4618      	mov	r0, r3
 801311e:	371c      	adds	r7, #28
 8013120:	46bd      	mov	sp, r7
 8013122:	bd90      	pop	{r4, r7, pc}

08013124 <_ZN6Parser23match_relation_operatorEP19Relation_expression>:

bool Parser::match_relation_operator(Relation_expression* exp)
{
 8013124:	b480      	push	{r7}
 8013126:	b083      	sub	sp, #12
 8013128:	af00      	add	r7, sp, #0
 801312a:	6078      	str	r0, [r7, #4]
 801312c:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 801312e:	687b      	ldr	r3, [r7, #4]
 8013130:	781b      	ldrb	r3, [r3, #0]
 8013132:	3b19      	subs	r3, #25
 8013134:	2b03      	cmp	r3, #3
 8013136:	d81b      	bhi.n	8013170 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x4c>
 8013138:	a201      	add	r2, pc, #4	; (adr r2, 8013140 <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x1c>)
 801313a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801313e:	bf00      	nop
 8013140:	08013161 	.word	0x08013161
 8013144:	08013169 	.word	0x08013169
 8013148:	08013151 	.word	0x08013151
 801314c:	08013159 	.word	0x08013159
	{
	case TOKEN_SMALLER_THAN:
		exp->op = REL_OP_SMALLER;
 8013150:	683b      	ldr	r3, [r7, #0]
 8013152:	2201      	movs	r2, #1
 8013154:	721a      	strb	r2, [r3, #8]
		break;
 8013156:	e010      	b.n	801317a <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_SMALLER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 8013158:	683b      	ldr	r3, [r7, #0]
 801315a:	2202      	movs	r2, #2
 801315c:	721a      	strb	r2, [r3, #8]
		break;
 801315e:	e00c      	b.n	801317a <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_THAN:
		exp->op = REL_OP_GREATER;
 8013160:	683b      	ldr	r3, [r7, #0]
 8013162:	2203      	movs	r2, #3
 8013164:	721a      	strb	r2, [r3, #8]
		break;
 8013166:	e008      	b.n	801317a <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	case TOKEN_GREATER_OR_EQUAL:
		exp->op = REL_OP_SMALLER_EQUAL;
 8013168:	683b      	ldr	r3, [r7, #0]
 801316a:	2202      	movs	r2, #2
 801316c:	721a      	strb	r2, [r3, #8]
		break;
 801316e:	e004      	b.n	801317a <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x56>
	default:
		exp->right_sum_exp = nullptr;
 8013170:	683b      	ldr	r3, [r7, #0]
 8013172:	2200      	movs	r2, #0
 8013174:	605a      	str	r2, [r3, #4]
		return false;
 8013176:	2300      	movs	r3, #0
 8013178:	e000      	b.n	801317c <_ZN6Parser23match_relation_operatorEP19Relation_expression+0x58>
	}
	return true;
 801317a:	2301      	movs	r3, #1
}
 801317c:	4618      	mov	r0, r3
 801317e:	370c      	adds	r7, #12
 8013180:	46bd      	mov	sp, r7
 8013182:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013186:	4770      	bx	lr

08013188 <_ZN6Parser25parse_relation_expressionEv>:

Relation_expression* Parser::parse_relation_expression()
{
 8013188:	b580      	push	{r7, lr}
 801318a:	b084      	sub	sp, #16
 801318c:	af00      	add	r7, sp, #0
 801318e:	6078      	str	r0, [r7, #4]
	auto exp = new Relation_expression();
 8013190:	200c      	movs	r0, #12
 8013192:	f00d f839 	bl	8020208 <_Znwj>
 8013196:	4603      	mov	r3, r0
 8013198:	2200      	movs	r2, #0
 801319a:	601a      	str	r2, [r3, #0]
 801319c:	2200      	movs	r2, #0
 801319e:	605a      	str	r2, [r3, #4]
 80131a0:	2200      	movs	r2, #0
 80131a2:	721a      	strb	r2, [r3, #8]
 80131a4:	60fb      	str	r3, [r7, #12]
	exp->left_sum_exp = parse_sum_expression();
 80131a6:	6878      	ldr	r0, [r7, #4]
 80131a8:	f7ff ff7f 	bl	80130aa <_ZN6Parser20parse_sum_expressionEv>
 80131ac:	4602      	mov	r2, r0
 80131ae:	68fb      	ldr	r3, [r7, #12]
 80131b0:	601a      	str	r2, [r3, #0]
	if(match_relation_operator(exp))
 80131b2:	68f9      	ldr	r1, [r7, #12]
 80131b4:	6878      	ldr	r0, [r7, #4]
 80131b6:	f7ff ffb5 	bl	8013124 <_ZN6Parser23match_relation_operatorEP19Relation_expression>
 80131ba:	4603      	mov	r3, r0
 80131bc:	2b00      	cmp	r3, #0
 80131be:	d008      	beq.n	80131d2 <_ZN6Parser25parse_relation_expressionEv+0x4a>
	{
		get_next_token();
 80131c0:	6878      	ldr	r0, [r7, #4]
 80131c2:	f7f8 ff12 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		exp->right_sum_exp = parse_sum_expression();
 80131c6:	6878      	ldr	r0, [r7, #4]
 80131c8:	f7ff ff6f 	bl	80130aa <_ZN6Parser20parse_sum_expressionEv>
 80131cc:	4602      	mov	r2, r0
 80131ce:	68fb      	ldr	r3, [r7, #12]
 80131d0:	605a      	str	r2, [r3, #4]
	}
	return exp;
 80131d2:	68fb      	ldr	r3, [r7, #12]
}
 80131d4:	4618      	mov	r0, r3
 80131d6:	3710      	adds	r7, #16
 80131d8:	46bd      	mov	sp, r7
 80131da:	bd80      	pop	{r7, pc}

080131dc <_ZN6Parser22match_compare_operatorEP18Compare_expression>:

bool Parser::match_compare_operator(Compare_expression *exp)
{
 80131dc:	b480      	push	{r7}
 80131de:	b083      	sub	sp, #12
 80131e0:	af00      	add	r7, sp, #0
 80131e2:	6078      	str	r0, [r7, #4]
 80131e4:	6039      	str	r1, [r7, #0]
	switch (token_buffer.type)
 80131e6:	687b      	ldr	r3, [r7, #4]
 80131e8:	781b      	ldrb	r3, [r3, #0]
 80131ea:	2b1d      	cmp	r3, #29
 80131ec:	d002      	beq.n	80131f4 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x18>
 80131ee:	2b1e      	cmp	r3, #30
 80131f0:	d004      	beq.n	80131fc <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x20>
 80131f2:	e007      	b.n	8013204 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x28>
	{
	case TOKEN_EQUALS:
		exp->op = COMP_OP_EQUAL;
 80131f4:	683b      	ldr	r3, [r7, #0]
 80131f6:	2201      	movs	r2, #1
 80131f8:	721a      	strb	r2, [r3, #8]
		break;
 80131fa:	e008      	b.n	801320e <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	case TOKEN_NOT_EQUAL:
		exp->op = COMP_OP_NOT_EQUAL;
 80131fc:	683b      	ldr	r3, [r7, #0]
 80131fe:	2202      	movs	r2, #2
 8013200:	721a      	strb	r2, [r3, #8]
		break;
 8013202:	e004      	b.n	801320e <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x32>
	default:
		exp->right_rel_exp = nullptr;
 8013204:	683b      	ldr	r3, [r7, #0]
 8013206:	2200      	movs	r2, #0
 8013208:	605a      	str	r2, [r3, #4]
		return false;
 801320a:	2300      	movs	r3, #0
 801320c:	e000      	b.n	8013210 <_ZN6Parser22match_compare_operatorEP18Compare_expression+0x34>
	}
	return true;
 801320e:	2301      	movs	r3, #1
}
 8013210:	4618      	mov	r0, r3
 8013212:	370c      	adds	r7, #12
 8013214:	46bd      	mov	sp, r7
 8013216:	f85d 7b04 	ldr.w	r7, [sp], #4
 801321a:	4770      	bx	lr

0801321c <_ZN6Parser24parse_compare_expressionEv>:

Compare_expression* Parser::parse_compare_expression()
{
 801321c:	b580      	push	{r7, lr}
 801321e:	b084      	sub	sp, #16
 8013220:	af00      	add	r7, sp, #0
 8013222:	6078      	str	r0, [r7, #4]
	auto exp = new Compare_expression();
 8013224:	200c      	movs	r0, #12
 8013226:	f00c ffef 	bl	8020208 <_Znwj>
 801322a:	4603      	mov	r3, r0
 801322c:	2200      	movs	r2, #0
 801322e:	601a      	str	r2, [r3, #0]
 8013230:	2200      	movs	r2, #0
 8013232:	605a      	str	r2, [r3, #4]
 8013234:	2200      	movs	r2, #0
 8013236:	721a      	strb	r2, [r3, #8]
 8013238:	60fb      	str	r3, [r7, #12]
	exp->left_rel_exp = parse_relation_expression();
 801323a:	6878      	ldr	r0, [r7, #4]
 801323c:	f7ff ffa4 	bl	8013188 <_ZN6Parser25parse_relation_expressionEv>
 8013240:	4602      	mov	r2, r0
 8013242:	68fb      	ldr	r3, [r7, #12]
 8013244:	601a      	str	r2, [r3, #0]
	if(match_compare_operator(exp))
 8013246:	68f9      	ldr	r1, [r7, #12]
 8013248:	6878      	ldr	r0, [r7, #4]
 801324a:	f7ff ffc7 	bl	80131dc <_ZN6Parser22match_compare_operatorEP18Compare_expression>
 801324e:	4603      	mov	r3, r0
 8013250:	2b00      	cmp	r3, #0
 8013252:	d008      	beq.n	8013266 <_ZN6Parser24parse_compare_expressionEv+0x4a>
	{
		get_next_token();
 8013254:	6878      	ldr	r0, [r7, #4]
 8013256:	f7f8 fec8 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		exp->right_rel_exp = parse_relation_expression();
 801325a:	6878      	ldr	r0, [r7, #4]
 801325c:	f7ff ff94 	bl	8013188 <_ZN6Parser25parse_relation_expressionEv>
 8013260:	4602      	mov	r2, r0
 8013262:	68fb      	ldr	r3, [r7, #12]
 8013264:	605a      	str	r2, [r3, #4]
	}
	return exp;
 8013266:	68fb      	ldr	r3, [r7, #12]
}
 8013268:	4618      	mov	r0, r3
 801326a:	3710      	adds	r7, #16
 801326c:	46bd      	mov	sp, r7
 801326e:	bd80      	pop	{r7, pc}

08013270 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 8013270:	b580      	push	{r7, lr}
 8013272:	b082      	sub	sp, #8
 8013274:	af00      	add	r7, sp, #0
 8013276:	6078      	str	r0, [r7, #4]
 8013278:	687b      	ldr	r3, [r7, #4]
 801327a:	4618      	mov	r0, r3
 801327c:	f000 fb56 	bl	801392c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>
 8013280:	687b      	ldr	r3, [r7, #4]
 8013282:	4618      	mov	r0, r3
 8013284:	3708      	adds	r7, #8
 8013286:	46bd      	mov	sp, r7
 8013288:	bd80      	pop	{r7, pc}

0801328a <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>:
      vector() = default;
 801328a:	b580      	push	{r7, lr}
 801328c:	b082      	sub	sp, #8
 801328e:	af00      	add	r7, sp, #0
 8013290:	6078      	str	r0, [r7, #4]
 8013292:	687b      	ldr	r3, [r7, #4]
 8013294:	4618      	mov	r0, r3
 8013296:	f7ff ffeb 	bl	8013270 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EEC1Ev>
 801329a:	687b      	ldr	r3, [r7, #4]
 801329c:	4618      	mov	r0, r3
 801329e:	3708      	adds	r7, #8
 80132a0:	46bd      	mov	sp, r7
 80132a2:	bd80      	pop	{r7, pc}

080132a4 <_ZN14And_expressionC1Ev>:
	Relation_expression* left_rel_exp;
	Relation_expression* right_rel_exp;
	comp_operator op;
};

class And_expression
 80132a4:	b580      	push	{r7, lr}
 80132a6:	b082      	sub	sp, #8
 80132a8:	af00      	add	r7, sp, #0
 80132aa:	6078      	str	r0, [r7, #4]
 80132ac:	687b      	ldr	r3, [r7, #4]
 80132ae:	4618      	mov	r0, r3
 80132b0:	f7ff ffeb 	bl	801328a <_ZNSt6vectorIP18Compare_expressionSaIS1_EEC1Ev>
 80132b4:	687b      	ldr	r3, [r7, #4]
 80132b6:	4618      	mov	r0, r3
 80132b8:	3708      	adds	r7, #8
 80132ba:	46bd      	mov	sp, r7
 80132bc:	bd80      	pop	{r7, pc}

080132be <_ZN6Parser20parse_and_expressionEv>:

And_expression* Parser::parse_and_expression()
{
 80132be:	b590      	push	{r4, r7, lr}
 80132c0:	b087      	sub	sp, #28
 80132c2:	af00      	add	r7, sp, #0
 80132c4:	6078      	str	r0, [r7, #4]
	auto exp = new And_expression();
 80132c6:	200c      	movs	r0, #12
 80132c8:	f00c ff9e 	bl	8020208 <_Znwj>
 80132cc:	4603      	mov	r3, r0
 80132ce:	461c      	mov	r4, r3
 80132d0:	4622      	mov	r2, r4
 80132d2:	2300      	movs	r3, #0
 80132d4:	6013      	str	r3, [r2, #0]
 80132d6:	6053      	str	r3, [r2, #4]
 80132d8:	6093      	str	r3, [r2, #8]
 80132da:	4620      	mov	r0, r4
 80132dc:	f7ff ffe2 	bl	80132a4 <_ZN14And_expressionC1Ev>
 80132e0:	617c      	str	r4, [r7, #20]
	exp->comp_exps.push_back(parse_compare_expression());
 80132e2:	697c      	ldr	r4, [r7, #20]
 80132e4:	6878      	ldr	r0, [r7, #4]
 80132e6:	f7ff ff99 	bl	801321c <_ZN6Parser24parse_compare_expressionEv>
 80132ea:	4603      	mov	r3, r0
 80132ec:	60fb      	str	r3, [r7, #12]
 80132ee:	f107 030c 	add.w	r3, r7, #12
 80132f2:	4619      	mov	r1, r3
 80132f4:	4620      	mov	r0, r4
 80132f6:	f000 fb29 	bl	801394c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 80132fa:	687b      	ldr	r3, [r7, #4]
 80132fc:	781b      	ldrb	r3, [r3, #0]
 80132fe:	2b16      	cmp	r3, #22
 8013300:	d10f      	bne.n	8013322 <_ZN6Parser20parse_and_expressionEv+0x64>
	{
		get_next_token();
 8013302:	6878      	ldr	r0, [r7, #4]
 8013304:	f7f8 fe71 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		exp->comp_exps.push_back(parse_compare_expression());
 8013308:	697c      	ldr	r4, [r7, #20]
 801330a:	6878      	ldr	r0, [r7, #4]
 801330c:	f7ff ff86 	bl	801321c <_ZN6Parser24parse_compare_expressionEv>
 8013310:	4603      	mov	r3, r0
 8013312:	613b      	str	r3, [r7, #16]
 8013314:	f107 0310 	add.w	r3, r7, #16
 8013318:	4619      	mov	r1, r3
 801331a:	4620      	mov	r0, r4
 801331c:	f000 fb16 	bl	801394c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_AND)
 8013320:	e7eb      	b.n	80132fa <_ZN6Parser20parse_and_expressionEv+0x3c>
	}
	return exp;
 8013322:	697b      	ldr	r3, [r7, #20]
}
 8013324:	4618      	mov	r0, r3
 8013326:	371c      	adds	r7, #28
 8013328:	46bd      	mov	sp, r7
 801332a:	bd90      	pop	{r4, r7, pc}

0801332c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>:
      _Vector_base() = default;
 801332c:	b580      	push	{r7, lr}
 801332e:	b082      	sub	sp, #8
 8013330:	af00      	add	r7, sp, #0
 8013332:	6078      	str	r0, [r7, #4]
 8013334:	687b      	ldr	r3, [r7, #4]
 8013336:	4618      	mov	r0, r3
 8013338:	f000 fb19 	bl	801396e <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>
 801333c:	687b      	ldr	r3, [r7, #4]
 801333e:	4618      	mov	r0, r3
 8013340:	3708      	adds	r7, #8
 8013342:	46bd      	mov	sp, r7
 8013344:	bd80      	pop	{r7, pc}

08013346 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>:
      vector() = default;
 8013346:	b580      	push	{r7, lr}
 8013348:	b082      	sub	sp, #8
 801334a:	af00      	add	r7, sp, #0
 801334c:	6078      	str	r0, [r7, #4]
 801334e:	687b      	ldr	r3, [r7, #4]
 8013350:	4618      	mov	r0, r3
 8013352:	f7ff ffeb 	bl	801332c <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EEC1Ev>
 8013356:	687b      	ldr	r3, [r7, #4]
 8013358:	4618      	mov	r0, r3
 801335a:	3708      	adds	r7, #8
 801335c:	46bd      	mov	sp, r7
 801335e:	bd80      	pop	{r7, pc}

08013360 <_ZN10ExpressionC1Ev>:
public:
	~And_expression();
	std::vector<Compare_expression*> comp_exps;
};

class Expression
 8013360:	b580      	push	{r7, lr}
 8013362:	b082      	sub	sp, #8
 8013364:	af00      	add	r7, sp, #0
 8013366:	6078      	str	r0, [r7, #4]
 8013368:	687b      	ldr	r3, [r7, #4]
 801336a:	3308      	adds	r3, #8
 801336c:	4618      	mov	r0, r3
 801336e:	f7ff ffea 	bl	8013346 <_ZNSt6vectorIP14And_expressionSaIS1_EEC1Ev>
 8013372:	687b      	ldr	r3, [r7, #4]
 8013374:	4618      	mov	r0, r3
 8013376:	3708      	adds	r7, #8
 8013378:	46bd      	mov	sp, r7
 801337a:	bd80      	pop	{r7, pc}

0801337c <_ZN6Parser16parse_expressionEv>:

Expression* Parser::parse_expression()
{
 801337c:	b590      	push	{r4, r7, lr}
 801337e:	b087      	sub	sp, #28
 8013380:	af00      	add	r7, sp, #0
 8013382:	6078      	str	r0, [r7, #4]
	auto exp = new Expression();
 8013384:	2014      	movs	r0, #20
 8013386:	f00c ff3f 	bl	8020208 <_Znwj>
 801338a:	4603      	mov	r3, r0
 801338c:	461c      	mov	r4, r3
 801338e:	4622      	mov	r2, r4
 8013390:	2300      	movs	r3, #0
 8013392:	6013      	str	r3, [r2, #0]
 8013394:	6053      	str	r3, [r2, #4]
 8013396:	6093      	str	r3, [r2, #8]
 8013398:	60d3      	str	r3, [r2, #12]
 801339a:	6113      	str	r3, [r2, #16]
 801339c:	4620      	mov	r0, r4
 801339e:	f7ff ffdf 	bl	8013360 <_ZN10ExpressionC1Ev>
 80133a2:	617c      	str	r4, [r7, #20]
	exp->line = token_buffer.line;
 80133a4:	687b      	ldr	r3, [r7, #4]
 80133a6:	6a1a      	ldr	r2, [r3, #32]
 80133a8:	697b      	ldr	r3, [r7, #20]
 80133aa:	601a      	str	r2, [r3, #0]
	exp->position = token_buffer.position;
 80133ac:	687b      	ldr	r3, [r7, #4]
 80133ae:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80133b0:	697b      	ldr	r3, [r7, #20]
 80133b2:	605a      	str	r2, [r3, #4]
	exp->and_exps.push_back(parse_and_expression());
 80133b4:	697b      	ldr	r3, [r7, #20]
 80133b6:	f103 0408 	add.w	r4, r3, #8
 80133ba:	6878      	ldr	r0, [r7, #4]
 80133bc:	f7ff ff7f 	bl	80132be <_ZN6Parser20parse_and_expressionEv>
 80133c0:	4603      	mov	r3, r0
 80133c2:	60fb      	str	r3, [r7, #12]
 80133c4:	f107 030c 	add.w	r3, r7, #12
 80133c8:	4619      	mov	r1, r3
 80133ca:	4620      	mov	r0, r4
 80133cc:	f000 fadf 	bl	801398e <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 80133d0:	687b      	ldr	r3, [r7, #4]
 80133d2:	781b      	ldrb	r3, [r3, #0]
 80133d4:	2b15      	cmp	r3, #21
 80133d6:	d111      	bne.n	80133fc <_ZN6Parser16parse_expressionEv+0x80>
	{
		get_next_token();
 80133d8:	6878      	ldr	r0, [r7, #4]
 80133da:	f7f8 fe06 	bl	800bfea <_ZN6Parser14get_next_tokenEv>
		exp->and_exps.push_back(parse_and_expression());
 80133de:	697b      	ldr	r3, [r7, #20]
 80133e0:	f103 0408 	add.w	r4, r3, #8
 80133e4:	6878      	ldr	r0, [r7, #4]
 80133e6:	f7ff ff6a 	bl	80132be <_ZN6Parser20parse_and_expressionEv>
 80133ea:	4603      	mov	r3, r0
 80133ec:	613b      	str	r3, [r7, #16]
 80133ee:	f107 0310 	add.w	r3, r7, #16
 80133f2:	4619      	mov	r1, r3
 80133f4:	4620      	mov	r0, r4
 80133f6:	f000 faca 	bl	801398e <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>
	while(token_buffer.type == TOKEN_OR)
 80133fa:	e7e9      	b.n	80133d0 <_ZN6Parser16parse_expressionEv+0x54>
	}
	return exp;
 80133fc:	697b      	ldr	r3, [r7, #20]
}
 80133fe:	4618      	mov	r0, r3
 8013400:	371c      	adds	r7, #28
 8013402:	46bd      	mov	sp, r7
 8013404:	bd90      	pop	{r4, r7, pc}

08013406 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8013406:	b590      	push	{r4, r7, lr}
 8013408:	b085      	sub	sp, #20
 801340a:	af00      	add	r7, sp, #0
 801340c:	6078      	str	r0, [r7, #4]
 801340e:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8013410:	2305      	movs	r3, #5
 8013412:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8013414:	6878      	ldr	r0, [r7, #4]
 8013416:	f7f1 f912 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801341a:	4603      	mov	r3, r0
 801341c:	2b05      	cmp	r3, #5
 801341e:	bf0c      	ite	eq
 8013420:	2301      	moveq	r3, #1
 8013422:	2300      	movne	r3, #0
 8013424:	b2db      	uxtb	r3, r3
 8013426:	2b00      	cmp	r3, #0
 8013428:	d00a      	beq.n	8013440 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801342a:	6838      	ldr	r0, [r7, #0]
 801342c:	f7f9 fbec 	bl	800cc08 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8013430:	4603      	mov	r3, r0
 8013432:	681c      	ldr	r4, [r3, #0]
 8013434:	6878      	ldr	r0, [r7, #4]
 8013436:	f7f1 fc91 	bl	8004d5c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801343a:	4603      	mov	r3, r0
 801343c:	601c      	str	r4, [r3, #0]
 801343e:	e007      	b.n	8013450 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS9_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8013440:	6838      	ldr	r0, [r7, #0]
 8013442:	f7f9 fbe1 	bl	800cc08 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 8013446:	4603      	mov	r3, r0
 8013448:	4619      	mov	r1, r3
 801344a:	6878      	ldr	r0, [r7, #4]
 801344c:	f000 fab0 	bl	80139b0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 8013450:	687b      	ldr	r3, [r7, #4]
	}
 8013452:	4618      	mov	r0, r3
 8013454:	3714      	adds	r7, #20
 8013456:	46bd      	mov	sp, r7
 8013458:	bd90      	pop	{r4, r7, pc}

0801345a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801345a:	b590      	push	{r4, r7, lr}
 801345c:	b085      	sub	sp, #20
 801345e:	af00      	add	r7, sp, #0
 8013460:	6078      	str	r0, [r7, #4]
 8013462:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8013464:	2304      	movs	r3, #4
 8013466:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8013468:	6878      	ldr	r0, [r7, #4]
 801346a:	f7f1 f8e8 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 801346e:	4603      	mov	r3, r0
 8013470:	2b04      	cmp	r3, #4
 8013472:	bf0c      	ite	eq
 8013474:	2301      	moveq	r3, #1
 8013476:	2300      	movne	r3, #0
 8013478:	b2db      	uxtb	r3, r3
 801347a:	2b00      	cmp	r3, #0
 801347c:	d00a      	beq.n	8013494 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 801347e:	6838      	ldr	r0, [r7, #0]
 8013480:	f000 faaf 	bl	80139e2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 8013484:	4603      	mov	r3, r0
 8013486:	681c      	ldr	r4, [r3, #0]
 8013488:	6878      	ldr	r0, [r7, #4]
 801348a:	f7f1 fbcf 	bl	8004c2c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 801348e:	4603      	mov	r3, r0
 8013490:	601c      	str	r4, [r3, #0]
 8013492:	e007      	b.n	80134a4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS7_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8013494:	6838      	ldr	r0, [r7, #0]
 8013496:	f000 faa4 	bl	80139e2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 801349a:	4603      	mov	r3, r0
 801349c:	4619      	mov	r1, r3
 801349e:	6878      	ldr	r0, [r7, #4]
 80134a0:	f000 faaa 	bl	80139f8 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80134a4:	687b      	ldr	r3, [r7, #4]
	}
 80134a6:	4618      	mov	r0, r3
 80134a8:	3714      	adds	r7, #20
 80134aa:	46bd      	mov	sp, r7
 80134ac:	bd90      	pop	{r4, r7, pc}

080134ae <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80134ae:	b580      	push	{r7, lr}
 80134b0:	b082      	sub	sp, #8
 80134b2:	af00      	add	r7, sp, #0
 80134b4:	6078      	str	r0, [r7, #4]
 80134b6:	7039      	strb	r1, [r7, #0]
 80134b8:	687b      	ldr	r3, [r7, #4]
 80134ba:	4611      	mov	r1, r2
 80134bc:	4618      	mov	r0, r3
 80134be:	f000 fad2 	bl	8013a66 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80134c2:	687b      	ldr	r3, [r7, #4]
 80134c4:	4618      	mov	r0, r3
 80134c6:	3708      	adds	r7, #8
 80134c8:	46bd      	mov	sp, r7
 80134ca:	bd80      	pop	{r7, pc}

080134cc <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80134cc:	b580      	push	{r7, lr}
 80134ce:	b082      	sub	sp, #8
 80134d0:	af00      	add	r7, sp, #0
 80134d2:	6078      	str	r0, [r7, #4]
 80134d4:	7039      	strb	r1, [r7, #0]
 80134d6:	687b      	ldr	r3, [r7, #4]
 80134d8:	4611      	mov	r1, r2
 80134da:	4618      	mov	r0, r3
 80134dc:	f7ff ffe7 	bl	80134ae <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80134e0:	687b      	ldr	r3, [r7, #4]
 80134e2:	4618      	mov	r0, r3
 80134e4:	3708      	adds	r7, #8
 80134e6:	46bd      	mov	sp, r7
 80134e8:	bd80      	pop	{r7, pc}

080134ea <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80134ea:	b580      	push	{r7, lr}
 80134ec:	b082      	sub	sp, #8
 80134ee:	af00      	add	r7, sp, #0
 80134f0:	6078      	str	r0, [r7, #4]
 80134f2:	7039      	strb	r1, [r7, #0]
 80134f4:	687b      	ldr	r3, [r7, #4]
 80134f6:	4611      	mov	r1, r2
 80134f8:	4618      	mov	r0, r3
 80134fa:	f7ff ffe7 	bl	80134cc <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80134fe:	687b      	ldr	r3, [r7, #4]
 8013500:	4618      	mov	r0, r3
 8013502:	3708      	adds	r7, #8
 8013504:	46bd      	mov	sp, r7
 8013506:	bd80      	pop	{r7, pc}

08013508 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8013508:	b580      	push	{r7, lr}
 801350a:	b082      	sub	sp, #8
 801350c:	af00      	add	r7, sp, #0
 801350e:	6078      	str	r0, [r7, #4]
 8013510:	7039      	strb	r1, [r7, #0]
 8013512:	687b      	ldr	r3, [r7, #4]
 8013514:	4611      	mov	r1, r2
 8013516:	4618      	mov	r0, r3
 8013518:	f7ff ffe7 	bl	80134ea <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801351c:	687b      	ldr	r3, [r7, #4]
 801351e:	4618      	mov	r0, r3
 8013520:	3708      	adds	r7, #8
 8013522:	46bd      	mov	sp, r7
 8013524:	bd80      	pop	{r7, pc}

08013526 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8013526:	b580      	push	{r7, lr}
 8013528:	b082      	sub	sp, #8
 801352a:	af00      	add	r7, sp, #0
 801352c:	6078      	str	r0, [r7, #4]
 801352e:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 8013530:	687b      	ldr	r3, [r7, #4]
 8013532:	4611      	mov	r1, r2
 8013534:	4618      	mov	r0, r3
 8013536:	f7ff ffe7 	bl	8013508 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEECI1NS0_16_Variant_storageILb0EJbifS7_S9_SB_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 801353a:	687b      	ldr	r3, [r7, #4]
 801353c:	4618      	mov	r0, r3
 801353e:	3708      	adds	r7, #8
 8013540:	46bd      	mov	sp, r7
 8013542:	bd80      	pop	{r7, pc}

08013544 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1Ev>:
      _Variant_base()
 8013544:	b580      	push	{r7, lr}
 8013546:	b082      	sub	sp, #8
 8013548:	af00      	add	r7, sp, #0
 801354a:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801354c:	4619      	mov	r1, r3
 801354e:	6878      	ldr	r0, [r7, #4]
 8013550:	f7ff ffe9 	bl	8013526 <_ZNSt8__detail9__variant13_Variant_baseIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8013554:	687b      	ldr	r3, [r7, #4]
 8013556:	4618      	mov	r0, r3
 8013558:	3708      	adds	r7, #8
 801355a:	46bd      	mov	sp, r7
 801355c:	bd80      	pop	{r7, pc}

0801355e <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 801355e:	b590      	push	{r4, r7, lr}
 8013560:	b085      	sub	sp, #20
 8013562:	af00      	add	r7, sp, #0
 8013564:	6078      	str	r0, [r7, #4]
 8013566:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8013568:	2300      	movs	r3, #0
 801356a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801356c:	6878      	ldr	r0, [r7, #4]
 801356e:	f7f1 f866 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8013572:	4603      	mov	r3, r0
 8013574:	2b00      	cmp	r3, #0
 8013576:	bf0c      	ite	eq
 8013578:	2301      	moveq	r3, #1
 801357a:	2300      	movne	r3, #0
 801357c:	b2db      	uxtb	r3, r3
 801357e:	2b00      	cmp	r3, #0
 8013580:	d00b      	beq.n	801359a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3c>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8013582:	6838      	ldr	r0, [r7, #0]
 8013584:	f7fb f98d 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8013588:	4603      	mov	r3, r0
 801358a:	781c      	ldrb	r4, [r3, #0]
 801358c:	6878      	ldr	r0, [r7, #4]
 801358e:	f000 fa7d 	bl	8013a8c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013592:	4603      	mov	r3, r0
 8013594:	4622      	mov	r2, r4
 8013596:	701a      	strb	r2, [r3, #0]
 8013598:	e007      	b.n	80135aa <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIbEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4c>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801359a:	6838      	ldr	r0, [r7, #0]
 801359c:	f7fb f981 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80135a0:	4603      	mov	r3, r0
 80135a2:	4619      	mov	r1, r3
 80135a4:	6878      	ldr	r0, [r7, #4]
 80135a6:	f000 fa8d 	bl	8013ac4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80135aa:	687b      	ldr	r3, [r7, #4]
	}
 80135ac:	4618      	mov	r0, r3
 80135ae:	3714      	adds	r7, #20
 80135b0:	46bd      	mov	sp, r7
 80135b2:	bd90      	pop	{r4, r7, pc}

080135b4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 80135b4:	b590      	push	{r4, r7, lr}
 80135b6:	b085      	sub	sp, #20
 80135b8:	af00      	add	r7, sp, #0
 80135ba:	6078      	str	r0, [r7, #4]
 80135bc:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80135be:	2301      	movs	r3, #1
 80135c0:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80135c2:	6878      	ldr	r0, [r7, #4]
 80135c4:	f7f1 f83b 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 80135c8:	4603      	mov	r3, r0
 80135ca:	2b01      	cmp	r3, #1
 80135cc:	bf0c      	ite	eq
 80135ce:	2301      	moveq	r3, #1
 80135d0:	2300      	movne	r3, #0
 80135d2:	b2db      	uxtb	r3, r3
 80135d4:	2b00      	cmp	r3, #0
 80135d6:	d00a      	beq.n	80135ee <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80135d8:	6838      	ldr	r0, [r7, #0]
 80135da:	f7f2 fd0e 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80135de:	4603      	mov	r3, r0
 80135e0:	681c      	ldr	r4, [r3, #0]
 80135e2:	6878      	ldr	r0, [r7, #4]
 80135e4:	f7f3 fc1e 	bl	8006e24 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80135e8:	4603      	mov	r3, r0
 80135ea:	601c      	str	r4, [r3, #0]
 80135ec:	e007      	b.n	80135fe <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80135ee:	6838      	ldr	r0, [r7, #0]
 80135f0:	f7f2 fd03 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80135f4:	4603      	mov	r3, r0
 80135f6:	4619      	mov	r1, r3
 80135f8:	6878      	ldr	r0, [r7, #4]
 80135fa:	f000 fa7c 	bl	8013af6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 80135fe:	687b      	ldr	r3, [r7, #4]
	}
 8013600:	4618      	mov	r0, r3
 8013602:	3714      	adds	r7, #20
 8013604:	46bd      	mov	sp, r7
 8013606:	bd90      	pop	{r4, r7, pc}

08013608 <_ZSt3getIfJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8013608:	b580      	push	{r7, lr}
 801360a:	b082      	sub	sp, #8
 801360c:	af00      	add	r7, sp, #0
 801360e:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8013610:	6878      	ldr	r0, [r7, #4]
 8013612:	f7f6 fca1 	bl	8009f58 <_ZSt3getILj2EJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSA_>
 8013616:	4603      	mov	r3, r0
    }
 8013618:	4618      	mov	r0, r3
 801361a:	3708      	adds	r7, #8
 801361c:	46bd      	mov	sp, r7
 801361e:	bd80      	pop	{r7, pc}

08013620 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_>:
	operator=(_Tp&& __rhs)
 8013620:	b590      	push	{r4, r7, lr}
 8013622:	b085      	sub	sp, #20
 8013624:	af00      	add	r7, sp, #0
 8013626:	6078      	str	r0, [r7, #4]
 8013628:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801362a:	2302      	movs	r3, #2
 801362c:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801362e:	6878      	ldr	r0, [r7, #4]
 8013630:	f7f1 f805 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8013634:	4603      	mov	r3, r0
 8013636:	2b02      	cmp	r3, #2
 8013638:	bf0c      	ite	eq
 801363a:	2301      	moveq	r3, #1
 801363c:	2300      	movne	r3, #0
 801363e:	b2db      	uxtb	r3, r3
 8013640:	2b00      	cmp	r3, #0
 8013642:	d00a      	beq.n	801365a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8013644:	6838      	ldr	r0, [r7, #0]
 8013646:	f7f2 fcfa 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 801364a:	4603      	mov	r3, r0
 801364c:	681c      	ldr	r4, [r3, #0]
 801364e:	6878      	ldr	r0, [r7, #4]
 8013650:	f7f3 fc04 	bl	8006e5c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013654:	4603      	mov	r3, r0
 8013656:	601c      	str	r4, [r3, #0]
 8013658:	e007      	b.n	801366a <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIRfEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISI_SF_E15is_assignable_vIRSI_SF_EERSA_E4typeESG_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801365a:	6838      	ldr	r0, [r7, #0]
 801365c:	f7f2 fcef 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8013660:	4603      	mov	r3, r0
 8013662:	4619      	mov	r1, r3
 8013664:	6878      	ldr	r0, [r7, #4]
 8013666:	f000 fa5f 	bl	8013b28 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>
	  return *this;
 801366a:	687b      	ldr	r3, [r7, #4]
	}
 801366c:	4618      	mov	r0, r3
 801366e:	3714      	adds	r7, #20
 8013670:	46bd      	mov	sp, r7
 8013672:	bd90      	pop	{r4, r7, pc}

08013674 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_>:
	operator=(_Tp&& __rhs)
 8013674:	b590      	push	{r4, r7, lr}
 8013676:	b085      	sub	sp, #20
 8013678:	af00      	add	r7, sp, #0
 801367a:	6078      	str	r0, [r7, #4]
 801367c:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 801367e:	2303      	movs	r3, #3
 8013680:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8013682:	6878      	ldr	r0, [r7, #4]
 8013684:	f7f0 ffdb 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8013688:	4603      	mov	r3, r0
 801368a:	2b03      	cmp	r3, #3
 801368c:	bf0c      	ite	eq
 801368e:	2301      	moveq	r3, #1
 8013690:	2300      	movne	r3, #0
 8013692:	b2db      	uxtb	r3, r3
 8013694:	2b00      	cmp	r3, #0
 8013696:	d00c      	beq.n	80136b2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8013698:	6838      	ldr	r0, [r7, #0]
 801369a:	f7f6 fc1f 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801369e:	4604      	mov	r4, r0
 80136a0:	6878      	ldr	r0, [r7, #4]
 80136a2:	f000 fa5b 	bl	8013b5c <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80136a6:	4603      	mov	r3, r0
 80136a8:	4621      	mov	r1, r4
 80136aa:	4618      	mov	r0, r3
 80136ac:	f00c ff8f 	bl	80205ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 80136b0:	e007      	b.n	80136c2 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEaSIS5_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESA_E4typeEE18is_constructible_vISH_SE_E15is_assignable_vIRSH_SE_EERSA_E4typeESF_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80136b2:	6838      	ldr	r0, [r7, #0]
 80136b4:	f7f6 fc12 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 80136b8:	4603      	mov	r3, r0
 80136ba:	4619      	mov	r1, r3
 80136bc:	6878      	ldr	r0, [r7, #4]
 80136be:	f000 fa69 	bl	8013b94 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>
	  return *this;
 80136c2:	687b      	ldr	r3, [r7, #4]
	}
 80136c4:	4618      	mov	r0, r3
 80136c6:	3714      	adds	r7, #20
 80136c8:	46bd      	mov	sp, r7
 80136ca:	bd90      	pop	{r4, r7, pc}

080136cc <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80136cc:	b580      	push	{r7, lr}
 80136ce:	b082      	sub	sp, #8
 80136d0:	af00      	add	r7, sp, #0
 80136d2:	6078      	str	r0, [r7, #4]
 80136d4:	7039      	strb	r1, [r7, #0]
 80136d6:	687b      	ldr	r3, [r7, #4]
 80136d8:	4611      	mov	r1, r2
 80136da:	4618      	mov	r0, r3
 80136dc:	f000 fa91 	bl	8013c02 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80136e0:	687b      	ldr	r3, [r7, #4]
 80136e2:	4618      	mov	r0, r3
 80136e4:	3708      	adds	r7, #8
 80136e6:	46bd      	mov	sp, r7
 80136e8:	bd80      	pop	{r7, pc}

080136ea <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 80136ea:	b580      	push	{r7, lr}
 80136ec:	b082      	sub	sp, #8
 80136ee:	af00      	add	r7, sp, #0
 80136f0:	6078      	str	r0, [r7, #4]
 80136f2:	7039      	strb	r1, [r7, #0]
 80136f4:	687b      	ldr	r3, [r7, #4]
 80136f6:	4611      	mov	r1, r2
 80136f8:	4618      	mov	r0, r3
 80136fa:	f7ff ffe7 	bl	80136cc <_ZNSt8__detail9__variant15_Copy_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 80136fe:	687b      	ldr	r3, [r7, #4]
 8013700:	4618      	mov	r0, r3
 8013702:	3708      	adds	r7, #8
 8013704:	46bd      	mov	sp, r7
 8013706:	bd80      	pop	{r7, pc}

08013708 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8013708:	b580      	push	{r7, lr}
 801370a:	b082      	sub	sp, #8
 801370c:	af00      	add	r7, sp, #0
 801370e:	6078      	str	r0, [r7, #4]
 8013710:	7039      	strb	r1, [r7, #0]
 8013712:	687b      	ldr	r3, [r7, #4]
 8013714:	4611      	mov	r1, r2
 8013716:	4618      	mov	r0, r3
 8013718:	f7ff ffe7 	bl	80136ea <_ZNSt8__detail9__variant15_Move_ctor_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801371c:	687b      	ldr	r3, [r7, #4]
 801371e:	4618      	mov	r0, r3
 8013720:	3708      	adds	r7, #8
 8013722:	46bd      	mov	sp, r7
 8013724:	bd80      	pop	{r7, pc}

08013726 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
      using _Base::_Base;
 8013726:	b580      	push	{r7, lr}
 8013728:	b082      	sub	sp, #8
 801372a:	af00      	add	r7, sp, #0
 801372c:	6078      	str	r0, [r7, #4]
 801372e:	7039      	strb	r1, [r7, #0]
 8013730:	687b      	ldr	r3, [r7, #4]
 8013732:	4611      	mov	r1, r2
 8013734:	4618      	mov	r0, r3
 8013736:	f7ff ffe7 	bl	8013708 <_ZNSt8__detail9__variant17_Copy_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 801373a:	687b      	ldr	r3, [r7, #4]
 801373c:	4618      	mov	r0, r3
 801373e:	3708      	adds	r7, #8
 8013740:	46bd      	mov	sp, r7
 8013742:	bd80      	pop	{r7, pc}

08013744 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	_Variant_base(in_place_index_t<_Np> __i, _Args&&... __args)
 8013744:	b580      	push	{r7, lr}
 8013746:	b082      	sub	sp, #8
 8013748:	af00      	add	r7, sp, #0
 801374a:	6078      	str	r0, [r7, #4]
 801374c:	7039      	strb	r1, [r7, #0]
	: _Base(__i, std::forward<_Args>(__args)...)
 801374e:	687b      	ldr	r3, [r7, #4]
 8013750:	4611      	mov	r1, r2
 8013752:	4618      	mov	r0, r3
 8013754:	f7ff ffe7 	bl	8013726 <_ZNSt8__detail9__variant17_Move_assign_baseILb1EJP17Primal_expressionP10ExpressionEECI1NS0_16_Variant_storageILb1EJS3_S5_EEEILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
	{ }
 8013758:	687b      	ldr	r3, [r7, #4]
 801375a:	4618      	mov	r0, r3
 801375c:	3708      	adds	r7, #8
 801375e:	46bd      	mov	sp, r7
 8013760:	bd80      	pop	{r7, pc}

08013762 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1Ev>:
      _Variant_base()
 8013762:	b580      	push	{r7, lr}
 8013764:	b082      	sub	sp, #8
 8013766:	af00      	add	r7, sp, #0
 8013768:	6078      	str	r0, [r7, #4]
      : _Variant_base(in_place_index<0>) { }
 801376a:	4619      	mov	r1, r3
 801376c:	6878      	ldr	r0, [r7, #4]
 801376e:	f7ff ffe9 	bl	8013744 <_ZNSt8__detail9__variant13_Variant_baseIJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>
 8013772:	687b      	ldr	r3, [r7, #4]
 8013774:	4618      	mov	r0, r3
 8013776:	3708      	adds	r7, #8
 8013778:	46bd      	mov	sp, r7
 801377a:	bd80      	pop	{r7, pc}

0801377c <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 801377c:	b590      	push	{r4, r7, lr}
 801377e:	b085      	sub	sp, #20
 8013780:	af00      	add	r7, sp, #0
 8013782:	6078      	str	r0, [r7, #4]
 8013784:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8013786:	2301      	movs	r3, #1
 8013788:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 801378a:	6878      	ldr	r0, [r7, #4]
 801378c:	f7f0 ffa4 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 8013790:	4603      	mov	r3, r0
 8013792:	2b01      	cmp	r3, #1
 8013794:	bf0c      	ite	eq
 8013796:	2301      	moveq	r3, #1
 8013798:	2300      	movne	r3, #0
 801379a:	b2db      	uxtb	r3, r3
 801379c:	2b00      	cmp	r3, #0
 801379e:	d00a      	beq.n	80137b6 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80137a0:	6838      	ldr	r0, [r7, #0]
 80137a2:	f7f9 fdc3 	bl	800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80137a6:	4603      	mov	r3, r0
 80137a8:	681c      	ldr	r4, [r3, #0]
 80137aa:	6878      	ldr	r0, [r7, #4]
 80137ac:	f7f1 fb26 	bl	8004dfc <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 80137b0:	4603      	mov	r3, r0
 80137b2:	601c      	str	r4, [r3, #0]
 80137b4:	e007      	b.n	80137c6 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS3_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 80137b6:	6838      	ldr	r0, [r7, #0]
 80137b8:	f7f9 fdb8 	bl	800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80137bc:	4603      	mov	r3, r0
 80137be:	4619      	mov	r1, r3
 80137c0:	6878      	ldr	r0, [r7, #4]
 80137c2:	f000 fa30 	bl	8013c26 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 80137c6:	687b      	ldr	r3, [r7, #4]
	}
 80137c8:	4618      	mov	r0, r3
 80137ca:	3714      	adds	r7, #20
 80137cc:	46bd      	mov	sp, r7
 80137ce:	bd90      	pop	{r4, r7, pc}

080137d0 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_>:
	operator=(_Tp&& __rhs)
 80137d0:	b590      	push	{r4, r7, lr}
 80137d2:	b085      	sub	sp, #20
 80137d4:	af00      	add	r7, sp, #0
 80137d6:	6078      	str	r0, [r7, #4]
 80137d8:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 80137da:	2300      	movs	r3, #0
 80137dc:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 80137de:	6878      	ldr	r0, [r7, #4]
 80137e0:	f7f0 ff7a 	bl	80046d8 <_ZNKSt7variantIJP17Primal_expressionP10ExpressionEE5indexEv>
 80137e4:	4603      	mov	r3, r0
 80137e6:	2b00      	cmp	r3, #0
 80137e8:	bf0c      	ite	eq
 80137ea:	2301      	moveq	r3, #1
 80137ec:	2300      	movne	r3, #0
 80137ee:	b2db      	uxtb	r3, r3
 80137f0:	2b00      	cmp	r3, #0
 80137f2:	d00a      	beq.n	801380a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 80137f4:	6838      	ldr	r0, [r7, #0]
 80137f6:	f000 fa2f 	bl	8013c58 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80137fa:	4603      	mov	r3, r0
 80137fc:	681c      	ldr	r4, [r3, #0]
 80137fe:	6878      	ldr	r0, [r7, #4]
 8013800:	f7f1 fb3a 	bl	8004e78 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 8013804:	4603      	mov	r3, r0
 8013806:	601c      	str	r4, [r3, #0]
 8013808:	e007      	b.n	801381a <_ZNSt7variantIJP17Primal_expressionP10ExpressionEEaSIS1_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EES4_E4typeEE18is_constructible_vISB_S8_E15is_assignable_vIRSB_S8_EERS4_E4typeES9_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 801380a:	6838      	ldr	r0, [r7, #0]
 801380c:	f000 fa24 	bl	8013c58 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8013810:	4603      	mov	r3, r0
 8013812:	4619      	mov	r1, r3
 8013814:	6878      	ldr	r0, [r7, #4]
 8013816:	f000 fa2a 	bl	8013c6e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>
	  return *this;
 801381a:	687b      	ldr	r3, [r7, #4]
	}
 801381c:	4618      	mov	r0, r3
 801381e:	3714      	adds	r7, #20
 8013820:	46bd      	mov	sp, r7
 8013822:	bd90      	pop	{r4, r7, pc}

08013824 <_ZNSt6vectorI13mult_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 8013824:	b580      	push	{r7, lr}
 8013826:	b082      	sub	sp, #8
 8013828:	af00      	add	r7, sp, #0
 801382a:	6078      	str	r0, [r7, #4]
 801382c:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 801382e:	6838      	ldr	r0, [r7, #0]
 8013830:	f000 fa36 	bl	8013ca0 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 8013834:	4603      	mov	r3, r0
 8013836:	4619      	mov	r1, r3
 8013838:	6878      	ldr	r0, [r7, #4]
 801383a:	f000 fa3c 	bl	8013cb6 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 801383e:	bf00      	nop
 8013840:	3708      	adds	r7, #8
 8013842:	46bd      	mov	sp, r7
 8013844:	bd80      	pop	{r7, pc}

08013846 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8013846:	b580      	push	{r7, lr}
 8013848:	b082      	sub	sp, #8
 801384a:	af00      	add	r7, sp, #0
 801384c:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801384e:	6878      	ldr	r0, [r7, #4]
 8013850:	f000 fa63 	bl	8013d1a <_ZNSaIP16Power_expressionEC1Ev>
 8013854:	687b      	ldr	r3, [r7, #4]
 8013856:	4618      	mov	r0, r3
 8013858:	f000 fa6b 	bl	8013d32 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 801385c:	687b      	ldr	r3, [r7, #4]
 801385e:	4618      	mov	r0, r3
 8013860:	3708      	adds	r7, #8
 8013862:	46bd      	mov	sp, r7
 8013864:	bd80      	pop	{r7, pc}

08013866 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 8013866:	b580      	push	{r7, lr}
 8013868:	b082      	sub	sp, #8
 801386a:	af00      	add	r7, sp, #0
 801386c:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 801386e:	6878      	ldr	r0, [r7, #4]
 8013870:	f000 fa73 	bl	8013d5a <_ZNSaI13mult_operatorEC1Ev>
 8013874:	687b      	ldr	r3, [r7, #4]
 8013876:	4618      	mov	r0, r3
 8013878:	f000 fa7b 	bl	8013d72 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 801387c:	687b      	ldr	r3, [r7, #4]
 801387e:	4618      	mov	r0, r3
 8013880:	3708      	adds	r7, #8
 8013882:	46bd      	mov	sp, r7
 8013884:	bd80      	pop	{r7, pc}

08013886 <_ZNSt6vectorIP16Power_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 8013886:	b580      	push	{r7, lr}
 8013888:	b082      	sub	sp, #8
 801388a:	af00      	add	r7, sp, #0
 801388c:	6078      	str	r0, [r7, #4]
 801388e:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013890:	6838      	ldr	r0, [r7, #0]
 8013892:	f000 fa82 	bl	8013d9a <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 8013896:	4603      	mov	r3, r0
 8013898:	4619      	mov	r1, r3
 801389a:	6878      	ldr	r0, [r7, #4]
 801389c:	f000 fa88 	bl	8013db0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 80138a0:	bf00      	nop
 80138a2:	3708      	adds	r7, #8
 80138a4:	46bd      	mov	sp, r7
 80138a6:	bd80      	pop	{r7, pc}

080138a8 <_ZNSt6vectorI12sum_operatorSaIS0_EE9push_backEOS0_>:
      push_back(value_type&& __x)
 80138a8:	b580      	push	{r7, lr}
 80138aa:	b082      	sub	sp, #8
 80138ac:	af00      	add	r7, sp, #0
 80138ae:	6078      	str	r0, [r7, #4]
 80138b0:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 80138b2:	6838      	ldr	r0, [r7, #0]
 80138b4:	f000 faae 	bl	8013e14 <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>
 80138b8:	4603      	mov	r3, r0
 80138ba:	4619      	mov	r1, r3
 80138bc:	6878      	ldr	r0, [r7, #4]
 80138be:	f000 fab4 	bl	8013e2a <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>
 80138c2:	bf00      	nop
 80138c4:	3708      	adds	r7, #8
 80138c6:	46bd      	mov	sp, r7
 80138c8:	bd80      	pop	{r7, pc}

080138ca <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 80138ca:	b580      	push	{r7, lr}
 80138cc:	b082      	sub	sp, #8
 80138ce:	af00      	add	r7, sp, #0
 80138d0:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 80138d2:	6878      	ldr	r0, [r7, #4]
 80138d4:	f000 fadb 	bl	8013e8e <_ZNSaIP19Multiply_expressionEC1Ev>
 80138d8:	687b      	ldr	r3, [r7, #4]
 80138da:	4618      	mov	r0, r3
 80138dc:	f000 fae3 	bl	8013ea6 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 80138e0:	687b      	ldr	r3, [r7, #4]
 80138e2:	4618      	mov	r0, r3
 80138e4:	3708      	adds	r7, #8
 80138e6:	46bd      	mov	sp, r7
 80138e8:	bd80      	pop	{r7, pc}

080138ea <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 80138ea:	b580      	push	{r7, lr}
 80138ec:	b082      	sub	sp, #8
 80138ee:	af00      	add	r7, sp, #0
 80138f0:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 80138f2:	6878      	ldr	r0, [r7, #4]
 80138f4:	f000 faeb 	bl	8013ece <_ZNSaI12sum_operatorEC1Ev>
 80138f8:	687b      	ldr	r3, [r7, #4]
 80138fa:	4618      	mov	r0, r3
 80138fc:	f000 faf3 	bl	8013ee6 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
 8013900:	687b      	ldr	r3, [r7, #4]
 8013902:	4618      	mov	r0, r3
 8013904:	3708      	adds	r7, #8
 8013906:	46bd      	mov	sp, r7
 8013908:	bd80      	pop	{r7, pc}

0801390a <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801390a:	b580      	push	{r7, lr}
 801390c:	b082      	sub	sp, #8
 801390e:	af00      	add	r7, sp, #0
 8013910:	6078      	str	r0, [r7, #4]
 8013912:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013914:	6838      	ldr	r0, [r7, #0]
 8013916:	f000 fafa 	bl	8013f0e <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801391a:	4603      	mov	r3, r0
 801391c:	4619      	mov	r1, r3
 801391e:	6878      	ldr	r0, [r7, #4]
 8013920:	f000 fb00 	bl	8013f24 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8013924:	bf00      	nop
 8013926:	3708      	adds	r7, #8
 8013928:	46bd      	mov	sp, r7
 801392a:	bd80      	pop	{r7, pc}

0801392c <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801392c:	b580      	push	{r7, lr}
 801392e:	b082      	sub	sp, #8
 8013930:	af00      	add	r7, sp, #0
 8013932:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8013934:	6878      	ldr	r0, [r7, #4]
 8013936:	f000 fb27 	bl	8013f88 <_ZNSaIP18Compare_expressionEC1Ev>
 801393a:	687b      	ldr	r3, [r7, #4]
 801393c:	4618      	mov	r0, r3
 801393e:	f000 fb2f 	bl	8013fa0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 8013942:	687b      	ldr	r3, [r7, #4]
 8013944:	4618      	mov	r0, r3
 8013946:	3708      	adds	r7, #8
 8013948:	46bd      	mov	sp, r7
 801394a:	bd80      	pop	{r7, pc}

0801394c <_ZNSt6vectorIP18Compare_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801394c:	b580      	push	{r7, lr}
 801394e:	b082      	sub	sp, #8
 8013950:	af00      	add	r7, sp, #0
 8013952:	6078      	str	r0, [r7, #4]
 8013954:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013956:	6838      	ldr	r0, [r7, #0]
 8013958:	f000 fb36 	bl	8013fc8 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801395c:	4603      	mov	r3, r0
 801395e:	4619      	mov	r1, r3
 8013960:	6878      	ldr	r0, [r7, #4]
 8013962:	f000 fb3c 	bl	8013fde <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 8013966:	bf00      	nop
 8013968:	3708      	adds	r7, #8
 801396a:	46bd      	mov	sp, r7
 801396c:	bd80      	pop	{r7, pc}

0801396e <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 801396e:	b580      	push	{r7, lr}
 8013970:	b082      	sub	sp, #8
 8013972:	af00      	add	r7, sp, #0
 8013974:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 8013976:	6878      	ldr	r0, [r7, #4]
 8013978:	f000 fb63 	bl	8014042 <_ZNSaIP14And_expressionEC1Ev>
 801397c:	687b      	ldr	r3, [r7, #4]
 801397e:	4618      	mov	r0, r3
 8013980:	f000 fb6b 	bl	801405a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
 8013984:	687b      	ldr	r3, [r7, #4]
 8013986:	4618      	mov	r0, r3
 8013988:	3708      	adds	r7, #8
 801398a:	46bd      	mov	sp, r7
 801398c:	bd80      	pop	{r7, pc}

0801398e <_ZNSt6vectorIP14And_expressionSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
 801398e:	b580      	push	{r7, lr}
 8013990:	b082      	sub	sp, #8
 8013992:	af00      	add	r7, sp, #0
 8013994:	6078      	str	r0, [r7, #4]
 8013996:	6039      	str	r1, [r7, #0]
      { emplace_back(std::move(__x)); }
 8013998:	6838      	ldr	r0, [r7, #0]
 801399a:	f000 fb72 	bl	8014082 <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>
 801399e:	4603      	mov	r3, r0
 80139a0:	4619      	mov	r1, r3
 80139a2:	6878      	ldr	r0, [r7, #4]
 80139a4:	f000 fb78 	bl	8014098 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
 80139a8:	bf00      	nop
 80139aa:	3708      	adds	r7, #8
 80139ac:	46bd      	mov	sp, r7
 80139ae:	bd80      	pop	{r7, pc}

080139b0 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj5EJS9_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80139b0:	b580      	push	{r7, lr}
 80139b2:	b082      	sub	sp, #8
 80139b4:	af00      	add	r7, sp, #0
 80139b6:	6078      	str	r0, [r7, #4]
 80139b8:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 80139ba:	687b      	ldr	r3, [r7, #4]
 80139bc:	4618      	mov	r0, r3
 80139be:	f7f1 f8bd 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 80139c2:	6838      	ldr	r0, [r7, #0]
 80139c4:	f7f9 f920 	bl	800cc08 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 80139c8:	4603      	mov	r3, r0
 80139ca:	4619      	mov	r1, r3
 80139cc:	6878      	ldr	r0, [r7, #4]
 80139ce:	f000 fb95 	bl	80140fc <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 80139d2:	6878      	ldr	r0, [r7, #4]
 80139d4:	f7f1 f9c2 	bl	8004d5c <_ZSt3getILj5EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 80139d8:	4603      	mov	r3, r0
	}
 80139da:	4618      	mov	r0, r3
 80139dc:	3708      	adds	r7, #8
 80139de:	46bd      	mov	sp, r7
 80139e0:	bd80      	pop	{r7, pc}

080139e2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80139e2:	b480      	push	{r7}
 80139e4:	b083      	sub	sp, #12
 80139e6:	af00      	add	r7, sp, #0
 80139e8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80139ea:	687b      	ldr	r3, [r7, #4]
 80139ec:	4618      	mov	r0, r3
 80139ee:	370c      	adds	r7, #12
 80139f0:	46bd      	mov	sp, r7
 80139f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80139f6:	4770      	bx	lr

080139f8 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj4EJS7_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 80139f8:	b580      	push	{r7, lr}
 80139fa:	b082      	sub	sp, #8
 80139fc:	af00      	add	r7, sp, #0
 80139fe:	6078      	str	r0, [r7, #4]
 8013a00:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8013a02:	687b      	ldr	r3, [r7, #4]
 8013a04:	4618      	mov	r0, r3
 8013a06:	f7f1 f899 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8013a0a:	6838      	ldr	r0, [r7, #0]
 8013a0c:	f7ff ffe9 	bl	80139e2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 8013a10:	4603      	mov	r3, r0
 8013a12:	4619      	mov	r1, r3
 8013a14:	6878      	ldr	r0, [r7, #4]
 8013a16:	f000 fb90 	bl	801413a <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8013a1a:	6878      	ldr	r0, [r7, #4]
 8013a1c:	f7f1 f906 	bl	8004c2c <_ZSt3getILj4EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013a20:	4603      	mov	r3, r0
	}
 8013a22:	4618      	mov	r0, r3
 8013a24:	3708      	adds	r7, #8
 8013a26:	46bd      	mov	sp, r7
 8013a28:	bd80      	pop	{r7, pc}

08013a2a <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8013a2a:	b480      	push	{r7}
 8013a2c:	b083      	sub	sp, #12
 8013a2e:	af00      	add	r7, sp, #0
 8013a30:	6078      	str	r0, [r7, #4]
 8013a32:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 8013a34:	687b      	ldr	r3, [r7, #4]
 8013a36:	2200      	movs	r2, #0
 8013a38:	701a      	strb	r2, [r3, #0]
	{ }
 8013a3a:	687b      	ldr	r3, [r7, #4]
 8013a3c:	4618      	mov	r0, r3
 8013a3e:	370c      	adds	r7, #12
 8013a40:	46bd      	mov	sp, r7
 8013a42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013a46:	4770      	bx	lr

08013a48 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8013a48:	b580      	push	{r7, lr}
 8013a4a:	b082      	sub	sp, #8
 8013a4c:	af00      	add	r7, sp, #0
 8013a4e:	6078      	str	r0, [r7, #4]
 8013a50:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8013a52:	687b      	ldr	r3, [r7, #4]
 8013a54:	4611      	mov	r1, r2
 8013a56:	4618      	mov	r0, r3
 8013a58:	f7ff ffe7 	bl	8013a2a <_ZNSt8__detail9__variant14_UninitializedIbLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8013a5c:	687b      	ldr	r3, [r7, #4]
 8013a5e:	4618      	mov	r0, r3
 8013a60:	3708      	adds	r7, #8
 8013a62:	46bd      	mov	sp, r7
 8013a64:	bd80      	pop	{r7, pc}

08013a66 <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8013a66:	b580      	push	{r7, lr}
 8013a68:	b082      	sub	sp, #8
 8013a6a:	af00      	add	r7, sp, #0
 8013a6c:	6078      	str	r0, [r7, #4]
 8013a6e:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8013a70:	687b      	ldr	r3, [r7, #4]
 8013a72:	4611      	mov	r1, r2
 8013a74:	4618      	mov	r0, r3
 8013a76:	f7ff ffe7 	bl	8013a48 <_ZNSt8__detail9__variant15_Variadic_unionIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 8013a7a:	687b      	ldr	r3, [r7, #4]
 8013a7c:	2200      	movs	r2, #0
 8013a7e:	761a      	strb	r2, [r3, #24]
	{ }
 8013a80:	687b      	ldr	r3, [r7, #4]
 8013a82:	4618      	mov	r0, r3
 8013a84:	3708      	adds	r7, #8
 8013a86:	46bd      	mov	sp, r7
 8013a88:	bd80      	pop	{r7, pc}
	...

08013a8c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8013a8c:	b580      	push	{r7, lr}
 8013a8e:	b082      	sub	sp, #8
 8013a90:	af00      	add	r7, sp, #0
 8013a92:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8013a94:	6878      	ldr	r0, [r7, #4]
 8013a96:	f7f0 fdd2 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8013a9a:	4603      	mov	r3, r0
 8013a9c:	2b00      	cmp	r3, #0
 8013a9e:	bf14      	ite	ne
 8013aa0:	2301      	movne	r3, #1
 8013aa2:	2300      	moveq	r3, #0
 8013aa4:	b2db      	uxtb	r3, r3
 8013aa6:	2b00      	cmp	r3, #0
 8013aa8:	d002      	beq.n	8013ab0 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8013aaa:	4805      	ldr	r0, [pc, #20]	; (8013ac0 <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8013aac:	f7f0 fb8c 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8013ab0:	6878      	ldr	r0, [r7, #4]
 8013ab2:	f7f1 fbf7 	bl	80052a4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8013ab6:	4603      	mov	r3, r0
    }
 8013ab8:	4618      	mov	r0, r3
 8013aba:	3708      	adds	r7, #8
 8013abc:	46bd      	mov	sp, r7
 8013abe:	bd80      	pop	{r7, pc}
 8013ac0:	08024f1c 	.word	0x08024f1c

08013ac4 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj0EJbEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8013ac4:	b580      	push	{r7, lr}
 8013ac6:	b082      	sub	sp, #8
 8013ac8:	af00      	add	r7, sp, #0
 8013aca:	6078      	str	r0, [r7, #4]
 8013acc:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8013ace:	687b      	ldr	r3, [r7, #4]
 8013ad0:	4618      	mov	r0, r3
 8013ad2:	f7f1 f833 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8013ad6:	6838      	ldr	r0, [r7, #0]
 8013ad8:	f7fa fee3 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8013adc:	4603      	mov	r3, r0
 8013ade:	4619      	mov	r1, r3
 8013ae0:	6878      	ldr	r0, [r7, #4]
 8013ae2:	f000 fb49 	bl	8014178 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8013ae6:	6878      	ldr	r0, [r7, #4]
 8013ae8:	f7ff ffd0 	bl	8013a8c <_ZSt3getILj0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013aec:	4603      	mov	r3, r0
	}
 8013aee:	4618      	mov	r0, r3
 8013af0:	3708      	adds	r7, #8
 8013af2:	46bd      	mov	sp, r7
 8013af4:	bd80      	pop	{r7, pc}

08013af6 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj1EJRiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 8013af6:	b580      	push	{r7, lr}
 8013af8:	b082      	sub	sp, #8
 8013afa:	af00      	add	r7, sp, #0
 8013afc:	6078      	str	r0, [r7, #4]
 8013afe:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8013b00:	687b      	ldr	r3, [r7, #4]
 8013b02:	4618      	mov	r0, r3
 8013b04:	f7f1 f81a 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8013b08:	6838      	ldr	r0, [r7, #0]
 8013b0a:	f7f2 fa76 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 8013b0e:	4603      	mov	r3, r0
 8013b10:	4619      	mov	r1, r3
 8013b12:	6878      	ldr	r0, [r7, #4]
 8013b14:	f000 fb50 	bl	80141b8 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8013b18:	6878      	ldr	r0, [r7, #4]
 8013b1a:	f7f3 f983 	bl	8006e24 <_ZSt3getILj1EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013b1e:	4603      	mov	r3, r0
	}
 8013b20:	4618      	mov	r0, r3
 8013b22:	3708      	adds	r7, #8
 8013b24:	46bd      	mov	sp, r7
 8013b26:	bd80      	pop	{r7, pc}

08013b28 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj2EJRfEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSG_E4typeEDpOSH_>:
	emplace(_Args&&... __args)
 8013b28:	b580      	push	{r7, lr}
 8013b2a:	b082      	sub	sp, #8
 8013b2c:	af00      	add	r7, sp, #0
 8013b2e:	6078      	str	r0, [r7, #4]
 8013b30:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8013b32:	687b      	ldr	r3, [r7, #4]
 8013b34:	4618      	mov	r0, r3
 8013b36:	f7f1 f801 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8013b3a:	6838      	ldr	r0, [r7, #0]
 8013b3c:	f7f2 fa7f 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8013b40:	4603      	mov	r3, r0
 8013b42:	4619      	mov	r1, r3
 8013b44:	6878      	ldr	r0, [r7, #4]
 8013b46:	f000 fb56 	bl	80141f6 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8013b4a:	6878      	ldr	r0, [r7, #4]
 8013b4c:	f7f3 f986 	bl	8006e5c <_ZSt3getILj2EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013b50:	4603      	mov	r3, r0
	}
 8013b52:	4618      	mov	r0, r3
 8013b54:	3708      	adds	r7, #8
 8013b56:	46bd      	mov	sp, r7
 8013b58:	bd80      	pop	{r7, pc}
	...

08013b5c <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>:
    get(variant<_Types...>& __v)
 8013b5c:	b580      	push	{r7, lr}
 8013b5e:	b082      	sub	sp, #8
 8013b60:	af00      	add	r7, sp, #0
 8013b62:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8013b64:	6878      	ldr	r0, [r7, #4]
 8013b66:	f7f0 fd6a 	bl	800463e <_ZNKSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE5indexEv>
 8013b6a:	4603      	mov	r3, r0
 8013b6c:	2b03      	cmp	r3, #3
 8013b6e:	bf14      	ite	ne
 8013b70:	2301      	movne	r3, #1
 8013b72:	2300      	moveq	r3, #0
 8013b74:	b2db      	uxtb	r3, r3
 8013b76:	2b00      	cmp	r3, #0
 8013b78:	d002      	beq.n	8013b80 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x24>
	__throw_bad_variant_access("Unexpected index");
 8013b7a:	4805      	ldr	r0, [pc, #20]	; (8013b90 <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_+0x34>)
 8013b7c:	f7f0 fb24 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8013b80:	6878      	ldr	r0, [r7, #4]
 8013b82:	f7f1 fd63 	bl	800564c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8013b86:	4603      	mov	r3, r0
    }
 8013b88:	4618      	mov	r0, r3
 8013b8a:	3708      	adds	r7, #8
 8013b8c:	46bd      	mov	sp, r7
 8013b8e:	bd80      	pop	{r7, pc}
 8013b90:	08024f1c 	.word	0x08024f1c

08013b94 <_ZNSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE7emplaceILj3EJS5_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESA_E4typeEDpT0_EERSF_E4typeEDpOSG_>:
	emplace(_Args&&... __args)
 8013b94:	b580      	push	{r7, lr}
 8013b96:	b082      	sub	sp, #8
 8013b98:	af00      	add	r7, sp, #0
 8013b9a:	6078      	str	r0, [r7, #4]
 8013b9c:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8013b9e:	687b      	ldr	r3, [r7, #4]
 8013ba0:	4618      	mov	r0, r3
 8013ba2:	f7f0 ffcb 	bl	8004b3c <_ZNSt8__detail9__variant16_Variant_storageILb0EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8013ba6:	6838      	ldr	r0, [r7, #0]
 8013ba8:	f7f6 f998 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8013bac:	4603      	mov	r3, r0
 8013bae:	4619      	mov	r1, r3
 8013bb0:	6878      	ldr	r0, [r7, #4]
 8013bb2:	f000 fb3f 	bl	8014234 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8013bb6:	6878      	ldr	r0, [r7, #4]
 8013bb8:	f7ff ffd0 	bl	8013b5c <_ZSt3getILj3EJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSE_>
 8013bbc:	4603      	mov	r3, r0
	}
 8013bbe:	4618      	mov	r0, r3
 8013bc0:	3708      	adds	r7, #8
 8013bc2:	46bd      	mov	sp, r7
 8013bc4:	bd80      	pop	{r7, pc}

08013bc6 <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
 8013bc6:	b480      	push	{r7}
 8013bc8:	b083      	sub	sp, #12
 8013bca:	af00      	add	r7, sp, #0
 8013bcc:	6078      	str	r0, [r7, #4]
 8013bce:	7039      	strb	r1, [r7, #0]
	: _M_storage(std::forward<_Args>(__args)...)
 8013bd0:	687b      	ldr	r3, [r7, #4]
 8013bd2:	2200      	movs	r2, #0
 8013bd4:	601a      	str	r2, [r3, #0]
	{ }
 8013bd6:	687b      	ldr	r3, [r7, #4]
 8013bd8:	4618      	mov	r0, r3
 8013bda:	370c      	adds	r7, #12
 8013bdc:	46bd      	mov	sp, r7
 8013bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013be2:	4770      	bx	lr

08013be4 <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>:
	constexpr _Variadic_union(in_place_index_t<0>, _Args&&... __args)
 8013be4:	b580      	push	{r7, lr}
 8013be6:	b082      	sub	sp, #8
 8013be8:	af00      	add	r7, sp, #0
 8013bea:	6078      	str	r0, [r7, #4]
 8013bec:	7039      	strb	r1, [r7, #0]
	: _M_first(in_place_index<0>, std::forward<_Args>(__args)...)
 8013bee:	687b      	ldr	r3, [r7, #4]
 8013bf0:	4611      	mov	r1, r2
 8013bf2:	4618      	mov	r0, r3
 8013bf4:	f7ff ffe7 	bl	8013bc6 <_ZNSt8__detail9__variant14_UninitializedIP17Primal_expressionLb1EEC1IJEEESt16in_place_index_tILj0EEDpOT_>
	{ }
 8013bf8:	687b      	ldr	r3, [r7, #4]
 8013bfa:	4618      	mov	r0, r3
 8013bfc:	3708      	adds	r7, #8
 8013bfe:	46bd      	mov	sp, r7
 8013c00:	bd80      	pop	{r7, pc}

08013c02 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEEC1ILj0EJEEESt16in_place_index_tIXT_EEDpOT0_>:
	constexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
 8013c02:	b580      	push	{r7, lr}
 8013c04:	b082      	sub	sp, #8
 8013c06:	af00      	add	r7, sp, #0
 8013c08:	6078      	str	r0, [r7, #4]
 8013c0a:	7039      	strb	r1, [r7, #0]
	_M_index(_Np)
 8013c0c:	687b      	ldr	r3, [r7, #4]
 8013c0e:	4611      	mov	r1, r2
 8013c10:	4618      	mov	r0, r3
 8013c12:	f7ff ffe7 	bl	8013be4 <_ZNSt8__detail9__variant15_Variadic_unionIJP17Primal_expressionP10ExpressionEEC1IJEEESt16in_place_index_tILj0EEDpOT_>
 8013c16:	687b      	ldr	r3, [r7, #4]
 8013c18:	2200      	movs	r2, #0
 8013c1a:	711a      	strb	r2, [r3, #4]
	{ }
 8013c1c:	687b      	ldr	r3, [r7, #4]
 8013c1e:	4618      	mov	r0, r3
 8013c20:	3708      	adds	r7, #8
 8013c22:	46bd      	mov	sp, r7
 8013c24:	bd80      	pop	{r7, pc}

08013c26 <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj1EJS3_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 8013c26:	b580      	push	{r7, lr}
 8013c28:	b082      	sub	sp, #8
 8013c2a:	af00      	add	r7, sp, #0
 8013c2c:	6078      	str	r0, [r7, #4]
 8013c2e:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8013c30:	687b      	ldr	r3, [r7, #4]
 8013c32:	4618      	mov	r0, r3
 8013c34:	f000 fb1f 	bl	8014276 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8013c38:	6838      	ldr	r0, [r7, #0]
 8013c3a:	f7f9 fb77 	bl	800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8013c3e:	4603      	mov	r3, r0
 8013c40:	4619      	mov	r1, r3
 8013c42:	6878      	ldr	r0, [r7, #4]
 8013c44:	f000 fb24 	bl	8014290 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8013c48:	6878      	ldr	r0, [r7, #4]
 8013c4a:	f7f1 f8d7 	bl	8004dfc <_ZSt3getILj1EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 8013c4e:	4603      	mov	r3, r0
	}
 8013c50:	4618      	mov	r0, r3
 8013c52:	3708      	adds	r7, #8
 8013c54:	46bd      	mov	sp, r7
 8013c56:	bd80      	pop	{r7, pc}

08013c58 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8013c58:	b480      	push	{r7}
 8013c5a:	b083      	sub	sp, #12
 8013c5c:	af00      	add	r7, sp, #0
 8013c5e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8013c60:	687b      	ldr	r3, [r7, #4]
 8013c62:	4618      	mov	r0, r3
 8013c64:	370c      	adds	r7, #12
 8013c66:	46bd      	mov	sp, r7
 8013c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013c6c:	4770      	bx	lr

08013c6e <_ZNSt7variantIJP17Primal_expressionP10ExpressionEE7emplaceILj0EJS1_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ES4_E4typeEDpT0_EERS9_E4typeEDpOSA_>:
	emplace(_Args&&... __args)
 8013c6e:	b580      	push	{r7, lr}
 8013c70:	b082      	sub	sp, #8
 8013c72:	af00      	add	r7, sp, #0
 8013c74:	6078      	str	r0, [r7, #4]
 8013c76:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8013c78:	687b      	ldr	r3, [r7, #4]
 8013c7a:	4618      	mov	r0, r3
 8013c7c:	f000 fafb 	bl	8014276 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 8013c80:	6838      	ldr	r0, [r7, #0]
 8013c82:	f7ff ffe9 	bl	8013c58 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8013c86:	4603      	mov	r3, r0
 8013c88:	4619      	mov	r1, r3
 8013c8a:	6878      	ldr	r0, [r7, #4]
 8013c8c:	f000 fb1f 	bl	80142ce <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 8013c90:	6878      	ldr	r0, [r7, #4]
 8013c92:	f7f1 f8f1 	bl	8004e78 <_ZSt3getILj0EJP17Primal_expressionP10ExpressionEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERS8_>
 8013c96:	4603      	mov	r3, r0
	}
 8013c98:	4618      	mov	r0, r3
 8013c9a:	3708      	adds	r7, #8
 8013c9c:	46bd      	mov	sp, r7
 8013c9e:	bd80      	pop	{r7, pc}

08013ca0 <_ZSt4moveIR13mult_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 8013ca0:	b480      	push	{r7}
 8013ca2:	b083      	sub	sp, #12
 8013ca4:	af00      	add	r7, sp, #0
 8013ca6:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8013ca8:	687b      	ldr	r3, [r7, #4]
 8013caa:	4618      	mov	r0, r3
 8013cac:	370c      	adds	r7, #12
 8013cae:	46bd      	mov	sp, r7
 8013cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013cb4:	4770      	bx	lr

08013cb6 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 8013cb6:	b5b0      	push	{r4, r5, r7, lr}
 8013cb8:	b082      	sub	sp, #8
 8013cba:	af00      	add	r7, sp, #0
 8013cbc:	6078      	str	r0, [r7, #4]
 8013cbe:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8013cc0:	687b      	ldr	r3, [r7, #4]
 8013cc2:	685a      	ldr	r2, [r3, #4]
 8013cc4:	687b      	ldr	r3, [r7, #4]
 8013cc6:	689b      	ldr	r3, [r3, #8]
 8013cc8:	429a      	cmp	r2, r3
 8013cca:	d011      	beq.n	8013cf0 <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8013ccc:	687c      	ldr	r4, [r7, #4]
 8013cce:	687b      	ldr	r3, [r7, #4]
 8013cd0:	685d      	ldr	r5, [r3, #4]
 8013cd2:	6838      	ldr	r0, [r7, #0]
 8013cd4:	f000 fb1a 	bl	801430c <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 8013cd8:	4603      	mov	r3, r0
 8013cda:	461a      	mov	r2, r3
 8013cdc:	4629      	mov	r1, r5
 8013cde:	4620      	mov	r0, r4
 8013ce0:	f000 fb1f 	bl	8014322 <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8013ce4:	687b      	ldr	r3, [r7, #4]
 8013ce6:	685b      	ldr	r3, [r3, #4]
 8013ce8:	1c5a      	adds	r2, r3, #1
 8013cea:	687b      	ldr	r3, [r7, #4]
 8013cec:	605a      	str	r2, [r3, #4]
 8013cee:	e00c      	b.n	8013d0a <_ZNSt6vectorI13mult_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8013cf0:	6878      	ldr	r0, [r7, #4]
 8013cf2:	f000 fb29 	bl	8014348 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 8013cf6:	4604      	mov	r4, r0
 8013cf8:	6838      	ldr	r0, [r7, #0]
 8013cfa:	f000 fb07 	bl	801430c <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 8013cfe:	4603      	mov	r3, r0
 8013d00:	461a      	mov	r2, r3
 8013d02:	4621      	mov	r1, r4
 8013d04:	6878      	ldr	r0, [r7, #4]
 8013d06:	f000 fb31 	bl	801436c <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 8013d0a:	6878      	ldr	r0, [r7, #4]
 8013d0c:	f000 fba8 	bl	8014460 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>
 8013d10:	4603      	mov	r3, r0
      }
 8013d12:	4618      	mov	r0, r3
 8013d14:	3708      	adds	r7, #8
 8013d16:	46bd      	mov	sp, r7
 8013d18:	bdb0      	pop	{r4, r5, r7, pc}

08013d1a <_ZNSaIP16Power_expressionEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8013d1a:	b580      	push	{r7, lr}
 8013d1c:	b082      	sub	sp, #8
 8013d1e:	af00      	add	r7, sp, #0
 8013d20:	6078      	str	r0, [r7, #4]
 8013d22:	6878      	ldr	r0, [r7, #4]
 8013d24:	f000 fbb7 	bl	8014496 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>
 8013d28:	687b      	ldr	r3, [r7, #4]
 8013d2a:	4618      	mov	r0, r3
 8013d2c:	3708      	adds	r7, #8
 8013d2e:	46bd      	mov	sp, r7
 8013d30:	bd80      	pop	{r7, pc}

08013d32 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8013d32:	b480      	push	{r7}
 8013d34:	b083      	sub	sp, #12
 8013d36:	af00      	add	r7, sp, #0
 8013d38:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8013d3a:	687b      	ldr	r3, [r7, #4]
 8013d3c:	2200      	movs	r2, #0
 8013d3e:	601a      	str	r2, [r3, #0]
 8013d40:	687b      	ldr	r3, [r7, #4]
 8013d42:	2200      	movs	r2, #0
 8013d44:	605a      	str	r2, [r3, #4]
 8013d46:	687b      	ldr	r3, [r7, #4]
 8013d48:	2200      	movs	r2, #0
 8013d4a:	609a      	str	r2, [r3, #8]
	{ }
 8013d4c:	687b      	ldr	r3, [r7, #4]
 8013d4e:	4618      	mov	r0, r3
 8013d50:	370c      	adds	r7, #12
 8013d52:	46bd      	mov	sp, r7
 8013d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013d58:	4770      	bx	lr

08013d5a <_ZNSaI13mult_operatorEC1Ev>:
 8013d5a:	b580      	push	{r7, lr}
 8013d5c:	b082      	sub	sp, #8
 8013d5e:	af00      	add	r7, sp, #0
 8013d60:	6078      	str	r0, [r7, #4]
 8013d62:	6878      	ldr	r0, [r7, #4]
 8013d64:	f000 fba2 	bl	80144ac <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>
 8013d68:	687b      	ldr	r3, [r7, #4]
 8013d6a:	4618      	mov	r0, r3
 8013d6c:	3708      	adds	r7, #8
 8013d6e:	46bd      	mov	sp, r7
 8013d70:	bd80      	pop	{r7, pc}

08013d72 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8013d72:	b480      	push	{r7}
 8013d74:	b083      	sub	sp, #12
 8013d76:	af00      	add	r7, sp, #0
 8013d78:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8013d7a:	687b      	ldr	r3, [r7, #4]
 8013d7c:	2200      	movs	r2, #0
 8013d7e:	601a      	str	r2, [r3, #0]
 8013d80:	687b      	ldr	r3, [r7, #4]
 8013d82:	2200      	movs	r2, #0
 8013d84:	605a      	str	r2, [r3, #4]
 8013d86:	687b      	ldr	r3, [r7, #4]
 8013d88:	2200      	movs	r2, #0
 8013d8a:	609a      	str	r2, [r3, #8]
	{ }
 8013d8c:	687b      	ldr	r3, [r7, #4]
 8013d8e:	4618      	mov	r0, r3
 8013d90:	370c      	adds	r7, #12
 8013d92:	46bd      	mov	sp, r7
 8013d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013d98:	4770      	bx	lr

08013d9a <_ZSt4moveIRP16Power_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8013d9a:	b480      	push	{r7}
 8013d9c:	b083      	sub	sp, #12
 8013d9e:	af00      	add	r7, sp, #0
 8013da0:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8013da2:	687b      	ldr	r3, [r7, #4]
 8013da4:	4618      	mov	r0, r3
 8013da6:	370c      	adds	r7, #12
 8013da8:	46bd      	mov	sp, r7
 8013daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013dae:	4770      	bx	lr

08013db0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8013db0:	b5b0      	push	{r4, r5, r7, lr}
 8013db2:	b082      	sub	sp, #8
 8013db4:	af00      	add	r7, sp, #0
 8013db6:	6078      	str	r0, [r7, #4]
 8013db8:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8013dba:	687b      	ldr	r3, [r7, #4]
 8013dbc:	685a      	ldr	r2, [r3, #4]
 8013dbe:	687b      	ldr	r3, [r7, #4]
 8013dc0:	689b      	ldr	r3, [r3, #8]
 8013dc2:	429a      	cmp	r2, r3
 8013dc4:	d011      	beq.n	8013dea <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8013dc6:	687c      	ldr	r4, [r7, #4]
 8013dc8:	687b      	ldr	r3, [r7, #4]
 8013dca:	685d      	ldr	r5, [r3, #4]
 8013dcc:	6838      	ldr	r0, [r7, #0]
 8013dce:	f000 fb78 	bl	80144c2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8013dd2:	4603      	mov	r3, r0
 8013dd4:	461a      	mov	r2, r3
 8013dd6:	4629      	mov	r1, r5
 8013dd8:	4620      	mov	r0, r4
 8013dda:	f000 fb7d 	bl	80144d8 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8013dde:	687b      	ldr	r3, [r7, #4]
 8013de0:	685b      	ldr	r3, [r3, #4]
 8013de2:	1d1a      	adds	r2, r3, #4
 8013de4:	687b      	ldr	r3, [r7, #4]
 8013de6:	605a      	str	r2, [r3, #4]
 8013de8:	e00c      	b.n	8013e04 <_ZNSt6vectorIP16Power_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8013dea:	6878      	ldr	r0, [r7, #4]
 8013dec:	f7f0 fcf6 	bl	80047dc <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 8013df0:	4604      	mov	r4, r0
 8013df2:	6838      	ldr	r0, [r7, #0]
 8013df4:	f000 fb65 	bl	80144c2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8013df8:	4603      	mov	r3, r0
 8013dfa:	461a      	mov	r2, r3
 8013dfc:	4621      	mov	r1, r4
 8013dfe:	6878      	ldr	r0, [r7, #4]
 8013e00:	f000 fb7e 	bl	8014500 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8013e04:	6878      	ldr	r0, [r7, #4]
 8013e06:	f000 fbf7 	bl	80145f8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>
 8013e0a:	4603      	mov	r3, r0
      }
 8013e0c:	4618      	mov	r0, r3
 8013e0e:	3708      	adds	r7, #8
 8013e10:	46bd      	mov	sp, r7
 8013e12:	bdb0      	pop	{r4, r5, r7, pc}

08013e14 <_ZSt4moveIR12sum_operatorEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
 8013e14:	b480      	push	{r7}
 8013e16:	b083      	sub	sp, #12
 8013e18:	af00      	add	r7, sp, #0
 8013e1a:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8013e1c:	687b      	ldr	r3, [r7, #4]
 8013e1e:	4618      	mov	r0, r3
 8013e20:	370c      	adds	r7, #12
 8013e22:	46bd      	mov	sp, r7
 8013e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e28:	4770      	bx	lr

08013e2a <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_>:
      vector<_Tp, _Alloc>::
 8013e2a:	b5b0      	push	{r4, r5, r7, lr}
 8013e2c:	b082      	sub	sp, #8
 8013e2e:	af00      	add	r7, sp, #0
 8013e30:	6078      	str	r0, [r7, #4]
 8013e32:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8013e34:	687b      	ldr	r3, [r7, #4]
 8013e36:	685a      	ldr	r2, [r3, #4]
 8013e38:	687b      	ldr	r3, [r7, #4]
 8013e3a:	689b      	ldr	r3, [r3, #8]
 8013e3c:	429a      	cmp	r2, r3
 8013e3e:	d011      	beq.n	8013e64 <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8013e40:	687c      	ldr	r4, [r7, #4]
 8013e42:	687b      	ldr	r3, [r7, #4]
 8013e44:	685d      	ldr	r5, [r3, #4]
 8013e46:	6838      	ldr	r0, [r7, #0]
 8013e48:	f000 fbf1 	bl	801462e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 8013e4c:	4603      	mov	r3, r0
 8013e4e:	461a      	mov	r2, r3
 8013e50:	4629      	mov	r1, r5
 8013e52:	4620      	mov	r0, r4
 8013e54:	f000 fbf6 	bl	8014644 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8013e58:	687b      	ldr	r3, [r7, #4]
 8013e5a:	685b      	ldr	r3, [r3, #4]
 8013e5c:	1c5a      	adds	r2, r3, #1
 8013e5e:	687b      	ldr	r3, [r7, #4]
 8013e60:	605a      	str	r2, [r3, #4]
 8013e62:	e00c      	b.n	8013e7e <_ZNSt6vectorI12sum_operatorSaIS0_EE12emplace_backIJS0_EEERS0_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8013e64:	6878      	ldr	r0, [r7, #4]
 8013e66:	f000 fc00 	bl	801466a <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 8013e6a:	4604      	mov	r4, r0
 8013e6c:	6838      	ldr	r0, [r7, #0]
 8013e6e:	f000 fbde 	bl	801462e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 8013e72:	4603      	mov	r3, r0
 8013e74:	461a      	mov	r2, r3
 8013e76:	4621      	mov	r1, r4
 8013e78:	6878      	ldr	r0, [r7, #4]
 8013e7a:	f000 fc07 	bl	801468c <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
	return back();
 8013e7e:	6878      	ldr	r0, [r7, #4]
 8013e80:	f000 fc7e 	bl	8014780 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>
 8013e84:	4603      	mov	r3, r0
      }
 8013e86:	4618      	mov	r0, r3
 8013e88:	3708      	adds	r7, #8
 8013e8a:	46bd      	mov	sp, r7
 8013e8c:	bdb0      	pop	{r4, r5, r7, pc}

08013e8e <_ZNSaIP19Multiply_expressionEC1Ev>:
 8013e8e:	b580      	push	{r7, lr}
 8013e90:	b082      	sub	sp, #8
 8013e92:	af00      	add	r7, sp, #0
 8013e94:	6078      	str	r0, [r7, #4]
 8013e96:	6878      	ldr	r0, [r7, #4]
 8013e98:	f000 fc8d 	bl	80147b6 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>
 8013e9c:	687b      	ldr	r3, [r7, #4]
 8013e9e:	4618      	mov	r0, r3
 8013ea0:	3708      	adds	r7, #8
 8013ea2:	46bd      	mov	sp, r7
 8013ea4:	bd80      	pop	{r7, pc}

08013ea6 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8013ea6:	b480      	push	{r7}
 8013ea8:	b083      	sub	sp, #12
 8013eaa:	af00      	add	r7, sp, #0
 8013eac:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8013eae:	687b      	ldr	r3, [r7, #4]
 8013eb0:	2200      	movs	r2, #0
 8013eb2:	601a      	str	r2, [r3, #0]
 8013eb4:	687b      	ldr	r3, [r7, #4]
 8013eb6:	2200      	movs	r2, #0
 8013eb8:	605a      	str	r2, [r3, #4]
 8013eba:	687b      	ldr	r3, [r7, #4]
 8013ebc:	2200      	movs	r2, #0
 8013ebe:	609a      	str	r2, [r3, #8]
	{ }
 8013ec0:	687b      	ldr	r3, [r7, #4]
 8013ec2:	4618      	mov	r0, r3
 8013ec4:	370c      	adds	r7, #12
 8013ec6:	46bd      	mov	sp, r7
 8013ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013ecc:	4770      	bx	lr

08013ece <_ZNSaI12sum_operatorEC1Ev>:
 8013ece:	b580      	push	{r7, lr}
 8013ed0:	b082      	sub	sp, #8
 8013ed2:	af00      	add	r7, sp, #0
 8013ed4:	6078      	str	r0, [r7, #4]
 8013ed6:	6878      	ldr	r0, [r7, #4]
 8013ed8:	f000 fc78 	bl	80147cc <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>
 8013edc:	687b      	ldr	r3, [r7, #4]
 8013ede:	4618      	mov	r0, r3
 8013ee0:	3708      	adds	r7, #8
 8013ee2:	46bd      	mov	sp, r7
 8013ee4:	bd80      	pop	{r7, pc}

08013ee6 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8013ee6:	b480      	push	{r7}
 8013ee8:	b083      	sub	sp, #12
 8013eea:	af00      	add	r7, sp, #0
 8013eec:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8013eee:	687b      	ldr	r3, [r7, #4]
 8013ef0:	2200      	movs	r2, #0
 8013ef2:	601a      	str	r2, [r3, #0]
 8013ef4:	687b      	ldr	r3, [r7, #4]
 8013ef6:	2200      	movs	r2, #0
 8013ef8:	605a      	str	r2, [r3, #4]
 8013efa:	687b      	ldr	r3, [r7, #4]
 8013efc:	2200      	movs	r2, #0
 8013efe:	609a      	str	r2, [r3, #8]
	{ }
 8013f00:	687b      	ldr	r3, [r7, #4]
 8013f02:	4618      	mov	r0, r3
 8013f04:	370c      	adds	r7, #12
 8013f06:	46bd      	mov	sp, r7
 8013f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f0c:	4770      	bx	lr

08013f0e <_ZSt4moveIRP19Multiply_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8013f0e:	b480      	push	{r7}
 8013f10:	b083      	sub	sp, #12
 8013f12:	af00      	add	r7, sp, #0
 8013f14:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8013f16:	687b      	ldr	r3, [r7, #4]
 8013f18:	4618      	mov	r0, r3
 8013f1a:	370c      	adds	r7, #12
 8013f1c:	46bd      	mov	sp, r7
 8013f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f22:	4770      	bx	lr

08013f24 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8013f24:	b5b0      	push	{r4, r5, r7, lr}
 8013f26:	b082      	sub	sp, #8
 8013f28:	af00      	add	r7, sp, #0
 8013f2a:	6078      	str	r0, [r7, #4]
 8013f2c:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8013f2e:	687b      	ldr	r3, [r7, #4]
 8013f30:	685a      	ldr	r2, [r3, #4]
 8013f32:	687b      	ldr	r3, [r7, #4]
 8013f34:	689b      	ldr	r3, [r3, #8]
 8013f36:	429a      	cmp	r2, r3
 8013f38:	d011      	beq.n	8013f5e <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8013f3a:	687c      	ldr	r4, [r7, #4]
 8013f3c:	687b      	ldr	r3, [r7, #4]
 8013f3e:	685d      	ldr	r5, [r3, #4]
 8013f40:	6838      	ldr	r0, [r7, #0]
 8013f42:	f000 fc4e 	bl	80147e2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8013f46:	4603      	mov	r3, r0
 8013f48:	461a      	mov	r2, r3
 8013f4a:	4629      	mov	r1, r5
 8013f4c:	4620      	mov	r0, r4
 8013f4e:	f000 fc53 	bl	80147f8 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 8013f52:	687b      	ldr	r3, [r7, #4]
 8013f54:	685b      	ldr	r3, [r3, #4]
 8013f56:	1d1a      	adds	r2, r3, #4
 8013f58:	687b      	ldr	r3, [r7, #4]
 8013f5a:	605a      	str	r2, [r3, #4]
 8013f5c:	e00c      	b.n	8013f78 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8013f5e:	6878      	ldr	r0, [r7, #4]
 8013f60:	f7f0 fcc7 	bl	80048f2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 8013f64:	4604      	mov	r4, r0
 8013f66:	6838      	ldr	r0, [r7, #0]
 8013f68:	f000 fc3b 	bl	80147e2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8013f6c:	4603      	mov	r3, r0
 8013f6e:	461a      	mov	r2, r3
 8013f70:	4621      	mov	r1, r4
 8013f72:	6878      	ldr	r0, [r7, #4]
 8013f74:	f000 fc54 	bl	8014820 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8013f78:	6878      	ldr	r0, [r7, #4]
 8013f7a:	f000 fccd 	bl	8014918 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>
 8013f7e:	4603      	mov	r3, r0
      }
 8013f80:	4618      	mov	r0, r3
 8013f82:	3708      	adds	r7, #8
 8013f84:	46bd      	mov	sp, r7
 8013f86:	bdb0      	pop	{r4, r5, r7, pc}

08013f88 <_ZNSaIP18Compare_expressionEC1Ev>:
 8013f88:	b580      	push	{r7, lr}
 8013f8a:	b082      	sub	sp, #8
 8013f8c:	af00      	add	r7, sp, #0
 8013f8e:	6078      	str	r0, [r7, #4]
 8013f90:	6878      	ldr	r0, [r7, #4]
 8013f92:	f000 fcdc 	bl	801494e <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>
 8013f96:	687b      	ldr	r3, [r7, #4]
 8013f98:	4618      	mov	r0, r3
 8013f9a:	3708      	adds	r7, #8
 8013f9c:	46bd      	mov	sp, r7
 8013f9e:	bd80      	pop	{r7, pc}

08013fa0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8013fa0:	b480      	push	{r7}
 8013fa2:	b083      	sub	sp, #12
 8013fa4:	af00      	add	r7, sp, #0
 8013fa6:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8013fa8:	687b      	ldr	r3, [r7, #4]
 8013faa:	2200      	movs	r2, #0
 8013fac:	601a      	str	r2, [r3, #0]
 8013fae:	687b      	ldr	r3, [r7, #4]
 8013fb0:	2200      	movs	r2, #0
 8013fb2:	605a      	str	r2, [r3, #4]
 8013fb4:	687b      	ldr	r3, [r7, #4]
 8013fb6:	2200      	movs	r2, #0
 8013fb8:	609a      	str	r2, [r3, #8]
	{ }
 8013fba:	687b      	ldr	r3, [r7, #4]
 8013fbc:	4618      	mov	r0, r3
 8013fbe:	370c      	adds	r7, #12
 8013fc0:	46bd      	mov	sp, r7
 8013fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013fc6:	4770      	bx	lr

08013fc8 <_ZSt4moveIRP18Compare_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8013fc8:	b480      	push	{r7}
 8013fca:	b083      	sub	sp, #12
 8013fcc:	af00      	add	r7, sp, #0
 8013fce:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8013fd0:	687b      	ldr	r3, [r7, #4]
 8013fd2:	4618      	mov	r0, r3
 8013fd4:	370c      	adds	r7, #12
 8013fd6:	46bd      	mov	sp, r7
 8013fd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013fdc:	4770      	bx	lr

08013fde <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8013fde:	b5b0      	push	{r4, r5, r7, lr}
 8013fe0:	b082      	sub	sp, #8
 8013fe2:	af00      	add	r7, sp, #0
 8013fe4:	6078      	str	r0, [r7, #4]
 8013fe6:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 8013fe8:	687b      	ldr	r3, [r7, #4]
 8013fea:	685a      	ldr	r2, [r3, #4]
 8013fec:	687b      	ldr	r3, [r7, #4]
 8013fee:	689b      	ldr	r3, [r3, #8]
 8013ff0:	429a      	cmp	r2, r3
 8013ff2:	d011      	beq.n	8014018 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 8013ff4:	687c      	ldr	r4, [r7, #4]
 8013ff6:	687b      	ldr	r3, [r7, #4]
 8013ff8:	685d      	ldr	r5, [r3, #4]
 8013ffa:	6838      	ldr	r0, [r7, #0]
 8013ffc:	f000 fcb2 	bl	8014964 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014000:	4603      	mov	r3, r0
 8014002:	461a      	mov	r2, r3
 8014004:	4629      	mov	r1, r5
 8014006:	4620      	mov	r0, r4
 8014008:	f000 fcb7 	bl	801497a <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 801400c:	687b      	ldr	r3, [r7, #4]
 801400e:	685b      	ldr	r3, [r3, #4]
 8014010:	1d1a      	adds	r2, r3, #4
 8014012:	687b      	ldr	r3, [r7, #4]
 8014014:	605a      	str	r2, [r3, #4]
 8014016:	e00c      	b.n	8014032 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 8014018:	6878      	ldr	r0, [r7, #4]
 801401a:	f7f0 fcda 	bl	80049d2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 801401e:	4604      	mov	r4, r0
 8014020:	6838      	ldr	r0, [r7, #0]
 8014022:	f000 fc9f 	bl	8014964 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014026:	4603      	mov	r3, r0
 8014028:	461a      	mov	r2, r3
 801402a:	4621      	mov	r1, r4
 801402c:	6878      	ldr	r0, [r7, #4]
 801402e:	f000 fcb7 	bl	80149a0 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 8014032:	6878      	ldr	r0, [r7, #4]
 8014034:	f000 fd30 	bl	8014a98 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>
 8014038:	4603      	mov	r3, r0
      }
 801403a:	4618      	mov	r0, r3
 801403c:	3708      	adds	r7, #8
 801403e:	46bd      	mov	sp, r7
 8014040:	bdb0      	pop	{r4, r5, r7, pc}

08014042 <_ZNSaIP14And_expressionEC1Ev>:
 8014042:	b580      	push	{r7, lr}
 8014044:	b082      	sub	sp, #8
 8014046:	af00      	add	r7, sp, #0
 8014048:	6078      	str	r0, [r7, #4]
 801404a:	6878      	ldr	r0, [r7, #4]
 801404c:	f000 fd3f 	bl	8014ace <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>
 8014050:	687b      	ldr	r3, [r7, #4]
 8014052:	4618      	mov	r0, r3
 8014054:	3708      	adds	r7, #8
 8014056:	46bd      	mov	sp, r7
 8014058:	bd80      	pop	{r7, pc}

0801405a <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801405a:	b480      	push	{r7}
 801405c:	b083      	sub	sp, #12
 801405e:	af00      	add	r7, sp, #0
 8014060:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8014062:	687b      	ldr	r3, [r7, #4]
 8014064:	2200      	movs	r2, #0
 8014066:	601a      	str	r2, [r3, #0]
 8014068:	687b      	ldr	r3, [r7, #4]
 801406a:	2200      	movs	r2, #0
 801406c:	605a      	str	r2, [r3, #4]
 801406e:	687b      	ldr	r3, [r7, #4]
 8014070:	2200      	movs	r2, #0
 8014072:	609a      	str	r2, [r3, #8]
	{ }
 8014074:	687b      	ldr	r3, [r7, #4]
 8014076:	4618      	mov	r0, r3
 8014078:	370c      	adds	r7, #12
 801407a:	46bd      	mov	sp, r7
 801407c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014080:	4770      	bx	lr

08014082 <_ZSt4moveIRP14And_expressionEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
 8014082:	b480      	push	{r7}
 8014084:	b083      	sub	sp, #12
 8014086:	af00      	add	r7, sp, #0
 8014088:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801408a:	687b      	ldr	r3, [r7, #4]
 801408c:	4618      	mov	r0, r3
 801408e:	370c      	adds	r7, #12
 8014090:	46bd      	mov	sp, r7
 8014092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014096:	4770      	bx	lr

08014098 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
 8014098:	b5b0      	push	{r4, r5, r7, lr}
 801409a:	b082      	sub	sp, #8
 801409c:	af00      	add	r7, sp, #0
 801409e:	6078      	str	r0, [r7, #4]
 80140a0:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 80140a2:	687b      	ldr	r3, [r7, #4]
 80140a4:	685a      	ldr	r2, [r3, #4]
 80140a6:	687b      	ldr	r3, [r7, #4]
 80140a8:	689b      	ldr	r3, [r3, #8]
 80140aa:	429a      	cmp	r2, r3
 80140ac:	d011      	beq.n	80140d2 <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x3a>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 80140ae:	687c      	ldr	r4, [r7, #4]
 80140b0:	687b      	ldr	r3, [r7, #4]
 80140b2:	685d      	ldr	r5, [r3, #4]
 80140b4:	6838      	ldr	r0, [r7, #0]
 80140b6:	f000 fd15 	bl	8014ae4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80140ba:	4603      	mov	r3, r0
 80140bc:	461a      	mov	r2, r3
 80140be:	4629      	mov	r1, r5
 80140c0:	4620      	mov	r0, r4
 80140c2:	f000 fd1a 	bl	8014afa <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
 80140c6:	687b      	ldr	r3, [r7, #4]
 80140c8:	685b      	ldr	r3, [r3, #4]
 80140ca:	1d1a      	adds	r2, r3, #4
 80140cc:	687b      	ldr	r3, [r7, #4]
 80140ce:	605a      	str	r2, [r3, #4]
 80140d0:	e00c      	b.n	80140ec <_ZNSt6vectorIP14And_expressionSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x54>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 80140d2:	6878      	ldr	r0, [r7, #4]
 80140d4:	f7f0 fced 	bl	8004ab2 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 80140d8:	4604      	mov	r4, r0
 80140da:	6838      	ldr	r0, [r7, #0]
 80140dc:	f000 fd02 	bl	8014ae4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80140e0:	4603      	mov	r3, r0
 80140e2:	461a      	mov	r2, r3
 80140e4:	4621      	mov	r1, r4
 80140e6:	6878      	ldr	r0, [r7, #4]
 80140e8:	f000 fd1a 	bl	8014b20 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
 80140ec:	6878      	ldr	r0, [r7, #4]
 80140ee:	f000 fd93 	bl	8014c18 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>
 80140f2:	4603      	mov	r3, r0
      }
 80140f4:	4618      	mov	r0, r3
 80140f6:	3708      	adds	r7, #8
 80140f8:	46bd      	mov	sp, r7
 80140fa:	bdb0      	pop	{r4, r5, r7, pc}

080140fc <_ZSt28__variant_construct_by_indexILj5ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJSA_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80140fc:	b590      	push	{r4, r7, lr}
 80140fe:	b085      	sub	sp, #20
 8014100:	af00      	add	r7, sp, #0
 8014102:	6078      	str	r0, [r7, #4]
 8014104:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014106:	687b      	ldr	r3, [r7, #4]
 8014108:	2205      	movs	r2, #5
 801410a:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801410c:	6878      	ldr	r0, [r7, #4]
 801410e:	f7f0 fe14 	bl	8004d3a <_ZNSt8__detail9__variant5__getILj5ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8014112:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014114:	6838      	ldr	r0, [r7, #0]
 8014116:	f7f8 fd77 	bl	800cc08 <_ZSt7forwardIP13Function_callEOT_RNSt16remove_referenceIS2_E4typeE>
 801411a:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801411c:	681c      	ldr	r4, [r3, #0]
 801411e:	68f8      	ldr	r0, [r7, #12]
 8014120:	f7f9 ff1d 	bl	800df5e <_ZSt9addressofIP13Function_callEPT_RS2_>
 8014124:	4603      	mov	r3, r0
 8014126:	4619      	mov	r1, r3
 8014128:	2004      	movs	r0, #4
 801412a:	f7ec ff7f 	bl	800102c <_ZnwjPv>
 801412e:	4603      	mov	r3, r0
 8014130:	601c      	str	r4, [r3, #0]
    }
 8014132:	bf00      	nop
 8014134:	3714      	adds	r7, #20
 8014136:	46bd      	mov	sp, r7
 8014138:	bd90      	pop	{r4, r7, pc}

0801413a <_ZSt28__variant_construct_by_indexILj4ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS8_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801413a:	b590      	push	{r4, r7, lr}
 801413c:	b085      	sub	sp, #20
 801413e:	af00      	add	r7, sp, #0
 8014140:	6078      	str	r0, [r7, #4]
 8014142:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014144:	687b      	ldr	r3, [r7, #4]
 8014146:	2204      	movs	r2, #4
 8014148:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 801414a:	6878      	ldr	r0, [r7, #4]
 801414c:	f7f0 fd5d 	bl	8004c0a <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 8014150:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014152:	6838      	ldr	r0, [r7, #0]
 8014154:	f7ff fc45 	bl	80139e2 <_ZSt7forwardIP8VariableEOT_RNSt16remove_referenceIS2_E4typeE>
 8014158:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 801415a:	681c      	ldr	r4, [r3, #0]
 801415c:	68f8      	ldr	r0, [r7, #12]
 801415e:	f000 fd76 	bl	8014c4e <_ZSt9addressofIP8VariableEPT_RS2_>
 8014162:	4603      	mov	r3, r0
 8014164:	4619      	mov	r1, r3
 8014166:	2004      	movs	r0, #4
 8014168:	f7ec ff60 	bl	800102c <_ZnwjPv>
 801416c:	4603      	mov	r3, r0
 801416e:	601c      	str	r4, [r3, #0]
    }
 8014170:	bf00      	nop
 8014172:	3714      	adds	r7, #20
 8014174:	46bd      	mov	sp, r7
 8014176:	bd90      	pop	{r4, r7, pc}

08014178 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJbEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014178:	b590      	push	{r4, r7, lr}
 801417a:	b085      	sub	sp, #20
 801417c:	af00      	add	r7, sp, #0
 801417e:	6078      	str	r0, [r7, #4]
 8014180:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014182:	687b      	ldr	r3, [r7, #4]
 8014184:	2200      	movs	r2, #0
 8014186:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014188:	6878      	ldr	r0, [r7, #4]
 801418a:	f7f1 f88b 	bl	80052a4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801418e:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 8014190:	6838      	ldr	r0, [r7, #0]
 8014192:	f7fa fb86 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 8014196:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014198:	781c      	ldrb	r4, [r3, #0]
 801419a:	68f8      	ldr	r0, [r7, #12]
 801419c:	f7fa fc88 	bl	800eab0 <_ZSt9addressofIbEPT_RS0_>
 80141a0:	4603      	mov	r3, r0
 80141a2:	4619      	mov	r1, r3
 80141a4:	2001      	movs	r0, #1
 80141a6:	f7ec ff41 	bl	800102c <_ZnwjPv>
 80141aa:	4603      	mov	r3, r0
 80141ac:	4622      	mov	r2, r4
 80141ae:	701a      	strb	r2, [r3, #0]
    }
 80141b0:	bf00      	nop
 80141b2:	3714      	adds	r7, #20
 80141b4:	46bd      	mov	sp, r7
 80141b6:	bd90      	pop	{r4, r7, pc}

080141b8 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80141b8:	b590      	push	{r4, r7, lr}
 80141ba:	b085      	sub	sp, #20
 80141bc:	af00      	add	r7, sp, #0
 80141be:	6078      	str	r0, [r7, #4]
 80141c0:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80141c2:	687b      	ldr	r3, [r7, #4]
 80141c4:	2201      	movs	r2, #1
 80141c6:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80141c8:	6878      	ldr	r0, [r7, #4]
 80141ca:	f7f1 f8f5 	bl	80053b8 <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 80141ce:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80141d0:	6838      	ldr	r0, [r7, #0]
 80141d2:	f7f1 ff12 	bl	8005ffa <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
 80141d6:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80141d8:	681c      	ldr	r4, [r3, #0]
 80141da:	68f8      	ldr	r0, [r7, #12]
 80141dc:	f7f6 fccd 	bl	800ab7a <_ZSt9addressofIiEPT_RS0_>
 80141e0:	4603      	mov	r3, r0
 80141e2:	4619      	mov	r1, r3
 80141e4:	2004      	movs	r0, #4
 80141e6:	f7ec ff21 	bl	800102c <_ZnwjPv>
 80141ea:	4603      	mov	r3, r0
 80141ec:	601c      	str	r4, [r3, #0]
    }
 80141ee:	bf00      	nop
 80141f0:	3714      	adds	r7, #20
 80141f2:	46bd      	mov	sp, r7
 80141f4:	bd90      	pop	{r4, r7, pc}

080141f6 <_ZSt28__variant_construct_by_indexILj2ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJRfEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80141f6:	b590      	push	{r4, r7, lr}
 80141f8:	b085      	sub	sp, #20
 80141fa:	af00      	add	r7, sp, #0
 80141fc:	6078      	str	r0, [r7, #4]
 80141fe:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 8014200:	687b      	ldr	r3, [r7, #4]
 8014202:	2202      	movs	r2, #2
 8014204:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014206:	6878      	ldr	r0, [r7, #4]
 8014208:	f7f1 f972 	bl	80054f0 <_ZNSt8__detail9__variant5__getILj2ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801420c:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801420e:	6838      	ldr	r0, [r7, #0]
 8014210:	f7f1 ff15 	bl	800603e <_ZSt7forwardIRfEOT_RNSt16remove_referenceIS1_E4typeE>
 8014214:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8014216:	681c      	ldr	r4, [r3, #0]
 8014218:	68f8      	ldr	r0, [r7, #12]
 801421a:	f7f6 fcba 	bl	800ab92 <_ZSt9addressofIfEPT_RS0_>
 801421e:	4603      	mov	r3, r0
 8014220:	4619      	mov	r1, r3
 8014222:	2004      	movs	r0, #4
 8014224:	f7ec ff02 	bl	800102c <_ZnwjPv>
 8014228:	4603      	mov	r3, r0
 801422a:	601c      	str	r4, [r3, #0]
    }
 801422c:	bf00      	nop
 801422e:	3714      	adds	r7, #20
 8014230:	46bd      	mov	sp, r7
 8014232:	bd90      	pop	{r4, r7, pc}

08014234 <_ZSt28__variant_construct_by_indexILj3ESt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEJS6_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014234:	b590      	push	{r4, r7, lr}
 8014236:	b085      	sub	sp, #20
 8014238:	af00      	add	r7, sp, #0
 801423a:	6078      	str	r0, [r7, #4]
 801423c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801423e:	687b      	ldr	r3, [r7, #4]
 8014240:	2203      	movs	r2, #3
 8014242:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8014244:	6878      	ldr	r0, [r7, #4]
 8014246:	f7f1 fa01 	bl	800564c <_ZNSt8__detail9__variant5__getILj3ERSt7variantIJbifNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP8VariableP13Function_callEEEEDcOT0_>
 801424a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801424c:	6838      	ldr	r0, [r7, #0]
 801424e:	f7f5 fe45 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 8014252:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 8014254:	68f8      	ldr	r0, [r7, #12]
 8014256:	f7f6 fc84 	bl	800ab62 <_ZSt9addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 801425a:	4603      	mov	r3, r0
 801425c:	4619      	mov	r1, r3
 801425e:	2018      	movs	r0, #24
 8014260:	f7ec fee4 	bl	800102c <_ZnwjPv>
 8014264:	4603      	mov	r3, r0
 8014266:	4621      	mov	r1, r4
 8014268:	4618      	mov	r0, r3
 801426a:	f00c f98a 	bl	8020582 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 801426e:	bf00      	nop
 8014270:	3714      	adds	r7, #20
 8014272:	46bd      	mov	sp, r7
 8014274:	bd90      	pop	{r4, r7, pc}

08014276 <_ZNSt8__detail9__variant16_Variant_storageILb1EJP17Primal_expressionP10ExpressionEE8_M_resetEv>:
      void _M_reset()
 8014276:	b480      	push	{r7}
 8014278:	b083      	sub	sp, #12
 801427a:	af00      	add	r7, sp, #0
 801427c:	6078      	str	r0, [r7, #4]
      { _M_index = variant_npos; }
 801427e:	687b      	ldr	r3, [r7, #4]
 8014280:	22ff      	movs	r2, #255	; 0xff
 8014282:	711a      	strb	r2, [r3, #4]
 8014284:	bf00      	nop
 8014286:	370c      	adds	r7, #12
 8014288:	46bd      	mov	sp, r7
 801428a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801428e:	4770      	bx	lr

08014290 <_ZSt28__variant_construct_by_indexILj1ESt7variantIJP17Primal_expressionP10ExpressionEEJS4_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8014290:	b590      	push	{r4, r7, lr}
 8014292:	b085      	sub	sp, #20
 8014294:	af00      	add	r7, sp, #0
 8014296:	6078      	str	r0, [r7, #4]
 8014298:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801429a:	687b      	ldr	r3, [r7, #4]
 801429c:	2201      	movs	r2, #1
 801429e:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80142a0:	6878      	ldr	r0, [r7, #4]
 80142a2:	f7f0 fd9a 	bl	8004dda <_ZNSt8__detail9__variant5__getILj1ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 80142a6:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80142a8:	6838      	ldr	r0, [r7, #0]
 80142aa:	f7f9 f83f 	bl	800d32c <_ZSt7forwardIP10ExpressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80142ae:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80142b0:	681c      	ldr	r4, [r3, #0]
 80142b2:	68f8      	ldr	r0, [r7, #12]
 80142b4:	f000 fcd7 	bl	8014c66 <_ZSt9addressofIP10ExpressionEPT_RS2_>
 80142b8:	4603      	mov	r3, r0
 80142ba:	4619      	mov	r1, r3
 80142bc:	2004      	movs	r0, #4
 80142be:	f7ec feb5 	bl	800102c <_ZnwjPv>
 80142c2:	4603      	mov	r3, r0
 80142c4:	601c      	str	r4, [r3, #0]
    }
 80142c6:	bf00      	nop
 80142c8:	3714      	adds	r7, #20
 80142ca:	46bd      	mov	sp, r7
 80142cc:	bd90      	pop	{r4, r7, pc}

080142ce <_ZSt28__variant_construct_by_indexILj0ESt7variantIJP17Primal_expressionP10ExpressionEEJS2_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 80142ce:	b590      	push	{r4, r7, lr}
 80142d0:	b085      	sub	sp, #20
 80142d2:	af00      	add	r7, sp, #0
 80142d4:	6078      	str	r0, [r7, #4]
 80142d6:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80142d8:	687b      	ldr	r3, [r7, #4]
 80142da:	2200      	movs	r2, #0
 80142dc:	711a      	strb	r2, [r3, #4]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80142de:	6878      	ldr	r0, [r7, #4]
 80142e0:	f7f0 fdb9 	bl	8004e56 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJP17Primal_expressionP10ExpressionEEEEDcOT0_>
 80142e4:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80142e6:	6838      	ldr	r0, [r7, #0]
 80142e8:	f7ff fcb6 	bl	8013c58 <_ZSt7forwardIP17Primal_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80142ec:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 80142ee:	681c      	ldr	r4, [r3, #0]
 80142f0:	68f8      	ldr	r0, [r7, #12]
 80142f2:	f000 fcc4 	bl	8014c7e <_ZSt9addressofIP17Primal_expressionEPT_RS2_>
 80142f6:	4603      	mov	r3, r0
 80142f8:	4619      	mov	r1, r3
 80142fa:	2004      	movs	r0, #4
 80142fc:	f7ec fe96 	bl	800102c <_ZnwjPv>
 8014300:	4603      	mov	r3, r0
 8014302:	601c      	str	r4, [r3, #0]
    }
 8014304:	bf00      	nop
 8014306:	3714      	adds	r7, #20
 8014308:	46bd      	mov	sp, r7
 801430a:	bd90      	pop	{r4, r7, pc}

0801430c <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801430c:	b480      	push	{r7}
 801430e:	b083      	sub	sp, #12
 8014310:	af00      	add	r7, sp, #0
 8014312:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014314:	687b      	ldr	r3, [r7, #4]
 8014316:	4618      	mov	r0, r3
 8014318:	370c      	adds	r7, #12
 801431a:	46bd      	mov	sp, r7
 801431c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014320:	4770      	bx	lr

08014322 <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8014322:	b580      	push	{r7, lr}
 8014324:	b084      	sub	sp, #16
 8014326:	af00      	add	r7, sp, #0
 8014328:	60f8      	str	r0, [r7, #12]
 801432a:	60b9      	str	r1, [r7, #8]
 801432c:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801432e:	6878      	ldr	r0, [r7, #4]
 8014330:	f7ff ffec 	bl	801430c <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 8014334:	4603      	mov	r3, r0
 8014336:	461a      	mov	r2, r3
 8014338:	68b9      	ldr	r1, [r7, #8]
 801433a:	68f8      	ldr	r0, [r7, #12]
 801433c:	f000 fcab 	bl	8014c96 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 8014340:	bf00      	nop
 8014342:	3710      	adds	r7, #16
 8014344:	46bd      	mov	sp, r7
 8014346:	bd80      	pop	{r7, pc}

08014348 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 8014348:	b580      	push	{r7, lr}
 801434a:	b084      	sub	sp, #16
 801434c:	af00      	add	r7, sp, #0
 801434e:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8014350:	687b      	ldr	r3, [r7, #4]
 8014352:	1d1a      	adds	r2, r3, #4
 8014354:	f107 030c 	add.w	r3, r7, #12
 8014358:	4611      	mov	r1, r2
 801435a:	4618      	mov	r0, r3
 801435c:	f000 fcb2 	bl	8014cc4 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8014360:	68fb      	ldr	r3, [r7, #12]
 8014362:	4618      	mov	r0, r3
 8014364:	3710      	adds	r7, #16
 8014366:	46bd      	mov	sp, r7
 8014368:	bd80      	pop	{r7, pc}
	...

0801436c <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801436c:	b5b0      	push	{r4, r5, r7, lr}
 801436e:	b08c      	sub	sp, #48	; 0x30
 8014370:	af00      	add	r7, sp, #0
 8014372:	60f8      	str	r0, [r7, #12]
 8014374:	60b9      	str	r1, [r7, #8]
 8014376:	607a      	str	r2, [r7, #4]
      const size_type __len =
 8014378:	4a38      	ldr	r2, [pc, #224]	; (801445c <_ZNSt6vectorI13mult_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801437a:	2101      	movs	r1, #1
 801437c:	68f8      	ldr	r0, [r7, #12]
 801437e:	f000 fcb1 	bl	8014ce4 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>
 8014382:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 8014384:	68fb      	ldr	r3, [r7, #12]
 8014386:	681b      	ldr	r3, [r3, #0]
 8014388:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801438a:	68fb      	ldr	r3, [r7, #12]
 801438c:	685b      	ldr	r3, [r3, #4]
 801438e:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8014390:	68f8      	ldr	r0, [r7, #12]
 8014392:	f000 fcee 	bl	8014d72 <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>
 8014396:	4603      	mov	r3, r0
 8014398:	617b      	str	r3, [r7, #20]
 801439a:	f107 0214 	add.w	r2, r7, #20
 801439e:	f107 0308 	add.w	r3, r7, #8
 80143a2:	4611      	mov	r1, r2
 80143a4:	4618      	mov	r0, r3
 80143a6:	f000 fcf4 	bl	8014d92 <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 80143aa:	4603      	mov	r3, r0
 80143ac:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 80143ae:	68fb      	ldr	r3, [r7, #12]
 80143b0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80143b2:	4618      	mov	r0, r3
 80143b4:	f000 fd01 	bl	8014dba <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>
 80143b8:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 80143ba:	69fb      	ldr	r3, [r7, #28]
 80143bc:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 80143be:	68fc      	ldr	r4, [r7, #12]
 80143c0:	69fa      	ldr	r2, [r7, #28]
 80143c2:	6a3b      	ldr	r3, [r7, #32]
 80143c4:	18d5      	adds	r5, r2, r3
 80143c6:	6878      	ldr	r0, [r7, #4]
 80143c8:	f7ff ffa0 	bl	801430c <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 80143cc:	4603      	mov	r3, r0
 80143ce:	461a      	mov	r2, r3
 80143d0:	4629      	mov	r1, r5
 80143d2:	4620      	mov	r0, r4
 80143d4:	f7ff ffa5 	bl	8014322 <_ZNSt16allocator_traitsISaI13mult_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 80143d8:	2300      	movs	r3, #0
 80143da:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80143dc:	f107 0308 	add.w	r3, r7, #8
 80143e0:	4618      	mov	r0, r3
 80143e2:	f000 fd12 	bl	8014e0a <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 80143e6:	4603      	mov	r3, r0
 80143e8:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 80143ea:	68fb      	ldr	r3, [r7, #12]
 80143ec:	4618      	mov	r0, r3
 80143ee:	f7f0 fdc1 	bl	8004f74 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 80143f2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80143f4:	69fa      	ldr	r2, [r7, #28]
 80143f6:	4621      	mov	r1, r4
 80143f8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80143fa:	f000 fcf2 	bl	8014de2 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 80143fe:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 8014400:	69bb      	ldr	r3, [r7, #24]
 8014402:	3301      	adds	r3, #1
 8014404:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014406:	f107 0308 	add.w	r3, r7, #8
 801440a:	4618      	mov	r0, r3
 801440c:	f000 fcfd 	bl	8014e0a <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 8014410:	4603      	mov	r3, r0
 8014412:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8014414:	68fb      	ldr	r3, [r7, #12]
 8014416:	4618      	mov	r0, r3
 8014418:	f7f0 fdac 	bl	8004f74 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801441c:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801441e:	69ba      	ldr	r2, [r7, #24]
 8014420:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8014422:	4620      	mov	r0, r4
 8014424:	f000 fcdd 	bl	8014de2 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 8014428:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801442a:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801442c:	68fb      	ldr	r3, [r7, #12]
 801442e:	689a      	ldr	r2, [r3, #8]
 8014430:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014432:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 8014434:	461a      	mov	r2, r3
 8014436:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014438:	f7f1 fb36 	bl	8005aa8 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801443c:	68fb      	ldr	r3, [r7, #12]
 801443e:	69fa      	ldr	r2, [r7, #28]
 8014440:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8014442:	68fb      	ldr	r3, [r7, #12]
 8014444:	69ba      	ldr	r2, [r7, #24]
 8014446:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014448:	69fa      	ldr	r2, [r7, #28]
 801444a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801444c:	441a      	add	r2, r3
 801444e:	68fb      	ldr	r3, [r7, #12]
 8014450:	609a      	str	r2, [r3, #8]
    }
 8014452:	bf00      	nop
 8014454:	3730      	adds	r7, #48	; 0x30
 8014456:	46bd      	mov	sp, r7
 8014458:	bdb0      	pop	{r4, r5, r7, pc}
 801445a:	bf00      	nop
 801445c:	08024f30 	.word	0x08024f30

08014460 <_ZNSt6vectorI13mult_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8014460:	b580      	push	{r7, lr}
 8014462:	b084      	sub	sp, #16
 8014464:	af00      	add	r7, sp, #0
 8014466:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8014468:	6878      	ldr	r0, [r7, #4]
 801446a:	f7ff ff6d 	bl	8014348 <_ZNSt6vectorI13mult_operatorSaIS0_EE3endEv>
 801446e:	4603      	mov	r3, r0
 8014470:	60fb      	str	r3, [r7, #12]
 8014472:	f107 030c 	add.w	r3, r7, #12
 8014476:	2101      	movs	r1, #1
 8014478:	4618      	mov	r0, r3
 801447a:	f000 fcd1 	bl	8014e20 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801447e:	4603      	mov	r3, r0
 8014480:	60bb      	str	r3, [r7, #8]
 8014482:	f107 0308 	add.w	r3, r7, #8
 8014486:	4618      	mov	r0, r3
 8014488:	f000 fce2 	bl	8014e50 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 801448c:	4603      	mov	r3, r0
      }
 801448e:	4618      	mov	r0, r3
 8014490:	3710      	adds	r7, #16
 8014492:	46bd      	mov	sp, r7
 8014494:	bd80      	pop	{r7, pc}

08014496 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8014496:	b480      	push	{r7}
 8014498:	b083      	sub	sp, #12
 801449a:	af00      	add	r7, sp, #0
 801449c:	6078      	str	r0, [r7, #4]
 801449e:	687b      	ldr	r3, [r7, #4]
 80144a0:	4618      	mov	r0, r3
 80144a2:	370c      	adds	r7, #12
 80144a4:	46bd      	mov	sp, r7
 80144a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80144aa:	4770      	bx	lr

080144ac <_ZN9__gnu_cxx13new_allocatorI13mult_operatorEC1Ev>:
 80144ac:	b480      	push	{r7}
 80144ae:	b083      	sub	sp, #12
 80144b0:	af00      	add	r7, sp, #0
 80144b2:	6078      	str	r0, [r7, #4]
 80144b4:	687b      	ldr	r3, [r7, #4]
 80144b6:	4618      	mov	r0, r3
 80144b8:	370c      	adds	r7, #12
 80144ba:	46bd      	mov	sp, r7
 80144bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80144c0:	4770      	bx	lr

080144c2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80144c2:	b480      	push	{r7}
 80144c4:	b083      	sub	sp, #12
 80144c6:	af00      	add	r7, sp, #0
 80144c8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80144ca:	687b      	ldr	r3, [r7, #4]
 80144cc:	4618      	mov	r0, r3
 80144ce:	370c      	adds	r7, #12
 80144d0:	46bd      	mov	sp, r7
 80144d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80144d6:	4770      	bx	lr

080144d8 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80144d8:	b580      	push	{r7, lr}
 80144da:	b084      	sub	sp, #16
 80144dc:	af00      	add	r7, sp, #0
 80144de:	60f8      	str	r0, [r7, #12]
 80144e0:	60b9      	str	r1, [r7, #8]
 80144e2:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 80144e4:	6878      	ldr	r0, [r7, #4]
 80144e6:	f7ff ffec 	bl	80144c2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80144ea:	4603      	mov	r3, r0
 80144ec:	461a      	mov	r2, r3
 80144ee:	68b9      	ldr	r1, [r7, #8]
 80144f0:	68f8      	ldr	r0, [r7, #12]
 80144f2:	f000 fcb9 	bl	8014e68 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 80144f6:	bf00      	nop
 80144f8:	3710      	adds	r7, #16
 80144fa:	46bd      	mov	sp, r7
 80144fc:	bd80      	pop	{r7, pc}
	...

08014500 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 8014500:	b5b0      	push	{r4, r5, r7, lr}
 8014502:	b08c      	sub	sp, #48	; 0x30
 8014504:	af00      	add	r7, sp, #0
 8014506:	60f8      	str	r0, [r7, #12]
 8014508:	60b9      	str	r1, [r7, #8]
 801450a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801450c:	4a39      	ldr	r2, [pc, #228]	; (80145f4 <_ZNSt6vectorIP16Power_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801450e:	2101      	movs	r1, #1
 8014510:	68f8      	ldr	r0, [r7, #12]
 8014512:	f000 fcbf 	bl	8014e94 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>
 8014516:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 8014518:	68fb      	ldr	r3, [r7, #12]
 801451a:	681b      	ldr	r3, [r3, #0]
 801451c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801451e:	68fb      	ldr	r3, [r7, #12]
 8014520:	685b      	ldr	r3, [r3, #4]
 8014522:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8014524:	68f8      	ldr	r0, [r7, #12]
 8014526:	f7f0 f949 	bl	80047bc <_ZNSt6vectorIP16Power_expressionSaIS1_EE5beginEv>
 801452a:	4603      	mov	r3, r0
 801452c:	617b      	str	r3, [r7, #20]
 801452e:	f107 0214 	add.w	r2, r7, #20
 8014532:	f107 0308 	add.w	r3, r7, #8
 8014536:	4611      	mov	r1, r2
 8014538:	4618      	mov	r0, r3
 801453a:	f000 fcf2 	bl	8014f22 <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801453e:	4603      	mov	r3, r0
 8014540:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8014542:	68fb      	ldr	r3, [r7, #12]
 8014544:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8014546:	4618      	mov	r0, r3
 8014548:	f000 fd00 	bl	8014f4c <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>
 801454c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801454e:	69fb      	ldr	r3, [r7, #28]
 8014550:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8014552:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8014554:	6a3b      	ldr	r3, [r7, #32]
 8014556:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8014558:	69fa      	ldr	r2, [r7, #28]
 801455a:	18d5      	adds	r5, r2, r3
 801455c:	6878      	ldr	r0, [r7, #4]
 801455e:	f7ff ffb0 	bl	80144c2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014562:	4603      	mov	r3, r0
 8014564:	461a      	mov	r2, r3
 8014566:	4629      	mov	r1, r5
 8014568:	4620      	mov	r0, r4
 801456a:	f7ff ffb5 	bl	80144d8 <_ZNSt16allocator_traitsISaIP16Power_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801456e:	2300      	movs	r3, #0
 8014570:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014572:	f107 0308 	add.w	r3, r7, #8
 8014576:	4618      	mov	r0, r3
 8014578:	f7f0 fd25 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801457c:	4603      	mov	r3, r0
 801457e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8014580:	68fb      	ldr	r3, [r7, #12]
 8014582:	4618      	mov	r0, r3
 8014584:	f7f0 fcb9 	bl	8004efa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014588:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 801458a:	69fa      	ldr	r2, [r7, #28]
 801458c:	4621      	mov	r1, r4
 801458e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8014590:	f000 fcf0 	bl	8014f74 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014594:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 8014596:	69bb      	ldr	r3, [r7, #24]
 8014598:	3304      	adds	r3, #4
 801459a:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801459c:	f107 0308 	add.w	r3, r7, #8
 80145a0:	4618      	mov	r0, r3
 80145a2:	f7f0 fd10 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 80145a6:	4603      	mov	r3, r0
 80145a8:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 80145aa:	68fb      	ldr	r3, [r7, #12]
 80145ac:	4618      	mov	r0, r3
 80145ae:	f7f0 fca4 	bl	8004efa <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 80145b2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80145b4:	69ba      	ldr	r2, [r7, #24]
 80145b6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80145b8:	4620      	mov	r0, r4
 80145ba:	f000 fcdb 	bl	8014f74 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80145be:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 80145c0:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 80145c2:	68fb      	ldr	r3, [r7, #12]
 80145c4:	689a      	ldr	r2, [r3, #8]
 80145c6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80145c8:	1ad3      	subs	r3, r2, r3
 80145ca:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 80145cc:	461a      	mov	r2, r3
 80145ce:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80145d0:	f7f1 fa3e 	bl	8005a50 <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 80145d4:	68fb      	ldr	r3, [r7, #12]
 80145d6:	69fa      	ldr	r2, [r7, #28]
 80145d8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 80145da:	68fb      	ldr	r3, [r7, #12]
 80145dc:	69ba      	ldr	r2, [r7, #24]
 80145de:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 80145e0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80145e2:	009b      	lsls	r3, r3, #2
 80145e4:	69fa      	ldr	r2, [r7, #28]
 80145e6:	441a      	add	r2, r3
 80145e8:	68fb      	ldr	r3, [r7, #12]
 80145ea:	609a      	str	r2, [r3, #8]
    }
 80145ec:	bf00      	nop
 80145ee:	3730      	adds	r7, #48	; 0x30
 80145f0:	46bd      	mov	sp, r7
 80145f2:	bdb0      	pop	{r4, r5, r7, pc}
 80145f4:	08024f30 	.word	0x08024f30

080145f8 <_ZNSt6vectorIP16Power_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 80145f8:	b580      	push	{r7, lr}
 80145fa:	b084      	sub	sp, #16
 80145fc:	af00      	add	r7, sp, #0
 80145fe:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8014600:	6878      	ldr	r0, [r7, #4]
 8014602:	f7f0 f8eb 	bl	80047dc <_ZNSt6vectorIP16Power_expressionSaIS1_EE3endEv>
 8014606:	4603      	mov	r3, r0
 8014608:	60fb      	str	r3, [r7, #12]
 801460a:	f107 030c 	add.w	r3, r7, #12
 801460e:	2101      	movs	r1, #1
 8014610:	4618      	mov	r0, r3
 8014612:	f000 fcc3 	bl	8014f9c <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 8014616:	4603      	mov	r3, r0
 8014618:	60bb      	str	r3, [r7, #8]
 801461a:	f107 0308 	add.w	r3, r7, #8
 801461e:	4618      	mov	r0, r3
 8014620:	f7f0 f915 	bl	800484e <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8014624:	4603      	mov	r3, r0
      }
 8014626:	4618      	mov	r0, r3
 8014628:	3710      	adds	r7, #16
 801462a:	46bd      	mov	sp, r7
 801462c:	bd80      	pop	{r7, pc}

0801462e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801462e:	b480      	push	{r7}
 8014630:	b083      	sub	sp, #12
 8014632:	af00      	add	r7, sp, #0
 8014634:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014636:	687b      	ldr	r3, [r7, #4]
 8014638:	4618      	mov	r0, r3
 801463a:	370c      	adds	r7, #12
 801463c:	46bd      	mov	sp, r7
 801463e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014642:	4770      	bx	lr

08014644 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8014644:	b580      	push	{r7, lr}
 8014646:	b084      	sub	sp, #16
 8014648:	af00      	add	r7, sp, #0
 801464a:	60f8      	str	r0, [r7, #12]
 801464c:	60b9      	str	r1, [r7, #8]
 801464e:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8014650:	6878      	ldr	r0, [r7, #4]
 8014652:	f7ff ffec 	bl	801462e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 8014656:	4603      	mov	r3, r0
 8014658:	461a      	mov	r2, r3
 801465a:	68b9      	ldr	r1, [r7, #8]
 801465c:	68f8      	ldr	r0, [r7, #12]
 801465e:	f000 fcb6 	bl	8014fce <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>
 8014662:	bf00      	nop
 8014664:	3710      	adds	r7, #16
 8014666:	46bd      	mov	sp, r7
 8014668:	bd80      	pop	{r7, pc}

0801466a <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
 801466a:	b580      	push	{r7, lr}
 801466c:	b084      	sub	sp, #16
 801466e:	af00      	add	r7, sp, #0
 8014670:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_finish); }
 8014672:	687b      	ldr	r3, [r7, #4]
 8014674:	1d1a      	adds	r2, r3, #4
 8014676:	f107 030c 	add.w	r3, r7, #12
 801467a:	4611      	mov	r1, r2
 801467c:	4618      	mov	r0, r3
 801467e:	f000 fcbd 	bl	8014ffc <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8014682:	68fb      	ldr	r3, [r7, #12]
 8014684:	4618      	mov	r0, r3
 8014686:	3710      	adds	r7, #16
 8014688:	46bd      	mov	sp, r7
 801468a:	bd80      	pop	{r7, pc}

0801468c <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
 801468c:	b5b0      	push	{r4, r5, r7, lr}
 801468e:	b08c      	sub	sp, #48	; 0x30
 8014690:	af00      	add	r7, sp, #0
 8014692:	60f8      	str	r0, [r7, #12]
 8014694:	60b9      	str	r1, [r7, #8]
 8014696:	607a      	str	r2, [r7, #4]
      const size_type __len =
 8014698:	4a38      	ldr	r2, [pc, #224]	; (801477c <_ZNSt6vectorI12sum_operatorSaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_+0xf0>)
 801469a:	2101      	movs	r1, #1
 801469c:	68f8      	ldr	r0, [r7, #12]
 801469e:	f000 fcbd 	bl	801501c <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>
 80146a2:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 80146a4:	68fb      	ldr	r3, [r7, #12]
 80146a6:	681b      	ldr	r3, [r3, #0]
 80146a8:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 80146aa:	68fb      	ldr	r3, [r7, #12]
 80146ac:	685b      	ldr	r3, [r3, #4]
 80146ae:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 80146b0:	68f8      	ldr	r0, [r7, #12]
 80146b2:	f000 fcfa 	bl	80150aa <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>
 80146b6:	4603      	mov	r3, r0
 80146b8:	617b      	str	r3, [r7, #20]
 80146ba:	f107 0214 	add.w	r2, r7, #20
 80146be:	f107 0308 	add.w	r3, r7, #8
 80146c2:	4611      	mov	r1, r2
 80146c4:	4618      	mov	r0, r3
 80146c6:	f000 fd00 	bl	80150ca <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
 80146ca:	4603      	mov	r3, r0
 80146cc:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 80146ce:	68fb      	ldr	r3, [r7, #12]
 80146d0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80146d2:	4618      	mov	r0, r3
 80146d4:	f000 fd0d 	bl	80150f2 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>
 80146d8:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 80146da:	69fb      	ldr	r3, [r7, #28]
 80146dc:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 80146de:	68fc      	ldr	r4, [r7, #12]
 80146e0:	69fa      	ldr	r2, [r7, #28]
 80146e2:	6a3b      	ldr	r3, [r7, #32]
 80146e4:	18d5      	adds	r5, r2, r3
 80146e6:	6878      	ldr	r0, [r7, #4]
 80146e8:	f7ff ffa1 	bl	801462e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 80146ec:	4603      	mov	r3, r0
 80146ee:	461a      	mov	r2, r3
 80146f0:	4629      	mov	r1, r5
 80146f2:	4620      	mov	r0, r4
 80146f4:	f7ff ffa6 	bl	8014644 <_ZNSt16allocator_traitsISaI12sum_operatorEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
 80146f8:	2300      	movs	r3, #0
 80146fa:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80146fc:	f107 0308 	add.w	r3, r7, #8
 8014700:	4618      	mov	r0, r3
 8014702:	f000 fd1e 	bl	8015142 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 8014706:	4603      	mov	r3, r0
 8014708:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 801470a:	68fb      	ldr	r3, [r7, #12]
 801470c:	4618      	mov	r0, r3
 801470e:	f7f0 fcc7 	bl	80050a0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 8014712:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014714:	69fa      	ldr	r2, [r7, #28]
 8014716:	4621      	mov	r1, r4
 8014718:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 801471a:	f000 fcfe 	bl	801511a <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 801471e:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 8014720:	69bb      	ldr	r3, [r7, #24]
 8014722:	3301      	adds	r3, #1
 8014724:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014726:	f107 0308 	add.w	r3, r7, #8
 801472a:	4618      	mov	r0, r3
 801472c:	f000 fd09 	bl	8015142 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 8014730:	4603      	mov	r3, r0
 8014732:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8014734:	68fb      	ldr	r3, [r7, #12]
 8014736:	4618      	mov	r0, r3
 8014738:	f7f0 fcb2 	bl	80050a0 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801473c:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 801473e:	69ba      	ldr	r2, [r7, #24]
 8014740:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8014742:	4620      	mov	r0, r4
 8014744:	f000 fce9 	bl	801511a <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
 8014748:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 801474a:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 801474c:	68fb      	ldr	r3, [r7, #12]
 801474e:	689a      	ldr	r2, [r3, #8]
 8014750:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014752:	1ad3      	subs	r3, r2, r3
      _M_deallocate(__old_start,
 8014754:	461a      	mov	r2, r3
 8014756:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014758:	f7f1 f9fe 	bl	8005b58 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE13_M_deallocateEPS0_j>
      this->_M_impl._M_start = __new_start;
 801475c:	68fb      	ldr	r3, [r7, #12]
 801475e:	69fa      	ldr	r2, [r7, #28]
 8014760:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8014762:	68fb      	ldr	r3, [r7, #12]
 8014764:	69ba      	ldr	r2, [r7, #24]
 8014766:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014768:	69fa      	ldr	r2, [r7, #28]
 801476a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801476c:	441a      	add	r2, r3
 801476e:	68fb      	ldr	r3, [r7, #12]
 8014770:	609a      	str	r2, [r3, #8]
    }
 8014772:	bf00      	nop
 8014774:	3730      	adds	r7, #48	; 0x30
 8014776:	46bd      	mov	sp, r7
 8014778:	bdb0      	pop	{r4, r5, r7, pc}
 801477a:	bf00      	nop
 801477c:	08024f30 	.word	0x08024f30

08014780 <_ZNSt6vectorI12sum_operatorSaIS0_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8014780:	b580      	push	{r7, lr}
 8014782:	b084      	sub	sp, #16
 8014784:	af00      	add	r7, sp, #0
 8014786:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8014788:	6878      	ldr	r0, [r7, #4]
 801478a:	f7ff ff6e 	bl	801466a <_ZNSt6vectorI12sum_operatorSaIS0_EE3endEv>
 801478e:	4603      	mov	r3, r0
 8014790:	60fb      	str	r3, [r7, #12]
 8014792:	f107 030c 	add.w	r3, r7, #12
 8014796:	2101      	movs	r1, #1
 8014798:	4618      	mov	r0, r3
 801479a:	f000 fcdd 	bl	8015158 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>
 801479e:	4603      	mov	r3, r0
 80147a0:	60bb      	str	r3, [r7, #8]
 80147a2:	f107 0308 	add.w	r3, r7, #8
 80147a6:	4618      	mov	r0, r3
 80147a8:	f000 fcee 	bl	8015188 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>
 80147ac:	4603      	mov	r3, r0
      }
 80147ae:	4618      	mov	r0, r3
 80147b0:	3710      	adds	r7, #16
 80147b2:	46bd      	mov	sp, r7
 80147b4:	bd80      	pop	{r7, pc}

080147b6 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionEC1Ev>:
 80147b6:	b480      	push	{r7}
 80147b8:	b083      	sub	sp, #12
 80147ba:	af00      	add	r7, sp, #0
 80147bc:	6078      	str	r0, [r7, #4]
 80147be:	687b      	ldr	r3, [r7, #4]
 80147c0:	4618      	mov	r0, r3
 80147c2:	370c      	adds	r7, #12
 80147c4:	46bd      	mov	sp, r7
 80147c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80147ca:	4770      	bx	lr

080147cc <_ZN9__gnu_cxx13new_allocatorI12sum_operatorEC1Ev>:
 80147cc:	b480      	push	{r7}
 80147ce:	b083      	sub	sp, #12
 80147d0:	af00      	add	r7, sp, #0
 80147d2:	6078      	str	r0, [r7, #4]
 80147d4:	687b      	ldr	r3, [r7, #4]
 80147d6:	4618      	mov	r0, r3
 80147d8:	370c      	adds	r7, #12
 80147da:	46bd      	mov	sp, r7
 80147dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80147e0:	4770      	bx	lr

080147e2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80147e2:	b480      	push	{r7}
 80147e4:	b083      	sub	sp, #12
 80147e6:	af00      	add	r7, sp, #0
 80147e8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80147ea:	687b      	ldr	r3, [r7, #4]
 80147ec:	4618      	mov	r0, r3
 80147ee:	370c      	adds	r7, #12
 80147f0:	46bd      	mov	sp, r7
 80147f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80147f6:	4770      	bx	lr

080147f8 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 80147f8:	b580      	push	{r7, lr}
 80147fa:	b084      	sub	sp, #16
 80147fc:	af00      	add	r7, sp, #0
 80147fe:	60f8      	str	r0, [r7, #12]
 8014800:	60b9      	str	r1, [r7, #8]
 8014802:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8014804:	6878      	ldr	r0, [r7, #4]
 8014806:	f7ff ffec 	bl	80147e2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801480a:	4603      	mov	r3, r0
 801480c:	461a      	mov	r2, r3
 801480e:	68b9      	ldr	r1, [r7, #8]
 8014810:	68f8      	ldr	r0, [r7, #12]
 8014812:	f000 fcc5 	bl	80151a0 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 8014816:	bf00      	nop
 8014818:	3710      	adds	r7, #16
 801481a:	46bd      	mov	sp, r7
 801481c:	bd80      	pop	{r7, pc}
	...

08014820 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 8014820:	b5b0      	push	{r4, r5, r7, lr}
 8014822:	b08c      	sub	sp, #48	; 0x30
 8014824:	af00      	add	r7, sp, #0
 8014826:	60f8      	str	r0, [r7, #12]
 8014828:	60b9      	str	r1, [r7, #8]
 801482a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 801482c:	4a39      	ldr	r2, [pc, #228]	; (8014914 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 801482e:	2101      	movs	r1, #1
 8014830:	68f8      	ldr	r0, [r7, #12]
 8014832:	f000 fccb 	bl	80151cc <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>
 8014836:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 8014838:	68fb      	ldr	r3, [r7, #12]
 801483a:	681b      	ldr	r3, [r3, #0]
 801483c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 801483e:	68fb      	ldr	r3, [r7, #12]
 8014840:	685b      	ldr	r3, [r3, #4]
 8014842:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8014844:	68f8      	ldr	r0, [r7, #12]
 8014846:	f7f0 f844 	bl	80048d2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE5beginEv>
 801484a:	4603      	mov	r3, r0
 801484c:	617b      	str	r3, [r7, #20]
 801484e:	f107 0214 	add.w	r2, r7, #20
 8014852:	f107 0308 	add.w	r3, r7, #8
 8014856:	4611      	mov	r1, r2
 8014858:	4618      	mov	r0, r3
 801485a:	f000 fcfe 	bl	801525a <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 801485e:	4603      	mov	r3, r0
 8014860:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8014862:	68fb      	ldr	r3, [r7, #12]
 8014864:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8014866:	4618      	mov	r0, r3
 8014868:	f000 fd0c 	bl	8015284 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>
 801486c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 801486e:	69fb      	ldr	r3, [r7, #28]
 8014870:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8014872:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8014874:	6a3b      	ldr	r3, [r7, #32]
 8014876:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8014878:	69fa      	ldr	r2, [r7, #28]
 801487a:	18d5      	adds	r5, r2, r3
 801487c:	6878      	ldr	r0, [r7, #4]
 801487e:	f7ff ffb0 	bl	80147e2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014882:	4603      	mov	r3, r0
 8014884:	461a      	mov	r2, r3
 8014886:	4629      	mov	r1, r5
 8014888:	4620      	mov	r0, r4
 801488a:	f7ff ffb5 	bl	80147f8 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 801488e:	2300      	movs	r3, #0
 8014890:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014892:	f107 0308 	add.w	r3, r7, #8
 8014896:	4618      	mov	r0, r3
 8014898:	f7f0 fc2b 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801489c:	4603      	mov	r3, r0
 801489e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 80148a0:	68fb      	ldr	r3, [r7, #12]
 80148a2:	4618      	mov	r0, r3
 80148a4:	f7f0 fbbf 	bl	8005026 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 80148a8:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 80148aa:	69fa      	ldr	r2, [r7, #28]
 80148ac:	4621      	mov	r1, r4
 80148ae:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80148b0:	f000 fcfc 	bl	80152ac <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80148b4:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 80148b6:	69bb      	ldr	r3, [r7, #24]
 80148b8:	3304      	adds	r3, #4
 80148ba:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80148bc:	f107 0308 	add.w	r3, r7, #8
 80148c0:	4618      	mov	r0, r3
 80148c2:	f7f0 fc16 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 80148c6:	4603      	mov	r3, r0
 80148c8:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 80148ca:	68fb      	ldr	r3, [r7, #12]
 80148cc:	4618      	mov	r0, r3
 80148ce:	f7f0 fbaa 	bl	8005026 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 80148d2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 80148d4:	69ba      	ldr	r2, [r7, #24]
 80148d6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80148d8:	4620      	mov	r0, r4
 80148da:	f000 fce7 	bl	80152ac <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 80148de:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 80148e0:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 80148e2:	68fb      	ldr	r3, [r7, #12]
 80148e4:	689a      	ldr	r2, [r3, #8]
 80148e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80148e8:	1ad3      	subs	r3, r2, r3
 80148ea:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 80148ec:	461a      	mov	r2, r3
 80148ee:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80148f0:	f7f1 f906 	bl	8005b00 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 80148f4:	68fb      	ldr	r3, [r7, #12]
 80148f6:	69fa      	ldr	r2, [r7, #28]
 80148f8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 80148fa:	68fb      	ldr	r3, [r7, #12]
 80148fc:	69ba      	ldr	r2, [r7, #24]
 80148fe:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014900:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8014902:	009b      	lsls	r3, r3, #2
 8014904:	69fa      	ldr	r2, [r7, #28]
 8014906:	441a      	add	r2, r3
 8014908:	68fb      	ldr	r3, [r7, #12]
 801490a:	609a      	str	r2, [r3, #8]
    }
 801490c:	bf00      	nop
 801490e:	3730      	adds	r7, #48	; 0x30
 8014910:	46bd      	mov	sp, r7
 8014912:	bdb0      	pop	{r4, r5, r7, pc}
 8014914:	08024f30 	.word	0x08024f30

08014918 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8014918:	b580      	push	{r7, lr}
 801491a:	b084      	sub	sp, #16
 801491c:	af00      	add	r7, sp, #0
 801491e:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8014920:	6878      	ldr	r0, [r7, #4]
 8014922:	f7ef ffe6 	bl	80048f2 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE3endEv>
 8014926:	4603      	mov	r3, r0
 8014928:	60fb      	str	r3, [r7, #12]
 801492a:	f107 030c 	add.w	r3, r7, #12
 801492e:	2101      	movs	r1, #1
 8014930:	4618      	mov	r0, r3
 8014932:	f000 fccf 	bl	80152d4 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 8014936:	4603      	mov	r3, r0
 8014938:	60bb      	str	r3, [r7, #8]
 801493a:	f107 0308 	add.w	r3, r7, #8
 801493e:	4618      	mov	r0, r3
 8014940:	f7f0 f810 	bl	8004964 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8014944:	4603      	mov	r3, r0
      }
 8014946:	4618      	mov	r0, r3
 8014948:	3710      	adds	r7, #16
 801494a:	46bd      	mov	sp, r7
 801494c:	bd80      	pop	{r7, pc}

0801494e <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionEC1Ev>:
 801494e:	b480      	push	{r7}
 8014950:	b083      	sub	sp, #12
 8014952:	af00      	add	r7, sp, #0
 8014954:	6078      	str	r0, [r7, #4]
 8014956:	687b      	ldr	r3, [r7, #4]
 8014958:	4618      	mov	r0, r3
 801495a:	370c      	adds	r7, #12
 801495c:	46bd      	mov	sp, r7
 801495e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014962:	4770      	bx	lr

08014964 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014964:	b480      	push	{r7}
 8014966:	b083      	sub	sp, #12
 8014968:	af00      	add	r7, sp, #0
 801496a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801496c:	687b      	ldr	r3, [r7, #4]
 801496e:	4618      	mov	r0, r3
 8014970:	370c      	adds	r7, #12
 8014972:	46bd      	mov	sp, r7
 8014974:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014978:	4770      	bx	lr

0801497a <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801497a:	b580      	push	{r7, lr}
 801497c:	b084      	sub	sp, #16
 801497e:	af00      	add	r7, sp, #0
 8014980:	60f8      	str	r0, [r7, #12]
 8014982:	60b9      	str	r1, [r7, #8]
 8014984:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8014986:	6878      	ldr	r0, [r7, #4]
 8014988:	f7ff ffec 	bl	8014964 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801498c:	4603      	mov	r3, r0
 801498e:	461a      	mov	r2, r3
 8014990:	68b9      	ldr	r1, [r7, #8]
 8014992:	68f8      	ldr	r0, [r7, #12]
 8014994:	f000 fcb7 	bl	8015306 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 8014998:	bf00      	nop
 801499a:	3710      	adds	r7, #16
 801499c:	46bd      	mov	sp, r7
 801499e:	bd80      	pop	{r7, pc}

080149a0 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 80149a0:	b5b0      	push	{r4, r5, r7, lr}
 80149a2:	b08c      	sub	sp, #48	; 0x30
 80149a4:	af00      	add	r7, sp, #0
 80149a6:	60f8      	str	r0, [r7, #12]
 80149a8:	60b9      	str	r1, [r7, #8]
 80149aa:	607a      	str	r2, [r7, #4]
      const size_type __len =
 80149ac:	4a39      	ldr	r2, [pc, #228]	; (8014a94 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 80149ae:	2101      	movs	r1, #1
 80149b0:	68f8      	ldr	r0, [r7, #12]
 80149b2:	f000 fcbe 	bl	8015332 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>
 80149b6:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 80149b8:	68fb      	ldr	r3, [r7, #12]
 80149ba:	681b      	ldr	r3, [r3, #0]
 80149bc:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 80149be:	68fb      	ldr	r3, [r7, #12]
 80149c0:	685b      	ldr	r3, [r3, #4]
 80149c2:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 80149c4:	68f8      	ldr	r0, [r7, #12]
 80149c6:	f7ef fff4 	bl	80049b2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE5beginEv>
 80149ca:	4603      	mov	r3, r0
 80149cc:	617b      	str	r3, [r7, #20]
 80149ce:	f107 0214 	add.w	r2, r7, #20
 80149d2:	f107 0308 	add.w	r3, r7, #8
 80149d6:	4611      	mov	r1, r2
 80149d8:	4618      	mov	r0, r3
 80149da:	f000 fcf1 	bl	80153c0 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 80149de:	4603      	mov	r3, r0
 80149e0:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 80149e2:	68fb      	ldr	r3, [r7, #12]
 80149e4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80149e6:	4618      	mov	r0, r3
 80149e8:	f000 fcff 	bl	80153ea <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>
 80149ec:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 80149ee:	69fb      	ldr	r3, [r7, #28]
 80149f0:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 80149f2:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 80149f4:	6a3b      	ldr	r3, [r7, #32]
 80149f6:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 80149f8:	69fa      	ldr	r2, [r7, #28]
 80149fa:	18d5      	adds	r5, r2, r3
 80149fc:	6878      	ldr	r0, [r7, #4]
 80149fe:	f7ff ffb1 	bl	8014964 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014a02:	4603      	mov	r3, r0
 8014a04:	461a      	mov	r2, r3
 8014a06:	4629      	mov	r1, r5
 8014a08:	4620      	mov	r0, r4
 8014a0a:	f7ff ffb6 	bl	801497a <_ZNSt16allocator_traitsISaIP18Compare_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 8014a0e:	2300      	movs	r3, #0
 8014a10:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014a12:	f107 0308 	add.w	r3, r7, #8
 8014a16:	4618      	mov	r0, r3
 8014a18:	f7f0 fbc4 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014a1c:	4603      	mov	r3, r0
 8014a1e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8014a20:	68fb      	ldr	r3, [r7, #12]
 8014a22:	4618      	mov	r0, r3
 8014a24:	f7f0 fb95 	bl	8005152 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014a28:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014a2a:	69fa      	ldr	r2, [r7, #28]
 8014a2c:	4621      	mov	r1, r4
 8014a2e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8014a30:	f000 fcef 	bl	8015412 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014a34:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 8014a36:	69bb      	ldr	r3, [r7, #24]
 8014a38:	3304      	adds	r3, #4
 8014a3a:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014a3c:	f107 0308 	add.w	r3, r7, #8
 8014a40:	4618      	mov	r0, r3
 8014a42:	f7f0 fbaf 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014a46:	4603      	mov	r3, r0
 8014a48:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8014a4a:	68fb      	ldr	r3, [r7, #12]
 8014a4c:	4618      	mov	r0, r3
 8014a4e:	f7f0 fb80 	bl	8005152 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014a52:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014a54:	69ba      	ldr	r2, [r7, #24]
 8014a56:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8014a58:	4620      	mov	r0, r4
 8014a5a:	f000 fcda 	bl	8015412 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014a5e:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 8014a60:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8014a62:	68fb      	ldr	r3, [r7, #12]
 8014a64:	689a      	ldr	r2, [r3, #8]
 8014a66:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014a68:	1ad3      	subs	r3, r2, r3
 8014a6a:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8014a6c:	461a      	mov	r2, r3
 8014a6e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014a70:	f7f1 f89e 	bl	8005bb0 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8014a74:	68fb      	ldr	r3, [r7, #12]
 8014a76:	69fa      	ldr	r2, [r7, #28]
 8014a78:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8014a7a:	68fb      	ldr	r3, [r7, #12]
 8014a7c:	69ba      	ldr	r2, [r7, #24]
 8014a7e:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014a80:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8014a82:	009b      	lsls	r3, r3, #2
 8014a84:	69fa      	ldr	r2, [r7, #28]
 8014a86:	441a      	add	r2, r3
 8014a88:	68fb      	ldr	r3, [r7, #12]
 8014a8a:	609a      	str	r2, [r3, #8]
    }
 8014a8c:	bf00      	nop
 8014a8e:	3730      	adds	r7, #48	; 0x30
 8014a90:	46bd      	mov	sp, r7
 8014a92:	bdb0      	pop	{r4, r5, r7, pc}
 8014a94:	08024f30 	.word	0x08024f30

08014a98 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8014a98:	b580      	push	{r7, lr}
 8014a9a:	b084      	sub	sp, #16
 8014a9c:	af00      	add	r7, sp, #0
 8014a9e:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8014aa0:	6878      	ldr	r0, [r7, #4]
 8014aa2:	f7ef ff96 	bl	80049d2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE3endEv>
 8014aa6:	4603      	mov	r3, r0
 8014aa8:	60fb      	str	r3, [r7, #12]
 8014aaa:	f107 030c 	add.w	r3, r7, #12
 8014aae:	2101      	movs	r1, #1
 8014ab0:	4618      	mov	r0, r3
 8014ab2:	f000 fcc2 	bl	801543a <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 8014ab6:	4603      	mov	r3, r0
 8014ab8:	60bb      	str	r3, [r7, #8]
 8014aba:	f107 0308 	add.w	r3, r7, #8
 8014abe:	4618      	mov	r0, r3
 8014ac0:	f7ef ffc0 	bl	8004a44 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8014ac4:	4603      	mov	r3, r0
      }
 8014ac6:	4618      	mov	r0, r3
 8014ac8:	3710      	adds	r7, #16
 8014aca:	46bd      	mov	sp, r7
 8014acc:	bd80      	pop	{r7, pc}

08014ace <_ZN9__gnu_cxx13new_allocatorIP14And_expressionEC1Ev>:
 8014ace:	b480      	push	{r7}
 8014ad0:	b083      	sub	sp, #12
 8014ad2:	af00      	add	r7, sp, #0
 8014ad4:	6078      	str	r0, [r7, #4]
 8014ad6:	687b      	ldr	r3, [r7, #4]
 8014ad8:	4618      	mov	r0, r3
 8014ada:	370c      	adds	r7, #12
 8014adc:	46bd      	mov	sp, r7
 8014ade:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ae2:	4770      	bx	lr

08014ae4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8014ae4:	b480      	push	{r7}
 8014ae6:	b083      	sub	sp, #12
 8014ae8:	af00      	add	r7, sp, #0
 8014aea:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8014aec:	687b      	ldr	r3, [r7, #4]
 8014aee:	4618      	mov	r0, r3
 8014af0:	370c      	adds	r7, #12
 8014af2:	46bd      	mov	sp, r7
 8014af4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014af8:	4770      	bx	lr

08014afa <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 8014afa:	b580      	push	{r7, lr}
 8014afc:	b084      	sub	sp, #16
 8014afe:	af00      	add	r7, sp, #0
 8014b00:	60f8      	str	r0, [r7, #12]
 8014b02:	60b9      	str	r1, [r7, #8]
 8014b04:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 8014b06:	6878      	ldr	r0, [r7, #4]
 8014b08:	f7ff ffec 	bl	8014ae4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b0c:	4603      	mov	r3, r0
 8014b0e:	461a      	mov	r2, r3
 8014b10:	68b9      	ldr	r1, [r7, #8]
 8014b12:	68f8      	ldr	r0, [r7, #12]
 8014b14:	f000 fcaa 	bl	801546c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>
 8014b18:	bf00      	nop
 8014b1a:	3710      	adds	r7, #16
 8014b1c:	46bd      	mov	sp, r7
 8014b1e:	bd80      	pop	{r7, pc}

08014b20 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
 8014b20:	b5b0      	push	{r4, r5, r7, lr}
 8014b22:	b08c      	sub	sp, #48	; 0x30
 8014b24:	af00      	add	r7, sp, #0
 8014b26:	60f8      	str	r0, [r7, #12]
 8014b28:	60b9      	str	r1, [r7, #8]
 8014b2a:	607a      	str	r2, [r7, #4]
      const size_type __len =
 8014b2c:	4a39      	ldr	r2, [pc, #228]	; (8014c14 <_ZNSt6vectorIP14And_expressionSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf4>)
 8014b2e:	2101      	movs	r1, #1
 8014b30:	68f8      	ldr	r0, [r7, #12]
 8014b32:	f000 fcb1 	bl	8015498 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>
 8014b36:	62f8      	str	r0, [r7, #44]	; 0x2c
      pointer __old_start = this->_M_impl._M_start;
 8014b38:	68fb      	ldr	r3, [r7, #12]
 8014b3a:	681b      	ldr	r3, [r3, #0]
 8014b3c:	62bb      	str	r3, [r7, #40]	; 0x28
      pointer __old_finish = this->_M_impl._M_finish;
 8014b3e:	68fb      	ldr	r3, [r7, #12]
 8014b40:	685b      	ldr	r3, [r3, #4]
 8014b42:	627b      	str	r3, [r7, #36]	; 0x24
      const size_type __elems_before = __position - begin();
 8014b44:	68f8      	ldr	r0, [r7, #12]
 8014b46:	f7ef ffa4 	bl	8004a92 <_ZNSt6vectorIP14And_expressionSaIS1_EE5beginEv>
 8014b4a:	4603      	mov	r3, r0
 8014b4c:	617b      	str	r3, [r7, #20]
 8014b4e:	f107 0214 	add.w	r2, r7, #20
 8014b52:	f107 0308 	add.w	r3, r7, #8
 8014b56:	4611      	mov	r1, r2
 8014b58:	4618      	mov	r0, r3
 8014b5a:	f000 fce4 	bl	8015526 <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
 8014b5e:	4603      	mov	r3, r0
 8014b60:	623b      	str	r3, [r7, #32]
      pointer __new_start(this->_M_allocate(__len));
 8014b62:	68fb      	ldr	r3, [r7, #12]
 8014b64:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8014b66:	4618      	mov	r0, r3
 8014b68:	f000 fcf2 	bl	8015550 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>
 8014b6c:	61f8      	str	r0, [r7, #28]
      pointer __new_finish(__new_start);
 8014b6e:	69fb      	ldr	r3, [r7, #28]
 8014b70:	61bb      	str	r3, [r7, #24]
	  _Alloc_traits::construct(this->_M_impl,
 8014b72:	68fc      	ldr	r4, [r7, #12]
				   __new_start + __elems_before,
 8014b74:	6a3b      	ldr	r3, [r7, #32]
 8014b76:	009b      	lsls	r3, r3, #2
	  _Alloc_traits::construct(this->_M_impl,
 8014b78:	69fa      	ldr	r2, [r7, #28]
 8014b7a:	18d5      	adds	r5, r2, r3
 8014b7c:	6878      	ldr	r0, [r7, #4]
 8014b7e:	f7ff ffb1 	bl	8014ae4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014b82:	4603      	mov	r3, r0
 8014b84:	461a      	mov	r2, r3
 8014b86:	4629      	mov	r1, r5
 8014b88:	4620      	mov	r0, r4
 8014b8a:	f7ff ffb6 	bl	8014afa <_ZNSt16allocator_traitsISaIP14And_expressionEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
 8014b8e:	2300      	movs	r3, #0
 8014b90:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014b92:	f107 0308 	add.w	r3, r7, #8
 8014b96:	4618      	mov	r0, r3
 8014b98:	f7f0 fb5d 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014b9c:	4603      	mov	r3, r0
 8014b9e:	681c      	ldr	r4, [r3, #0]
					 __new_start, _M_get_Tp_allocator());
 8014ba0:	68fb      	ldr	r3, [r7, #12]
 8014ba2:	4618      	mov	r0, r3
 8014ba4:	f7f0 fb2e 	bl	8005204 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014ba8:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__old_start, __position.base(),
 8014baa:	69fa      	ldr	r2, [r7, #28]
 8014bac:	4621      	mov	r1, r4
 8014bae:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8014bb0:	f000 fce2 	bl	8015578 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014bb4:	61b8      	str	r0, [r7, #24]
	      ++__new_finish;
 8014bb6:	69bb      	ldr	r3, [r7, #24]
 8014bb8:	3304      	adds	r3, #4
 8014bba:	61bb      	str	r3, [r7, #24]
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014bbc:	f107 0308 	add.w	r3, r7, #8
 8014bc0:	4618      	mov	r0, r3
 8014bc2:	f7f0 fb48 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014bc6:	4603      	mov	r3, r0
 8014bc8:	681c      	ldr	r4, [r3, #0]
					 __new_finish, _M_get_Tp_allocator());
 8014bca:	68fb      	ldr	r3, [r7, #12]
 8014bcc:	4618      	mov	r0, r3
 8014bce:	f7f0 fb19 	bl	8005204 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8014bd2:	4603      	mov	r3, r0
	      __new_finish = _S_relocate(__position.base(), __old_finish,
 8014bd4:	69ba      	ldr	r2, [r7, #24]
 8014bd6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8014bd8:	4620      	mov	r0, r4
 8014bda:	f000 fccd 	bl	8015578 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
 8014bde:	61b8      	str	r0, [r7, #24]
      _M_deallocate(__old_start,
 8014be0:	68f8      	ldr	r0, [r7, #12]
		    this->_M_impl._M_end_of_storage - __old_start);
 8014be2:	68fb      	ldr	r3, [r7, #12]
 8014be4:	689a      	ldr	r2, [r3, #8]
 8014be6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8014be8:	1ad3      	subs	r3, r2, r3
 8014bea:	109b      	asrs	r3, r3, #2
      _M_deallocate(__old_start,
 8014bec:	461a      	mov	r2, r3
 8014bee:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014bf0:	f7f1 f80a 	bl	8005c08 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE13_M_deallocateEPS1_j>
      this->_M_impl._M_start = __new_start;
 8014bf4:	68fb      	ldr	r3, [r7, #12]
 8014bf6:	69fa      	ldr	r2, [r7, #28]
 8014bf8:	601a      	str	r2, [r3, #0]
      this->_M_impl._M_finish = __new_finish;
 8014bfa:	68fb      	ldr	r3, [r7, #12]
 8014bfc:	69ba      	ldr	r2, [r7, #24]
 8014bfe:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
 8014c00:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8014c02:	009b      	lsls	r3, r3, #2
 8014c04:	69fa      	ldr	r2, [r7, #28]
 8014c06:	441a      	add	r2, r3
 8014c08:	68fb      	ldr	r3, [r7, #12]
 8014c0a:	609a      	str	r2, [r3, #8]
    }
 8014c0c:	bf00      	nop
 8014c0e:	3730      	adds	r7, #48	; 0x30
 8014c10:	46bd      	mov	sp, r7
 8014c12:	bdb0      	pop	{r4, r5, r7, pc}
 8014c14:	08024f30 	.word	0x08024f30

08014c18 <_ZNSt6vectorIP14And_expressionSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
 8014c18:	b580      	push	{r7, lr}
 8014c1a:	b084      	sub	sp, #16
 8014c1c:	af00      	add	r7, sp, #0
 8014c1e:	6078      	str	r0, [r7, #4]
	return *(end() - 1);
 8014c20:	6878      	ldr	r0, [r7, #4]
 8014c22:	f7ef ff46 	bl	8004ab2 <_ZNSt6vectorIP14And_expressionSaIS1_EE3endEv>
 8014c26:	4603      	mov	r3, r0
 8014c28:	60fb      	str	r3, [r7, #12]
 8014c2a:	f107 030c 	add.w	r3, r7, #12
 8014c2e:	2101      	movs	r1, #1
 8014c30:	4618      	mov	r0, r3
 8014c32:	f000 fcb5 	bl	80155a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>
 8014c36:	4603      	mov	r3, r0
 8014c38:	60bb      	str	r3, [r7, #8]
 8014c3a:	f107 0308 	add.w	r3, r7, #8
 8014c3e:	4618      	mov	r0, r3
 8014c40:	f7ef ff70 	bl	8004b24 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEdeEv>
 8014c44:	4603      	mov	r3, r0
      }
 8014c46:	4618      	mov	r0, r3
 8014c48:	3710      	adds	r7, #16
 8014c4a:	46bd      	mov	sp, r7
 8014c4c:	bd80      	pop	{r7, pc}

08014c4e <_ZSt9addressofIP8VariableEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8014c4e:	b580      	push	{r7, lr}
 8014c50:	b082      	sub	sp, #8
 8014c52:	af00      	add	r7, sp, #0
 8014c54:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8014c56:	6878      	ldr	r0, [r7, #4]
 8014c58:	f7f1 fb93 	bl	8006382 <_ZSt11__addressofIP8VariableEPT_RS2_>
 8014c5c:	4603      	mov	r3, r0
 8014c5e:	4618      	mov	r0, r3
 8014c60:	3708      	adds	r7, #8
 8014c62:	46bd      	mov	sp, r7
 8014c64:	bd80      	pop	{r7, pc}

08014c66 <_ZSt9addressofIP10ExpressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8014c66:	b580      	push	{r7, lr}
 8014c68:	b082      	sub	sp, #8
 8014c6a:	af00      	add	r7, sp, #0
 8014c6c:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8014c6e:	6878      	ldr	r0, [r7, #4]
 8014c70:	f000 fcaf 	bl	80155d2 <_ZSt11__addressofIP10ExpressionEPT_RS2_>
 8014c74:	4603      	mov	r3, r0
 8014c76:	4618      	mov	r0, r3
 8014c78:	3708      	adds	r7, #8
 8014c7a:	46bd      	mov	sp, r7
 8014c7c:	bd80      	pop	{r7, pc}

08014c7e <_ZSt9addressofIP17Primal_expressionEPT_RS2_>:
    addressof(_Tp& __r) noexcept
 8014c7e:	b580      	push	{r7, lr}
 8014c80:	b082      	sub	sp, #8
 8014c82:	af00      	add	r7, sp, #0
 8014c84:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 8014c86:	6878      	ldr	r0, [r7, #4]
 8014c88:	f000 fcae 	bl	80155e8 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>
 8014c8c:	4603      	mov	r3, r0
 8014c8e:	4618      	mov	r0, r3
 8014c90:	3708      	adds	r7, #8
 8014c92:	46bd      	mov	sp, r7
 8014c94:	bd80      	pop	{r7, pc}

08014c96 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8014c96:	b590      	push	{r4, r7, lr}
 8014c98:	b085      	sub	sp, #20
 8014c9a:	af00      	add	r7, sp, #0
 8014c9c:	60f8      	str	r0, [r7, #12]
 8014c9e:	60b9      	str	r1, [r7, #8]
 8014ca0:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8014ca2:	6878      	ldr	r0, [r7, #4]
 8014ca4:	f7ff fb32 	bl	801430c <_ZSt7forwardI13mult_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 8014ca8:	4603      	mov	r3, r0
 8014caa:	781c      	ldrb	r4, [r3, #0]
 8014cac:	68bb      	ldr	r3, [r7, #8]
 8014cae:	4619      	mov	r1, r3
 8014cb0:	2001      	movs	r0, #1
 8014cb2:	f7ec f9bb 	bl	800102c <_ZnwjPv>
 8014cb6:	4603      	mov	r3, r0
 8014cb8:	4622      	mov	r2, r4
 8014cba:	701a      	strb	r2, [r3, #0]
 8014cbc:	bf00      	nop
 8014cbe:	3714      	adds	r7, #20
 8014cc0:	46bd      	mov	sp, r7
 8014cc2:	bd90      	pop	{r4, r7, pc}

08014cc4 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8014cc4:	b480      	push	{r7}
 8014cc6:	b083      	sub	sp, #12
 8014cc8:	af00      	add	r7, sp, #0
 8014cca:	6078      	str	r0, [r7, #4]
 8014ccc:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8014cce:	683b      	ldr	r3, [r7, #0]
 8014cd0:	681a      	ldr	r2, [r3, #0]
 8014cd2:	687b      	ldr	r3, [r7, #4]
 8014cd4:	601a      	str	r2, [r3, #0]
 8014cd6:	687b      	ldr	r3, [r7, #4]
 8014cd8:	4618      	mov	r0, r3
 8014cda:	370c      	adds	r7, #12
 8014cdc:	46bd      	mov	sp, r7
 8014cde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ce2:	4770      	bx	lr

08014ce4 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8014ce4:	b590      	push	{r4, r7, lr}
 8014ce6:	b087      	sub	sp, #28
 8014ce8:	af00      	add	r7, sp, #0
 8014cea:	60f8      	str	r0, [r7, #12]
 8014cec:	60b9      	str	r1, [r7, #8]
 8014cee:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 8014cf0:	68f8      	ldr	r0, [r7, #12]
 8014cf2:	f000 fc84 	bl	80155fe <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 8014cf6:	4604      	mov	r4, r0
 8014cf8:	68f8      	ldr	r0, [r7, #12]
 8014cfa:	f000 fc91 	bl	8015620 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 8014cfe:	4603      	mov	r3, r0
 8014d00:	1ae2      	subs	r2, r4, r3
 8014d02:	68bb      	ldr	r3, [r7, #8]
 8014d04:	429a      	cmp	r2, r3
 8014d06:	bf34      	ite	cc
 8014d08:	2301      	movcc	r3, #1
 8014d0a:	2300      	movcs	r3, #0
 8014d0c:	b2db      	uxtb	r3, r3
 8014d0e:	2b00      	cmp	r3, #0
 8014d10:	d002      	beq.n	8014d18 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8014d12:	6878      	ldr	r0, [r7, #4]
 8014d14:	f00b fb46 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8014d18:	68f8      	ldr	r0, [r7, #12]
 8014d1a:	f000 fc81 	bl	8015620 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 8014d1e:	4604      	mov	r4, r0
 8014d20:	68f8      	ldr	r0, [r7, #12]
 8014d22:	f000 fc7d 	bl	8015620 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 8014d26:	4603      	mov	r3, r0
 8014d28:	613b      	str	r3, [r7, #16]
 8014d2a:	f107 0208 	add.w	r2, r7, #8
 8014d2e:	f107 0310 	add.w	r3, r7, #16
 8014d32:	4611      	mov	r1, r2
 8014d34:	4618      	mov	r0, r3
 8014d36:	f7f9 fba0 	bl	800e47a <_ZSt3maxIjERKT_S2_S2_>
 8014d3a:	4603      	mov	r3, r0
 8014d3c:	681b      	ldr	r3, [r3, #0]
 8014d3e:	4423      	add	r3, r4
 8014d40:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8014d42:	68f8      	ldr	r0, [r7, #12]
 8014d44:	f000 fc6c 	bl	8015620 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>
 8014d48:	4602      	mov	r2, r0
 8014d4a:	697b      	ldr	r3, [r7, #20]
 8014d4c:	4293      	cmp	r3, r2
 8014d4e:	d306      	bcc.n	8014d5e <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 8014d50:	68f8      	ldr	r0, [r7, #12]
 8014d52:	f000 fc54 	bl	80155fe <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 8014d56:	4602      	mov	r2, r0
 8014d58:	697b      	ldr	r3, [r7, #20]
 8014d5a:	4293      	cmp	r3, r2
 8014d5c:	d904      	bls.n	8014d68 <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 8014d5e:	68f8      	ldr	r0, [r7, #12]
 8014d60:	f000 fc4d 	bl	80155fe <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>
 8014d64:	4603      	mov	r3, r0
 8014d66:	e000      	b.n	8014d6a <_ZNKSt6vectorI13mult_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 8014d68:	697b      	ldr	r3, [r7, #20]
      }
 8014d6a:	4618      	mov	r0, r3
 8014d6c:	371c      	adds	r7, #28
 8014d6e:	46bd      	mov	sp, r7
 8014d70:	bd90      	pop	{r4, r7, pc}

08014d72 <_ZNSt6vectorI13mult_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8014d72:	b580      	push	{r7, lr}
 8014d74:	b084      	sub	sp, #16
 8014d76:	af00      	add	r7, sp, #0
 8014d78:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 8014d7a:	687a      	ldr	r2, [r7, #4]
 8014d7c:	f107 030c 	add.w	r3, r7, #12
 8014d80:	4611      	mov	r1, r2
 8014d82:	4618      	mov	r0, r3
 8014d84:	f7ff ff9e 	bl	8014cc4 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8014d88:	68fb      	ldr	r3, [r7, #12]
 8014d8a:	4618      	mov	r0, r3
 8014d8c:	3710      	adds	r7, #16
 8014d8e:	46bd      	mov	sp, r7
 8014d90:	bd80      	pop	{r7, pc}

08014d92 <_ZN9__gnu_cxxmiIP13mult_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8014d92:	b590      	push	{r4, r7, lr}
 8014d94:	b083      	sub	sp, #12
 8014d96:	af00      	add	r7, sp, #0
 8014d98:	6078      	str	r0, [r7, #4]
 8014d9a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8014d9c:	6878      	ldr	r0, [r7, #4]
 8014d9e:	f000 f834 	bl	8014e0a <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 8014da2:	4603      	mov	r3, r0
 8014da4:	681c      	ldr	r4, [r3, #0]
 8014da6:	6838      	ldr	r0, [r7, #0]
 8014da8:	f000 f82f 	bl	8014e0a <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 8014dac:	4603      	mov	r3, r0
 8014dae:	681b      	ldr	r3, [r3, #0]
 8014db0:	1ae3      	subs	r3, r4, r3
 8014db2:	4618      	mov	r0, r3
 8014db4:	370c      	adds	r7, #12
 8014db6:	46bd      	mov	sp, r7
 8014db8:	bd90      	pop	{r4, r7, pc}

08014dba <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8014dba:	b580      	push	{r7, lr}
 8014dbc:	b082      	sub	sp, #8
 8014dbe:	af00      	add	r7, sp, #0
 8014dc0:	6078      	str	r0, [r7, #4]
 8014dc2:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8014dc4:	683b      	ldr	r3, [r7, #0]
 8014dc6:	2b00      	cmp	r3, #0
 8014dc8:	d006      	beq.n	8014dd8 <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x1e>
 8014dca:	687b      	ldr	r3, [r7, #4]
 8014dcc:	6839      	ldr	r1, [r7, #0]
 8014dce:	4618      	mov	r0, r3
 8014dd0:	f000 fc35 	bl	801563e <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>
 8014dd4:	4603      	mov	r3, r0
 8014dd6:	e000      	b.n	8014dda <_ZNSt12_Vector_baseI13mult_operatorSaIS0_EE11_M_allocateEj+0x20>
 8014dd8:	2300      	movs	r3, #0
      }
 8014dda:	4618      	mov	r0, r3
 8014ddc:	3708      	adds	r7, #8
 8014dde:	46bd      	mov	sp, r7
 8014de0:	bd80      	pop	{r7, pc}

08014de2 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8014de2:	b590      	push	{r4, r7, lr}
 8014de4:	b089      	sub	sp, #36	; 0x24
 8014de6:	af02      	add	r7, sp, #8
 8014de8:	60f8      	str	r0, [r7, #12]
 8014dea:	60b9      	str	r1, [r7, #8]
 8014dec:	607a      	str	r2, [r7, #4]
 8014dee:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8014df0:	f88d 4000 	strb.w	r4, [sp]
 8014df4:	683b      	ldr	r3, [r7, #0]
 8014df6:	687a      	ldr	r2, [r7, #4]
 8014df8:	68b9      	ldr	r1, [r7, #8]
 8014dfa:	68f8      	ldr	r0, [r7, #12]
 8014dfc:	f000 fc2e 	bl	801565c <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 8014e00:	4603      	mov	r3, r0
      }
 8014e02:	4618      	mov	r0, r3
 8014e04:	371c      	adds	r7, #28
 8014e06:	46bd      	mov	sp, r7
 8014e08:	bd90      	pop	{r4, r7, pc}

08014e0a <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8014e0a:	b480      	push	{r7}
 8014e0c:	b083      	sub	sp, #12
 8014e0e:	af00      	add	r7, sp, #0
 8014e10:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 8014e12:	687b      	ldr	r3, [r7, #4]
 8014e14:	4618      	mov	r0, r3
 8014e16:	370c      	adds	r7, #12
 8014e18:	46bd      	mov	sp, r7
 8014e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e1e:	4770      	bx	lr

08014e20 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8014e20:	b580      	push	{r7, lr}
 8014e22:	b084      	sub	sp, #16
 8014e24:	af00      	add	r7, sp, #0
 8014e26:	6078      	str	r0, [r7, #4]
 8014e28:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8014e2a:	687b      	ldr	r3, [r7, #4]
 8014e2c:	681a      	ldr	r2, [r3, #0]
 8014e2e:	683b      	ldr	r3, [r7, #0]
 8014e30:	425b      	negs	r3, r3
 8014e32:	4413      	add	r3, r2
 8014e34:	60fb      	str	r3, [r7, #12]
 8014e36:	f107 020c 	add.w	r2, r7, #12
 8014e3a:	f107 0308 	add.w	r3, r7, #8
 8014e3e:	4611      	mov	r1, r2
 8014e40:	4618      	mov	r0, r3
 8014e42:	f7ff ff3f 	bl	8014cc4 <_ZN9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 8014e46:	68bb      	ldr	r3, [r7, #8]
 8014e48:	4618      	mov	r0, r3
 8014e4a:	3710      	adds	r7, #16
 8014e4c:	46bd      	mov	sp, r7
 8014e4e:	bd80      	pop	{r7, pc}

08014e50 <_ZNK9__gnu_cxx17__normal_iteratorIP13mult_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8014e50:	b480      	push	{r7}
 8014e52:	b083      	sub	sp, #12
 8014e54:	af00      	add	r7, sp, #0
 8014e56:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8014e58:	687b      	ldr	r3, [r7, #4]
 8014e5a:	681b      	ldr	r3, [r3, #0]
 8014e5c:	4618      	mov	r0, r3
 8014e5e:	370c      	adds	r7, #12
 8014e60:	46bd      	mov	sp, r7
 8014e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e66:	4770      	bx	lr

08014e68 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8014e68:	b590      	push	{r4, r7, lr}
 8014e6a:	b085      	sub	sp, #20
 8014e6c:	af00      	add	r7, sp, #0
 8014e6e:	60f8      	str	r0, [r7, #12]
 8014e70:	60b9      	str	r1, [r7, #8]
 8014e72:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8014e74:	6878      	ldr	r0, [r7, #4]
 8014e76:	f7ff fb24 	bl	80144c2 <_ZSt7forwardIP16Power_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8014e7a:	4603      	mov	r3, r0
 8014e7c:	681c      	ldr	r4, [r3, #0]
 8014e7e:	68bb      	ldr	r3, [r7, #8]
 8014e80:	4619      	mov	r1, r3
 8014e82:	2004      	movs	r0, #4
 8014e84:	f7ec f8d2 	bl	800102c <_ZnwjPv>
 8014e88:	4603      	mov	r3, r0
 8014e8a:	601c      	str	r4, [r3, #0]
 8014e8c:	bf00      	nop
 8014e8e:	3714      	adds	r7, #20
 8014e90:	46bd      	mov	sp, r7
 8014e92:	bd90      	pop	{r4, r7, pc}

08014e94 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8014e94:	b590      	push	{r4, r7, lr}
 8014e96:	b087      	sub	sp, #28
 8014e98:	af00      	add	r7, sp, #0
 8014e9a:	60f8      	str	r0, [r7, #12]
 8014e9c:	60b9      	str	r1, [r7, #8]
 8014e9e:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 8014ea0:	68f8      	ldr	r0, [r7, #12]
 8014ea2:	f000 fbed 	bl	8015680 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 8014ea6:	4604      	mov	r4, r0
 8014ea8:	68f8      	ldr	r0, [r7, #12]
 8014eaa:	f000 fbfa 	bl	80156a2 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 8014eae:	4603      	mov	r3, r0
 8014eb0:	1ae2      	subs	r2, r4, r3
 8014eb2:	68bb      	ldr	r3, [r7, #8]
 8014eb4:	429a      	cmp	r2, r3
 8014eb6:	bf34      	ite	cc
 8014eb8:	2301      	movcc	r3, #1
 8014eba:	2300      	movcs	r3, #0
 8014ebc:	b2db      	uxtb	r3, r3
 8014ebe:	2b00      	cmp	r3, #0
 8014ec0:	d002      	beq.n	8014ec8 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8014ec2:	6878      	ldr	r0, [r7, #4]
 8014ec4:	f00b fa6e 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8014ec8:	68f8      	ldr	r0, [r7, #12]
 8014eca:	f000 fbea 	bl	80156a2 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 8014ece:	4604      	mov	r4, r0
 8014ed0:	68f8      	ldr	r0, [r7, #12]
 8014ed2:	f000 fbe6 	bl	80156a2 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 8014ed6:	4603      	mov	r3, r0
 8014ed8:	613b      	str	r3, [r7, #16]
 8014eda:	f107 0208 	add.w	r2, r7, #8
 8014ede:	f107 0310 	add.w	r3, r7, #16
 8014ee2:	4611      	mov	r1, r2
 8014ee4:	4618      	mov	r0, r3
 8014ee6:	f7f9 fac8 	bl	800e47a <_ZSt3maxIjERKT_S2_S2_>
 8014eea:	4603      	mov	r3, r0
 8014eec:	681b      	ldr	r3, [r3, #0]
 8014eee:	4423      	add	r3, r4
 8014ef0:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8014ef2:	68f8      	ldr	r0, [r7, #12]
 8014ef4:	f000 fbd5 	bl	80156a2 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>
 8014ef8:	4602      	mov	r2, r0
 8014efa:	697b      	ldr	r3, [r7, #20]
 8014efc:	4293      	cmp	r3, r2
 8014efe:	d306      	bcc.n	8014f0e <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 8014f00:	68f8      	ldr	r0, [r7, #12]
 8014f02:	f000 fbbd 	bl	8015680 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 8014f06:	4602      	mov	r2, r0
 8014f08:	697b      	ldr	r3, [r7, #20]
 8014f0a:	4293      	cmp	r3, r2
 8014f0c:	d904      	bls.n	8014f18 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 8014f0e:	68f8      	ldr	r0, [r7, #12]
 8014f10:	f000 fbb6 	bl	8015680 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>
 8014f14:	4603      	mov	r3, r0
 8014f16:	e000      	b.n	8014f1a <_ZNKSt6vectorIP16Power_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 8014f18:	697b      	ldr	r3, [r7, #20]
      }
 8014f1a:	4618      	mov	r0, r3
 8014f1c:	371c      	adds	r7, #28
 8014f1e:	46bd      	mov	sp, r7
 8014f20:	bd90      	pop	{r4, r7, pc}

08014f22 <_ZN9__gnu_cxxmiIPP16Power_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8014f22:	b590      	push	{r4, r7, lr}
 8014f24:	b083      	sub	sp, #12
 8014f26:	af00      	add	r7, sp, #0
 8014f28:	6078      	str	r0, [r7, #4]
 8014f2a:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8014f2c:	6878      	ldr	r0, [r7, #4]
 8014f2e:	f7f0 f84a 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014f32:	4603      	mov	r3, r0
 8014f34:	681c      	ldr	r4, [r3, #0]
 8014f36:	6838      	ldr	r0, [r7, #0]
 8014f38:	f7f0 f845 	bl	8004fc6 <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8014f3c:	4603      	mov	r3, r0
 8014f3e:	681b      	ldr	r3, [r3, #0]
 8014f40:	1ae3      	subs	r3, r4, r3
 8014f42:	109b      	asrs	r3, r3, #2
 8014f44:	4618      	mov	r0, r3
 8014f46:	370c      	adds	r7, #12
 8014f48:	46bd      	mov	sp, r7
 8014f4a:	bd90      	pop	{r4, r7, pc}

08014f4c <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8014f4c:	b580      	push	{r7, lr}
 8014f4e:	b082      	sub	sp, #8
 8014f50:	af00      	add	r7, sp, #0
 8014f52:	6078      	str	r0, [r7, #4]
 8014f54:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 8014f56:	683b      	ldr	r3, [r7, #0]
 8014f58:	2b00      	cmp	r3, #0
 8014f5a:	d006      	beq.n	8014f6a <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x1e>
 8014f5c:	687b      	ldr	r3, [r7, #4]
 8014f5e:	6839      	ldr	r1, [r7, #0]
 8014f60:	4618      	mov	r0, r3
 8014f62:	f000 fbae 	bl	80156c2 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>
 8014f66:	4603      	mov	r3, r0
 8014f68:	e000      	b.n	8014f6c <_ZNSt12_Vector_baseIP16Power_expressionSaIS1_EE11_M_allocateEj+0x20>
 8014f6a:	2300      	movs	r3, #0
      }
 8014f6c:	4618      	mov	r0, r3
 8014f6e:	3708      	adds	r7, #8
 8014f70:	46bd      	mov	sp, r7
 8014f72:	bd80      	pop	{r7, pc}

08014f74 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8014f74:	b590      	push	{r4, r7, lr}
 8014f76:	b089      	sub	sp, #36	; 0x24
 8014f78:	af02      	add	r7, sp, #8
 8014f7a:	60f8      	str	r0, [r7, #12]
 8014f7c:	60b9      	str	r1, [r7, #8]
 8014f7e:	607a      	str	r2, [r7, #4]
 8014f80:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8014f82:	f88d 4000 	strb.w	r4, [sp]
 8014f86:	683b      	ldr	r3, [r7, #0]
 8014f88:	687a      	ldr	r2, [r7, #4]
 8014f8a:	68b9      	ldr	r1, [r7, #8]
 8014f8c:	68f8      	ldr	r0, [r7, #12]
 8014f8e:	f000 fba7 	bl	80156e0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8014f92:	4603      	mov	r3, r0
      }
 8014f94:	4618      	mov	r0, r3
 8014f96:	371c      	adds	r7, #28
 8014f98:	46bd      	mov	sp, r7
 8014f9a:	bd90      	pop	{r4, r7, pc}

08014f9c <_ZNK9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8014f9c:	b580      	push	{r7, lr}
 8014f9e:	b084      	sub	sp, #16
 8014fa0:	af00      	add	r7, sp, #0
 8014fa2:	6078      	str	r0, [r7, #4]
 8014fa4:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8014fa6:	687b      	ldr	r3, [r7, #4]
 8014fa8:	681a      	ldr	r2, [r3, #0]
 8014faa:	683b      	ldr	r3, [r7, #0]
 8014fac:	009b      	lsls	r3, r3, #2
 8014fae:	425b      	negs	r3, r3
 8014fb0:	4413      	add	r3, r2
 8014fb2:	60fb      	str	r3, [r7, #12]
 8014fb4:	f107 020c 	add.w	r2, r7, #12
 8014fb8:	f107 0308 	add.w	r3, r7, #8
 8014fbc:	4611      	mov	r1, r2
 8014fbe:	4618      	mov	r0, r3
 8014fc0:	f7ef fff1 	bl	8004fa6 <_ZN9__gnu_cxx17__normal_iteratorIPP16Power_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8014fc4:	68bb      	ldr	r3, [r7, #8]
 8014fc6:	4618      	mov	r0, r3
 8014fc8:	3710      	adds	r7, #16
 8014fca:	46bd      	mov	sp, r7
 8014fcc:	bd80      	pop	{r7, pc}

08014fce <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8014fce:	b590      	push	{r4, r7, lr}
 8014fd0:	b085      	sub	sp, #20
 8014fd2:	af00      	add	r7, sp, #0
 8014fd4:	60f8      	str	r0, [r7, #12]
 8014fd6:	60b9      	str	r1, [r7, #8]
 8014fd8:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8014fda:	6878      	ldr	r0, [r7, #4]
 8014fdc:	f7ff fb27 	bl	801462e <_ZSt7forwardI12sum_operatorEOT_RNSt16remove_referenceIS1_E4typeE>
 8014fe0:	4603      	mov	r3, r0
 8014fe2:	781c      	ldrb	r4, [r3, #0]
 8014fe4:	68bb      	ldr	r3, [r7, #8]
 8014fe6:	4619      	mov	r1, r3
 8014fe8:	2001      	movs	r0, #1
 8014fea:	f7ec f81f 	bl	800102c <_ZnwjPv>
 8014fee:	4603      	mov	r3, r0
 8014ff0:	4622      	mov	r2, r4
 8014ff2:	701a      	strb	r2, [r3, #0]
 8014ff4:	bf00      	nop
 8014ff6:	3714      	adds	r7, #20
 8014ff8:	46bd      	mov	sp, r7
 8014ffa:	bd90      	pop	{r4, r7, pc}

08014ffc <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 8014ffc:	b480      	push	{r7}
 8014ffe:	b083      	sub	sp, #12
 8015000:	af00      	add	r7, sp, #0
 8015002:	6078      	str	r0, [r7, #4]
 8015004:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 8015006:	683b      	ldr	r3, [r7, #0]
 8015008:	681a      	ldr	r2, [r3, #0]
 801500a:	687b      	ldr	r3, [r7, #4]
 801500c:	601a      	str	r2, [r3, #0]
 801500e:	687b      	ldr	r3, [r7, #4]
 8015010:	4618      	mov	r0, r3
 8015012:	370c      	adds	r7, #12
 8015014:	46bd      	mov	sp, r7
 8015016:	f85d 7b04 	ldr.w	r7, [sp], #4
 801501a:	4770      	bx	lr

0801501c <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 801501c:	b590      	push	{r4, r7, lr}
 801501e:	b087      	sub	sp, #28
 8015020:	af00      	add	r7, sp, #0
 8015022:	60f8      	str	r0, [r7, #12]
 8015024:	60b9      	str	r1, [r7, #8]
 8015026:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 8015028:	68f8      	ldr	r0, [r7, #12]
 801502a:	f000 fb6b 	bl	8015704 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801502e:	4604      	mov	r4, r0
 8015030:	68f8      	ldr	r0, [r7, #12]
 8015032:	f000 fb78 	bl	8015726 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 8015036:	4603      	mov	r3, r0
 8015038:	1ae2      	subs	r2, r4, r3
 801503a:	68bb      	ldr	r3, [r7, #8]
 801503c:	429a      	cmp	r2, r3
 801503e:	bf34      	ite	cc
 8015040:	2301      	movcc	r3, #1
 8015042:	2300      	movcs	r3, #0
 8015044:	b2db      	uxtb	r3, r3
 8015046:	2b00      	cmp	r3, #0
 8015048:	d002      	beq.n	8015050 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 801504a:	6878      	ldr	r0, [r7, #4]
 801504c:	f00b f9aa 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8015050:	68f8      	ldr	r0, [r7, #12]
 8015052:	f000 fb68 	bl	8015726 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 8015056:	4604      	mov	r4, r0
 8015058:	68f8      	ldr	r0, [r7, #12]
 801505a:	f000 fb64 	bl	8015726 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 801505e:	4603      	mov	r3, r0
 8015060:	613b      	str	r3, [r7, #16]
 8015062:	f107 0208 	add.w	r2, r7, #8
 8015066:	f107 0310 	add.w	r3, r7, #16
 801506a:	4611      	mov	r1, r2
 801506c:	4618      	mov	r0, r3
 801506e:	f7f9 fa04 	bl	800e47a <_ZSt3maxIjERKT_S2_S2_>
 8015072:	4603      	mov	r3, r0
 8015074:	681b      	ldr	r3, [r3, #0]
 8015076:	4423      	add	r3, r4
 8015078:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801507a:	68f8      	ldr	r0, [r7, #12]
 801507c:	f000 fb53 	bl	8015726 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>
 8015080:	4602      	mov	r2, r0
 8015082:	697b      	ldr	r3, [r7, #20]
 8015084:	4293      	cmp	r3, r2
 8015086:	d306      	bcc.n	8015096 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x7a>
 8015088:	68f8      	ldr	r0, [r7, #12]
 801508a:	f000 fb3b 	bl	8015704 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801508e:	4602      	mov	r2, r0
 8015090:	697b      	ldr	r3, [r7, #20]
 8015092:	4293      	cmp	r3, r2
 8015094:	d904      	bls.n	80150a0 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x84>
 8015096:	68f8      	ldr	r0, [r7, #12]
 8015098:	f000 fb34 	bl	8015704 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>
 801509c:	4603      	mov	r3, r0
 801509e:	e000      	b.n	80150a2 <_ZNKSt6vectorI12sum_operatorSaIS0_EE12_M_check_lenEjPKc+0x86>
 80150a0:	697b      	ldr	r3, [r7, #20]
      }
 80150a2:	4618      	mov	r0, r3
 80150a4:	371c      	adds	r7, #28
 80150a6:	46bd      	mov	sp, r7
 80150a8:	bd90      	pop	{r4, r7, pc}

080150aa <_ZNSt6vectorI12sum_operatorSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 80150aa:	b580      	push	{r7, lr}
 80150ac:	b084      	sub	sp, #16
 80150ae:	af00      	add	r7, sp, #0
 80150b0:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_start); }
 80150b2:	687a      	ldr	r2, [r7, #4]
 80150b4:	f107 030c 	add.w	r3, r7, #12
 80150b8:	4611      	mov	r1, r2
 80150ba:	4618      	mov	r0, r3
 80150bc:	f7ff ff9e 	bl	8014ffc <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 80150c0:	68fb      	ldr	r3, [r7, #12]
 80150c2:	4618      	mov	r0, r3
 80150c4:	3710      	adds	r7, #16
 80150c6:	46bd      	mov	sp, r7
 80150c8:	bd80      	pop	{r7, pc}

080150ca <_ZN9__gnu_cxxmiIP12sum_operatorSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 80150ca:	b590      	push	{r4, r7, lr}
 80150cc:	b083      	sub	sp, #12
 80150ce:	af00      	add	r7, sp, #0
 80150d0:	6078      	str	r0, [r7, #4]
 80150d2:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 80150d4:	6878      	ldr	r0, [r7, #4]
 80150d6:	f000 f834 	bl	8015142 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 80150da:	4603      	mov	r3, r0
 80150dc:	681c      	ldr	r4, [r3, #0]
 80150de:	6838      	ldr	r0, [r7, #0]
 80150e0:	f000 f82f 	bl	8015142 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>
 80150e4:	4603      	mov	r3, r0
 80150e6:	681b      	ldr	r3, [r3, #0]
 80150e8:	1ae3      	subs	r3, r4, r3
 80150ea:	4618      	mov	r0, r3
 80150ec:	370c      	adds	r7, #12
 80150ee:	46bd      	mov	sp, r7
 80150f0:	bd90      	pop	{r4, r7, pc}

080150f2 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 80150f2:	b580      	push	{r7, lr}
 80150f4:	b082      	sub	sp, #8
 80150f6:	af00      	add	r7, sp, #0
 80150f8:	6078      	str	r0, [r7, #4]
 80150fa:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 80150fc:	683b      	ldr	r3, [r7, #0]
 80150fe:	2b00      	cmp	r3, #0
 8015100:	d006      	beq.n	8015110 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x1e>
 8015102:	687b      	ldr	r3, [r7, #4]
 8015104:	6839      	ldr	r1, [r7, #0]
 8015106:	4618      	mov	r0, r3
 8015108:	f000 fb1c 	bl	8015744 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>
 801510c:	4603      	mov	r3, r0
 801510e:	e000      	b.n	8015112 <_ZNSt12_Vector_baseI12sum_operatorSaIS0_EE11_M_allocateEj+0x20>
 8015110:	2300      	movs	r3, #0
      }
 8015112:	4618      	mov	r0, r3
 8015114:	3708      	adds	r7, #8
 8015116:	46bd      	mov	sp, r7
 8015118:	bd80      	pop	{r7, pc}

0801511a <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 801511a:	b590      	push	{r4, r7, lr}
 801511c:	b089      	sub	sp, #36	; 0x24
 801511e:	af02      	add	r7, sp, #8
 8015120:	60f8      	str	r0, [r7, #12]
 8015122:	60b9      	str	r1, [r7, #8]
 8015124:	607a      	str	r2, [r7, #4]
 8015126:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015128:	f88d 4000 	strb.w	r4, [sp]
 801512c:	683b      	ldr	r3, [r7, #0]
 801512e:	687a      	ldr	r2, [r7, #4]
 8015130:	68b9      	ldr	r1, [r7, #8]
 8015132:	68f8      	ldr	r0, [r7, #12]
 8015134:	f000 fb15 	bl	8015762 <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>
 8015138:	4603      	mov	r3, r0
      }
 801513a:	4618      	mov	r0, r3
 801513c:	371c      	adds	r7, #28
 801513e:	46bd      	mov	sp, r7
 8015140:	bd90      	pop	{r4, r7, pc}

08015142 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 8015142:	b480      	push	{r7}
 8015144:	b083      	sub	sp, #12
 8015146:	af00      	add	r7, sp, #0
 8015148:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801514a:	687b      	ldr	r3, [r7, #4]
 801514c:	4618      	mov	r0, r3
 801514e:	370c      	adds	r7, #12
 8015150:	46bd      	mov	sp, r7
 8015152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015156:	4770      	bx	lr

08015158 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 8015158:	b580      	push	{r7, lr}
 801515a:	b084      	sub	sp, #16
 801515c:	af00      	add	r7, sp, #0
 801515e:	6078      	str	r0, [r7, #4]
 8015160:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8015162:	687b      	ldr	r3, [r7, #4]
 8015164:	681a      	ldr	r2, [r3, #0]
 8015166:	683b      	ldr	r3, [r7, #0]
 8015168:	425b      	negs	r3, r3
 801516a:	4413      	add	r3, r2
 801516c:	60fb      	str	r3, [r7, #12]
 801516e:	f107 020c 	add.w	r2, r7, #12
 8015172:	f107 0308 	add.w	r3, r7, #8
 8015176:	4611      	mov	r1, r2
 8015178:	4618      	mov	r0, r3
 801517a:	f7ff ff3f 	bl	8014ffc <_ZN9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEC1ERKS2_>
 801517e:	68bb      	ldr	r3, [r7, #8]
 8015180:	4618      	mov	r0, r3
 8015182:	3710      	adds	r7, #16
 8015184:	46bd      	mov	sp, r7
 8015186:	bd80      	pop	{r7, pc}

08015188 <_ZNK9__gnu_cxx17__normal_iteratorIP12sum_operatorSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8015188:	b480      	push	{r7}
 801518a:	b083      	sub	sp, #12
 801518c:	af00      	add	r7, sp, #0
 801518e:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 8015190:	687b      	ldr	r3, [r7, #4]
 8015192:	681b      	ldr	r3, [r3, #0]
 8015194:	4618      	mov	r0, r3
 8015196:	370c      	adds	r7, #12
 8015198:	46bd      	mov	sp, r7
 801519a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801519e:	4770      	bx	lr

080151a0 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 80151a0:	b590      	push	{r4, r7, lr}
 80151a2:	b085      	sub	sp, #20
 80151a4:	af00      	add	r7, sp, #0
 80151a6:	60f8      	str	r0, [r7, #12]
 80151a8:	60b9      	str	r1, [r7, #8]
 80151aa:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 80151ac:	6878      	ldr	r0, [r7, #4]
 80151ae:	f7ff fb18 	bl	80147e2 <_ZSt7forwardIP19Multiply_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 80151b2:	4603      	mov	r3, r0
 80151b4:	681c      	ldr	r4, [r3, #0]
 80151b6:	68bb      	ldr	r3, [r7, #8]
 80151b8:	4619      	mov	r1, r3
 80151ba:	2004      	movs	r0, #4
 80151bc:	f7eb ff36 	bl	800102c <_ZnwjPv>
 80151c0:	4603      	mov	r3, r0
 80151c2:	601c      	str	r4, [r3, #0]
 80151c4:	bf00      	nop
 80151c6:	3714      	adds	r7, #20
 80151c8:	46bd      	mov	sp, r7
 80151ca:	bd90      	pop	{r4, r7, pc}

080151cc <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 80151cc:	b590      	push	{r4, r7, lr}
 80151ce:	b087      	sub	sp, #28
 80151d0:	af00      	add	r7, sp, #0
 80151d2:	60f8      	str	r0, [r7, #12]
 80151d4:	60b9      	str	r1, [r7, #8]
 80151d6:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 80151d8:	68f8      	ldr	r0, [r7, #12]
 80151da:	f000 fad4 	bl	8015786 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 80151de:	4604      	mov	r4, r0
 80151e0:	68f8      	ldr	r0, [r7, #12]
 80151e2:	f000 fae1 	bl	80157a8 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 80151e6:	4603      	mov	r3, r0
 80151e8:	1ae2      	subs	r2, r4, r3
 80151ea:	68bb      	ldr	r3, [r7, #8]
 80151ec:	429a      	cmp	r2, r3
 80151ee:	bf34      	ite	cc
 80151f0:	2301      	movcc	r3, #1
 80151f2:	2300      	movcs	r3, #0
 80151f4:	b2db      	uxtb	r3, r3
 80151f6:	2b00      	cmp	r3, #0
 80151f8:	d002      	beq.n	8015200 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 80151fa:	6878      	ldr	r0, [r7, #4]
 80151fc:	f00b f8d2 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8015200:	68f8      	ldr	r0, [r7, #12]
 8015202:	f000 fad1 	bl	80157a8 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 8015206:	4604      	mov	r4, r0
 8015208:	68f8      	ldr	r0, [r7, #12]
 801520a:	f000 facd 	bl	80157a8 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 801520e:	4603      	mov	r3, r0
 8015210:	613b      	str	r3, [r7, #16]
 8015212:	f107 0208 	add.w	r2, r7, #8
 8015216:	f107 0310 	add.w	r3, r7, #16
 801521a:	4611      	mov	r1, r2
 801521c:	4618      	mov	r0, r3
 801521e:	f7f9 f92c 	bl	800e47a <_ZSt3maxIjERKT_S2_S2_>
 8015222:	4603      	mov	r3, r0
 8015224:	681b      	ldr	r3, [r3, #0]
 8015226:	4423      	add	r3, r4
 8015228:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 801522a:	68f8      	ldr	r0, [r7, #12]
 801522c:	f000 fabc 	bl	80157a8 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>
 8015230:	4602      	mov	r2, r0
 8015232:	697b      	ldr	r3, [r7, #20]
 8015234:	4293      	cmp	r3, r2
 8015236:	d306      	bcc.n	8015246 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015238:	68f8      	ldr	r0, [r7, #12]
 801523a:	f000 faa4 	bl	8015786 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801523e:	4602      	mov	r2, r0
 8015240:	697b      	ldr	r3, [r7, #20]
 8015242:	4293      	cmp	r3, r2
 8015244:	d904      	bls.n	8015250 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 8015246:	68f8      	ldr	r0, [r7, #12]
 8015248:	f000 fa9d 	bl	8015786 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>
 801524c:	4603      	mov	r3, r0
 801524e:	e000      	b.n	8015252 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 8015250:	697b      	ldr	r3, [r7, #20]
      }
 8015252:	4618      	mov	r0, r3
 8015254:	371c      	adds	r7, #28
 8015256:	46bd      	mov	sp, r7
 8015258:	bd90      	pop	{r4, r7, pc}

0801525a <_ZN9__gnu_cxxmiIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 801525a:	b590      	push	{r4, r7, lr}
 801525c:	b083      	sub	sp, #12
 801525e:	af00      	add	r7, sp, #0
 8015260:	6078      	str	r0, [r7, #4]
 8015262:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015264:	6878      	ldr	r0, [r7, #4]
 8015266:	f7ef ff44 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 801526a:	4603      	mov	r3, r0
 801526c:	681c      	ldr	r4, [r3, #0]
 801526e:	6838      	ldr	r0, [r7, #0]
 8015270:	f7ef ff3f 	bl	80050f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8015274:	4603      	mov	r3, r0
 8015276:	681b      	ldr	r3, [r3, #0]
 8015278:	1ae3      	subs	r3, r4, r3
 801527a:	109b      	asrs	r3, r3, #2
 801527c:	4618      	mov	r0, r3
 801527e:	370c      	adds	r7, #12
 8015280:	46bd      	mov	sp, r7
 8015282:	bd90      	pop	{r4, r7, pc}

08015284 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8015284:	b580      	push	{r7, lr}
 8015286:	b082      	sub	sp, #8
 8015288:	af00      	add	r7, sp, #0
 801528a:	6078      	str	r0, [r7, #4]
 801528c:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801528e:	683b      	ldr	r3, [r7, #0]
 8015290:	2b00      	cmp	r3, #0
 8015292:	d006      	beq.n	80152a2 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x1e>
 8015294:	687b      	ldr	r3, [r7, #4]
 8015296:	6839      	ldr	r1, [r7, #0]
 8015298:	4618      	mov	r0, r3
 801529a:	f000 fa95 	bl	80157c8 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>
 801529e:	4603      	mov	r3, r0
 80152a0:	e000      	b.n	80152a4 <_ZNSt12_Vector_baseIP19Multiply_expressionSaIS1_EE11_M_allocateEj+0x20>
 80152a2:	2300      	movs	r3, #0
      }
 80152a4:	4618      	mov	r0, r3
 80152a6:	3708      	adds	r7, #8
 80152a8:	46bd      	mov	sp, r7
 80152aa:	bd80      	pop	{r7, pc}

080152ac <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 80152ac:	b590      	push	{r4, r7, lr}
 80152ae:	b089      	sub	sp, #36	; 0x24
 80152b0:	af02      	add	r7, sp, #8
 80152b2:	60f8      	str	r0, [r7, #12]
 80152b4:	60b9      	str	r1, [r7, #8]
 80152b6:	607a      	str	r2, [r7, #4]
 80152b8:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 80152ba:	f88d 4000 	strb.w	r4, [sp]
 80152be:	683b      	ldr	r3, [r7, #0]
 80152c0:	687a      	ldr	r2, [r7, #4]
 80152c2:	68b9      	ldr	r1, [r7, #8]
 80152c4:	68f8      	ldr	r0, [r7, #12]
 80152c6:	f000 fa8e 	bl	80157e6 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 80152ca:	4603      	mov	r3, r0
      }
 80152cc:	4618      	mov	r0, r3
 80152ce:	371c      	adds	r7, #28
 80152d0:	46bd      	mov	sp, r7
 80152d2:	bd90      	pop	{r4, r7, pc}

080152d4 <_ZNK9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 80152d4:	b580      	push	{r7, lr}
 80152d6:	b084      	sub	sp, #16
 80152d8:	af00      	add	r7, sp, #0
 80152da:	6078      	str	r0, [r7, #4]
 80152dc:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 80152de:	687b      	ldr	r3, [r7, #4]
 80152e0:	681a      	ldr	r2, [r3, #0]
 80152e2:	683b      	ldr	r3, [r7, #0]
 80152e4:	009b      	lsls	r3, r3, #2
 80152e6:	425b      	negs	r3, r3
 80152e8:	4413      	add	r3, r2
 80152ea:	60fb      	str	r3, [r7, #12]
 80152ec:	f107 020c 	add.w	r2, r7, #12
 80152f0:	f107 0308 	add.w	r3, r7, #8
 80152f4:	4611      	mov	r1, r2
 80152f6:	4618      	mov	r0, r3
 80152f8:	f7ef feeb 	bl	80050d2 <_ZN9__gnu_cxx17__normal_iteratorIPP19Multiply_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80152fc:	68bb      	ldr	r3, [r7, #8]
 80152fe:	4618      	mov	r0, r3
 8015300:	3710      	adds	r7, #16
 8015302:	46bd      	mov	sp, r7
 8015304:	bd80      	pop	{r7, pc}

08015306 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8015306:	b590      	push	{r4, r7, lr}
 8015308:	b085      	sub	sp, #20
 801530a:	af00      	add	r7, sp, #0
 801530c:	60f8      	str	r0, [r7, #12]
 801530e:	60b9      	str	r1, [r7, #8]
 8015310:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8015312:	6878      	ldr	r0, [r7, #4]
 8015314:	f7ff fb26 	bl	8014964 <_ZSt7forwardIP18Compare_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 8015318:	4603      	mov	r3, r0
 801531a:	681c      	ldr	r4, [r3, #0]
 801531c:	68bb      	ldr	r3, [r7, #8]
 801531e:	4619      	mov	r1, r3
 8015320:	2004      	movs	r0, #4
 8015322:	f7eb fe83 	bl	800102c <_ZnwjPv>
 8015326:	4603      	mov	r3, r0
 8015328:	601c      	str	r4, [r3, #0]
 801532a:	bf00      	nop
 801532c:	3714      	adds	r7, #20
 801532e:	46bd      	mov	sp, r7
 8015330:	bd90      	pop	{r4, r7, pc}

08015332 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8015332:	b590      	push	{r4, r7, lr}
 8015334:	b087      	sub	sp, #28
 8015336:	af00      	add	r7, sp, #0
 8015338:	60f8      	str	r0, [r7, #12]
 801533a:	60b9      	str	r1, [r7, #8]
 801533c:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 801533e:	68f8      	ldr	r0, [r7, #12]
 8015340:	f000 fa63 	bl	801580a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 8015344:	4604      	mov	r4, r0
 8015346:	68f8      	ldr	r0, [r7, #12]
 8015348:	f7f1 fcfb 	bl	8006d42 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801534c:	4603      	mov	r3, r0
 801534e:	1ae2      	subs	r2, r4, r3
 8015350:	68bb      	ldr	r3, [r7, #8]
 8015352:	429a      	cmp	r2, r3
 8015354:	bf34      	ite	cc
 8015356:	2301      	movcc	r3, #1
 8015358:	2300      	movcs	r3, #0
 801535a:	b2db      	uxtb	r3, r3
 801535c:	2b00      	cmp	r3, #0
 801535e:	d002      	beq.n	8015366 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 8015360:	6878      	ldr	r0, [r7, #4]
 8015362:	f00b f81f 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 8015366:	68f8      	ldr	r0, [r7, #12]
 8015368:	f7f1 fceb 	bl	8006d42 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 801536c:	4604      	mov	r4, r0
 801536e:	68f8      	ldr	r0, [r7, #12]
 8015370:	f7f1 fce7 	bl	8006d42 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 8015374:	4603      	mov	r3, r0
 8015376:	613b      	str	r3, [r7, #16]
 8015378:	f107 0208 	add.w	r2, r7, #8
 801537c:	f107 0310 	add.w	r3, r7, #16
 8015380:	4611      	mov	r1, r2
 8015382:	4618      	mov	r0, r3
 8015384:	f7f9 f879 	bl	800e47a <_ZSt3maxIjERKT_S2_S2_>
 8015388:	4603      	mov	r3, r0
 801538a:	681b      	ldr	r3, [r3, #0]
 801538c:	4423      	add	r3, r4
 801538e:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 8015390:	68f8      	ldr	r0, [r7, #12]
 8015392:	f7f1 fcd6 	bl	8006d42 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE4sizeEv>
 8015396:	4602      	mov	r2, r0
 8015398:	697b      	ldr	r3, [r7, #20]
 801539a:	4293      	cmp	r3, r2
 801539c:	d306      	bcc.n	80153ac <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 801539e:	68f8      	ldr	r0, [r7, #12]
 80153a0:	f000 fa33 	bl	801580a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 80153a4:	4602      	mov	r2, r0
 80153a6:	697b      	ldr	r3, [r7, #20]
 80153a8:	4293      	cmp	r3, r2
 80153aa:	d904      	bls.n	80153b6 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 80153ac:	68f8      	ldr	r0, [r7, #12]
 80153ae:	f000 fa2c 	bl	801580a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>
 80153b2:	4603      	mov	r3, r0
 80153b4:	e000      	b.n	80153b8 <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 80153b6:	697b      	ldr	r3, [r7, #20]
      }
 80153b8:	4618      	mov	r0, r3
 80153ba:	371c      	adds	r7, #28
 80153bc:	46bd      	mov	sp, r7
 80153be:	bd90      	pop	{r4, r7, pc}

080153c0 <_ZN9__gnu_cxxmiIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 80153c0:	b590      	push	{r4, r7, lr}
 80153c2:	b083      	sub	sp, #12
 80153c4:	af00      	add	r7, sp, #0
 80153c6:	6078      	str	r0, [r7, #4]
 80153c8:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 80153ca:	6878      	ldr	r0, [r7, #4]
 80153cc:	f7ef feea 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 80153d0:	4603      	mov	r3, r0
 80153d2:	681c      	ldr	r4, [r3, #0]
 80153d4:	6838      	ldr	r0, [r7, #0]
 80153d6:	f7ef fee5 	bl	80051a4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 80153da:	4603      	mov	r3, r0
 80153dc:	681b      	ldr	r3, [r3, #0]
 80153de:	1ae3      	subs	r3, r4, r3
 80153e0:	109b      	asrs	r3, r3, #2
 80153e2:	4618      	mov	r0, r3
 80153e4:	370c      	adds	r7, #12
 80153e6:	46bd      	mov	sp, r7
 80153e8:	bd90      	pop	{r4, r7, pc}

080153ea <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 80153ea:	b580      	push	{r7, lr}
 80153ec:	b082      	sub	sp, #8
 80153ee:	af00      	add	r7, sp, #0
 80153f0:	6078      	str	r0, [r7, #4]
 80153f2:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 80153f4:	683b      	ldr	r3, [r7, #0]
 80153f6:	2b00      	cmp	r3, #0
 80153f8:	d006      	beq.n	8015408 <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x1e>
 80153fa:	687b      	ldr	r3, [r7, #4]
 80153fc:	6839      	ldr	r1, [r7, #0]
 80153fe:	4618      	mov	r0, r3
 8015400:	f000 fa14 	bl	801582c <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>
 8015404:	4603      	mov	r3, r0
 8015406:	e000      	b.n	801540a <_ZNSt12_Vector_baseIP18Compare_expressionSaIS1_EE11_M_allocateEj+0x20>
 8015408:	2300      	movs	r3, #0
      }
 801540a:	4618      	mov	r0, r3
 801540c:	3708      	adds	r7, #8
 801540e:	46bd      	mov	sp, r7
 8015410:	bd80      	pop	{r7, pc}

08015412 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015412:	b590      	push	{r4, r7, lr}
 8015414:	b089      	sub	sp, #36	; 0x24
 8015416:	af02      	add	r7, sp, #8
 8015418:	60f8      	str	r0, [r7, #12]
 801541a:	60b9      	str	r1, [r7, #8]
 801541c:	607a      	str	r2, [r7, #4]
 801541e:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015420:	f88d 4000 	strb.w	r4, [sp]
 8015424:	683b      	ldr	r3, [r7, #0]
 8015426:	687a      	ldr	r2, [r7, #4]
 8015428:	68b9      	ldr	r1, [r7, #8]
 801542a:	68f8      	ldr	r0, [r7, #12]
 801542c:	f000 fa0d 	bl	801584a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015430:	4603      	mov	r3, r0
      }
 8015432:	4618      	mov	r0, r3
 8015434:	371c      	adds	r7, #28
 8015436:	46bd      	mov	sp, r7
 8015438:	bd90      	pop	{r4, r7, pc}

0801543a <_ZNK9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 801543a:	b580      	push	{r7, lr}
 801543c:	b084      	sub	sp, #16
 801543e:	af00      	add	r7, sp, #0
 8015440:	6078      	str	r0, [r7, #4]
 8015442:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 8015444:	687b      	ldr	r3, [r7, #4]
 8015446:	681a      	ldr	r2, [r3, #0]
 8015448:	683b      	ldr	r3, [r7, #0]
 801544a:	009b      	lsls	r3, r3, #2
 801544c:	425b      	negs	r3, r3
 801544e:	4413      	add	r3, r2
 8015450:	60fb      	str	r3, [r7, #12]
 8015452:	f107 020c 	add.w	r2, r7, #12
 8015456:	f107 0308 	add.w	r3, r7, #8
 801545a:	4611      	mov	r1, r2
 801545c:	4618      	mov	r0, r3
 801545e:	f7ef fe91 	bl	8005184 <_ZN9__gnu_cxx17__normal_iteratorIPP18Compare_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 8015462:	68bb      	ldr	r3, [r7, #8]
 8015464:	4618      	mov	r0, r3
 8015466:	3710      	adds	r7, #16
 8015468:	46bd      	mov	sp, r7
 801546a:	bd80      	pop	{r7, pc}

0801546c <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE9constructIS2_JS2_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801546c:	b590      	push	{r4, r7, lr}
 801546e:	b085      	sub	sp, #20
 8015470:	af00      	add	r7, sp, #0
 8015472:	60f8      	str	r0, [r7, #12]
 8015474:	60b9      	str	r1, [r7, #8]
 8015476:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8015478:	6878      	ldr	r0, [r7, #4]
 801547a:	f7ff fb33 	bl	8014ae4 <_ZSt7forwardIP14And_expressionEOT_RNSt16remove_referenceIS2_E4typeE>
 801547e:	4603      	mov	r3, r0
 8015480:	681c      	ldr	r4, [r3, #0]
 8015482:	68bb      	ldr	r3, [r7, #8]
 8015484:	4619      	mov	r1, r3
 8015486:	2004      	movs	r0, #4
 8015488:	f7eb fdd0 	bl	800102c <_ZnwjPv>
 801548c:	4603      	mov	r3, r0
 801548e:	601c      	str	r4, [r3, #0]
 8015490:	bf00      	nop
 8015492:	3714      	adds	r7, #20
 8015494:	46bd      	mov	sp, r7
 8015496:	bd90      	pop	{r4, r7, pc}

08015498 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc>:
      _M_check_len(size_type __n, const char* __s) const
 8015498:	b590      	push	{r4, r7, lr}
 801549a:	b087      	sub	sp, #28
 801549c:	af00      	add	r7, sp, #0
 801549e:	60f8      	str	r0, [r7, #12]
 80154a0:	60b9      	str	r1, [r7, #8]
 80154a2:	607a      	str	r2, [r7, #4]
	if (max_size() - size() < __n)
 80154a4:	68f8      	ldr	r0, [r7, #12]
 80154a6:	f000 f9e2 	bl	801586e <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 80154aa:	4604      	mov	r4, r0
 80154ac:	68f8      	ldr	r0, [r7, #12]
 80154ae:	f7f1 fc28 	bl	8006d02 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 80154b2:	4603      	mov	r3, r0
 80154b4:	1ae2      	subs	r2, r4, r3
 80154b6:	68bb      	ldr	r3, [r7, #8]
 80154b8:	429a      	cmp	r2, r3
 80154ba:	bf34      	ite	cc
 80154bc:	2301      	movcc	r3, #1
 80154be:	2300      	movcs	r3, #0
 80154c0:	b2db      	uxtb	r3, r3
 80154c2:	2b00      	cmp	r3, #0
 80154c4:	d002      	beq.n	80154cc <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x34>
	  __throw_length_error(__N(__s));
 80154c6:	6878      	ldr	r0, [r7, #4]
 80154c8:	f00a ff6c 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	const size_type __len = size() + (std::max)(size(), __n);
 80154cc:	68f8      	ldr	r0, [r7, #12]
 80154ce:	f7f1 fc18 	bl	8006d02 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 80154d2:	4604      	mov	r4, r0
 80154d4:	68f8      	ldr	r0, [r7, #12]
 80154d6:	f7f1 fc14 	bl	8006d02 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 80154da:	4603      	mov	r3, r0
 80154dc:	613b      	str	r3, [r7, #16]
 80154de:	f107 0208 	add.w	r2, r7, #8
 80154e2:	f107 0310 	add.w	r3, r7, #16
 80154e6:	4611      	mov	r1, r2
 80154e8:	4618      	mov	r0, r3
 80154ea:	f7f8 ffc6 	bl	800e47a <_ZSt3maxIjERKT_S2_S2_>
 80154ee:	4603      	mov	r3, r0
 80154f0:	681b      	ldr	r3, [r3, #0]
 80154f2:	4423      	add	r3, r4
 80154f4:	617b      	str	r3, [r7, #20]
	return (__len < size() || __len > max_size()) ? max_size() : __len;
 80154f6:	68f8      	ldr	r0, [r7, #12]
 80154f8:	f7f1 fc03 	bl	8006d02 <_ZNKSt6vectorIP14And_expressionSaIS1_EE4sizeEv>
 80154fc:	4602      	mov	r2, r0
 80154fe:	697b      	ldr	r3, [r7, #20]
 8015500:	4293      	cmp	r3, r2
 8015502:	d306      	bcc.n	8015512 <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x7a>
 8015504:	68f8      	ldr	r0, [r7, #12]
 8015506:	f000 f9b2 	bl	801586e <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 801550a:	4602      	mov	r2, r0
 801550c:	697b      	ldr	r3, [r7, #20]
 801550e:	4293      	cmp	r3, r2
 8015510:	d904      	bls.n	801551c <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x84>
 8015512:	68f8      	ldr	r0, [r7, #12]
 8015514:	f000 f9ab 	bl	801586e <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>
 8015518:	4603      	mov	r3, r0
 801551a:	e000      	b.n	801551e <_ZNKSt6vectorIP14And_expressionSaIS1_EE12_M_check_lenEjPKc+0x86>
 801551c:	697b      	ldr	r3, [r7, #20]
      }
 801551e:	4618      	mov	r0, r3
 8015520:	371c      	adds	r7, #28
 8015522:	46bd      	mov	sp, r7
 8015524:	bd90      	pop	{r4, r7, pc}

08015526 <_ZN9__gnu_cxxmiIPP14And_expressionSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 8015526:	b590      	push	{r4, r7, lr}
 8015528:	b083      	sub	sp, #12
 801552a:	af00      	add	r7, sp, #0
 801552c:	6078      	str	r0, [r7, #4]
 801552e:	6039      	str	r1, [r7, #0]
    { return __lhs.base() - __rhs.base(); }
 8015530:	6878      	ldr	r0, [r7, #4]
 8015532:	f7ef fe90 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8015536:	4603      	mov	r3, r0
 8015538:	681c      	ldr	r4, [r3, #0]
 801553a:	6838      	ldr	r0, [r7, #0]
 801553c:	f7ef fe8b 	bl	8005256 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEE4baseEv>
 8015540:	4603      	mov	r3, r0
 8015542:	681b      	ldr	r3, [r3, #0]
 8015544:	1ae3      	subs	r3, r4, r3
 8015546:	109b      	asrs	r3, r3, #2
 8015548:	4618      	mov	r0, r3
 801554a:	370c      	adds	r7, #12
 801554c:	46bd      	mov	sp, r7
 801554e:	bd90      	pop	{r4, r7, pc}

08015550 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8015550:	b580      	push	{r7, lr}
 8015552:	b082      	sub	sp, #8
 8015554:	af00      	add	r7, sp, #0
 8015556:	6078      	str	r0, [r7, #4]
 8015558:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801555a:	683b      	ldr	r3, [r7, #0]
 801555c:	2b00      	cmp	r3, #0
 801555e:	d006      	beq.n	801556e <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x1e>
 8015560:	687b      	ldr	r3, [r7, #4]
 8015562:	6839      	ldr	r1, [r7, #0]
 8015564:	4618      	mov	r0, r3
 8015566:	f000 f993 	bl	8015890 <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>
 801556a:	4603      	mov	r3, r0
 801556c:	e000      	b.n	8015570 <_ZNSt12_Vector_baseIP14And_expressionSaIS1_EE11_M_allocateEj+0x20>
 801556e:	2300      	movs	r3, #0
      }
 8015570:	4618      	mov	r0, r3
 8015572:	3708      	adds	r7, #8
 8015574:	46bd      	mov	sp, r7
 8015576:	bd80      	pop	{r7, pc}

08015578 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
 8015578:	b590      	push	{r4, r7, lr}
 801557a:	b089      	sub	sp, #36	; 0x24
 801557c:	af02      	add	r7, sp, #8
 801557e:	60f8      	str	r0, [r7, #12]
 8015580:	60b9      	str	r1, [r7, #8]
 8015582:	607a      	str	r2, [r7, #4]
 8015584:	603b      	str	r3, [r7, #0]
	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 8015586:	f88d 4000 	strb.w	r4, [sp]
 801558a:	683b      	ldr	r3, [r7, #0]
 801558c:	687a      	ldr	r2, [r7, #4]
 801558e:	68b9      	ldr	r1, [r7, #8]
 8015590:	68f8      	ldr	r0, [r7, #12]
 8015592:	f000 f98c 	bl	80158ae <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>
 8015596:	4603      	mov	r3, r0
      }
 8015598:	4618      	mov	r0, r3
 801559a:	371c      	adds	r7, #28
 801559c:	46bd      	mov	sp, r7
 801559e:	bd90      	pop	{r4, r7, pc}

080155a0 <_ZNK9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEmiEi>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 80155a0:	b580      	push	{r7, lr}
 80155a2:	b084      	sub	sp, #16
 80155a4:	af00      	add	r7, sp, #0
 80155a6:	6078      	str	r0, [r7, #4]
 80155a8:	6039      	str	r1, [r7, #0]
      { return __normal_iterator(_M_current - __n); }
 80155aa:	687b      	ldr	r3, [r7, #4]
 80155ac:	681a      	ldr	r2, [r3, #0]
 80155ae:	683b      	ldr	r3, [r7, #0]
 80155b0:	009b      	lsls	r3, r3, #2
 80155b2:	425b      	negs	r3, r3
 80155b4:	4413      	add	r3, r2
 80155b6:	60fb      	str	r3, [r7, #12]
 80155b8:	f107 020c 	add.w	r2, r7, #12
 80155bc:	f107 0308 	add.w	r3, r7, #8
 80155c0:	4611      	mov	r1, r2
 80155c2:	4618      	mov	r0, r3
 80155c4:	f7ef fe37 	bl	8005236 <_ZN9__gnu_cxx17__normal_iteratorIPP14And_expressionSt6vectorIS2_SaIS2_EEEC1ERKS3_>
 80155c8:	68bb      	ldr	r3, [r7, #8]
 80155ca:	4618      	mov	r0, r3
 80155cc:	3710      	adds	r7, #16
 80155ce:	46bd      	mov	sp, r7
 80155d0:	bd80      	pop	{r7, pc}

080155d2 <_ZSt11__addressofIP10ExpressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80155d2:	b480      	push	{r7}
 80155d4:	b083      	sub	sp, #12
 80155d6:	af00      	add	r7, sp, #0
 80155d8:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80155da:	687b      	ldr	r3, [r7, #4]
 80155dc:	4618      	mov	r0, r3
 80155de:	370c      	adds	r7, #12
 80155e0:	46bd      	mov	sp, r7
 80155e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80155e6:	4770      	bx	lr

080155e8 <_ZSt11__addressofIP17Primal_expressionEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80155e8:	b480      	push	{r7}
 80155ea:	b083      	sub	sp, #12
 80155ec:	af00      	add	r7, sp, #0
 80155ee:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 80155f0:	687b      	ldr	r3, [r7, #4]
 80155f2:	4618      	mov	r0, r3
 80155f4:	370c      	adds	r7, #12
 80155f6:	46bd      	mov	sp, r7
 80155f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80155fc:	4770      	bx	lr

080155fe <_ZNKSt6vectorI13mult_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 80155fe:	b580      	push	{r7, lr}
 8015600:	b082      	sub	sp, #8
 8015602:	af00      	add	r7, sp, #0
 8015604:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015606:	687b      	ldr	r3, [r7, #4]
 8015608:	4618      	mov	r0, r3
 801560a:	f000 f97c 	bl	8015906 <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 801560e:	4603      	mov	r3, r0
 8015610:	4618      	mov	r0, r3
 8015612:	f000 f95e 	bl	80158d2 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>
 8015616:	4603      	mov	r3, r0
 8015618:	4618      	mov	r0, r3
 801561a:	3708      	adds	r7, #8
 801561c:	46bd      	mov	sp, r7
 801561e:	bd80      	pop	{r7, pc}

08015620 <_ZNKSt6vectorI13mult_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8015620:	b480      	push	{r7}
 8015622:	b083      	sub	sp, #12
 8015624:	af00      	add	r7, sp, #0
 8015626:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8015628:	687b      	ldr	r3, [r7, #4]
 801562a:	685a      	ldr	r2, [r3, #4]
 801562c:	687b      	ldr	r3, [r7, #4]
 801562e:	681b      	ldr	r3, [r3, #0]
 8015630:	1ad3      	subs	r3, r2, r3
 8015632:	4618      	mov	r0, r3
 8015634:	370c      	adds	r7, #12
 8015636:	46bd      	mov	sp, r7
 8015638:	f85d 7b04 	ldr.w	r7, [sp], #4
 801563c:	4770      	bx	lr

0801563e <_ZNSt16allocator_traitsISaI13mult_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 801563e:	b580      	push	{r7, lr}
 8015640:	b082      	sub	sp, #8
 8015642:	af00      	add	r7, sp, #0
 8015644:	6078      	str	r0, [r7, #4]
 8015646:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015648:	2200      	movs	r2, #0
 801564a:	6839      	ldr	r1, [r7, #0]
 801564c:	6878      	ldr	r0, [r7, #4]
 801564e:	f000 f965 	bl	801591c <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>
 8015652:	4603      	mov	r3, r0
 8015654:	4618      	mov	r0, r3
 8015656:	3708      	adds	r7, #8
 8015658:	46bd      	mov	sp, r7
 801565a:	bd80      	pop	{r7, pc}

0801565c <_ZNSt6vectorI13mult_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801565c:	b580      	push	{r7, lr}
 801565e:	b084      	sub	sp, #16
 8015660:	af00      	add	r7, sp, #0
 8015662:	60f8      	str	r0, [r7, #12]
 8015664:	60b9      	str	r1, [r7, #8]
 8015666:	607a      	str	r2, [r7, #4]
 8015668:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 801566a:	683b      	ldr	r3, [r7, #0]
 801566c:	687a      	ldr	r2, [r7, #4]
 801566e:	68b9      	ldr	r1, [r7, #8]
 8015670:	68f8      	ldr	r0, [r7, #12]
 8015672:	f000 f970 	bl	8015956 <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 8015676:	4603      	mov	r3, r0
      }
 8015678:	4618      	mov	r0, r3
 801567a:	3710      	adds	r7, #16
 801567c:	46bd      	mov	sp, r7
 801567e:	bd80      	pop	{r7, pc}

08015680 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015680:	b580      	push	{r7, lr}
 8015682:	b082      	sub	sp, #8
 8015684:	af00      	add	r7, sp, #0
 8015686:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015688:	687b      	ldr	r3, [r7, #4]
 801568a:	4618      	mov	r0, r3
 801568c:	f000 f99a 	bl	80159c4 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8015690:	4603      	mov	r3, r0
 8015692:	4618      	mov	r0, r3
 8015694:	f000 f97c 	bl	8015990 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>
 8015698:	4603      	mov	r3, r0
 801569a:	4618      	mov	r0, r3
 801569c:	3708      	adds	r7, #8
 801569e:	46bd      	mov	sp, r7
 80156a0:	bd80      	pop	{r7, pc}

080156a2 <_ZNKSt6vectorIP16Power_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 80156a2:	b480      	push	{r7}
 80156a4:	b083      	sub	sp, #12
 80156a6:	af00      	add	r7, sp, #0
 80156a8:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 80156aa:	687b      	ldr	r3, [r7, #4]
 80156ac:	685a      	ldr	r2, [r3, #4]
 80156ae:	687b      	ldr	r3, [r7, #4]
 80156b0:	681b      	ldr	r3, [r3, #0]
 80156b2:	1ad3      	subs	r3, r2, r3
 80156b4:	109b      	asrs	r3, r3, #2
 80156b6:	4618      	mov	r0, r3
 80156b8:	370c      	adds	r7, #12
 80156ba:	46bd      	mov	sp, r7
 80156bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80156c0:	4770      	bx	lr

080156c2 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 80156c2:	b580      	push	{r7, lr}
 80156c4:	b082      	sub	sp, #8
 80156c6:	af00      	add	r7, sp, #0
 80156c8:	6078      	str	r0, [r7, #4]
 80156ca:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 80156cc:	2200      	movs	r2, #0
 80156ce:	6839      	ldr	r1, [r7, #0]
 80156d0:	6878      	ldr	r0, [r7, #4]
 80156d2:	f000 f982 	bl	80159da <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>
 80156d6:	4603      	mov	r3, r0
 80156d8:	4618      	mov	r0, r3
 80156da:	3708      	adds	r7, #8
 80156dc:	46bd      	mov	sp, r7
 80156de:	bd80      	pop	{r7, pc}

080156e0 <_ZNSt6vectorIP16Power_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 80156e0:	b580      	push	{r7, lr}
 80156e2:	b084      	sub	sp, #16
 80156e4:	af00      	add	r7, sp, #0
 80156e6:	60f8      	str	r0, [r7, #12]
 80156e8:	60b9      	str	r1, [r7, #8]
 80156ea:	607a      	str	r2, [r7, #4]
 80156ec:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 80156ee:	683b      	ldr	r3, [r7, #0]
 80156f0:	687a      	ldr	r2, [r7, #4]
 80156f2:	68b9      	ldr	r1, [r7, #8]
 80156f4:	68f8      	ldr	r0, [r7, #12]
 80156f6:	f000 f98f 	bl	8015a18 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 80156fa:	4603      	mov	r3, r0
      }
 80156fc:	4618      	mov	r0, r3
 80156fe:	3710      	adds	r7, #16
 8015700:	46bd      	mov	sp, r7
 8015702:	bd80      	pop	{r7, pc}

08015704 <_ZNKSt6vectorI12sum_operatorSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015704:	b580      	push	{r7, lr}
 8015706:	b082      	sub	sp, #8
 8015708:	af00      	add	r7, sp, #0
 801570a:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801570c:	687b      	ldr	r3, [r7, #4]
 801570e:	4618      	mov	r0, r3
 8015710:	f000 f9b9 	bl	8015a86 <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>
 8015714:	4603      	mov	r3, r0
 8015716:	4618      	mov	r0, r3
 8015718:	f000 f99b 	bl	8015a52 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>
 801571c:	4603      	mov	r3, r0
 801571e:	4618      	mov	r0, r3
 8015720:	3708      	adds	r7, #8
 8015722:	46bd      	mov	sp, r7
 8015724:	bd80      	pop	{r7, pc}

08015726 <_ZNKSt6vectorI12sum_operatorSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8015726:	b480      	push	{r7}
 8015728:	b083      	sub	sp, #12
 801572a:	af00      	add	r7, sp, #0
 801572c:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801572e:	687b      	ldr	r3, [r7, #4]
 8015730:	685a      	ldr	r2, [r3, #4]
 8015732:	687b      	ldr	r3, [r7, #4]
 8015734:	681b      	ldr	r3, [r3, #0]
 8015736:	1ad3      	subs	r3, r2, r3
 8015738:	4618      	mov	r0, r3
 801573a:	370c      	adds	r7, #12
 801573c:	46bd      	mov	sp, r7
 801573e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015742:	4770      	bx	lr

08015744 <_ZNSt16allocator_traitsISaI12sum_operatorEE8allocateERS1_j>:
      allocate(allocator_type& __a, size_type __n)
 8015744:	b580      	push	{r7, lr}
 8015746:	b082      	sub	sp, #8
 8015748:	af00      	add	r7, sp, #0
 801574a:	6078      	str	r0, [r7, #4]
 801574c:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801574e:	2200      	movs	r2, #0
 8015750:	6839      	ldr	r1, [r7, #0]
 8015752:	6878      	ldr	r0, [r7, #4]
 8015754:	f000 f9a2 	bl	8015a9c <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>
 8015758:	4603      	mov	r3, r0
 801575a:	4618      	mov	r0, r3
 801575c:	3708      	adds	r7, #8
 801575e:	46bd      	mov	sp, r7
 8015760:	bd80      	pop	{r7, pc}

08015762 <_ZNSt6vectorI12sum_operatorSaIS0_EE14_S_do_relocateEPS0_S3_S3_RS1_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 8015762:	b580      	push	{r7, lr}
 8015764:	b084      	sub	sp, #16
 8015766:	af00      	add	r7, sp, #0
 8015768:	60f8      	str	r0, [r7, #12]
 801576a:	60b9      	str	r1, [r7, #8]
 801576c:	607a      	str	r2, [r7, #4]
 801576e:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015770:	683b      	ldr	r3, [r7, #0]
 8015772:	687a      	ldr	r2, [r7, #4]
 8015774:	68b9      	ldr	r1, [r7, #8]
 8015776:	68f8      	ldr	r0, [r7, #12]
 8015778:	f000 f9ad 	bl	8015ad6 <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>
 801577c:	4603      	mov	r3, r0
      }
 801577e:	4618      	mov	r0, r3
 8015780:	3710      	adds	r7, #16
 8015782:	46bd      	mov	sp, r7
 8015784:	bd80      	pop	{r7, pc}

08015786 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015786:	b580      	push	{r7, lr}
 8015788:	b082      	sub	sp, #8
 801578a:	af00      	add	r7, sp, #0
 801578c:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 801578e:	687b      	ldr	r3, [r7, #4]
 8015790:	4618      	mov	r0, r3
 8015792:	f000 f9d7 	bl	8015b44 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8015796:	4603      	mov	r3, r0
 8015798:	4618      	mov	r0, r3
 801579a:	f000 f9b9 	bl	8015b10 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>
 801579e:	4603      	mov	r3, r0
 80157a0:	4618      	mov	r0, r3
 80157a2:	3708      	adds	r7, #8
 80157a4:	46bd      	mov	sp, r7
 80157a6:	bd80      	pop	{r7, pc}

080157a8 <_ZNKSt6vectorIP19Multiply_expressionSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 80157a8:	b480      	push	{r7}
 80157aa:	b083      	sub	sp, #12
 80157ac:	af00      	add	r7, sp, #0
 80157ae:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 80157b0:	687b      	ldr	r3, [r7, #4]
 80157b2:	685a      	ldr	r2, [r3, #4]
 80157b4:	687b      	ldr	r3, [r7, #4]
 80157b6:	681b      	ldr	r3, [r3, #0]
 80157b8:	1ad3      	subs	r3, r2, r3
 80157ba:	109b      	asrs	r3, r3, #2
 80157bc:	4618      	mov	r0, r3
 80157be:	370c      	adds	r7, #12
 80157c0:	46bd      	mov	sp, r7
 80157c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80157c6:	4770      	bx	lr

080157c8 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 80157c8:	b580      	push	{r7, lr}
 80157ca:	b082      	sub	sp, #8
 80157cc:	af00      	add	r7, sp, #0
 80157ce:	6078      	str	r0, [r7, #4]
 80157d0:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 80157d2:	2200      	movs	r2, #0
 80157d4:	6839      	ldr	r1, [r7, #0]
 80157d6:	6878      	ldr	r0, [r7, #4]
 80157d8:	f000 f9bf 	bl	8015b5a <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>
 80157dc:	4603      	mov	r3, r0
 80157de:	4618      	mov	r0, r3
 80157e0:	3708      	adds	r7, #8
 80157e2:	46bd      	mov	sp, r7
 80157e4:	bd80      	pop	{r7, pc}

080157e6 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 80157e6:	b580      	push	{r7, lr}
 80157e8:	b084      	sub	sp, #16
 80157ea:	af00      	add	r7, sp, #0
 80157ec:	60f8      	str	r0, [r7, #12]
 80157ee:	60b9      	str	r1, [r7, #8]
 80157f0:	607a      	str	r2, [r7, #4]
 80157f2:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 80157f4:	683b      	ldr	r3, [r7, #0]
 80157f6:	687a      	ldr	r2, [r7, #4]
 80157f8:	68b9      	ldr	r1, [r7, #8]
 80157fa:	68f8      	ldr	r0, [r7, #12]
 80157fc:	f000 f9cc 	bl	8015b98 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015800:	4603      	mov	r3, r0
      }
 8015802:	4618      	mov	r0, r3
 8015804:	3710      	adds	r7, #16
 8015806:	46bd      	mov	sp, r7
 8015808:	bd80      	pop	{r7, pc}

0801580a <_ZNKSt6vectorIP18Compare_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801580a:	b580      	push	{r7, lr}
 801580c:	b082      	sub	sp, #8
 801580e:	af00      	add	r7, sp, #0
 8015810:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015812:	687b      	ldr	r3, [r7, #4]
 8015814:	4618      	mov	r0, r3
 8015816:	f000 f9f6 	bl	8015c06 <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801581a:	4603      	mov	r3, r0
 801581c:	4618      	mov	r0, r3
 801581e:	f000 f9d8 	bl	8015bd2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>
 8015822:	4603      	mov	r3, r0
 8015824:	4618      	mov	r0, r3
 8015826:	3708      	adds	r7, #8
 8015828:	46bd      	mov	sp, r7
 801582a:	bd80      	pop	{r7, pc}

0801582c <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 801582c:	b580      	push	{r7, lr}
 801582e:	b082      	sub	sp, #8
 8015830:	af00      	add	r7, sp, #0
 8015832:	6078      	str	r0, [r7, #4]
 8015834:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015836:	2200      	movs	r2, #0
 8015838:	6839      	ldr	r1, [r7, #0]
 801583a:	6878      	ldr	r0, [r7, #4]
 801583c:	f000 f9ee 	bl	8015c1c <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>
 8015840:	4603      	mov	r3, r0
 8015842:	4618      	mov	r0, r3
 8015844:	3708      	adds	r7, #8
 8015846:	46bd      	mov	sp, r7
 8015848:	bd80      	pop	{r7, pc}

0801584a <_ZNSt6vectorIP18Compare_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 801584a:	b580      	push	{r7, lr}
 801584c:	b084      	sub	sp, #16
 801584e:	af00      	add	r7, sp, #0
 8015850:	60f8      	str	r0, [r7, #12]
 8015852:	60b9      	str	r1, [r7, #8]
 8015854:	607a      	str	r2, [r7, #4]
 8015856:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 8015858:	683b      	ldr	r3, [r7, #0]
 801585a:	687a      	ldr	r2, [r7, #4]
 801585c:	68b9      	ldr	r1, [r7, #8]
 801585e:	68f8      	ldr	r0, [r7, #12]
 8015860:	f000 f9fb 	bl	8015c5a <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 8015864:	4603      	mov	r3, r0
      }
 8015866:	4618      	mov	r0, r3
 8015868:	3710      	adds	r7, #16
 801586a:	46bd      	mov	sp, r7
 801586c:	bd80      	pop	{r7, pc}

0801586e <_ZNKSt6vectorIP14And_expressionSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 801586e:	b580      	push	{r7, lr}
 8015870:	b082      	sub	sp, #8
 8015872:	af00      	add	r7, sp, #0
 8015874:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015876:	687b      	ldr	r3, [r7, #4]
 8015878:	4618      	mov	r0, r3
 801587a:	f000 fa25 	bl	8015cc8 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>
 801587e:	4603      	mov	r3, r0
 8015880:	4618      	mov	r0, r3
 8015882:	f000 fa07 	bl	8015c94 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>
 8015886:	4603      	mov	r3, r0
 8015888:	4618      	mov	r0, r3
 801588a:	3708      	adds	r7, #8
 801588c:	46bd      	mov	sp, r7
 801588e:	bd80      	pop	{r7, pc}

08015890 <_ZNSt16allocator_traitsISaIP14And_expressionEE8allocateERS2_j>:
      allocate(allocator_type& __a, size_type __n)
 8015890:	b580      	push	{r7, lr}
 8015892:	b082      	sub	sp, #8
 8015894:	af00      	add	r7, sp, #0
 8015896:	6078      	str	r0, [r7, #4]
 8015898:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801589a:	2200      	movs	r2, #0
 801589c:	6839      	ldr	r1, [r7, #0]
 801589e:	6878      	ldr	r0, [r7, #4]
 80158a0:	f000 fa1d 	bl	8015cde <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>
 80158a4:	4603      	mov	r3, r0
 80158a6:	4618      	mov	r0, r3
 80158a8:	3708      	adds	r7, #8
 80158aa:	46bd      	mov	sp, r7
 80158ac:	bd80      	pop	{r7, pc}

080158ae <_ZNSt6vectorIP14And_expressionSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE>:
      _S_do_relocate(pointer __first, pointer __last, pointer __result,
 80158ae:	b580      	push	{r7, lr}
 80158b0:	b084      	sub	sp, #16
 80158b2:	af00      	add	r7, sp, #0
 80158b4:	60f8      	str	r0, [r7, #12]
 80158b6:	60b9      	str	r1, [r7, #8]
 80158b8:	607a      	str	r2, [r7, #4]
 80158ba:	603b      	str	r3, [r7, #0]
	return std::__relocate_a(__first, __last, __result, __alloc);
 80158bc:	683b      	ldr	r3, [r7, #0]
 80158be:	687a      	ldr	r2, [r7, #4]
 80158c0:	68b9      	ldr	r1, [r7, #8]
 80158c2:	68f8      	ldr	r0, [r7, #12]
 80158c4:	f000 fa2a 	bl	8015d1c <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>
 80158c8:	4603      	mov	r3, r0
      }
 80158ca:	4618      	mov	r0, r3
 80158cc:	3710      	adds	r7, #16
 80158ce:	46bd      	mov	sp, r7
 80158d0:	bd80      	pop	{r7, pc}

080158d2 <_ZNSt6vectorI13mult_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 80158d2:	b580      	push	{r7, lr}
 80158d4:	b084      	sub	sp, #16
 80158d6:	af00      	add	r7, sp, #0
 80158d8:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 80158da:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80158de:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 80158e0:	6878      	ldr	r0, [r7, #4]
 80158e2:	f000 fa38 	bl	8015d56 <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>
 80158e6:	4603      	mov	r3, r0
 80158e8:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 80158ea:	f107 0208 	add.w	r2, r7, #8
 80158ee:	f107 030c 	add.w	r3, r7, #12
 80158f2:	4611      	mov	r1, r2
 80158f4:	4618      	mov	r0, r3
 80158f6:	f7f9 f81b 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 80158fa:	4603      	mov	r3, r0
 80158fc:	681b      	ldr	r3, [r3, #0]
      }
 80158fe:	4618      	mov	r0, r3
 8015900:	3710      	adds	r7, #16
 8015902:	46bd      	mov	sp, r7
 8015904:	bd80      	pop	{r7, pc}

08015906 <_ZNKSt12_Vector_baseI13mult_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015906:	b480      	push	{r7}
 8015908:	b083      	sub	sp, #12
 801590a:	af00      	add	r7, sp, #0
 801590c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801590e:	687b      	ldr	r3, [r7, #4]
 8015910:	4618      	mov	r0, r3
 8015912:	370c      	adds	r7, #12
 8015914:	46bd      	mov	sp, r7
 8015916:	f85d 7b04 	ldr.w	r7, [sp], #4
 801591a:	4770      	bx	lr

0801591c <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801591c:	b580      	push	{r7, lr}
 801591e:	b084      	sub	sp, #16
 8015920:	af00      	add	r7, sp, #0
 8015922:	60f8      	str	r0, [r7, #12]
 8015924:	60b9      	str	r1, [r7, #8]
 8015926:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8015928:	68f8      	ldr	r0, [r7, #12]
 801592a:	f000 fa20 	bl	8015d6e <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 801592e:	4602      	mov	r2, r0
 8015930:	68bb      	ldr	r3, [r7, #8]
 8015932:	4293      	cmp	r3, r2
 8015934:	bf8c      	ite	hi
 8015936:	2301      	movhi	r3, #1
 8015938:	2300      	movls	r3, #0
 801593a:	b2db      	uxtb	r3, r3
 801593c:	2b00      	cmp	r3, #0
 801593e:	d001      	beq.n	8015944 <_ZN9__gnu_cxx13new_allocatorI13mult_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015940:	f00a fd27 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015944:	68b8      	ldr	r0, [r7, #8]
 8015946:	f00a fc5f 	bl	8020208 <_Znwj>
 801594a:	4603      	mov	r3, r0
 801594c:	bf00      	nop
      }
 801594e:	4618      	mov	r0, r3
 8015950:	3710      	adds	r7, #16
 8015952:	46bd      	mov	sp, r7
 8015954:	bd80      	pop	{r7, pc}

08015956 <_ZSt12__relocate_aIP13mult_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015956:	b5b0      	push	{r4, r5, r7, lr}
 8015958:	b084      	sub	sp, #16
 801595a:	af00      	add	r7, sp, #0
 801595c:	60f8      	str	r0, [r7, #12]
 801595e:	60b9      	str	r1, [r7, #8]
 8015960:	607a      	str	r2, [r7, #4]
 8015962:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015964:	68f8      	ldr	r0, [r7, #12]
 8015966:	f000 fa0e 	bl	8015d86 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801596a:	4604      	mov	r4, r0
 801596c:	68b8      	ldr	r0, [r7, #8]
 801596e:	f000 fa0a 	bl	8015d86 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 8015972:	4605      	mov	r5, r0
 8015974:	6878      	ldr	r0, [r7, #4]
 8015976:	f000 fa06 	bl	8015d86 <_ZSt12__niter_baseIP13mult_operatorET_S2_>
 801597a:	4602      	mov	r2, r0
 801597c:	683b      	ldr	r3, [r7, #0]
 801597e:	4629      	mov	r1, r5
 8015980:	4620      	mov	r0, r4
 8015982:	f000 fa0b 	bl	8015d9c <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 8015986:	4603      	mov	r3, r0
    }
 8015988:	4618      	mov	r0, r3
 801598a:	3710      	adds	r7, #16
 801598c:	46bd      	mov	sp, r7
 801598e:	bdb0      	pop	{r4, r5, r7, pc}

08015990 <_ZNSt6vectorIP16Power_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015990:	b580      	push	{r7, lr}
 8015992:	b084      	sub	sp, #16
 8015994:	af00      	add	r7, sp, #0
 8015996:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015998:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 801599c:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 801599e:	6878      	ldr	r0, [r7, #4]
 80159a0:	f000 fa17 	bl	8015dd2 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>
 80159a4:	4603      	mov	r3, r0
 80159a6:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 80159a8:	f107 0208 	add.w	r2, r7, #8
 80159ac:	f107 030c 	add.w	r3, r7, #12
 80159b0:	4611      	mov	r1, r2
 80159b2:	4618      	mov	r0, r3
 80159b4:	f7f8 ffbc 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 80159b8:	4603      	mov	r3, r0
 80159ba:	681b      	ldr	r3, [r3, #0]
      }
 80159bc:	4618      	mov	r0, r3
 80159be:	3710      	adds	r7, #16
 80159c0:	46bd      	mov	sp, r7
 80159c2:	bd80      	pop	{r7, pc}

080159c4 <_ZNKSt12_Vector_baseIP16Power_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 80159c4:	b480      	push	{r7}
 80159c6:	b083      	sub	sp, #12
 80159c8:	af00      	add	r7, sp, #0
 80159ca:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 80159cc:	687b      	ldr	r3, [r7, #4]
 80159ce:	4618      	mov	r0, r3
 80159d0:	370c      	adds	r7, #12
 80159d2:	46bd      	mov	sp, r7
 80159d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80159d8:	4770      	bx	lr

080159da <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80159da:	b580      	push	{r7, lr}
 80159dc:	b084      	sub	sp, #16
 80159de:	af00      	add	r7, sp, #0
 80159e0:	60f8      	str	r0, [r7, #12]
 80159e2:	60b9      	str	r1, [r7, #8]
 80159e4:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 80159e6:	68f8      	ldr	r0, [r7, #12]
 80159e8:	f000 f9ff 	bl	8015dea <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 80159ec:	4602      	mov	r2, r0
 80159ee:	68bb      	ldr	r3, [r7, #8]
 80159f0:	4293      	cmp	r3, r2
 80159f2:	bf8c      	ite	hi
 80159f4:	2301      	movhi	r3, #1
 80159f6:	2300      	movls	r3, #0
 80159f8:	b2db      	uxtb	r3, r3
 80159fa:	2b00      	cmp	r3, #0
 80159fc:	d001      	beq.n	8015a02 <_ZN9__gnu_cxx13new_allocatorIP16Power_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80159fe:	f00a fcc8 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015a02:	68bb      	ldr	r3, [r7, #8]
 8015a04:	009b      	lsls	r3, r3, #2
 8015a06:	4618      	mov	r0, r3
 8015a08:	f00a fbfe 	bl	8020208 <_Znwj>
 8015a0c:	4603      	mov	r3, r0
 8015a0e:	bf00      	nop
      }
 8015a10:	4618      	mov	r0, r3
 8015a12:	3710      	adds	r7, #16
 8015a14:	46bd      	mov	sp, r7
 8015a16:	bd80      	pop	{r7, pc}

08015a18 <_ZSt12__relocate_aIPP16Power_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015a18:	b5b0      	push	{r4, r5, r7, lr}
 8015a1a:	b084      	sub	sp, #16
 8015a1c:	af00      	add	r7, sp, #0
 8015a1e:	60f8      	str	r0, [r7, #12]
 8015a20:	60b9      	str	r1, [r7, #8]
 8015a22:	607a      	str	r2, [r7, #4]
 8015a24:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015a26:	68f8      	ldr	r0, [r7, #12]
 8015a28:	f000 f9eb 	bl	8015e02 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 8015a2c:	4604      	mov	r4, r0
 8015a2e:	68b8      	ldr	r0, [r7, #8]
 8015a30:	f000 f9e7 	bl	8015e02 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 8015a34:	4605      	mov	r5, r0
 8015a36:	6878      	ldr	r0, [r7, #4]
 8015a38:	f000 f9e3 	bl	8015e02 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>
 8015a3c:	4602      	mov	r2, r0
 8015a3e:	683b      	ldr	r3, [r7, #0]
 8015a40:	4629      	mov	r1, r5
 8015a42:	4620      	mov	r0, r4
 8015a44:	f000 f9e8 	bl	8015e18 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015a48:	4603      	mov	r3, r0
    }
 8015a4a:	4618      	mov	r0, r3
 8015a4c:	3710      	adds	r7, #16
 8015a4e:	46bd      	mov	sp, r7
 8015a50:	bdb0      	pop	{r4, r5, r7, pc}

08015a52 <_ZNSt6vectorI12sum_operatorSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015a52:	b580      	push	{r7, lr}
 8015a54:	b084      	sub	sp, #16
 8015a56:	af00      	add	r7, sp, #0
 8015a58:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015a5a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8015a5e:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015a60:	6878      	ldr	r0, [r7, #4]
 8015a62:	f000 f9f7 	bl	8015e54 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>
 8015a66:	4603      	mov	r3, r0
 8015a68:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015a6a:	f107 0208 	add.w	r2, r7, #8
 8015a6e:	f107 030c 	add.w	r3, r7, #12
 8015a72:	4611      	mov	r1, r2
 8015a74:	4618      	mov	r0, r3
 8015a76:	f7f8 ff5b 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 8015a7a:	4603      	mov	r3, r0
 8015a7c:	681b      	ldr	r3, [r3, #0]
      }
 8015a7e:	4618      	mov	r0, r3
 8015a80:	3710      	adds	r7, #16
 8015a82:	46bd      	mov	sp, r7
 8015a84:	bd80      	pop	{r7, pc}

08015a86 <_ZNKSt12_Vector_baseI12sum_operatorSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015a86:	b480      	push	{r7}
 8015a88:	b083      	sub	sp, #12
 8015a8a:	af00      	add	r7, sp, #0
 8015a8c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015a8e:	687b      	ldr	r3, [r7, #4]
 8015a90:	4618      	mov	r0, r3
 8015a92:	370c      	adds	r7, #12
 8015a94:	46bd      	mov	sp, r7
 8015a96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a9a:	4770      	bx	lr

08015a9c <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8015a9c:	b580      	push	{r7, lr}
 8015a9e:	b084      	sub	sp, #16
 8015aa0:	af00      	add	r7, sp, #0
 8015aa2:	60f8      	str	r0, [r7, #12]
 8015aa4:	60b9      	str	r1, [r7, #8]
 8015aa6:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8015aa8:	68f8      	ldr	r0, [r7, #12]
 8015aaa:	f000 f9df 	bl	8015e6c <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 8015aae:	4602      	mov	r2, r0
 8015ab0:	68bb      	ldr	r3, [r7, #8]
 8015ab2:	4293      	cmp	r3, r2
 8015ab4:	bf8c      	ite	hi
 8015ab6:	2301      	movhi	r3, #1
 8015ab8:	2300      	movls	r3, #0
 8015aba:	b2db      	uxtb	r3, r3
 8015abc:	2b00      	cmp	r3, #0
 8015abe:	d001      	beq.n	8015ac4 <_ZN9__gnu_cxx13new_allocatorI12sum_operatorE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015ac0:	f00a fc67 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015ac4:	68b8      	ldr	r0, [r7, #8]
 8015ac6:	f00a fb9f 	bl	8020208 <_Znwj>
 8015aca:	4603      	mov	r3, r0
 8015acc:	bf00      	nop
      }
 8015ace:	4618      	mov	r0, r3
 8015ad0:	3710      	adds	r7, #16
 8015ad2:	46bd      	mov	sp, r7
 8015ad4:	bd80      	pop	{r7, pc}

08015ad6 <_ZSt12__relocate_aIP12sum_operatorS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015ad6:	b5b0      	push	{r4, r5, r7, lr}
 8015ad8:	b084      	sub	sp, #16
 8015ada:	af00      	add	r7, sp, #0
 8015adc:	60f8      	str	r0, [r7, #12]
 8015ade:	60b9      	str	r1, [r7, #8]
 8015ae0:	607a      	str	r2, [r7, #4]
 8015ae2:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015ae4:	68f8      	ldr	r0, [r7, #12]
 8015ae6:	f000 f9cd 	bl	8015e84 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 8015aea:	4604      	mov	r4, r0
 8015aec:	68b8      	ldr	r0, [r7, #8]
 8015aee:	f000 f9c9 	bl	8015e84 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 8015af2:	4605      	mov	r5, r0
 8015af4:	6878      	ldr	r0, [r7, #4]
 8015af6:	f000 f9c5 	bl	8015e84 <_ZSt12__niter_baseIP12sum_operatorET_S2_>
 8015afa:	4602      	mov	r2, r0
 8015afc:	683b      	ldr	r3, [r7, #0]
 8015afe:	4629      	mov	r1, r5
 8015b00:	4620      	mov	r0, r4
 8015b02:	f000 f9ca 	bl	8015e9a <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
 8015b06:	4603      	mov	r3, r0
    }
 8015b08:	4618      	mov	r0, r3
 8015b0a:	3710      	adds	r7, #16
 8015b0c:	46bd      	mov	sp, r7
 8015b0e:	bdb0      	pop	{r4, r5, r7, pc}

08015b10 <_ZNSt6vectorIP19Multiply_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015b10:	b580      	push	{r7, lr}
 8015b12:	b084      	sub	sp, #16
 8015b14:	af00      	add	r7, sp, #0
 8015b16:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015b18:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8015b1c:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015b1e:	6878      	ldr	r0, [r7, #4]
 8015b20:	f000 f9d6 	bl	8015ed0 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>
 8015b24:	4603      	mov	r3, r0
 8015b26:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015b28:	f107 0208 	add.w	r2, r7, #8
 8015b2c:	f107 030c 	add.w	r3, r7, #12
 8015b30:	4611      	mov	r1, r2
 8015b32:	4618      	mov	r0, r3
 8015b34:	f7f8 fefc 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 8015b38:	4603      	mov	r3, r0
 8015b3a:	681b      	ldr	r3, [r3, #0]
      }
 8015b3c:	4618      	mov	r0, r3
 8015b3e:	3710      	adds	r7, #16
 8015b40:	46bd      	mov	sp, r7
 8015b42:	bd80      	pop	{r7, pc}

08015b44 <_ZNKSt12_Vector_baseIP19Multiply_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015b44:	b480      	push	{r7}
 8015b46:	b083      	sub	sp, #12
 8015b48:	af00      	add	r7, sp, #0
 8015b4a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015b4c:	687b      	ldr	r3, [r7, #4]
 8015b4e:	4618      	mov	r0, r3
 8015b50:	370c      	adds	r7, #12
 8015b52:	46bd      	mov	sp, r7
 8015b54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b58:	4770      	bx	lr

08015b5a <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8015b5a:	b580      	push	{r7, lr}
 8015b5c:	b084      	sub	sp, #16
 8015b5e:	af00      	add	r7, sp, #0
 8015b60:	60f8      	str	r0, [r7, #12]
 8015b62:	60b9      	str	r1, [r7, #8]
 8015b64:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8015b66:	68f8      	ldr	r0, [r7, #12]
 8015b68:	f000 f9be 	bl	8015ee8 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 8015b6c:	4602      	mov	r2, r0
 8015b6e:	68bb      	ldr	r3, [r7, #8]
 8015b70:	4293      	cmp	r3, r2
 8015b72:	bf8c      	ite	hi
 8015b74:	2301      	movhi	r3, #1
 8015b76:	2300      	movls	r3, #0
 8015b78:	b2db      	uxtb	r3, r3
 8015b7a:	2b00      	cmp	r3, #0
 8015b7c:	d001      	beq.n	8015b82 <_ZN9__gnu_cxx13new_allocatorIP19Multiply_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015b7e:	f00a fc08 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015b82:	68bb      	ldr	r3, [r7, #8]
 8015b84:	009b      	lsls	r3, r3, #2
 8015b86:	4618      	mov	r0, r3
 8015b88:	f00a fb3e 	bl	8020208 <_Znwj>
 8015b8c:	4603      	mov	r3, r0
 8015b8e:	bf00      	nop
      }
 8015b90:	4618      	mov	r0, r3
 8015b92:	3710      	adds	r7, #16
 8015b94:	46bd      	mov	sp, r7
 8015b96:	bd80      	pop	{r7, pc}

08015b98 <_ZSt12__relocate_aIPP19Multiply_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015b98:	b5b0      	push	{r4, r5, r7, lr}
 8015b9a:	b084      	sub	sp, #16
 8015b9c:	af00      	add	r7, sp, #0
 8015b9e:	60f8      	str	r0, [r7, #12]
 8015ba0:	60b9      	str	r1, [r7, #8]
 8015ba2:	607a      	str	r2, [r7, #4]
 8015ba4:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015ba6:	68f8      	ldr	r0, [r7, #12]
 8015ba8:	f000 f9aa 	bl	8015f00 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 8015bac:	4604      	mov	r4, r0
 8015bae:	68b8      	ldr	r0, [r7, #8]
 8015bb0:	f000 f9a6 	bl	8015f00 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 8015bb4:	4605      	mov	r5, r0
 8015bb6:	6878      	ldr	r0, [r7, #4]
 8015bb8:	f000 f9a2 	bl	8015f00 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>
 8015bbc:	4602      	mov	r2, r0
 8015bbe:	683b      	ldr	r3, [r7, #0]
 8015bc0:	4629      	mov	r1, r5
 8015bc2:	4620      	mov	r0, r4
 8015bc4:	f000 f9a7 	bl	8015f16 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015bc8:	4603      	mov	r3, r0
    }
 8015bca:	4618      	mov	r0, r3
 8015bcc:	3710      	adds	r7, #16
 8015bce:	46bd      	mov	sp, r7
 8015bd0:	bdb0      	pop	{r4, r5, r7, pc}

08015bd2 <_ZNSt6vectorIP18Compare_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015bd2:	b580      	push	{r7, lr}
 8015bd4:	b084      	sub	sp, #16
 8015bd6:	af00      	add	r7, sp, #0
 8015bd8:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015bda:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8015bde:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015be0:	6878      	ldr	r0, [r7, #4]
 8015be2:	f000 f9b6 	bl	8015f52 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>
 8015be6:	4603      	mov	r3, r0
 8015be8:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015bea:	f107 0208 	add.w	r2, r7, #8
 8015bee:	f107 030c 	add.w	r3, r7, #12
 8015bf2:	4611      	mov	r1, r2
 8015bf4:	4618      	mov	r0, r3
 8015bf6:	f7f8 fe9b 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 8015bfa:	4603      	mov	r3, r0
 8015bfc:	681b      	ldr	r3, [r3, #0]
      }
 8015bfe:	4618      	mov	r0, r3
 8015c00:	3710      	adds	r7, #16
 8015c02:	46bd      	mov	sp, r7
 8015c04:	bd80      	pop	{r7, pc}

08015c06 <_ZNKSt12_Vector_baseIP18Compare_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015c06:	b480      	push	{r7}
 8015c08:	b083      	sub	sp, #12
 8015c0a:	af00      	add	r7, sp, #0
 8015c0c:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015c0e:	687b      	ldr	r3, [r7, #4]
 8015c10:	4618      	mov	r0, r3
 8015c12:	370c      	adds	r7, #12
 8015c14:	46bd      	mov	sp, r7
 8015c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015c1a:	4770      	bx	lr

08015c1c <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8015c1c:	b580      	push	{r7, lr}
 8015c1e:	b084      	sub	sp, #16
 8015c20:	af00      	add	r7, sp, #0
 8015c22:	60f8      	str	r0, [r7, #12]
 8015c24:	60b9      	str	r1, [r7, #8]
 8015c26:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8015c28:	68f8      	ldr	r0, [r7, #12]
 8015c2a:	f000 f99e 	bl	8015f6a <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 8015c2e:	4602      	mov	r2, r0
 8015c30:	68bb      	ldr	r3, [r7, #8]
 8015c32:	4293      	cmp	r3, r2
 8015c34:	bf8c      	ite	hi
 8015c36:	2301      	movhi	r3, #1
 8015c38:	2300      	movls	r3, #0
 8015c3a:	b2db      	uxtb	r3, r3
 8015c3c:	2b00      	cmp	r3, #0
 8015c3e:	d001      	beq.n	8015c44 <_ZN9__gnu_cxx13new_allocatorIP18Compare_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015c40:	f00a fba7 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015c44:	68bb      	ldr	r3, [r7, #8]
 8015c46:	009b      	lsls	r3, r3, #2
 8015c48:	4618      	mov	r0, r3
 8015c4a:	f00a fadd 	bl	8020208 <_Znwj>
 8015c4e:	4603      	mov	r3, r0
 8015c50:	bf00      	nop
      }
 8015c52:	4618      	mov	r0, r3
 8015c54:	3710      	adds	r7, #16
 8015c56:	46bd      	mov	sp, r7
 8015c58:	bd80      	pop	{r7, pc}

08015c5a <_ZSt12__relocate_aIPP18Compare_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015c5a:	b5b0      	push	{r4, r5, r7, lr}
 8015c5c:	b084      	sub	sp, #16
 8015c5e:	af00      	add	r7, sp, #0
 8015c60:	60f8      	str	r0, [r7, #12]
 8015c62:	60b9      	str	r1, [r7, #8]
 8015c64:	607a      	str	r2, [r7, #4]
 8015c66:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015c68:	68f8      	ldr	r0, [r7, #12]
 8015c6a:	f000 f98a 	bl	8015f82 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 8015c6e:	4604      	mov	r4, r0
 8015c70:	68b8      	ldr	r0, [r7, #8]
 8015c72:	f000 f986 	bl	8015f82 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 8015c76:	4605      	mov	r5, r0
 8015c78:	6878      	ldr	r0, [r7, #4]
 8015c7a:	f000 f982 	bl	8015f82 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>
 8015c7e:	4602      	mov	r2, r0
 8015c80:	683b      	ldr	r3, [r7, #0]
 8015c82:	4629      	mov	r1, r5
 8015c84:	4620      	mov	r0, r4
 8015c86:	f000 f987 	bl	8015f98 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015c8a:	4603      	mov	r3, r0
    }
 8015c8c:	4618      	mov	r0, r3
 8015c8e:	3710      	adds	r7, #16
 8015c90:	46bd      	mov	sp, r7
 8015c92:	bdb0      	pop	{r4, r5, r7, pc}

08015c94 <_ZNSt6vectorIP14And_expressionSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8015c94:	b580      	push	{r7, lr}
 8015c96:	b084      	sub	sp, #16
 8015c98:	af00      	add	r7, sp, #0
 8015c9a:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 8015c9c:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 8015ca0:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8015ca2:	6878      	ldr	r0, [r7, #4]
 8015ca4:	f000 f996 	bl	8015fd4 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>
 8015ca8:	4603      	mov	r3, r0
 8015caa:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 8015cac:	f107 0208 	add.w	r2, r7, #8
 8015cb0:	f107 030c 	add.w	r3, r7, #12
 8015cb4:	4611      	mov	r1, r2
 8015cb6:	4618      	mov	r0, r3
 8015cb8:	f7f8 fe3a 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 8015cbc:	4603      	mov	r3, r0
 8015cbe:	681b      	ldr	r3, [r3, #0]
      }
 8015cc0:	4618      	mov	r0, r3
 8015cc2:	3710      	adds	r7, #16
 8015cc4:	46bd      	mov	sp, r7
 8015cc6:	bd80      	pop	{r7, pc}

08015cc8 <_ZNKSt12_Vector_baseIP14And_expressionSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015cc8:	b480      	push	{r7}
 8015cca:	b083      	sub	sp, #12
 8015ccc:	af00      	add	r7, sp, #0
 8015cce:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015cd0:	687b      	ldr	r3, [r7, #4]
 8015cd2:	4618      	mov	r0, r3
 8015cd4:	370c      	adds	r7, #12
 8015cd6:	46bd      	mov	sp, r7
 8015cd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015cdc:	4770      	bx	lr

08015cde <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8015cde:	b580      	push	{r7, lr}
 8015ce0:	b084      	sub	sp, #16
 8015ce2:	af00      	add	r7, sp, #0
 8015ce4:	60f8      	str	r0, [r7, #12]
 8015ce6:	60b9      	str	r1, [r7, #8]
 8015ce8:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8015cea:	68f8      	ldr	r0, [r7, #12]
 8015cec:	f000 f97e 	bl	8015fec <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 8015cf0:	4602      	mov	r2, r0
 8015cf2:	68bb      	ldr	r3, [r7, #8]
 8015cf4:	4293      	cmp	r3, r2
 8015cf6:	bf8c      	ite	hi
 8015cf8:	2301      	movhi	r3, #1
 8015cfa:	2300      	movls	r3, #0
 8015cfc:	b2db      	uxtb	r3, r3
 8015cfe:	2b00      	cmp	r3, #0
 8015d00:	d001      	beq.n	8015d06 <_ZN9__gnu_cxx13new_allocatorIP14And_expressionE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015d02:	f00a fb46 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8015d06:	68bb      	ldr	r3, [r7, #8]
 8015d08:	009b      	lsls	r3, r3, #2
 8015d0a:	4618      	mov	r0, r3
 8015d0c:	f00a fa7c 	bl	8020208 <_Znwj>
 8015d10:	4603      	mov	r3, r0
 8015d12:	bf00      	nop
      }
 8015d14:	4618      	mov	r0, r3
 8015d16:	3710      	adds	r7, #16
 8015d18:	46bd      	mov	sp, r7
 8015d1a:	bd80      	pop	{r7, pc}

08015d1c <_ZSt12__relocate_aIPP14And_expressionS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
 8015d1c:	b5b0      	push	{r4, r5, r7, lr}
 8015d1e:	b084      	sub	sp, #16
 8015d20:	af00      	add	r7, sp, #0
 8015d22:	60f8      	str	r0, [r7, #12]
 8015d24:	60b9      	str	r1, [r7, #8]
 8015d26:	607a      	str	r2, [r7, #4]
 8015d28:	603b      	str	r3, [r7, #0]
      return __relocate_a_1(std::__niter_base(__first),
 8015d2a:	68f8      	ldr	r0, [r7, #12]
 8015d2c:	f000 f96a 	bl	8016004 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 8015d30:	4604      	mov	r4, r0
 8015d32:	68b8      	ldr	r0, [r7, #8]
 8015d34:	f000 f966 	bl	8016004 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 8015d38:	4605      	mov	r5, r0
 8015d3a:	6878      	ldr	r0, [r7, #4]
 8015d3c:	f000 f962 	bl	8016004 <_ZSt12__niter_baseIPP14And_expressionET_S3_>
 8015d40:	4602      	mov	r2, r0
 8015d42:	683b      	ldr	r3, [r7, #0]
 8015d44:	4629      	mov	r1, r5
 8015d46:	4620      	mov	r0, r4
 8015d48:	f000 f967 	bl	801601a <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
 8015d4c:	4603      	mov	r3, r0
    }
 8015d4e:	4618      	mov	r0, r3
 8015d50:	3710      	adds	r7, #16
 8015d52:	46bd      	mov	sp, r7
 8015d54:	bdb0      	pop	{r4, r5, r7, pc}

08015d56 <_ZNSt16allocator_traitsISaI13mult_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 8015d56:	b580      	push	{r7, lr}
 8015d58:	b082      	sub	sp, #8
 8015d5a:	af00      	add	r7, sp, #0
 8015d5c:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015d5e:	6878      	ldr	r0, [r7, #4]
 8015d60:	f000 f805 	bl	8015d6e <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>
 8015d64:	4603      	mov	r3, r0
 8015d66:	4618      	mov	r0, r3
 8015d68:	3708      	adds	r7, #8
 8015d6a:	46bd      	mov	sp, r7
 8015d6c:	bd80      	pop	{r7, pc}

08015d6e <_ZNK9__gnu_cxx13new_allocatorI13mult_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015d6e:	b480      	push	{r7}
 8015d70:	b083      	sub	sp, #12
 8015d72:	af00      	add	r7, sp, #0
 8015d74:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015d76:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 8015d7a:	4618      	mov	r0, r3
 8015d7c:	370c      	adds	r7, #12
 8015d7e:	46bd      	mov	sp, r7
 8015d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015d84:	4770      	bx	lr

08015d86 <_ZSt12__niter_baseIP13mult_operatorET_S2_>:
    __niter_base(_Iterator __it)
 8015d86:	b480      	push	{r7}
 8015d88:	b083      	sub	sp, #12
 8015d8a:	af00      	add	r7, sp, #0
 8015d8c:	6078      	str	r0, [r7, #4]
    { return __it; }
 8015d8e:	687b      	ldr	r3, [r7, #4]
 8015d90:	4618      	mov	r0, r3
 8015d92:	370c      	adds	r7, #12
 8015d94:	46bd      	mov	sp, r7
 8015d96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015d9a:	4770      	bx	lr

08015d9c <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015d9c:	b580      	push	{r7, lr}
 8015d9e:	b086      	sub	sp, #24
 8015da0:	af00      	add	r7, sp, #0
 8015da2:	60f8      	str	r0, [r7, #12]
 8015da4:	60b9      	str	r1, [r7, #8]
 8015da6:	607a      	str	r2, [r7, #4]
 8015da8:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015daa:	68ba      	ldr	r2, [r7, #8]
 8015dac:	68fb      	ldr	r3, [r7, #12]
 8015dae:	1ad3      	subs	r3, r2, r3
 8015db0:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015db2:	697b      	ldr	r3, [r7, #20]
 8015db4:	2b00      	cmp	r3, #0
 8015db6:	dd05      	ble.n	8015dc4 <_ZSt14__relocate_a_1I13mult_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015db8:	697b      	ldr	r3, [r7, #20]
 8015dba:	461a      	mov	r2, r3
 8015dbc:	68f9      	ldr	r1, [r7, #12]
 8015dbe:	6878      	ldr	r0, [r7, #4]
 8015dc0:	f00b fd8a 	bl	80218d8 <memmove>
      return __result + __count;
 8015dc4:	697b      	ldr	r3, [r7, #20]
 8015dc6:	687a      	ldr	r2, [r7, #4]
 8015dc8:	4413      	add	r3, r2
    }
 8015dca:	4618      	mov	r0, r3
 8015dcc:	3718      	adds	r7, #24
 8015dce:	46bd      	mov	sp, r7
 8015dd0:	bd80      	pop	{r7, pc}

08015dd2 <_ZNSt16allocator_traitsISaIP16Power_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015dd2:	b580      	push	{r7, lr}
 8015dd4:	b082      	sub	sp, #8
 8015dd6:	af00      	add	r7, sp, #0
 8015dd8:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015dda:	6878      	ldr	r0, [r7, #4]
 8015ddc:	f000 f805 	bl	8015dea <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>
 8015de0:	4603      	mov	r3, r0
 8015de2:	4618      	mov	r0, r3
 8015de4:	3708      	adds	r7, #8
 8015de6:	46bd      	mov	sp, r7
 8015de8:	bd80      	pop	{r7, pc}

08015dea <_ZNK9__gnu_cxx13new_allocatorIP16Power_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015dea:	b480      	push	{r7}
 8015dec:	b083      	sub	sp, #12
 8015dee:	af00      	add	r7, sp, #0
 8015df0:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015df2:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8015df6:	4618      	mov	r0, r3
 8015df8:	370c      	adds	r7, #12
 8015dfa:	46bd      	mov	sp, r7
 8015dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015e00:	4770      	bx	lr

08015e02 <_ZSt12__niter_baseIPP16Power_expressionET_S3_>:
    __niter_base(_Iterator __it)
 8015e02:	b480      	push	{r7}
 8015e04:	b083      	sub	sp, #12
 8015e06:	af00      	add	r7, sp, #0
 8015e08:	6078      	str	r0, [r7, #4]
    { return __it; }
 8015e0a:	687b      	ldr	r3, [r7, #4]
 8015e0c:	4618      	mov	r0, r3
 8015e0e:	370c      	adds	r7, #12
 8015e10:	46bd      	mov	sp, r7
 8015e12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015e16:	4770      	bx	lr

08015e18 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015e18:	b580      	push	{r7, lr}
 8015e1a:	b086      	sub	sp, #24
 8015e1c:	af00      	add	r7, sp, #0
 8015e1e:	60f8      	str	r0, [r7, #12]
 8015e20:	60b9      	str	r1, [r7, #8]
 8015e22:	607a      	str	r2, [r7, #4]
 8015e24:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015e26:	68ba      	ldr	r2, [r7, #8]
 8015e28:	68fb      	ldr	r3, [r7, #12]
 8015e2a:	1ad3      	subs	r3, r2, r3
 8015e2c:	109b      	asrs	r3, r3, #2
 8015e2e:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015e30:	697b      	ldr	r3, [r7, #20]
 8015e32:	2b00      	cmp	r3, #0
 8015e34:	dd06      	ble.n	8015e44 <_ZSt14__relocate_a_1IP16Power_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015e36:	697b      	ldr	r3, [r7, #20]
 8015e38:	009b      	lsls	r3, r3, #2
 8015e3a:	461a      	mov	r2, r3
 8015e3c:	68f9      	ldr	r1, [r7, #12]
 8015e3e:	6878      	ldr	r0, [r7, #4]
 8015e40:	f00b fd4a 	bl	80218d8 <memmove>
      return __result + __count;
 8015e44:	697b      	ldr	r3, [r7, #20]
 8015e46:	009b      	lsls	r3, r3, #2
 8015e48:	687a      	ldr	r2, [r7, #4]
 8015e4a:	4413      	add	r3, r2
    }
 8015e4c:	4618      	mov	r0, r3
 8015e4e:	3718      	adds	r7, #24
 8015e50:	46bd      	mov	sp, r7
 8015e52:	bd80      	pop	{r7, pc}

08015e54 <_ZNSt16allocator_traitsISaI12sum_operatorEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a) noexcept
 8015e54:	b580      	push	{r7, lr}
 8015e56:	b082      	sub	sp, #8
 8015e58:	af00      	add	r7, sp, #0
 8015e5a:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015e5c:	6878      	ldr	r0, [r7, #4]
 8015e5e:	f000 f805 	bl	8015e6c <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>
 8015e62:	4603      	mov	r3, r0
 8015e64:	4618      	mov	r0, r3
 8015e66:	3708      	adds	r7, #8
 8015e68:	46bd      	mov	sp, r7
 8015e6a:	bd80      	pop	{r7, pc}

08015e6c <_ZNK9__gnu_cxx13new_allocatorI12sum_operatorE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015e6c:	b480      	push	{r7}
 8015e6e:	b083      	sub	sp, #12
 8015e70:	af00      	add	r7, sp, #0
 8015e72:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015e74:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
      }
 8015e78:	4618      	mov	r0, r3
 8015e7a:	370c      	adds	r7, #12
 8015e7c:	46bd      	mov	sp, r7
 8015e7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015e82:	4770      	bx	lr

08015e84 <_ZSt12__niter_baseIP12sum_operatorET_S2_>:
    __niter_base(_Iterator __it)
 8015e84:	b480      	push	{r7}
 8015e86:	b083      	sub	sp, #12
 8015e88:	af00      	add	r7, sp, #0
 8015e8a:	6078      	str	r0, [r7, #4]
    { return __it; }
 8015e8c:	687b      	ldr	r3, [r7, #4]
 8015e8e:	4618      	mov	r0, r3
 8015e90:	370c      	adds	r7, #12
 8015e92:	46bd      	mov	sp, r7
 8015e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015e98:	4770      	bx	lr

08015e9a <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015e9a:	b580      	push	{r7, lr}
 8015e9c:	b086      	sub	sp, #24
 8015e9e:	af00      	add	r7, sp, #0
 8015ea0:	60f8      	str	r0, [r7, #12]
 8015ea2:	60b9      	str	r1, [r7, #8]
 8015ea4:	607a      	str	r2, [r7, #4]
 8015ea6:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015ea8:	68ba      	ldr	r2, [r7, #8]
 8015eaa:	68fb      	ldr	r3, [r7, #12]
 8015eac:	1ad3      	subs	r3, r2, r3
 8015eae:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015eb0:	697b      	ldr	r3, [r7, #20]
 8015eb2:	2b00      	cmp	r3, #0
 8015eb4:	dd05      	ble.n	8015ec2 <_ZSt14__relocate_a_1I12sum_operatorS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x28>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015eb6:	697b      	ldr	r3, [r7, #20]
 8015eb8:	461a      	mov	r2, r3
 8015eba:	68f9      	ldr	r1, [r7, #12]
 8015ebc:	6878      	ldr	r0, [r7, #4]
 8015ebe:	f00b fd0b 	bl	80218d8 <memmove>
      return __result + __count;
 8015ec2:	697b      	ldr	r3, [r7, #20]
 8015ec4:	687a      	ldr	r2, [r7, #4]
 8015ec6:	4413      	add	r3, r2
    }
 8015ec8:	4618      	mov	r0, r3
 8015eca:	3718      	adds	r7, #24
 8015ecc:	46bd      	mov	sp, r7
 8015ece:	bd80      	pop	{r7, pc}

08015ed0 <_ZNSt16allocator_traitsISaIP19Multiply_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015ed0:	b580      	push	{r7, lr}
 8015ed2:	b082      	sub	sp, #8
 8015ed4:	af00      	add	r7, sp, #0
 8015ed6:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015ed8:	6878      	ldr	r0, [r7, #4]
 8015eda:	f000 f805 	bl	8015ee8 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>
 8015ede:	4603      	mov	r3, r0
 8015ee0:	4618      	mov	r0, r3
 8015ee2:	3708      	adds	r7, #8
 8015ee4:	46bd      	mov	sp, r7
 8015ee6:	bd80      	pop	{r7, pc}

08015ee8 <_ZNK9__gnu_cxx13new_allocatorIP19Multiply_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015ee8:	b480      	push	{r7}
 8015eea:	b083      	sub	sp, #12
 8015eec:	af00      	add	r7, sp, #0
 8015eee:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015ef0:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8015ef4:	4618      	mov	r0, r3
 8015ef6:	370c      	adds	r7, #12
 8015ef8:	46bd      	mov	sp, r7
 8015efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015efe:	4770      	bx	lr

08015f00 <_ZSt12__niter_baseIPP19Multiply_expressionET_S3_>:
    __niter_base(_Iterator __it)
 8015f00:	b480      	push	{r7}
 8015f02:	b083      	sub	sp, #12
 8015f04:	af00      	add	r7, sp, #0
 8015f06:	6078      	str	r0, [r7, #4]
    { return __it; }
 8015f08:	687b      	ldr	r3, [r7, #4]
 8015f0a:	4618      	mov	r0, r3
 8015f0c:	370c      	adds	r7, #12
 8015f0e:	46bd      	mov	sp, r7
 8015f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f14:	4770      	bx	lr

08015f16 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015f16:	b580      	push	{r7, lr}
 8015f18:	b086      	sub	sp, #24
 8015f1a:	af00      	add	r7, sp, #0
 8015f1c:	60f8      	str	r0, [r7, #12]
 8015f1e:	60b9      	str	r1, [r7, #8]
 8015f20:	607a      	str	r2, [r7, #4]
 8015f22:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015f24:	68ba      	ldr	r2, [r7, #8]
 8015f26:	68fb      	ldr	r3, [r7, #12]
 8015f28:	1ad3      	subs	r3, r2, r3
 8015f2a:	109b      	asrs	r3, r3, #2
 8015f2c:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015f2e:	697b      	ldr	r3, [r7, #20]
 8015f30:	2b00      	cmp	r3, #0
 8015f32:	dd06      	ble.n	8015f42 <_ZSt14__relocate_a_1IP19Multiply_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015f34:	697b      	ldr	r3, [r7, #20]
 8015f36:	009b      	lsls	r3, r3, #2
 8015f38:	461a      	mov	r2, r3
 8015f3a:	68f9      	ldr	r1, [r7, #12]
 8015f3c:	6878      	ldr	r0, [r7, #4]
 8015f3e:	f00b fccb 	bl	80218d8 <memmove>
      return __result + __count;
 8015f42:	697b      	ldr	r3, [r7, #20]
 8015f44:	009b      	lsls	r3, r3, #2
 8015f46:	687a      	ldr	r2, [r7, #4]
 8015f48:	4413      	add	r3, r2
    }
 8015f4a:	4618      	mov	r0, r3
 8015f4c:	3718      	adds	r7, #24
 8015f4e:	46bd      	mov	sp, r7
 8015f50:	bd80      	pop	{r7, pc}

08015f52 <_ZNSt16allocator_traitsISaIP18Compare_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015f52:	b580      	push	{r7, lr}
 8015f54:	b082      	sub	sp, #8
 8015f56:	af00      	add	r7, sp, #0
 8015f58:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015f5a:	6878      	ldr	r0, [r7, #4]
 8015f5c:	f000 f805 	bl	8015f6a <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>
 8015f60:	4603      	mov	r3, r0
 8015f62:	4618      	mov	r0, r3
 8015f64:	3708      	adds	r7, #8
 8015f66:	46bd      	mov	sp, r7
 8015f68:	bd80      	pop	{r7, pc}

08015f6a <_ZNK9__gnu_cxx13new_allocatorIP18Compare_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015f6a:	b480      	push	{r7}
 8015f6c:	b083      	sub	sp, #12
 8015f6e:	af00      	add	r7, sp, #0
 8015f70:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015f72:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8015f76:	4618      	mov	r0, r3
 8015f78:	370c      	adds	r7, #12
 8015f7a:	46bd      	mov	sp, r7
 8015f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f80:	4770      	bx	lr

08015f82 <_ZSt12__niter_baseIPP18Compare_expressionET_S3_>:
    __niter_base(_Iterator __it)
 8015f82:	b480      	push	{r7}
 8015f84:	b083      	sub	sp, #12
 8015f86:	af00      	add	r7, sp, #0
 8015f88:	6078      	str	r0, [r7, #4]
    { return __it; }
 8015f8a:	687b      	ldr	r3, [r7, #4]
 8015f8c:	4618      	mov	r0, r3
 8015f8e:	370c      	adds	r7, #12
 8015f90:	46bd      	mov	sp, r7
 8015f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f96:	4770      	bx	lr

08015f98 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 8015f98:	b580      	push	{r7, lr}
 8015f9a:	b086      	sub	sp, #24
 8015f9c:	af00      	add	r7, sp, #0
 8015f9e:	60f8      	str	r0, [r7, #12]
 8015fa0:	60b9      	str	r1, [r7, #8]
 8015fa2:	607a      	str	r2, [r7, #4]
 8015fa4:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8015fa6:	68ba      	ldr	r2, [r7, #8]
 8015fa8:	68fb      	ldr	r3, [r7, #12]
 8015faa:	1ad3      	subs	r3, r2, r3
 8015fac:	109b      	asrs	r3, r3, #2
 8015fae:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8015fb0:	697b      	ldr	r3, [r7, #20]
 8015fb2:	2b00      	cmp	r3, #0
 8015fb4:	dd06      	ble.n	8015fc4 <_ZSt14__relocate_a_1IP18Compare_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8015fb6:	697b      	ldr	r3, [r7, #20]
 8015fb8:	009b      	lsls	r3, r3, #2
 8015fba:	461a      	mov	r2, r3
 8015fbc:	68f9      	ldr	r1, [r7, #12]
 8015fbe:	6878      	ldr	r0, [r7, #4]
 8015fc0:	f00b fc8a 	bl	80218d8 <memmove>
      return __result + __count;
 8015fc4:	697b      	ldr	r3, [r7, #20]
 8015fc6:	009b      	lsls	r3, r3, #2
 8015fc8:	687a      	ldr	r2, [r7, #4]
 8015fca:	4413      	add	r3, r2
    }
 8015fcc:	4618      	mov	r0, r3
 8015fce:	3718      	adds	r7, #24
 8015fd0:	46bd      	mov	sp, r7
 8015fd2:	bd80      	pop	{r7, pc}

08015fd4 <_ZNSt16allocator_traitsISaIP14And_expressionEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a) noexcept
 8015fd4:	b580      	push	{r7, lr}
 8015fd6:	b082      	sub	sp, #8
 8015fd8:	af00      	add	r7, sp, #0
 8015fda:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8015fdc:	6878      	ldr	r0, [r7, #4]
 8015fde:	f000 f805 	bl	8015fec <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>
 8015fe2:	4603      	mov	r3, r0
 8015fe4:	4618      	mov	r0, r3
 8015fe6:	3708      	adds	r7, #8
 8015fe8:	46bd      	mov	sp, r7
 8015fea:	bd80      	pop	{r7, pc}

08015fec <_ZNK9__gnu_cxx13new_allocatorIP14And_expressionE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 8015fec:	b480      	push	{r7}
 8015fee:	b083      	sub	sp, #12
 8015ff0:	af00      	add	r7, sp, #0
 8015ff2:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8015ff4:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8015ff8:	4618      	mov	r0, r3
 8015ffa:	370c      	adds	r7, #12
 8015ffc:	46bd      	mov	sp, r7
 8015ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016002:	4770      	bx	lr

08016004 <_ZSt12__niter_baseIPP14And_expressionET_S3_>:
    __niter_base(_Iterator __it)
 8016004:	b480      	push	{r7}
 8016006:	b083      	sub	sp, #12
 8016008:	af00      	add	r7, sp, #0
 801600a:	6078      	str	r0, [r7, #4]
    { return __it; }
 801600c:	687b      	ldr	r3, [r7, #4]
 801600e:	4618      	mov	r0, r3
 8016010:	370c      	adds	r7, #12
 8016012:	46bd      	mov	sp, r7
 8016014:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016018:	4770      	bx	lr

0801601a <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
 801601a:	b580      	push	{r7, lr}
 801601c:	b086      	sub	sp, #24
 801601e:	af00      	add	r7, sp, #0
 8016020:	60f8      	str	r0, [r7, #12]
 8016022:	60b9      	str	r1, [r7, #8]
 8016024:	607a      	str	r2, [r7, #4]
 8016026:	603b      	str	r3, [r7, #0]
      ptrdiff_t __count = __last - __first;
 8016028:	68ba      	ldr	r2, [r7, #8]
 801602a:	68fb      	ldr	r3, [r7, #12]
 801602c:	1ad3      	subs	r3, r2, r3
 801602e:	109b      	asrs	r3, r3, #2
 8016030:	617b      	str	r3, [r7, #20]
      if (__count > 0)
 8016032:	697b      	ldr	r3, [r7, #20]
 8016034:	2b00      	cmp	r3, #0
 8016036:	dd06      	ble.n	8016046 <_ZSt14__relocate_a_1IP14And_expressionS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x2c>
	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 8016038:	697b      	ldr	r3, [r7, #20]
 801603a:	009b      	lsls	r3, r3, #2
 801603c:	461a      	mov	r2, r3
 801603e:	68f9      	ldr	r1, [r7, #12]
 8016040:	6878      	ldr	r0, [r7, #4]
 8016042:	f00b fc49 	bl	80218d8 <memmove>
      return __result + __count;
 8016046:	697b      	ldr	r3, [r7, #20]
 8016048:	009b      	lsls	r3, r3, #2
 801604a:	687a      	ldr	r2, [r7, #4]
 801604c:	4413      	add	r3, r2
    }
 801604e:	4618      	mov	r0, r3
 8016050:	3718      	adds	r7, #24
 8016052:	46bd      	mov	sp, r7
 8016054:	bd80      	pop	{r7, pc}
	...

08016058 <_Z41__static_initialization_and_destruction_0ii>:
 8016058:	b590      	push	{r4, r7, lr}
 801605a:	b0e7      	sub	sp, #412	; 0x19c
 801605c:	af02      	add	r7, sp, #8
 801605e:	1d3b      	adds	r3, r7, #4
 8016060:	6018      	str	r0, [r3, #0]
 8016062:	463b      	mov	r3, r7
 8016064:	6019      	str	r1, [r3, #0]
 8016066:	1d3b      	adds	r3, r7, #4
 8016068:	681b      	ldr	r3, [r3, #0]
 801606a:	2b01      	cmp	r3, #1
 801606c:	f040 819d 	bne.w	80163aa <_Z41__static_initialization_and_destruction_0ii+0x352>
 8016070:	463b      	mov	r3, r7
 8016072:	681b      	ldr	r3, [r3, #0]
 8016074:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016078:	4293      	cmp	r3, r2
 801607a:	f040 8196 	bne.w	80163aa <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801607e:	f107 0314 	add.w	r3, r7, #20
 8016082:	4618      	mov	r0, r3
 8016084:	2322      	movs	r3, #34	; 0x22
 8016086:	461a      	mov	r2, r3
 8016088:	2100      	movs	r1, #0
 801608a:	f00b fc3f 	bl	802190c <memset>
 801608e:	f107 0314 	add.w	r3, r7, #20
 8016092:	223a      	movs	r2, #58	; 0x3a
 8016094:	701a      	strb	r2, [r3, #0]
 8016096:	f107 0314 	add.w	r3, r7, #20
 801609a:	2201      	movs	r2, #1
 801609c:	705a      	strb	r2, [r3, #1]
 801609e:	f107 0314 	add.w	r3, r7, #20
 80160a2:	220a      	movs	r2, #10
 80160a4:	709a      	strb	r2, [r3, #2]
 80160a6:	f107 0314 	add.w	r3, r7, #20
 80160aa:	220a      	movs	r2, #10
 80160ac:	70da      	strb	r2, [r3, #3]
 80160ae:	f107 0314 	add.w	r3, r7, #20
 80160b2:	222c      	movs	r2, #44	; 0x2c
 80160b4:	711a      	strb	r2, [r3, #4]
 80160b6:	f107 0314 	add.w	r3, r7, #20
 80160ba:	220c      	movs	r2, #12
 80160bc:	715a      	strb	r2, [r3, #5]
 80160be:	f107 0314 	add.w	r3, r7, #20
 80160c2:	222e      	movs	r2, #46	; 0x2e
 80160c4:	719a      	strb	r2, [r3, #6]
 80160c6:	f107 0314 	add.w	r3, r7, #20
 80160ca:	220b      	movs	r2, #11
 80160cc:	71da      	strb	r2, [r3, #7]
 80160ce:	f107 0314 	add.w	r3, r7, #20
 80160d2:	225b      	movs	r2, #91	; 0x5b
 80160d4:	721a      	strb	r2, [r3, #8]
 80160d6:	f107 0314 	add.w	r3, r7, #20
 80160da:	220d      	movs	r2, #13
 80160dc:	725a      	strb	r2, [r3, #9]
 80160de:	f107 0314 	add.w	r3, r7, #20
 80160e2:	225d      	movs	r2, #93	; 0x5d
 80160e4:	729a      	strb	r2, [r3, #10]
 80160e6:	f107 0314 	add.w	r3, r7, #20
 80160ea:	220e      	movs	r2, #14
 80160ec:	72da      	strb	r2, [r3, #11]
 80160ee:	f107 0314 	add.w	r3, r7, #20
 80160f2:	227c      	movs	r2, #124	; 0x7c
 80160f4:	731a      	strb	r2, [r3, #12]
 80160f6:	f107 0314 	add.w	r3, r7, #20
 80160fa:	2215      	movs	r2, #21
 80160fc:	735a      	strb	r2, [r3, #13]
 80160fe:	f107 0314 	add.w	r3, r7, #20
 8016102:	2226      	movs	r2, #38	; 0x26
 8016104:	739a      	strb	r2, [r3, #14]
 8016106:	f107 0314 	add.w	r3, r7, #20
 801610a:	2216      	movs	r2, #22
 801610c:	73da      	strb	r2, [r3, #15]
 801610e:	f107 0314 	add.w	r3, r7, #20
 8016112:	222b      	movs	r2, #43	; 0x2b
 8016114:	741a      	strb	r2, [r3, #16]
 8016116:	f107 0314 	add.w	r3, r7, #20
 801611a:	221f      	movs	r2, #31
 801611c:	745a      	strb	r2, [r3, #17]
 801611e:	f107 0314 	add.w	r3, r7, #20
 8016122:	222d      	movs	r2, #45	; 0x2d
 8016124:	749a      	strb	r2, [r3, #18]
 8016126:	f107 0314 	add.w	r3, r7, #20
 801612a:	2220      	movs	r2, #32
 801612c:	74da      	strb	r2, [r3, #19]
 801612e:	f107 0314 	add.w	r3, r7, #20
 8016132:	222a      	movs	r2, #42	; 0x2a
 8016134:	751a      	strb	r2, [r3, #20]
 8016136:	f107 0314 	add.w	r3, r7, #20
 801613a:	2221      	movs	r2, #33	; 0x21
 801613c:	755a      	strb	r2, [r3, #21]
 801613e:	f107 0314 	add.w	r3, r7, #20
 8016142:	222f      	movs	r2, #47	; 0x2f
 8016144:	759a      	strb	r2, [r3, #22]
 8016146:	f107 0314 	add.w	r3, r7, #20
 801614a:	2222      	movs	r2, #34	; 0x22
 801614c:	75da      	strb	r2, [r3, #23]
 801614e:	f107 0314 	add.w	r3, r7, #20
 8016152:	225e      	movs	r2, #94	; 0x5e
 8016154:	761a      	strb	r2, [r3, #24]
 8016156:	f107 0314 	add.w	r3, r7, #20
 801615a:	2223      	movs	r2, #35	; 0x23
 801615c:	765a      	strb	r2, [r3, #25]
 801615e:	f107 0314 	add.w	r3, r7, #20
 8016162:	2225      	movs	r2, #37	; 0x25
 8016164:	769a      	strb	r2, [r3, #26]
 8016166:	f107 0314 	add.w	r3, r7, #20
 801616a:	2224      	movs	r2, #36	; 0x24
 801616c:	76da      	strb	r2, [r3, #27]
 801616e:	f107 0314 	add.w	r3, r7, #20
 8016172:	2228      	movs	r2, #40	; 0x28
 8016174:	771a      	strb	r2, [r3, #28]
 8016176:	f107 0314 	add.w	r3, r7, #20
 801617a:	2226      	movs	r2, #38	; 0x26
 801617c:	775a      	strb	r2, [r3, #29]
 801617e:	f107 0314 	add.w	r3, r7, #20
 8016182:	2229      	movs	r2, #41	; 0x29
 8016184:	779a      	strb	r2, [r3, #30]
 8016186:	f107 0314 	add.w	r3, r7, #20
 801618a:	2227      	movs	r2, #39	; 0x27
 801618c:	77da      	strb	r2, [r3, #31]
 801618e:	f107 0314 	add.w	r3, r7, #20
 8016192:	2225      	movs	r2, #37	; 0x25
 8016194:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8016198:	f107 030c 	add.w	r3, r7, #12
 801619c:	f107 0214 	add.w	r2, r7, #20
 80161a0:	601a      	str	r2, [r3, #0]
 80161a2:	f107 030c 	add.w	r3, r7, #12
 80161a6:	2211      	movs	r2, #17
 80161a8:	605a      	str	r2, [r3, #4]
 80161aa:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80161ae:	4618      	mov	r0, r3
 80161b0:	f7eb f898 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80161b4:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80161b8:	f107 020c 	add.w	r2, r7, #12
 80161bc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80161c0:	9300      	str	r3, [sp, #0]
 80161c2:	460b      	mov	r3, r1
 80161c4:	ca06      	ldmia	r2, {r1, r2}
 80161c6:	4885      	ldr	r0, [pc, #532]	; (80163dc <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80161c8:	f7eb f8a4 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80161cc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80161d0:	4618      	mov	r0, r3
 80161d2:	f7eb f893 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80161d6:	2305      	movs	r3, #5
 80161d8:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80161dc:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80161e0:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80161e4:	497e      	ldr	r1, [pc, #504]	; (80163e0 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80161e6:	4618      	mov	r0, r3
 80161e8:	f7ea ff80 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80161ec:	2306      	movs	r3, #6
 80161ee:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80161f2:	f207 1263 	addw	r2, r7, #355	; 0x163
 80161f6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80161fa:	331c      	adds	r3, #28
 80161fc:	4979      	ldr	r1, [pc, #484]	; (80163e4 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80161fe:	4618      	mov	r0, r3
 8016200:	f7ea ff9c 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 8016204:	2307      	movs	r3, #7
 8016206:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801620a:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801620e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016212:	3338      	adds	r3, #56	; 0x38
 8016214:	4974      	ldr	r1, [pc, #464]	; (80163e8 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 8016216:	4618      	mov	r0, r3
 8016218:	f7ea ff90 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801621c:	2308      	movs	r3, #8
 801621e:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8016222:	f207 1265 	addw	r2, r7, #357	; 0x165
 8016226:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801622a:	3354      	adds	r3, #84	; 0x54
 801622c:	496f      	ldr	r1, [pc, #444]	; (80163ec <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801622e:	4618      	mov	r0, r3
 8016230:	f7ea ff5c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8016234:	2309      	movs	r3, #9
 8016236:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801623a:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801623e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016242:	3370      	adds	r3, #112	; 0x70
 8016244:	496a      	ldr	r1, [pc, #424]	; (80163f0 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 8016246:	4618      	mov	r0, r3
 8016248:	f7ea ffa0 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801624c:	2310      	movs	r3, #16
 801624e:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8016252:	f207 1267 	addw	r2, r7, #359	; 0x167
 8016256:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801625a:	338c      	adds	r3, #140	; 0x8c
 801625c:	4965      	ldr	r1, [pc, #404]	; (80163f4 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801625e:	4618      	mov	r0, r3
 8016260:	f7ea ffbc 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8016264:	2311      	movs	r3, #17
 8016266:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801626a:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801626e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016272:	33a8      	adds	r3, #168	; 0xa8
 8016274:	4960      	ldr	r1, [pc, #384]	; (80163f8 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 8016276:	4618      	mov	r0, r3
 8016278:	f7ea ff88 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801627c:	2312      	movs	r3, #18
 801627e:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8016282:	f207 1269 	addw	r2, r7, #361	; 0x169
 8016286:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801628a:	33c4      	adds	r3, #196	; 0xc4
 801628c:	495b      	ldr	r1, [pc, #364]	; (80163fc <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801628e:	4618      	mov	r0, r3
 8016290:	f7ea ff2c 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8016294:	2313      	movs	r3, #19
 8016296:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801629a:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801629e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80162a2:	33e0      	adds	r3, #224	; 0xe0
 80162a4:	4956      	ldr	r1, [pc, #344]	; (8016400 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80162a6:	4618      	mov	r0, r3
 80162a8:	f7ea ff48 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80162ac:	2314      	movs	r3, #20
 80162ae:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80162b2:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80162b6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80162ba:	33fc      	adds	r3, #252	; 0xfc
 80162bc:	4951      	ldr	r1, [pc, #324]	; (8016404 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80162be:	4618      	mov	r0, r3
 80162c0:	f7ea ffb4 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80162c4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80162c8:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80162cc:	601a      	str	r2, [r3, #0]
 80162ce:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80162d2:	220a      	movs	r2, #10
 80162d4:	605a      	str	r2, [r3, #4]
 80162d6:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80162da:	4618      	mov	r0, r3
 80162dc:	f7eb f8a7 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80162e0:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80162e4:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80162e8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80162ec:	9300      	str	r3, [sp, #0]
 80162ee:	460b      	mov	r3, r1
 80162f0:	ca06      	ldmia	r2, {r1, r2}
 80162f2:	4845      	ldr	r0, [pc, #276]	; (8016408 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80162f4:	f7eb f8b3 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80162f8:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80162fc:	4618      	mov	r0, r3
 80162fe:	f7eb f8a2 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 8016302:	f107 0448 	add.w	r4, r7, #72	; 0x48
 8016306:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801630a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801630e:	429c      	cmp	r4, r3
 8016310:	d004      	beq.n	801631c <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 8016312:	3c1c      	subs	r4, #28
 8016314:	4620      	mov	r0, r4
 8016316:	f7ea fedc 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801631a:	e7f6      	b.n	801630a <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801631c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016320:	2200      	movs	r2, #0
 8016322:	601a      	str	r2, [r3, #0]
 8016324:	605a      	str	r2, [r3, #4]
 8016326:	609a      	str	r2, [r3, #8]
 8016328:	233c      	movs	r3, #60	; 0x3c
 801632a:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801632e:	231b      	movs	r3, #27
 8016330:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8016334:	231c      	movs	r3, #28
 8016336:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801633a:	233e      	movs	r3, #62	; 0x3e
 801633c:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8016340:	2319      	movs	r3, #25
 8016342:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 8016346:	231a      	movs	r3, #26
 8016348:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801634c:	233d      	movs	r3, #61	; 0x3d
 801634e:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8016352:	2318      	movs	r3, #24
 8016354:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8016358:	231d      	movs	r3, #29
 801635a:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801635e:	2321      	movs	r3, #33	; 0x21
 8016360:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8016364:	2317      	movs	r3, #23
 8016366:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801636a:	231e      	movs	r3, #30
 801636c:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8016370:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016374:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8016378:	2304      	movs	r3, #4
 801637a:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801637e:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016382:	4618      	mov	r0, r3
 8016384:	f7eb f89b 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8016388:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801638c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016390:	9300      	str	r3, [sp, #0]
 8016392:	4613      	mov	r3, r2
 8016394:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 8016398:	ca06      	ldmia	r2, {r1, r2}
 801639a:	481c      	ldr	r0, [pc, #112]	; (801640c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801639c:	f7eb f8a7 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80163a0:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80163a4:	4618      	mov	r0, r3
 80163a6:	f7eb f896 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80163aa:	1d3b      	adds	r3, r7, #4
 80163ac:	681b      	ldr	r3, [r3, #0]
 80163ae:	2b00      	cmp	r3, #0
 80163b0:	d10e      	bne.n	80163d0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80163b2:	463b      	mov	r3, r7
 80163b4:	681b      	ldr	r3, [r3, #0]
 80163b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80163ba:	4293      	cmp	r3, r2
 80163bc:	d108      	bne.n	80163d0 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80163be:	4813      	ldr	r0, [pc, #76]	; (801640c <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80163c0:	f7ed fcee 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80163c4:	4810      	ldr	r0, [pc, #64]	; (8016408 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80163c6:	f7ed fcf8 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80163ca:	4804      	ldr	r0, [pc, #16]	; (80163dc <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80163cc:	f7ed fd02 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80163d0:	bf00      	nop
 80163d2:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80163d6:	46bd      	mov	sp, r7
 80163d8:	bd90      	pop	{r4, r7, pc}
 80163da:	bf00      	nop
 80163dc:	200004e8 	.word	0x200004e8
 80163e0:	08024f78 	.word	0x08024f78
 80163e4:	08024f80 	.word	0x08024f80
 80163e8:	08024f88 	.word	0x08024f88
 80163ec:	08024f90 	.word	0x08024f90
 80163f0:	08024f98 	.word	0x08024f98
 80163f4:	08024fa0 	.word	0x08024fa0
 80163f8:	08024fa4 	.word	0x08024fa4
 80163fc:	08024fac 	.word	0x08024fac
 8016400:	08024fb4 	.word	0x08024fb4
 8016404:	08024fbc 	.word	0x08024fbc
 8016408:	20000500 	.word	0x20000500
 801640c:	20000518 	.word	0x20000518

08016410 <_GLOBAL__sub_I__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 8016410:	b580      	push	{r7, lr}
 8016412:	af00      	add	r7, sp, #0
 8016414:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016418:	2001      	movs	r0, #1
 801641a:	f7ff fe1d 	bl	8016058 <_Z41__static_initialization_and_destruction_0ii>
 801641e:	bd80      	pop	{r7, pc}

08016420 <_GLOBAL__sub_D__ZN6Parser31parse_variable_or_function_callEP17Primal_expression>:
 8016420:	b580      	push	{r7, lr}
 8016422:	af00      	add	r7, sp, #0
 8016424:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016428:	2000      	movs	r0, #0
 801642a:	f7ff fe15 	bl	8016058 <_Z41__static_initialization_and_destruction_0ii>
 801642e:	bd80      	pop	{r7, pc}

08016430 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8016430:	b580      	push	{r7, lr}
 8016432:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8016434:	f007 fa7b 	bl	801d92e <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8016438:	f000 f80a 	bl	8016450 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 801643c:	f000 f8e0 	bl	8016600 <_ZL12MX_GPIO_Initv>
  MX_USART1_UART_Init();
 8016440:	f000 f8aa 	bl	8016598 <_ZL19MX_USART1_UART_Initv>
  /* USER CODE BEGIN 2 */
  my_main_run(&huart1);
 8016444:	4801      	ldr	r0, [pc, #4]	; (801644c <main+0x1c>)
 8016446:	f000 faf3 	bl	8016a30 <_Z11my_main_runP20__UART_HandleTypeDef>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 801644a:	e7fe      	b.n	801644a <main+0x1a>
 801644c:	20000578 	.word	0x20000578

08016450 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8016450:	b580      	push	{r7, lr}
 8016452:	b0b4      	sub	sp, #208	; 0xd0
 8016454:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8016456:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801645a:	2230      	movs	r2, #48	; 0x30
 801645c:	2100      	movs	r1, #0
 801645e:	4618      	mov	r0, r3
 8016460:	f00b fa54 	bl	802190c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8016464:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8016468:	2200      	movs	r2, #0
 801646a:	601a      	str	r2, [r3, #0]
 801646c:	605a      	str	r2, [r3, #4]
 801646e:	609a      	str	r2, [r3, #8]
 8016470:	60da      	str	r2, [r3, #12]
 8016472:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8016474:	f107 0308 	add.w	r3, r7, #8
 8016478:	2284      	movs	r2, #132	; 0x84
 801647a:	2100      	movs	r1, #0
 801647c:	4618      	mov	r0, r3
 801647e:	f00b fa45 	bl	802190c <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8016482:	4b43      	ldr	r3, [pc, #268]	; (8016590 <_Z18SystemClock_Configv+0x140>)
 8016484:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016486:	4a42      	ldr	r2, [pc, #264]	; (8016590 <_Z18SystemClock_Configv+0x140>)
 8016488:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801648c:	6413      	str	r3, [r2, #64]	; 0x40
 801648e:	4b40      	ldr	r3, [pc, #256]	; (8016590 <_Z18SystemClock_Configv+0x140>)
 8016490:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016492:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8016496:	607b      	str	r3, [r7, #4]
 8016498:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 801649a:	4b3e      	ldr	r3, [pc, #248]	; (8016594 <_Z18SystemClock_Configv+0x144>)
 801649c:	681b      	ldr	r3, [r3, #0]
 801649e:	4a3d      	ldr	r2, [pc, #244]	; (8016594 <_Z18SystemClock_Configv+0x144>)
 80164a0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80164a4:	6013      	str	r3, [r2, #0]
 80164a6:	4b3b      	ldr	r3, [pc, #236]	; (8016594 <_Z18SystemClock_Configv+0x144>)
 80164a8:	681b      	ldr	r3, [r3, #0]
 80164aa:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80164ae:	603b      	str	r3, [r7, #0]
 80164b0:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80164b2:	2302      	movs	r3, #2
 80164b4:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80164b8:	2301      	movs	r3, #1
 80164ba:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80164be:	2310      	movs	r3, #16
 80164c0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80164c4:	2302      	movs	r3, #2
 80164c6:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80164ca:	2300      	movs	r3, #0
 80164cc:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 8;
 80164d0:	2308      	movs	r3, #8
 80164d2:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 216;
 80164d6:	23d8      	movs	r3, #216	; 0xd8
 80164d8:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80164dc:	2302      	movs	r3, #2
 80164de:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80164e2:	2302      	movs	r3, #2
 80164e4:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80164e8:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80164ec:	4618      	mov	r0, r3
 80164ee:	f007 fe3f 	bl	801e170 <HAL_RCC_OscConfig>
 80164f2:	4603      	mov	r3, r0
 80164f4:	2b00      	cmp	r3, #0
 80164f6:	bf14      	ite	ne
 80164f8:	2301      	movne	r3, #1
 80164fa:	2300      	moveq	r3, #0
 80164fc:	b2db      	uxtb	r3, r3
 80164fe:	2b00      	cmp	r3, #0
 8016500:	d001      	beq.n	8016506 <_Z18SystemClock_Configv+0xb6>
  {
    Error_Handler();
 8016502:	f000 f895 	bl	8016630 <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8016506:	f007 fde3 	bl	801e0d0 <HAL_PWREx_EnableOverDrive>
 801650a:	4603      	mov	r3, r0
 801650c:	2b00      	cmp	r3, #0
 801650e:	bf14      	ite	ne
 8016510:	2301      	movne	r3, #1
 8016512:	2300      	moveq	r3, #0
 8016514:	b2db      	uxtb	r3, r3
 8016516:	2b00      	cmp	r3, #0
 8016518:	d001      	beq.n	801651e <_Z18SystemClock_Configv+0xce>
  {
    Error_Handler();
 801651a:	f000 f889 	bl	8016630 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 801651e:	230f      	movs	r3, #15
 8016520:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8016524:	2302      	movs	r3, #2
 8016526:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801652a:	2300      	movs	r3, #0
 801652c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8016530:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8016534:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8016538:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801653c:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8016540:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8016544:	2107      	movs	r1, #7
 8016546:	4618      	mov	r0, r3
 8016548:	f008 f8b6 	bl	801e6b8 <HAL_RCC_ClockConfig>
 801654c:	4603      	mov	r3, r0
 801654e:	2b00      	cmp	r3, #0
 8016550:	bf14      	ite	ne
 8016552:	2301      	movne	r3, #1
 8016554:	2300      	moveq	r3, #0
 8016556:	b2db      	uxtb	r3, r3
 8016558:	2b00      	cmp	r3, #0
 801655a:	d001      	beq.n	8016560 <_Z18SystemClock_Configv+0x110>
  {
    Error_Handler();
 801655c:	f000 f868 	bl	8016630 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8016560:	2340      	movs	r3, #64	; 0x40
 8016562:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8016564:	2300      	movs	r3, #0
 8016566:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8016568:	f107 0308 	add.w	r3, r7, #8
 801656c:	4618      	mov	r0, r3
 801656e:	f008 fa79 	bl	801ea64 <HAL_RCCEx_PeriphCLKConfig>
 8016572:	4603      	mov	r3, r0
 8016574:	2b00      	cmp	r3, #0
 8016576:	bf14      	ite	ne
 8016578:	2301      	movne	r3, #1
 801657a:	2300      	moveq	r3, #0
 801657c:	b2db      	uxtb	r3, r3
 801657e:	2b00      	cmp	r3, #0
 8016580:	d001      	beq.n	8016586 <_Z18SystemClock_Configv+0x136>
  {
    Error_Handler();
 8016582:	f000 f855 	bl	8016630 <Error_Handler>
  }
}
 8016586:	bf00      	nop
 8016588:	37d0      	adds	r7, #208	; 0xd0
 801658a:	46bd      	mov	sp, r7
 801658c:	bd80      	pop	{r7, pc}
 801658e:	bf00      	nop
 8016590:	40023800 	.word	0x40023800
 8016594:	40007000 	.word	0x40007000

08016598 <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8016598:	b580      	push	{r7, lr}
 801659a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 801659c:	4b16      	ldr	r3, [pc, #88]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 801659e:	4a17      	ldr	r2, [pc, #92]	; (80165fc <_ZL19MX_USART1_UART_Initv+0x64>)
 80165a0:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80165a2:	4b15      	ldr	r3, [pc, #84]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165a4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80165a8:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80165aa:	4b13      	ldr	r3, [pc, #76]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165ac:	2200      	movs	r2, #0
 80165ae:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80165b0:	4b11      	ldr	r3, [pc, #68]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165b2:	2200      	movs	r2, #0
 80165b4:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80165b6:	4b10      	ldr	r3, [pc, #64]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165b8:	2200      	movs	r2, #0
 80165ba:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80165bc:	4b0e      	ldr	r3, [pc, #56]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165be:	220c      	movs	r2, #12
 80165c0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80165c2:	4b0d      	ldr	r3, [pc, #52]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165c4:	2200      	movs	r2, #0
 80165c6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80165c8:	4b0b      	ldr	r3, [pc, #44]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165ca:	2200      	movs	r2, #0
 80165cc:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80165ce:	4b0a      	ldr	r3, [pc, #40]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165d0:	2200      	movs	r2, #0
 80165d2:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80165d4:	4b08      	ldr	r3, [pc, #32]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165d6:	2200      	movs	r2, #0
 80165d8:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80165da:	4807      	ldr	r0, [pc, #28]	; (80165f8 <_ZL19MX_USART1_UART_Initv+0x60>)
 80165dc:	f008 fe32 	bl	801f244 <HAL_UART_Init>
 80165e0:	4603      	mov	r3, r0
 80165e2:	2b00      	cmp	r3, #0
 80165e4:	bf14      	ite	ne
 80165e6:	2301      	movne	r3, #1
 80165e8:	2300      	moveq	r3, #0
 80165ea:	b2db      	uxtb	r3, r3
 80165ec:	2b00      	cmp	r3, #0
 80165ee:	d001      	beq.n	80165f4 <_ZL19MX_USART1_UART_Initv+0x5c>
  {
    Error_Handler();
 80165f0:	f000 f81e 	bl	8016630 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80165f4:	bf00      	nop
 80165f6:	bd80      	pop	{r7, pc}
 80165f8:	20000578 	.word	0x20000578
 80165fc:	40011000 	.word	0x40011000

08016600 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8016600:	b480      	push	{r7}
 8016602:	b083      	sub	sp, #12
 8016604:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8016606:	4b09      	ldr	r3, [pc, #36]	; (801662c <_ZL12MX_GPIO_Initv+0x2c>)
 8016608:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801660a:	4a08      	ldr	r2, [pc, #32]	; (801662c <_ZL12MX_GPIO_Initv+0x2c>)
 801660c:	f043 0301 	orr.w	r3, r3, #1
 8016610:	6313      	str	r3, [r2, #48]	; 0x30
 8016612:	4b06      	ldr	r3, [pc, #24]	; (801662c <_ZL12MX_GPIO_Initv+0x2c>)
 8016614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016616:	f003 0301 	and.w	r3, r3, #1
 801661a:	607b      	str	r3, [r7, #4]
 801661c:	687b      	ldr	r3, [r7, #4]

}
 801661e:	bf00      	nop
 8016620:	370c      	adds	r7, #12
 8016622:	46bd      	mov	sp, r7
 8016624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016628:	4770      	bx	lr
 801662a:	bf00      	nop
 801662c:	40023800 	.word	0x40023800

08016630 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8016630:	b480      	push	{r7}
 8016632:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8016634:	b672      	cpsid	i
}
 8016636:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8016638:	e7fe      	b.n	8016638 <Error_Handler+0x8>
	...

0801663c <_Z41__static_initialization_and_destruction_0ii>:
  {
  }
  /* USER CODE END Error_Handler_Debug */
}
 801663c:	b590      	push	{r4, r7, lr}
 801663e:	b0e7      	sub	sp, #412	; 0x19c
 8016640:	af02      	add	r7, sp, #8
 8016642:	1d3b      	adds	r3, r7, #4
 8016644:	6018      	str	r0, [r3, #0]
 8016646:	463b      	mov	r3, r7
 8016648:	6019      	str	r1, [r3, #0]
 801664a:	1d3b      	adds	r3, r7, #4
 801664c:	681b      	ldr	r3, [r3, #0]
 801664e:	2b01      	cmp	r3, #1
 8016650:	f040 819d 	bne.w	801698e <_Z41__static_initialization_and_destruction_0ii+0x352>
 8016654:	463b      	mov	r3, r7
 8016656:	681b      	ldr	r3, [r3, #0]
 8016658:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801665c:	4293      	cmp	r3, r2
 801665e:	f040 8196 	bne.w	801698e <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8016662:	f107 0314 	add.w	r3, r7, #20
 8016666:	4618      	mov	r0, r3
 8016668:	2322      	movs	r3, #34	; 0x22
 801666a:	461a      	mov	r2, r3
 801666c:	2100      	movs	r1, #0
 801666e:	f00b f94d 	bl	802190c <memset>
 8016672:	f107 0314 	add.w	r3, r7, #20
 8016676:	223a      	movs	r2, #58	; 0x3a
 8016678:	701a      	strb	r2, [r3, #0]
 801667a:	f107 0314 	add.w	r3, r7, #20
 801667e:	2201      	movs	r2, #1
 8016680:	705a      	strb	r2, [r3, #1]
 8016682:	f107 0314 	add.w	r3, r7, #20
 8016686:	220a      	movs	r2, #10
 8016688:	709a      	strb	r2, [r3, #2]
 801668a:	f107 0314 	add.w	r3, r7, #20
 801668e:	220a      	movs	r2, #10
 8016690:	70da      	strb	r2, [r3, #3]
 8016692:	f107 0314 	add.w	r3, r7, #20
 8016696:	222c      	movs	r2, #44	; 0x2c
 8016698:	711a      	strb	r2, [r3, #4]
 801669a:	f107 0314 	add.w	r3, r7, #20
 801669e:	220c      	movs	r2, #12
 80166a0:	715a      	strb	r2, [r3, #5]
 80166a2:	f107 0314 	add.w	r3, r7, #20
 80166a6:	222e      	movs	r2, #46	; 0x2e
 80166a8:	719a      	strb	r2, [r3, #6]
 80166aa:	f107 0314 	add.w	r3, r7, #20
 80166ae:	220b      	movs	r2, #11
 80166b0:	71da      	strb	r2, [r3, #7]
 80166b2:	f107 0314 	add.w	r3, r7, #20
 80166b6:	225b      	movs	r2, #91	; 0x5b
 80166b8:	721a      	strb	r2, [r3, #8]
 80166ba:	f107 0314 	add.w	r3, r7, #20
 80166be:	220d      	movs	r2, #13
 80166c0:	725a      	strb	r2, [r3, #9]
 80166c2:	f107 0314 	add.w	r3, r7, #20
 80166c6:	225d      	movs	r2, #93	; 0x5d
 80166c8:	729a      	strb	r2, [r3, #10]
 80166ca:	f107 0314 	add.w	r3, r7, #20
 80166ce:	220e      	movs	r2, #14
 80166d0:	72da      	strb	r2, [r3, #11]
 80166d2:	f107 0314 	add.w	r3, r7, #20
 80166d6:	227c      	movs	r2, #124	; 0x7c
 80166d8:	731a      	strb	r2, [r3, #12]
 80166da:	f107 0314 	add.w	r3, r7, #20
 80166de:	2215      	movs	r2, #21
 80166e0:	735a      	strb	r2, [r3, #13]
 80166e2:	f107 0314 	add.w	r3, r7, #20
 80166e6:	2226      	movs	r2, #38	; 0x26
 80166e8:	739a      	strb	r2, [r3, #14]
 80166ea:	f107 0314 	add.w	r3, r7, #20
 80166ee:	2216      	movs	r2, #22
 80166f0:	73da      	strb	r2, [r3, #15]
 80166f2:	f107 0314 	add.w	r3, r7, #20
 80166f6:	222b      	movs	r2, #43	; 0x2b
 80166f8:	741a      	strb	r2, [r3, #16]
 80166fa:	f107 0314 	add.w	r3, r7, #20
 80166fe:	221f      	movs	r2, #31
 8016700:	745a      	strb	r2, [r3, #17]
 8016702:	f107 0314 	add.w	r3, r7, #20
 8016706:	222d      	movs	r2, #45	; 0x2d
 8016708:	749a      	strb	r2, [r3, #18]
 801670a:	f107 0314 	add.w	r3, r7, #20
 801670e:	2220      	movs	r2, #32
 8016710:	74da      	strb	r2, [r3, #19]
 8016712:	f107 0314 	add.w	r3, r7, #20
 8016716:	222a      	movs	r2, #42	; 0x2a
 8016718:	751a      	strb	r2, [r3, #20]
 801671a:	f107 0314 	add.w	r3, r7, #20
 801671e:	2221      	movs	r2, #33	; 0x21
 8016720:	755a      	strb	r2, [r3, #21]
 8016722:	f107 0314 	add.w	r3, r7, #20
 8016726:	222f      	movs	r2, #47	; 0x2f
 8016728:	759a      	strb	r2, [r3, #22]
 801672a:	f107 0314 	add.w	r3, r7, #20
 801672e:	2222      	movs	r2, #34	; 0x22
 8016730:	75da      	strb	r2, [r3, #23]
 8016732:	f107 0314 	add.w	r3, r7, #20
 8016736:	225e      	movs	r2, #94	; 0x5e
 8016738:	761a      	strb	r2, [r3, #24]
 801673a:	f107 0314 	add.w	r3, r7, #20
 801673e:	2223      	movs	r2, #35	; 0x23
 8016740:	765a      	strb	r2, [r3, #25]
 8016742:	f107 0314 	add.w	r3, r7, #20
 8016746:	2225      	movs	r2, #37	; 0x25
 8016748:	769a      	strb	r2, [r3, #26]
 801674a:	f107 0314 	add.w	r3, r7, #20
 801674e:	2224      	movs	r2, #36	; 0x24
 8016750:	76da      	strb	r2, [r3, #27]
 8016752:	f107 0314 	add.w	r3, r7, #20
 8016756:	2228      	movs	r2, #40	; 0x28
 8016758:	771a      	strb	r2, [r3, #28]
 801675a:	f107 0314 	add.w	r3, r7, #20
 801675e:	2226      	movs	r2, #38	; 0x26
 8016760:	775a      	strb	r2, [r3, #29]
 8016762:	f107 0314 	add.w	r3, r7, #20
 8016766:	2229      	movs	r2, #41	; 0x29
 8016768:	779a      	strb	r2, [r3, #30]
 801676a:	f107 0314 	add.w	r3, r7, #20
 801676e:	2227      	movs	r2, #39	; 0x27
 8016770:	77da      	strb	r2, [r3, #31]
 8016772:	f107 0314 	add.w	r3, r7, #20
 8016776:	2225      	movs	r2, #37	; 0x25
 8016778:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801677c:	f107 030c 	add.w	r3, r7, #12
 8016780:	f107 0214 	add.w	r2, r7, #20
 8016784:	601a      	str	r2, [r3, #0]
 8016786:	f107 030c 	add.w	r3, r7, #12
 801678a:	2211      	movs	r2, #17
 801678c:	605a      	str	r2, [r3, #4]
 801678e:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8016792:	4618      	mov	r0, r3
 8016794:	f7ea fda6 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 8016798:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801679c:	f107 020c 	add.w	r2, r7, #12
 80167a0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80167a4:	9300      	str	r3, [sp, #0]
 80167a6:	460b      	mov	r3, r1
 80167a8:	ca06      	ldmia	r2, {r1, r2}
 80167aa:	4885      	ldr	r0, [pc, #532]	; (80169c0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80167ac:	f7ea fdb2 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80167b0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80167b4:	4618      	mov	r0, r3
 80167b6:	f7ea fda1 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80167ba:	2305      	movs	r3, #5
 80167bc:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80167c0:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80167c4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80167c8:	497e      	ldr	r1, [pc, #504]	; (80169c4 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80167ca:	4618      	mov	r0, r3
 80167cc:	f7ea fc8e 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80167d0:	2306      	movs	r3, #6
 80167d2:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80167d6:	f207 1263 	addw	r2, r7, #355	; 0x163
 80167da:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80167de:	331c      	adds	r3, #28
 80167e0:	4979      	ldr	r1, [pc, #484]	; (80169c8 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 80167e2:	4618      	mov	r0, r3
 80167e4:	f7ea fcaa 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 80167e8:	2307      	movs	r3, #7
 80167ea:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 80167ee:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 80167f2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80167f6:	3338      	adds	r3, #56	; 0x38
 80167f8:	4974      	ldr	r1, [pc, #464]	; (80169cc <_Z41__static_initialization_and_destruction_0ii+0x390>)
 80167fa:	4618      	mov	r0, r3
 80167fc:	f7ea fc9e 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8016800:	2308      	movs	r3, #8
 8016802:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 8016806:	f207 1265 	addw	r2, r7, #357	; 0x165
 801680a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801680e:	3354      	adds	r3, #84	; 0x54
 8016810:	496f      	ldr	r1, [pc, #444]	; (80169d0 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8016812:	4618      	mov	r0, r3
 8016814:	f7ea fc6a 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 8016818:	2309      	movs	r3, #9
 801681a:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801681e:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8016822:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016826:	3370      	adds	r3, #112	; 0x70
 8016828:	496a      	ldr	r1, [pc, #424]	; (80169d4 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801682a:	4618      	mov	r0, r3
 801682c:	f7ea fcae 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8016830:	2310      	movs	r3, #16
 8016832:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 8016836:	f207 1267 	addw	r2, r7, #359	; 0x167
 801683a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801683e:	338c      	adds	r3, #140	; 0x8c
 8016840:	4965      	ldr	r1, [pc, #404]	; (80169d8 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8016842:	4618      	mov	r0, r3
 8016844:	f7ea fcca 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 8016848:	2311      	movs	r3, #17
 801684a:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801684e:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8016852:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016856:	33a8      	adds	r3, #168	; 0xa8
 8016858:	4960      	ldr	r1, [pc, #384]	; (80169dc <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801685a:	4618      	mov	r0, r3
 801685c:	f7ea fc96 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8016860:	2312      	movs	r3, #18
 8016862:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 8016866:	f207 1269 	addw	r2, r7, #361	; 0x169
 801686a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801686e:	33c4      	adds	r3, #196	; 0xc4
 8016870:	495b      	ldr	r1, [pc, #364]	; (80169e0 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8016872:	4618      	mov	r0, r3
 8016874:	f7ea fc3a 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 8016878:	2313      	movs	r3, #19
 801687a:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801687e:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 8016882:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016886:	33e0      	adds	r3, #224	; 0xe0
 8016888:	4956      	ldr	r1, [pc, #344]	; (80169e4 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801688a:	4618      	mov	r0, r3
 801688c:	f7ea fc56 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 8016890:	2314      	movs	r3, #20
 8016892:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 8016896:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801689a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801689e:	33fc      	adds	r3, #252	; 0xfc
 80168a0:	4951      	ldr	r1, [pc, #324]	; (80169e8 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80168a2:	4618      	mov	r0, r3
 80168a4:	f7ea fcc2 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80168a8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80168ac:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80168b0:	601a      	str	r2, [r3, #0]
 80168b2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80168b6:	220a      	movs	r2, #10
 80168b8:	605a      	str	r2, [r3, #4]
 80168ba:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80168be:	4618      	mov	r0, r3
 80168c0:	f7ea fdb5 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80168c4:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80168c8:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80168cc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80168d0:	9300      	str	r3, [sp, #0]
 80168d2:	460b      	mov	r3, r1
 80168d4:	ca06      	ldmia	r2, {r1, r2}
 80168d6:	4845      	ldr	r0, [pc, #276]	; (80169ec <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80168d8:	f7ea fdc1 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 80168dc:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80168e0:	4618      	mov	r0, r3
 80168e2:	f7ea fdb0 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 80168e6:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80168ea:	f504 748c 	add.w	r4, r4, #280	; 0x118
 80168ee:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80168f2:	429c      	cmp	r4, r3
 80168f4:	d004      	beq.n	8016900 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 80168f6:	3c1c      	subs	r4, #28
 80168f8:	4620      	mov	r0, r4
 80168fa:	f7ea fbea 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 80168fe:	e7f6      	b.n	80168ee <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8016900:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016904:	2200      	movs	r2, #0
 8016906:	601a      	str	r2, [r3, #0]
 8016908:	605a      	str	r2, [r3, #4]
 801690a:	609a      	str	r2, [r3, #8]
 801690c:	233c      	movs	r3, #60	; 0x3c
 801690e:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8016912:	231b      	movs	r3, #27
 8016914:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 8016918:	231c      	movs	r3, #28
 801691a:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801691e:	233e      	movs	r3, #62	; 0x3e
 8016920:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8016924:	2319      	movs	r3, #25
 8016926:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801692a:	231a      	movs	r3, #26
 801692c:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8016930:	233d      	movs	r3, #61	; 0x3d
 8016932:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 8016936:	2318      	movs	r3, #24
 8016938:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801693c:	231d      	movs	r3, #29
 801693e:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8016942:	2321      	movs	r3, #33	; 0x21
 8016944:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 8016948:	2317      	movs	r3, #23
 801694a:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801694e:	231e      	movs	r3, #30
 8016950:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8016954:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8016958:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801695c:	2304      	movs	r3, #4
 801695e:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8016962:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016966:	4618      	mov	r0, r3
 8016968:	f7ea fda9 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801696c:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8016970:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016974:	9300      	str	r3, [sp, #0]
 8016976:	4613      	mov	r3, r2
 8016978:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801697c:	ca06      	ldmia	r2, {r1, r2}
 801697e:	481c      	ldr	r0, [pc, #112]	; (80169f0 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 8016980:	f7ea fdb5 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 8016984:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8016988:	4618      	mov	r0, r3
 801698a:	f7ea fda4 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801698e:	1d3b      	adds	r3, r7, #4
 8016990:	681b      	ldr	r3, [r3, #0]
 8016992:	2b00      	cmp	r3, #0
 8016994:	d10e      	bne.n	80169b4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 8016996:	463b      	mov	r3, r7
 8016998:	681b      	ldr	r3, [r3, #0]
 801699a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801699e:	4293      	cmp	r3, r2
 80169a0:	d108      	bne.n	80169b4 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80169a2:	4813      	ldr	r0, [pc, #76]	; (80169f0 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80169a4:	f7ed f9fc 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80169a8:	4810      	ldr	r0, [pc, #64]	; (80169ec <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80169aa:	f7ed fa06 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80169ae:	4804      	ldr	r0, [pc, #16]	; (80169c0 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80169b0:	f7ed fa10 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80169b4:	bf00      	nop
 80169b6:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80169ba:	46bd      	mov	sp, r7
 80169bc:	bd90      	pop	{r4, r7, pc}
 80169be:	bf00      	nop
 80169c0:	20000530 	.word	0x20000530
 80169c4:	08024fec 	.word	0x08024fec
 80169c8:	08024ff4 	.word	0x08024ff4
 80169cc:	08024ffc 	.word	0x08024ffc
 80169d0:	08025004 	.word	0x08025004
 80169d4:	0802500c 	.word	0x0802500c
 80169d8:	08025014 	.word	0x08025014
 80169dc:	08025018 	.word	0x08025018
 80169e0:	08025020 	.word	0x08025020
 80169e4:	08025028 	.word	0x08025028
 80169e8:	08025030 	.word	0x08025030
 80169ec:	20000548 	.word	0x20000548
 80169f0:	20000560 	.word	0x20000560

080169f4 <_GLOBAL__sub_I_huart1>:
 80169f4:	b580      	push	{r7, lr}
 80169f6:	af00      	add	r7, sp, #0
 80169f8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80169fc:	2001      	movs	r0, #1
 80169fe:	f7ff fe1d 	bl	801663c <_Z41__static_initialization_and_destruction_0ii>
 8016a02:	bd80      	pop	{r7, pc}

08016a04 <_GLOBAL__sub_D_huart1>:
 8016a04:	b580      	push	{r7, lr}
 8016a06:	af00      	add	r7, sp, #0
 8016a08:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016a0c:	2000      	movs	r0, #0
 8016a0e:	f7ff fe15 	bl	801663c <_Z41__static_initialization_and_destruction_0ii>
 8016a12:	bd80      	pop	{r7, pc}

08016a14 <_ZN6ParserC1Ev>:
	Body *setup;
	Body *loop;
	Body *finish;
};

class Parser
 8016a14:	b580      	push	{r7, lr}
 8016a16:	b082      	sub	sp, #8
 8016a18:	af00      	add	r7, sp, #0
 8016a1a:	6078      	str	r0, [r7, #4]
 8016a1c:	687b      	ldr	r3, [r7, #4]
 8016a1e:	4618      	mov	r0, r3
 8016a20:	f7f2 f9c9 	bl	8008db6 <_ZN5TokenC1Ev>
 8016a24:	687b      	ldr	r3, [r7, #4]
 8016a26:	4618      	mov	r0, r3
 8016a28:	3708      	adds	r7, #8
 8016a2a:	46bd      	mov	sp, r7
 8016a2c:	bd80      	pop	{r7, pc}
	...

08016a30 <_Z11my_main_runP20__UART_HandleTypeDef>:
#include "my_main.h"

// main function called after setup from CUBEMX
void my_main_run(UART_HandleTypeDef* huart)
{
 8016a30:	b590      	push	{r4, r7, lr}
 8016a32:	b09f      	sub	sp, #124	; 0x7c
 8016a34:	af00      	add	r7, sp, #0
 8016a36:	6078      	str	r0, [r7, #4]
	Parser Par;
 8016a38:	f107 0308 	add.w	r3, r7, #8
 8016a3c:	4618      	mov	r0, r3
 8016a3e:	f7ff ffe9 	bl	8016a14 <_ZN6ParserC1Ev>

	Program* P = Par.parse_program();
 8016a42:	f107 0308 	add.w	r3, r7, #8
 8016a46:	4618      	mov	r0, r3
 8016a48:	f7f5 fc12 	bl	800c270 <_ZN6Parser13parse_programEv>
 8016a4c:	6778      	str	r0, [r7, #116]	; 0x74
	delete P;
 8016a4e:	6f7c      	ldr	r4, [r7, #116]	; 0x74
 8016a50:	2c00      	cmp	r4, #0
 8016a52:	d006      	beq.n	8016a62 <_Z11my_main_runP20__UART_HandleTypeDef+0x32>
 8016a54:	4620      	mov	r0, r4
 8016a56:	f7f4 fc39 	bl	800b2cc <_ZN7ProgramD1Ev>
 8016a5a:	210c      	movs	r1, #12
 8016a5c:	4620      	mov	r0, r4
 8016a5e:	f009 fbc2 	bl	80201e6 <_ZdlPvj>

	//Executor Exec;
	auto fc = new Function_call();
 8016a62:	202c      	movs	r0, #44	; 0x2c
 8016a64:	f009 fbd0 	bl	8020208 <_Znwj>
 8016a68:	4603      	mov	r3, r0
 8016a6a:	461c      	mov	r4, r3
 8016a6c:	4620      	mov	r0, r4
 8016a6e:	232c      	movs	r3, #44	; 0x2c
 8016a70:	461a      	mov	r2, r3
 8016a72:	2100      	movs	r1, #0
 8016a74:	f00a ff4a 	bl	802190c <memset>
 8016a78:	4620      	mov	r0, r4
 8016a7a:	f7f5 f804 	bl	800ba86 <_ZN13Function_callC1Ev>
 8016a7e:	673c      	str	r4, [r7, #112]	; 0x70
	fc->id = std::string("run_single_experiment_iteration");
 8016a80:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016a84:	4618      	mov	r0, r3
 8016a86:	f009 fbd0 	bl	802022a <_ZNSaIcEC1Ev>
 8016a8a:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8016a8e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8016a92:	491c      	ldr	r1, [pc, #112]	; (8016b04 <_Z11my_main_runP20__UART_HandleTypeDef+0xd4>)
 8016a94:	4618      	mov	r0, r3
 8016a96:	f7ea fc78 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8016a9a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8016a9c:	3308      	adds	r3, #8
 8016a9e:	f107 0230 	add.w	r2, r7, #48	; 0x30
 8016aa2:	4611      	mov	r1, r2
 8016aa4:	4618      	mov	r0, r3
 8016aa6:	f009 fd92 	bl	80205ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 8016aaa:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8016aae:	4618      	mov	r0, r3
 8016ab0:	f009 fd81 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8016ab4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8016ab8:	4618      	mov	r0, r3
 8016aba:	f009 fbb7 	bl	802022c <_ZNSaIcED1Ev>
	fc->arguments = {};
 8016abe:	2300      	movs	r3, #0
 8016ac0:	64fb      	str	r3, [r7, #76]	; 0x4c
 8016ac2:	2300      	movs	r3, #0
 8016ac4:	653b      	str	r3, [r7, #80]	; 0x50
 8016ac6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8016ac8:	f103 0020 	add.w	r0, r3, #32
 8016acc:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8016ad0:	e893 0006 	ldmia.w	r3, {r1, r2}
 8016ad4:	f000 f818 	bl	8016b08 <_ZNSt6vectorIP10ExpressionSaIS1_EEaSESt16initializer_listIS1_E>

	Function_handler::run_function(fc);
 8016ad8:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8016adc:	6f39      	ldr	r1, [r7, #112]	; 0x70
 8016ade:	4618      	mov	r0, r3
 8016ae0:	f7f1 f818 	bl	8007b14 <_ZN16Function_handler12run_functionB5cxx11EP13Function_call>
 8016ae4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8016ae8:	4618      	mov	r0, r3
 8016aea:	f7f0 f8da 	bl	8006ca2 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEED1Ev>

	delete fc;
 8016aee:	6f3c      	ldr	r4, [r7, #112]	; 0x70
 8016af0:	2c00      	cmp	r4, #0
 8016af2:	d006      	beq.n	8016b02 <_Z11my_main_runP20__UART_HandleTypeDef+0xd2>
 8016af4:	4620      	mov	r0, r4
 8016af6:	f7f8 fb91 	bl	800f21c <_ZN13Function_callD1Ev>
 8016afa:	212c      	movs	r1, #44	; 0x2c
 8016afc:	4620      	mov	r0, r4
 8016afe:	f009 fb72 	bl	80201e6 <_ZdlPvj>

	for(;;)
 8016b02:	e7fe      	b.n	8016b02 <_Z11my_main_runP20__UART_HandleTypeDef+0xd2>
 8016b04:	08025034 	.word	0x08025034

08016b08 <_ZNSt6vectorIP10ExpressionSaIS1_EEaSESt16initializer_listIS1_E>:
      operator=(initializer_list<value_type> __l)
 8016b08:	b5b0      	push	{r4, r5, r7, lr}
 8016b0a:	b086      	sub	sp, #24
 8016b0c:	af00      	add	r7, sp, #0
 8016b0e:	60f8      	str	r0, [r7, #12]
 8016b10:	1d3b      	adds	r3, r7, #4
 8016b12:	e883 0006 	stmia.w	r3, {r1, r2}
	this->_M_assign_aux(__l.begin(), __l.end(),
 8016b16:	1d3b      	adds	r3, r7, #4
 8016b18:	4618      	mov	r0, r3
 8016b1a:	f000 f810 	bl	8016b3e <_ZNKSt16initializer_listIP10ExpressionE5beginEv>
 8016b1e:	4604      	mov	r4, r0
 8016b20:	1d3b      	adds	r3, r7, #4
 8016b22:	4618      	mov	r0, r3
 8016b24:	f000 f817 	bl	8016b56 <_ZNKSt16initializer_listIP10ExpressionE3endEv>
 8016b28:	4602      	mov	r2, r0
 8016b2a:	462b      	mov	r3, r5
 8016b2c:	4621      	mov	r1, r4
 8016b2e:	68f8      	ldr	r0, [r7, #12]
 8016b30:	f000 f837 	bl	8016ba2 <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>
	return *this;
 8016b34:	68fb      	ldr	r3, [r7, #12]
      }
 8016b36:	4618      	mov	r0, r3
 8016b38:	3718      	adds	r7, #24
 8016b3a:	46bd      	mov	sp, r7
 8016b3c:	bdb0      	pop	{r4, r5, r7, pc}

08016b3e <_ZNKSt16initializer_listIP10ExpressionE5beginEv>:
      begin() const noexcept { return _M_array; }
 8016b3e:	b480      	push	{r7}
 8016b40:	b083      	sub	sp, #12
 8016b42:	af00      	add	r7, sp, #0
 8016b44:	6078      	str	r0, [r7, #4]
 8016b46:	687b      	ldr	r3, [r7, #4]
 8016b48:	681b      	ldr	r3, [r3, #0]
 8016b4a:	4618      	mov	r0, r3
 8016b4c:	370c      	adds	r7, #12
 8016b4e:	46bd      	mov	sp, r7
 8016b50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016b54:	4770      	bx	lr

08016b56 <_ZNKSt16initializer_listIP10ExpressionE3endEv>:
      end() const noexcept { return begin() + size(); }
 8016b56:	b590      	push	{r4, r7, lr}
 8016b58:	b083      	sub	sp, #12
 8016b5a:	af00      	add	r7, sp, #0
 8016b5c:	6078      	str	r0, [r7, #4]
 8016b5e:	6878      	ldr	r0, [r7, #4]
 8016b60:	f7ff ffed 	bl	8016b3e <_ZNKSt16initializer_listIP10ExpressionE5beginEv>
 8016b64:	4604      	mov	r4, r0
 8016b66:	6878      	ldr	r0, [r7, #4]
 8016b68:	f000 f8b4 	bl	8016cd4 <_ZNKSt16initializer_listIP10ExpressionE4sizeEv>
 8016b6c:	4603      	mov	r3, r0
 8016b6e:	009b      	lsls	r3, r3, #2
 8016b70:	4423      	add	r3, r4
 8016b72:	4618      	mov	r0, r3
 8016b74:	370c      	adds	r7, #12
 8016b76:	46bd      	mov	sp, r7
 8016b78:	bd90      	pop	{r4, r7, pc}

08016b7a <_ZSt8distanceIPKP10ExpressionENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
 8016b7a:	b5b0      	push	{r4, r5, r7, lr}
 8016b7c:	b082      	sub	sp, #8
 8016b7e:	af00      	add	r7, sp, #0
 8016b80:	6078      	str	r0, [r7, #4]
 8016b82:	6039      	str	r1, [r7, #0]
      return std::__distance(__first, __last,
 8016b84:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 8016b86:	1d3b      	adds	r3, r7, #4
 8016b88:	4618      	mov	r0, r3
 8016b8a:	f000 f8af 	bl	8016cec <_ZSt19__iterator_categoryIPKP10ExpressionENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
 8016b8e:	462a      	mov	r2, r5
 8016b90:	6839      	ldr	r1, [r7, #0]
 8016b92:	4620      	mov	r0, r4
 8016b94:	f000 f8b4 	bl	8016d00 <_ZSt10__distanceIPKP10ExpressionENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
 8016b98:	4603      	mov	r3, r0
    }
 8016b9a:	4618      	mov	r0, r3
 8016b9c:	3708      	adds	r7, #8
 8016b9e:	46bd      	mov	sp, r7
 8016ba0:	bdb0      	pop	{r4, r5, r7, pc}

08016ba2 <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag>:
      vector<_Tp, _Alloc>::
 8016ba2:	b5b0      	push	{r4, r5, r7, lr}
 8016ba4:	b088      	sub	sp, #32
 8016ba6:	af00      	add	r7, sp, #0
 8016ba8:	60f8      	str	r0, [r7, #12]
 8016baa:	60b9      	str	r1, [r7, #8]
 8016bac:	607a      	str	r2, [r7, #4]
 8016bae:	703b      	strb	r3, [r7, #0]
	const size_type __len = std::distance(__first, __last);
 8016bb0:	6879      	ldr	r1, [r7, #4]
 8016bb2:	68b8      	ldr	r0, [r7, #8]
 8016bb4:	f7ff ffe1 	bl	8016b7a <_ZSt8distanceIPKP10ExpressionENSt15iterator_traitsIT_E15difference_typeES5_S5_>
 8016bb8:	4603      	mov	r3, r0
 8016bba:	61fb      	str	r3, [r7, #28]
	if (__len > capacity())
 8016bbc:	68f8      	ldr	r0, [r7, #12]
 8016bbe:	f000 f8af 	bl	8016d20 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8capacityEv>
 8016bc2:	4602      	mov	r2, r0
 8016bc4:	69fb      	ldr	r3, [r7, #28]
 8016bc6:	4293      	cmp	r3, r2
 8016bc8:	bf8c      	ite	hi
 8016bca:	2301      	movhi	r3, #1
 8016bcc:	2300      	movls	r3, #0
 8016bce:	b2db      	uxtb	r3, r3
 8016bd0:	2b00      	cmp	r3, #0
 8016bd2:	d038      	beq.n	8016c46 <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xa4>
	    _S_check_init_len(__len, _M_get_Tp_allocator());
 8016bd4:	68fb      	ldr	r3, [r7, #12]
 8016bd6:	4618      	mov	r0, r3
 8016bd8:	f7f1 fa86 	bl	80080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8016bdc:	4603      	mov	r3, r0
 8016bde:	4619      	mov	r1, r3
 8016be0:	69f8      	ldr	r0, [r7, #28]
 8016be2:	f000 f8ad 	bl	8016d40 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_S_check_init_lenEjRKS2_>
	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 8016be6:	687b      	ldr	r3, [r7, #4]
 8016be8:	68ba      	ldr	r2, [r7, #8]
 8016bea:	69f9      	ldr	r1, [r7, #28]
 8016bec:	68f8      	ldr	r0, [r7, #12]
 8016bee:	f000 f8cf 	bl	8016d90 <_ZNSt6vectorIP10ExpressionSaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_jT_S8_>
 8016bf2:	6178      	str	r0, [r7, #20]
	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8016bf4:	68fb      	ldr	r3, [r7, #12]
 8016bf6:	681c      	ldr	r4, [r3, #0]
 8016bf8:	68fb      	ldr	r3, [r7, #12]
 8016bfa:	685d      	ldr	r5, [r3, #4]
			  _M_get_Tp_allocator());
 8016bfc:	68fb      	ldr	r3, [r7, #12]
 8016bfe:	4618      	mov	r0, r3
 8016c00:	f7f1 fa72 	bl	80080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8016c04:	4603      	mov	r3, r0
	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8016c06:	461a      	mov	r2, r3
 8016c08:	4629      	mov	r1, r5
 8016c0a:	4620      	mov	r0, r4
 8016c0c:	f7f1 fa88 	bl	8008120 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
	    _M_deallocate(this->_M_impl._M_start,
 8016c10:	68f8      	ldr	r0, [r7, #12]
 8016c12:	68fb      	ldr	r3, [r7, #12]
 8016c14:	6819      	ldr	r1, [r3, #0]
			  this->_M_impl._M_end_of_storage
 8016c16:	68fb      	ldr	r3, [r7, #12]
 8016c18:	689a      	ldr	r2, [r3, #8]
			  - this->_M_impl._M_start);
 8016c1a:	68fb      	ldr	r3, [r7, #12]
 8016c1c:	681b      	ldr	r3, [r3, #0]
 8016c1e:	1ad3      	subs	r3, r2, r3
 8016c20:	109b      	asrs	r3, r3, #2
	    _M_deallocate(this->_M_impl._M_start,
 8016c22:	461a      	mov	r2, r3
 8016c24:	f7f1 fbeb 	bl	80083fe <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE13_M_deallocateEPS1_j>
	    this->_M_impl._M_start = __tmp;
 8016c28:	68fb      	ldr	r3, [r7, #12]
 8016c2a:	697a      	ldr	r2, [r7, #20]
 8016c2c:	601a      	str	r2, [r3, #0]
	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 8016c2e:	68fb      	ldr	r3, [r7, #12]
 8016c30:	681a      	ldr	r2, [r3, #0]
 8016c32:	69fb      	ldr	r3, [r7, #28]
 8016c34:	009b      	lsls	r3, r3, #2
 8016c36:	441a      	add	r2, r3
 8016c38:	68fb      	ldr	r3, [r7, #12]
 8016c3a:	605a      	str	r2, [r3, #4]
	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 8016c3c:	68fb      	ldr	r3, [r7, #12]
 8016c3e:	685a      	ldr	r2, [r3, #4]
 8016c40:	68fb      	ldr	r3, [r7, #12]
 8016c42:	609a      	str	r2, [r3, #8]
      }
 8016c44:	e042      	b.n	8016ccc <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x12a>
	else if (size() >= __len)
 8016c46:	68f8      	ldr	r0, [r7, #12]
 8016c48:	f7f1 f9b8 	bl	8007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8016c4c:	4602      	mov	r2, r0
 8016c4e:	69fb      	ldr	r3, [r7, #28]
 8016c50:	4293      	cmp	r3, r2
 8016c52:	bf94      	ite	ls
 8016c54:	2301      	movls	r3, #1
 8016c56:	2300      	movhi	r3, #0
 8016c58:	b2db      	uxtb	r3, r3
 8016c5a:	2b00      	cmp	r3, #0
 8016c5c:	d00c      	beq.n	8016c78 <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0xd6>
	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 8016c5e:	68fb      	ldr	r3, [r7, #12]
 8016c60:	681b      	ldr	r3, [r3, #0]
 8016c62:	461a      	mov	r2, r3
 8016c64:	6879      	ldr	r1, [r7, #4]
 8016c66:	68b8      	ldr	r0, [r7, #8]
 8016c68:	f000 f8cf 	bl	8016e0a <_ZSt4copyIPKP10ExpressionPS1_ET0_T_S6_S5_>
 8016c6c:	4603      	mov	r3, r0
 8016c6e:	4619      	mov	r1, r3
 8016c70:	68f8      	ldr	r0, [r7, #12]
 8016c72:	f000 f8a9 	bl	8016dc8 <_ZNSt6vectorIP10ExpressionSaIS1_EE15_M_erase_at_endEPS1_>
      }
 8016c76:	e029      	b.n	8016ccc <_ZNSt6vectorIP10ExpressionSaIS1_EE13_M_assign_auxIPKS1_EEvT_S7_St20forward_iterator_tag+0x12a>
	    _ForwardIterator __mid = __first;
 8016c78:	68bb      	ldr	r3, [r7, #8]
 8016c7a:	613b      	str	r3, [r7, #16]
	    std::advance(__mid, size());
 8016c7c:	68f8      	ldr	r0, [r7, #12]
 8016c7e:	f7f1 f99d 	bl	8007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8016c82:	4602      	mov	r2, r0
 8016c84:	f107 0310 	add.w	r3, r7, #16
 8016c88:	4611      	mov	r1, r2
 8016c8a:	4618      	mov	r0, r3
 8016c8c:	f000 f8d5 	bl	8016e3a <_ZSt7advanceIPKP10ExpressionjEvRT_T0_>
	    std::copy(__first, __mid, this->_M_impl._M_start);
 8016c90:	6939      	ldr	r1, [r7, #16]
 8016c92:	68fb      	ldr	r3, [r7, #12]
 8016c94:	681b      	ldr	r3, [r3, #0]
 8016c96:	461a      	mov	r2, r3
 8016c98:	68b8      	ldr	r0, [r7, #8]
 8016c9a:	f000 f8b6 	bl	8016e0a <_ZSt4copyIPKP10ExpressionPS1_ET0_T_S6_S5_>
	    const size_type __attribute__((__unused__)) __n = __len - size();
 8016c9e:	68f8      	ldr	r0, [r7, #12]
 8016ca0:	f7f1 f98c 	bl	8007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8016ca4:	4602      	mov	r2, r0
 8016ca6:	69fb      	ldr	r3, [r7, #28]
 8016ca8:	1a9b      	subs	r3, r3, r2
 8016caa:	61bb      	str	r3, [r7, #24]
	      std::__uninitialized_copy_a(__mid, __last,
 8016cac:	693c      	ldr	r4, [r7, #16]
 8016cae:	68fb      	ldr	r3, [r7, #12]
 8016cb0:	685d      	ldr	r5, [r3, #4]
					  _M_get_Tp_allocator());
 8016cb2:	68fb      	ldr	r3, [r7, #12]
 8016cb4:	4618      	mov	r0, r3
 8016cb6:	f7f1 fa17 	bl	80080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8016cba:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__mid, __last,
 8016cbc:	462a      	mov	r2, r5
 8016cbe:	6879      	ldr	r1, [r7, #4]
 8016cc0:	4620      	mov	r0, r4
 8016cc2:	f000 f8cd 	bl	8016e60 <_ZSt22__uninitialized_copy_aIPKP10ExpressionPS1_S1_ET0_T_S6_S5_RSaIT1_E>
 8016cc6:	4602      	mov	r2, r0
	    this->_M_impl._M_finish =
 8016cc8:	68fb      	ldr	r3, [r7, #12]
 8016cca:	605a      	str	r2, [r3, #4]
      }
 8016ccc:	bf00      	nop
 8016cce:	3720      	adds	r7, #32
 8016cd0:	46bd      	mov	sp, r7
 8016cd2:	bdb0      	pop	{r4, r5, r7, pc}

08016cd4 <_ZNKSt16initializer_listIP10ExpressionE4sizeEv>:
      size() const noexcept { return _M_len; }
 8016cd4:	b480      	push	{r7}
 8016cd6:	b083      	sub	sp, #12
 8016cd8:	af00      	add	r7, sp, #0
 8016cda:	6078      	str	r0, [r7, #4]
 8016cdc:	687b      	ldr	r3, [r7, #4]
 8016cde:	685b      	ldr	r3, [r3, #4]
 8016ce0:	4618      	mov	r0, r3
 8016ce2:	370c      	adds	r7, #12
 8016ce4:	46bd      	mov	sp, r7
 8016ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016cea:	4770      	bx	lr

08016cec <_ZSt19__iterator_categoryIPKP10ExpressionENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
 8016cec:	b480      	push	{r7}
 8016cee:	b083      	sub	sp, #12
 8016cf0:	af00      	add	r7, sp, #0
 8016cf2:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 8016cf4:	4618      	mov	r0, r3
 8016cf6:	370c      	adds	r7, #12
 8016cf8:	46bd      	mov	sp, r7
 8016cfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016cfe:	4770      	bx	lr

08016d00 <_ZSt10__distanceIPKP10ExpressionENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8016d00:	b480      	push	{r7}
 8016d02:	b085      	sub	sp, #20
 8016d04:	af00      	add	r7, sp, #0
 8016d06:	60f8      	str	r0, [r7, #12]
 8016d08:	60b9      	str	r1, [r7, #8]
 8016d0a:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8016d0c:	68ba      	ldr	r2, [r7, #8]
 8016d0e:	68fb      	ldr	r3, [r7, #12]
 8016d10:	1ad3      	subs	r3, r2, r3
 8016d12:	109b      	asrs	r3, r3, #2
    }
 8016d14:	4618      	mov	r0, r3
 8016d16:	3714      	adds	r7, #20
 8016d18:	46bd      	mov	sp, r7
 8016d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016d1e:	4770      	bx	lr

08016d20 <_ZNKSt6vectorIP10ExpressionSaIS1_EE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
 8016d20:	b480      	push	{r7}
 8016d22:	b083      	sub	sp, #12
 8016d24:	af00      	add	r7, sp, #0
 8016d26:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_end_of_storage
 8016d28:	687b      	ldr	r3, [r7, #4]
 8016d2a:	689a      	ldr	r2, [r3, #8]
			 - this->_M_impl._M_start); }
 8016d2c:	687b      	ldr	r3, [r7, #4]
 8016d2e:	681b      	ldr	r3, [r3, #0]
 8016d30:	1ad3      	subs	r3, r2, r3
 8016d32:	109b      	asrs	r3, r3, #2
 8016d34:	4618      	mov	r0, r3
 8016d36:	370c      	adds	r7, #12
 8016d38:	46bd      	mov	sp, r7
 8016d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016d3e:	4770      	bx	lr

08016d40 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_S_check_init_lenEjRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
 8016d40:	b590      	push	{r4, r7, lr}
 8016d42:	b085      	sub	sp, #20
 8016d44:	af00      	add	r7, sp, #0
 8016d46:	6078      	str	r0, [r7, #4]
 8016d48:	6039      	str	r1, [r7, #0]
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 8016d4a:	f107 030c 	add.w	r3, r7, #12
 8016d4e:	6839      	ldr	r1, [r7, #0]
 8016d50:	4618      	mov	r0, r3
 8016d52:	f7f1 fc2f 	bl	80085b4 <_ZNSaIP10ExpressionEC1ERKS1_>
 8016d56:	f107 030c 	add.w	r3, r7, #12
 8016d5a:	4618      	mov	r0, r3
 8016d5c:	f7f7 fca8 	bl	800e6b0 <_ZNSt6vectorIP10ExpressionSaIS1_EE11_S_max_sizeERKS2_>
 8016d60:	4602      	mov	r2, r0
 8016d62:	687b      	ldr	r3, [r7, #4]
 8016d64:	4293      	cmp	r3, r2
 8016d66:	bf8c      	ite	hi
 8016d68:	2301      	movhi	r3, #1
 8016d6a:	2300      	movls	r3, #0
 8016d6c:	b2dc      	uxtb	r4, r3
 8016d6e:	f107 030c 	add.w	r3, r7, #12
 8016d72:	4618      	mov	r0, r3
 8016d74:	f7f1 f94b 	bl	800800e <_ZNSaIP10ExpressionED1Ev>
 8016d78:	2c00      	cmp	r4, #0
 8016d7a:	d002      	beq.n	8016d82 <_ZNSt6vectorIP10ExpressionSaIS1_EE17_S_check_init_lenEjRKS2_+0x42>
	  __throw_length_error(
 8016d7c:	4803      	ldr	r0, [pc, #12]	; (8016d8c <_ZNSt6vectorIP10ExpressionSaIS1_EE17_S_check_init_lenEjRKS2_+0x4c>)
 8016d7e:	f009 fb11 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	return __n;
 8016d82:	687b      	ldr	r3, [r7, #4]
      }
 8016d84:	4618      	mov	r0, r3
 8016d86:	3714      	adds	r7, #20
 8016d88:	46bd      	mov	sp, r7
 8016d8a:	bd90      	pop	{r4, r7, pc}
 8016d8c:	08025054 	.word	0x08025054

08016d90 <_ZNSt6vectorIP10ExpressionSaIS1_EE20_M_allocate_and_copyIPKS1_EEPS1_jT_S8_>:
	_M_allocate_and_copy(size_type __n,
 8016d90:	b580      	push	{r7, lr}
 8016d92:	b086      	sub	sp, #24
 8016d94:	af00      	add	r7, sp, #0
 8016d96:	60f8      	str	r0, [r7, #12]
 8016d98:	60b9      	str	r1, [r7, #8]
 8016d9a:	607a      	str	r2, [r7, #4]
 8016d9c:	603b      	str	r3, [r7, #0]
	  pointer __result = this->_M_allocate(__n);
 8016d9e:	68fb      	ldr	r3, [r7, #12]
 8016da0:	68b9      	ldr	r1, [r7, #8]
 8016da2:	4618      	mov	r0, r3
 8016da4:	f7f1 fc28 	bl	80085f8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE11_M_allocateEj>
 8016da8:	6178      	str	r0, [r7, #20]
					  _M_get_Tp_allocator());
 8016daa:	68fb      	ldr	r3, [r7, #12]
 8016dac:	4618      	mov	r0, r3
 8016dae:	f7f1 f99b 	bl	80080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8016db2:	4603      	mov	r3, r0
	      std::__uninitialized_copy_a(__first, __last, __result,
 8016db4:	697a      	ldr	r2, [r7, #20]
 8016db6:	6839      	ldr	r1, [r7, #0]
 8016db8:	6878      	ldr	r0, [r7, #4]
 8016dba:	f000 f851 	bl	8016e60 <_ZSt22__uninitialized_copy_aIPKP10ExpressionPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	      return __result;
 8016dbe:	697b      	ldr	r3, [r7, #20]
	}
 8016dc0:	4618      	mov	r0, r3
 8016dc2:	3718      	adds	r7, #24
 8016dc4:	46bd      	mov	sp, r7
 8016dc6:	bd80      	pop	{r7, pc}

08016dc8 <_ZNSt6vectorIP10ExpressionSaIS1_EE15_M_erase_at_endEPS1_>:
      // Internal erase functions follow.

      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      // _M_assign_aux.
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
 8016dc8:	b590      	push	{r4, r7, lr}
 8016dca:	b085      	sub	sp, #20
 8016dcc:	af00      	add	r7, sp, #0
 8016dce:	6078      	str	r0, [r7, #4]
 8016dd0:	6039      	str	r1, [r7, #0]
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
 8016dd2:	687b      	ldr	r3, [r7, #4]
 8016dd4:	685a      	ldr	r2, [r3, #4]
 8016dd6:	683b      	ldr	r3, [r7, #0]
 8016dd8:	1ad3      	subs	r3, r2, r3
 8016dda:	109b      	asrs	r3, r3, #2
 8016ddc:	60fb      	str	r3, [r7, #12]
 8016dde:	68fb      	ldr	r3, [r7, #12]
 8016de0:	2b00      	cmp	r3, #0
 8016de2:	d00e      	beq.n	8016e02 <_ZNSt6vectorIP10ExpressionSaIS1_EE15_M_erase_at_endEPS1_+0x3a>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 8016de4:	687b      	ldr	r3, [r7, #4]
 8016de6:	685c      	ldr	r4, [r3, #4]
			  _M_get_Tp_allocator());
 8016de8:	687b      	ldr	r3, [r7, #4]
 8016dea:	4618      	mov	r0, r3
 8016dec:	f7f1 f97c 	bl	80080e8 <_ZNSt12_Vector_baseIP10ExpressionSaIS1_EE19_M_get_Tp_allocatorEv>
 8016df0:	4603      	mov	r3, r0
	    std::_Destroy(__pos, this->_M_impl._M_finish,
 8016df2:	461a      	mov	r2, r3
 8016df4:	4621      	mov	r1, r4
 8016df6:	6838      	ldr	r0, [r7, #0]
 8016df8:	f7f1 f992 	bl	8008120 <_ZSt8_DestroyIPP10ExpressionS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
 8016dfc:	687b      	ldr	r3, [r7, #4]
 8016dfe:	683a      	ldr	r2, [r7, #0]
 8016e00:	605a      	str	r2, [r3, #4]
	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
	  }
      }
 8016e02:	bf00      	nop
 8016e04:	3714      	adds	r7, #20
 8016e06:	46bd      	mov	sp, r7
 8016e08:	bd90      	pop	{r4, r7, pc}

08016e0a <_ZSt4copyIPKP10ExpressionPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
 8016e0a:	b590      	push	{r4, r7, lr}
 8016e0c:	b085      	sub	sp, #20
 8016e0e:	af00      	add	r7, sp, #0
 8016e10:	60f8      	str	r0, [r7, #12]
 8016e12:	60b9      	str	r1, [r7, #8]
 8016e14:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8016e16:	68f8      	ldr	r0, [r7, #12]
 8016e18:	f000 f833 	bl	8016e82 <_ZSt12__miter_baseIPKP10ExpressionET_S4_>
 8016e1c:	4604      	mov	r4, r0
 8016e1e:	68b8      	ldr	r0, [r7, #8]
 8016e20:	f000 f82f 	bl	8016e82 <_ZSt12__miter_baseIPKP10ExpressionET_S4_>
 8016e24:	4603      	mov	r3, r0
 8016e26:	687a      	ldr	r2, [r7, #4]
 8016e28:	4619      	mov	r1, r3
 8016e2a:	4620      	mov	r0, r4
 8016e2c:	f000 f834 	bl	8016e98 <_ZSt14__copy_move_a2ILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 8016e30:	4603      	mov	r3, r0
    }
 8016e32:	4618      	mov	r0, r3
 8016e34:	3714      	adds	r7, #20
 8016e36:	46bd      	mov	sp, r7
 8016e38:	bd90      	pop	{r4, r7, pc}

08016e3a <_ZSt7advanceIPKP10ExpressionjEvRT_T0_>:
   *  For random access iterators, this uses their @c + and @c - operations
   *  and are constant time.  For other %iterator classes they are linear time.
  */
  template<typename _InputIterator, typename _Distance>
    inline _GLIBCXX17_CONSTEXPR void
    advance(_InputIterator& __i, _Distance __n)
 8016e3a:	b590      	push	{r4, r7, lr}
 8016e3c:	b085      	sub	sp, #20
 8016e3e:	af00      	add	r7, sp, #0
 8016e40:	6078      	str	r0, [r7, #4]
 8016e42:	6039      	str	r1, [r7, #0]
    {
      // concept requirements -- taken care of in __advance
      typename iterator_traits<_InputIterator>::difference_type __d = __n;
 8016e44:	683b      	ldr	r3, [r7, #0]
 8016e46:	60fb      	str	r3, [r7, #12]
      std::__advance(__i, __d, std::__iterator_category(__i));
 8016e48:	6878      	ldr	r0, [r7, #4]
 8016e4a:	f7ff ff4f 	bl	8016cec <_ZSt19__iterator_categoryIPKP10ExpressionENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
 8016e4e:	4622      	mov	r2, r4
 8016e50:	68f9      	ldr	r1, [r7, #12]
 8016e52:	6878      	ldr	r0, [r7, #4]
 8016e54:	f000 f843 	bl	8016ede <_ZSt9__advanceIPKP10ExpressioniEvRT_T0_St26random_access_iterator_tag>
    }
 8016e58:	bf00      	nop
 8016e5a:	3714      	adds	r7, #20
 8016e5c:	46bd      	mov	sp, r7
 8016e5e:	bd90      	pop	{r4, r7, pc}

08016e60 <_ZSt22__uninitialized_copy_aIPKP10ExpressionPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8016e60:	b580      	push	{r7, lr}
 8016e62:	b084      	sub	sp, #16
 8016e64:	af00      	add	r7, sp, #0
 8016e66:	60f8      	str	r0, [r7, #12]
 8016e68:	60b9      	str	r1, [r7, #8]
 8016e6a:	607a      	str	r2, [r7, #4]
 8016e6c:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 8016e6e:	687a      	ldr	r2, [r7, #4]
 8016e70:	68b9      	ldr	r1, [r7, #8]
 8016e72:	68f8      	ldr	r0, [r7, #12]
 8016e74:	f000 f846 	bl	8016f04 <_ZSt18uninitialized_copyIPKP10ExpressionPS1_ET0_T_S6_S5_>
 8016e78:	4603      	mov	r3, r0
 8016e7a:	4618      	mov	r0, r3
 8016e7c:	3710      	adds	r7, #16
 8016e7e:	46bd      	mov	sp, r7
 8016e80:	bd80      	pop	{r7, pc}

08016e82 <_ZSt12__miter_baseIPKP10ExpressionET_S4_>:
    __miter_base(_Iterator __it)
 8016e82:	b480      	push	{r7}
 8016e84:	b083      	sub	sp, #12
 8016e86:	af00      	add	r7, sp, #0
 8016e88:	6078      	str	r0, [r7, #4]
    { return __it; }
 8016e8a:	687b      	ldr	r3, [r7, #4]
 8016e8c:	4618      	mov	r0, r3
 8016e8e:	370c      	adds	r7, #12
 8016e90:	46bd      	mov	sp, r7
 8016e92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016e96:	4770      	bx	lr

08016e98 <_ZSt14__copy_move_a2ILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 8016e98:	b5b0      	push	{r4, r5, r7, lr}
 8016e9a:	b084      	sub	sp, #16
 8016e9c:	af00      	add	r7, sp, #0
 8016e9e:	60f8      	str	r0, [r7, #12]
 8016ea0:	60b9      	str	r1, [r7, #8]
 8016ea2:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8016ea4:	68f8      	ldr	r0, [r7, #12]
 8016ea6:	f000 f83f 	bl	8016f28 <_ZSt12__niter_baseIPKP10ExpressionET_S4_>
 8016eaa:	4604      	mov	r4, r0
 8016eac:	68b8      	ldr	r0, [r7, #8]
 8016eae:	f000 f83b 	bl	8016f28 <_ZSt12__niter_baseIPKP10ExpressionET_S4_>
 8016eb2:	4605      	mov	r5, r0
 8016eb4:	687b      	ldr	r3, [r7, #4]
 8016eb6:	4618      	mov	r0, r3
 8016eb8:	f7f1 fcff 	bl	80088ba <_ZSt12__niter_baseIPP10ExpressionET_S3_>
 8016ebc:	4603      	mov	r3, r0
 8016ebe:	461a      	mov	r2, r3
 8016ec0:	4629      	mov	r1, r5
 8016ec2:	4620      	mov	r0, r4
 8016ec4:	f7f1 fd04 	bl	80088d0 <_ZSt13__copy_move_aILb0EPKP10ExpressionPS1_ET1_T0_S6_S5_>
 8016ec8:	4602      	mov	r2, r0
 8016eca:	1d3b      	adds	r3, r7, #4
 8016ecc:	4611      	mov	r1, r2
 8016ece:	4618      	mov	r0, r3
 8016ed0:	f7f1 fd10 	bl	80088f4 <_ZSt12__niter_wrapIPP10ExpressionET_RKS3_S3_>
 8016ed4:	4603      	mov	r3, r0
    }
 8016ed6:	4618      	mov	r0, r3
 8016ed8:	3710      	adds	r7, #16
 8016eda:	46bd      	mov	sp, r7
 8016edc:	bdb0      	pop	{r4, r5, r7, pc}

08016ede <_ZSt9__advanceIPKP10ExpressioniEvRT_T0_St26random_access_iterator_tag>:
    __advance(_RandomAccessIterator& __i, _Distance __n,
 8016ede:	b480      	push	{r7}
 8016ee0:	b085      	sub	sp, #20
 8016ee2:	af00      	add	r7, sp, #0
 8016ee4:	60f8      	str	r0, [r7, #12]
 8016ee6:	60b9      	str	r1, [r7, #8]
 8016ee8:	713a      	strb	r2, [r7, #4]
	__i += __n;
 8016eea:	68fb      	ldr	r3, [r7, #12]
 8016eec:	681a      	ldr	r2, [r3, #0]
 8016eee:	68bb      	ldr	r3, [r7, #8]
 8016ef0:	009b      	lsls	r3, r3, #2
 8016ef2:	441a      	add	r2, r3
 8016ef4:	68fb      	ldr	r3, [r7, #12]
 8016ef6:	601a      	str	r2, [r3, #0]
    }
 8016ef8:	bf00      	nop
 8016efa:	3714      	adds	r7, #20
 8016efc:	46bd      	mov	sp, r7
 8016efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016f02:	4770      	bx	lr

08016f04 <_ZSt18uninitialized_copyIPKP10ExpressionPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 8016f04:	b580      	push	{r7, lr}
 8016f06:	b086      	sub	sp, #24
 8016f08:	af00      	add	r7, sp, #0
 8016f0a:	60f8      	str	r0, [r7, #12]
 8016f0c:	60b9      	str	r1, [r7, #8]
 8016f0e:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 8016f10:	2301      	movs	r3, #1
 8016f12:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 8016f14:	687a      	ldr	r2, [r7, #4]
 8016f16:	68b9      	ldr	r1, [r7, #8]
 8016f18:	68f8      	ldr	r0, [r7, #12]
 8016f1a:	f000 f810 	bl	8016f3e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP10ExpressionPS3_EET0_T_S8_S7_>
 8016f1e:	4603      	mov	r3, r0
    }
 8016f20:	4618      	mov	r0, r3
 8016f22:	3718      	adds	r7, #24
 8016f24:	46bd      	mov	sp, r7
 8016f26:	bd80      	pop	{r7, pc}

08016f28 <_ZSt12__niter_baseIPKP10ExpressionET_S4_>:
    __niter_base(_Iterator __it)
 8016f28:	b480      	push	{r7}
 8016f2a:	b083      	sub	sp, #12
 8016f2c:	af00      	add	r7, sp, #0
 8016f2e:	6078      	str	r0, [r7, #4]
    { return __it; }
 8016f30:	687b      	ldr	r3, [r7, #4]
 8016f32:	4618      	mov	r0, r3
 8016f34:	370c      	adds	r7, #12
 8016f36:	46bd      	mov	sp, r7
 8016f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016f3c:	4770      	bx	lr

08016f3e <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP10ExpressionPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 8016f3e:	b580      	push	{r7, lr}
 8016f40:	b084      	sub	sp, #16
 8016f42:	af00      	add	r7, sp, #0
 8016f44:	60f8      	str	r0, [r7, #12]
 8016f46:	60b9      	str	r1, [r7, #8]
 8016f48:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 8016f4a:	687a      	ldr	r2, [r7, #4]
 8016f4c:	68b9      	ldr	r1, [r7, #8]
 8016f4e:	68f8      	ldr	r0, [r7, #12]
 8016f50:	f7ff ff5b 	bl	8016e0a <_ZSt4copyIPKP10ExpressionPS1_ET0_T_S6_S5_>
 8016f54:	4603      	mov	r3, r0
 8016f56:	4618      	mov	r0, r3
 8016f58:	3710      	adds	r7, #16
 8016f5a:	46bd      	mov	sp, r7
 8016f5c:	bd80      	pop	{r7, pc}
	...

08016f60 <_Z41__static_initialization_and_destruction_0ii>:
	{

	}
}
 8016f60:	b590      	push	{r4, r7, lr}
 8016f62:	b0e7      	sub	sp, #412	; 0x19c
 8016f64:	af02      	add	r7, sp, #8
 8016f66:	1d3b      	adds	r3, r7, #4
 8016f68:	6018      	str	r0, [r3, #0]
 8016f6a:	463b      	mov	r3, r7
 8016f6c:	6019      	str	r1, [r3, #0]
 8016f6e:	1d3b      	adds	r3, r7, #4
 8016f70:	681b      	ldr	r3, [r3, #0]
 8016f72:	2b01      	cmp	r3, #1
 8016f74:	f040 819d 	bne.w	80172b2 <_Z41__static_initialization_and_destruction_0ii+0x352>
 8016f78:	463b      	mov	r3, r7
 8016f7a:	681b      	ldr	r3, [r3, #0]
 8016f7c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016f80:	4293      	cmp	r3, r2
 8016f82:	f040 8196 	bne.w	80172b2 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 8016f86:	f107 0314 	add.w	r3, r7, #20
 8016f8a:	4618      	mov	r0, r3
 8016f8c:	2322      	movs	r3, #34	; 0x22
 8016f8e:	461a      	mov	r2, r3
 8016f90:	2100      	movs	r1, #0
 8016f92:	f00a fcbb 	bl	802190c <memset>
 8016f96:	f107 0314 	add.w	r3, r7, #20
 8016f9a:	223a      	movs	r2, #58	; 0x3a
 8016f9c:	701a      	strb	r2, [r3, #0]
 8016f9e:	f107 0314 	add.w	r3, r7, #20
 8016fa2:	2201      	movs	r2, #1
 8016fa4:	705a      	strb	r2, [r3, #1]
 8016fa6:	f107 0314 	add.w	r3, r7, #20
 8016faa:	220a      	movs	r2, #10
 8016fac:	709a      	strb	r2, [r3, #2]
 8016fae:	f107 0314 	add.w	r3, r7, #20
 8016fb2:	220a      	movs	r2, #10
 8016fb4:	70da      	strb	r2, [r3, #3]
 8016fb6:	f107 0314 	add.w	r3, r7, #20
 8016fba:	222c      	movs	r2, #44	; 0x2c
 8016fbc:	711a      	strb	r2, [r3, #4]
 8016fbe:	f107 0314 	add.w	r3, r7, #20
 8016fc2:	220c      	movs	r2, #12
 8016fc4:	715a      	strb	r2, [r3, #5]
 8016fc6:	f107 0314 	add.w	r3, r7, #20
 8016fca:	222e      	movs	r2, #46	; 0x2e
 8016fcc:	719a      	strb	r2, [r3, #6]
 8016fce:	f107 0314 	add.w	r3, r7, #20
 8016fd2:	220b      	movs	r2, #11
 8016fd4:	71da      	strb	r2, [r3, #7]
 8016fd6:	f107 0314 	add.w	r3, r7, #20
 8016fda:	225b      	movs	r2, #91	; 0x5b
 8016fdc:	721a      	strb	r2, [r3, #8]
 8016fde:	f107 0314 	add.w	r3, r7, #20
 8016fe2:	220d      	movs	r2, #13
 8016fe4:	725a      	strb	r2, [r3, #9]
 8016fe6:	f107 0314 	add.w	r3, r7, #20
 8016fea:	225d      	movs	r2, #93	; 0x5d
 8016fec:	729a      	strb	r2, [r3, #10]
 8016fee:	f107 0314 	add.w	r3, r7, #20
 8016ff2:	220e      	movs	r2, #14
 8016ff4:	72da      	strb	r2, [r3, #11]
 8016ff6:	f107 0314 	add.w	r3, r7, #20
 8016ffa:	227c      	movs	r2, #124	; 0x7c
 8016ffc:	731a      	strb	r2, [r3, #12]
 8016ffe:	f107 0314 	add.w	r3, r7, #20
 8017002:	2215      	movs	r2, #21
 8017004:	735a      	strb	r2, [r3, #13]
 8017006:	f107 0314 	add.w	r3, r7, #20
 801700a:	2226      	movs	r2, #38	; 0x26
 801700c:	739a      	strb	r2, [r3, #14]
 801700e:	f107 0314 	add.w	r3, r7, #20
 8017012:	2216      	movs	r2, #22
 8017014:	73da      	strb	r2, [r3, #15]
 8017016:	f107 0314 	add.w	r3, r7, #20
 801701a:	222b      	movs	r2, #43	; 0x2b
 801701c:	741a      	strb	r2, [r3, #16]
 801701e:	f107 0314 	add.w	r3, r7, #20
 8017022:	221f      	movs	r2, #31
 8017024:	745a      	strb	r2, [r3, #17]
 8017026:	f107 0314 	add.w	r3, r7, #20
 801702a:	222d      	movs	r2, #45	; 0x2d
 801702c:	749a      	strb	r2, [r3, #18]
 801702e:	f107 0314 	add.w	r3, r7, #20
 8017032:	2220      	movs	r2, #32
 8017034:	74da      	strb	r2, [r3, #19]
 8017036:	f107 0314 	add.w	r3, r7, #20
 801703a:	222a      	movs	r2, #42	; 0x2a
 801703c:	751a      	strb	r2, [r3, #20]
 801703e:	f107 0314 	add.w	r3, r7, #20
 8017042:	2221      	movs	r2, #33	; 0x21
 8017044:	755a      	strb	r2, [r3, #21]
 8017046:	f107 0314 	add.w	r3, r7, #20
 801704a:	222f      	movs	r2, #47	; 0x2f
 801704c:	759a      	strb	r2, [r3, #22]
 801704e:	f107 0314 	add.w	r3, r7, #20
 8017052:	2222      	movs	r2, #34	; 0x22
 8017054:	75da      	strb	r2, [r3, #23]
 8017056:	f107 0314 	add.w	r3, r7, #20
 801705a:	225e      	movs	r2, #94	; 0x5e
 801705c:	761a      	strb	r2, [r3, #24]
 801705e:	f107 0314 	add.w	r3, r7, #20
 8017062:	2223      	movs	r2, #35	; 0x23
 8017064:	765a      	strb	r2, [r3, #25]
 8017066:	f107 0314 	add.w	r3, r7, #20
 801706a:	2225      	movs	r2, #37	; 0x25
 801706c:	769a      	strb	r2, [r3, #26]
 801706e:	f107 0314 	add.w	r3, r7, #20
 8017072:	2224      	movs	r2, #36	; 0x24
 8017074:	76da      	strb	r2, [r3, #27]
 8017076:	f107 0314 	add.w	r3, r7, #20
 801707a:	2228      	movs	r2, #40	; 0x28
 801707c:	771a      	strb	r2, [r3, #28]
 801707e:	f107 0314 	add.w	r3, r7, #20
 8017082:	2226      	movs	r2, #38	; 0x26
 8017084:	775a      	strb	r2, [r3, #29]
 8017086:	f107 0314 	add.w	r3, r7, #20
 801708a:	2229      	movs	r2, #41	; 0x29
 801708c:	779a      	strb	r2, [r3, #30]
 801708e:	f107 0314 	add.w	r3, r7, #20
 8017092:	2227      	movs	r2, #39	; 0x27
 8017094:	77da      	strb	r2, [r3, #31]
 8017096:	f107 0314 	add.w	r3, r7, #20
 801709a:	2225      	movs	r2, #37	; 0x25
 801709c:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80170a0:	f107 030c 	add.w	r3, r7, #12
 80170a4:	f107 0214 	add.w	r2, r7, #20
 80170a8:	601a      	str	r2, [r3, #0]
 80170aa:	f107 030c 	add.w	r3, r7, #12
 80170ae:	2211      	movs	r2, #17
 80170b0:	605a      	str	r2, [r3, #4]
 80170b2:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80170b6:	4618      	mov	r0, r3
 80170b8:	f7ea f914 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 80170bc:	f107 0138 	add.w	r1, r7, #56	; 0x38
 80170c0:	f107 020c 	add.w	r2, r7, #12
 80170c4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80170c8:	9300      	str	r3, [sp, #0]
 80170ca:	460b      	mov	r3, r1
 80170cc:	ca06      	ldmia	r2, {r1, r2}
 80170ce:	4885      	ldr	r0, [pc, #532]	; (80172e4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80170d0:	f7ea f920 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80170d4:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 80170d8:	4618      	mov	r0, r3
 80170da:	f7ea f90f 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 80170de:	2305      	movs	r3, #5
 80170e0:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 80170e4:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 80170e8:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80170ec:	497e      	ldr	r1, [pc, #504]	; (80172e8 <_Z41__static_initialization_and_destruction_0ii+0x388>)
 80170ee:	4618      	mov	r0, r3
 80170f0:	f7e9 fffc 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 80170f4:	2306      	movs	r3, #6
 80170f6:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 80170fa:	f207 1263 	addw	r2, r7, #355	; 0x163
 80170fe:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017102:	331c      	adds	r3, #28
 8017104:	4979      	ldr	r1, [pc, #484]	; (80172ec <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 8017106:	4618      	mov	r0, r3
 8017108:	f7ea f818 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801710c:	2307      	movs	r3, #7
 801710e:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 8017112:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 8017116:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801711a:	3338      	adds	r3, #56	; 0x38
 801711c:	4974      	ldr	r1, [pc, #464]	; (80172f0 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801711e:	4618      	mov	r0, r3
 8017120:	f7ea f80c 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 8017124:	2308      	movs	r3, #8
 8017126:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801712a:	f207 1265 	addw	r2, r7, #357	; 0x165
 801712e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017132:	3354      	adds	r3, #84	; 0x54
 8017134:	496f      	ldr	r1, [pc, #444]	; (80172f4 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 8017136:	4618      	mov	r0, r3
 8017138:	f7e9 ffd8 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801713c:	2309      	movs	r3, #9
 801713e:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 8017142:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 8017146:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801714a:	3370      	adds	r3, #112	; 0x70
 801714c:	496a      	ldr	r1, [pc, #424]	; (80172f8 <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801714e:	4618      	mov	r0, r3
 8017150:	f7ea f81c 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 8017154:	2310      	movs	r3, #16
 8017156:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801715a:	f207 1267 	addw	r2, r7, #359	; 0x167
 801715e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017162:	338c      	adds	r3, #140	; 0x8c
 8017164:	4965      	ldr	r1, [pc, #404]	; (80172fc <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 8017166:	4618      	mov	r0, r3
 8017168:	f7ea f838 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801716c:	2311      	movs	r3, #17
 801716e:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 8017172:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 8017176:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801717a:	33a8      	adds	r3, #168	; 0xa8
 801717c:	4960      	ldr	r1, [pc, #384]	; (8017300 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801717e:	4618      	mov	r0, r3
 8017180:	f7ea f804 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 8017184:	2312      	movs	r3, #18
 8017186:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801718a:	f207 1269 	addw	r2, r7, #361	; 0x169
 801718e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017192:	33c4      	adds	r3, #196	; 0xc4
 8017194:	495b      	ldr	r1, [pc, #364]	; (8017304 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 8017196:	4618      	mov	r0, r3
 8017198:	f7e9 ffa8 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801719c:	2313      	movs	r3, #19
 801719e:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 80171a2:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 80171a6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80171aa:	33e0      	adds	r3, #224	; 0xe0
 80171ac:	4956      	ldr	r1, [pc, #344]	; (8017308 <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 80171ae:	4618      	mov	r0, r3
 80171b0:	f7e9 ffc4 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 80171b4:	2314      	movs	r3, #20
 80171b6:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 80171ba:	f207 126b 	addw	r2, r7, #363	; 0x16b
 80171be:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80171c2:	33fc      	adds	r3, #252	; 0xfc
 80171c4:	4951      	ldr	r1, [pc, #324]	; (801730c <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 80171c6:	4618      	mov	r0, r3
 80171c8:	f7ea f830 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 80171cc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80171d0:	f107 0248 	add.w	r2, r7, #72	; 0x48
 80171d4:	601a      	str	r2, [r3, #0]
 80171d6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80171da:	220a      	movs	r2, #10
 80171dc:	605a      	str	r2, [r3, #4]
 80171de:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80171e2:	4618      	mov	r0, r3
 80171e4:	f7ea f923 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 80171e8:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 80171ec:	f107 0240 	add.w	r2, r7, #64	; 0x40
 80171f0:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 80171f4:	9300      	str	r3, [sp, #0]
 80171f6:	460b      	mov	r3, r1
 80171f8:	ca06      	ldmia	r2, {r1, r2}
 80171fa:	4845      	ldr	r0, [pc, #276]	; (8017310 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80171fc:	f7ea f92f 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 8017200:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 8017204:	4618      	mov	r0, r3
 8017206:	f7ea f91e 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801720a:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801720e:	f504 748c 	add.w	r4, r4, #280	; 0x118
 8017212:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017216:	429c      	cmp	r4, r3
 8017218:	d004      	beq.n	8017224 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801721a:	3c1c      	subs	r4, #28
 801721c:	4620      	mov	r0, r4
 801721e:	f7e9 ff58 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 8017222:	e7f6      	b.n	8017212 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 8017224:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 8017228:	2200      	movs	r2, #0
 801722a:	601a      	str	r2, [r3, #0]
 801722c:	605a      	str	r2, [r3, #4]
 801722e:	609a      	str	r2, [r3, #8]
 8017230:	233c      	movs	r3, #60	; 0x3c
 8017232:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 8017236:	231b      	movs	r3, #27
 8017238:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801723c:	231c      	movs	r3, #28
 801723e:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 8017242:	233e      	movs	r3, #62	; 0x3e
 8017244:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 8017248:	2319      	movs	r3, #25
 801724a:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801724e:	231a      	movs	r3, #26
 8017250:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 8017254:	233d      	movs	r3, #61	; 0x3d
 8017256:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801725a:	2318      	movs	r3, #24
 801725c:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 8017260:	231d      	movs	r3, #29
 8017262:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 8017266:	2321      	movs	r3, #33	; 0x21
 8017268:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801726c:	2317      	movs	r3, #23
 801726e:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 8017272:	231e      	movs	r3, #30
 8017274:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 8017278:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801727c:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 8017280:	2304      	movs	r3, #4
 8017282:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 8017286:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801728a:	4618      	mov	r0, r3
 801728c:	f7ea f917 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 8017290:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 8017294:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 8017298:	9300      	str	r3, [sp, #0]
 801729a:	4613      	mov	r3, r2
 801729c:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 80172a0:	ca06      	ldmia	r2, {r1, r2}
 80172a2:	481c      	ldr	r0, [pc, #112]	; (8017314 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80172a4:	f7ea f923 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 80172a8:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 80172ac:	4618      	mov	r0, r3
 80172ae:	f7ea f912 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 80172b2:	1d3b      	adds	r3, r7, #4
 80172b4:	681b      	ldr	r3, [r3, #0]
 80172b6:	2b00      	cmp	r3, #0
 80172b8:	d10e      	bne.n	80172d8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80172ba:	463b      	mov	r3, r7
 80172bc:	681b      	ldr	r3, [r3, #0]
 80172be:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80172c2:	4293      	cmp	r3, r2
 80172c4:	d108      	bne.n	80172d8 <_Z41__static_initialization_and_destruction_0ii+0x378>
 80172c6:	4813      	ldr	r0, [pc, #76]	; (8017314 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 80172c8:	f7ec fd6a 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 80172cc:	4810      	ldr	r0, [pc, #64]	; (8017310 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 80172ce:	f7ec fd74 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 80172d2:	4804      	ldr	r0, [pc, #16]	; (80172e4 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 80172d4:	f7ec fd7e 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 80172d8:	bf00      	nop
 80172da:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 80172de:	46bd      	mov	sp, r7
 80172e0:	bd90      	pop	{r4, r7, pc}
 80172e2:	bf00      	nop
 80172e4:	200005fc 	.word	0x200005fc
 80172e8:	080250b4 	.word	0x080250b4
 80172ec:	080250bc 	.word	0x080250bc
 80172f0:	080250c4 	.word	0x080250c4
 80172f4:	080250cc 	.word	0x080250cc
 80172f8:	080250d4 	.word	0x080250d4
 80172fc:	080250dc 	.word	0x080250dc
 8017300:	080250e0 	.word	0x080250e0
 8017304:	080250e8 	.word	0x080250e8
 8017308:	080250f0 	.word	0x080250f0
 801730c:	080250f8 	.word	0x080250f8
 8017310:	20000614 	.word	0x20000614
 8017314:	2000062c 	.word	0x2000062c

08017318 <_GLOBAL__sub_I__Z11my_main_runP20__UART_HandleTypeDef>:
 8017318:	b580      	push	{r7, lr}
 801731a:	af00      	add	r7, sp, #0
 801731c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8017320:	2001      	movs	r0, #1
 8017322:	f7ff fe1d 	bl	8016f60 <_Z41__static_initialization_and_destruction_0ii>
 8017326:	bd80      	pop	{r7, pc}

08017328 <_GLOBAL__sub_D__Z11my_main_runP20__UART_HandleTypeDef>:
 8017328:	b580      	push	{r7, lr}
 801732a:	af00      	add	r7, sp, #0
 801732c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8017330:	2000      	movs	r0, #0
 8017332:	f7ff fe15 	bl	8016f60 <_Z41__static_initialization_and_destruction_0ii>
 8017336:	bd80      	pop	{r7, pc}

08017338 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8017338:	b480      	push	{r7}
 801733a:	b083      	sub	sp, #12
 801733c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 801733e:	4b0f      	ldr	r3, [pc, #60]	; (801737c <HAL_MspInit+0x44>)
 8017340:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017342:	4a0e      	ldr	r2, [pc, #56]	; (801737c <HAL_MspInit+0x44>)
 8017344:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8017348:	6413      	str	r3, [r2, #64]	; 0x40
 801734a:	4b0c      	ldr	r3, [pc, #48]	; (801737c <HAL_MspInit+0x44>)
 801734c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801734e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8017352:	607b      	str	r3, [r7, #4]
 8017354:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8017356:	4b09      	ldr	r3, [pc, #36]	; (801737c <HAL_MspInit+0x44>)
 8017358:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801735a:	4a08      	ldr	r2, [pc, #32]	; (801737c <HAL_MspInit+0x44>)
 801735c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8017360:	6453      	str	r3, [r2, #68]	; 0x44
 8017362:	4b06      	ldr	r3, [pc, #24]	; (801737c <HAL_MspInit+0x44>)
 8017364:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017366:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801736a:	603b      	str	r3, [r7, #0]
 801736c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 801736e:	bf00      	nop
 8017370:	370c      	adds	r7, #12
 8017372:	46bd      	mov	sp, r7
 8017374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017378:	4770      	bx	lr
 801737a:	bf00      	nop
 801737c:	40023800 	.word	0x40023800

08017380 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8017380:	b580      	push	{r7, lr}
 8017382:	b08a      	sub	sp, #40	; 0x28
 8017384:	af00      	add	r7, sp, #0
 8017386:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8017388:	f107 0314 	add.w	r3, r7, #20
 801738c:	2200      	movs	r2, #0
 801738e:	601a      	str	r2, [r3, #0]
 8017390:	605a      	str	r2, [r3, #4]
 8017392:	609a      	str	r2, [r3, #8]
 8017394:	60da      	str	r2, [r3, #12]
 8017396:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 8017398:	687b      	ldr	r3, [r7, #4]
 801739a:	681b      	ldr	r3, [r3, #0]
 801739c:	4a1b      	ldr	r2, [pc, #108]	; (801740c <HAL_UART_MspInit+0x8c>)
 801739e:	4293      	cmp	r3, r2
 80173a0:	d130      	bne.n	8017404 <HAL_UART_MspInit+0x84>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80173a2:	4b1b      	ldr	r3, [pc, #108]	; (8017410 <HAL_UART_MspInit+0x90>)
 80173a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80173a6:	4a1a      	ldr	r2, [pc, #104]	; (8017410 <HAL_UART_MspInit+0x90>)
 80173a8:	f043 0310 	orr.w	r3, r3, #16
 80173ac:	6453      	str	r3, [r2, #68]	; 0x44
 80173ae:	4b18      	ldr	r3, [pc, #96]	; (8017410 <HAL_UART_MspInit+0x90>)
 80173b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80173b2:	f003 0310 	and.w	r3, r3, #16
 80173b6:	613b      	str	r3, [r7, #16]
 80173b8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80173ba:	4b15      	ldr	r3, [pc, #84]	; (8017410 <HAL_UART_MspInit+0x90>)
 80173bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80173be:	4a14      	ldr	r2, [pc, #80]	; (8017410 <HAL_UART_MspInit+0x90>)
 80173c0:	f043 0301 	orr.w	r3, r3, #1
 80173c4:	6313      	str	r3, [r2, #48]	; 0x30
 80173c6:	4b12      	ldr	r3, [pc, #72]	; (8017410 <HAL_UART_MspInit+0x90>)
 80173c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80173ca:	f003 0301 	and.w	r3, r3, #1
 80173ce:	60fb      	str	r3, [r7, #12]
 80173d0:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80173d2:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80173d6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80173d8:	2302      	movs	r3, #2
 80173da:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80173dc:	2300      	movs	r3, #0
 80173de:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80173e0:	2303      	movs	r3, #3
 80173e2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80173e4:	2307      	movs	r3, #7
 80173e6:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80173e8:	f107 0314 	add.w	r3, r7, #20
 80173ec:	4619      	mov	r1, r3
 80173ee:	4809      	ldr	r0, [pc, #36]	; (8017414 <HAL_UART_MspInit+0x94>)
 80173f0:	f006 fcc2 	bl	801dd78 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80173f4:	2200      	movs	r2, #0
 80173f6:	2100      	movs	r1, #0
 80173f8:	2025      	movs	r0, #37	; 0x25
 80173fa:	f006 fbf4 	bl	801dbe6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80173fe:	2025      	movs	r0, #37	; 0x25
 8017400:	f006 fc0d 	bl	801dc1e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8017404:	bf00      	nop
 8017406:	3728      	adds	r7, #40	; 0x28
 8017408:	46bd      	mov	sp, r7
 801740a:	bd80      	pop	{r7, pc}
 801740c:	40011000 	.word	0x40011000
 8017410:	40023800 	.word	0x40023800
 8017414:	40020000 	.word	0x40020000

08017418 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8017418:	b480      	push	{r7}
 801741a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 801741c:	e7fe      	b.n	801741c <NMI_Handler+0x4>

0801741e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 801741e:	b480      	push	{r7}
 8017420:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8017422:	e7fe      	b.n	8017422 <HardFault_Handler+0x4>

08017424 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8017424:	b480      	push	{r7}
 8017426:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8017428:	e7fe      	b.n	8017428 <MemManage_Handler+0x4>

0801742a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 801742a:	b480      	push	{r7}
 801742c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 801742e:	e7fe      	b.n	801742e <BusFault_Handler+0x4>

08017430 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8017430:	b480      	push	{r7}
 8017432:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8017434:	e7fe      	b.n	8017434 <UsageFault_Handler+0x4>

08017436 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8017436:	b480      	push	{r7}
 8017438:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 801743a:	bf00      	nop
 801743c:	46bd      	mov	sp, r7
 801743e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017442:	4770      	bx	lr

08017444 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8017444:	b480      	push	{r7}
 8017446:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8017448:	bf00      	nop
 801744a:	46bd      	mov	sp, r7
 801744c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017450:	4770      	bx	lr

08017452 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8017452:	b480      	push	{r7}
 8017454:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8017456:	bf00      	nop
 8017458:	46bd      	mov	sp, r7
 801745a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801745e:	4770      	bx	lr

08017460 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8017460:	b580      	push	{r7, lr}
 8017462:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8017464:	f006 faa0 	bl	801d9a8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8017468:	bf00      	nop
 801746a:	bd80      	pop	{r7, pc}

0801746c <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 801746c:	b580      	push	{r7, lr}
 801746e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8017470:	4802      	ldr	r0, [pc, #8]	; (801747c <USART1_IRQHandler+0x10>)
 8017472:	f008 f899 	bl	801f5a8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8017476:	bf00      	nop
 8017478:	bd80      	pop	{r7, pc}
 801747a:	bf00      	nop
 801747c:	20000578 	.word	0x20000578

08017480 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8017480:	b480      	push	{r7}
 8017482:	af00      	add	r7, sp, #0
	return 1;
 8017484:	2301      	movs	r3, #1
}
 8017486:	4618      	mov	r0, r3
 8017488:	46bd      	mov	sp, r7
 801748a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801748e:	4770      	bx	lr

08017490 <_kill>:

int _kill(int pid, int sig)
{
 8017490:	b580      	push	{r7, lr}
 8017492:	b082      	sub	sp, #8
 8017494:	af00      	add	r7, sp, #0
 8017496:	6078      	str	r0, [r7, #4]
 8017498:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 801749a:	f00a f995 	bl	80217c8 <__errno>
 801749e:	4603      	mov	r3, r0
 80174a0:	2216      	movs	r2, #22
 80174a2:	601a      	str	r2, [r3, #0]
	return -1;
 80174a4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80174a8:	4618      	mov	r0, r3
 80174aa:	3708      	adds	r7, #8
 80174ac:	46bd      	mov	sp, r7
 80174ae:	bd80      	pop	{r7, pc}

080174b0 <_exit>:

void _exit (int status)
{
 80174b0:	b580      	push	{r7, lr}
 80174b2:	b082      	sub	sp, #8
 80174b4:	af00      	add	r7, sp, #0
 80174b6:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80174b8:	f04f 31ff 	mov.w	r1, #4294967295
 80174bc:	6878      	ldr	r0, [r7, #4]
 80174be:	f7ff ffe7 	bl	8017490 <_kill>
	while (1) {}		/* Make sure we hang here */
 80174c2:	e7fe      	b.n	80174c2 <_exit+0x12>

080174c4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80174c4:	b580      	push	{r7, lr}
 80174c6:	b086      	sub	sp, #24
 80174c8:	af00      	add	r7, sp, #0
 80174ca:	60f8      	str	r0, [r7, #12]
 80174cc:	60b9      	str	r1, [r7, #8]
 80174ce:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80174d0:	2300      	movs	r3, #0
 80174d2:	617b      	str	r3, [r7, #20]
 80174d4:	e00a      	b.n	80174ec <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80174d6:	f3af 8000 	nop.w
 80174da:	4601      	mov	r1, r0
 80174dc:	68bb      	ldr	r3, [r7, #8]
 80174de:	1c5a      	adds	r2, r3, #1
 80174e0:	60ba      	str	r2, [r7, #8]
 80174e2:	b2ca      	uxtb	r2, r1
 80174e4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80174e6:	697b      	ldr	r3, [r7, #20]
 80174e8:	3301      	adds	r3, #1
 80174ea:	617b      	str	r3, [r7, #20]
 80174ec:	697a      	ldr	r2, [r7, #20]
 80174ee:	687b      	ldr	r3, [r7, #4]
 80174f0:	429a      	cmp	r2, r3
 80174f2:	dbf0      	blt.n	80174d6 <_read+0x12>
	}

return len;
 80174f4:	687b      	ldr	r3, [r7, #4]
}
 80174f6:	4618      	mov	r0, r3
 80174f8:	3718      	adds	r7, #24
 80174fa:	46bd      	mov	sp, r7
 80174fc:	bd80      	pop	{r7, pc}

080174fe <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80174fe:	b580      	push	{r7, lr}
 8017500:	b086      	sub	sp, #24
 8017502:	af00      	add	r7, sp, #0
 8017504:	60f8      	str	r0, [r7, #12]
 8017506:	60b9      	str	r1, [r7, #8]
 8017508:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801750a:	2300      	movs	r3, #0
 801750c:	617b      	str	r3, [r7, #20]
 801750e:	e009      	b.n	8017524 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8017510:	68bb      	ldr	r3, [r7, #8]
 8017512:	1c5a      	adds	r2, r3, #1
 8017514:	60ba      	str	r2, [r7, #8]
 8017516:	781b      	ldrb	r3, [r3, #0]
 8017518:	4618      	mov	r0, r3
 801751a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 801751e:	697b      	ldr	r3, [r7, #20]
 8017520:	3301      	adds	r3, #1
 8017522:	617b      	str	r3, [r7, #20]
 8017524:	697a      	ldr	r2, [r7, #20]
 8017526:	687b      	ldr	r3, [r7, #4]
 8017528:	429a      	cmp	r2, r3
 801752a:	dbf1      	blt.n	8017510 <_write+0x12>
	}
	return len;
 801752c:	687b      	ldr	r3, [r7, #4]
}
 801752e:	4618      	mov	r0, r3
 8017530:	3718      	adds	r7, #24
 8017532:	46bd      	mov	sp, r7
 8017534:	bd80      	pop	{r7, pc}

08017536 <_close>:

int _close(int file)
{
 8017536:	b480      	push	{r7}
 8017538:	b083      	sub	sp, #12
 801753a:	af00      	add	r7, sp, #0
 801753c:	6078      	str	r0, [r7, #4]
	return -1;
 801753e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8017542:	4618      	mov	r0, r3
 8017544:	370c      	adds	r7, #12
 8017546:	46bd      	mov	sp, r7
 8017548:	f85d 7b04 	ldr.w	r7, [sp], #4
 801754c:	4770      	bx	lr

0801754e <_fstat>:


int _fstat(int file, struct stat *st)
{
 801754e:	b480      	push	{r7}
 8017550:	b083      	sub	sp, #12
 8017552:	af00      	add	r7, sp, #0
 8017554:	6078      	str	r0, [r7, #4]
 8017556:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8017558:	683b      	ldr	r3, [r7, #0]
 801755a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801755e:	605a      	str	r2, [r3, #4]
	return 0;
 8017560:	2300      	movs	r3, #0
}
 8017562:	4618      	mov	r0, r3
 8017564:	370c      	adds	r7, #12
 8017566:	46bd      	mov	sp, r7
 8017568:	f85d 7b04 	ldr.w	r7, [sp], #4
 801756c:	4770      	bx	lr

0801756e <_isatty>:

int _isatty(int file)
{
 801756e:	b480      	push	{r7}
 8017570:	b083      	sub	sp, #12
 8017572:	af00      	add	r7, sp, #0
 8017574:	6078      	str	r0, [r7, #4]
	return 1;
 8017576:	2301      	movs	r3, #1
}
 8017578:	4618      	mov	r0, r3
 801757a:	370c      	adds	r7, #12
 801757c:	46bd      	mov	sp, r7
 801757e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017582:	4770      	bx	lr

08017584 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8017584:	b480      	push	{r7}
 8017586:	b085      	sub	sp, #20
 8017588:	af00      	add	r7, sp, #0
 801758a:	60f8      	str	r0, [r7, #12]
 801758c:	60b9      	str	r1, [r7, #8]
 801758e:	607a      	str	r2, [r7, #4]
	return 0;
 8017590:	2300      	movs	r3, #0
}
 8017592:	4618      	mov	r0, r3
 8017594:	3714      	adds	r7, #20
 8017596:	46bd      	mov	sp, r7
 8017598:	f85d 7b04 	ldr.w	r7, [sp], #4
 801759c:	4770      	bx	lr
	...

080175a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80175a0:	b580      	push	{r7, lr}
 80175a2:	b086      	sub	sp, #24
 80175a4:	af00      	add	r7, sp, #0
 80175a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80175a8:	4a14      	ldr	r2, [pc, #80]	; (80175fc <_sbrk+0x5c>)
 80175aa:	4b15      	ldr	r3, [pc, #84]	; (8017600 <_sbrk+0x60>)
 80175ac:	1ad3      	subs	r3, r2, r3
 80175ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80175b0:	697b      	ldr	r3, [r7, #20]
 80175b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80175b4:	4b13      	ldr	r3, [pc, #76]	; (8017604 <_sbrk+0x64>)
 80175b6:	681b      	ldr	r3, [r3, #0]
 80175b8:	2b00      	cmp	r3, #0
 80175ba:	d102      	bne.n	80175c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80175bc:	4b11      	ldr	r3, [pc, #68]	; (8017604 <_sbrk+0x64>)
 80175be:	4a12      	ldr	r2, [pc, #72]	; (8017608 <_sbrk+0x68>)
 80175c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80175c2:	4b10      	ldr	r3, [pc, #64]	; (8017604 <_sbrk+0x64>)
 80175c4:	681a      	ldr	r2, [r3, #0]
 80175c6:	687b      	ldr	r3, [r7, #4]
 80175c8:	4413      	add	r3, r2
 80175ca:	693a      	ldr	r2, [r7, #16]
 80175cc:	429a      	cmp	r2, r3
 80175ce:	d207      	bcs.n	80175e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80175d0:	f00a f8fa 	bl	80217c8 <__errno>
 80175d4:	4603      	mov	r3, r0
 80175d6:	220c      	movs	r2, #12
 80175d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80175da:	f04f 33ff 	mov.w	r3, #4294967295
 80175de:	e009      	b.n	80175f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80175e0:	4b08      	ldr	r3, [pc, #32]	; (8017604 <_sbrk+0x64>)
 80175e2:	681b      	ldr	r3, [r3, #0]
 80175e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80175e6:	4b07      	ldr	r3, [pc, #28]	; (8017604 <_sbrk+0x64>)
 80175e8:	681a      	ldr	r2, [r3, #0]
 80175ea:	687b      	ldr	r3, [r7, #4]
 80175ec:	4413      	add	r3, r2
 80175ee:	4a05      	ldr	r2, [pc, #20]	; (8017604 <_sbrk+0x64>)
 80175f0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80175f2:	68fb      	ldr	r3, [r7, #12]
}
 80175f4:	4618      	mov	r0, r3
 80175f6:	3718      	adds	r7, #24
 80175f8:	46bd      	mov	sp, r7
 80175fa:	bd80      	pop	{r7, pc}
 80175fc:	20050000 	.word	0x20050000
 8017600:	00000400 	.word	0x00000400
 8017604:	20000644 	.word	0x20000644
 8017608:	20000740 	.word	0x20000740

0801760c <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 801760c:	b480      	push	{r7}
 801760e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8017610:	4b06      	ldr	r3, [pc, #24]	; (801762c <SystemInit+0x20>)
 8017612:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8017616:	4a05      	ldr	r2, [pc, #20]	; (801762c <SystemInit+0x20>)
 8017618:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801761c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8017620:	bf00      	nop
 8017622:	46bd      	mov	sp, r7
 8017624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017628:	4770      	bx	lr
 801762a:	bf00      	nop
 801762c:	e000ed00 	.word	0xe000ed00

08017630 <_ZNSt14_Bit_referenceC1EPmm>:
    _Bit_reference(_Bit_type * __x, _Bit_type __y)
 8017630:	b480      	push	{r7}
 8017632:	b085      	sub	sp, #20
 8017634:	af00      	add	r7, sp, #0
 8017636:	60f8      	str	r0, [r7, #12]
 8017638:	60b9      	str	r1, [r7, #8]
 801763a:	607a      	str	r2, [r7, #4]
    : _M_p(__x), _M_mask(__y) { }
 801763c:	68fb      	ldr	r3, [r7, #12]
 801763e:	68ba      	ldr	r2, [r7, #8]
 8017640:	601a      	str	r2, [r3, #0]
 8017642:	68fb      	ldr	r3, [r7, #12]
 8017644:	687a      	ldr	r2, [r7, #4]
 8017646:	605a      	str	r2, [r3, #4]
 8017648:	68fb      	ldr	r3, [r7, #12]
 801764a:	4618      	mov	r0, r3
 801764c:	3714      	adds	r7, #20
 801764e:	46bd      	mov	sp, r7
 8017650:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017654:	4770      	bx	lr

08017656 <_ZNKSt14_Bit_referencecvbEv>:
    operator bool() const _GLIBCXX_NOEXCEPT
 8017656:	b480      	push	{r7}
 8017658:	b083      	sub	sp, #12
 801765a:	af00      	add	r7, sp, #0
 801765c:	6078      	str	r0, [r7, #4]
    { return !!(*_M_p & _M_mask); }
 801765e:	687b      	ldr	r3, [r7, #4]
 8017660:	681b      	ldr	r3, [r3, #0]
 8017662:	681a      	ldr	r2, [r3, #0]
 8017664:	687b      	ldr	r3, [r7, #4]
 8017666:	685b      	ldr	r3, [r3, #4]
 8017668:	4013      	ands	r3, r2
 801766a:	2b00      	cmp	r3, #0
 801766c:	bf14      	ite	ne
 801766e:	2301      	movne	r3, #1
 8017670:	2300      	moveq	r3, #0
 8017672:	b2db      	uxtb	r3, r3
 8017674:	4618      	mov	r0, r3
 8017676:	370c      	adds	r7, #12
 8017678:	46bd      	mov	sp, r7
 801767a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801767e:	4770      	bx	lr

08017680 <_ZNSt14_Bit_referenceaSEb>:
    operator=(bool __x) _GLIBCXX_NOEXCEPT
 8017680:	b480      	push	{r7}
 8017682:	b083      	sub	sp, #12
 8017684:	af00      	add	r7, sp, #0
 8017686:	6078      	str	r0, [r7, #4]
 8017688:	460b      	mov	r3, r1
 801768a:	70fb      	strb	r3, [r7, #3]
      if (__x)
 801768c:	78fb      	ldrb	r3, [r7, #3]
 801768e:	2b00      	cmp	r3, #0
 8017690:	d009      	beq.n	80176a6 <_ZNSt14_Bit_referenceaSEb+0x26>
	*_M_p |= _M_mask;
 8017692:	687b      	ldr	r3, [r7, #4]
 8017694:	681b      	ldr	r3, [r3, #0]
 8017696:	6819      	ldr	r1, [r3, #0]
 8017698:	687b      	ldr	r3, [r7, #4]
 801769a:	685a      	ldr	r2, [r3, #4]
 801769c:	687b      	ldr	r3, [r7, #4]
 801769e:	681b      	ldr	r3, [r3, #0]
 80176a0:	430a      	orrs	r2, r1
 80176a2:	601a      	str	r2, [r3, #0]
 80176a4:	e009      	b.n	80176ba <_ZNSt14_Bit_referenceaSEb+0x3a>
	*_M_p &= ~_M_mask;
 80176a6:	687b      	ldr	r3, [r7, #4]
 80176a8:	681b      	ldr	r3, [r3, #0]
 80176aa:	6819      	ldr	r1, [r3, #0]
 80176ac:	687b      	ldr	r3, [r7, #4]
 80176ae:	685b      	ldr	r3, [r3, #4]
 80176b0:	43da      	mvns	r2, r3
 80176b2:	687b      	ldr	r3, [r7, #4]
 80176b4:	681b      	ldr	r3, [r3, #0]
 80176b6:	400a      	ands	r2, r1
 80176b8:	601a      	str	r2, [r3, #0]
      return *this;
 80176ba:	687b      	ldr	r3, [r7, #4]
    }
 80176bc:	4618      	mov	r0, r3
 80176be:	370c      	adds	r7, #12
 80176c0:	46bd      	mov	sp, r7
 80176c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80176c6:	4770      	bx	lr

080176c8 <_ZNSt18_Bit_iterator_base10_M_bump_upEv>:
    _M_bump_up()
 80176c8:	b480      	push	{r7}
 80176ca:	b083      	sub	sp, #12
 80176cc:	af00      	add	r7, sp, #0
 80176ce:	6078      	str	r0, [r7, #4]
      if (_M_offset++ == int(_S_word_bit) - 1)
 80176d0:	687b      	ldr	r3, [r7, #4]
 80176d2:	685b      	ldr	r3, [r3, #4]
 80176d4:	1c59      	adds	r1, r3, #1
 80176d6:	687a      	ldr	r2, [r7, #4]
 80176d8:	6051      	str	r1, [r2, #4]
 80176da:	2b1f      	cmp	r3, #31
 80176dc:	bf0c      	ite	eq
 80176de:	2301      	moveq	r3, #1
 80176e0:	2300      	movne	r3, #0
 80176e2:	b2db      	uxtb	r3, r3
 80176e4:	2b00      	cmp	r3, #0
 80176e6:	d007      	beq.n	80176f8 <_ZNSt18_Bit_iterator_base10_M_bump_upEv+0x30>
	  _M_offset = 0;
 80176e8:	687b      	ldr	r3, [r7, #4]
 80176ea:	2200      	movs	r2, #0
 80176ec:	605a      	str	r2, [r3, #4]
	  ++_M_p;
 80176ee:	687b      	ldr	r3, [r7, #4]
 80176f0:	681b      	ldr	r3, [r3, #0]
 80176f2:	1d1a      	adds	r2, r3, #4
 80176f4:	687b      	ldr	r3, [r7, #4]
 80176f6:	601a      	str	r2, [r3, #0]
    }
 80176f8:	bf00      	nop
 80176fa:	370c      	adds	r7, #12
 80176fc:	46bd      	mov	sp, r7
 80176fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017702:	4770      	bx	lr

08017704 <_ZNSt18_Bit_iterator_base7_M_incrEi>:
    _M_incr(ptrdiff_t __i)
 8017704:	b480      	push	{r7}
 8017706:	b085      	sub	sp, #20
 8017708:	af00      	add	r7, sp, #0
 801770a:	6078      	str	r0, [r7, #4]
 801770c:	6039      	str	r1, [r7, #0]
      difference_type __n = __i + _M_offset;
 801770e:	687b      	ldr	r3, [r7, #4]
 8017710:	685a      	ldr	r2, [r3, #4]
 8017712:	683b      	ldr	r3, [r7, #0]
 8017714:	4413      	add	r3, r2
 8017716:	60fb      	str	r3, [r7, #12]
      _M_p += __n / int(_S_word_bit);
 8017718:	687b      	ldr	r3, [r7, #4]
 801771a:	681a      	ldr	r2, [r3, #0]
 801771c:	68fb      	ldr	r3, [r7, #12]
 801771e:	2b00      	cmp	r3, #0
 8017720:	da00      	bge.n	8017724 <_ZNSt18_Bit_iterator_base7_M_incrEi+0x20>
 8017722:	331f      	adds	r3, #31
 8017724:	115b      	asrs	r3, r3, #5
 8017726:	009b      	lsls	r3, r3, #2
 8017728:	441a      	add	r2, r3
 801772a:	687b      	ldr	r3, [r7, #4]
 801772c:	601a      	str	r2, [r3, #0]
      __n = __n % int(_S_word_bit);
 801772e:	68fb      	ldr	r3, [r7, #12]
 8017730:	425a      	negs	r2, r3
 8017732:	f003 031f 	and.w	r3, r3, #31
 8017736:	f002 021f 	and.w	r2, r2, #31
 801773a:	bf58      	it	pl
 801773c:	4253      	negpl	r3, r2
 801773e:	60fb      	str	r3, [r7, #12]
      if (__n < 0)
 8017740:	68fb      	ldr	r3, [r7, #12]
 8017742:	2b00      	cmp	r3, #0
 8017744:	da07      	bge.n	8017756 <_ZNSt18_Bit_iterator_base7_M_incrEi+0x52>
	  __n += int(_S_word_bit);
 8017746:	68fb      	ldr	r3, [r7, #12]
 8017748:	3320      	adds	r3, #32
 801774a:	60fb      	str	r3, [r7, #12]
	  --_M_p;
 801774c:	687b      	ldr	r3, [r7, #4]
 801774e:	681b      	ldr	r3, [r3, #0]
 8017750:	1f1a      	subs	r2, r3, #4
 8017752:	687b      	ldr	r3, [r7, #4]
 8017754:	601a      	str	r2, [r3, #0]
      _M_offset = static_cast<unsigned int>(__n);
 8017756:	68fa      	ldr	r2, [r7, #12]
 8017758:	687b      	ldr	r3, [r7, #4]
 801775a:	605a      	str	r2, [r3, #4]
    }
 801775c:	bf00      	nop
 801775e:	3714      	adds	r7, #20
 8017760:	46bd      	mov	sp, r7
 8017762:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017766:	4770      	bx	lr

08017768 <_ZStmiRKSt18_Bit_iterator_baseS1_>:
  {
 8017768:	b480      	push	{r7}
 801776a:	b083      	sub	sp, #12
 801776c:	af00      	add	r7, sp, #0
 801776e:	6078      	str	r0, [r7, #4]
 8017770:	6039      	str	r1, [r7, #0]
    return (int(_S_word_bit) * (__x._M_p - __y._M_p)
 8017772:	687b      	ldr	r3, [r7, #4]
 8017774:	681a      	ldr	r2, [r3, #0]
 8017776:	683b      	ldr	r3, [r7, #0]
 8017778:	681b      	ldr	r3, [r3, #0]
 801777a:	1ad3      	subs	r3, r2, r3
 801777c:	00db      	lsls	r3, r3, #3
 801777e:	461a      	mov	r2, r3
	    + __x._M_offset - __y._M_offset);
 8017780:	687b      	ldr	r3, [r7, #4]
 8017782:	685b      	ldr	r3, [r3, #4]
 8017784:	441a      	add	r2, r3
 8017786:	683b      	ldr	r3, [r7, #0]
 8017788:	685b      	ldr	r3, [r3, #4]
 801778a:	1ad3      	subs	r3, r2, r3
  }
 801778c:	4618      	mov	r0, r3
 801778e:	370c      	adds	r7, #12
 8017790:	46bd      	mov	sp, r7
 8017792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017796:	4770      	bx	lr

08017798 <_ZNSt13_Bit_iteratorC1EPmj>:
    _Bit_iterator(_Bit_type * __x, unsigned int __y)
 8017798:	b580      	push	{r7, lr}
 801779a:	b084      	sub	sp, #16
 801779c:	af00      	add	r7, sp, #0
 801779e:	60f8      	str	r0, [r7, #12]
 80177a0:	60b9      	str	r1, [r7, #8]
 80177a2:	607a      	str	r2, [r7, #4]
    : _Bit_iterator_base(__x, __y) { }
 80177a4:	68fb      	ldr	r3, [r7, #12]
 80177a6:	687a      	ldr	r2, [r7, #4]
 80177a8:	68b9      	ldr	r1, [r7, #8]
 80177aa:	4618      	mov	r0, r3
 80177ac:	f7f8 f9e1 	bl	800fb72 <_ZNSt18_Bit_iterator_baseC1EPmj>
 80177b0:	68fb      	ldr	r3, [r7, #12]
 80177b2:	4618      	mov	r0, r3
 80177b4:	3710      	adds	r7, #16
 80177b6:	46bd      	mov	sp, r7
 80177b8:	bd80      	pop	{r7, pc}

080177ba <_ZNKSt13_Bit_iteratordeEv>:
    operator*() const
 80177ba:	b580      	push	{r7, lr}
 80177bc:	b082      	sub	sp, #8
 80177be:	af00      	add	r7, sp, #0
 80177c0:	6078      	str	r0, [r7, #4]
 80177c2:	6039      	str	r1, [r7, #0]
    { return reference(_M_p, 1UL << _M_offset); }
 80177c4:	683b      	ldr	r3, [r7, #0]
 80177c6:	6819      	ldr	r1, [r3, #0]
 80177c8:	683b      	ldr	r3, [r7, #0]
 80177ca:	685b      	ldr	r3, [r3, #4]
 80177cc:	2201      	movs	r2, #1
 80177ce:	fa02 f303 	lsl.w	r3, r2, r3
 80177d2:	461a      	mov	r2, r3
 80177d4:	6878      	ldr	r0, [r7, #4]
 80177d6:	f7ff ff2b 	bl	8017630 <_ZNSt14_Bit_referenceC1EPmm>
 80177da:	6878      	ldr	r0, [r7, #4]
 80177dc:	3708      	adds	r7, #8
 80177de:	46bd      	mov	sp, r7
 80177e0:	bd80      	pop	{r7, pc}

080177e2 <_ZNSt13_Bit_iteratorppEv>:
    operator++()
 80177e2:	b580      	push	{r7, lr}
 80177e4:	b082      	sub	sp, #8
 80177e6:	af00      	add	r7, sp, #0
 80177e8:	6078      	str	r0, [r7, #4]
      _M_bump_up();
 80177ea:	687b      	ldr	r3, [r7, #4]
 80177ec:	4618      	mov	r0, r3
 80177ee:	f7ff ff6b 	bl	80176c8 <_ZNSt18_Bit_iterator_base10_M_bump_upEv>
      return *this;
 80177f2:	687b      	ldr	r3, [r7, #4]
    }
 80177f4:	4618      	mov	r0, r3
 80177f6:	3708      	adds	r7, #8
 80177f8:	46bd      	mov	sp, r7
 80177fa:	bd80      	pop	{r7, pc}

080177fc <_ZNSt13_Bit_iteratorpLEi>:
    operator+=(difference_type __i)
 80177fc:	b580      	push	{r7, lr}
 80177fe:	b082      	sub	sp, #8
 8017800:	af00      	add	r7, sp, #0
 8017802:	6078      	str	r0, [r7, #4]
 8017804:	6039      	str	r1, [r7, #0]
      _M_incr(__i);
 8017806:	687b      	ldr	r3, [r7, #4]
 8017808:	6839      	ldr	r1, [r7, #0]
 801780a:	4618      	mov	r0, r3
 801780c:	f7ff ff7a 	bl	8017704 <_ZNSt18_Bit_iterator_base7_M_incrEi>
      return *this;
 8017810:	687b      	ldr	r3, [r7, #4]
    }
 8017812:	4618      	mov	r0, r3
 8017814:	3708      	adds	r7, #8
 8017816:	46bd      	mov	sp, r7
 8017818:	bd80      	pop	{r7, pc}

0801781a <_ZNKSt13_Bit_iteratorplEi>:
    operator+(difference_type __i) const
 801781a:	b580      	push	{r7, lr}
 801781c:	b086      	sub	sp, #24
 801781e:	af00      	add	r7, sp, #0
 8017820:	60f8      	str	r0, [r7, #12]
 8017822:	60b9      	str	r1, [r7, #8]
 8017824:	607a      	str	r2, [r7, #4]
      iterator __tmp = *this;
 8017826:	68ba      	ldr	r2, [r7, #8]
 8017828:	f107 0310 	add.w	r3, r7, #16
 801782c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8017830:	e883 0003 	stmia.w	r3, {r0, r1}
      return __tmp += __i;
 8017834:	f107 0310 	add.w	r3, r7, #16
 8017838:	6879      	ldr	r1, [r7, #4]
 801783a:	4618      	mov	r0, r3
 801783c:	f7ff ffde 	bl	80177fc <_ZNSt13_Bit_iteratorpLEi>
 8017840:	4602      	mov	r2, r0
 8017842:	68fb      	ldr	r3, [r7, #12]
 8017844:	e892 0003 	ldmia.w	r2, {r0, r1}
 8017848:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 801784c:	68f8      	ldr	r0, [r7, #12]
 801784e:	3718      	adds	r7, #24
 8017850:	46bd      	mov	sp, r7
 8017852:	bd80      	pop	{r7, pc}

08017854 <_ZNSt19_Bit_const_iteratorC1EPmj>:
    _Bit_const_iterator(_Bit_type * __x, unsigned int __y)
 8017854:	b580      	push	{r7, lr}
 8017856:	b084      	sub	sp, #16
 8017858:	af00      	add	r7, sp, #0
 801785a:	60f8      	str	r0, [r7, #12]
 801785c:	60b9      	str	r1, [r7, #8]
 801785e:	607a      	str	r2, [r7, #4]
    : _Bit_iterator_base(__x, __y) { }
 8017860:	68fb      	ldr	r3, [r7, #12]
 8017862:	687a      	ldr	r2, [r7, #4]
 8017864:	68b9      	ldr	r1, [r7, #8]
 8017866:	4618      	mov	r0, r3
 8017868:	f7f8 f983 	bl	800fb72 <_ZNSt18_Bit_iterator_baseC1EPmj>
 801786c:	68fb      	ldr	r3, [r7, #12]
 801786e:	4618      	mov	r0, r3
 8017870:	3710      	adds	r7, #16
 8017872:	46bd      	mov	sp, r7
 8017874:	bd80      	pop	{r7, pc}

08017876 <_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator>:
    _Bit_const_iterator(const _Bit_iterator& __x)
 8017876:	b580      	push	{r7, lr}
 8017878:	b082      	sub	sp, #8
 801787a:	af00      	add	r7, sp, #0
 801787c:	6078      	str	r0, [r7, #4]
 801787e:	6039      	str	r1, [r7, #0]
    : _Bit_iterator_base(__x._M_p, __x._M_offset) { }
 8017880:	6878      	ldr	r0, [r7, #4]
 8017882:	683b      	ldr	r3, [r7, #0]
 8017884:	6819      	ldr	r1, [r3, #0]
 8017886:	683b      	ldr	r3, [r7, #0]
 8017888:	685b      	ldr	r3, [r3, #4]
 801788a:	461a      	mov	r2, r3
 801788c:	f7f8 f971 	bl	800fb72 <_ZNSt18_Bit_iterator_baseC1EPmj>
 8017890:	687b      	ldr	r3, [r7, #4]
 8017892:	4618      	mov	r0, r3
 8017894:	3708      	adds	r7, #8
 8017896:	46bd      	mov	sp, r7
 8017898:	bd80      	pop	{r7, pc}

0801789a <_ZNKSt19_Bit_const_iteratordeEv>:
    operator*() const
 801789a:	b580      	push	{r7, lr}
 801789c:	b084      	sub	sp, #16
 801789e:	af00      	add	r7, sp, #0
 80178a0:	6078      	str	r0, [r7, #4]
    { return _Bit_reference(_M_p, 1UL << _M_offset); }
 80178a2:	687b      	ldr	r3, [r7, #4]
 80178a4:	6819      	ldr	r1, [r3, #0]
 80178a6:	687b      	ldr	r3, [r7, #4]
 80178a8:	685b      	ldr	r3, [r3, #4]
 80178aa:	2201      	movs	r2, #1
 80178ac:	409a      	lsls	r2, r3
 80178ae:	f107 0308 	add.w	r3, r7, #8
 80178b2:	4618      	mov	r0, r3
 80178b4:	f7ff febc 	bl	8017630 <_ZNSt14_Bit_referenceC1EPmm>
 80178b8:	f107 0308 	add.w	r3, r7, #8
 80178bc:	4618      	mov	r0, r3
 80178be:	f7ff feca 	bl	8017656 <_ZNKSt14_Bit_referencecvbEv>
 80178c2:	4603      	mov	r3, r0
 80178c4:	4618      	mov	r0, r3
 80178c6:	3710      	adds	r7, #16
 80178c8:	46bd      	mov	sp, r7
 80178ca:	bd80      	pop	{r7, pc}

080178cc <_ZNSt19_Bit_const_iteratorppEv>:
    operator++()
 80178cc:	b580      	push	{r7, lr}
 80178ce:	b082      	sub	sp, #8
 80178d0:	af00      	add	r7, sp, #0
 80178d2:	6078      	str	r0, [r7, #4]
      _M_bump_up();
 80178d4:	687b      	ldr	r3, [r7, #4]
 80178d6:	4618      	mov	r0, r3
 80178d8:	f7ff fef6 	bl	80176c8 <_ZNSt18_Bit_iterator_base10_M_bump_upEv>
      return *this;
 80178dc:	687b      	ldr	r3, [r7, #4]
    }
 80178de:	4618      	mov	r0, r3
 80178e0:	3708      	adds	r7, #8
 80178e2:	46bd      	mov	sp, r7
 80178e4:	bd80      	pop	{r7, pc}
	...

080178e8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE>:
namespace
{
using namespace std;

token_value run_single_experiment_iteration(arglist arguments = { })
{
 80178e8:	b590      	push	{r4, r7, lr}
 80178ea:	b0c9      	sub	sp, #292	; 0x124
 80178ec:	af00      	add	r7, sp, #0
 80178ee:	1d3b      	adds	r3, r7, #4
 80178f0:	6018      	str	r0, [r3, #0]
 80178f2:	463b      	mov	r3, r7
 80178f4:	6019      	str	r1, [r3, #0]
	int x = 5;
 80178f6:	2305      	movs	r3, #5
 80178f8:	63fb      	str	r3, [r7, #60]	; 0x3c

	if (arguments.size() > 0)
 80178fa:	463b      	mov	r3, r7
 80178fc:	6818      	ldr	r0, [r3, #0]
 80178fe:	f7f0 fb5d 	bl	8007fbc <_ZNKSt6vectorIP10ExpressionSaIS1_EE4sizeEv>
 8017902:	4603      	mov	r3, r0
 8017904:	2b00      	cmp	r3, #0
 8017906:	bf14      	ite	ne
 8017908:	2301      	movne	r3, #1
 801790a:	2300      	moveq	r3, #0
 801790c:	b2db      	uxtb	r3, r3
 801790e:	2b00      	cmp	r3, #0
 8017910:	d00b      	beq.n	801792a <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x42>
	{
		x = Expression_calculator::get_int(arguments[0]);
 8017912:	463b      	mov	r3, r7
 8017914:	2100      	movs	r1, #0
 8017916:	6818      	ldr	r0, [r3, #0]
 8017918:	f000 fa16 	bl	8017d48 <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>
 801791c:	4603      	mov	r3, r0
 801791e:	681b      	ldr	r3, [r3, #0]
 8017920:	4618      	mov	r0, r3
 8017922:	f7ee ff45 	bl	80067b0 <_ZN21Expression_calculator7get_intEP10Expression>
 8017926:	4603      	mov	r3, r0
 8017928:	63fb      	str	r3, [r7, #60]	; 0x3c
	}

	ARG(x) = 3;
 801792a:	2303      	movs	r3, #3
 801792c:	643b      	str	r3, [r7, #64]	; 0x40
 801792e:	f7f8 f96f 	bl	800fc10 <_ZN16Variable_handler12get_instanceEv>
 8017932:	4604      	mov	r4, r0
 8017934:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8017938:	4618      	mov	r0, r3
 801793a:	f008 fc76 	bl	802022a <_ZNSaIcEC1Ev>
 801793e:	f107 025c 	add.w	r2, r7, #92	; 0x5c
 8017942:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8017946:	499a      	ldr	r1, [pc, #616]	; (8017bb0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x2c8>)
 8017948:	4618      	mov	r0, r3
 801794a:	f7e9 fd1e 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801794e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8017952:	4619      	mov	r1, r3
 8017954:	4620      	mov	r0, r4
 8017956:	f7f8 f989 	bl	800fc6c <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801795a:	4602      	mov	r2, r0
 801795c:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8017960:	4619      	mov	r1, r3
 8017962:	4610      	mov	r0, r2
 8017964:	f000 fa00 	bl	8017d68 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESF_E4typeEE18is_constructible_vISM_SJ_E15is_assignable_vIRSM_SJ_EERSF_E4typeESK_>
 8017968:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801796c:	4618      	mov	r0, r3
 801796e:	f008 fe22 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017972:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8017976:	4618      	mov	r0, r3
 8017978:	f008 fc58 	bl	802022c <_ZNSaIcED1Ev>
	x = get<int>(ARG(x));
 801797c:	f7f8 f948 	bl	800fc10 <_ZN16Variable_handler12get_instanceEv>
 8017980:	4604      	mov	r4, r0
 8017982:	f107 0378 	add.w	r3, r7, #120	; 0x78
 8017986:	4618      	mov	r0, r3
 8017988:	f008 fc4f 	bl	802022a <_ZNSaIcEC1Ev>
 801798c:	f107 0278 	add.w	r2, r7, #120	; 0x78
 8017990:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8017994:	4986      	ldr	r1, [pc, #536]	; (8017bb0 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x2c8>)
 8017996:	4618      	mov	r0, r3
 8017998:	f7e9 fcf7 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801799c:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80179a0:	4619      	mov	r1, r3
 80179a2:	4620      	mov	r0, r4
 80179a4:	f7f8 f962 	bl	800fc6c <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80179a8:	4603      	mov	r3, r0
 80179aa:	4618      	mov	r0, r3
 80179ac:	f000 fa06 	bl	8017dbc <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERT_RSt7variantIJDpT0_EE>
 80179b0:	4603      	mov	r3, r0
 80179b2:	681b      	ldr	r3, [r3, #0]
 80179b4:	63fb      	str	r3, [r7, #60]	; 0x3c
 80179b6:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80179ba:	4618      	mov	r0, r3
 80179bc:	f008 fdfb 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80179c0:	f107 0378 	add.w	r3, r7, #120	; 0x78
 80179c4:	4618      	mov	r0, r3
 80179c6:	f008 fc31 	bl	802022c <_ZNSaIcED1Ev>

	ARG(messages) = vector<string>
 80179ca:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 80179ce:	4618      	mov	r0, r3
 80179d0:	f008 fc2b 	bl	802022a <_ZNSaIcEC1Ev>
 80179d4:	f107 02c0 	add.w	r2, r7, #192	; 0xc0
 80179d8:	f107 0390 	add.w	r3, r7, #144	; 0x90
 80179dc:	4975      	ldr	r1, [pc, #468]	; (8017bb4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x2cc>)
 80179de:	4618      	mov	r0, r3
 80179e0:	f7e9 fcd3 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 80179e4:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 80179e8:	4618      	mov	r0, r3
 80179ea:	f008 fc1e 	bl	802022a <_ZNSaIcEC1Ev>
 80179ee:	f107 02c4 	add.w	r2, r7, #196	; 0xc4
 80179f2:	f107 0390 	add.w	r3, r7, #144	; 0x90
 80179f6:	3318      	adds	r3, #24
 80179f8:	496f      	ldr	r1, [pc, #444]	; (8017bb8 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x2d0>)
 80179fa:	4618      	mov	r0, r3
 80179fc:	f7e9 fcc5 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017a00:	f107 0390 	add.w	r3, r7, #144	; 0x90
 8017a04:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8017a08:	2302      	movs	r3, #2
 8017a0a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8017a0e:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 8017a12:	4618      	mov	r0, r3
 8017a14:	f000 f9de 	bl	8017dd4 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>
 8017a18:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 8017a1c:	f107 007c 	add.w	r0, r7, #124	; 0x7c
 8017a20:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8017a24:	ca06      	ldmia	r2, {r1, r2}
 8017a26:	f000 f9e1 	bl	8017dec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_listIS5_ERKS6_>
 8017a2a:	f7f8 f8f1 	bl	800fc10 <_ZN16Variable_handler12get_instanceEv>
 8017a2e:	4604      	mov	r4, r0
 8017a30:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8017a34:	4618      	mov	r0, r3
 8017a36:	f008 fbf8 	bl	802022a <_ZNSaIcEC1Ev>
 8017a3a:	f107 02e4 	add.w	r2, r7, #228	; 0xe4
 8017a3e:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8017a42:	495e      	ldr	r1, [pc, #376]	; (8017bbc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x2d4>)
 8017a44:	4618      	mov	r0, r3
 8017a46:	f7e9 fca0 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017a4a:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8017a4e:	4619      	mov	r1, r3
 8017a50:	4620      	mov	r0, r4
 8017a52:	f7f8 f90b 	bl	800fc6c <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017a56:	4602      	mov	r2, r0
	{ "hello", "world" };
 8017a58:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8017a5c:	4619      	mov	r1, r3
 8017a5e:	4610      	mov	r0, r2
 8017a60:	f000 f9e5 	bl	8017e2e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEaSIS8_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESF_E4typeEE18is_constructible_vISM_SJ_E15is_assignable_vIRSM_SJ_EERSF_E4typeESK_>
	ARG(messages) = vector<string>
 8017a64:	f107 03cc 	add.w	r3, r7, #204	; 0xcc
 8017a68:	4618      	mov	r0, r3
 8017a6a:	f008 fda4 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017a6e:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8017a72:	4618      	mov	r0, r3
 8017a74:	f008 fbda 	bl	802022c <_ZNSaIcED1Ev>
	{ "hello", "world" };
 8017a78:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8017a7c:	4618      	mov	r0, r3
 8017a7e:	f7fa faf2 	bl	8012066 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
 8017a82:	f107 03c8 	add.w	r3, r7, #200	; 0xc8
 8017a86:	4618      	mov	r0, r3
 8017a88:	f7fa fc27 	bl	80122da <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
	ARG(messages) = vector<string>
 8017a8c:	f107 0490 	add.w	r4, r7, #144	; 0x90
 8017a90:	3430      	adds	r4, #48	; 0x30
 8017a92:	f107 0390 	add.w	r3, r7, #144	; 0x90
 8017a96:	429c      	cmp	r4, r3
 8017a98:	d004      	beq.n	8017aa4 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x1bc>
 8017a9a:	3c18      	subs	r4, #24
	{ "hello", "world" };
 8017a9c:	4620      	mov	r0, r4
 8017a9e:	f008 fd8a 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	ARG(messages) = vector<string>
 8017aa2:	e7f6      	b.n	8017a92 <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x1aa>
	{ "hello", "world" };
 8017aa4:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8017aa8:	4618      	mov	r0, r3
 8017aaa:	f008 fbbf 	bl	802022c <_ZNSaIcED1Ev>
 8017aae:	f107 03c0 	add.w	r3, r7, #192	; 0xc0
 8017ab2:	4618      	mov	r0, r3
 8017ab4:	f008 fbba 	bl	802022c <_ZNSaIcED1Ev>
	string h = get<vector<string>>(ARG(messages))[0];
 8017ab8:	f7f8 f8aa 	bl	800fc10 <_ZN16Variable_handler12get_instanceEv>
 8017abc:	4604      	mov	r4, r0
 8017abe:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8017ac2:	4618      	mov	r0, r3
 8017ac4:	f008 fbb1 	bl	802022a <_ZNSaIcEC1Ev>
 8017ac8:	f507 7280 	add.w	r2, r7, #256	; 0x100
 8017acc:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8017ad0:	493a      	ldr	r1, [pc, #232]	; (8017bbc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x2d4>)
 8017ad2:	4618      	mov	r0, r3
 8017ad4:	f7e9 fc59 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017ad8:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8017adc:	4619      	mov	r1, r3
 8017ade:	4620      	mov	r0, r4
 8017ae0:	f7f8 f8c4 	bl	800fc6c <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017ae4:	4603      	mov	r3, r0
 8017ae6:	4618      	mov	r0, r3
 8017ae8:	f000 f9cd 	bl	8017e86 <_ZSt3getISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEJifbS6_S8_S0_IiSaIiEES0_IfSaIfEES0_IbSaIbEEEERT_RSt7variantIJDpT0_EE>
 8017aec:	4603      	mov	r3, r0
 8017aee:	2100      	movs	r1, #0
 8017af0:	4618      	mov	r0, r3
 8017af2:	f000 f9d4 	bl	8017e9e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEj>
 8017af6:	4602      	mov	r2, r0
 8017af8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017afc:	4611      	mov	r1, r2
 8017afe:	4618      	mov	r0, r3
 8017b00:	f008 fe86 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8017b04:	f107 03e8 	add.w	r3, r7, #232	; 0xe8
 8017b08:	4618      	mov	r0, r3
 8017b0a:	f008 fd54 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017b0e:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8017b12:	4618      	mov	r0, r3
 8017b14:	f008 fb8a 	bl	802022c <_ZNSaIcED1Ev>
	string w = get<vector<string>>(ARG(messages))[1];
 8017b18:	f7f8 f87a 	bl	800fc10 <_ZN16Variable_handler12get_instanceEv>
 8017b1c:	4604      	mov	r4, r0
 8017b1e:	f507 738e 	add.w	r3, r7, #284	; 0x11c
 8017b22:	4618      	mov	r0, r3
 8017b24:	f008 fb81 	bl	802022a <_ZNSaIcEC1Ev>
 8017b28:	f507 728e 	add.w	r2, r7, #284	; 0x11c
 8017b2c:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8017b30:	4922      	ldr	r1, [pc, #136]	; (8017bbc <_ZN12_GLOBAL__N_131run_single_experiment_iterationESt6vectorIP10ExpressionSaIS2_EE+0x2d4>)
 8017b32:	4618      	mov	r0, r3
 8017b34:	f7e9 fc29 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017b38:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8017b3c:	4619      	mov	r1, r3
 8017b3e:	4620      	mov	r0, r4
 8017b40:	f7f8 f894 	bl	800fc6c <_ZN16Variable_handler7get_argENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8017b44:	4603      	mov	r3, r0
 8017b46:	4618      	mov	r0, r3
 8017b48:	f000 f99d 	bl	8017e86 <_ZSt3getISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEJifbS6_S8_S0_IiSaIiEES0_IfSaIfEES0_IbSaIbEEEERT_RSt7variantIJDpT0_EE>
 8017b4c:	4603      	mov	r3, r0
 8017b4e:	2101      	movs	r1, #1
 8017b50:	4618      	mov	r0, r3
 8017b52:	f000 f9a4 	bl	8017e9e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEj>
 8017b56:	4602      	mov	r2, r0
 8017b58:	f107 030c 	add.w	r3, r7, #12
 8017b5c:	4611      	mov	r1, r2
 8017b5e:	4618      	mov	r0, r3
 8017b60:	f008 fe56 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8017b64:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8017b68:	4618      	mov	r0, r3
 8017b6a:	f008 fd24 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8017b6e:	f507 738e 	add.w	r3, r7, #284	; 0x11c
 8017b72:	4618      	mov	r0, r3
 8017b74:	f008 fb5a 	bl	802022c <_ZNSaIcED1Ev>
	return x;
 8017b78:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8017b7c:	1d3b      	adds	r3, r7, #4
 8017b7e:	4611      	mov	r1, r2
 8017b80:	6818      	ldr	r0, [r3, #0]
 8017b82:	f7f0 f976 	bl	8007e72 <_ZNSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEEC1IivvivEEOT_>
	string w = get<vector<string>>(ARG(messages))[1];
 8017b86:	f107 030c 	add.w	r3, r7, #12
 8017b8a:	4618      	mov	r0, r3
 8017b8c:	f008 fd13 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	string h = get<vector<string>>(ARG(messages))[0];
 8017b90:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8017b94:	4618      	mov	r0, r3
 8017b96:	f008 fd0e 	bl	80205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	return x;
 8017b9a:	1d3b      	adds	r3, r7, #4
 8017b9c:	1d3a      	adds	r2, r7, #4
 8017b9e:	6812      	ldr	r2, [r2, #0]
 8017ba0:	601a      	str	r2, [r3, #0]
}
 8017ba2:	1d3b      	adds	r3, r7, #4
 8017ba4:	6818      	ldr	r0, [r3, #0]
 8017ba6:	f507 7792 	add.w	r7, r7, #292	; 0x124
 8017baa:	46bd      	mov	sp, r7
 8017bac:	bd90      	pop	{r4, r7, pc}
 8017bae:	bf00      	nop
 8017bb0:	080250fc 	.word	0x080250fc
 8017bb4:	08025100 	.word	0x08025100
 8017bb8:	08025108 	.word	0x08025108
 8017bbc:	08025110 	.word	0x08025110

08017bc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>:
      _Rb_tree() = default;
 8017bc0:	b580      	push	{r7, lr}
 8017bc2:	b082      	sub	sp, #8
 8017bc4:	af00      	add	r7, sp, #0
 8017bc6:	6078      	str	r0, [r7, #4]
 8017bc8:	687b      	ldr	r3, [r7, #4]
 8017bca:	4618      	mov	r0, r3
 8017bcc:	f000 f97a 	bl	8017ec4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>
 8017bd0:	687b      	ldr	r3, [r7, #4]
 8017bd2:	4618      	mov	r0, r3
 8017bd4:	3708      	adds	r7, #8
 8017bd6:	46bd      	mov	sp, r7
 8017bd8:	bd80      	pop	{r7, pc}

08017bda <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>:
      map() = default;
 8017bda:	b580      	push	{r7, lr}
 8017bdc:	b082      	sub	sp, #8
 8017bde:	af00      	add	r7, sp, #0
 8017be0:	6078      	str	r0, [r7, #4]
 8017be2:	687b      	ldr	r3, [r7, #4]
 8017be4:	4618      	mov	r0, r3
 8017be6:	f7ff ffeb 	bl	8017bc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EEC1Ev>
 8017bea:	687b      	ldr	r3, [r7, #4]
 8017bec:	4618      	mov	r0, r3
 8017bee:	3708      	adds	r7, #8
 8017bf0:	46bd      	mov	sp, r7
 8017bf2:	bd80      	pop	{r7, pc}

08017bf4 <_ZN16Function_handlerC1Ev>:

}

Function_handler::Function_handler()
 8017bf4:	b590      	push	{r4, r7, lr}
 8017bf6:	b08d      	sub	sp, #52	; 0x34
 8017bf8:	af00      	add	r7, sp, #0
 8017bfa:	6078      	str	r0, [r7, #4]
 8017bfc:	687b      	ldr	r3, [r7, #4]
 8017bfe:	4618      	mov	r0, r3
 8017c00:	f7ff ffeb 	bl	8017bda <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEEC1Ev>
{
	ADD_FUNCTION(run_single_experiment_iteration);
 8017c04:	687c      	ldr	r4, [r7, #4]
 8017c06:	4b0e      	ldr	r3, [pc, #56]	; (8017c40 <_ZN16Function_handlerC1Ev+0x4c>)
 8017c08:	62fb      	str	r3, [r7, #44]	; 0x2c
 8017c0a:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8017c0e:	f107 0310 	add.w	r3, r7, #16
 8017c12:	490c      	ldr	r1, [pc, #48]	; (8017c44 <_ZN16Function_handlerC1Ev+0x50>)
 8017c14:	4618      	mov	r0, r3
 8017c16:	f000 f96a 	bl	8017eee <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISB_EEEEC1IRA32_KcSF_Lb1EEEOT_OT0_>
 8017c1a:	f107 0308 	add.w	r3, r7, #8
 8017c1e:	f107 0210 	add.w	r2, r7, #16
 8017c22:	4621      	mov	r1, r4
 8017c24:	4618      	mov	r0, r3
 8017c26:	f000 f98a 	bl	8017f3e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>
 8017c2a:	f107 0310 	add.w	r3, r7, #16
 8017c2e:	4618      	mov	r0, r3
 8017c30:	f7f0 fda0 	bl	8008774 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISB_EEEED1Ev>
}
 8017c34:	687b      	ldr	r3, [r7, #4]
 8017c36:	4618      	mov	r0, r3
 8017c38:	3734      	adds	r7, #52	; 0x34
 8017c3a:	46bd      	mov	sp, r7
 8017c3c:	bd90      	pop	{r4, r7, pc}
 8017c3e:	bf00      	nop
 8017c40:	080178e9 	.word	0x080178e9
 8017c44:	0802511c 	.word	0x0802511c

08017c48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>:
 8017c48:	b580      	push	{r7, lr}
 8017c4a:	b082      	sub	sp, #8
 8017c4c:	af00      	add	r7, sp, #0
 8017c4e:	6078      	str	r0, [r7, #4]
 8017c50:	687b      	ldr	r3, [r7, #4]
 8017c52:	4618      	mov	r0, r3
 8017c54:	f000 f987 	bl	8017f66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>
 8017c58:	687b      	ldr	r3, [r7, #4]
 8017c5a:	4618      	mov	r0, r3
 8017c5c:	3708      	adds	r7, #8
 8017c5e:	46bd      	mov	sp, r7
 8017c60:	bd80      	pop	{r7, pc}

08017c62 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>:
 8017c62:	b580      	push	{r7, lr}
 8017c64:	b082      	sub	sp, #8
 8017c66:	af00      	add	r7, sp, #0
 8017c68:	6078      	str	r0, [r7, #4]
 8017c6a:	687b      	ldr	r3, [r7, #4]
 8017c6c:	4618      	mov	r0, r3
 8017c6e:	f7ff ffeb 	bl	8017c48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EEC1Ev>
 8017c72:	687b      	ldr	r3, [r7, #4]
 8017c74:	4618      	mov	r0, r3
 8017c76:	3708      	adds	r7, #8
 8017c78:	46bd      	mov	sp, r7
 8017c7a:	bd80      	pop	{r7, pc}

08017c7c <_ZN16Variable_handlerC1Ev>:

Variable_handler::Variable_handler()
 8017c7c:	b590      	push	{r4, r7, lr}
 8017c7e:	b0b3      	sub	sp, #204	; 0xcc
 8017c80:	af00      	add	r7, sp, #0
 8017c82:	6078      	str	r0, [r7, #4]
 8017c84:	687b      	ldr	r3, [r7, #4]
 8017c86:	4618      	mov	r0, r3
 8017c88:	f7ff ffeb 	bl	8017c62 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 8017c8c:	687b      	ldr	r3, [r7, #4]
 8017c8e:	3318      	adds	r3, #24
 8017c90:	4618      	mov	r0, r3
 8017c92:	f7ff ffe6 	bl	8017c62 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
 8017c96:	687b      	ldr	r3, [r7, #4]
 8017c98:	3330      	adds	r3, #48	; 0x30
 8017c9a:	4618      	mov	r0, r3
 8017c9c:	f7ff ffe1 	bl	8017c62 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1Ev>
{
	ADD_ARG(x, INT);
 8017ca0:	687b      	ldr	r3, [r7, #4]
 8017ca2:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8017ca6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017caa:	2220      	movs	r2, #32
 8017cac:	2100      	movs	r1, #0
 8017cae:	4618      	mov	r0, r3
 8017cb0:	f009 fe2c 	bl	802190c <memset>
 8017cb4:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8017cb8:	f107 0310 	add.w	r3, r7, #16
 8017cbc:	4920      	ldr	r1, [pc, #128]	; (8017d40 <_ZN16Variable_handlerC1Ev+0xc4>)
 8017cbe:	4618      	mov	r0, r3
 8017cc0:	f000 f9cc 	bl	801805c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>
 8017cc4:	f107 0308 	add.w	r3, r7, #8
 8017cc8:	f107 0210 	add.w	r2, r7, #16
 8017ccc:	4621      	mov	r1, r4
 8017cce:	4618      	mov	r0, r3
 8017cd0:	f000 f9eb 	bl	80180aa <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 8017cd4:	f107 0310 	add.w	r3, r7, #16
 8017cd8:	4618      	mov	r0, r3
 8017cda:	f7f8 fe2d 	bl	8010938 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 8017cde:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8017ce2:	4618      	mov	r0, r3
 8017ce4:	f7f8 fe1a 	bl	801091c <_ZN6SymbolD1Ev>
	ADD_ARG(messages, STRING_CONTAINER);
 8017ce8:	687b      	ldr	r3, [r7, #4]
 8017cea:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8017cee:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8017cf2:	2220      	movs	r2, #32
 8017cf4:	2100      	movs	r1, #0
 8017cf6:	4618      	mov	r0, r3
 8017cf8:	f009 fe08 	bl	802190c <memset>
 8017cfc:	2307      	movs	r3, #7
 8017cfe:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 8017d02:	f107 02a8 	add.w	r2, r7, #168	; 0xa8
 8017d06:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8017d0a:	490e      	ldr	r1, [pc, #56]	; (8017d44 <_ZN16Variable_handlerC1Ev+0xc8>)
 8017d0c:	4618      	mov	r0, r3
 8017d0e:	f000 f9e0 	bl	80180d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA9_KcLb1EEEOT_RKS7_>
 8017d12:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8017d16:	f107 0270 	add.w	r2, r7, #112	; 0x70
 8017d1a:	4621      	mov	r1, r4
 8017d1c:	4618      	mov	r0, r3
 8017d1e:	f000 f9c4 	bl	80180aa <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>
 8017d22:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8017d26:	4618      	mov	r0, r3
 8017d28:	f7f8 fe06 	bl	8010938 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolED1Ev>
 8017d2c:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8017d30:	4618      	mov	r0, r3
 8017d32:	f7f8 fdf3 	bl	801091c <_ZN6SymbolD1Ev>
}
 8017d36:	687b      	ldr	r3, [r7, #4]
 8017d38:	4618      	mov	r0, r3
 8017d3a:	37cc      	adds	r7, #204	; 0xcc
 8017d3c:	46bd      	mov	sp, r7
 8017d3e:	bd90      	pop	{r4, r7, pc}
 8017d40:	080250fc 	.word	0x080250fc
 8017d44:	08025110 	.word	0x08025110

08017d48 <_ZNSt6vectorIP10ExpressionSaIS1_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8017d48:	b480      	push	{r7}
 8017d4a:	b083      	sub	sp, #12
 8017d4c:	af00      	add	r7, sp, #0
 8017d4e:	6078      	str	r0, [r7, #4]
 8017d50:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8017d52:	687b      	ldr	r3, [r7, #4]
 8017d54:	681a      	ldr	r2, [r3, #0]
 8017d56:	683b      	ldr	r3, [r7, #0]
 8017d58:	009b      	lsls	r3, r3, #2
 8017d5a:	4413      	add	r3, r2
      }
 8017d5c:	4618      	mov	r0, r3
 8017d5e:	370c      	adds	r7, #12
 8017d60:	46bd      	mov	sp, r7
 8017d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017d66:	4770      	bx	lr

08017d68 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESF_E4typeEE18is_constructible_vISM_SJ_E15is_assignable_vIRSM_SJ_EERSF_E4typeESK_>:
	operator=(_Tp&& __rhs)
 8017d68:	b590      	push	{r4, r7, lr}
 8017d6a:	b085      	sub	sp, #20
 8017d6c:	af00      	add	r7, sp, #0
 8017d6e:	6078      	str	r0, [r7, #4]
 8017d70:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017d72:	2300      	movs	r3, #0
 8017d74:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017d76:	6878      	ldr	r0, [r7, #4]
 8017d78:	f7f9 fcec 	bl	8011754 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv>
 8017d7c:	4603      	mov	r3, r0
 8017d7e:	2b00      	cmp	r3, #0
 8017d80:	bf0c      	ite	eq
 8017d82:	2301      	moveq	r3, #1
 8017d84:	2300      	movne	r3, #0
 8017d86:	b2db      	uxtb	r3, r3
 8017d88:	2b00      	cmp	r3, #0
 8017d8a:	d00a      	beq.n	8017da2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESF_E4typeEE18is_constructible_vISM_SJ_E15is_assignable_vIRSM_SJ_EERSF_E4typeESK_+0x3a>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017d8c:	6838      	ldr	r0, [r7, #0]
 8017d8e:	f7f0 f865 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8017d92:	4603      	mov	r3, r0
 8017d94:	681c      	ldr	r4, [r3, #0]
 8017d96:	6878      	ldr	r0, [r7, #4]
 8017d98:	f000 f9c2 	bl	8018120 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_>
 8017d9c:	4603      	mov	r3, r0
 8017d9e:	601c      	str	r4, [r3, #0]
 8017da0:	e007      	b.n	8017db2 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEaSIiEENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESF_E4typeEE18is_constructible_vISM_SJ_E15is_assignable_vIRSM_SJ_EERSF_E4typeESK_+0x4a>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017da2:	6838      	ldr	r0, [r7, #0]
 8017da4:	f7f0 f85a 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8017da8:	4603      	mov	r3, r0
 8017daa:	4619      	mov	r1, r3
 8017dac:	6878      	ldr	r0, [r7, #4]
 8017dae:	f000 f9d3 	bl	8018158 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESF_E4typeEDpT0_EERSK_E4typeEDpOSL_>
	  return *this;
 8017db2:	687b      	ldr	r3, [r7, #4]
	}
 8017db4:	4618      	mov	r0, r3
 8017db6:	3714      	adds	r7, #20
 8017db8:	46bd      	mov	sp, r7
 8017dba:	bd90      	pop	{r4, r7, pc}

08017dbc <_ZSt3getIiJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8017dbc:	b580      	push	{r7, lr}
 8017dbe:	b082      	sub	sp, #8
 8017dc0:	af00      	add	r7, sp, #0
 8017dc2:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8017dc4:	6878      	ldr	r0, [r7, #4]
 8017dc6:	f000 f9ab 	bl	8018120 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_>
 8017dca:	4603      	mov	r3, r0
    }
 8017dcc:	4618      	mov	r0, r3
 8017dce:	3708      	adds	r7, #8
 8017dd0:	46bd      	mov	sp, r7
 8017dd2:	bd80      	pop	{r7, pc}

08017dd4 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>:
 8017dd4:	b580      	push	{r7, lr}
 8017dd6:	b082      	sub	sp, #8
 8017dd8:	af00      	add	r7, sp, #0
 8017dda:	6078      	str	r0, [r7, #4]
 8017ddc:	6878      	ldr	r0, [r7, #4]
 8017dde:	f000 f9d4 	bl	801818a <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>
 8017de2:	687b      	ldr	r3, [r7, #4]
 8017de4:	4618      	mov	r0, r3
 8017de6:	3708      	adds	r7, #8
 8017de8:	46bd      	mov	sp, r7
 8017dea:	bd80      	pop	{r7, pc}

08017dec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ESt16initializer_listIS5_ERKS6_>:
      vector(initializer_list<value_type> __l,
 8017dec:	b5b0      	push	{r4, r5, r7, lr}
 8017dee:	b086      	sub	sp, #24
 8017df0:	af00      	add	r7, sp, #0
 8017df2:	60f8      	str	r0, [r7, #12]
 8017df4:	1d38      	adds	r0, r7, #4
 8017df6:	e880 0006 	stmia.w	r0, {r1, r2}
 8017dfa:	603b      	str	r3, [r7, #0]
      : _Base(__a)
 8017dfc:	68fb      	ldr	r3, [r7, #12]
 8017dfe:	6839      	ldr	r1, [r7, #0]
 8017e00:	4618      	mov	r0, r3
 8017e02:	f000 f9cd 	bl	80181a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS6_>
	_M_range_initialize(__l.begin(), __l.end(),
 8017e06:	1d3b      	adds	r3, r7, #4
 8017e08:	4618      	mov	r0, r3
 8017e0a:	f000 f9d8 	bl	80181be <_ZNKSt16initializer_listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5beginEv>
 8017e0e:	4604      	mov	r4, r0
 8017e10:	1d3b      	adds	r3, r7, #4
 8017e12:	4618      	mov	r0, r3
 8017e14:	f000 f9df 	bl	80181d6 <_ZNKSt16initializer_listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3endEv>
 8017e18:	4602      	mov	r2, r0
 8017e1a:	462b      	mov	r3, r5
 8017e1c:	4621      	mov	r1, r4
 8017e1e:	68f8      	ldr	r0, [r7, #12]
 8017e20:	f000 fa02 	bl	8018228 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIPKS5_EEvT_SB_St20forward_iterator_tag>
      }
 8017e24:	68fb      	ldr	r3, [r7, #12]
 8017e26:	4618      	mov	r0, r3
 8017e28:	3718      	adds	r7, #24
 8017e2a:	46bd      	mov	sp, r7
 8017e2c:	bdb0      	pop	{r4, r5, r7, pc}

08017e2e <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEaSIS8_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESF_E4typeEE18is_constructible_vISM_SJ_E15is_assignable_vIRSM_SJ_EERSF_E4typeESK_>:
	operator=(_Tp&& __rhs)
 8017e2e:	b590      	push	{r4, r7, lr}
 8017e30:	b085      	sub	sp, #20
 8017e32:	af00      	add	r7, sp, #0
 8017e34:	6078      	str	r0, [r7, #4]
 8017e36:	6039      	str	r1, [r7, #0]
	  constexpr auto __index = __accepted_index<_Tp&&>;
 8017e38:	2304      	movs	r3, #4
 8017e3a:	60fb      	str	r3, [r7, #12]
	  if (index() == __index)
 8017e3c:	6878      	ldr	r0, [r7, #4]
 8017e3e:	f7f9 fc89 	bl	8011754 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv>
 8017e42:	4603      	mov	r3, r0
 8017e44:	2b04      	cmp	r3, #4
 8017e46:	bf0c      	ite	eq
 8017e48:	2301      	moveq	r3, #1
 8017e4a:	2300      	movne	r3, #0
 8017e4c:	b2db      	uxtb	r3, r3
 8017e4e:	2b00      	cmp	r3, #0
 8017e50:	d00c      	beq.n	8017e6c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEaSIS8_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESF_E4typeEE18is_constructible_vISM_SJ_E15is_assignable_vIRSM_SJ_EERSF_E4typeESK_+0x3e>
	    std::get<__index>(*this) = std::forward<_Tp>(__rhs);
 8017e52:	6838      	ldr	r0, [r7, #0]
 8017e54:	f000 fa40 	bl	80182d8 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 8017e58:	4604      	mov	r4, r0
 8017e5a:	6878      	ldr	r0, [r7, #4]
 8017e5c:	f000 fa20 	bl	80182a0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_>
 8017e60:	4603      	mov	r3, r0
 8017e62:	4621      	mov	r1, r4
 8017e64:	4618      	mov	r0, r3
 8017e66:	f000 fa42 	bl	80182ee <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_>
 8017e6a:	e007      	b.n	8017e7c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEaSIS8_EENSt9enable_ifIXaaaa14__exactly_onceINSt19variant_alternativeIX16__accepted_indexIOT_EESF_E4typeEE18is_constructible_vISM_SJ_E15is_assignable_vIRSM_SJ_EERSF_E4typeESK_+0x4e>
		this->emplace<__index>(std::forward<_Tp>(__rhs));
 8017e6c:	6838      	ldr	r0, [r7, #0]
 8017e6e:	f000 fa33 	bl	80182d8 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 8017e72:	4603      	mov	r3, r0
 8017e74:	4619      	mov	r1, r3
 8017e76:	6878      	ldr	r0, [r7, #4]
 8017e78:	f000 fa4e 	bl	8018318 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE7emplaceILj4EJS8_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESF_E4typeEDpT0_EERSK_E4typeEDpOSL_>
	  return *this;
 8017e7c:	687b      	ldr	r3, [r7, #4]
	}
 8017e7e:	4618      	mov	r0, r3
 8017e80:	3714      	adds	r7, #20
 8017e82:	46bd      	mov	sp, r7
 8017e84:	bd90      	pop	{r4, r7, pc}

08017e86 <_ZSt3getISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEJifbS6_S8_S0_IiSaIiEES0_IfSaIfEES0_IbSaIbEEEERT_RSt7variantIJDpT0_EE>:
    constexpr _Tp& get(variant<_Types...>& __v)
 8017e86:	b580      	push	{r7, lr}
 8017e88:	b082      	sub	sp, #8
 8017e8a:	af00      	add	r7, sp, #0
 8017e8c:	6078      	str	r0, [r7, #4]
      return std::get<__detail::__variant::__index_of_v<_Tp, _Types...>>(__v);
 8017e8e:	6878      	ldr	r0, [r7, #4]
 8017e90:	f000 fa06 	bl	80182a0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_>
 8017e94:	4603      	mov	r3, r0
    }
 8017e96:	4618      	mov	r0, r3
 8017e98:	3708      	adds	r7, #8
 8017e9a:	46bd      	mov	sp, r7
 8017e9c:	bd80      	pop	{r7, pc}

08017e9e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEj>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
 8017e9e:	b480      	push	{r7}
 8017ea0:	b083      	sub	sp, #12
 8017ea2:	af00      	add	r7, sp, #0
 8017ea4:	6078      	str	r0, [r7, #4]
 8017ea6:	6039      	str	r1, [r7, #0]
	return *(this->_M_impl._M_start + __n);
 8017ea8:	687b      	ldr	r3, [r7, #4]
 8017eaa:	6819      	ldr	r1, [r3, #0]
 8017eac:	683a      	ldr	r2, [r7, #0]
 8017eae:	4613      	mov	r3, r2
 8017eb0:	005b      	lsls	r3, r3, #1
 8017eb2:	4413      	add	r3, r2
 8017eb4:	00db      	lsls	r3, r3, #3
 8017eb6:	440b      	add	r3, r1
      }
 8017eb8:	4618      	mov	r0, r3
 8017eba:	370c      	adds	r7, #12
 8017ebc:	46bd      	mov	sp, r7
 8017ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017ec2:	4770      	bx	lr

08017ec4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE13_Rb_tree_implISL_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 8017ec4:	b580      	push	{r7, lr}
 8017ec6:	b082      	sub	sp, #8
 8017ec8:	af00      	add	r7, sp, #0
 8017eca:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 8017ecc:	6878      	ldr	r0, [r7, #4]
 8017ece:	f000 fa3c 	bl	801834a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>
 8017ed2:	687b      	ldr	r3, [r7, #4]
 8017ed4:	4618      	mov	r0, r3
 8017ed6:	f000 fa44 	bl	8018362 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 8017eda:	687b      	ldr	r3, [r7, #4]
 8017edc:	3304      	adds	r3, #4
 8017ede:	4618      	mov	r0, r3
 8017ee0:	f7e9 f8c7 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8017ee4:	687b      	ldr	r3, [r7, #4]
 8017ee6:	4618      	mov	r0, r3
 8017ee8:	3708      	adds	r7, #8
 8017eea:	46bd      	mov	sp, r7
 8017eec:	bd80      	pop	{r7, pc}

08017eee <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISB_EEEEC1IRA32_KcSF_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8017eee:	b5b0      	push	{r4, r5, r7, lr}
 8017ef0:	b086      	sub	sp, #24
 8017ef2:	af00      	add	r7, sp, #0
 8017ef4:	60f8      	str	r0, [r7, #12]
 8017ef6:	60b9      	str	r1, [r7, #8]
 8017ef8:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8017efa:	68fc      	ldr	r4, [r7, #12]
 8017efc:	68b8      	ldr	r0, [r7, #8]
 8017efe:	f000 fa3b 	bl	8018378 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8017f02:	4605      	mov	r5, r0
 8017f04:	f107 0314 	add.w	r3, r7, #20
 8017f08:	4618      	mov	r0, r3
 8017f0a:	f008 f98e 	bl	802022a <_ZNSaIcEC1Ev>
 8017f0e:	f107 0314 	add.w	r3, r7, #20
 8017f12:	461a      	mov	r2, r3
 8017f14:	4629      	mov	r1, r5
 8017f16:	4620      	mov	r0, r4
 8017f18:	f7e9 fa37 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8017f1c:	f107 0314 	add.w	r3, r7, #20
 8017f20:	4618      	mov	r0, r3
 8017f22:	f008 f983 	bl	802022c <_ZNSaIcED1Ev>
 8017f26:	6878      	ldr	r0, [r7, #4]
 8017f28:	f000 fa31 	bl	801838e <_ZSt7forwardIPFSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEESt6vectorIP10ExpressionSaISA_EEEEOT_RNSt16remove_referenceISF_E4typeE>
 8017f2c:	4603      	mov	r3, r0
 8017f2e:	681a      	ldr	r2, [r3, #0]
 8017f30:	68fb      	ldr	r3, [r7, #12]
 8017f32:	619a      	str	r2, [r3, #24]
 8017f34:	68fb      	ldr	r3, [r7, #12]
 8017f36:	4618      	mov	r0, r3
 8017f38:	3718      	adds	r7, #24
 8017f3a:	46bd      	mov	sp, r7
 8017f3c:	bdb0      	pop	{r4, r5, r7, pc}

08017f3e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISA_EEESt4lessIS5_ESaISt4pairIKS5_SE_EEE6insertEOSJ_>:
      insert(value_type&& __x)
 8017f3e:	b590      	push	{r4, r7, lr}
 8017f40:	b085      	sub	sp, #20
 8017f42:	af00      	add	r7, sp, #0
 8017f44:	60f8      	str	r0, [r7, #12]
 8017f46:	60b9      	str	r1, [r7, #8]
 8017f48:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 8017f4a:	68bc      	ldr	r4, [r7, #8]
 8017f4c:	6878      	ldr	r0, [r7, #4]
 8017f4e:	f000 fa29 	bl	80183a4 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>
 8017f52:	4602      	mov	r2, r0
 8017f54:	68fb      	ldr	r3, [r7, #12]
 8017f56:	4621      	mov	r1, r4
 8017f58:	4618      	mov	r0, r3
 8017f5a:	f000 fa2e 	bl	80183ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>
 8017f5e:	68f8      	ldr	r0, [r7, #12]
 8017f60:	3714      	adds	r7, #20
 8017f62:	46bd      	mov	sp, r7
 8017f64:	bd90      	pop	{r4, r7, pc}

08017f66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE13_Rb_tree_implISD_Lb1EEC1Ev>:
	  _Rb_tree_impl()
 8017f66:	b580      	push	{r7, lr}
 8017f68:	b082      	sub	sp, #8
 8017f6a:	af00      	add	r7, sp, #0
 8017f6c:	6078      	str	r0, [r7, #4]
	  : _Node_allocator()
 8017f6e:	6878      	ldr	r0, [r7, #4]
 8017f70:	f000 fa72 	bl	8018458 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 8017f74:	687b      	ldr	r3, [r7, #4]
 8017f76:	4618      	mov	r0, r3
 8017f78:	f000 f9f3 	bl	8018362 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
 8017f7c:	687b      	ldr	r3, [r7, #4]
 8017f7e:	3304      	adds	r3, #4
 8017f80:	4618      	mov	r0, r3
 8017f82:	f7e9 f876 	bl	8001072 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
 8017f86:	687b      	ldr	r3, [r7, #4]
 8017f88:	4618      	mov	r0, r3
 8017f8a:	3708      	adds	r7, #8
 8017f8c:	46bd      	mov	sp, r7
 8017f8e:	bd80      	pop	{r7, pc}

08017f90 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>:
      _Move_ctor_base(const _Move_ctor_base&) = default;
 8017f90:	b580      	push	{r7, lr}
 8017f92:	b082      	sub	sp, #8
 8017f94:	af00      	add	r7, sp, #0
 8017f96:	6078      	str	r0, [r7, #4]
 8017f98:	6039      	str	r1, [r7, #0]
 8017f9a:	687b      	ldr	r3, [r7, #4]
 8017f9c:	683a      	ldr	r2, [r7, #0]
 8017f9e:	4611      	mov	r1, r2
 8017fa0:	4618      	mov	r0, r3
 8017fa2:	f000 fa70 	bl	8018486 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>
 8017fa6:	687b      	ldr	r3, [r7, #4]
 8017fa8:	4618      	mov	r0, r3
 8017faa:	3708      	adds	r7, #8
 8017fac:	46bd      	mov	sp, r7
 8017fae:	bd80      	pop	{r7, pc}

08017fb0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>:
      _Copy_assign_base(const _Copy_assign_base&) = default;
 8017fb0:	b580      	push	{r7, lr}
 8017fb2:	b082      	sub	sp, #8
 8017fb4:	af00      	add	r7, sp, #0
 8017fb6:	6078      	str	r0, [r7, #4]
 8017fb8:	6039      	str	r1, [r7, #0]
 8017fba:	687b      	ldr	r3, [r7, #4]
 8017fbc:	683a      	ldr	r2, [r7, #0]
 8017fbe:	4611      	mov	r1, r2
 8017fc0:	4618      	mov	r0, r3
 8017fc2:	f7ff ffe5 	bl	8017f90 <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>
 8017fc6:	687b      	ldr	r3, [r7, #4]
 8017fc8:	4618      	mov	r0, r3
 8017fca:	3708      	adds	r7, #8
 8017fcc:	46bd      	mov	sp, r7
 8017fce:	bd80      	pop	{r7, pc}

08017fd0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>:
      _Move_assign_base(const _Move_assign_base&) = default;
 8017fd0:	b580      	push	{r7, lr}
 8017fd2:	b082      	sub	sp, #8
 8017fd4:	af00      	add	r7, sp, #0
 8017fd6:	6078      	str	r0, [r7, #4]
 8017fd8:	6039      	str	r1, [r7, #0]
 8017fda:	687b      	ldr	r3, [r7, #4]
 8017fdc:	683a      	ldr	r2, [r7, #0]
 8017fde:	4611      	mov	r1, r2
 8017fe0:	4618      	mov	r0, r3
 8017fe2:	f7ff ffe5 	bl	8017fb0 <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>
 8017fe6:	687b      	ldr	r3, [r7, #4]
 8017fe8:	4618      	mov	r0, r3
 8017fea:	3708      	adds	r7, #8
 8017fec:	46bd      	mov	sp, r7
 8017fee:	bd80      	pop	{r7, pc}

08017ff0 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>:
      _Variant_base(const _Variant_base&) = default;
 8017ff0:	b580      	push	{r7, lr}
 8017ff2:	b082      	sub	sp, #8
 8017ff4:	af00      	add	r7, sp, #0
 8017ff6:	6078      	str	r0, [r7, #4]
 8017ff8:	6039      	str	r1, [r7, #0]
 8017ffa:	687b      	ldr	r3, [r7, #4]
 8017ffc:	683a      	ldr	r2, [r7, #0]
 8017ffe:	4611      	mov	r1, r2
 8018000:	4618      	mov	r0, r3
 8018002:	f7ff ffe5 	bl	8017fd0 <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>
 8018006:	687b      	ldr	r3, [r7, #4]
 8018008:	4618      	mov	r0, r3
 801800a:	3708      	adds	r7, #8
 801800c:	46bd      	mov	sp, r7
 801800e:	bd80      	pop	{r7, pc}

08018010 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEC1ERKSF_>:
      variant(const variant& __rhs) = default;
 8018010:	b580      	push	{r7, lr}
 8018012:	b082      	sub	sp, #8
 8018014:	af00      	add	r7, sp, #0
 8018016:	6078      	str	r0, [r7, #4]
 8018018:	6039      	str	r1, [r7, #0]
 801801a:	687b      	ldr	r3, [r7, #4]
 801801c:	683a      	ldr	r2, [r7, #0]
 801801e:	4611      	mov	r1, r2
 8018020:	4618      	mov	r0, r3
 8018022:	f7ff ffe5 	bl	8017ff0 <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>
 8018026:	687b      	ldr	r3, [r7, #4]
 8018028:	4618      	mov	r0, r3
 801802a:	3708      	adds	r7, #8
 801802c:	46bd      	mov	sp, r7
 801802e:	bd80      	pop	{r7, pc}

08018030 <_ZN6SymbolC1ERKS_>:
 8018030:	b580      	push	{r7, lr}
 8018032:	b082      	sub	sp, #8
 8018034:	af00      	add	r7, sp, #0
 8018036:	6078      	str	r0, [r7, #4]
 8018038:	6039      	str	r1, [r7, #0]
 801803a:	683b      	ldr	r3, [r7, #0]
 801803c:	781a      	ldrb	r2, [r3, #0]
 801803e:	687b      	ldr	r3, [r7, #4]
 8018040:	701a      	strb	r2, [r3, #0]
 8018042:	687b      	ldr	r3, [r7, #4]
 8018044:	1d1a      	adds	r2, r3, #4
 8018046:	683b      	ldr	r3, [r7, #0]
 8018048:	3304      	adds	r3, #4
 801804a:	4619      	mov	r1, r3
 801804c:	4610      	mov	r0, r2
 801804e:	f7ff ffdf 	bl	8018010 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEC1ERKSF_>
 8018052:	687b      	ldr	r3, [r7, #4]
 8018054:	4618      	mov	r0, r3
 8018056:	3708      	adds	r7, #8
 8018058:	46bd      	mov	sp, r7
 801805a:	bd80      	pop	{r7, pc}

0801805c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA2_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 801805c:	b5b0      	push	{r4, r5, r7, lr}
 801805e:	b086      	sub	sp, #24
 8018060:	af00      	add	r7, sp, #0
 8018062:	60f8      	str	r0, [r7, #12]
 8018064:	60b9      	str	r1, [r7, #8]
 8018066:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 8018068:	68fc      	ldr	r4, [r7, #12]
 801806a:	68b8      	ldr	r0, [r7, #8]
 801806c:	f000 fa00 	bl	8018470 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 8018070:	4605      	mov	r5, r0
 8018072:	f107 0314 	add.w	r3, r7, #20
 8018076:	4618      	mov	r0, r3
 8018078:	f008 f8d7 	bl	802022a <_ZNSaIcEC1Ev>
 801807c:	f107 0314 	add.w	r3, r7, #20
 8018080:	461a      	mov	r2, r3
 8018082:	4629      	mov	r1, r5
 8018084:	4620      	mov	r0, r4
 8018086:	f7e9 f980 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 801808a:	f107 0314 	add.w	r3, r7, #20
 801808e:	4618      	mov	r0, r3
 8018090:	f008 f8cc 	bl	802022c <_ZNSaIcED1Ev>
 8018094:	68fb      	ldr	r3, [r7, #12]
 8018096:	3318      	adds	r3, #24
 8018098:	6879      	ldr	r1, [r7, #4]
 801809a:	4618      	mov	r0, r3
 801809c:	f7ff ffc8 	bl	8018030 <_ZN6SymbolC1ERKS_>
 80180a0:	68fb      	ldr	r3, [r7, #12]
 80180a2:	4618      	mov	r0, r3
 80180a4:	3718      	adds	r7, #24
 80180a6:	46bd      	mov	sp, r7
 80180a8:	bdb0      	pop	{r4, r5, r7, pc}

080180aa <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolSt4lessIS5_ESaISt4pairIKS5_S6_EEE6insertEOSB_>:
      insert(value_type&& __x)
 80180aa:	b590      	push	{r4, r7, lr}
 80180ac:	b085      	sub	sp, #20
 80180ae:	af00      	add	r7, sp, #0
 80180b0:	60f8      	str	r0, [r7, #12]
 80180b2:	60b9      	str	r1, [r7, #8]
 80180b4:	607a      	str	r2, [r7, #4]
      { return _M_t._M_insert_unique(std::move(__x)); }
 80180b6:	68bc      	ldr	r4, [r7, #8]
 80180b8:	6878      	ldr	r0, [r7, #4]
 80180ba:	f000 f9f6 	bl	80184aa <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>
 80180be:	4602      	mov	r2, r0
 80180c0:	68fb      	ldr	r3, [r7, #12]
 80180c2:	4621      	mov	r1, r4
 80180c4:	4618      	mov	r0, r3
 80180c6:	f000 f9fb 	bl	80184c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>
 80180ca:	68f8      	ldr	r0, [r7, #12]
 80180cc:	3714      	adds	r7, #20
 80180ce:	46bd      	mov	sp, r7
 80180d0:	bd90      	pop	{r4, r7, pc}

080180d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1IRA9_KcLb1EEEOT_RKS7_>:
       constexpr pair(_U1&& __x, const _T2& __y)
 80180d2:	b5b0      	push	{r4, r5, r7, lr}
 80180d4:	b086      	sub	sp, #24
 80180d6:	af00      	add	r7, sp, #0
 80180d8:	60f8      	str	r0, [r7, #12]
 80180da:	60b9      	str	r1, [r7, #8]
 80180dc:	607a      	str	r2, [r7, #4]
       : first(std::forward<_U1>(__x)), second(__y) { }
 80180de:	68fc      	ldr	r4, [r7, #12]
 80180e0:	68b8      	ldr	r0, [r7, #8]
 80180e2:	f000 fa3c 	bl	801855e <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>
 80180e6:	4605      	mov	r5, r0
 80180e8:	f107 0314 	add.w	r3, r7, #20
 80180ec:	4618      	mov	r0, r3
 80180ee:	f008 f89c 	bl	802022a <_ZNSaIcEC1Ev>
 80180f2:	f107 0314 	add.w	r3, r7, #20
 80180f6:	461a      	mov	r2, r3
 80180f8:	4629      	mov	r1, r5
 80180fa:	4620      	mov	r0, r4
 80180fc:	f7e9 f945 	bl	800138a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
 8018100:	f107 0314 	add.w	r3, r7, #20
 8018104:	4618      	mov	r0, r3
 8018106:	f008 f891 	bl	802022c <_ZNSaIcED1Ev>
 801810a:	68fb      	ldr	r3, [r7, #12]
 801810c:	3318      	adds	r3, #24
 801810e:	6879      	ldr	r1, [r7, #4]
 8018110:	4618      	mov	r0, r3
 8018112:	f7ff ff8d 	bl	8018030 <_ZN6SymbolC1ERKS_>
 8018116:	68fb      	ldr	r3, [r7, #12]
 8018118:	4618      	mov	r0, r3
 801811a:	3718      	adds	r7, #24
 801811c:	46bd      	mov	sp, r7
 801811e:	bdb0      	pop	{r4, r5, r7, pc}

08018120 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_>:
    get(variant<_Types...>& __v)
 8018120:	b580      	push	{r7, lr}
 8018122:	b082      	sub	sp, #8
 8018124:	af00      	add	r7, sp, #0
 8018126:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 8018128:	6878      	ldr	r0, [r7, #4]
 801812a:	f7f9 fb13 	bl	8011754 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv>
 801812e:	4603      	mov	r3, r0
 8018130:	2b00      	cmp	r3, #0
 8018132:	bf14      	ite	ne
 8018134:	2301      	movne	r3, #1
 8018136:	2300      	moveq	r3, #0
 8018138:	b2db      	uxtb	r3, r3
 801813a:	2b00      	cmp	r3, #0
 801813c:	d002      	beq.n	8018144 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_+0x24>
	__throw_bad_variant_access("Unexpected index");
 801813e:	4805      	ldr	r0, [pc, #20]	; (8018154 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_+0x34>)
 8018140:	f7ec f842 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 8018144:	6878      	ldr	r0, [r7, #4]
 8018146:	f7f8 fd4d 	bl	8010be4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801814a:	4603      	mov	r3, r0
    }
 801814c:	4618      	mov	r0, r3
 801814e:	3708      	adds	r7, #8
 8018150:	46bd      	mov	sp, r7
 8018152:	bd80      	pop	{r7, pc}
 8018154:	0802513c 	.word	0x0802513c

08018158 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE7emplaceILj0EJiEEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESF_E4typeEDpT0_EERSK_E4typeEDpOSL_>:
	emplace(_Args&&... __args)
 8018158:	b580      	push	{r7, lr}
 801815a:	b082      	sub	sp, #8
 801815c:	af00      	add	r7, sp, #0
 801815e:	6078      	str	r0, [r7, #4]
 8018160:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8018162:	687b      	ldr	r3, [r7, #4]
 8018164:	4618      	mov	r0, r3
 8018166:	f7f8 fcc6 	bl	8010af6 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801816a:	6838      	ldr	r0, [r7, #0]
 801816c:	f7ef fe76 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8018170:	4603      	mov	r3, r0
 8018172:	4619      	mov	r1, r3
 8018174:	6878      	ldr	r0, [r7, #4]
 8018176:	f000 f9fd 	bl	8018574 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEJiEEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801817a:	6878      	ldr	r0, [r7, #4]
 801817c:	f7ff ffd0 	bl	8018120 <_ZSt3getILj0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_>
 8018180:	4603      	mov	r3, r0
	}
 8018182:	4618      	mov	r0, r3
 8018184:	3708      	adds	r7, #8
 8018186:	46bd      	mov	sp, r7
 8018188:	bd80      	pop	{r7, pc}

0801818a <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801818a:	b480      	push	{r7}
 801818c:	b083      	sub	sp, #12
 801818e:	af00      	add	r7, sp, #0
 8018190:	6078      	str	r0, [r7, #4]
 8018192:	687b      	ldr	r3, [r7, #4]
 8018194:	4618      	mov	r0, r3
 8018196:	370c      	adds	r7, #12
 8018198:	46bd      	mov	sp, r7
 801819a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801819e:	4770      	bx	lr

080181a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS6_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 80181a0:	b580      	push	{r7, lr}
 80181a2:	b082      	sub	sp, #8
 80181a4:	af00      	add	r7, sp, #0
 80181a6:	6078      	str	r0, [r7, #4]
 80181a8:	6039      	str	r1, [r7, #0]
      : _M_impl(__a) { }
 80181aa:	687b      	ldr	r3, [r7, #4]
 80181ac:	6839      	ldr	r1, [r7, #0]
 80181ae:	4618      	mov	r0, r3
 80181b0:	f000 f9ff 	bl	80185b2 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>
 80181b4:	687b      	ldr	r3, [r7, #4]
 80181b6:	4618      	mov	r0, r3
 80181b8:	3708      	adds	r7, #8
 80181ba:	46bd      	mov	sp, r7
 80181bc:	bd80      	pop	{r7, pc}

080181be <_ZNKSt16initializer_listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5beginEv>:
      begin() const noexcept { return _M_array; }
 80181be:	b480      	push	{r7}
 80181c0:	b083      	sub	sp, #12
 80181c2:	af00      	add	r7, sp, #0
 80181c4:	6078      	str	r0, [r7, #4]
 80181c6:	687b      	ldr	r3, [r7, #4]
 80181c8:	681b      	ldr	r3, [r3, #0]
 80181ca:	4618      	mov	r0, r3
 80181cc:	370c      	adds	r7, #12
 80181ce:	46bd      	mov	sp, r7
 80181d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80181d4:	4770      	bx	lr

080181d6 <_ZNKSt16initializer_listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE3endEv>:
      end() const noexcept { return begin() + size(); }
 80181d6:	b590      	push	{r4, r7, lr}
 80181d8:	b083      	sub	sp, #12
 80181da:	af00      	add	r7, sp, #0
 80181dc:	6078      	str	r0, [r7, #4]
 80181de:	6878      	ldr	r0, [r7, #4]
 80181e0:	f7ff ffed 	bl	80181be <_ZNKSt16initializer_listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5beginEv>
 80181e4:	4604      	mov	r4, r0
 80181e6:	6878      	ldr	r0, [r7, #4]
 80181e8:	f000 f9f5 	bl	80185d6 <_ZNKSt16initializer_listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4sizeEv>
 80181ec:	4602      	mov	r2, r0
 80181ee:	4613      	mov	r3, r2
 80181f0:	005b      	lsls	r3, r3, #1
 80181f2:	4413      	add	r3, r2
 80181f4:	00db      	lsls	r3, r3, #3
 80181f6:	4423      	add	r3, r4
 80181f8:	4618      	mov	r0, r3
 80181fa:	370c      	adds	r7, #12
 80181fc:	46bd      	mov	sp, r7
 80181fe:	bd90      	pop	{r4, r7, pc}

08018200 <_ZSt8distanceIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_>:
    distance(_InputIterator __first, _InputIterator __last)
 8018200:	b5b0      	push	{r4, r5, r7, lr}
 8018202:	b082      	sub	sp, #8
 8018204:	af00      	add	r7, sp, #0
 8018206:	6078      	str	r0, [r7, #4]
 8018208:	6039      	str	r1, [r7, #0]
      return std::__distance(__first, __last,
 801820a:	687c      	ldr	r4, [r7, #4]
			     std::__iterator_category(__first));
 801820c:	1d3b      	adds	r3, r7, #4
 801820e:	4618      	mov	r0, r3
 8018210:	f000 f9ed 	bl	80185ee <_ZSt19__iterator_categoryIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_>
      return std::__distance(__first, __last,
 8018214:	462a      	mov	r2, r5
 8018216:	6839      	ldr	r1, [r7, #0]
 8018218:	4620      	mov	r0, r4
 801821a:	f000 f9f3 	bl	8018604 <_ZSt10__distanceIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag>
 801821e:	4603      	mov	r3, r0
    }
 8018220:	4618      	mov	r0, r3
 8018222:	3708      	adds	r7, #8
 8018224:	46bd      	mov	sp, r7
 8018226:	bdb0      	pop	{r4, r5, r7, pc}

08018228 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIPKS5_EEvT_SB_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
 8018228:	b590      	push	{r4, r7, lr}
 801822a:	b087      	sub	sp, #28
 801822c:	af00      	add	r7, sp, #0
 801822e:	60f8      	str	r0, [r7, #12]
 8018230:	60b9      	str	r1, [r7, #8]
 8018232:	607a      	str	r2, [r7, #4]
 8018234:	703b      	strb	r3, [r7, #0]
	  const size_type __n = std::distance(__first, __last);
 8018236:	6879      	ldr	r1, [r7, #4]
 8018238:	68b8      	ldr	r0, [r7, #8]
 801823a:	f7ff ffe1 	bl	8018200 <_ZSt8distanceIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_>
 801823e:	4603      	mov	r3, r0
 8018240:	617b      	str	r3, [r7, #20]
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
 8018242:	68fc      	ldr	r4, [r7, #12]
 8018244:	68fb      	ldr	r3, [r7, #12]
 8018246:	4618      	mov	r0, r3
 8018248:	f7f9 ff96 	bl	8012178 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 801824c:	4603      	mov	r3, r0
 801824e:	4619      	mov	r1, r3
 8018250:	6978      	ldr	r0, [r7, #20]
 8018252:	f000 f9ed 	bl	8018630 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEjRKS6_>
 8018256:	4603      	mov	r3, r0
 8018258:	4619      	mov	r1, r3
 801825a:	4620      	mov	r0, r4
 801825c:	f000 fa10 	bl	8018680 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj>
 8018260:	4602      	mov	r2, r0
	  this->_M_impl._M_start
 8018262:	68fb      	ldr	r3, [r7, #12]
 8018264:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 8018266:	68fb      	ldr	r3, [r7, #12]
 8018268:	6819      	ldr	r1, [r3, #0]
 801826a:	697a      	ldr	r2, [r7, #20]
 801826c:	4613      	mov	r3, r2
 801826e:	005b      	lsls	r3, r3, #1
 8018270:	4413      	add	r3, r2
 8018272:	00db      	lsls	r3, r3, #3
 8018274:	18ca      	adds	r2, r1, r3
 8018276:	68fb      	ldr	r3, [r7, #12]
 8018278:	609a      	str	r2, [r3, #8]
	    std::__uninitialized_copy_a(__first, __last,
 801827a:	68fb      	ldr	r3, [r7, #12]
 801827c:	681c      	ldr	r4, [r3, #0]
					_M_get_Tp_allocator());
 801827e:	68fb      	ldr	r3, [r7, #12]
 8018280:	4618      	mov	r0, r3
 8018282:	f7f9 ff79 	bl	8012178 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 8018286:	4603      	mov	r3, r0
	    std::__uninitialized_copy_a(__first, __last,
 8018288:	4622      	mov	r2, r4
 801828a:	6879      	ldr	r1, [r7, #4]
 801828c:	68b8      	ldr	r0, [r7, #8]
 801828e:	f000 fa0b 	bl	80186a8 <_ZSt22__uninitialized_copy_aIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_S5_ET0_T_SA_S9_RSaIT1_E>
 8018292:	4602      	mov	r2, r0
	  this->_M_impl._M_finish =
 8018294:	68fb      	ldr	r3, [r7, #12]
 8018296:	605a      	str	r2, [r3, #4]
	}
 8018298:	bf00      	nop
 801829a:	371c      	adds	r7, #28
 801829c:	46bd      	mov	sp, r7
 801829e:	bd90      	pop	{r4, r7, pc}

080182a0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_>:
    get(variant<_Types...>& __v)
 80182a0:	b580      	push	{r7, lr}
 80182a2:	b082      	sub	sp, #8
 80182a4:	af00      	add	r7, sp, #0
 80182a6:	6078      	str	r0, [r7, #4]
      if (__v.index() != _Np)
 80182a8:	6878      	ldr	r0, [r7, #4]
 80182aa:	f7f9 fa53 	bl	8011754 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv>
 80182ae:	4603      	mov	r3, r0
 80182b0:	2b04      	cmp	r3, #4
 80182b2:	bf14      	ite	ne
 80182b4:	2301      	movne	r3, #1
 80182b6:	2300      	moveq	r3, #0
 80182b8:	b2db      	uxtb	r3, r3
 80182ba:	2b00      	cmp	r3, #0
 80182bc:	d002      	beq.n	80182c4 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_+0x24>
	__throw_bad_variant_access("Unexpected index");
 80182be:	4805      	ldr	r0, [pc, #20]	; (80182d4 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_+0x34>)
 80182c0:	f7eb ff82 	bl	80041c8 <_ZSt26__throw_bad_variant_accessPKc>
      return __detail::__variant::__get<_Np>(__v);
 80182c4:	6878      	ldr	r0, [r7, #4]
 80182c6:	f7f8 ff21 	bl	801110c <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 80182ca:	4603      	mov	r3, r0
    }
 80182cc:	4618      	mov	r0, r3
 80182ce:	3708      	adds	r7, #8
 80182d0:	46bd      	mov	sp, r7
 80182d2:	bd80      	pop	{r7, pc}
 80182d4:	0802513c 	.word	0x0802513c

080182d8 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80182d8:	b480      	push	{r7}
 80182da:	b083      	sub	sp, #12
 80182dc:	af00      	add	r7, sp, #0
 80182de:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80182e0:	687b      	ldr	r3, [r7, #4]
 80182e2:	4618      	mov	r0, r3
 80182e4:	370c      	adds	r7, #12
 80182e6:	46bd      	mov	sp, r7
 80182e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80182ec:	4770      	bx	lr

080182ee <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSEOS7_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 80182ee:	b590      	push	{r4, r7, lr}
 80182f0:	b085      	sub	sp, #20
 80182f2:	af00      	add	r7, sp, #0
 80182f4:	6078      	str	r0, [r7, #4]
 80182f6:	6039      	str	r1, [r7, #0]
	constexpr bool __move_storage =
 80182f8:	2301      	movs	r3, #1
 80182fa:	73fb      	strb	r3, [r7, #15]
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 80182fc:	6838      	ldr	r0, [r7, #0]
 80182fe:	f000 f9e4 	bl	80186ca <_ZSt4moveIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEONSt16remove_referenceIT_E4typeEOSB_>
 8018302:	4603      	mov	r3, r0
 8018304:	4622      	mov	r2, r4
 8018306:	4619      	mov	r1, r3
 8018308:	6878      	ldr	r0, [r7, #4]
 801830a:	f000 f9e9 	bl	80186e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE>
	return *this;
 801830e:	687b      	ldr	r3, [r7, #4]
      }
 8018310:	4618      	mov	r0, r3
 8018312:	3714      	adds	r7, #20
 8018314:	46bd      	mov	sp, r7
 8018316:	bd90      	pop	{r4, r7, pc}

08018318 <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE7emplaceILj4EJS8_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESF_E4typeEDpT0_EERSK_E4typeEDpOSL_>:
	emplace(_Args&&... __args)
 8018318:	b580      	push	{r7, lr}
 801831a:	b082      	sub	sp, #8
 801831c:	af00      	add	r7, sp, #0
 801831e:	6078      	str	r0, [r7, #4]
 8018320:	6039      	str	r1, [r7, #0]
	      this->_M_reset();
 8018322:	687b      	ldr	r3, [r7, #4]
 8018324:	4618      	mov	r0, r3
 8018326:	f7f8 fbe6 	bl	8010af6 <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEE8_M_resetEv>
	      __variant_construct_by_index<_Np>(*this,
 801832a:	6838      	ldr	r0, [r7, #0]
 801832c:	f7ff ffd4 	bl	80182d8 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 8018330:	4603      	mov	r3, r0
 8018332:	4619      	mov	r1, r3
 8018334:	6878      	ldr	r0, [r7, #4]
 8018336:	f000 fa31 	bl	801879c <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEJS9_EEvRT0_DpOT1_>
	  return std::get<_Np>(*this);
 801833a:	6878      	ldr	r0, [r7, #4]
 801833c:	f7ff ffb0 	bl	80182a0 <_ZSt3getILj4EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSJ_>
 8018340:	4603      	mov	r3, r0
	}
 8018342:	4618      	mov	r0, r3
 8018344:	3708      	adds	r7, #8
 8018346:	46bd      	mov	sp, r7
 8018348:	bd80      	pop	{r7, pc}

0801834a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEEC1Ev>:
 801834a:	b580      	push	{r7, lr}
 801834c:	b082      	sub	sp, #8
 801834e:	af00      	add	r7, sp, #0
 8018350:	6078      	str	r0, [r7, #4]
 8018352:	6878      	ldr	r0, [r7, #4]
 8018354:	f000 fa43 	bl	80187de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>
 8018358:	687b      	ldr	r3, [r7, #4]
 801835a:	4618      	mov	r0, r3
 801835c:	3708      	adds	r7, #8
 801835e:	46bd      	mov	sp, r7
 8018360:	bd80      	pop	{r7, pc}

08018362 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
 8018362:	b480      	push	{r7}
 8018364:	b083      	sub	sp, #12
 8018366:	af00      	add	r7, sp, #0
 8018368:	6078      	str	r0, [r7, #4]
      { }
 801836a:	687b      	ldr	r3, [r7, #4]
 801836c:	4618      	mov	r0, r3
 801836e:	370c      	adds	r7, #12
 8018370:	46bd      	mov	sp, r7
 8018372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018376:	4770      	bx	lr

08018378 <_ZSt7forwardIRA32_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8018378:	b480      	push	{r7}
 801837a:	b083      	sub	sp, #12
 801837c:	af00      	add	r7, sp, #0
 801837e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8018380:	687b      	ldr	r3, [r7, #4]
 8018382:	4618      	mov	r0, r3
 8018384:	370c      	adds	r7, #12
 8018386:	46bd      	mov	sp, r7
 8018388:	f85d 7b04 	ldr.w	r7, [sp], #4
 801838c:	4770      	bx	lr

0801838e <_ZSt7forwardIPFSt7variantIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEifbEESt6vectorIP10ExpressionSaISA_EEEEOT_RNSt16remove_referenceISF_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801838e:	b480      	push	{r7}
 8018390:	b083      	sub	sp, #12
 8018392:	af00      	add	r7, sp, #0
 8018394:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8018396:	687b      	ldr	r3, [r7, #4]
 8018398:	4618      	mov	r0, r3
 801839a:	370c      	adds	r7, #12
 801839c:	46bd      	mov	sp, r7
 801839e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80183a2:	4770      	bx	lr

080183a4 <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEONSt16remove_referenceIT_E4typeEOSK_>:
    move(_Tp&& __t) noexcept
 80183a4:	b480      	push	{r7}
 80183a6:	b083      	sub	sp, #12
 80183a8:	af00      	add	r7, sp, #0
 80183aa:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80183ac:	687b      	ldr	r3, [r7, #4]
 80183ae:	4618      	mov	r0, r3
 80183b0:	370c      	adds	r7, #12
 80183b2:	46bd      	mov	sp, r7
 80183b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80183b8:	4770      	bx	lr

080183ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80183ba:	b5b0      	push	{r4, r5, r7, lr}
 80183bc:	b08e      	sub	sp, #56	; 0x38
 80183be:	af02      	add	r7, sp, #8
 80183c0:	60f8      	str	r0, [r7, #12]
 80183c2:	60b9      	str	r1, [r7, #8]
 80183c4:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 80183c6:	f107 031c 	add.w	r3, r7, #28
 80183ca:	6879      	ldr	r1, [r7, #4]
 80183cc:	4618      	mov	r0, r3
 80183ce:	f000 fa96 	bl	80188fe <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 80183d2:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 80183d4:	f107 0314 	add.w	r3, r7, #20
 80183d8:	68b9      	ldr	r1, [r7, #8]
 80183da:	4618      	mov	r0, r3
 80183dc:	f000 fa0a 	bl	80187f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 80183e0:	69bb      	ldr	r3, [r7, #24]
 80183e2:	2b00      	cmp	r3, #0
 80183e4:	d022      	beq.n	801842c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 80183e6:	f107 0310 	add.w	r3, r7, #16
 80183ea:	68b9      	ldr	r1, [r7, #8]
 80183ec:	4618      	mov	r0, r3
 80183ee:	f000 fa92 	bl	8018916 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>
	  return _Res(_M_insert_(__res.first, __res.second,
 80183f2:	697c      	ldr	r4, [r7, #20]
 80183f4:	69bd      	ldr	r5, [r7, #24]
 80183f6:	6878      	ldr	r0, [r7, #4]
 80183f8:	f000 fa9c 	bl	8018934 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80183fc:	4602      	mov	r2, r0
 80183fe:	f107 0310 	add.w	r3, r7, #16
 8018402:	9300      	str	r3, [sp, #0]
 8018404:	4613      	mov	r3, r2
 8018406:	462a      	mov	r2, r5
 8018408:	4621      	mov	r1, r4
 801840a:	68b8      	ldr	r0, [r7, #8]
 801840c:	f000 fa9d 	bl	801894a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>
 8018410:	4603      	mov	r3, r0
 8018412:	623b      	str	r3, [r7, #32]
		      true);
 8018414:	2301      	movs	r3, #1
 8018416:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 801841a:	f107 0227 	add.w	r2, r7, #39	; 0x27
 801841e:	f107 0320 	add.w	r3, r7, #32
 8018422:	4619      	mov	r1, r3
 8018424:	68f8      	ldr	r0, [r7, #12]
 8018426:	f000 fad9 	bl	80189dc <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
 801842a:	e011      	b.n	8018450 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE16_M_insert_uniqueISH_EES6_ISt17_Rb_tree_iteratorISH_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 801842c:	697a      	ldr	r2, [r7, #20]
 801842e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018432:	4611      	mov	r1, r2
 8018434:	4618      	mov	r0, r3
 8018436:	f7ef ff82 	bl	800833e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 801843a:	2300      	movs	r3, #0
 801843c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8018440:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 8018444:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018448:	4619      	mov	r1, r3
 801844a:	68f8      	ldr	r0, [r7, #12]
 801844c:	f000 fac6 	bl	80189dc <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>
    }
 8018450:	68f8      	ldr	r0, [r7, #12]
 8018452:	3730      	adds	r7, #48	; 0x30
 8018454:	46bd      	mov	sp, r7
 8018456:	bdb0      	pop	{r4, r5, r7, pc}

08018458 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 8018458:	b580      	push	{r7, lr}
 801845a:	b082      	sub	sp, #8
 801845c:	af00      	add	r7, sp, #0
 801845e:	6078      	str	r0, [r7, #4]
 8018460:	6878      	ldr	r0, [r7, #4]
 8018462:	f000 fad4 	bl	8018a0e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>
 8018466:	687b      	ldr	r3, [r7, #4]
 8018468:	4618      	mov	r0, r3
 801846a:	3708      	adds	r7, #8
 801846c:	46bd      	mov	sp, r7
 801846e:	bd80      	pop	{r7, pc}

08018470 <_ZSt7forwardIRA2_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8018470:	b480      	push	{r7}
 8018472:	b083      	sub	sp, #12
 8018474:	af00      	add	r7, sp, #0
 8018476:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8018478:	687b      	ldr	r3, [r7, #4]
 801847a:	4618      	mov	r0, r3
 801847c:	370c      	adds	r7, #12
 801847e:	46bd      	mov	sp, r7
 8018480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018484:	4770      	bx	lr

08018486 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1ERKSH_>:
      _Copy_ctor_base(const _Copy_ctor_base& __rhs)
 8018486:	b580      	push	{r7, lr}
 8018488:	b082      	sub	sp, #8
 801848a:	af00      	add	r7, sp, #0
 801848c:	6078      	str	r0, [r7, #4]
 801848e:	6039      	str	r1, [r7, #0]
      {
 8018490:	687b      	ldr	r3, [r7, #4]
 8018492:	4618      	mov	r0, r3
 8018494:	f000 fad3 	bl	8018a3e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>
	__variant_construct<_Types...>(*this, __rhs);
 8018498:	6839      	ldr	r1, [r7, #0]
 801849a:	6878      	ldr	r0, [r7, #4]
 801849c:	f001 f8da 	bl	8019654 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_>
      }
 80184a0:	687b      	ldr	r3, [r7, #4]
 80184a2:	4618      	mov	r0, r3
 80184a4:	3708      	adds	r7, #8
 80184a6:	46bd      	mov	sp, r7
 80184a8:	bd80      	pop	{r7, pc}

080184aa <_ZSt4moveIRSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEONSt16remove_referenceIT_E4typeEOSC_>:
    move(_Tp&& __t) noexcept
 80184aa:	b480      	push	{r7}
 80184ac:	b083      	sub	sp, #12
 80184ae:	af00      	add	r7, sp, #0
 80184b0:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80184b2:	687b      	ldr	r3, [r7, #4]
 80184b4:	4618      	mov	r0, r3
 80184b6:	370c      	adds	r7, #12
 80184b8:	46bd      	mov	sp, r7
 80184ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80184be:	4770      	bx	lr

080184c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80184c0:	b5b0      	push	{r4, r5, r7, lr}
 80184c2:	b08e      	sub	sp, #56	; 0x38
 80184c4:	af02      	add	r7, sp, #8
 80184c6:	60f8      	str	r0, [r7, #12]
 80184c8:	60b9      	str	r1, [r7, #8]
 80184ca:	607a      	str	r2, [r7, #4]
	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
 80184cc:	f107 031c 	add.w	r3, r7, #28
 80184d0:	6879      	ldr	r1, [r7, #4]
 80184d2:	4618      	mov	r0, r3
 80184d4:	f001 f8db 	bl	801968e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 80184d8:	4602      	mov	r2, r0
      pair<_Base_ptr, _Base_ptr> __res
 80184da:	f107 0314 	add.w	r3, r7, #20
 80184de:	68b9      	ldr	r1, [r7, #8]
 80184e0:	4618      	mov	r0, r3
 80184e2:	f7f8 f86b 	bl	80105bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>
      if (__res.second)
 80184e6:	69bb      	ldr	r3, [r7, #24]
 80184e8:	2b00      	cmp	r3, #0
 80184ea:	d022      	beq.n	8018532 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x72>
	  _Alloc_node __an(*this);
 80184ec:	f107 0310 	add.w	r3, r7, #16
 80184f0:	68b9      	ldr	r1, [r7, #8]
 80184f2:	4618      	mov	r0, r3
 80184f4:	f001 f8d7 	bl	80196a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>
	  return _Res(_M_insert_(__res.first, __res.second,
 80184f8:	697c      	ldr	r4, [r7, #20]
 80184fa:	69bd      	ldr	r5, [r7, #24]
 80184fc:	6878      	ldr	r0, [r7, #4]
 80184fe:	f001 f8e1 	bl	80196c4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8018502:	4602      	mov	r2, r0
 8018504:	f107 0310 	add.w	r3, r7, #16
 8018508:	9300      	str	r3, [sp, #0]
 801850a:	4613      	mov	r3, r2
 801850c:	462a      	mov	r2, r5
 801850e:	4621      	mov	r1, r4
 8018510:	68b8      	ldr	r0, [r7, #8]
 8018512:	f001 f8e2 	bl	80196da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>
 8018516:	4603      	mov	r3, r0
 8018518:	623b      	str	r3, [r7, #32]
		      true);
 801851a:	2301      	movs	r3, #1
 801851c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8018520:	f107 0227 	add.w	r2, r7, #39	; 0x27
 8018524:	f107 0320 	add.w	r3, r7, #32
 8018528:	4619      	mov	r1, r3
 801852a:	68f8      	ldr	r0, [r7, #12]
 801852c:	f001 f91e 	bl	801976c <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
 8018530:	e011      	b.n	8018556 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE16_M_insert_uniqueIS9_EES6_ISt17_Rb_tree_iteratorIS9_EbEOT_+0x96>
      return _Res(iterator(__res.first), false);
 8018532:	697a      	ldr	r2, [r7, #20]
 8018534:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8018538:	4611      	mov	r1, r2
 801853a:	4618      	mov	r0, r3
 801853c:	f7f7 ff3d 	bl	80103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8018540:	2300      	movs	r3, #0
 8018542:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8018546:	f107 022f 	add.w	r2, r7, #47	; 0x2f
 801854a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801854e:	4619      	mov	r1, r3
 8018550:	68f8      	ldr	r0, [r7, #12]
 8018552:	f001 f90b 	bl	801976c <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>
    }
 8018556:	68f8      	ldr	r0, [r7, #12]
 8018558:	3730      	adds	r7, #48	; 0x30
 801855a:	46bd      	mov	sp, r7
 801855c:	bdb0      	pop	{r4, r5, r7, pc}

0801855e <_ZSt7forwardIRA9_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801855e:	b480      	push	{r7}
 8018560:	b083      	sub	sp, #12
 8018562:	af00      	add	r7, sp, #0
 8018564:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8018566:	687b      	ldr	r3, [r7, #4]
 8018568:	4618      	mov	r0, r3
 801856a:	370c      	adds	r7, #12
 801856c:	46bd      	mov	sp, r7
 801856e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018572:	4770      	bx	lr

08018574 <_ZSt28__variant_construct_by_indexILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEJiEEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 8018574:	b590      	push	{r4, r7, lr}
 8018576:	b085      	sub	sp, #20
 8018578:	af00      	add	r7, sp, #0
 801857a:	6078      	str	r0, [r7, #4]
 801857c:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 801857e:	687b      	ldr	r3, [r7, #4]
 8018580:	2200      	movs	r2, #0
 8018582:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 8018584:	6878      	ldr	r0, [r7, #4]
 8018586:	f7f8 fb2d 	bl	8010be4 <_ZNSt8__detail9__variant5__getILj0ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801858a:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 801858c:	6838      	ldr	r0, [r7, #0]
 801858e:	f7ef fc65 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 8018592:	4603      	mov	r3, r0
      ::new ((void*)std::addressof(__storage))
 8018594:	681c      	ldr	r4, [r3, #0]
 8018596:	68f8      	ldr	r0, [r7, #12]
 8018598:	f7f2 faef 	bl	800ab7a <_ZSt9addressofIiEPT_RS0_>
 801859c:	4603      	mov	r3, r0
 801859e:	4619      	mov	r1, r3
 80185a0:	2004      	movs	r0, #4
 80185a2:	f7e8 fd43 	bl	800102c <_ZnwjPv>
 80185a6:	4603      	mov	r3, r0
 80185a8:	601c      	str	r4, [r3, #0]
    }
 80185aa:	bf00      	nop
 80185ac:	3714      	adds	r7, #20
 80185ae:	46bd      	mov	sp, r7
 80185b0:	bd90      	pop	{r4, r7, pc}

080185b2 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 80185b2:	b580      	push	{r7, lr}
 80185b4:	b082      	sub	sp, #8
 80185b6:	af00      	add	r7, sp, #0
 80185b8:	6078      	str	r0, [r7, #4]
 80185ba:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 80185bc:	6839      	ldr	r1, [r7, #0]
 80185be:	6878      	ldr	r0, [r7, #4]
 80185c0:	f001 f8ed 	bl	801979e <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
 80185c4:	687b      	ldr	r3, [r7, #4]
 80185c6:	4618      	mov	r0, r3
 80185c8:	f001 f8f7 	bl	80197ba <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>
	{ }
 80185cc:	687b      	ldr	r3, [r7, #4]
 80185ce:	4618      	mov	r0, r3
 80185d0:	3708      	adds	r7, #8
 80185d2:	46bd      	mov	sp, r7
 80185d4:	bd80      	pop	{r7, pc}

080185d6 <_ZNKSt16initializer_listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4sizeEv>:
      size() const noexcept { return _M_len; }
 80185d6:	b480      	push	{r7}
 80185d8:	b083      	sub	sp, #12
 80185da:	af00      	add	r7, sp, #0
 80185dc:	6078      	str	r0, [r7, #4]
 80185de:	687b      	ldr	r3, [r7, #4]
 80185e0:	685b      	ldr	r3, [r3, #4]
 80185e2:	4618      	mov	r0, r3
 80185e4:	370c      	adds	r7, #12
 80185e6:	46bd      	mov	sp, r7
 80185e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80185ec:	4770      	bx	lr

080185ee <_ZSt19__iterator_categoryIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_>:
    __iterator_category(const _Iter&)
 80185ee:	b480      	push	{r7}
 80185f0:	b083      	sub	sp, #12
 80185f2:	af00      	add	r7, sp, #0
 80185f4:	6078      	str	r0, [r7, #4]
    { return typename iterator_traits<_Iter>::iterator_category(); }
 80185f6:	4618      	mov	r0, r3
 80185f8:	370c      	adds	r7, #12
 80185fa:	46bd      	mov	sp, r7
 80185fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018600:	4770      	bx	lr
	...

08018604 <_ZSt10__distanceIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
 8018604:	b480      	push	{r7}
 8018606:	b085      	sub	sp, #20
 8018608:	af00      	add	r7, sp, #0
 801860a:	60f8      	str	r0, [r7, #12]
 801860c:	60b9      	str	r1, [r7, #8]
 801860e:	713a      	strb	r2, [r7, #4]
      return __last - __first;
 8018610:	68ba      	ldr	r2, [r7, #8]
 8018612:	68fb      	ldr	r3, [r7, #12]
 8018614:	1ad3      	subs	r3, r2, r3
 8018616:	10db      	asrs	r3, r3, #3
 8018618:	4a04      	ldr	r2, [pc, #16]	; (801862c <_ZSt10__distanceIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag+0x28>)
 801861a:	fb02 f303 	mul.w	r3, r2, r3
    }
 801861e:	4618      	mov	r0, r3
 8018620:	3714      	adds	r7, #20
 8018622:	46bd      	mov	sp, r7
 8018624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018628:	4770      	bx	lr
 801862a:	bf00      	nop
 801862c:	aaaaaaab 	.word	0xaaaaaaab

08018630 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEjRKS6_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
 8018630:	b590      	push	{r4, r7, lr}
 8018632:	b085      	sub	sp, #20
 8018634:	af00      	add	r7, sp, #0
 8018636:	6078      	str	r0, [r7, #4]
 8018638:	6039      	str	r1, [r7, #0]
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 801863a:	f107 030c 	add.w	r3, r7, #12
 801863e:	6839      	ldr	r1, [r7, #0]
 8018640:	4618      	mov	r0, r3
 8018642:	f001 f8ac 	bl	801979e <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
 8018646:	f107 030c 	add.w	r3, r7, #12
 801864a:	4618      	mov	r0, r3
 801864c:	f001 f8ca 	bl	80197e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>
 8018650:	4602      	mov	r2, r0
 8018652:	687b      	ldr	r3, [r7, #4]
 8018654:	4293      	cmp	r3, r2
 8018656:	bf8c      	ite	hi
 8018658:	2301      	movhi	r3, #1
 801865a:	2300      	movls	r3, #0
 801865c:	b2dc      	uxtb	r4, r3
 801865e:	f107 030c 	add.w	r3, r7, #12
 8018662:	4618      	mov	r0, r3
 8018664:	f7f9 fe39 	bl	80122da <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
 8018668:	2c00      	cmp	r4, #0
 801866a:	d002      	beq.n	8018672 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEjRKS6_+0x42>
	  __throw_length_error(
 801866c:	4803      	ldr	r0, [pc, #12]	; (801867c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEjRKS6_+0x4c>)
 801866e:	f007 fe99 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
	return __n;
 8018672:	687b      	ldr	r3, [r7, #4]
      }
 8018674:	4618      	mov	r0, r3
 8018676:	3714      	adds	r7, #20
 8018678:	46bd      	mov	sp, r7
 801867a:	bd90      	pop	{r4, r7, pc}
 801867c:	08025150 	.word	0x08025150

08018680 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj>:
      _M_allocate(size_t __n)
 8018680:	b580      	push	{r7, lr}
 8018682:	b082      	sub	sp, #8
 8018684:	af00      	add	r7, sp, #0
 8018686:	6078      	str	r0, [r7, #4]
 8018688:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801868a:	683b      	ldr	r3, [r7, #0]
 801868c:	2b00      	cmp	r3, #0
 801868e:	d006      	beq.n	801869e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj+0x1e>
 8018690:	687b      	ldr	r3, [r7, #4]
 8018692:	6839      	ldr	r1, [r7, #0]
 8018694:	4618      	mov	r0, r3
 8018696:	f001 f8c1 	bl	801981c <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_j>
 801869a:	4603      	mov	r3, r0
 801869c:	e000      	b.n	80186a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj+0x20>
 801869e:	2300      	movs	r3, #0
      }
 80186a0:	4618      	mov	r0, r3
 80186a2:	3708      	adds	r7, #8
 80186a4:	46bd      	mov	sp, r7
 80186a6:	bd80      	pop	{r7, pc}

080186a8 <_ZSt22__uninitialized_copy_aIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_S5_ET0_T_SA_S9_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 80186a8:	b580      	push	{r7, lr}
 80186aa:	b084      	sub	sp, #16
 80186ac:	af00      	add	r7, sp, #0
 80186ae:	60f8      	str	r0, [r7, #12]
 80186b0:	60b9      	str	r1, [r7, #8]
 80186b2:	607a      	str	r2, [r7, #4]
 80186b4:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 80186b6:	687a      	ldr	r2, [r7, #4]
 80186b8:	68b9      	ldr	r1, [r7, #8]
 80186ba:	68f8      	ldr	r0, [r7, #12]
 80186bc:	f001 f8bd 	bl	801983a <_ZSt18uninitialized_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET0_T_SA_S9_>
 80186c0:	4603      	mov	r3, r0
 80186c2:	4618      	mov	r0, r3
 80186c4:	3710      	adds	r7, #16
 80186c6:	46bd      	mov	sp, r7
 80186c8:	bd80      	pop	{r7, pc}

080186ca <_ZSt4moveIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEONSt16remove_referenceIT_E4typeEOSB_>:
    move(_Tp&& __t) noexcept
 80186ca:	b480      	push	{r7}
 80186cc:	b083      	sub	sp, #12
 80186ce:	af00      	add	r7, sp, #0
 80186d0:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80186d2:	687b      	ldr	r3, [r7, #4]
 80186d4:	4618      	mov	r0, r3
 80186d6:	370c      	adds	r7, #12
 80186d8:	46bd      	mov	sp, r7
 80186da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80186de:	4770      	bx	lr

080186e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_M_move_assignEOS7_St17integral_constantIbLb1EE>:
    private:
      // Constant-time move assignment when source object's memory can be
      // moved, either because the source's allocator will move too
      // or because the allocators are equal.
      void
      _M_move_assign(vector&& __x, true_type) noexcept
 80186e0:	b590      	push	{r4, r7, lr}
 80186e2:	b089      	sub	sp, #36	; 0x24
 80186e4:	af00      	add	r7, sp, #0
 80186e6:	60f8      	str	r0, [r7, #12]
 80186e8:	60b9      	str	r1, [r7, #8]
 80186ea:	713a      	strb	r2, [r7, #4]
      {
	vector __tmp(get_allocator());
 80186ec:	68fa      	ldr	r2, [r7, #12]
 80186ee:	f107 031c 	add.w	r3, r7, #28
 80186f2:	4611      	mov	r1, r2
 80186f4:	4618      	mov	r0, r3
 80186f6:	f001 f8b2 	bl	801985e <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13get_allocatorEv>
 80186fa:	f107 021c 	add.w	r2, r7, #28
 80186fe:	f107 0310 	add.w	r3, r7, #16
 8018702:	4611      	mov	r1, r2
 8018704:	4618      	mov	r0, r3
 8018706:	f001 f8bb 	bl	8019880 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS6_>
 801870a:	f107 031c 	add.w	r3, r7, #28
 801870e:	4618      	mov	r0, r3
 8018710:	f7f9 fde3 	bl	80122da <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
 8018714:	68fb      	ldr	r3, [r7, #12]
 8018716:	68ba      	ldr	r2, [r7, #8]
 8018718:	4611      	mov	r1, r2
 801871a:	4618      	mov	r0, r3
 801871c:	f001 f8bf 	bl	801989e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
 8018720:	68ba      	ldr	r2, [r7, #8]
 8018722:	f107 0310 	add.w	r3, r7, #16
 8018726:	4611      	mov	r1, r2
 8018728:	4618      	mov	r0, r3
 801872a:	f001 f8b8 	bl	801989e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
 801872e:	68fb      	ldr	r3, [r7, #12]
 8018730:	4618      	mov	r0, r3
 8018732:	f7f9 fd21 	bl	8012178 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 8018736:	4604      	mov	r4, r0
 8018738:	68bb      	ldr	r3, [r7, #8]
 801873a:	4618      	mov	r0, r3
 801873c:	f7f9 fd1c 	bl	8012178 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 8018740:	4603      	mov	r3, r0
 8018742:	4619      	mov	r1, r3
 8018744:	4620      	mov	r0, r4
 8018746:	f001 f8c8 	bl	80198da <_ZSt15__alloc_on_moveISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_S8_>
	vector __tmp(get_allocator());
 801874a:	f107 0310 	add.w	r3, r7, #16
 801874e:	4618      	mov	r0, r3
 8018750:	f7f9 fc89 	bl	8012066 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
      }
 8018754:	bf00      	nop
 8018756:	3724      	adds	r7, #36	; 0x24
 8018758:	46bd      	mov	sp, r7
 801875a:	bd90      	pop	{r4, r7, pc}

0801875c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>:
      _Vector_base(_Vector_base&&) = default;
 801875c:	b580      	push	{r7, lr}
 801875e:	b082      	sub	sp, #8
 8018760:	af00      	add	r7, sp, #0
 8018762:	6078      	str	r0, [r7, #4]
 8018764:	6039      	str	r1, [r7, #0]
 8018766:	687b      	ldr	r3, [r7, #4]
 8018768:	683a      	ldr	r2, [r7, #0]
 801876a:	4611      	mov	r1, r2
 801876c:	4618      	mov	r0, r3
 801876e:	f001 f8ce 	bl	801990e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1EOS8_>
 8018772:	687b      	ldr	r3, [r7, #4]
 8018774:	4618      	mov	r0, r3
 8018776:	3708      	adds	r7, #8
 8018778:	46bd      	mov	sp, r7
 801877a:	bd80      	pop	{r7, pc}

0801877c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>:
      vector(vector&&) noexcept = default;
 801877c:	b580      	push	{r7, lr}
 801877e:	b082      	sub	sp, #8
 8018780:	af00      	add	r7, sp, #0
 8018782:	6078      	str	r0, [r7, #4]
 8018784:	6039      	str	r1, [r7, #0]
 8018786:	687b      	ldr	r3, [r7, #4]
 8018788:	683a      	ldr	r2, [r7, #0]
 801878a:	4611      	mov	r1, r2
 801878c:	4618      	mov	r0, r3
 801878e:	f7ff ffe5 	bl	801875c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>
 8018792:	687b      	ldr	r3, [r7, #4]
 8018794:	4618      	mov	r0, r3
 8018796:	3708      	adds	r7, #8
 8018798:	46bd      	mov	sp, r7
 801879a:	bd80      	pop	{r7, pc}

0801879c <_ZSt28__variant_construct_by_indexILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEJS9_EEvRT0_DpOT1_>:
    void __variant_construct_by_index(_Variant& __v, _Args&&... __args)
 801879c:	b590      	push	{r4, r7, lr}
 801879e:	b085      	sub	sp, #20
 80187a0:	af00      	add	r7, sp, #0
 80187a2:	6078      	str	r0, [r7, #4]
 80187a4:	6039      	str	r1, [r7, #0]
      __v._M_index = _Np;
 80187a6:	687b      	ldr	r3, [r7, #4]
 80187a8:	2204      	movs	r2, #4
 80187aa:	761a      	strb	r2, [r3, #24]
      auto&& __storage = __detail::__variant::__get<_Np>(__v);
 80187ac:	6878      	ldr	r0, [r7, #4]
 80187ae:	f7f8 fcad 	bl	801110c <_ZNSt8__detail9__variant5__getILj4ERSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 80187b2:	60f8      	str	r0, [r7, #12]
	  (std::forward<_Args>(__args)...);
 80187b4:	6838      	ldr	r0, [r7, #0]
 80187b6:	f7ff fd8f 	bl	80182d8 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 80187ba:	4604      	mov	r4, r0
      ::new ((void*)std::addressof(__storage))
 80187bc:	68f8      	ldr	r0, [r7, #12]
 80187be:	f001 f89a 	bl	80198f6 <_ZSt9addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>
 80187c2:	4603      	mov	r3, r0
 80187c4:	4619      	mov	r1, r3
 80187c6:	200c      	movs	r0, #12
 80187c8:	f7e8 fc30 	bl	800102c <_ZnwjPv>
 80187cc:	4603      	mov	r3, r0
 80187ce:	4621      	mov	r1, r4
 80187d0:	4618      	mov	r0, r3
 80187d2:	f7ff ffd3 	bl	801877c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>
    }
 80187d6:	bf00      	nop
 80187d8:	3714      	adds	r7, #20
 80187da:	46bd      	mov	sp, r7
 80187dc:	bd90      	pop	{r4, r7, pc}

080187de <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEEC1Ev>:
 80187de:	b480      	push	{r7}
 80187e0:	b083      	sub	sp, #12
 80187e2:	af00      	add	r7, sp, #0
 80187e4:	6078      	str	r0, [r7, #4]
 80187e6:	687b      	ldr	r3, [r7, #4]
 80187e8:	4618      	mov	r0, r3
 80187ea:	370c      	adds	r7, #12
 80187ec:	46bd      	mov	sp, r7
 80187ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80187f2:	4770      	bx	lr

080187f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80187f4:	b590      	push	{r4, r7, lr}
 80187f6:	b08b      	sub	sp, #44	; 0x2c
 80187f8:	af00      	add	r7, sp, #0
 80187fa:	60f8      	str	r0, [r7, #12]
 80187fc:	60b9      	str	r1, [r7, #8]
 80187fe:	607a      	str	r2, [r7, #4]
      _Link_type __x = _M_begin();
 8018800:	68b8      	ldr	r0, [r7, #8]
 8018802:	f7ef fb74 	bl	8007eee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_M_beginEv>
 8018806:	4603      	mov	r3, r0
 8018808:	61bb      	str	r3, [r7, #24]
      _Base_ptr __y = _M_end();
 801880a:	68b8      	ldr	r0, [r7, #8]
 801880c:	f7ef fd3a 	bl	8008284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 8018810:	4603      	mov	r3, r0
 8018812:	617b      	str	r3, [r7, #20]
      bool __comp = true;
 8018814:	2301      	movs	r3, #1
 8018816:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      while (__x != 0)
 801881a:	69bb      	ldr	r3, [r7, #24]
 801881c:	2b00      	cmp	r3, #0
 801881e:	d020      	beq.n	8018862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6e>
	  __y = __x;
 8018820:	69bb      	ldr	r3, [r7, #24]
 8018822:	617b      	str	r3, [r7, #20]
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
 8018824:	68bc      	ldr	r4, [r7, #8]
 8018826:	69bb      	ldr	r3, [r7, #24]
 8018828:	4618      	mov	r0, r3
 801882a:	f7ef fea5 	bl	8008578 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt13_Rb_tree_nodeISH_E>
 801882e:	4603      	mov	r3, r0
 8018830:	461a      	mov	r2, r3
 8018832:	6879      	ldr	r1, [r7, #4]
 8018834:	4620      	mov	r0, r4
 8018836:	f7ea fbaf 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801883a:	4603      	mov	r3, r0
 801883c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	  __x = __comp ? _S_left(__x) : _S_right(__x);
 8018840:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8018844:	2b00      	cmp	r3, #0
 8018846:	d005      	beq.n	8018854 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x60>
 8018848:	69bb      	ldr	r3, [r7, #24]
 801884a:	4618      	mov	r0, r3
 801884c:	f7ef fcfd 	bl	800824a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE7_S_leftEPSt18_Rb_tree_node_base>
 8018850:	4603      	mov	r3, r0
 8018852:	e004      	b.n	801885e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x6a>
 8018854:	69bb      	ldr	r3, [r7, #24]
 8018856:	4618      	mov	r0, r3
 8018858:	f7ef fceb 	bl	8008232 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE8_S_rightEPSt18_Rb_tree_node_base>
 801885c:	4603      	mov	r3, r0
 801885e:	61bb      	str	r3, [r7, #24]
      while (__x != 0)
 8018860:	e7db      	b.n	801881a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x26>
      iterator __j = iterator(__y);
 8018862:	697a      	ldr	r2, [r7, #20]
 8018864:	f107 0310 	add.w	r3, r7, #16
 8018868:	4611      	mov	r1, r2
 801886a:	4618      	mov	r0, r3
 801886c:	f7ef fd67 	bl	800833e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
 8018870:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8018874:	2b00      	cmp	r3, #0
 8018876:	d01d      	beq.n	80188b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xc0>
	  if (__j == begin())
 8018878:	68b8      	ldr	r0, [r7, #8]
 801887a:	f001 f863 	bl	8019944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>
 801887e:	4603      	mov	r3, r0
 8018880:	61fb      	str	r3, [r7, #28]
 8018882:	f107 021c 	add.w	r2, r7, #28
 8018886:	f107 0310 	add.w	r3, r7, #16
 801888a:	4611      	mov	r1, r2
 801888c:	4618      	mov	r0, r3
 801888e:	f7ef fd36 	bl	80082fe <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEESK_>
 8018892:	4603      	mov	r3, r0
 8018894:	2b00      	cmp	r3, #0
 8018896:	d008      	beq.n	80188aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xb6>
	    return _Res(__x, __y);
 8018898:	f107 0214 	add.w	r2, r7, #20
 801889c:	f107 0318 	add.w	r3, r7, #24
 80188a0:	4619      	mov	r1, r3
 80188a2:	68f8      	ldr	r0, [r7, #12]
 80188a4:	f001 f85f 	bl	8019966 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJSA_ifbEESt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 80188a8:	e025      	b.n	80188f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
	    --__j;
 80188aa:	f107 0310 	add.w	r3, r7, #16
 80188ae:	4618      	mov	r0, r3
 80188b0:	f001 f872 	bl	8019998 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
 80188b4:	68bc      	ldr	r4, [r7, #8]
 80188b6:	693b      	ldr	r3, [r7, #16]
 80188b8:	4618      	mov	r0, r3
 80188ba:	f7ef fd34 	bl	8008326 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 80188be:	4603      	mov	r3, r0
 80188c0:	687a      	ldr	r2, [r7, #4]
 80188c2:	4619      	mov	r1, r3
 80188c4:	4620      	mov	r0, r4
 80188c6:	f7ea fb67 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 80188ca:	4603      	mov	r3, r0
 80188cc:	2b00      	cmp	r3, #0
 80188ce:	d008      	beq.n	80188e2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0xee>
	return _Res(__x, __y);
 80188d0:	f107 0214 	add.w	r2, r7, #20
 80188d4:	f107 0318 	add.w	r3, r7, #24
 80188d8:	4619      	mov	r1, r3
 80188da:	68f8      	ldr	r0, [r7, #12]
 80188dc:	f001 f843 	bl	8019966 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJSA_ifbEESt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>
 80188e0:	e009      	b.n	80188f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE24_M_get_insert_unique_posERS7_+0x102>
      return _Res(__j._M_node, 0);
 80188e2:	2300      	movs	r3, #0
 80188e4:	623b      	str	r3, [r7, #32]
 80188e6:	f107 0220 	add.w	r2, r7, #32
 80188ea:	f107 0310 	add.w	r3, r7, #16
 80188ee:	4619      	mov	r1, r3
 80188f0:	68f8      	ldr	r0, [r7, #12]
 80188f2:	f7ea fab3 	bl	8002e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>
    }
 80188f6:	68f8      	ldr	r0, [r7, #12]
 80188f8:	372c      	adds	r7, #44	; 0x2c
 80188fa:	46bd      	mov	sp, r7
 80188fc:	bd90      	pop	{r4, r7, pc}

080188fe <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEclERSH_>:
      operator()(_Pair& __x) const
 80188fe:	b480      	push	{r7}
 8018900:	b083      	sub	sp, #12
 8018902:	af00      	add	r7, sp, #0
 8018904:	6078      	str	r0, [r7, #4]
 8018906:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8018908:	683b      	ldr	r3, [r7, #0]
 801890a:	4618      	mov	r0, r3
 801890c:	370c      	adds	r7, #12
 801890e:	46bd      	mov	sp, r7
 8018910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018914:	4770      	bx	lr

08018916 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeC1ERSN_>:
	_Alloc_node(_Rb_tree& __t)
 8018916:	b480      	push	{r7}
 8018918:	b083      	sub	sp, #12
 801891a:	af00      	add	r7, sp, #0
 801891c:	6078      	str	r0, [r7, #4]
 801891e:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 8018920:	687b      	ldr	r3, [r7, #4]
 8018922:	683a      	ldr	r2, [r7, #0]
 8018924:	601a      	str	r2, [r3, #0]
 8018926:	687b      	ldr	r3, [r7, #4]
 8018928:	4618      	mov	r0, r3
 801892a:	370c      	adds	r7, #12
 801892c:	46bd      	mov	sp, r7
 801892e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018932:	4770      	bx	lr

08018934 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8018934:	b480      	push	{r7}
 8018936:	b083      	sub	sp, #12
 8018938:	af00      	add	r7, sp, #0
 801893a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801893c:	687b      	ldr	r3, [r7, #4]
 801893e:	4618      	mov	r0, r3
 8018940:	370c      	adds	r7, #12
 8018942:	46bd      	mov	sp, r7
 8018944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018948:	4770      	bx	lr

0801894a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 801894a:	b5b0      	push	{r4, r5, r7, lr}
 801894c:	b088      	sub	sp, #32
 801894e:	af00      	add	r7, sp, #0
 8018950:	60f8      	str	r0, [r7, #12]
 8018952:	60b9      	str	r1, [r7, #8]
 8018954:	607a      	str	r2, [r7, #4]
 8018956:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 8018958:	68bb      	ldr	r3, [r7, #8]
 801895a:	2b00      	cmp	r3, #0
 801895c:	d11a      	bne.n	8018994 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 801895e:	68f8      	ldr	r0, [r7, #12]
 8018960:	f7ef fc90 	bl	8008284 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_M_endEv>
 8018964:	4602      	mov	r2, r0
 8018966:	687b      	ldr	r3, [r7, #4]
 8018968:	4293      	cmp	r3, r2
 801896a:	d013      	beq.n	8018994 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 801896c:	68fc      	ldr	r4, [r7, #12]
 801896e:	f107 0310 	add.w	r3, r7, #16
 8018972:	6839      	ldr	r1, [r7, #0]
 8018974:	4618      	mov	r0, r3
 8018976:	f7ff ffc2 	bl	80188fe <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEclERSH_>
 801897a:	4605      	mov	r5, r0
 801897c:	6878      	ldr	r0, [r7, #4]
 801897e:	f7ef fcd2 	bl	8008326 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8018982:	4603      	mov	r3, r0
 8018984:	461a      	mov	r2, r3
 8018986:	4629      	mov	r1, r5
 8018988:	4620      	mov	r0, r4
 801898a:	f7ea fb05 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801898e:	4603      	mov	r3, r0
 8018990:	2b00      	cmp	r3, #0
 8018992:	d001      	beq.n	8018998 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x4e>
 8018994:	2301      	movs	r3, #1
 8018996:	e000      	b.n	801899a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE10_M_insert_ISH_NSN_11_Alloc_nodeEEESt17_Rb_tree_iteratorISH_EPSt18_Rb_tree_node_baseST_OT_RT0_+0x50>
 8018998:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801899a:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801899c:	6838      	ldr	r0, [r7, #0]
 801899e:	f7ff ffc9 	bl	8018934 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80189a2:	4603      	mov	r3, r0
 80189a4:	4619      	mov	r1, r3
 80189a6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80189a8:	f001 f807 	bl	80199ba <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>
 80189ac:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 80189ae:	68fb      	ldr	r3, [r7, #12]
 80189b0:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 80189b2:	7ff8      	ldrb	r0, [r7, #31]
 80189b4:	687a      	ldr	r2, [r7, #4]
 80189b6:	69b9      	ldr	r1, [r7, #24]
 80189b8:	f007 fc8f 	bl	80202da <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 80189bc:	68fb      	ldr	r3, [r7, #12]
 80189be:	695b      	ldr	r3, [r3, #20]
 80189c0:	1c5a      	adds	r2, r3, #1
 80189c2:	68fb      	ldr	r3, [r7, #12]
 80189c4:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 80189c6:	f107 0314 	add.w	r3, r7, #20
 80189ca:	69b9      	ldr	r1, [r7, #24]
 80189cc:	4618      	mov	r0, r3
 80189ce:	f7ef fcb6 	bl	800833e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 80189d2:	697b      	ldr	r3, [r7, #20]
      }
 80189d4:	4618      	mov	r0, r3
 80189d6:	3720      	adds	r7, #32
 80189d8:	46bd      	mov	sp, r7
 80189da:	bdb0      	pop	{r4, r5, r7, pc}

080189dc <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEbEC1ISI_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 80189dc:	b580      	push	{r7, lr}
 80189de:	b084      	sub	sp, #16
 80189e0:	af00      	add	r7, sp, #0
 80189e2:	60f8      	str	r0, [r7, #12]
 80189e4:	60b9      	str	r1, [r7, #8]
 80189e6:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 80189e8:	68b8      	ldr	r0, [r7, #8]
 80189ea:	f000 fffa 	bl	80199e2 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 80189ee:	4602      	mov	r2, r0
 80189f0:	68fb      	ldr	r3, [r7, #12]
 80189f2:	6812      	ldr	r2, [r2, #0]
 80189f4:	601a      	str	r2, [r3, #0]
 80189f6:	6878      	ldr	r0, [r7, #4]
 80189f8:	f7f5 ff53 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 80189fc:	4603      	mov	r3, r0
 80189fe:	781a      	ldrb	r2, [r3, #0]
 8018a00:	68fb      	ldr	r3, [r7, #12]
 8018a02:	711a      	strb	r2, [r3, #4]
 8018a04:	68fb      	ldr	r3, [r7, #12]
 8018a06:	4618      	mov	r0, r3
 8018a08:	3710      	adds	r7, #16
 8018a0a:	46bd      	mov	sp, r7
 8018a0c:	bd80      	pop	{r7, pc}

08018a0e <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEC1Ev>:
 8018a0e:	b480      	push	{r7}
 8018a10:	b083      	sub	sp, #12
 8018a12:	af00      	add	r7, sp, #0
 8018a14:	6078      	str	r0, [r7, #4]
 8018a16:	687b      	ldr	r3, [r7, #4]
 8018a18:	4618      	mov	r0, r3
 8018a1a:	370c      	adds	r7, #12
 8018a1c:	46bd      	mov	sp, r7
 8018a1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018a22:	4770      	bx	lr

08018a24 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8018a24:	b580      	push	{r7, lr}
 8018a26:	b082      	sub	sp, #8
 8018a28:	af00      	add	r7, sp, #0
 8018a2a:	6078      	str	r0, [r7, #4]
 8018a2c:	687b      	ldr	r3, [r7, #4]
 8018a2e:	4618      	mov	r0, r3
 8018a30:	f000 ffe2 	bl	80199f8 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>
 8018a34:	687b      	ldr	r3, [r7, #4]
 8018a36:	4618      	mov	r0, r3
 8018a38:	3708      	adds	r7, #8
 8018a3a:	46bd      	mov	sp, r7
 8018a3c:	bd80      	pop	{r7, pc}

08018a3e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>:
      constexpr _Variant_storage() : _M_index(variant_npos) { }
 8018a3e:	b580      	push	{r7, lr}
 8018a40:	b082      	sub	sp, #8
 8018a42:	af00      	add	r7, sp, #0
 8018a44:	6078      	str	r0, [r7, #4]
 8018a46:	687b      	ldr	r3, [r7, #4]
 8018a48:	4618      	mov	r0, r3
 8018a4a:	f7ff ffeb 	bl	8018a24 <_ZNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>
 8018a4e:	687b      	ldr	r3, [r7, #4]
 8018a50:	22ff      	movs	r2, #255	; 0xff
 8018a52:	761a      	strb	r2, [r3, #24]
 8018a54:	687b      	ldr	r3, [r7, #4]
 8018a56:	4618      	mov	r0, r3
 8018a58:	3708      	adds	r7, #8
 8018a5a:	46bd      	mov	sp, r7
 8018a5c:	bd80      	pop	{r7, pc}

08018a5e <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S8_SA_SC_SE_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 8018a5e:	b480      	push	{r7}
 8018a60:	b083      	sub	sp, #12
 8018a62:	af00      	add	r7, sp, #0
 8018a64:	6078      	str	r0, [r7, #4]
	    return static_cast<const variant<_Types...>&>(__rhs);
 8018a66:	687b      	ldr	r3, [r7, #4]
    }
 8018a68:	4618      	mov	r0, r3
 8018a6a:	370c      	adds	r7, #12
 8018a6c:	46bd      	mov	sp, r7
 8018a6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018a72:	4770      	bx	lr

08018a74 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8018a74:	b580      	push	{r7, lr}
 8018a76:	b082      	sub	sp, #8
 8018a78:	af00      	add	r7, sp, #0
 8018a7a:	7138      	strb	r0, [r7, #4]
 8018a7c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8018a7e:	6838      	ldr	r0, [r7, #0]
 8018a80:	f000 ffe8 	bl	8019a54 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018a84:	4603      	mov	r3, r0
 8018a86:	4618      	mov	r0, r3
 8018a88:	f7f1 ff86 	bl	800a998 <_ZNKRSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 8018a8c:	4603      	mov	r3, r0
 8018a8e:	4618      	mov	r0, r3
 8018a90:	3708      	adds	r7, #8
 8018a92:	46bd      	mov	sp, r7
 8018a94:	bd80      	pop	{r7, pc}

08018a96 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8018a96:	b590      	push	{r4, r7, lr}
 8018a98:	b083      	sub	sp, #12
 8018a9a:	af00      	add	r7, sp, #0
 8018a9c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8018a9e:	6878      	ldr	r0, [r7, #4]
 8018aa0:	f000 ffcd 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018aa4:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8018aa6:	4619      	mov	r1, r3
 8018aa8:	4620      	mov	r0, r4
 8018aaa:	f7ff ffe3 	bl	8018a74 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8018aae:	4603      	mov	r3, r0
    }
 8018ab0:	4618      	mov	r0, r3
 8018ab2:	370c      	adds	r7, #12
 8018ab4:	46bd      	mov	sp, r7
 8018ab6:	bd90      	pop	{r4, r7, pc}

08018ab8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ES10_EEDcSQ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8018ab8:	b580      	push	{r7, lr}
 8018aba:	b082      	sub	sp, #8
 8018abc:	af00      	add	r7, sp, #0
 8018abe:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8018ac0:	6878      	ldr	r0, [r7, #4]
 8018ac2:	f000 ffbc 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018ac6:	4603      	mov	r3, r0
 8018ac8:	4618      	mov	r0, r3
 8018aca:	f7ff ffe4 	bl	8018a96 <_ZNSt8__detail9__variant5__getILj0ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8018ace:	4603      	mov	r3, r0
	}
 8018ad0:	4618      	mov	r0, r3
 8018ad2:	3708      	adds	r7, #8
 8018ad4:	46bd      	mov	sp, r7
 8018ad6:	bd80      	pop	{r7, pc}

08018ad8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESW_S10_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8018ad8:	b5b0      	push	{r4, r5, r7, lr}
 8018ada:	b082      	sub	sp, #8
 8018adc:	af00      	add	r7, sp, #0
 8018ade:	6078      	str	r0, [r7, #4]
 8018ae0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8018ae2:	6878      	ldr	r0, [r7, #4]
 8018ae4:	f000 ffa0 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018ae8:	4604      	mov	r4, r0
 8018aea:	6838      	ldr	r0, [r7, #0]
 8018aec:	f000 ffa7 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018af0:	4603      	mov	r3, r0
 8018af2:	4618      	mov	r0, r3
 8018af4:	f7ff ffe0 	bl	8018ab8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ES10_EEDcSQ_>
 8018af8:	4603      	mov	r3, r0
 8018afa:	4619      	mov	r1, r3
 8018afc:	4620      	mov	r0, r4
 8018afe:	f000 ffb4 	bl	8019a6a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>
		std::forward<_Variants>(__vars))...);
 8018b02:	462b      	mov	r3, r5
      }
 8018b04:	4618      	mov	r0, r3
 8018b06:	3708      	adds	r7, #8
 8018b08:	46bd      	mov	sp, r7
 8018b0a:	bdb0      	pop	{r4, r5, r7, pc}

08018b0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESW_S10_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8018b0c:	b5b0      	push	{r4, r5, r7, lr}
 8018b0e:	b082      	sub	sp, #8
 8018b10:	af00      	add	r7, sp, #0
 8018b12:	6078      	str	r0, [r7, #4]
 8018b14:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8018b16:	6878      	ldr	r0, [r7, #4]
 8018b18:	f000 ff86 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018b1c:	4604      	mov	r4, r0
 8018b1e:	6838      	ldr	r0, [r7, #0]
 8018b20:	f000 ff8d 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018b24:	4603      	mov	r3, r0
 8018b26:	4619      	mov	r1, r3
 8018b28:	4620      	mov	r0, r4
 8018b2a:	f7ff ffd5 	bl	8018ad8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8018b2e:	462b      	mov	r3, r5
      }
 8018b30:	4618      	mov	r0, r3
 8018b32:	3708      	adds	r7, #8
 8018b34:	46bd      	mov	sp, r7
 8018b36:	bdb0      	pop	{r4, r5, r7, pc}

08018b38 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESW_S10_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8018b38:	b5b0      	push	{r4, r5, r7, lr}
 8018b3a:	b082      	sub	sp, #8
 8018b3c:	af00      	add	r7, sp, #0
 8018b3e:	6078      	str	r0, [r7, #4]
 8018b40:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8018b42:	6878      	ldr	r0, [r7, #4]
 8018b44:	f000 ff70 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018b48:	4604      	mov	r4, r0
 8018b4a:	6838      	ldr	r0, [r7, #0]
 8018b4c:	f000 ff77 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018b50:	4603      	mov	r3, r0
 8018b52:	4619      	mov	r1, r3
 8018b54:	4620      	mov	r0, r4
 8018b56:	f7ff ffd9 	bl	8018b0c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8018b5a:	462b      	mov	r3, r5
      }
 8018b5c:	4618      	mov	r0, r3
 8018b5e:	3708      	adds	r7, #8
 8018b60:	46bd      	mov	sp, r7
 8018b62:	bdb0      	pop	{r4, r5, r7, pc}

08018b64 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8018b64:	b580      	push	{r7, lr}
 8018b66:	b082      	sub	sp, #8
 8018b68:	af00      	add	r7, sp, #0
 8018b6a:	7138      	strb	r0, [r7, #4]
 8018b6c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8018b6e:	6838      	ldr	r0, [r7, #0]
 8018b70:	f000 ff92 	bl	8019a98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018b74:	4603      	mov	r3, r0
 8018b76:	4618      	mov	r0, r3
 8018b78:	f7f1 ff3b 	bl	800a9f2 <_ZNKRSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 8018b7c:	4603      	mov	r3, r0
 8018b7e:	4618      	mov	r0, r3
 8018b80:	3708      	adds	r7, #8
 8018b82:	46bd      	mov	sp, r7
 8018b84:	bd80      	pop	{r7, pc}

08018b86 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018b86:	b590      	push	{r4, r7, lr}
 8018b88:	b083      	sub	sp, #12
 8018b8a:	af00      	add	r7, sp, #0
 8018b8c:	7138      	strb	r0, [r7, #4]
 8018b8e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018b90:	6838      	ldr	r0, [r7, #0]
 8018b92:	f000 ff5f 	bl	8019a54 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018b96:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018b98:	4619      	mov	r1, r3
 8018b9a:	4620      	mov	r0, r4
 8018b9c:	f7ff ffe2 	bl	8018b64 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8018ba0:	4603      	mov	r3, r0
    }
 8018ba2:	4618      	mov	r0, r3
 8018ba4:	370c      	adds	r7, #12
 8018ba6:	46bd      	mov	sp, r7
 8018ba8:	bd90      	pop	{r4, r7, pc}

08018baa <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8018baa:	b590      	push	{r4, r7, lr}
 8018bac:	b083      	sub	sp, #12
 8018bae:	af00      	add	r7, sp, #0
 8018bb0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8018bb2:	6878      	ldr	r0, [r7, #4]
 8018bb4:	f000 ff43 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018bb8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8018bba:	4619      	mov	r1, r3
 8018bbc:	4620      	mov	r0, r4
 8018bbe:	f7ff ffe2 	bl	8018b86 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018bc2:	4603      	mov	r3, r0
    }
 8018bc4:	4618      	mov	r0, r3
 8018bc6:	370c      	adds	r7, #12
 8018bc8:	46bd      	mov	sp, r7
 8018bca:	bd90      	pop	{r4, r7, pc}

08018bcc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ES10_EEDcSQ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8018bcc:	b580      	push	{r7, lr}
 8018bce:	b082      	sub	sp, #8
 8018bd0:	af00      	add	r7, sp, #0
 8018bd2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8018bd4:	6878      	ldr	r0, [r7, #4]
 8018bd6:	f000 ff32 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018bda:	4603      	mov	r3, r0
 8018bdc:	4618      	mov	r0, r3
 8018bde:	f7ff ffe4 	bl	8018baa <_ZNSt8__detail9__variant5__getILj1ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8018be2:	4603      	mov	r3, r0
	}
 8018be4:	4618      	mov	r0, r3
 8018be6:	3708      	adds	r7, #8
 8018be8:	46bd      	mov	sp, r7
 8018bea:	bd80      	pop	{r7, pc}

08018bec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESW_S10_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8018bec:	b5b0      	push	{r4, r5, r7, lr}
 8018bee:	b082      	sub	sp, #8
 8018bf0:	af00      	add	r7, sp, #0
 8018bf2:	6078      	str	r0, [r7, #4]
 8018bf4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8018bf6:	6878      	ldr	r0, [r7, #4]
 8018bf8:	f000 ff16 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018bfc:	4604      	mov	r4, r0
 8018bfe:	6838      	ldr	r0, [r7, #0]
 8018c00:	f000 ff1d 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018c04:	4603      	mov	r3, r0
 8018c06:	4618      	mov	r0, r3
 8018c08:	f7ff ffe0 	bl	8018bcc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ES10_EEDcSQ_>
 8018c0c:	4603      	mov	r3, r0
 8018c0e:	4619      	mov	r1, r3
 8018c10:	4620      	mov	r0, r4
 8018c12:	f000 ff4c 	bl	8019aae <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>
		std::forward<_Variants>(__vars))...);
 8018c16:	462b      	mov	r3, r5
      }
 8018c18:	4618      	mov	r0, r3
 8018c1a:	3708      	adds	r7, #8
 8018c1c:	46bd      	mov	sp, r7
 8018c1e:	bdb0      	pop	{r4, r5, r7, pc}

08018c20 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESW_S10_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8018c20:	b5b0      	push	{r4, r5, r7, lr}
 8018c22:	b082      	sub	sp, #8
 8018c24:	af00      	add	r7, sp, #0
 8018c26:	6078      	str	r0, [r7, #4]
 8018c28:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8018c2a:	6878      	ldr	r0, [r7, #4]
 8018c2c:	f000 fefc 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018c30:	4604      	mov	r4, r0
 8018c32:	6838      	ldr	r0, [r7, #0]
 8018c34:	f000 ff03 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018c38:	4603      	mov	r3, r0
 8018c3a:	4619      	mov	r1, r3
 8018c3c:	4620      	mov	r0, r4
 8018c3e:	f7ff ffd5 	bl	8018bec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8018c42:	462b      	mov	r3, r5
      }
 8018c44:	4618      	mov	r0, r3
 8018c46:	3708      	adds	r7, #8
 8018c48:	46bd      	mov	sp, r7
 8018c4a:	bdb0      	pop	{r4, r5, r7, pc}

08018c4c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESW_S10_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8018c4c:	b5b0      	push	{r4, r5, r7, lr}
 8018c4e:	b082      	sub	sp, #8
 8018c50:	af00      	add	r7, sp, #0
 8018c52:	6078      	str	r0, [r7, #4]
 8018c54:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8018c56:	6878      	ldr	r0, [r7, #4]
 8018c58:	f000 fee6 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018c5c:	4604      	mov	r4, r0
 8018c5e:	6838      	ldr	r0, [r7, #0]
 8018c60:	f000 feed 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018c64:	4603      	mov	r3, r0
 8018c66:	4619      	mov	r1, r3
 8018c68:	4620      	mov	r0, r4
 8018c6a:	f7ff ffd9 	bl	8018c20 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8018c6e:	462b      	mov	r3, r5
      }
 8018c70:	4618      	mov	r0, r3
 8018c72:	3708      	adds	r7, #8
 8018c74:	46bd      	mov	sp, r7
 8018c76:	bdb0      	pop	{r4, r5, r7, pc}

08018c78 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8018c78:	b580      	push	{r7, lr}
 8018c7a:	b082      	sub	sp, #8
 8018c7c:	af00      	add	r7, sp, #0
 8018c7e:	7138      	strb	r0, [r7, #4]
 8018c80:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8018c82:	6838      	ldr	r0, [r7, #0]
 8018c84:	f000 ff2a 	bl	8019adc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018c88:	4603      	mov	r3, r0
 8018c8a:	4618      	mov	r0, r3
 8018c8c:	f7f1 fede 	bl	800aa4c <_ZNKRSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 8018c90:	4603      	mov	r3, r0
 8018c92:	4618      	mov	r0, r3
 8018c94:	3708      	adds	r7, #8
 8018c96:	46bd      	mov	sp, r7
 8018c98:	bd80      	pop	{r7, pc}

08018c9a <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018c9a:	b590      	push	{r4, r7, lr}
 8018c9c:	b083      	sub	sp, #12
 8018c9e:	af00      	add	r7, sp, #0
 8018ca0:	7138      	strb	r0, [r7, #4]
 8018ca2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018ca4:	6838      	ldr	r0, [r7, #0]
 8018ca6:	f000 fef7 	bl	8019a98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018caa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018cac:	4619      	mov	r1, r3
 8018cae:	4620      	mov	r0, r4
 8018cb0:	f7ff ffe2 	bl	8018c78 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8018cb4:	4603      	mov	r3, r0
    }
 8018cb6:	4618      	mov	r0, r3
 8018cb8:	370c      	adds	r7, #12
 8018cba:	46bd      	mov	sp, r7
 8018cbc:	bd90      	pop	{r4, r7, pc}

08018cbe <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018cbe:	b590      	push	{r4, r7, lr}
 8018cc0:	b083      	sub	sp, #12
 8018cc2:	af00      	add	r7, sp, #0
 8018cc4:	7138      	strb	r0, [r7, #4]
 8018cc6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018cc8:	6838      	ldr	r0, [r7, #0]
 8018cca:	f000 fec3 	bl	8019a54 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018cce:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018cd0:	4619      	mov	r1, r3
 8018cd2:	4620      	mov	r0, r4
 8018cd4:	f7ff ffe1 	bl	8018c9a <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018cd8:	4603      	mov	r3, r0
    }
 8018cda:	4618      	mov	r0, r3
 8018cdc:	370c      	adds	r7, #12
 8018cde:	46bd      	mov	sp, r7
 8018ce0:	bd90      	pop	{r4, r7, pc}

08018ce2 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8018ce2:	b590      	push	{r4, r7, lr}
 8018ce4:	b083      	sub	sp, #12
 8018ce6:	af00      	add	r7, sp, #0
 8018ce8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8018cea:	6878      	ldr	r0, [r7, #4]
 8018cec:	f000 fea7 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018cf0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8018cf2:	4619      	mov	r1, r3
 8018cf4:	4620      	mov	r0, r4
 8018cf6:	f7ff ffe2 	bl	8018cbe <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018cfa:	4603      	mov	r3, r0
    }
 8018cfc:	4618      	mov	r0, r3
 8018cfe:	370c      	adds	r7, #12
 8018d00:	46bd      	mov	sp, r7
 8018d02:	bd90      	pop	{r4, r7, pc}

08018d04 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ES10_EEDcSQ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8018d04:	b580      	push	{r7, lr}
 8018d06:	b082      	sub	sp, #8
 8018d08:	af00      	add	r7, sp, #0
 8018d0a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8018d0c:	6878      	ldr	r0, [r7, #4]
 8018d0e:	f000 fe96 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018d12:	4603      	mov	r3, r0
 8018d14:	4618      	mov	r0, r3
 8018d16:	f7ff ffe4 	bl	8018ce2 <_ZNSt8__detail9__variant5__getILj2ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8018d1a:	4603      	mov	r3, r0
	}
 8018d1c:	4618      	mov	r0, r3
 8018d1e:	3708      	adds	r7, #8
 8018d20:	46bd      	mov	sp, r7
 8018d22:	bd80      	pop	{r7, pc}

08018d24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESW_S10_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8018d24:	b5b0      	push	{r4, r5, r7, lr}
 8018d26:	b082      	sub	sp, #8
 8018d28:	af00      	add	r7, sp, #0
 8018d2a:	6078      	str	r0, [r7, #4]
 8018d2c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8018d2e:	6878      	ldr	r0, [r7, #4]
 8018d30:	f000 fe7a 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018d34:	4604      	mov	r4, r0
 8018d36:	6838      	ldr	r0, [r7, #0]
 8018d38:	f000 fe81 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018d3c:	4603      	mov	r3, r0
 8018d3e:	4618      	mov	r0, r3
 8018d40:	f7ff ffe0 	bl	8018d04 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ES10_EEDcSQ_>
 8018d44:	4603      	mov	r3, r0
 8018d46:	4619      	mov	r1, r3
 8018d48:	4620      	mov	r0, r4
 8018d4a:	f000 fed2 	bl	8019af2 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>
		std::forward<_Variants>(__vars))...);
 8018d4e:	462b      	mov	r3, r5
      }
 8018d50:	4618      	mov	r0, r3
 8018d52:	3708      	adds	r7, #8
 8018d54:	46bd      	mov	sp, r7
 8018d56:	bdb0      	pop	{r4, r5, r7, pc}

08018d58 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESW_S10_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8018d58:	b5b0      	push	{r4, r5, r7, lr}
 8018d5a:	b082      	sub	sp, #8
 8018d5c:	af00      	add	r7, sp, #0
 8018d5e:	6078      	str	r0, [r7, #4]
 8018d60:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8018d62:	6878      	ldr	r0, [r7, #4]
 8018d64:	f000 fe60 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018d68:	4604      	mov	r4, r0
 8018d6a:	6838      	ldr	r0, [r7, #0]
 8018d6c:	f000 fe67 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018d70:	4603      	mov	r3, r0
 8018d72:	4619      	mov	r1, r3
 8018d74:	4620      	mov	r0, r4
 8018d76:	f7ff ffd5 	bl	8018d24 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8018d7a:	462b      	mov	r3, r5
      }
 8018d7c:	4618      	mov	r0, r3
 8018d7e:	3708      	adds	r7, #8
 8018d80:	46bd      	mov	sp, r7
 8018d82:	bdb0      	pop	{r4, r5, r7, pc}

08018d84 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESW_S10_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8018d84:	b5b0      	push	{r4, r5, r7, lr}
 8018d86:	b082      	sub	sp, #8
 8018d88:	af00      	add	r7, sp, #0
 8018d8a:	6078      	str	r0, [r7, #4]
 8018d8c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8018d8e:	6878      	ldr	r0, [r7, #4]
 8018d90:	f000 fe4a 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018d94:	4604      	mov	r4, r0
 8018d96:	6838      	ldr	r0, [r7, #0]
 8018d98:	f000 fe51 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018d9c:	4603      	mov	r3, r0
 8018d9e:	4619      	mov	r1, r3
 8018da0:	4620      	mov	r0, r4
 8018da2:	f7ff ffd9 	bl	8018d58 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8018da6:	462b      	mov	r3, r5
      }
 8018da8:	4618      	mov	r0, r3
 8018daa:	3708      	adds	r7, #8
 8018dac:	46bd      	mov	sp, r7
 8018dae:	bdb0      	pop	{r4, r5, r7, pc}

08018db0 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8018db0:	b580      	push	{r7, lr}
 8018db2:	b082      	sub	sp, #8
 8018db4:	af00      	add	r7, sp, #0
 8018db6:	7138      	strb	r0, [r7, #4]
 8018db8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8018dba:	6838      	ldr	r0, [r7, #0]
 8018dbc:	f000 feb0 	bl	8019b20 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018dc0:	4603      	mov	r3, r0
 8018dc2:	4618      	mov	r0, r3
 8018dc4:	f7f1 fdb9 	bl	800a93a <_ZNKRSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 8018dc8:	4603      	mov	r3, r0
 8018dca:	4618      	mov	r0, r3
 8018dcc:	3708      	adds	r7, #8
 8018dce:	46bd      	mov	sp, r7
 8018dd0:	bd80      	pop	{r7, pc}

08018dd2 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018dd2:	b590      	push	{r4, r7, lr}
 8018dd4:	b083      	sub	sp, #12
 8018dd6:	af00      	add	r7, sp, #0
 8018dd8:	7138      	strb	r0, [r7, #4]
 8018dda:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018ddc:	6838      	ldr	r0, [r7, #0]
 8018dde:	f000 fe7d 	bl	8019adc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018de2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018de4:	4619      	mov	r1, r3
 8018de6:	4620      	mov	r0, r4
 8018de8:	f7ff ffe2 	bl	8018db0 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8018dec:	4603      	mov	r3, r0
    }
 8018dee:	4618      	mov	r0, r3
 8018df0:	370c      	adds	r7, #12
 8018df2:	46bd      	mov	sp, r7
 8018df4:	bd90      	pop	{r4, r7, pc}

08018df6 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018df6:	b590      	push	{r4, r7, lr}
 8018df8:	b083      	sub	sp, #12
 8018dfa:	af00      	add	r7, sp, #0
 8018dfc:	7138      	strb	r0, [r7, #4]
 8018dfe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018e00:	6838      	ldr	r0, [r7, #0]
 8018e02:	f000 fe49 	bl	8019a98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018e06:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018e08:	4619      	mov	r1, r3
 8018e0a:	4620      	mov	r0, r4
 8018e0c:	f7ff ffe1 	bl	8018dd2 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018e10:	4603      	mov	r3, r0
    }
 8018e12:	4618      	mov	r0, r3
 8018e14:	370c      	adds	r7, #12
 8018e16:	46bd      	mov	sp, r7
 8018e18:	bd90      	pop	{r4, r7, pc}

08018e1a <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018e1a:	b590      	push	{r4, r7, lr}
 8018e1c:	b083      	sub	sp, #12
 8018e1e:	af00      	add	r7, sp, #0
 8018e20:	7138      	strb	r0, [r7, #4]
 8018e22:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018e24:	6838      	ldr	r0, [r7, #0]
 8018e26:	f000 fe15 	bl	8019a54 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018e2a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018e2c:	4619      	mov	r1, r3
 8018e2e:	4620      	mov	r0, r4
 8018e30:	f7ff ffe1 	bl	8018df6 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018e34:	4603      	mov	r3, r0
    }
 8018e36:	4618      	mov	r0, r3
 8018e38:	370c      	adds	r7, #12
 8018e3a:	46bd      	mov	sp, r7
 8018e3c:	bd90      	pop	{r4, r7, pc}

08018e3e <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8018e3e:	b590      	push	{r4, r7, lr}
 8018e40:	b083      	sub	sp, #12
 8018e42:	af00      	add	r7, sp, #0
 8018e44:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8018e46:	6878      	ldr	r0, [r7, #4]
 8018e48:	f000 fdf9 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018e4c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8018e4e:	4619      	mov	r1, r3
 8018e50:	4620      	mov	r0, r4
 8018e52:	f7ff ffe2 	bl	8018e1a <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018e56:	4603      	mov	r3, r0
    }
 8018e58:	4618      	mov	r0, r3
 8018e5a:	370c      	adds	r7, #12
 8018e5c:	46bd      	mov	sp, r7
 8018e5e:	bd90      	pop	{r4, r7, pc}

08018e60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ES10_EEDcSQ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8018e60:	b580      	push	{r7, lr}
 8018e62:	b082      	sub	sp, #8
 8018e64:	af00      	add	r7, sp, #0
 8018e66:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8018e68:	6878      	ldr	r0, [r7, #4]
 8018e6a:	f000 fde8 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018e6e:	4603      	mov	r3, r0
 8018e70:	4618      	mov	r0, r3
 8018e72:	f7ff ffe4 	bl	8018e3e <_ZNSt8__detail9__variant5__getILj3ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8018e76:	4603      	mov	r3, r0
	}
 8018e78:	4618      	mov	r0, r3
 8018e7a:	3708      	adds	r7, #8
 8018e7c:	46bd      	mov	sp, r7
 8018e7e:	bd80      	pop	{r7, pc}

08018e80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESW_S10_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8018e80:	b5b0      	push	{r4, r5, r7, lr}
 8018e82:	b082      	sub	sp, #8
 8018e84:	af00      	add	r7, sp, #0
 8018e86:	6078      	str	r0, [r7, #4]
 8018e88:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8018e8a:	6878      	ldr	r0, [r7, #4]
 8018e8c:	f000 fdcc 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018e90:	4604      	mov	r4, r0
 8018e92:	6838      	ldr	r0, [r7, #0]
 8018e94:	f000 fdd3 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018e98:	4603      	mov	r3, r0
 8018e9a:	4618      	mov	r0, r3
 8018e9c:	f7ff ffe0 	bl	8018e60 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ES10_EEDcSQ_>
 8018ea0:	4603      	mov	r3, r0
 8018ea2:	4619      	mov	r1, r3
 8018ea4:	4620      	mov	r0, r4
 8018ea6:	f000 fe46 	bl	8019b36 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>
		std::forward<_Variants>(__vars))...);
 8018eaa:	462b      	mov	r3, r5
      }
 8018eac:	4618      	mov	r0, r3
 8018eae:	3708      	adds	r7, #8
 8018eb0:	46bd      	mov	sp, r7
 8018eb2:	bdb0      	pop	{r4, r5, r7, pc}

08018eb4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESW_S10_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8018eb4:	b5b0      	push	{r4, r5, r7, lr}
 8018eb6:	b082      	sub	sp, #8
 8018eb8:	af00      	add	r7, sp, #0
 8018eba:	6078      	str	r0, [r7, #4]
 8018ebc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8018ebe:	6878      	ldr	r0, [r7, #4]
 8018ec0:	f000 fdb2 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018ec4:	4604      	mov	r4, r0
 8018ec6:	6838      	ldr	r0, [r7, #0]
 8018ec8:	f000 fdb9 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018ecc:	4603      	mov	r3, r0
 8018ece:	4619      	mov	r1, r3
 8018ed0:	4620      	mov	r0, r4
 8018ed2:	f7ff ffd5 	bl	8018e80 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8018ed6:	462b      	mov	r3, r5
      }
 8018ed8:	4618      	mov	r0, r3
 8018eda:	3708      	adds	r7, #8
 8018edc:	46bd      	mov	sp, r7
 8018ede:	bdb0      	pop	{r4, r5, r7, pc}

08018ee0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESW_S10_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8018ee0:	b5b0      	push	{r4, r5, r7, lr}
 8018ee2:	b082      	sub	sp, #8
 8018ee4:	af00      	add	r7, sp, #0
 8018ee6:	6078      	str	r0, [r7, #4]
 8018ee8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 8018eea:	6878      	ldr	r0, [r7, #4]
 8018eec:	f000 fd9c 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8018ef0:	4604      	mov	r4, r0
 8018ef2:	6838      	ldr	r0, [r7, #0]
 8018ef4:	f000 fda3 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018ef8:	4603      	mov	r3, r0
 8018efa:	4619      	mov	r1, r3
 8018efc:	4620      	mov	r0, r4
 8018efe:	f7ff ffd9 	bl	8018eb4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8018f02:	462b      	mov	r3, r5
      }
 8018f04:	4618      	mov	r0, r3
 8018f06:	3708      	adds	r7, #8
 8018f08:	46bd      	mov	sp, r7
 8018f0a:	bdb0      	pop	{r4, r5, r7, pc}

08018f0c <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8018f0c:	b580      	push	{r7, lr}
 8018f0e:	b082      	sub	sp, #8
 8018f10:	af00      	add	r7, sp, #0
 8018f12:	7138      	strb	r0, [r7, #4]
 8018f14:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8018f16:	6838      	ldr	r0, [r7, #0]
 8018f18:	f000 fe24 	bl	8019b64 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018f1c:	4603      	mov	r3, r0
 8018f1e:	4618      	mov	r0, r3
 8018f20:	f000 fe2b 	bl	8019b7a <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>
 8018f24:	4603      	mov	r3, r0
 8018f26:	4618      	mov	r0, r3
 8018f28:	3708      	adds	r7, #8
 8018f2a:	46bd      	mov	sp, r7
 8018f2c:	bd80      	pop	{r7, pc}

08018f2e <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018f2e:	b590      	push	{r4, r7, lr}
 8018f30:	b083      	sub	sp, #12
 8018f32:	af00      	add	r7, sp, #0
 8018f34:	7138      	strb	r0, [r7, #4]
 8018f36:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018f38:	6838      	ldr	r0, [r7, #0]
 8018f3a:	f000 fdf1 	bl	8019b20 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018f3e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018f40:	4619      	mov	r1, r3
 8018f42:	4620      	mov	r0, r4
 8018f44:	f7ff ffe2 	bl	8018f0c <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8018f48:	4603      	mov	r3, r0
    }
 8018f4a:	4618      	mov	r0, r3
 8018f4c:	370c      	adds	r7, #12
 8018f4e:	46bd      	mov	sp, r7
 8018f50:	bd90      	pop	{r4, r7, pc}

08018f52 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018f52:	b590      	push	{r4, r7, lr}
 8018f54:	b083      	sub	sp, #12
 8018f56:	af00      	add	r7, sp, #0
 8018f58:	7138      	strb	r0, [r7, #4]
 8018f5a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018f5c:	6838      	ldr	r0, [r7, #0]
 8018f5e:	f000 fdbd 	bl	8019adc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018f62:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018f64:	4619      	mov	r1, r3
 8018f66:	4620      	mov	r0, r4
 8018f68:	f7ff ffe1 	bl	8018f2e <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018f6c:	4603      	mov	r3, r0
    }
 8018f6e:	4618      	mov	r0, r3
 8018f70:	370c      	adds	r7, #12
 8018f72:	46bd      	mov	sp, r7
 8018f74:	bd90      	pop	{r4, r7, pc}

08018f76 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018f76:	b590      	push	{r4, r7, lr}
 8018f78:	b083      	sub	sp, #12
 8018f7a:	af00      	add	r7, sp, #0
 8018f7c:	7138      	strb	r0, [r7, #4]
 8018f7e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018f80:	6838      	ldr	r0, [r7, #0]
 8018f82:	f000 fd89 	bl	8019a98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018f86:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018f88:	4619      	mov	r1, r3
 8018f8a:	4620      	mov	r0, r4
 8018f8c:	f7ff ffe1 	bl	8018f52 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018f90:	4603      	mov	r3, r0
    }
 8018f92:	4618      	mov	r0, r3
 8018f94:	370c      	adds	r7, #12
 8018f96:	46bd      	mov	sp, r7
 8018f98:	bd90      	pop	{r4, r7, pc}

08018f9a <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8018f9a:	b590      	push	{r4, r7, lr}
 8018f9c:	b083      	sub	sp, #12
 8018f9e:	af00      	add	r7, sp, #0
 8018fa0:	7138      	strb	r0, [r7, #4]
 8018fa2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8018fa4:	6838      	ldr	r0, [r7, #0]
 8018fa6:	f000 fd55 	bl	8019a54 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8018faa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8018fac:	4619      	mov	r1, r3
 8018fae:	4620      	mov	r0, r4
 8018fb0:	f7ff ffe1 	bl	8018f76 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018fb4:	4603      	mov	r3, r0
    }
 8018fb6:	4618      	mov	r0, r3
 8018fb8:	370c      	adds	r7, #12
 8018fba:	46bd      	mov	sp, r7
 8018fbc:	bd90      	pop	{r4, r7, pc}

08018fbe <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8018fbe:	b590      	push	{r4, r7, lr}
 8018fc0:	b083      	sub	sp, #12
 8018fc2:	af00      	add	r7, sp, #0
 8018fc4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8018fc6:	6878      	ldr	r0, [r7, #4]
 8018fc8:	f000 fd39 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018fcc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8018fce:	4619      	mov	r1, r3
 8018fd0:	4620      	mov	r0, r4
 8018fd2:	f7ff ffe2 	bl	8018f9a <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8018fd6:	4603      	mov	r3, r0
    }
 8018fd8:	4618      	mov	r0, r3
 8018fda:	370c      	adds	r7, #12
 8018fdc:	46bd      	mov	sp, r7
 8018fde:	bd90      	pop	{r4, r7, pc}

08018fe0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ES10_EEDcSQ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8018fe0:	b580      	push	{r7, lr}
 8018fe2:	b082      	sub	sp, #8
 8018fe4:	af00      	add	r7, sp, #0
 8018fe6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8018fe8:	6878      	ldr	r0, [r7, #4]
 8018fea:	f000 fd28 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8018fee:	4603      	mov	r3, r0
 8018ff0:	4618      	mov	r0, r3
 8018ff2:	f7ff ffe4 	bl	8018fbe <_ZNSt8__detail9__variant5__getILj4ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8018ff6:	4603      	mov	r3, r0
	}
 8018ff8:	4618      	mov	r0, r3
 8018ffa:	3708      	adds	r7, #8
 8018ffc:	46bd      	mov	sp, r7
 8018ffe:	bd80      	pop	{r7, pc}

08019000 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESW_S10_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8019000:	b5b0      	push	{r4, r5, r7, lr}
 8019002:	b082      	sub	sp, #8
 8019004:	af00      	add	r7, sp, #0
 8019006:	6078      	str	r0, [r7, #4]
 8019008:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801900a:	6878      	ldr	r0, [r7, #4]
 801900c:	f000 fd0c 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019010:	4604      	mov	r4, r0
 8019012:	6838      	ldr	r0, [r7, #0]
 8019014:	f000 fd13 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8019018:	4603      	mov	r3, r0
 801901a:	4618      	mov	r0, r3
 801901c:	f7ff ffe0 	bl	8018fe0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ES10_EEDcSQ_>
 8019020:	4603      	mov	r3, r0
 8019022:	4619      	mov	r1, r3
 8019024:	4620      	mov	r0, r4
 8019026:	f000 fdb5 	bl	8019b94 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSB_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>
		std::forward<_Variants>(__vars))...);
 801902a:	462b      	mov	r3, r5
      }
 801902c:	4618      	mov	r0, r3
 801902e:	3708      	adds	r7, #8
 8019030:	46bd      	mov	sp, r7
 8019032:	bdb0      	pop	{r4, r5, r7, pc}

08019034 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESW_S10_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8019034:	b5b0      	push	{r4, r5, r7, lr}
 8019036:	b082      	sub	sp, #8
 8019038:	af00      	add	r7, sp, #0
 801903a:	6078      	str	r0, [r7, #4]
 801903c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801903e:	6878      	ldr	r0, [r7, #4]
 8019040:	f000 fcf2 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019044:	4604      	mov	r4, r0
 8019046:	6838      	ldr	r0, [r7, #0]
 8019048:	f000 fcf9 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801904c:	4603      	mov	r3, r0
 801904e:	4619      	mov	r1, r3
 8019050:	4620      	mov	r0, r4
 8019052:	f7ff ffd5 	bl	8019000 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8019056:	462b      	mov	r3, r5
      }
 8019058:	4618      	mov	r0, r3
 801905a:	3708      	adds	r7, #8
 801905c:	46bd      	mov	sp, r7
 801905e:	bdb0      	pop	{r4, r5, r7, pc}

08019060 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESW_S10_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8019060:	b5b0      	push	{r4, r5, r7, lr}
 8019062:	b082      	sub	sp, #8
 8019064:	af00      	add	r7, sp, #0
 8019066:	6078      	str	r0, [r7, #4]
 8019068:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801906a:	6878      	ldr	r0, [r7, #4]
 801906c:	f000 fcdc 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019070:	4604      	mov	r4, r0
 8019072:	6838      	ldr	r0, [r7, #0]
 8019074:	f000 fce3 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8019078:	4603      	mov	r3, r0
 801907a:	4619      	mov	r1, r3
 801907c:	4620      	mov	r0, r4
 801907e:	f7ff ffd9 	bl	8019034 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8019082:	462b      	mov	r3, r5
      }
 8019084:	4618      	mov	r0, r3
 8019086:	3708      	adds	r7, #8
 8019088:	46bd      	mov	sp, r7
 801908a:	bdb0      	pop	{r4, r5, r7, pc}

0801908c <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801908c:	b580      	push	{r7, lr}
 801908e:	b082      	sub	sp, #8
 8019090:	af00      	add	r7, sp, #0
 8019092:	7138      	strb	r0, [r7, #4]
 8019094:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8019096:	6838      	ldr	r0, [r7, #0]
 8019098:	f000 fd93 	bl	8019bc2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISD_E4typeE>
 801909c:	4603      	mov	r3, r0
 801909e:	4618      	mov	r0, r3
 80190a0:	f000 fd9a 	bl	8019bd8 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorIiSaIiEELb0EE6_M_getEv>
 80190a4:	4603      	mov	r3, r0
 80190a6:	4618      	mov	r0, r3
 80190a8:	3708      	adds	r7, #8
 80190aa:	46bd      	mov	sp, r7
 80190ac:	bd80      	pop	{r7, pc}

080190ae <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80190ae:	b590      	push	{r4, r7, lr}
 80190b0:	b083      	sub	sp, #12
 80190b2:	af00      	add	r7, sp, #0
 80190b4:	7138      	strb	r0, [r7, #4]
 80190b6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80190b8:	6838      	ldr	r0, [r7, #0]
 80190ba:	f000 fd53 	bl	8019b64 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 80190be:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80190c0:	4619      	mov	r1, r3
 80190c2:	4620      	mov	r0, r4
 80190c4:	f7ff ffe2 	bl	801908c <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 80190c8:	4603      	mov	r3, r0
    }
 80190ca:	4618      	mov	r0, r3
 80190cc:	370c      	adds	r7, #12
 80190ce:	46bd      	mov	sp, r7
 80190d0:	bd90      	pop	{r4, r7, pc}

080190d2 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80190d2:	b590      	push	{r4, r7, lr}
 80190d4:	b083      	sub	sp, #12
 80190d6:	af00      	add	r7, sp, #0
 80190d8:	7138      	strb	r0, [r7, #4]
 80190da:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80190dc:	6838      	ldr	r0, [r7, #0]
 80190de:	f000 fd1f 	bl	8019b20 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 80190e2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80190e4:	4619      	mov	r1, r3
 80190e6:	4620      	mov	r0, r4
 80190e8:	f7ff ffe1 	bl	80190ae <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80190ec:	4603      	mov	r3, r0
    }
 80190ee:	4618      	mov	r0, r3
 80190f0:	370c      	adds	r7, #12
 80190f2:	46bd      	mov	sp, r7
 80190f4:	bd90      	pop	{r4, r7, pc}

080190f6 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80190f6:	b590      	push	{r4, r7, lr}
 80190f8:	b083      	sub	sp, #12
 80190fa:	af00      	add	r7, sp, #0
 80190fc:	7138      	strb	r0, [r7, #4]
 80190fe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8019100:	6838      	ldr	r0, [r7, #0]
 8019102:	f000 fceb 	bl	8019adc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8019106:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8019108:	4619      	mov	r1, r3
 801910a:	4620      	mov	r0, r4
 801910c:	f7ff ffe1 	bl	80190d2 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8019110:	4603      	mov	r3, r0
    }
 8019112:	4618      	mov	r0, r3
 8019114:	370c      	adds	r7, #12
 8019116:	46bd      	mov	sp, r7
 8019118:	bd90      	pop	{r4, r7, pc}

0801911a <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801911a:	b590      	push	{r4, r7, lr}
 801911c:	b083      	sub	sp, #12
 801911e:	af00      	add	r7, sp, #0
 8019120:	7138      	strb	r0, [r7, #4]
 8019122:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8019124:	6838      	ldr	r0, [r7, #0]
 8019126:	f000 fcb7 	bl	8019a98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 801912a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801912c:	4619      	mov	r1, r3
 801912e:	4620      	mov	r0, r4
 8019130:	f7ff ffe1 	bl	80190f6 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8019134:	4603      	mov	r3, r0
    }
 8019136:	4618      	mov	r0, r3
 8019138:	370c      	adds	r7, #12
 801913a:	46bd      	mov	sp, r7
 801913c:	bd90      	pop	{r4, r7, pc}

0801913e <_ZNSt8__detail9__variant5__getILj5ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801913e:	b590      	push	{r4, r7, lr}
 8019140:	b083      	sub	sp, #12
 8019142:	af00      	add	r7, sp, #0
 8019144:	7138      	strb	r0, [r7, #4]
 8019146:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8019148:	6838      	ldr	r0, [r7, #0]
 801914a:	f000 fc83 	bl	8019a54 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 801914e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8019150:	4619      	mov	r1, r3
 8019152:	4620      	mov	r0, r4
 8019154:	f7ff ffe1 	bl	801911a <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8019158:	4603      	mov	r3, r0
    }
 801915a:	4618      	mov	r0, r3
 801915c:	370c      	adds	r7, #12
 801915e:	46bd      	mov	sp, r7
 8019160:	bd90      	pop	{r4, r7, pc}

08019162 <_ZNSt8__detail9__variant5__getILj5ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8019162:	b590      	push	{r4, r7, lr}
 8019164:	b083      	sub	sp, #12
 8019166:	af00      	add	r7, sp, #0
 8019168:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801916a:	6878      	ldr	r0, [r7, #4]
 801916c:	f000 fc67 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8019170:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8019172:	4619      	mov	r1, r3
 8019174:	4620      	mov	r0, r4
 8019176:	f7ff ffe2 	bl	801913e <_ZNSt8__detail9__variant5__getILj5ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801917a:	4603      	mov	r3, r0
    }
 801917c:	4618      	mov	r0, r3
 801917e:	370c      	adds	r7, #12
 8019180:	46bd      	mov	sp, r7
 8019182:	bd90      	pop	{r4, r7, pc}

08019184 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ES10_EEDcSQ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8019184:	b580      	push	{r7, lr}
 8019186:	b082      	sub	sp, #8
 8019188:	af00      	add	r7, sp, #0
 801918a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801918c:	6878      	ldr	r0, [r7, #4]
 801918e:	f000 fc56 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8019192:	4603      	mov	r3, r0
 8019194:	4618      	mov	r0, r3
 8019196:	f7ff ffe4 	bl	8019162 <_ZNSt8__detail9__variant5__getILj5ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801919a:	4603      	mov	r3, r0
	}
 801919c:	4618      	mov	r0, r3
 801919e:	3708      	adds	r7, #8
 80191a0:	46bd      	mov	sp, r7
 80191a2:	bd80      	pop	{r7, pc}

080191a4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESW_S10_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 80191a4:	b5b0      	push	{r4, r5, r7, lr}
 80191a6:	b082      	sub	sp, #8
 80191a8:	af00      	add	r7, sp, #0
 80191aa:	6078      	str	r0, [r7, #4]
 80191ac:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 80191ae:	6878      	ldr	r0, [r7, #4]
 80191b0:	f000 fc3a 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 80191b4:	4604      	mov	r4, r0
 80191b6:	6838      	ldr	r0, [r7, #0]
 80191b8:	f000 fc41 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 80191bc:	4603      	mov	r3, r0
 80191be:	4618      	mov	r0, r3
 80191c0:	f7ff ffe0 	bl	8019184 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ES10_EEDcSQ_>
 80191c4:	4603      	mov	r3, r0
 80191c6:	4619      	mov	r1, r3
 80191c8:	4620      	mov	r0, r4
 80191ca:	f000 fd12 	bl	8019bf2 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSD_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>
		std::forward<_Variants>(__vars))...);
 80191ce:	462b      	mov	r3, r5
      }
 80191d0:	4618      	mov	r0, r3
 80191d2:	3708      	adds	r7, #8
 80191d4:	46bd      	mov	sp, r7
 80191d6:	bdb0      	pop	{r4, r5, r7, pc}

080191d8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESW_S10_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80191d8:	b5b0      	push	{r4, r5, r7, lr}
 80191da:	b082      	sub	sp, #8
 80191dc:	af00      	add	r7, sp, #0
 80191de:	6078      	str	r0, [r7, #4]
 80191e0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80191e2:	6878      	ldr	r0, [r7, #4]
 80191e4:	f000 fc20 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 80191e8:	4604      	mov	r4, r0
 80191ea:	6838      	ldr	r0, [r7, #0]
 80191ec:	f000 fc27 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 80191f0:	4603      	mov	r3, r0
 80191f2:	4619      	mov	r1, r3
 80191f4:	4620      	mov	r0, r4
 80191f6:	f7ff ffd5 	bl	80191a4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESW_S10_>
				   std::forward<_Variants>(__vars)...);
 80191fa:	462b      	mov	r3, r5
      }
 80191fc:	4618      	mov	r0, r3
 80191fe:	3708      	adds	r7, #8
 8019200:	46bd      	mov	sp, r7
 8019202:	bdb0      	pop	{r4, r5, r7, pc}

08019204 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESW_S10_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 8019204:	b5b0      	push	{r4, r5, r7, lr}
 8019206:	b082      	sub	sp, #8
 8019208:	af00      	add	r7, sp, #0
 801920a:	6078      	str	r0, [r7, #4]
 801920c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801920e:	6878      	ldr	r0, [r7, #4]
 8019210:	f000 fc0a 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019214:	4604      	mov	r4, r0
 8019216:	6838      	ldr	r0, [r7, #0]
 8019218:	f000 fc11 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801921c:	4603      	mov	r3, r0
 801921e:	4619      	mov	r1, r3
 8019220:	4620      	mov	r0, r4
 8019222:	f7ff ffd9 	bl	80191d8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESW_S10_>
				   std::forward<_Variants>(__vars)...);
 8019226:	462b      	mov	r3, r5
      }
 8019228:	4618      	mov	r0, r3
 801922a:	3708      	adds	r7, #8
 801922c:	46bd      	mov	sp, r7
 801922e:	bdb0      	pop	{r4, r5, r7, pc}

08019230 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 8019230:	b580      	push	{r7, lr}
 8019232:	b082      	sub	sp, #8
 8019234:	af00      	add	r7, sp, #0
 8019236:	7138      	strb	r0, [r7, #4]
 8019238:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801923a:	6838      	ldr	r0, [r7, #0]
 801923c:	f000 fcf0 	bl	8019c20 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISB_E4typeE>
 8019240:	4603      	mov	r3, r0
 8019242:	4618      	mov	r0, r3
 8019244:	f000 fcf7 	bl	8019c36 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorIfSaIfEELb0EE6_M_getEv>
 8019248:	4603      	mov	r3, r0
 801924a:	4618      	mov	r0, r3
 801924c:	3708      	adds	r7, #8
 801924e:	46bd      	mov	sp, r7
 8019250:	bd80      	pop	{r7, pc}

08019252 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8019252:	b590      	push	{r4, r7, lr}
 8019254:	b083      	sub	sp, #12
 8019256:	af00      	add	r7, sp, #0
 8019258:	7138      	strb	r0, [r7, #4]
 801925a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801925c:	6838      	ldr	r0, [r7, #0]
 801925e:	f000 fcb0 	bl	8019bc2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISD_E4typeE>
 8019262:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8019264:	4619      	mov	r1, r3
 8019266:	4620      	mov	r0, r4
 8019268:	f7ff ffe2 	bl	8019230 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 801926c:	4603      	mov	r3, r0
    }
 801926e:	4618      	mov	r0, r3
 8019270:	370c      	adds	r7, #12
 8019272:	46bd      	mov	sp, r7
 8019274:	bd90      	pop	{r4, r7, pc}

08019276 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8019276:	b590      	push	{r4, r7, lr}
 8019278:	b083      	sub	sp, #12
 801927a:	af00      	add	r7, sp, #0
 801927c:	7138      	strb	r0, [r7, #4]
 801927e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8019280:	6838      	ldr	r0, [r7, #0]
 8019282:	f000 fc6f 	bl	8019b64 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8019286:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8019288:	4619      	mov	r1, r3
 801928a:	4620      	mov	r0, r4
 801928c:	f7ff ffe1 	bl	8019252 <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8019290:	4603      	mov	r3, r0
    }
 8019292:	4618      	mov	r0, r3
 8019294:	370c      	adds	r7, #12
 8019296:	46bd      	mov	sp, r7
 8019298:	bd90      	pop	{r4, r7, pc}

0801929a <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801929a:	b590      	push	{r4, r7, lr}
 801929c:	b083      	sub	sp, #12
 801929e:	af00      	add	r7, sp, #0
 80192a0:	7138      	strb	r0, [r7, #4]
 80192a2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80192a4:	6838      	ldr	r0, [r7, #0]
 80192a6:	f000 fc3b 	bl	8019b20 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 80192aa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80192ac:	4619      	mov	r1, r3
 80192ae:	4620      	mov	r0, r4
 80192b0:	f7ff ffe1 	bl	8019276 <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80192b4:	4603      	mov	r3, r0
    }
 80192b6:	4618      	mov	r0, r3
 80192b8:	370c      	adds	r7, #12
 80192ba:	46bd      	mov	sp, r7
 80192bc:	bd90      	pop	{r4, r7, pc}

080192be <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80192be:	b590      	push	{r4, r7, lr}
 80192c0:	b083      	sub	sp, #12
 80192c2:	af00      	add	r7, sp, #0
 80192c4:	7138      	strb	r0, [r7, #4]
 80192c6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80192c8:	6838      	ldr	r0, [r7, #0]
 80192ca:	f000 fc07 	bl	8019adc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 80192ce:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80192d0:	4619      	mov	r1, r3
 80192d2:	4620      	mov	r0, r4
 80192d4:	f7ff ffe1 	bl	801929a <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80192d8:	4603      	mov	r3, r0
    }
 80192da:	4618      	mov	r0, r3
 80192dc:	370c      	adds	r7, #12
 80192de:	46bd      	mov	sp, r7
 80192e0:	bd90      	pop	{r4, r7, pc}

080192e2 <_ZNSt8__detail9__variant5__getILj5ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80192e2:	b590      	push	{r4, r7, lr}
 80192e4:	b083      	sub	sp, #12
 80192e6:	af00      	add	r7, sp, #0
 80192e8:	7138      	strb	r0, [r7, #4]
 80192ea:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80192ec:	6838      	ldr	r0, [r7, #0]
 80192ee:	f000 fbd3 	bl	8019a98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 80192f2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80192f4:	4619      	mov	r1, r3
 80192f6:	4620      	mov	r0, r4
 80192f8:	f7ff ffe1 	bl	80192be <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80192fc:	4603      	mov	r3, r0
    }
 80192fe:	4618      	mov	r0, r3
 8019300:	370c      	adds	r7, #12
 8019302:	46bd      	mov	sp, r7
 8019304:	bd90      	pop	{r4, r7, pc}

08019306 <_ZNSt8__detail9__variant5__getILj6ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8019306:	b590      	push	{r4, r7, lr}
 8019308:	b083      	sub	sp, #12
 801930a:	af00      	add	r7, sp, #0
 801930c:	7138      	strb	r0, [r7, #4]
 801930e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8019310:	6838      	ldr	r0, [r7, #0]
 8019312:	f000 fb9f 	bl	8019a54 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8019316:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8019318:	4619      	mov	r1, r3
 801931a:	4620      	mov	r0, r4
 801931c:	f7ff ffe1 	bl	80192e2 <_ZNSt8__detail9__variant5__getILj5ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8019320:	4603      	mov	r3, r0
    }
 8019322:	4618      	mov	r0, r3
 8019324:	370c      	adds	r7, #12
 8019326:	46bd      	mov	sp, r7
 8019328:	bd90      	pop	{r4, r7, pc}

0801932a <_ZNSt8__detail9__variant5__getILj6ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801932a:	b590      	push	{r4, r7, lr}
 801932c:	b083      	sub	sp, #12
 801932e:	af00      	add	r7, sp, #0
 8019330:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 8019332:	6878      	ldr	r0, [r7, #4]
 8019334:	f000 fb83 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8019338:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801933a:	4619      	mov	r1, r3
 801933c:	4620      	mov	r0, r4
 801933e:	f7ff ffe2 	bl	8019306 <_ZNSt8__detail9__variant5__getILj6ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8019342:	4603      	mov	r3, r0
    }
 8019344:	4618      	mov	r0, r3
 8019346:	370c      	adds	r7, #12
 8019348:	46bd      	mov	sp, r7
 801934a:	bd90      	pop	{r4, r7, pc}

0801934c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj6EEEE28__element_by_index_or_cookieILj6ES10_EEDcSQ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801934c:	b580      	push	{r7, lr}
 801934e:	b082      	sub	sp, #8
 8019350:	af00      	add	r7, sp, #0
 8019352:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8019354:	6878      	ldr	r0, [r7, #4]
 8019356:	f000 fb72 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801935a:	4603      	mov	r3, r0
 801935c:	4618      	mov	r0, r3
 801935e:	f7ff ffe4 	bl	801932a <_ZNSt8__detail9__variant5__getILj6ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 8019362:	4603      	mov	r3, r0
	}
 8019364:	4618      	mov	r0, r3
 8019366:	3708      	adds	r7, #8
 8019368:	46bd      	mov	sp, r7
 801936a:	bd80      	pop	{r7, pc}

0801936c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj6EEEE19__visit_invoke_implESW_S10_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801936c:	b5b0      	push	{r4, r5, r7, lr}
 801936e:	b082      	sub	sp, #8
 8019370:	af00      	add	r7, sp, #0
 8019372:	6078      	str	r0, [r7, #4]
 8019374:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8019376:	6878      	ldr	r0, [r7, #4]
 8019378:	f000 fb56 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 801937c:	4604      	mov	r4, r0
 801937e:	6838      	ldr	r0, [r7, #0]
 8019380:	f000 fb5d 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8019384:	4603      	mov	r3, r0
 8019386:	4618      	mov	r0, r3
 8019388:	f7ff ffe0 	bl	801934c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj6EEEE28__element_by_index_or_cookieILj6ES10_EEDcSQ_>
 801938c:	4603      	mov	r3, r0
 801938e:	4619      	mov	r1, r3
 8019390:	4620      	mov	r0, r4
 8019392:	f000 fc5d 	bl	8019c50 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSF_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>
		std::forward<_Variants>(__vars))...);
 8019396:	462b      	mov	r3, r5
      }
 8019398:	4618      	mov	r0, r3
 801939a:	3708      	adds	r7, #8
 801939c:	46bd      	mov	sp, r7
 801939e:	bdb0      	pop	{r4, r5, r7, pc}

080193a0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj6EEEE17__do_visit_invokeESW_S10_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80193a0:	b5b0      	push	{r4, r5, r7, lr}
 80193a2:	b082      	sub	sp, #8
 80193a4:	af00      	add	r7, sp, #0
 80193a6:	6078      	str	r0, [r7, #4]
 80193a8:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 80193aa:	6878      	ldr	r0, [r7, #4]
 80193ac:	f000 fb3c 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 80193b0:	4604      	mov	r4, r0
 80193b2:	6838      	ldr	r0, [r7, #0]
 80193b4:	f000 fb43 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 80193b8:	4603      	mov	r3, r0
 80193ba:	4619      	mov	r1, r3
 80193bc:	4620      	mov	r0, r4
 80193be:	f7ff ffd5 	bl	801936c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj6EEEE19__visit_invoke_implESW_S10_>
				   std::forward<_Variants>(__vars)...);
 80193c2:	462b      	mov	r3, r5
      }
 80193c4:	4618      	mov	r0, r3
 80193c6:	3708      	adds	r7, #8
 80193c8:	46bd      	mov	sp, r7
 80193ca:	bdb0      	pop	{r4, r5, r7, pc}

080193cc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj6EEEE14__visit_invokeESW_S10_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80193cc:	b5b0      	push	{r4, r5, r7, lr}
 80193ce:	b082      	sub	sp, #8
 80193d0:	af00      	add	r7, sp, #0
 80193d2:	6078      	str	r0, [r7, #4]
 80193d4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80193d6:	6878      	ldr	r0, [r7, #4]
 80193d8:	f000 fb26 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 80193dc:	4604      	mov	r4, r0
 80193de:	6838      	ldr	r0, [r7, #0]
 80193e0:	f000 fb2d 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 80193e4:	4603      	mov	r3, r0
 80193e6:	4619      	mov	r1, r3
 80193e8:	4620      	mov	r0, r4
 80193ea:	f7ff ffd9 	bl	80193a0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj6EEEE17__do_visit_invokeESW_S10_>
				   std::forward<_Variants>(__vars)...);
 80193ee:	462b      	mov	r3, r5
      }
 80193f0:	4618      	mov	r0, r3
 80193f2:	3708      	adds	r7, #8
 80193f4:	46bd      	mov	sp, r7
 80193f6:	bdb0      	pop	{r4, r5, r7, pc}

080193f8 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorIbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 80193f8:	b580      	push	{r7, lr}
 80193fa:	b082      	sub	sp, #8
 80193fc:	af00      	add	r7, sp, #0
 80193fe:	7138      	strb	r0, [r7, #4]
 8019400:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 8019402:	6838      	ldr	r0, [r7, #0]
 8019404:	f000 fc3b 	bl	8019c7e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorIbSaIbEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 8019408:	4603      	mov	r3, r0
 801940a:	4618      	mov	r0, r3
 801940c:	f000 fc42 	bl	8019c94 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorIbSaIbEELb0EE6_M_getEv>
 8019410:	4603      	mov	r3, r0
 8019412:	4618      	mov	r0, r3
 8019414:	3708      	adds	r7, #8
 8019416:	46bd      	mov	sp, r7
 8019418:	bd80      	pop	{r7, pc}

0801941a <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801941a:	b590      	push	{r4, r7, lr}
 801941c:	b083      	sub	sp, #12
 801941e:	af00      	add	r7, sp, #0
 8019420:	7138      	strb	r0, [r7, #4]
 8019422:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8019424:	6838      	ldr	r0, [r7, #0]
 8019426:	f000 fbfb 	bl	8019c20 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801942a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801942c:	4619      	mov	r1, r3
 801942e:	4620      	mov	r0, r4
 8019430:	f7ff ffe2 	bl	80193f8 <_ZNSt8__detail9__variant5__getIRKNS0_15_Variadic_unionIJSt6vectorIbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 8019434:	4603      	mov	r3, r0
    }
 8019436:	4618      	mov	r0, r3
 8019438:	370c      	adds	r7, #12
 801943a:	46bd      	mov	sp, r7
 801943c:	bd90      	pop	{r4, r7, pc}

0801943e <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801943e:	b590      	push	{r4, r7, lr}
 8019440:	b083      	sub	sp, #12
 8019442:	af00      	add	r7, sp, #0
 8019444:	7138      	strb	r0, [r7, #4]
 8019446:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8019448:	6838      	ldr	r0, [r7, #0]
 801944a:	f000 fbba 	bl	8019bc2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISD_E4typeE>
 801944e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8019450:	4619      	mov	r1, r3
 8019452:	4620      	mov	r0, r4
 8019454:	f7ff ffe1 	bl	801941a <_ZNSt8__detail9__variant5__getILj1ERKNS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 8019458:	4603      	mov	r3, r0
    }
 801945a:	4618      	mov	r0, r3
 801945c:	370c      	adds	r7, #12
 801945e:	46bd      	mov	sp, r7
 8019460:	bd90      	pop	{r4, r7, pc}

08019462 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8019462:	b590      	push	{r4, r7, lr}
 8019464:	b083      	sub	sp, #12
 8019466:	af00      	add	r7, sp, #0
 8019468:	7138      	strb	r0, [r7, #4]
 801946a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801946c:	6838      	ldr	r0, [r7, #0]
 801946e:	f000 fb79 	bl	8019b64 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8019472:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8019474:	4619      	mov	r1, r3
 8019476:	4620      	mov	r0, r4
 8019478:	f7ff ffe1 	bl	801943e <_ZNSt8__detail9__variant5__getILj2ERKNS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801947c:	4603      	mov	r3, r0
    }
 801947e:	4618      	mov	r0, r3
 8019480:	370c      	adds	r7, #12
 8019482:	46bd      	mov	sp, r7
 8019484:	bd90      	pop	{r4, r7, pc}

08019486 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 8019486:	b590      	push	{r4, r7, lr}
 8019488:	b083      	sub	sp, #12
 801948a:	af00      	add	r7, sp, #0
 801948c:	7138      	strb	r0, [r7, #4]
 801948e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 8019490:	6838      	ldr	r0, [r7, #0]
 8019492:	f000 fb45 	bl	8019b20 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8019496:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8019498:	4619      	mov	r1, r3
 801949a:	4620      	mov	r0, r4
 801949c:	f7ff ffe1 	bl	8019462 <_ZNSt8__detail9__variant5__getILj3ERKNS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80194a0:	4603      	mov	r3, r0
    }
 80194a2:	4618      	mov	r0, r3
 80194a4:	370c      	adds	r7, #12
 80194a6:	46bd      	mov	sp, r7
 80194a8:	bd90      	pop	{r4, r7, pc}

080194aa <_ZNSt8__detail9__variant5__getILj5ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80194aa:	b590      	push	{r4, r7, lr}
 80194ac:	b083      	sub	sp, #12
 80194ae:	af00      	add	r7, sp, #0
 80194b0:	7138      	strb	r0, [r7, #4]
 80194b2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80194b4:	6838      	ldr	r0, [r7, #0]
 80194b6:	f000 fb11 	bl	8019adc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 80194ba:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80194bc:	4619      	mov	r1, r3
 80194be:	4620      	mov	r0, r4
 80194c0:	f7ff ffe1 	bl	8019486 <_ZNSt8__detail9__variant5__getILj4ERKNS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80194c4:	4603      	mov	r3, r0
    }
 80194c6:	4618      	mov	r0, r3
 80194c8:	370c      	adds	r7, #12
 80194ca:	46bd      	mov	sp, r7
 80194cc:	bd90      	pop	{r4, r7, pc}

080194ce <_ZNSt8__detail9__variant5__getILj6ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80194ce:	b590      	push	{r4, r7, lr}
 80194d0:	b083      	sub	sp, #12
 80194d2:	af00      	add	r7, sp, #0
 80194d4:	7138      	strb	r0, [r7, #4]
 80194d6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80194d8:	6838      	ldr	r0, [r7, #0]
 80194da:	f000 fadd 	bl	8019a98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 80194de:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 80194e0:	4619      	mov	r1, r3
 80194e2:	4620      	mov	r0, r4
 80194e4:	f7ff ffe1 	bl	80194aa <_ZNSt8__detail9__variant5__getILj5ERKNS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 80194e8:	4603      	mov	r3, r0
    }
 80194ea:	4618      	mov	r0, r3
 80194ec:	370c      	adds	r7, #12
 80194ee:	46bd      	mov	sp, r7
 80194f0:	bd90      	pop	{r4, r7, pc}

080194f2 <_ZNSt8__detail9__variant5__getILj7ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 80194f2:	b590      	push	{r4, r7, lr}
 80194f4:	b083      	sub	sp, #12
 80194f6:	af00      	add	r7, sp, #0
 80194f8:	7138      	strb	r0, [r7, #4]
 80194fa:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 80194fc:	6838      	ldr	r0, [r7, #0]
 80194fe:	f000 faa9 	bl	8019a54 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8019502:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 8019504:	4619      	mov	r1, r3
 8019506:	4620      	mov	r0, r4
 8019508:	f7ff ffe1 	bl	80194ce <_ZNSt8__detail9__variant5__getILj6ERKNS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801950c:	4603      	mov	r3, r0
    }
 801950e:	4618      	mov	r0, r3
 8019510:	370c      	adds	r7, #12
 8019512:	46bd      	mov	sp, r7
 8019514:	bd90      	pop	{r4, r7, pc}

08019516 <_ZNSt8__detail9__variant5__getILj7ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 8019516:	b590      	push	{r4, r7, lr}
 8019518:	b083      	sub	sp, #12
 801951a:	af00      	add	r7, sp, #0
 801951c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801951e:	6878      	ldr	r0, [r7, #4]
 8019520:	f000 fa8d 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8019524:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 8019526:	4619      	mov	r1, r3
 8019528:	4620      	mov	r0, r4
 801952a:	f7ff ffe2 	bl	80194f2 <_ZNSt8__detail9__variant5__getILj7ERKNS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801952e:	4603      	mov	r3, r0
    }
 8019530:	4618      	mov	r0, r3
 8019532:	370c      	adds	r7, #12
 8019534:	46bd      	mov	sp, r7
 8019536:	bd90      	pop	{r4, r7, pc}

08019538 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj7EEEE28__element_by_index_or_cookieILj7ES10_EEDcSQ_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 8019538:	b580      	push	{r7, lr}
 801953a:	b082      	sub	sp, #8
 801953c:	af00      	add	r7, sp, #0
 801953e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 8019540:	6878      	ldr	r0, [r7, #4]
 8019542:	f000 fa7c 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8019546:	4603      	mov	r3, r0
 8019548:	4618      	mov	r0, r3
 801954a:	f7ff ffe4 	bl	8019516 <_ZNSt8__detail9__variant5__getILj7ERKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801954e:	4603      	mov	r3, r0
	}
 8019550:	4618      	mov	r0, r3
 8019552:	3708      	adds	r7, #8
 8019554:	46bd      	mov	sp, r7
 8019556:	bd80      	pop	{r7, pc}

08019558 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj7EEEE19__visit_invoke_implESW_S10_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 8019558:	b5b0      	push	{r4, r5, r7, lr}
 801955a:	b082      	sub	sp, #8
 801955c:	af00      	add	r7, sp, #0
 801955e:	6078      	str	r0, [r7, #4]
 8019560:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 8019562:	6878      	ldr	r0, [r7, #4]
 8019564:	f000 fa60 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019568:	4604      	mov	r4, r0
 801956a:	6838      	ldr	r0, [r7, #0]
 801956c:	f000 fa67 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 8019570:	4603      	mov	r3, r0
 8019572:	4618      	mov	r0, r3
 8019574:	f7ff ffe0 	bl	8019538 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj7EEEE28__element_by_index_or_cookieILj7ES10_EEDcSQ_>
 8019578:	4603      	mov	r3, r0
 801957a:	4619      	mov	r1, r3
 801957c:	4620      	mov	r0, r4
 801957e:	f000 fb96 	bl	8019cae <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSH_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>
		std::forward<_Variants>(__vars))...);
 8019582:	462b      	mov	r3, r5
      }
 8019584:	4618      	mov	r0, r3
 8019586:	3708      	adds	r7, #8
 8019588:	46bd      	mov	sp, r7
 801958a:	bdb0      	pop	{r4, r5, r7, pc}

0801958c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj7EEEE17__do_visit_invokeESW_S10_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801958c:	b5b0      	push	{r4, r5, r7, lr}
 801958e:	b082      	sub	sp, #8
 8019590:	af00      	add	r7, sp, #0
 8019592:	6078      	str	r0, [r7, #4]
 8019594:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 8019596:	6878      	ldr	r0, [r7, #4]
 8019598:	f000 fa46 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 801959c:	4604      	mov	r4, r0
 801959e:	6838      	ldr	r0, [r7, #0]
 80195a0:	f000 fa4d 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 80195a4:	4603      	mov	r3, r0
 80195a6:	4619      	mov	r1, r3
 80195a8:	4620      	mov	r0, r4
 80195aa:	f7ff ffd5 	bl	8019558 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj7EEEE19__visit_invoke_implESW_S10_>
				   std::forward<_Variants>(__vars)...);
 80195ae:	462b      	mov	r3, r5
      }
 80195b0:	4618      	mov	r0, r3
 80195b2:	3708      	adds	r7, #8
 80195b4:	46bd      	mov	sp, r7
 80195b6:	bdb0      	pop	{r4, r5, r7, pc}

080195b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj7EEEE14__visit_invokeESW_S10_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 80195b8:	b5b0      	push	{r4, r5, r7, lr}
 80195ba:	b082      	sub	sp, #8
 80195bc:	af00      	add	r7, sp, #0
 80195be:	6078      	str	r0, [r7, #4]
 80195c0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 80195c2:	6878      	ldr	r0, [r7, #4]
 80195c4:	f000 fa30 	bl	8019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 80195c8:	4604      	mov	r4, r0
 80195ca:	6838      	ldr	r0, [r7, #0]
 80195cc:	f000 fa37 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 80195d0:	4603      	mov	r3, r0
 80195d2:	4619      	mov	r1, r3
 80195d4:	4620      	mov	r0, r4
 80195d6:	f7ff ffd9 	bl	801958c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEERKSL_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJS10_EESt16integer_sequenceIjJLj7EEEE17__do_visit_invokeESW_S10_>
				   std::forward<_Variants>(__vars)...);
 80195da:	462b      	mov	r3, r5
      }
 80195dc:	4618      	mov	r0, r3
 80195de:	3708      	adds	r7, #8
 80195e0:	46bd      	mov	sp, r7
 80195e2:	bdb0      	pop	{r4, r5, r7, pc}

080195e4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SC_SE_SG_SI_EEEJLj8EEE9_M_accessIJEEERKS11_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 80195e4:	b580      	push	{r7, lr}
 80195e6:	b082      	sub	sp, #8
 80195e8:	af00      	add	r7, sp, #0
 80195ea:	6078      	str	r0, [r7, #4]
 80195ec:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 80195ee:	683b      	ldr	r3, [r7, #0]
 80195f0:	009b      	lsls	r3, r3, #2
 80195f2:	687a      	ldr	r2, [r7, #4]
 80195f4:	4413      	add	r3, r2
 80195f6:	4618      	mov	r0, r3
 80195f8:	f000 fb70 	bl	8019cdc <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SC_SE_SG_SI_EEEJEE9_M_accessEv>
 80195fc:	4603      	mov	r3, r0
	}
 80195fe:	4618      	mov	r0, r3
 8019600:	3708      	adds	r7, #8
 8019602:	46bd      	mov	sp, r7
 8019604:	bd80      	pop	{r7, pc}
	...

08019608 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SB_SD_SF_SH_EEEEDcSQ_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 8019608:	b5f0      	push	{r4, r5, r6, r7, lr}
 801960a:	b085      	sub	sp, #20
 801960c:	af00      	add	r7, sp, #0
 801960e:	6078      	str	r0, [r7, #4]
 8019610:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 8019612:	4b0f      	ldr	r3, [pc, #60]	; (8019650 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SB_SD_SF_SH_EEEEDcSQ_DpOT2_+0x48>)
 8019614:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 8019616:	6838      	ldr	r0, [r7, #0]
 8019618:	f7f8 f89c 	bl	8011754 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv>
 801961c:	4603      	mov	r3, r0
 801961e:	4619      	mov	r1, r3
 8019620:	68f8      	ldr	r0, [r7, #12]
 8019622:	f7ff ffdf 	bl	80195e4 <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SC_SE_SG_SI_EEEJLj8EEE9_M_accessIJEEERKS11_jDpT_>
 8019626:	4603      	mov	r3, r0
 8019628:	681b      	ldr	r3, [r3, #0]
 801962a:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 801962c:	68bc      	ldr	r4, [r7, #8]
 801962e:	6878      	ldr	r0, [r7, #4]
 8019630:	f000 fb5f 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019634:	4605      	mov	r5, r0
 8019636:	6838      	ldr	r0, [r7, #0]
 8019638:	f000 fa01 	bl	8019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801963c:	4603      	mov	r3, r0
 801963e:	4619      	mov	r1, r3
 8019640:	4628      	mov	r0, r5
 8019642:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 8019644:	4633      	mov	r3, r6
    }
 8019646:	4618      	mov	r0, r3
 8019648:	3714      	adds	r7, #20
 801964a:	46bd      	mov	sp, r7
 801964c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801964e:	bf00      	nop
 8019650:	0802527c 	.word	0x0802527c

08019654 <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 8019654:	b580      	push	{r7, lr}
 8019656:	b084      	sub	sp, #16
 8019658:	af00      	add	r7, sp, #0
 801965a:	6078      	str	r0, [r7, #4]
 801965c:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 801965e:	683b      	ldr	r3, [r7, #0]
 8019660:	7e1a      	ldrb	r2, [r3, #24]
 8019662:	687b      	ldr	r3, [r7, #4]
 8019664:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 8019666:	687b      	ldr	r3, [r7, #4]
 8019668:	60fb      	str	r3, [r7, #12]
 801966a:	6838      	ldr	r0, [r7, #0]
 801966c:	f000 f9d1 	bl	8019a12 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>
 8019670:	4603      	mov	r3, r0
 8019672:	4618      	mov	r0, r3
 8019674:	f7ff f9f3 	bl	8018a5e <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEERKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbS5_S8_SA_SC_SE_EEEEDcOT0_>
 8019678:	4602      	mov	r2, r0
 801967a:	f107 030c 	add.w	r3, r7, #12
 801967e:	4611      	mov	r1, r2
 8019680:	4618      	mov	r0, r3
 8019682:	f7ff ffc1 	bl	8019608 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSt7variantIJifbS8_SB_SD_SF_SH_EEEEDcSQ_DpOT2_>
    }
 8019686:	bf00      	nop
 8019688:	3710      	adds	r7, #16
 801968a:	46bd      	mov	sp, r7
 801968c:	bd80      	pop	{r7, pc}

0801968e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>:
      operator()(_Pair& __x) const
 801968e:	b480      	push	{r7}
 8019690:	b083      	sub	sp, #12
 8019692:	af00      	add	r7, sp, #0
 8019694:	6078      	str	r0, [r7, #4]
 8019696:	6039      	str	r1, [r7, #0]
      { return __x.first; }
 8019698:	683b      	ldr	r3, [r7, #0]
 801969a:	4618      	mov	r0, r3
 801969c:	370c      	adds	r7, #12
 801969e:	46bd      	mov	sp, r7
 80196a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80196a4:	4770      	bx	lr

080196a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeC1ERSF_>:
	_Alloc_node(_Rb_tree& __t)
 80196a6:	b480      	push	{r7}
 80196a8:	b083      	sub	sp, #12
 80196aa:	af00      	add	r7, sp, #0
 80196ac:	6078      	str	r0, [r7, #4]
 80196ae:	6039      	str	r1, [r7, #0]
	: _M_t(__t) { }
 80196b0:	687b      	ldr	r3, [r7, #4]
 80196b2:	683a      	ldr	r2, [r7, #0]
 80196b4:	601a      	str	r2, [r3, #0]
 80196b6:	687b      	ldr	r3, [r7, #4]
 80196b8:	4618      	mov	r0, r3
 80196ba:	370c      	adds	r7, #12
 80196bc:	46bd      	mov	sp, r7
 80196be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80196c2:	4770      	bx	lr

080196c4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80196c4:	b480      	push	{r7}
 80196c6:	b083      	sub	sp, #12
 80196c8:	af00      	add	r7, sp, #0
 80196ca:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80196cc:	687b      	ldr	r3, [r7, #4]
 80196ce:	4618      	mov	r0, r3
 80196d0:	370c      	adds	r7, #12
 80196d2:	46bd      	mov	sp, r7
 80196d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80196d8:	4770      	bx	lr

080196da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
 80196da:	b5b0      	push	{r4, r5, r7, lr}
 80196dc:	b088      	sub	sp, #32
 80196de:	af00      	add	r7, sp, #0
 80196e0:	60f8      	str	r0, [r7, #12]
 80196e2:	60b9      	str	r1, [r7, #8]
 80196e4:	607a      	str	r2, [r7, #4]
 80196e6:	603b      	str	r3, [r7, #0]
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80196e8:	68bb      	ldr	r3, [r7, #8]
 80196ea:	2b00      	cmp	r3, #0
 80196ec:	d11a      	bne.n	8019724 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
	bool __insert_left = (__x != 0 || __p == _M_end()
 80196ee:	68f8      	ldr	r0, [r7, #12]
 80196f0:	f7f6 fe99 	bl	8010426 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>
 80196f4:	4602      	mov	r2, r0
 80196f6:	687b      	ldr	r3, [r7, #4]
 80196f8:	4293      	cmp	r3, r2
 80196fa:	d013      	beq.n	8019724 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4a>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
 80196fc:	68fc      	ldr	r4, [r7, #12]
 80196fe:	f107 0310 	add.w	r3, r7, #16
 8019702:	6839      	ldr	r1, [r7, #0]
 8019704:	4618      	mov	r0, r3
 8019706:	f7ff ffc2 	bl	801968e <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEclERS9_>
 801970a:	4605      	mov	r5, r0
 801970c:	6878      	ldr	r0, [r7, #4]
 801970e:	f7f6 ff49 	bl	80105a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>
 8019712:	4603      	mov	r3, r0
 8019714:	461a      	mov	r2, r3
 8019716:	4629      	mov	r1, r5
 8019718:	4620      	mov	r0, r4
 801971a:	f7e9 fc3d 	bl	8002f98 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
 801971e:	4603      	mov	r3, r0
 8019720:	2b00      	cmp	r3, #0
 8019722:	d001      	beq.n	8019728 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x4e>
 8019724:	2301      	movs	r3, #1
 8019726:	e000      	b.n	801972a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE10_M_insert_IS9_NSF_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS9_EPSt18_Rb_tree_node_baseSL_OT_RT0_+0x50>
 8019728:	2300      	movs	r3, #0
	bool __insert_left = (__x != 0 || __p == _M_end()
 801972a:	77fb      	strb	r3, [r7, #31]
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
 801972c:	6838      	ldr	r0, [r7, #0]
 801972e:	f7ff ffc9 	bl	80196c4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8019732:	4603      	mov	r3, r0
 8019734:	4619      	mov	r1, r3
 8019736:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8019738:	f000 fae6 	bl	8019d08 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>
 801973c:	61b8      	str	r0, [r7, #24]
				      this->_M_impl._M_header);
 801973e:	68fb      	ldr	r3, [r7, #12]
 8019740:	3304      	adds	r3, #4
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
 8019742:	7ff8      	ldrb	r0, [r7, #31]
 8019744:	687a      	ldr	r2, [r7, #4]
 8019746:	69b9      	ldr	r1, [r7, #24]
 8019748:	f006 fdc7 	bl	80202da <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
	++_M_impl._M_node_count;
 801974c:	68fb      	ldr	r3, [r7, #12]
 801974e:	695b      	ldr	r3, [r3, #20]
 8019750:	1c5a      	adds	r2, r3, #1
 8019752:	68fb      	ldr	r3, [r7, #12]
 8019754:	615a      	str	r2, [r3, #20]
	return iterator(__z);
 8019756:	f107 0314 	add.w	r3, r7, #20
 801975a:	69b9      	ldr	r1, [r7, #24]
 801975c:	4618      	mov	r0, r3
 801975e:	f7f6 fe2c 	bl	80103ba <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEC1EPSt18_Rb_tree_node_base>
 8019762:	697b      	ldr	r3, [r7, #20]
      }
 8019764:	4618      	mov	r0, r3
 8019766:	3720      	adds	r7, #32
 8019768:	46bd      	mov	sp, r7
 801976a:	bdb0      	pop	{r4, r5, r7, pc}

0801976c <_ZNSt4pairISt17_Rb_tree_iteratorIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEbEC1ISA_bLb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 801976c:	b580      	push	{r7, lr}
 801976e:	b084      	sub	sp, #16
 8019770:	af00      	add	r7, sp, #0
 8019772:	60f8      	str	r0, [r7, #12]
 8019774:	60b9      	str	r1, [r7, #8]
 8019776:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8019778:	68b8      	ldr	r0, [r7, #8]
 801977a:	f000 fad9 	bl	8019d30 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>
 801977e:	4602      	mov	r2, r0
 8019780:	68fb      	ldr	r3, [r7, #12]
 8019782:	6812      	ldr	r2, [r2, #0]
 8019784:	601a      	str	r2, [r3, #0]
 8019786:	6878      	ldr	r0, [r7, #4]
 8019788:	f7f5 f88b 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801978c:	4603      	mov	r3, r0
 801978e:	781a      	ldrb	r2, [r3, #0]
 8019790:	68fb      	ldr	r3, [r7, #12]
 8019792:	711a      	strb	r2, [r3, #4]
 8019794:	68fb      	ldr	r3, [r7, #12]
 8019796:	4618      	mov	r0, r3
 8019798:	3710      	adds	r7, #16
 801979a:	46bd      	mov	sp, r7
 801979c:	bd80      	pop	{r7, pc}

0801979e <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 801979e:	b580      	push	{r7, lr}
 80197a0:	b082      	sub	sp, #8
 80197a2:	af00      	add	r7, sp, #0
 80197a4:	6078      	str	r0, [r7, #4]
 80197a6:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 80197a8:	6839      	ldr	r1, [r7, #0]
 80197aa:	6878      	ldr	r0, [r7, #4]
 80197ac:	f000 facb 	bl	8019d46 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS7_>
 80197b0:	687b      	ldr	r3, [r7, #4]
 80197b2:	4618      	mov	r0, r3
 80197b4:	3708      	adds	r7, #8
 80197b6:	46bd      	mov	sp, r7
 80197b8:	bd80      	pop	{r7, pc}

080197ba <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 80197ba:	b480      	push	{r7}
 80197bc:	b083      	sub	sp, #12
 80197be:	af00      	add	r7, sp, #0
 80197c0:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 80197c2:	687b      	ldr	r3, [r7, #4]
 80197c4:	2200      	movs	r2, #0
 80197c6:	601a      	str	r2, [r3, #0]
 80197c8:	687b      	ldr	r3, [r7, #4]
 80197ca:	2200      	movs	r2, #0
 80197cc:	605a      	str	r2, [r3, #4]
 80197ce:	687b      	ldr	r3, [r7, #4]
 80197d0:	2200      	movs	r2, #0
 80197d2:	609a      	str	r2, [r3, #8]
	{ }
 80197d4:	687b      	ldr	r3, [r7, #4]
 80197d6:	4618      	mov	r0, r3
 80197d8:	370c      	adds	r7, #12
 80197da:	46bd      	mov	sp, r7
 80197dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80197e0:	4770      	bx	lr
	...

080197e4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 80197e4:	b580      	push	{r7, lr}
 80197e6:	b084      	sub	sp, #16
 80197e8:	af00      	add	r7, sp, #0
 80197ea:	6078      	str	r0, [r7, #4]
	const size_t __diffmax
 80197ec:	4b0a      	ldr	r3, [pc, #40]	; (8019818 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_+0x34>)
 80197ee:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 80197f0:	6878      	ldr	r0, [r7, #4]
 80197f2:	f000 fab4 	bl	8019d5e <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_>
 80197f6:	4603      	mov	r3, r0
 80197f8:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 80197fa:	f107 0208 	add.w	r2, r7, #8
 80197fe:	f107 030c 	add.w	r3, r7, #12
 8019802:	4611      	mov	r1, r2
 8019804:	4618      	mov	r0, r3
 8019806:	f7f5 f893 	bl	800e930 <_ZSt3minIjERKT_S2_S2_>
 801980a:	4603      	mov	r3, r0
 801980c:	681b      	ldr	r3, [r3, #0]
      }
 801980e:	4618      	mov	r0, r3
 8019810:	3710      	adds	r7, #16
 8019812:	46bd      	mov	sp, r7
 8019814:	bd80      	pop	{r7, pc}
 8019816:	bf00      	nop
 8019818:	05555555 	.word	0x05555555

0801981c <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_j>:
      allocate(allocator_type& __a, size_type __n)
 801981c:	b580      	push	{r7, lr}
 801981e:	b082      	sub	sp, #8
 8019820:	af00      	add	r7, sp, #0
 8019822:	6078      	str	r0, [r7, #4]
 8019824:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8019826:	2200      	movs	r2, #0
 8019828:	6839      	ldr	r1, [r7, #0]
 801982a:	6878      	ldr	r0, [r7, #4]
 801982c:	f000 faa3 	bl	8019d76 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEjPKv>
 8019830:	4603      	mov	r3, r0
 8019832:	4618      	mov	r0, r3
 8019834:	3708      	adds	r7, #8
 8019836:	46bd      	mov	sp, r7
 8019838:	bd80      	pop	{r7, pc}

0801983a <_ZSt18uninitialized_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS5_ET0_T_SA_S9_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 801983a:	b580      	push	{r7, lr}
 801983c:	b086      	sub	sp, #24
 801983e:	af00      	add	r7, sp, #0
 8019840:	60f8      	str	r0, [r7, #12]
 8019842:	60b9      	str	r1, [r7, #8]
 8019844:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 8019846:	2301      	movs	r3, #1
 8019848:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 801984a:	687a      	ldr	r2, [r7, #4]
 801984c:	68b9      	ldr	r1, [r7, #8]
 801984e:	68f8      	ldr	r0, [r7, #12]
 8019850:	f000 fab3 	bl	8019dba <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_>
 8019854:	4603      	mov	r3, r0
    }
 8019856:	4618      	mov	r0, r3
 8019858:	3718      	adds	r7, #24
 801985a:	46bd      	mov	sp, r7
 801985c:	bd80      	pop	{r7, pc}

0801985e <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
 801985e:	b580      	push	{r7, lr}
 8019860:	b082      	sub	sp, #8
 8019862:	af00      	add	r7, sp, #0
 8019864:	6078      	str	r0, [r7, #4]
 8019866:	6039      	str	r1, [r7, #0]
      { return allocator_type(_M_get_Tp_allocator()); }
 8019868:	6838      	ldr	r0, [r7, #0]
 801986a:	f000 fac6 	bl	8019dfa <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 801986e:	4603      	mov	r3, r0
 8019870:	4619      	mov	r1, r3
 8019872:	6878      	ldr	r0, [r7, #4]
 8019874:	f7ff ff93 	bl	801979e <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
 8019878:	6878      	ldr	r0, [r7, #4]
 801987a:	3708      	adds	r7, #8
 801987c:	46bd      	mov	sp, r7
 801987e:	bd80      	pop	{r7, pc}

08019880 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS6_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 8019880:	b580      	push	{r7, lr}
 8019882:	b082      	sub	sp, #8
 8019884:	af00      	add	r7, sp, #0
 8019886:	6078      	str	r0, [r7, #4]
 8019888:	6039      	str	r1, [r7, #0]
      : _Base(__a) { }
 801988a:	687b      	ldr	r3, [r7, #4]
 801988c:	6839      	ldr	r1, [r7, #0]
 801988e:	4618      	mov	r0, r3
 8019890:	f7fe fc86 	bl	80181a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS6_>
 8019894:	687b      	ldr	r3, [r7, #4]
 8019896:	4618      	mov	r0, r3
 8019898:	3708      	adds	r7, #8
 801989a:	46bd      	mov	sp, r7
 801989c:	bd80      	pop	{r7, pc}

0801989e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_swap_dataERS8_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 801989e:	b580      	push	{r7, lr}
 80198a0:	b086      	sub	sp, #24
 80198a2:	af00      	add	r7, sp, #0
 80198a4:	6078      	str	r0, [r7, #4]
 80198a6:	6039      	str	r1, [r7, #0]
	  _Vector_impl_data __tmp;
 80198a8:	f107 030c 	add.w	r3, r7, #12
 80198ac:	4618      	mov	r0, r3
 80198ae:	f7ff ff84 	bl	80197ba <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
 80198b2:	f107 030c 	add.w	r3, r7, #12
 80198b6:	6879      	ldr	r1, [r7, #4]
 80198b8:	4618      	mov	r0, r3
 80198ba:	f000 faa9 	bl	8019e10 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
	  _M_copy_data(__x);
 80198be:	6839      	ldr	r1, [r7, #0]
 80198c0:	6878      	ldr	r0, [r7, #4]
 80198c2:	f000 faa5 	bl	8019e10 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
	  __x._M_copy_data(__tmp);
 80198c6:	f107 030c 	add.w	r3, r7, #12
 80198ca:	4619      	mov	r1, r3
 80198cc:	6838      	ldr	r0, [r7, #0]
 80198ce:	f000 fa9f 	bl	8019e10 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>
	}
 80198d2:	bf00      	nop
 80198d4:	3718      	adds	r7, #24
 80198d6:	46bd      	mov	sp, r7
 80198d8:	bd80      	pop	{r7, pc}

080198da <_ZSt15__alloc_on_moveISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_S8_>:
  template<typename _Alloc>
    inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
    { }

  template<typename _Alloc>
    inline void __alloc_on_move(_Alloc& __one, _Alloc& __two)
 80198da:	b580      	push	{r7, lr}
 80198dc:	b084      	sub	sp, #16
 80198de:	af00      	add	r7, sp, #0
 80198e0:	6078      	str	r0, [r7, #4]
 80198e2:	6039      	str	r1, [r7, #0]
    {
      typedef allocator_traits<_Alloc> __traits;
      typedef typename __traits::propagate_on_container_move_assignment __pocma;
      __do_alloc_on_move(__one, __two, __pocma());
 80198e4:	461a      	mov	r2, r3
 80198e6:	6839      	ldr	r1, [r7, #0]
 80198e8:	6878      	ldr	r0, [r7, #4]
 80198ea:	f000 faa8 	bl	8019e3e <_ZSt18__do_alloc_on_moveISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_S8_St17integral_constantIbLb1EE>
    }
 80198ee:	bf00      	nop
 80198f0:	3710      	adds	r7, #16
 80198f2:	46bd      	mov	sp, r7
 80198f4:	bd80      	pop	{r7, pc}

080198f6 <_ZSt9addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>:
    addressof(_Tp& __r) noexcept
 80198f6:	b580      	push	{r7, lr}
 80198f8:	b082      	sub	sp, #8
 80198fa:	af00      	add	r7, sp, #0
 80198fc:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 80198fe:	6878      	ldr	r0, [r7, #4]
 8019900:	f7f8 fb59 	bl	8011fb6 <_ZSt11__addressofISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEPT_RS9_>
 8019904:	4603      	mov	r3, r0
 8019906:	4618      	mov	r0, r3
 8019908:	3708      	adds	r7, #8
 801990a:	46bd      	mov	sp, r7
 801990c:	bd80      	pop	{r7, pc}

0801990e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1EOS8_>:
	_Vector_impl(_Vector_impl&& __x) noexcept
 801990e:	b590      	push	{r4, r7, lr}
 8019910:	b083      	sub	sp, #12
 8019912:	af00      	add	r7, sp, #0
 8019914:	6078      	str	r0, [r7, #4]
 8019916:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 8019918:	6838      	ldr	r0, [r7, #0]
 801991a:	f000 fa9d 	bl	8019e58 <_ZSt4moveIRNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOSC_>
 801991e:	4603      	mov	r3, r0
 8019920:	4619      	mov	r1, r3
 8019922:	6878      	ldr	r0, [r7, #4]
 8019924:	f7ff ff3b 	bl	801979e <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
 8019928:	687c      	ldr	r4, [r7, #4]
 801992a:	6838      	ldr	r0, [r7, #0]
 801992c:	f000 fa94 	bl	8019e58 <_ZSt4moveIRNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOSC_>
 8019930:	4603      	mov	r3, r0
 8019932:	4619      	mov	r1, r3
 8019934:	4620      	mov	r0, r4
 8019936:	f000 fa9a 	bl	8019e6e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1EOS8_>
	{ }
 801993a:	687b      	ldr	r3, [r7, #4]
 801993c:	4618      	mov	r0, r3
 801993e:	370c      	adds	r7, #12
 8019940:	46bd      	mov	sp, r7
 8019942:	bd90      	pop	{r4, r7, pc}

08019944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
 8019944:	b580      	push	{r7, lr}
 8019946:	b084      	sub	sp, #16
 8019948:	af00      	add	r7, sp, #0
 801994a:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_header._M_left); }
 801994c:	687b      	ldr	r3, [r7, #4]
 801994e:	68da      	ldr	r2, [r3, #12]
 8019950:	f107 030c 	add.w	r3, r7, #12
 8019954:	4611      	mov	r1, r2
 8019956:	4618      	mov	r0, r3
 8019958:	f7ee fcf1 	bl	800833e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEC1EPSt18_Rb_tree_node_base>
 801995c:	68fb      	ldr	r3, [r7, #12]
 801995e:	4618      	mov	r0, r3
 8019960:	3710      	adds	r7, #16
 8019962:	46bd      	mov	sp, r7
 8019964:	bd80      	pop	{r7, pc}

08019966 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJSA_ifbEESt6vectorIP10ExpressionSaISG_EEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
 8019966:	b580      	push	{r7, lr}
 8019968:	b084      	sub	sp, #16
 801996a:	af00      	add	r7, sp, #0
 801996c:	60f8      	str	r0, [r7, #12]
 801996e:	60b9      	str	r1, [r7, #8]
 8019970:	607a      	str	r2, [r7, #4]
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8019972:	68b8      	ldr	r0, [r7, #8]
 8019974:	f000 fa9e 	bl	8019eb4 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>
 8019978:	4603      	mov	r3, r0
 801997a:	681a      	ldr	r2, [r3, #0]
 801997c:	68fb      	ldr	r3, [r7, #12]
 801997e:	601a      	str	r2, [r3, #0]
 8019980:	6878      	ldr	r0, [r7, #4]
 8019982:	f7e9 fd62 	bl	800344a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
 8019986:	4603      	mov	r3, r0
 8019988:	681a      	ldr	r2, [r3, #0]
 801998a:	68fb      	ldr	r3, [r7, #12]
 801998c:	605a      	str	r2, [r3, #4]
 801998e:	68fb      	ldr	r3, [r7, #12]
 8019990:	4618      	mov	r0, r3
 8019992:	3710      	adds	r7, #16
 8019994:	46bd      	mov	sp, r7
 8019996:	bd80      	pop	{r7, pc}

08019998 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
 8019998:	b580      	push	{r7, lr}
 801999a:	b082      	sub	sp, #8
 801999c:	af00      	add	r7, sp, #0
 801999e:	6078      	str	r0, [r7, #4]
	_M_node = _Rb_tree_decrement(_M_node);
 80199a0:	687b      	ldr	r3, [r7, #4]
 80199a2:	681b      	ldr	r3, [r3, #0]
 80199a4:	4618      	mov	r0, r3
 80199a6:	f006 fc96 	bl	80202d6 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 80199aa:	4602      	mov	r2, r0
 80199ac:	687b      	ldr	r3, [r7, #4]
 80199ae:	601a      	str	r2, [r3, #0]
	return *this;
 80199b0:	687b      	ldr	r3, [r7, #4]
      }
 80199b2:	4618      	mov	r0, r3
 80199b4:	3708      	adds	r7, #8
 80199b6:	46bd      	mov	sp, r7
 80199b8:	bd80      	pop	{r7, pc}

080199ba <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_Alloc_nodeclISH_EEPSt13_Rb_tree_nodeISH_EOT_>:
	  operator()(_Arg&& __arg) const
 80199ba:	b590      	push	{r4, r7, lr}
 80199bc:	b083      	sub	sp, #12
 80199be:	af00      	add	r7, sp, #0
 80199c0:	6078      	str	r0, [r7, #4]
 80199c2:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 80199c4:	687b      	ldr	r3, [r7, #4]
 80199c6:	681c      	ldr	r4, [r3, #0]
 80199c8:	6838      	ldr	r0, [r7, #0]
 80199ca:	f7fe ffb3 	bl	8018934 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 80199ce:	4603      	mov	r3, r0
 80199d0:	4619      	mov	r1, r3
 80199d2:	4620      	mov	r0, r4
 80199d4:	f000 fa79 	bl	8019eca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>
 80199d8:	4603      	mov	r3, r0
 80199da:	4618      	mov	r0, r3
 80199dc:	370c      	adds	r7, #12
 80199de:	46bd      	mov	sp, r7
 80199e0:	bd90      	pop	{r4, r7, pc}

080199e2 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80199e2:	b480      	push	{r7}
 80199e4:	b083      	sub	sp, #12
 80199e6:	af00      	add	r7, sp, #0
 80199e8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80199ea:	687b      	ldr	r3, [r7, #4]
 80199ec:	4618      	mov	r0, r3
 80199ee:	370c      	adds	r7, #12
 80199f0:	46bd      	mov	sp, r7
 80199f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80199f6:	4770      	bx	lr

080199f8 <_ZNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 80199f8:	b580      	push	{r7, lr}
 80199fa:	b082      	sub	sp, #8
 80199fc:	af00      	add	r7, sp, #0
 80199fe:	6078      	str	r0, [r7, #4]
 8019a00:	687b      	ldr	r3, [r7, #4]
 8019a02:	4618      	mov	r0, r3
 8019a04:	f000 fa78 	bl	8019ef8 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>
 8019a08:	687b      	ldr	r3, [r7, #4]
 8019a0a:	4618      	mov	r0, r3
 8019a0c:	3708      	adds	r7, #8
 8019a0e:	46bd      	mov	sp, r7
 8019a10:	bd80      	pop	{r7, pc}

08019a12 <_ZSt7forwardIRKNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019a12:	b480      	push	{r7}
 8019a14:	b083      	sub	sp, #12
 8019a16:	af00      	add	r7, sp, #0
 8019a18:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019a1a:	687b      	ldr	r3, [r7, #4]
 8019a1c:	4618      	mov	r0, r3
 8019a1e:	370c      	adds	r7, #12
 8019a20:	46bd      	mov	sp, r7
 8019a22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019a26:	4770      	bx	lr

08019a28 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019a28:	b480      	push	{r7}
 8019a2a:	b083      	sub	sp, #12
 8019a2c:	af00      	add	r7, sp, #0
 8019a2e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019a30:	687b      	ldr	r3, [r7, #4]
 8019a32:	4618      	mov	r0, r3
 8019a34:	370c      	adds	r7, #12
 8019a36:	46bd      	mov	sp, r7
 8019a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019a3c:	4770      	bx	lr

08019a3e <_ZSt7forwardIRKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019a3e:	b480      	push	{r7}
 8019a40:	b083      	sub	sp, #12
 8019a42:	af00      	add	r7, sp, #0
 8019a44:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019a46:	687b      	ldr	r3, [r7, #4]
 8019a48:	4618      	mov	r0, r3
 8019a4a:	370c      	adds	r7, #12
 8019a4c:	46bd      	mov	sp, r7
 8019a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019a52:	4770      	bx	lr

08019a54 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019a54:	b480      	push	{r7}
 8019a56:	b083      	sub	sp, #12
 8019a58:	af00      	add	r7, sp, #0
 8019a5a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019a5c:	687b      	ldr	r3, [r7, #4]
 8019a5e:	4618      	mov	r0, r3
 8019a60:	370c      	adds	r7, #12
 8019a62:	46bd      	mov	sp, r7
 8019a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019a68:	4770      	bx	lr

08019a6a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKiEENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8019a6a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019a6c:	b083      	sub	sp, #12
 8019a6e:	af00      	add	r7, sp, #0
 8019a70:	6078      	str	r0, [r7, #4]
 8019a72:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8019a74:	6878      	ldr	r0, [r7, #4]
 8019a76:	f000 f93c 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019a7a:	4604      	mov	r4, r0
 8019a7c:	6838      	ldr	r0, [r7, #0]
 8019a7e:	f7f1 f8cf 	bl	800ac20 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8019a82:	4603      	mov	r3, r0
 8019a84:	461a      	mov	r2, r3
 8019a86:	4621      	mov	r1, r4
 8019a88:	4628      	mov	r0, r5
 8019a8a:	f000 fa42 	bl	8019f12 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKiEESS_St14__invoke_otherSP_DpOT1_>
					std::forward<_Args>(__args)...);
 8019a8e:	4633      	mov	r3, r6
    }
 8019a90:	4618      	mov	r0, r3
 8019a92:	370c      	adds	r7, #12
 8019a94:	46bd      	mov	sp, r7
 8019a96:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019a98 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019a98:	b480      	push	{r7}
 8019a9a:	b083      	sub	sp, #12
 8019a9c:	af00      	add	r7, sp, #0
 8019a9e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019aa0:	687b      	ldr	r3, [r7, #4]
 8019aa2:	4618      	mov	r0, r3
 8019aa4:	370c      	adds	r7, #12
 8019aa6:	46bd      	mov	sp, r7
 8019aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019aac:	4770      	bx	lr

08019aae <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKfEENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8019aae:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019ab0:	b083      	sub	sp, #12
 8019ab2:	af00      	add	r7, sp, #0
 8019ab4:	6078      	str	r0, [r7, #4]
 8019ab6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8019ab8:	6878      	ldr	r0, [r7, #4]
 8019aba:	f000 f91a 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019abe:	4604      	mov	r4, r0
 8019ac0:	6838      	ldr	r0, [r7, #0]
 8019ac2:	f7f1 f8cf 	bl	800ac64 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8019ac6:	4603      	mov	r3, r0
 8019ac8:	461a      	mov	r2, r3
 8019aca:	4621      	mov	r1, r4
 8019acc:	4628      	mov	r0, r5
 8019ace:	f000 fa37 	bl	8019f40 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKfEESS_St14__invoke_otherSP_DpOT1_>
					std::forward<_Args>(__args)...);
 8019ad2:	4633      	mov	r3, r6
    }
 8019ad4:	4618      	mov	r0, r3
 8019ad6:	370c      	adds	r7, #12
 8019ad8:	46bd      	mov	sp, r7
 8019ada:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019adc <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019adc:	b480      	push	{r7}
 8019ade:	b083      	sub	sp, #12
 8019ae0:	af00      	add	r7, sp, #0
 8019ae2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019ae4:	687b      	ldr	r3, [r7, #4]
 8019ae6:	4618      	mov	r0, r3
 8019ae8:	370c      	adds	r7, #12
 8019aea:	46bd      	mov	sp, r7
 8019aec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019af0:	4770      	bx	lr

08019af2 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKbEENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8019af2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019af4:	b083      	sub	sp, #12
 8019af6:	af00      	add	r7, sp, #0
 8019af8:	6078      	str	r0, [r7, #4]
 8019afa:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8019afc:	6878      	ldr	r0, [r7, #4]
 8019afe:	f000 f8f8 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019b02:	4604      	mov	r4, r0
 8019b04:	6838      	ldr	r0, [r7, #0]
 8019b06:	f7f1 f8cf 	bl	800aca8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8019b0a:	4603      	mov	r3, r0
 8019b0c:	461a      	mov	r2, r3
 8019b0e:	4621      	mov	r1, r4
 8019b10:	4628      	mov	r0, r5
 8019b12:	f000 fa2c 	bl	8019f6e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKbEESS_St14__invoke_otherSP_DpOT1_>
					std::forward<_Args>(__args)...);
 8019b16:	4633      	mov	r3, r6
    }
 8019b18:	4618      	mov	r0, r3
 8019b1a:	370c      	adds	r7, #12
 8019b1c:	46bd      	mov	sp, r7
 8019b1e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019b20 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019b20:	b480      	push	{r7}
 8019b22:	b083      	sub	sp, #12
 8019b24:	af00      	add	r7, sp, #0
 8019b26:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019b28:	687b      	ldr	r3, [r7, #4]
 8019b2a:	4618      	mov	r0, r3
 8019b2c:	370c      	adds	r7, #12
 8019b2e:	46bd      	mov	sp, r7
 8019b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019b34:	4770      	bx	lr

08019b36 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKS8_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8019b36:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019b38:	b083      	sub	sp, #12
 8019b3a:	af00      	add	r7, sp, #0
 8019b3c:	6078      	str	r0, [r7, #4]
 8019b3e:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8019b40:	6878      	ldr	r0, [r7, #4]
 8019b42:	f000 f8d6 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019b46:	4604      	mov	r4, r0
 8019b48:	6838      	ldr	r0, [r7, #0]
 8019b4a:	f7f1 f847 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8019b4e:	4603      	mov	r3, r0
 8019b50:	461a      	mov	r2, r3
 8019b52:	4621      	mov	r1, r4
 8019b54:	4628      	mov	r0, r5
 8019b56:	f000 fa21 	bl	8019f9c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKS9_EESS_St14__invoke_otherSP_DpOT1_>
					std::forward<_Args>(__args)...);
 8019b5a:	4633      	mov	r3, r6
    }
 8019b5c:	4618      	mov	r0, r3
 8019b5e:	370c      	adds	r7, #12
 8019b60:	46bd      	mov	sp, r7
 8019b62:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019b64 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISL_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019b64:	b480      	push	{r7}
 8019b66:	b083      	sub	sp, #12
 8019b68:	af00      	add	r7, sp, #0
 8019b6a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019b6c:	687b      	ldr	r3, [r7, #4]
 8019b6e:	4618      	mov	r0, r3
 8019b70:	370c      	adds	r7, #12
 8019b72:	46bd      	mov	sp, r7
 8019b74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019b78:	4770      	bx	lr

08019b7a <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 8019b7a:	b580      	push	{r7, lr}
 8019b7c:	b082      	sub	sp, #8
 8019b7e:	af00      	add	r7, sp, #0
 8019b80:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8019b82:	687b      	ldr	r3, [r7, #4]
 8019b84:	4618      	mov	r0, r3
 8019b86:	f000 fa20 	bl	8019fca <_ZNK9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>
 8019b8a:	4603      	mov	r3, r0
 8019b8c:	4618      	mov	r0, r3
 8019b8e:	3708      	adds	r7, #8
 8019b90:	46bd      	mov	sp, r7
 8019b92:	bd80      	pop	{r7, pc}

08019b94 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSB_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8019b94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019b96:	b083      	sub	sp, #12
 8019b98:	af00      	add	r7, sp, #0
 8019b9a:	6078      	str	r0, [r7, #4]
 8019b9c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8019b9e:	6878      	ldr	r0, [r7, #4]
 8019ba0:	f000 f8a7 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019ba4:	4604      	mov	r4, r0
 8019ba6:	6838      	ldr	r0, [r7, #0]
 8019ba8:	f000 fa1b 	bl	8019fe2 <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 8019bac:	4603      	mov	r3, r0
 8019bae:	461a      	mov	r2, r3
 8019bb0:	4621      	mov	r1, r4
 8019bb2:	4628      	mov	r0, r5
 8019bb4:	f000 fa20 	bl	8019ff8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKSC_EESS_St14__invoke_otherSP_DpOT1_>
					std::forward<_Args>(__args)...);
 8019bb8:	4633      	mov	r3, r6
    }
 8019bba:	4618      	mov	r0, r3
 8019bbc:	370c      	adds	r7, #12
 8019bbe:	46bd      	mov	sp, r7
 8019bc0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019bc2 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019bc2:	b480      	push	{r7}
 8019bc4:	b083      	sub	sp, #12
 8019bc6:	af00      	add	r7, sp, #0
 8019bc8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019bca:	687b      	ldr	r3, [r7, #4]
 8019bcc:	4618      	mov	r0, r3
 8019bce:	370c      	adds	r7, #12
 8019bd0:	46bd      	mov	sp, r7
 8019bd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019bd6:	4770      	bx	lr

08019bd8 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorIiSaIiEELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 8019bd8:	b580      	push	{r7, lr}
 8019bda:	b082      	sub	sp, #8
 8019bdc:	af00      	add	r7, sp, #0
 8019bde:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8019be0:	687b      	ldr	r3, [r7, #4]
 8019be2:	4618      	mov	r0, r3
 8019be4:	f000 fa1f 	bl	801a026 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIiSaIiEEE6_M_ptrEv>
 8019be8:	4603      	mov	r3, r0
 8019bea:	4618      	mov	r0, r3
 8019bec:	3708      	adds	r7, #8
 8019bee:	46bd      	mov	sp, r7
 8019bf0:	bd80      	pop	{r7, pc}

08019bf2 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSD_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8019bf2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019bf4:	b083      	sub	sp, #12
 8019bf6:	af00      	add	r7, sp, #0
 8019bf8:	6078      	str	r0, [r7, #4]
 8019bfa:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8019bfc:	6878      	ldr	r0, [r7, #4]
 8019bfe:	f000 f878 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019c02:	4604      	mov	r4, r0
 8019c04:	6838      	ldr	r0, [r7, #0]
 8019c06:	f000 fa1a 	bl	801a03e <_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8019c0a:	4603      	mov	r3, r0
 8019c0c:	461a      	mov	r2, r3
 8019c0e:	4621      	mov	r1, r4
 8019c10:	4628      	mov	r0, r5
 8019c12:	f000 fa1f 	bl	801a054 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKSE_EESS_St14__invoke_otherSP_DpOT1_>
					std::forward<_Args>(__args)...);
 8019c16:	4633      	mov	r3, r6
    }
 8019c18:	4618      	mov	r0, r3
 8019c1a:	370c      	adds	r7, #12
 8019c1c:	46bd      	mov	sp, r7
 8019c1e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019c20 <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019c20:	b480      	push	{r7}
 8019c22:	b083      	sub	sp, #12
 8019c24:	af00      	add	r7, sp, #0
 8019c26:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019c28:	687b      	ldr	r3, [r7, #4]
 8019c2a:	4618      	mov	r0, r3
 8019c2c:	370c      	adds	r7, #12
 8019c2e:	46bd      	mov	sp, r7
 8019c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019c34:	4770      	bx	lr

08019c36 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorIfSaIfEELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 8019c36:	b580      	push	{r7, lr}
 8019c38:	b082      	sub	sp, #8
 8019c3a:	af00      	add	r7, sp, #0
 8019c3c:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8019c3e:	687b      	ldr	r3, [r7, #4]
 8019c40:	4618      	mov	r0, r3
 8019c42:	f000 fa1e 	bl	801a082 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIfSaIfEEE6_M_ptrEv>
 8019c46:	4603      	mov	r3, r0
 8019c48:	4618      	mov	r0, r3
 8019c4a:	3708      	adds	r7, #8
 8019c4c:	46bd      	mov	sp, r7
 8019c4e:	bd80      	pop	{r7, pc}

08019c50 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSF_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8019c50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019c52:	b083      	sub	sp, #12
 8019c54:	af00      	add	r7, sp, #0
 8019c56:	6078      	str	r0, [r7, #4]
 8019c58:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8019c5a:	6878      	ldr	r0, [r7, #4]
 8019c5c:	f000 f849 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019c60:	4604      	mov	r4, r0
 8019c62:	6838      	ldr	r0, [r7, #0]
 8019c64:	f000 fa19 	bl	801a09a <_ZSt7forwardIRKSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8019c68:	4603      	mov	r3, r0
 8019c6a:	461a      	mov	r2, r3
 8019c6c:	4621      	mov	r1, r4
 8019c6e:	4628      	mov	r0, r5
 8019c70:	f000 fa1e 	bl	801a0b0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKSG_EESS_St14__invoke_otherSP_DpOT1_>
					std::forward<_Args>(__args)...);
 8019c74:	4633      	mov	r3, r6
    }
 8019c76:	4618      	mov	r0, r3
 8019c78:	370c      	adds	r7, #12
 8019c7a:	46bd      	mov	sp, r7
 8019c7c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019c7e <_ZSt7forwardIRKNSt8__detail9__variant15_Variadic_unionIJSt6vectorIbSaIbEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019c7e:	b480      	push	{r7}
 8019c80:	b083      	sub	sp, #12
 8019c82:	af00      	add	r7, sp, #0
 8019c84:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019c86:	687b      	ldr	r3, [r7, #4]
 8019c88:	4618      	mov	r0, r3
 8019c8a:	370c      	adds	r7, #12
 8019c8c:	46bd      	mov	sp, r7
 8019c8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019c92:	4770      	bx	lr

08019c94 <_ZNKRSt8__detail9__variant14_UninitializedISt6vectorIbSaIbEELb0EE6_M_getEv>:
      const _Type& _M_get() const & noexcept
 8019c94:	b580      	push	{r7, lr}
 8019c96:	b082      	sub	sp, #8
 8019c98:	af00      	add	r7, sp, #0
 8019c9a:	6078      	str	r0, [r7, #4]
      { return *_M_storage._M_ptr(); }
 8019c9c:	687b      	ldr	r3, [r7, #4]
 8019c9e:	4618      	mov	r0, r3
 8019ca0:	f000 fa1d 	bl	801a0de <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIbSaIbEEE6_M_ptrEv>
 8019ca4:	4603      	mov	r3, r0
 8019ca6:	4618      	mov	r0, r3
 8019ca8:	3708      	adds	r7, #8
 8019caa:	46bd      	mov	sp, r7
 8019cac:	bd80      	pop	{r7, pc}

08019cae <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_JRKSH_EENSt15__invoke_resultISR_JDpT0_EE4typeESS_DpOSX_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 8019cae:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019cb0:	b083      	sub	sp, #12
 8019cb2:	af00      	add	r7, sp, #0
 8019cb4:	6078      	str	r0, [r7, #4]
 8019cb6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8019cb8:	6878      	ldr	r0, [r7, #4]
 8019cba:	f000 f81a 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019cbe:	4604      	mov	r4, r0
 8019cc0:	6838      	ldr	r0, [r7, #0]
 8019cc2:	f000 fa18 	bl	801a0f6 <_ZSt7forwardIRKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE>
 8019cc6:	4603      	mov	r3, r0
 8019cc8:	461a      	mov	r2, r3
 8019cca:	4621      	mov	r1, r4
 8019ccc:	4628      	mov	r0, r5
 8019cce:	f000 fa1d 	bl	801a10c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKSI_EESS_St14__invoke_otherSP_DpOT1_>
					std::forward<_Args>(__args)...);
 8019cd2:	4633      	mov	r3, r6
    }
 8019cd4:	4618      	mov	r0, r3
 8019cd6:	370c      	adds	r7, #12
 8019cd8:	46bd      	mov	sp, r7
 8019cda:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019cdc <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_RKSt7variantIJifbS9_SC_SE_SG_SI_EEEJEE9_M_accessEv>:
      _M_access() const
 8019cdc:	b480      	push	{r7}
 8019cde:	b083      	sub	sp, #12
 8019ce0:	af00      	add	r7, sp, #0
 8019ce2:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 8019ce4:	687b      	ldr	r3, [r7, #4]
 8019ce6:	4618      	mov	r0, r3
 8019ce8:	370c      	adds	r7, #12
 8019cea:	46bd      	mov	sp, r7
 8019cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019cf0:	4770      	bx	lr

08019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019cf2:	b480      	push	{r7}
 8019cf4:	b083      	sub	sp, #12
 8019cf6:	af00      	add	r7, sp, #0
 8019cf8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019cfa:	687b      	ldr	r3, [r7, #4]
 8019cfc:	4618      	mov	r0, r3
 8019cfe:	370c      	adds	r7, #12
 8019d00:	46bd      	mov	sp, r7
 8019d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d06:	4770      	bx	lr

08019d08 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_Alloc_nodeclIS9_EEPSt13_Rb_tree_nodeIS9_EOT_>:
	  operator()(_Arg&& __arg) const
 8019d08:	b590      	push	{r4, r7, lr}
 8019d0a:	b083      	sub	sp, #12
 8019d0c:	af00      	add	r7, sp, #0
 8019d0e:	6078      	str	r0, [r7, #4]
 8019d10:	6039      	str	r1, [r7, #0]
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
 8019d12:	687b      	ldr	r3, [r7, #4]
 8019d14:	681c      	ldr	r4, [r3, #0]
 8019d16:	6838      	ldr	r0, [r7, #0]
 8019d18:	f7ff fcd4 	bl	80196c4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 8019d1c:	4603      	mov	r3, r0
 8019d1e:	4619      	mov	r1, r3
 8019d20:	4620      	mov	r0, r4
 8019d22:	f000 fa0a 	bl	801a13a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>
 8019d26:	4603      	mov	r3, r0
 8019d28:	4618      	mov	r0, r3
 8019d2a:	370c      	adds	r7, #12
 8019d2c:	46bd      	mov	sp, r7
 8019d2e:	bd90      	pop	{r4, r7, pc}

08019d30 <_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEOT_RNSt16remove_referenceISC_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019d30:	b480      	push	{r7}
 8019d32:	b083      	sub	sp, #12
 8019d34:	af00      	add	r7, sp, #0
 8019d36:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019d38:	687b      	ldr	r3, [r7, #4]
 8019d3a:	4618      	mov	r0, r3
 8019d3c:	370c      	adds	r7, #12
 8019d3e:	46bd      	mov	sp, r7
 8019d40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d44:	4770      	bx	lr

08019d46 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS7_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 8019d46:	b480      	push	{r7}
 8019d48:	b083      	sub	sp, #12
 8019d4a:	af00      	add	r7, sp, #0
 8019d4c:	6078      	str	r0, [r7, #4]
 8019d4e:	6039      	str	r1, [r7, #0]
 8019d50:	687b      	ldr	r3, [r7, #4]
 8019d52:	4618      	mov	r0, r3
 8019d54:	370c      	adds	r7, #12
 8019d56:	46bd      	mov	sp, r7
 8019d58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d5c:	4770      	bx	lr

08019d5e <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_>:
      max_size(const allocator_type& __a) noexcept
 8019d5e:	b580      	push	{r7, lr}
 8019d60:	b082      	sub	sp, #8
 8019d62:	af00      	add	r7, sp, #0
 8019d64:	6078      	str	r0, [r7, #4]
      { return __a.max_size(); }
 8019d66:	6878      	ldr	r0, [r7, #4]
 8019d68:	f000 f9fe 	bl	801a168 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv>
 8019d6c:	4603      	mov	r3, r0
 8019d6e:	4618      	mov	r0, r3
 8019d70:	3708      	adds	r7, #8
 8019d72:	46bd      	mov	sp, r7
 8019d74:	bd80      	pop	{r7, pc}

08019d76 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8019d76:	b580      	push	{r7, lr}
 8019d78:	b084      	sub	sp, #16
 8019d7a:	af00      	add	r7, sp, #0
 8019d7c:	60f8      	str	r0, [r7, #12]
 8019d7e:	60b9      	str	r1, [r7, #8]
 8019d80:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 8019d82:	68f8      	ldr	r0, [r7, #12]
 8019d84:	f000 f9f0 	bl	801a168 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv>
 8019d88:	4602      	mov	r2, r0
 8019d8a:	68bb      	ldr	r3, [r7, #8]
 8019d8c:	4293      	cmp	r3, r2
 8019d8e:	bf8c      	ite	hi
 8019d90:	2301      	movhi	r3, #1
 8019d92:	2300      	movls	r3, #0
 8019d94:	b2db      	uxtb	r3, r3
 8019d96:	2b00      	cmp	r3, #0
 8019d98:	d001      	beq.n	8019d9e <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8019d9a:	f006 fafa 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8019d9e:	68ba      	ldr	r2, [r7, #8]
 8019da0:	4613      	mov	r3, r2
 8019da2:	005b      	lsls	r3, r3, #1
 8019da4:	4413      	add	r3, r2
 8019da6:	00db      	lsls	r3, r3, #3
 8019da8:	4618      	mov	r0, r3
 8019daa:	f006 fa2d 	bl	8020208 <_Znwj>
 8019dae:	4603      	mov	r3, r0
 8019db0:	bf00      	nop
      }
 8019db2:	4618      	mov	r0, r3
 8019db4:	3710      	adds	r7, #16
 8019db6:	46bd      	mov	sp, r7
 8019db8:	bd80      	pop	{r7, pc}

08019dba <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 8019dba:	b580      	push	{r7, lr}
 8019dbc:	b086      	sub	sp, #24
 8019dbe:	af00      	add	r7, sp, #0
 8019dc0:	60f8      	str	r0, [r7, #12]
 8019dc2:	60b9      	str	r1, [r7, #8]
 8019dc4:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 8019dc6:	687b      	ldr	r3, [r7, #4]
 8019dc8:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 8019dca:	68fa      	ldr	r2, [r7, #12]
 8019dcc:	68bb      	ldr	r3, [r7, #8]
 8019dce:	429a      	cmp	r2, r3
 8019dd0:	d00e      	beq.n	8019df0 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_+0x36>
		std::_Construct(std::__addressof(*__cur), *__first);
 8019dd2:	6978      	ldr	r0, [r7, #20]
 8019dd4:	f7ec fabf 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 8019dd8:	4603      	mov	r3, r0
 8019dda:	68f9      	ldr	r1, [r7, #12]
 8019ddc:	4618      	mov	r0, r3
 8019dde:	f000 f9d1 	bl	801a184 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 8019de2:	68fb      	ldr	r3, [r7, #12]
 8019de4:	3318      	adds	r3, #24
 8019de6:	60fb      	str	r3, [r7, #12]
 8019de8:	697b      	ldr	r3, [r7, #20]
 8019dea:	3318      	adds	r3, #24
 8019dec:	617b      	str	r3, [r7, #20]
 8019dee:	e7ec      	b.n	8019dca <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_+0x10>
	      return __cur;
 8019df0:	697b      	ldr	r3, [r7, #20]
	}
 8019df2:	4618      	mov	r0, r3
 8019df4:	3718      	adds	r7, #24
 8019df6:	46bd      	mov	sp, r7
 8019df8:	bd80      	pop	{r7, pc}

08019dfa <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8019dfa:	b480      	push	{r7}
 8019dfc:	b083      	sub	sp, #12
 8019dfe:	af00      	add	r7, sp, #0
 8019e00:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8019e02:	687b      	ldr	r3, [r7, #4]
 8019e04:	4618      	mov	r0, r3
 8019e06:	370c      	adds	r7, #12
 8019e08:	46bd      	mov	sp, r7
 8019e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e0e:	4770      	bx	lr

08019e10 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_data12_M_copy_dataERKS8_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 8019e10:	b480      	push	{r7}
 8019e12:	b083      	sub	sp, #12
 8019e14:	af00      	add	r7, sp, #0
 8019e16:	6078      	str	r0, [r7, #4]
 8019e18:	6039      	str	r1, [r7, #0]
	  _M_start = __x._M_start;
 8019e1a:	683b      	ldr	r3, [r7, #0]
 8019e1c:	681a      	ldr	r2, [r3, #0]
 8019e1e:	687b      	ldr	r3, [r7, #4]
 8019e20:	601a      	str	r2, [r3, #0]
	  _M_finish = __x._M_finish;
 8019e22:	683b      	ldr	r3, [r7, #0]
 8019e24:	685a      	ldr	r2, [r3, #4]
 8019e26:	687b      	ldr	r3, [r7, #4]
 8019e28:	605a      	str	r2, [r3, #4]
	  _M_end_of_storage = __x._M_end_of_storage;
 8019e2a:	683b      	ldr	r3, [r7, #0]
 8019e2c:	689a      	ldr	r2, [r3, #8]
 8019e2e:	687b      	ldr	r3, [r7, #4]
 8019e30:	609a      	str	r2, [r3, #8]
	}
 8019e32:	bf00      	nop
 8019e34:	370c      	adds	r7, #12
 8019e36:	46bd      	mov	sp, r7
 8019e38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e3c:	4770      	bx	lr

08019e3e <_ZSt18__do_alloc_on_moveISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvRT_S8_St17integral_constantIbLb1EE>:
    inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 8019e3e:	b580      	push	{r7, lr}
 8019e40:	b084      	sub	sp, #16
 8019e42:	af00      	add	r7, sp, #0
 8019e44:	60f8      	str	r0, [r7, #12]
 8019e46:	60b9      	str	r1, [r7, #8]
 8019e48:	713a      	strb	r2, [r7, #4]
    { __one = std::move(__two); }
 8019e4a:	68b8      	ldr	r0, [r7, #8]
 8019e4c:	f000 f9b1 	bl	801a1b2 <_ZSt4moveIRSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEONSt16remove_referenceIT_E4typeEOS9_>
 8019e50:	bf00      	nop
 8019e52:	3710      	adds	r7, #16
 8019e54:	46bd      	mov	sp, r7
 8019e56:	bd80      	pop	{r7, pc}

08019e58 <_ZSt4moveIRNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE12_Vector_implEEONSt16remove_referenceIT_E4typeEOSC_>:
    move(_Tp&& __t) noexcept
 8019e58:	b480      	push	{r7}
 8019e5a:	b083      	sub	sp, #12
 8019e5c:	af00      	add	r7, sp, #0
 8019e5e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8019e60:	687b      	ldr	r3, [r7, #4]
 8019e62:	4618      	mov	r0, r3
 8019e64:	370c      	adds	r7, #12
 8019e66:	46bd      	mov	sp, r7
 8019e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e6c:	4770      	bx	lr

08019e6e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1EOS8_>:
	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 8019e6e:	b480      	push	{r7}
 8019e70:	b083      	sub	sp, #12
 8019e72:	af00      	add	r7, sp, #0
 8019e74:	6078      	str	r0, [r7, #4]
 8019e76:	6039      	str	r1, [r7, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 8019e78:	683b      	ldr	r3, [r7, #0]
 8019e7a:	681a      	ldr	r2, [r3, #0]
	  _M_end_of_storage(__x._M_end_of_storage)
 8019e7c:	687b      	ldr	r3, [r7, #4]
 8019e7e:	601a      	str	r2, [r3, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 8019e80:	683b      	ldr	r3, [r7, #0]
 8019e82:	685a      	ldr	r2, [r3, #4]
	  _M_end_of_storage(__x._M_end_of_storage)
 8019e84:	687b      	ldr	r3, [r7, #4]
 8019e86:	605a      	str	r2, [r3, #4]
 8019e88:	683b      	ldr	r3, [r7, #0]
 8019e8a:	689a      	ldr	r2, [r3, #8]
 8019e8c:	687b      	ldr	r3, [r7, #4]
 8019e8e:	609a      	str	r2, [r3, #8]
	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 8019e90:	683b      	ldr	r3, [r7, #0]
 8019e92:	2200      	movs	r2, #0
 8019e94:	609a      	str	r2, [r3, #8]
 8019e96:	683b      	ldr	r3, [r7, #0]
 8019e98:	689a      	ldr	r2, [r3, #8]
 8019e9a:	683b      	ldr	r3, [r7, #0]
 8019e9c:	605a      	str	r2, [r3, #4]
 8019e9e:	683b      	ldr	r3, [r7, #0]
 8019ea0:	685a      	ldr	r2, [r3, #4]
 8019ea2:	683b      	ldr	r3, [r7, #0]
 8019ea4:	601a      	str	r2, [r3, #0]
 8019ea6:	687b      	ldr	r3, [r7, #4]
 8019ea8:	4618      	mov	r0, r3
 8019eaa:	370c      	adds	r7, #12
 8019eac:	46bd      	mov	sp, r7
 8019eae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019eb2:	4770      	bx	lr

08019eb4 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEOT_RNSt16remove_referenceISM_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019eb4:	b480      	push	{r7}
 8019eb6:	b083      	sub	sp, #12
 8019eb8:	af00      	add	r7, sp, #0
 8019eba:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019ebc:	687b      	ldr	r3, [r7, #4]
 8019ebe:	4618      	mov	r0, r3
 8019ec0:	370c      	adds	r7, #12
 8019ec2:	46bd      	mov	sp, r7
 8019ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ec8:	4770      	bx	lr

08019eca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE14_M_create_nodeIJSH_EEEPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_create_node(_Args&&... __args)
 8019eca:	b580      	push	{r7, lr}
 8019ecc:	b084      	sub	sp, #16
 8019ece:	af00      	add	r7, sp, #0
 8019ed0:	6078      	str	r0, [r7, #4]
 8019ed2:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 8019ed4:	6878      	ldr	r0, [r7, #4]
 8019ed6:	f000 f977 	bl	801a1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>
 8019eda:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 8019edc:	6838      	ldr	r0, [r7, #0]
 8019ede:	f7fe fd29 	bl	8018934 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 8019ee2:	4603      	mov	r3, r0
 8019ee4:	461a      	mov	r2, r3
 8019ee6:	68f9      	ldr	r1, [r7, #12]
 8019ee8:	6878      	ldr	r0, [r7, #4]
 8019eea:	f000 f97e 	bl	801a1ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>
	  return __tmp;
 8019eee:	68fb      	ldr	r3, [r7, #12]
	}
 8019ef0:	4618      	mov	r0, r3
 8019ef2:	3710      	adds	r7, #16
 8019ef4:	46bd      	mov	sp, r7
 8019ef6:	bd80      	pop	{r7, pc}

08019ef8 <_ZNSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 8019ef8:	b580      	push	{r7, lr}
 8019efa:	b082      	sub	sp, #8
 8019efc:	af00      	add	r7, sp, #0
 8019efe:	6078      	str	r0, [r7, #4]
 8019f00:	687b      	ldr	r3, [r7, #4]
 8019f02:	4618      	mov	r0, r3
 8019f04:	f000 f991 	bl	801a22a <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>
 8019f08:	687b      	ldr	r3, [r7, #4]
 8019f0a:	4618      	mov	r0, r3
 8019f0c:	3708      	adds	r7, #8
 8019f0e:	46bd      	mov	sp, r7
 8019f10:	bd80      	pop	{r7, pc}

08019f12 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKiEESS_St14__invoke_otherSP_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8019f12:	b5b0      	push	{r4, r5, r7, lr}
 8019f14:	b084      	sub	sp, #16
 8019f16:	af00      	add	r7, sp, #0
 8019f18:	7338      	strb	r0, [r7, #12]
 8019f1a:	60b9      	str	r1, [r7, #8]
 8019f1c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8019f1e:	68b8      	ldr	r0, [r7, #8]
 8019f20:	f7ff fee7 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019f24:	4604      	mov	r4, r0
 8019f26:	6878      	ldr	r0, [r7, #4]
 8019f28:	f7f0 fe7a 	bl	800ac20 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 8019f2c:	4603      	mov	r3, r0
 8019f2e:	4619      	mov	r1, r3
 8019f30:	4620      	mov	r0, r4
 8019f32:	f000 f987 	bl	801a244 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESR_>
 8019f36:	462b      	mov	r3, r5
 8019f38:	4618      	mov	r0, r3
 8019f3a:	3710      	adds	r7, #16
 8019f3c:	46bd      	mov	sp, r7
 8019f3e:	bdb0      	pop	{r4, r5, r7, pc}

08019f40 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKfEESS_St14__invoke_otherSP_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8019f40:	b5b0      	push	{r4, r5, r7, lr}
 8019f42:	b084      	sub	sp, #16
 8019f44:	af00      	add	r7, sp, #0
 8019f46:	7338      	strb	r0, [r7, #12]
 8019f48:	60b9      	str	r1, [r7, #8]
 8019f4a:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8019f4c:	68b8      	ldr	r0, [r7, #8]
 8019f4e:	f7ff fed0 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019f52:	4604      	mov	r4, r0
 8019f54:	6878      	ldr	r0, [r7, #4]
 8019f56:	f7f0 fe85 	bl	800ac64 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 8019f5a:	4603      	mov	r3, r0
 8019f5c:	4619      	mov	r1, r3
 8019f5e:	4620      	mov	r0, r4
 8019f60:	f000 f988 	bl	801a274 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESR_>
 8019f64:	462b      	mov	r3, r5
 8019f66:	4618      	mov	r0, r3
 8019f68:	3710      	adds	r7, #16
 8019f6a:	46bd      	mov	sp, r7
 8019f6c:	bdb0      	pop	{r4, r5, r7, pc}

08019f6e <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKbEESS_St14__invoke_otherSP_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8019f6e:	b5b0      	push	{r4, r5, r7, lr}
 8019f70:	b084      	sub	sp, #16
 8019f72:	af00      	add	r7, sp, #0
 8019f74:	7338      	strb	r0, [r7, #12]
 8019f76:	60b9      	str	r1, [r7, #8]
 8019f78:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8019f7a:	68b8      	ldr	r0, [r7, #8]
 8019f7c:	f7ff feb9 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019f80:	4604      	mov	r4, r0
 8019f82:	6878      	ldr	r0, [r7, #4]
 8019f84:	f7f0 fe90 	bl	800aca8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 8019f88:	4603      	mov	r3, r0
 8019f8a:	4619      	mov	r1, r3
 8019f8c:	4620      	mov	r0, r4
 8019f8e:	f000 f989 	bl	801a2a4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESR_>
 8019f92:	462b      	mov	r3, r5
 8019f94:	4618      	mov	r0, r3
 8019f96:	3710      	adds	r7, #16
 8019f98:	46bd      	mov	sp, r7
 8019f9a:	bdb0      	pop	{r4, r5, r7, pc}

08019f9c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKS9_EESS_St14__invoke_otherSP_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8019f9c:	b5b0      	push	{r4, r5, r7, lr}
 8019f9e:	b084      	sub	sp, #16
 8019fa0:	af00      	add	r7, sp, #0
 8019fa2:	7338      	strb	r0, [r7, #12]
 8019fa4:	60b9      	str	r1, [r7, #8]
 8019fa6:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 8019fa8:	68b8      	ldr	r0, [r7, #8]
 8019faa:	f7ff fea2 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 8019fae:	4604      	mov	r4, r0
 8019fb0:	6878      	ldr	r0, [r7, #4]
 8019fb2:	f7f0 fe13 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 8019fb6:	4603      	mov	r3, r0
 8019fb8:	4619      	mov	r1, r3
 8019fba:	4620      	mov	r0, r4
 8019fbc:	f000 f98a 	bl	801a2d4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESR_>
 8019fc0:	462b      	mov	r3, r5
 8019fc2:	4618      	mov	r0, r3
 8019fc4:	3710      	adds	r7, #16
 8019fc6:	46bd      	mov	sp, r7
 8019fc8:	bdb0      	pop	{r4, r5, r7, pc}

08019fca <_ZNK9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>:
      _M_ptr() const noexcept
 8019fca:	b580      	push	{r7, lr}
 8019fcc:	b082      	sub	sp, #8
 8019fce:	af00      	add	r7, sp, #0
 8019fd0:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 8019fd2:	6878      	ldr	r0, [r7, #4]
 8019fd4:	f000 f996 	bl	801a304 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE7_M_addrEv>
 8019fd8:	4603      	mov	r3, r0
 8019fda:	4618      	mov	r0, r3
 8019fdc:	3708      	adds	r7, #8
 8019fde:	46bd      	mov	sp, r7
 8019fe0:	bd80      	pop	{r7, pc}

08019fe2 <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8019fe2:	b480      	push	{r7}
 8019fe4:	b083      	sub	sp, #12
 8019fe6:	af00      	add	r7, sp, #0
 8019fe8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8019fea:	687b      	ldr	r3, [r7, #4]
 8019fec:	4618      	mov	r0, r3
 8019fee:	370c      	adds	r7, #12
 8019ff0:	46bd      	mov	sp, r7
 8019ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ff6:	4770      	bx	lr

08019ff8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKSC_EESS_St14__invoke_otherSP_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 8019ff8:	b5b0      	push	{r4, r5, r7, lr}
 8019ffa:	b084      	sub	sp, #16
 8019ffc:	af00      	add	r7, sp, #0
 8019ffe:	7338      	strb	r0, [r7, #12]
 801a000:	60b9      	str	r1, [r7, #8]
 801a002:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801a004:	68b8      	ldr	r0, [r7, #8]
 801a006:	f7ff fe74 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 801a00a:	4604      	mov	r4, r0
 801a00c:	6878      	ldr	r0, [r7, #4]
 801a00e:	f7ff ffe8 	bl	8019fe2 <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 801a012:	4603      	mov	r3, r0
 801a014:	4619      	mov	r1, r3
 801a016:	4620      	mov	r0, r4
 801a018:	f000 f97f 	bl	801a31a <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKSA_EENS0_16__variant_cookieESR_>
 801a01c:	462b      	mov	r3, r5
 801a01e:	4618      	mov	r0, r3
 801a020:	3710      	adds	r7, #16
 801a022:	46bd      	mov	sp, r7
 801a024:	bdb0      	pop	{r4, r5, r7, pc}

0801a026 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIiSaIiEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 801a026:	b580      	push	{r7, lr}
 801a028:	b082      	sub	sp, #8
 801a02a:	af00      	add	r7, sp, #0
 801a02c:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 801a02e:	6878      	ldr	r0, [r7, #4]
 801a030:	f000 f98b 	bl	801a34a <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIiSaIiEEE7_M_addrEv>
 801a034:	4603      	mov	r3, r0
 801a036:	4618      	mov	r0, r3
 801a038:	3708      	adds	r7, #8
 801a03a:	46bd      	mov	sp, r7
 801a03c:	bd80      	pop	{r7, pc}

0801a03e <_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801a03e:	b480      	push	{r7}
 801a040:	b083      	sub	sp, #12
 801a042:	af00      	add	r7, sp, #0
 801a044:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801a046:	687b      	ldr	r3, [r7, #4]
 801a048:	4618      	mov	r0, r3
 801a04a:	370c      	adds	r7, #12
 801a04c:	46bd      	mov	sp, r7
 801a04e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a052:	4770      	bx	lr

0801a054 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKSE_EESS_St14__invoke_otherSP_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801a054:	b5b0      	push	{r4, r5, r7, lr}
 801a056:	b084      	sub	sp, #16
 801a058:	af00      	add	r7, sp, #0
 801a05a:	7338      	strb	r0, [r7, #12]
 801a05c:	60b9      	str	r1, [r7, #8]
 801a05e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801a060:	68b8      	ldr	r0, [r7, #8]
 801a062:	f7ff fe46 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 801a066:	4604      	mov	r4, r0
 801a068:	6878      	ldr	r0, [r7, #4]
 801a06a:	f7ff ffe8 	bl	801a03e <_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801a06e:	4603      	mov	r3, r0
 801a070:	4619      	mov	r1, r3
 801a072:	4620      	mov	r0, r4
 801a074:	f000 f974 	bl	801a360 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKSC_EENS0_16__variant_cookieESR_>
 801a078:	462b      	mov	r3, r5
 801a07a:	4618      	mov	r0, r3
 801a07c:	3710      	adds	r7, #16
 801a07e:	46bd      	mov	sp, r7
 801a080:	bdb0      	pop	{r4, r5, r7, pc}

0801a082 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIfSaIfEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 801a082:	b580      	push	{r7, lr}
 801a084:	b082      	sub	sp, #8
 801a086:	af00      	add	r7, sp, #0
 801a088:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 801a08a:	6878      	ldr	r0, [r7, #4]
 801a08c:	f000 f980 	bl	801a390 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIfSaIfEEE7_M_addrEv>
 801a090:	4603      	mov	r3, r0
 801a092:	4618      	mov	r0, r3
 801a094:	3708      	adds	r7, #8
 801a096:	46bd      	mov	sp, r7
 801a098:	bd80      	pop	{r7, pc}

0801a09a <_ZSt7forwardIRKSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801a09a:	b480      	push	{r7}
 801a09c:	b083      	sub	sp, #12
 801a09e:	af00      	add	r7, sp, #0
 801a0a0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801a0a2:	687b      	ldr	r3, [r7, #4]
 801a0a4:	4618      	mov	r0, r3
 801a0a6:	370c      	adds	r7, #12
 801a0a8:	46bd      	mov	sp, r7
 801a0aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a0ae:	4770      	bx	lr

0801a0b0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKSG_EESS_St14__invoke_otherSP_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801a0b0:	b5b0      	push	{r4, r5, r7, lr}
 801a0b2:	b084      	sub	sp, #16
 801a0b4:	af00      	add	r7, sp, #0
 801a0b6:	7338      	strb	r0, [r7, #12]
 801a0b8:	60b9      	str	r1, [r7, #8]
 801a0ba:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801a0bc:	68b8      	ldr	r0, [r7, #8]
 801a0be:	f7ff fe18 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 801a0c2:	4604      	mov	r4, r0
 801a0c4:	6878      	ldr	r0, [r7, #4]
 801a0c6:	f7ff ffe8 	bl	801a09a <_ZSt7forwardIRKSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801a0ca:	4603      	mov	r3, r0
 801a0cc:	4619      	mov	r1, r3
 801a0ce:	4620      	mov	r0, r4
 801a0d0:	f000 f969 	bl	801a3a6 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKSE_EENS0_16__variant_cookieESR_>
 801a0d4:	462b      	mov	r3, r5
 801a0d6:	4618      	mov	r0, r3
 801a0d8:	3710      	adds	r7, #16
 801a0da:	46bd      	mov	sp, r7
 801a0dc:	bdb0      	pop	{r4, r5, r7, pc}

0801a0de <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIbSaIbEEE6_M_ptrEv>:
      _M_ptr() const noexcept
 801a0de:	b580      	push	{r7, lr}
 801a0e0:	b082      	sub	sp, #8
 801a0e2:	af00      	add	r7, sp, #0
 801a0e4:	6078      	str	r0, [r7, #4]
      { return static_cast<const _Tp*>(_M_addr()); }
 801a0e6:	6878      	ldr	r0, [r7, #4]
 801a0e8:	f000 f975 	bl	801a3d6 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIbSaIbEEE7_M_addrEv>
 801a0ec:	4603      	mov	r3, r0
 801a0ee:	4618      	mov	r0, r3
 801a0f0:	3708      	adds	r7, #8
 801a0f2:	46bd      	mov	sp, r7
 801a0f4:	bd80      	pop	{r7, pc}

0801a0f6 <_ZSt7forwardIRKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801a0f6:	b480      	push	{r7}
 801a0f8:	b083      	sub	sp, #12
 801a0fa:	af00      	add	r7, sp, #0
 801a0fc:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801a0fe:	687b      	ldr	r3, [r7, #4]
 801a100:	4618      	mov	r0, r3
 801a102:	370c      	adds	r7, #12
 801a104:	46bd      	mov	sp, r7
 801a106:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a10a:	4770      	bx	lr

0801a10c <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEERKSK_EEvOT0_OT1_EUlOT_E_JRKSI_EESS_St14__invoke_otherSP_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801a10c:	b5b0      	push	{r4, r5, r7, lr}
 801a10e:	b084      	sub	sp, #16
 801a110:	af00      	add	r7, sp, #0
 801a112:	7338      	strb	r0, [r7, #12]
 801a114:	60b9      	str	r1, [r7, #8]
 801a116:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801a118:	68b8      	ldr	r0, [r7, #8]
 801a11a:	f7ff fdea 	bl	8019cf2 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Copy_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEERKSJ_EEvOT0_OT1_EUlOT_E_ESS_RNSt16remove_referenceISR_E4typeE>
 801a11e:	4604      	mov	r4, r0
 801a120:	6878      	ldr	r0, [r7, #4]
 801a122:	f7ff ffe8 	bl	801a0f6 <_ZSt7forwardIRKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801a126:	4603      	mov	r3, r0
 801a128:	4619      	mov	r1, r3
 801a12a:	4620      	mov	r0, r4
 801a12c:	f000 f95e 	bl	801a3ec <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKSG_EENS0_16__variant_cookieESR_>
 801a130:	462b      	mov	r3, r5
 801a132:	4618      	mov	r0, r3
 801a134:	3710      	adds	r7, #16
 801a136:	46bd      	mov	sp, r7
 801a138:	bdb0      	pop	{r4, r5, r7, pc}

0801a13a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE14_M_create_nodeIJS9_EEEPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_create_node(_Args&&... __args)
 801a13a:	b580      	push	{r7, lr}
 801a13c:	b084      	sub	sp, #16
 801a13e:	af00      	add	r7, sp, #0
 801a140:	6078      	str	r0, [r7, #4]
 801a142:	6039      	str	r1, [r7, #0]
	  _Link_type __tmp = _M_get_node();
 801a144:	6878      	ldr	r0, [r7, #4]
 801a146:	f7f6 f9c6 	bl	80104d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE11_M_get_nodeEv>
 801a14a:	60f8      	str	r0, [r7, #12]
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
 801a14c:	6838      	ldr	r0, [r7, #0]
 801a14e:	f7ff fab9 	bl	80196c4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801a152:	4603      	mov	r3, r0
 801a154:	461a      	mov	r2, r3
 801a156:	68f9      	ldr	r1, [r7, #12]
 801a158:	6878      	ldr	r0, [r7, #4]
 801a15a:	f000 f95f 	bl	801a41c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>
	  return __tmp;
 801a15e:	68fb      	ldr	r3, [r7, #12]
	}
 801a160:	4618      	mov	r0, r3
 801a162:	3710      	adds	r7, #16
 801a164:	46bd      	mov	sp, r7
 801a166:	bd80      	pop	{r7, pc}

0801a168 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801a168:	b480      	push	{r7}
 801a16a:	b083      	sub	sp, #12
 801a16c:	af00      	add	r7, sp, #0
 801a16e:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801a170:	4b03      	ldr	r3, [pc, #12]	; (801a180 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv+0x18>)
      }
 801a172:	4618      	mov	r0, r3
 801a174:	370c      	adds	r7, #12
 801a176:	46bd      	mov	sp, r7
 801a178:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a17c:	4770      	bx	lr
 801a17e:	bf00      	nop
 801a180:	05555555 	.word	0x05555555

0801a184 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_>:
    _Construct(_T1* __p, _Args&&... __args)
 801a184:	b590      	push	{r4, r7, lr}
 801a186:	b083      	sub	sp, #12
 801a188:	af00      	add	r7, sp, #0
 801a18a:	6078      	str	r0, [r7, #4]
 801a18c:	6039      	str	r1, [r7, #0]
    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 801a18e:	6838      	ldr	r0, [r7, #0]
 801a190:	f7f0 fd24 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801a194:	4604      	mov	r4, r0
 801a196:	687b      	ldr	r3, [r7, #4]
 801a198:	4619      	mov	r1, r3
 801a19a:	2018      	movs	r0, #24
 801a19c:	f7e6 ff46 	bl	800102c <_ZnwjPv>
 801a1a0:	4603      	mov	r3, r0
 801a1a2:	4621      	mov	r1, r4
 801a1a4:	4618      	mov	r0, r3
 801a1a6:	f006 fb33 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801a1aa:	bf00      	nop
 801a1ac:	370c      	adds	r7, #12
 801a1ae:	46bd      	mov	sp, r7
 801a1b0:	bd90      	pop	{r4, r7, pc}

0801a1b2 <_ZSt4moveIRSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
 801a1b2:	b480      	push	{r7}
 801a1b4:	b083      	sub	sp, #12
 801a1b6:	af00      	add	r7, sp, #0
 801a1b8:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801a1ba:	687b      	ldr	r3, [r7, #4]
 801a1bc:	4618      	mov	r0, r3
 801a1be:	370c      	adds	r7, #12
 801a1c0:	46bd      	mov	sp, r7
 801a1c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a1c6:	4770      	bx	lr

0801a1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE11_M_get_nodeEv>:
      _M_get_node()
 801a1c8:	b580      	push	{r7, lr}
 801a1ca:	b082      	sub	sp, #8
 801a1cc:	af00      	add	r7, sp, #0
 801a1ce:	6078      	str	r0, [r7, #4]
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
 801a1d0:	6878      	ldr	r0, [r7, #4]
 801a1d2:	f7ee fa4f 	bl	8008674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 801a1d6:	4603      	mov	r3, r0
 801a1d8:	2101      	movs	r1, #1
 801a1da:	4618      	mov	r0, r3
 801a1dc:	f000 f93e 	bl	801a45c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>
 801a1e0:	4603      	mov	r3, r0
 801a1e2:	4618      	mov	r0, r3
 801a1e4:	3708      	adds	r7, #8
 801a1e6:	46bd      	mov	sp, r7
 801a1e8:	bd80      	pop	{r7, pc}

0801a1ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE17_M_construct_nodeIJSH_EEEvPSt13_Rb_tree_nodeISH_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 801a1ea:	b5b0      	push	{r4, r5, r7, lr}
 801a1ec:	b084      	sub	sp, #16
 801a1ee:	af00      	add	r7, sp, #0
 801a1f0:	60f8      	str	r0, [r7, #12]
 801a1f2:	60b9      	str	r1, [r7, #8]
 801a1f4:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 801a1f6:	68bb      	ldr	r3, [r7, #8]
 801a1f8:	4619      	mov	r1, r3
 801a1fa:	202c      	movs	r0, #44	; 0x2c
 801a1fc:	f7e6 ff16 	bl	800102c <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 801a200:	68f8      	ldr	r0, [r7, #12]
 801a202:	f7ee fa37 	bl	8008674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISC_EEEESt10_Select1stISH_ESt4lessIS5_ESaISH_EE21_M_get_Node_allocatorEv>
 801a206:	4604      	mov	r4, r0
 801a208:	68b8      	ldr	r0, [r7, #8]
 801a20a:	f7ed fec9 	bl	8007fa0 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEE9_M_valptrEv>
 801a20e:	4605      	mov	r5, r0
 801a210:	6878      	ldr	r0, [r7, #4]
 801a212:	f7fe fb8f 	bl	8018934 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801a216:	4603      	mov	r3, r0
 801a218:	461a      	mov	r2, r3
 801a21a:	4629      	mov	r1, r5
 801a21c:	4620      	mov	r0, r4
 801a21e:	f000 f92c 	bl	801a47a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>
	}
 801a222:	bf00      	nop
 801a224:	3710      	adds	r7, #16
 801a226:	46bd      	mov	sp, r7
 801a228:	bdb0      	pop	{r4, r5, r7, pc}

0801a22a <_ZNSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>:
 801a22a:	b580      	push	{r7, lr}
 801a22c:	b082      	sub	sp, #8
 801a22e:	af00      	add	r7, sp, #0
 801a230:	6078      	str	r0, [r7, #4]
 801a232:	687b      	ldr	r3, [r7, #4]
 801a234:	4618      	mov	r0, r3
 801a236:	f000 f933 	bl	801a4a0 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EES2_IiSaIiEES2_IfSaIfEES2_IbSaIbEEEEC1Ev>
 801a23a:	687b      	ldr	r3, [r7, #4]
 801a23c:	4618      	mov	r0, r3
 801a23e:	3708      	adds	r7, #8
 801a240:	46bd      	mov	sp, r7
 801a242:	bd80      	pop	{r7, pc}

0801a244 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKiEENS0_16__variant_cookieESR_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801a244:	b5b0      	push	{r4, r5, r7, lr}
 801a246:	b082      	sub	sp, #8
 801a248:	af00      	add	r7, sp, #0
 801a24a:	6078      	str	r0, [r7, #4]
 801a24c:	6039      	str	r1, [r7, #0]
 801a24e:	687b      	ldr	r3, [r7, #4]
 801a250:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801a252:	4618      	mov	r0, r3
 801a254:	f000 f931 	bl	801a4ba <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801a258:	4604      	mov	r4, r0
 801a25a:	6838      	ldr	r0, [r7, #0]
 801a25c:	f7f0 fce0 	bl	800ac20 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 801a260:	4603      	mov	r3, r0
 801a262:	4619      	mov	r1, r3
 801a264:	4620      	mov	r0, r4
 801a266:	f000 f94a 	bl	801a4fe <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKiEEvOT_OT0_>
	  return {};
 801a26a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801a26c:	4618      	mov	r0, r3
 801a26e:	3708      	adds	r7, #8
 801a270:	46bd      	mov	sp, r7
 801a272:	bdb0      	pop	{r4, r5, r7, pc}

0801a274 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKfEENS0_16__variant_cookieESR_>:
 801a274:	b5b0      	push	{r4, r5, r7, lr}
 801a276:	b082      	sub	sp, #8
 801a278:	af00      	add	r7, sp, #0
 801a27a:	6078      	str	r0, [r7, #4]
 801a27c:	6039      	str	r1, [r7, #0]
 801a27e:	687b      	ldr	r3, [r7, #4]
 801a280:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801a282:	4618      	mov	r0, r3
 801a284:	f000 f919 	bl	801a4ba <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801a288:	4604      	mov	r4, r0
 801a28a:	6838      	ldr	r0, [r7, #0]
 801a28c:	f7f0 fcea 	bl	800ac64 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 801a290:	4603      	mov	r3, r0
 801a292:	4619      	mov	r1, r3
 801a294:	4620      	mov	r0, r4
 801a296:	f000 f94c 	bl	801a532 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKfEEvOT_OT0_>
	  return {};
 801a29a:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801a29c:	4618      	mov	r0, r3
 801a29e:	3708      	adds	r7, #8
 801a2a0:	46bd      	mov	sp, r7
 801a2a2:	bdb0      	pop	{r4, r5, r7, pc}

0801a2a4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKbEENS0_16__variant_cookieESR_>:
 801a2a4:	b5b0      	push	{r4, r5, r7, lr}
 801a2a6:	b082      	sub	sp, #8
 801a2a8:	af00      	add	r7, sp, #0
 801a2aa:	6078      	str	r0, [r7, #4]
 801a2ac:	6039      	str	r1, [r7, #0]
 801a2ae:	687b      	ldr	r3, [r7, #4]
 801a2b0:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801a2b2:	4618      	mov	r0, r3
 801a2b4:	f000 f901 	bl	801a4ba <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801a2b8:	4604      	mov	r4, r0
 801a2ba:	6838      	ldr	r0, [r7, #0]
 801a2bc:	f7f0 fcf4 	bl	800aca8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 801a2c0:	4603      	mov	r3, r0
 801a2c2:	4619      	mov	r1, r3
 801a2c4:	4620      	mov	r0, r4
 801a2c6:	f000 f94e 	bl	801a566 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKbEEvOT_OT0_>
	  return {};
 801a2ca:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801a2cc:	4618      	mov	r0, r3
 801a2ce:	3708      	adds	r7, #8
 801a2d0:	46bd      	mov	sp, r7
 801a2d2:	bdb0      	pop	{r4, r5, r7, pc}

0801a2d4 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKS7_EENS0_16__variant_cookieESR_>:
 801a2d4:	b5b0      	push	{r4, r5, r7, lr}
 801a2d6:	b082      	sub	sp, #8
 801a2d8:	af00      	add	r7, sp, #0
 801a2da:	6078      	str	r0, [r7, #4]
 801a2dc:	6039      	str	r1, [r7, #0]
 801a2de:	687b      	ldr	r3, [r7, #4]
 801a2e0:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801a2e2:	4618      	mov	r0, r3
 801a2e4:	f000 f8e9 	bl	801a4ba <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801a2e8:	4604      	mov	r4, r0
 801a2ea:	6838      	ldr	r0, [r7, #0]
 801a2ec:	f7f0 fc76 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801a2f0:	4603      	mov	r3, r0
 801a2f2:	4619      	mov	r1, r3
 801a2f4:	4620      	mov	r0, r4
 801a2f6:	f000 f951 	bl	801a59c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKS8_EEvOT_OT0_>
	  return {};
 801a2fa:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801a2fc:	4618      	mov	r0, r3
 801a2fe:	3708      	adds	r7, #8
 801a300:	46bd      	mov	sp, r7
 801a302:	bdb0      	pop	{r4, r5, r7, pc}

0801a304 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE7_M_addrEv>:
      _M_addr() const noexcept
 801a304:	b480      	push	{r7}
 801a306:	b083      	sub	sp, #12
 801a308:	af00      	add	r7, sp, #0
 801a30a:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 801a30c:	687b      	ldr	r3, [r7, #4]
 801a30e:	4618      	mov	r0, r3
 801a310:	370c      	adds	r7, #12
 801a312:	46bd      	mov	sp, r7
 801a314:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a318:	4770      	bx	lr

0801a31a <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKSA_EENS0_16__variant_cookieESR_>:
 801a31a:	b5b0      	push	{r4, r5, r7, lr}
 801a31c:	b082      	sub	sp, #8
 801a31e:	af00      	add	r7, sp, #0
 801a320:	6078      	str	r0, [r7, #4]
 801a322:	6039      	str	r1, [r7, #0]
 801a324:	687b      	ldr	r3, [r7, #4]
 801a326:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801a328:	4618      	mov	r0, r3
 801a32a:	f000 f8c6 	bl	801a4ba <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801a32e:	4604      	mov	r4, r0
 801a330:	6838      	ldr	r0, [r7, #0]
 801a332:	f7ff fe56 	bl	8019fe2 <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 801a336:	4603      	mov	r3, r0
 801a338:	4619      	mov	r1, r3
 801a33a:	4620      	mov	r0, r4
 801a33c:	f000 f94a 	bl	801a5d4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKSB_EEvOT_OT0_>
	  return {};
 801a340:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801a342:	4618      	mov	r0, r3
 801a344:	3708      	adds	r7, #8
 801a346:	46bd      	mov	sp, r7
 801a348:	bdb0      	pop	{r4, r5, r7, pc}

0801a34a <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIiSaIiEEE7_M_addrEv>:
      _M_addr() const noexcept
 801a34a:	b480      	push	{r7}
 801a34c:	b083      	sub	sp, #12
 801a34e:	af00      	add	r7, sp, #0
 801a350:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 801a352:	687b      	ldr	r3, [r7, #4]
 801a354:	4618      	mov	r0, r3
 801a356:	370c      	adds	r7, #12
 801a358:	46bd      	mov	sp, r7
 801a35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a35e:	4770      	bx	lr

0801a360 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKSC_EENS0_16__variant_cookieESR_>:
 801a360:	b5b0      	push	{r4, r5, r7, lr}
 801a362:	b082      	sub	sp, #8
 801a364:	af00      	add	r7, sp, #0
 801a366:	6078      	str	r0, [r7, #4]
 801a368:	6039      	str	r1, [r7, #0]
 801a36a:	687b      	ldr	r3, [r7, #4]
 801a36c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801a36e:	4618      	mov	r0, r3
 801a370:	f000 f8a3 	bl	801a4ba <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801a374:	4604      	mov	r4, r0
 801a376:	6838      	ldr	r0, [r7, #0]
 801a378:	f7ff fe61 	bl	801a03e <_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801a37c:	4603      	mov	r3, r0
 801a37e:	4619      	mov	r1, r3
 801a380:	4620      	mov	r0, r4
 801a382:	f000 f943 	bl	801a60c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKSD_EEvOT_OT0_>
	  return {};
 801a386:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801a388:	4618      	mov	r0, r3
 801a38a:	3708      	adds	r7, #8
 801a38c:	46bd      	mov	sp, r7
 801a38e:	bdb0      	pop	{r4, r5, r7, pc}

0801a390 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIfSaIfEEE7_M_addrEv>:
      _M_addr() const noexcept
 801a390:	b480      	push	{r7}
 801a392:	b083      	sub	sp, #12
 801a394:	af00      	add	r7, sp, #0
 801a396:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 801a398:	687b      	ldr	r3, [r7, #4]
 801a39a:	4618      	mov	r0, r3
 801a39c:	370c      	adds	r7, #12
 801a39e:	46bd      	mov	sp, r7
 801a3a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a3a4:	4770      	bx	lr

0801a3a6 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKSE_EENS0_16__variant_cookieESR_>:
 801a3a6:	b5b0      	push	{r4, r5, r7, lr}
 801a3a8:	b082      	sub	sp, #8
 801a3aa:	af00      	add	r7, sp, #0
 801a3ac:	6078      	str	r0, [r7, #4]
 801a3ae:	6039      	str	r1, [r7, #0]
 801a3b0:	687b      	ldr	r3, [r7, #4]
 801a3b2:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801a3b4:	4618      	mov	r0, r3
 801a3b6:	f000 f880 	bl	801a4ba <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801a3ba:	4604      	mov	r4, r0
 801a3bc:	6838      	ldr	r0, [r7, #0]
 801a3be:	f7ff fe6c 	bl	801a09a <_ZSt7forwardIRKSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801a3c2:	4603      	mov	r3, r0
 801a3c4:	4619      	mov	r1, r3
 801a3c6:	4620      	mov	r0, r4
 801a3c8:	f000 f93c 	bl	801a644 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKSF_EEvOT_OT0_>
	  return {};
 801a3cc:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801a3ce:	4618      	mov	r0, r3
 801a3d0:	3708      	adds	r7, #8
 801a3d2:	46bd      	mov	sp, r7
 801a3d4:	bdb0      	pop	{r4, r5, r7, pc}

0801a3d6 <_ZNK9__gnu_cxx16__aligned_membufISt6vectorIbSaIbEEE7_M_addrEv>:
      _M_addr() const noexcept
 801a3d6:	b480      	push	{r7}
 801a3d8:	b083      	sub	sp, #12
 801a3da:	af00      	add	r7, sp, #0
 801a3dc:	6078      	str	r0, [r7, #4]
      { return static_cast<const void*>(&_M_storage); }
 801a3de:	687b      	ldr	r3, [r7, #4]
 801a3e0:	4618      	mov	r0, r3
 801a3e2:	370c      	adds	r7, #12
 801a3e4:	46bd      	mov	sp, r7
 801a3e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a3ea:	4770      	bx	lr

0801a3ec <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Copy_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEERKSI_EEvOT0_OT1_ENUlOT_E_clIRKSG_EENS0_16__variant_cookieESR_>:
 801a3ec:	b5b0      	push	{r4, r5, r7, lr}
 801a3ee:	b082      	sub	sp, #8
 801a3f0:	af00      	add	r7, sp, #0
 801a3f2:	6078      	str	r0, [r7, #4]
 801a3f4:	6039      	str	r1, [r7, #0]
 801a3f6:	687b      	ldr	r3, [r7, #4]
 801a3f8:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801a3fa:	4618      	mov	r0, r3
 801a3fc:	f000 f85d 	bl	801a4ba <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801a400:	4604      	mov	r4, r0
 801a402:	6838      	ldr	r0, [r7, #0]
 801a404:	f7ff fe77 	bl	801a0f6 <_ZSt7forwardIRKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801a408:	4603      	mov	r3, r0
 801a40a:	4619      	mov	r1, r3
 801a40c:	4620      	mov	r0, r4
 801a40e:	f000 f935 	bl	801a67c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKSH_EEvOT_OT0_>
	  return {};
 801a412:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801a414:	4618      	mov	r0, r3
 801a416:	3708      	adds	r7, #8
 801a418:	46bd      	mov	sp, r7
 801a41a:	bdb0      	pop	{r4, r5, r7, pc}

0801a41c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE17_M_construct_nodeIJS9_EEEvPSt13_Rb_tree_nodeIS9_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
 801a41c:	b5b0      	push	{r4, r5, r7, lr}
 801a41e:	b084      	sub	sp, #16
 801a420:	af00      	add	r7, sp, #0
 801a422:	60f8      	str	r0, [r7, #12]
 801a424:	60b9      	str	r1, [r7, #8]
 801a426:	607a      	str	r2, [r7, #4]
	      ::new(__node) _Rb_tree_node<_Val>;
 801a428:	68bb      	ldr	r3, [r7, #8]
 801a42a:	4619      	mov	r1, r3
 801a42c:	2048      	movs	r0, #72	; 0x48
 801a42e:	f7e6 fdfd 	bl	800102c <_ZnwjPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
 801a432:	68f8      	ldr	r0, [r7, #12]
 801a434:	f7f6 f98f 	bl	8010756 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_6SymbolESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE21_M_get_Node_allocatorEv>
 801a438:	4604      	mov	r4, r0
 801a43a:	68b8      	ldr	r0, [r7, #8]
 801a43c:	f7f5 fde9 	bl	8010012 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEE9_M_valptrEv>
 801a440:	4605      	mov	r5, r0
 801a442:	6878      	ldr	r0, [r7, #4]
 801a444:	f7ff f93e 	bl	80196c4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801a448:	4603      	mov	r3, r0
 801a44a:	461a      	mov	r2, r3
 801a44c:	4629      	mov	r1, r5
 801a44e:	4620      	mov	r0, r4
 801a450:	f000 f930 	bl	801a6b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>
	}
 801a454:	bf00      	nop
 801a456:	3710      	adds	r7, #16
 801a458:	46bd      	mov	sp, r7
 801a45a:	bdb0      	pop	{r4, r5, r7, pc}

0801a45c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEE8allocateERSK_j>:
      allocate(allocator_type& __a, size_type __n)
 801a45c:	b580      	push	{r7, lr}
 801a45e:	b082      	sub	sp, #8
 801a460:	af00      	add	r7, sp, #0
 801a462:	6078      	str	r0, [r7, #4]
 801a464:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801a466:	2200      	movs	r2, #0
 801a468:	6839      	ldr	r1, [r7, #0]
 801a46a:	6878      	ldr	r0, [r7, #4]
 801a46c:	f000 f935 	bl	801a6da <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>
 801a470:	4603      	mov	r3, r0
 801a472:	4618      	mov	r0, r3
 801a474:	3708      	adds	r7, #8
 801a476:	46bd      	mov	sp, r7
 801a478:	bd80      	pop	{r7, pc}

0801a47a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS7_ifbEESt6vectorIP10ExpressionSaISD_EEEEEEE9constructISI_JSI_EEEvRSK_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801a47a:	b580      	push	{r7, lr}
 801a47c:	b084      	sub	sp, #16
 801a47e:	af00      	add	r7, sp, #0
 801a480:	60f8      	str	r0, [r7, #12]
 801a482:	60b9      	str	r1, [r7, #8]
 801a484:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801a486:	6878      	ldr	r0, [r7, #4]
 801a488:	f7fe fa54 	bl	8018934 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801a48c:	4603      	mov	r3, r0
 801a48e:	461a      	mov	r2, r3
 801a490:	68b9      	ldr	r1, [r7, #8]
 801a492:	68f8      	ldr	r0, [r7, #12]
 801a494:	f000 f956 	bl	801a744 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>
 801a498:	bf00      	nop
 801a49a:	3710      	adds	r7, #16
 801a49c:	46bd      	mov	sp, r7
 801a49e:	bd80      	pop	{r7, pc}

0801a4a0 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EES2_IiSaIiEES2_IfSaIfEES2_IbSaIbEEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 801a4a0:	b580      	push	{r7, lr}
 801a4a2:	b082      	sub	sp, #8
 801a4a4:	af00      	add	r7, sp, #0
 801a4a6:	6078      	str	r0, [r7, #4]
 801a4a8:	687b      	ldr	r3, [r7, #4]
 801a4aa:	4618      	mov	r0, r3
 801a4ac:	f000 f962 	bl	801a774 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES2_IfSaIfEES2_IbSaIbEEEEC1Ev>
 801a4b0:	687b      	ldr	r3, [r7, #4]
 801a4b2:	4618      	mov	r0, r3
 801a4b4:	3708      	adds	r7, #8
 801a4b6:	46bd      	mov	sp, r7
 801a4b8:	bd80      	pop	{r7, pc}

0801a4ba <_ZSt7forwardIRNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801a4ba:	b480      	push	{r7}
 801a4bc:	b083      	sub	sp, #12
 801a4be:	af00      	add	r7, sp, #0
 801a4c0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801a4c2:	687b      	ldr	r3, [r7, #4]
 801a4c4:	4618      	mov	r0, r3
 801a4c6:	370c      	adds	r7, #12
 801a4c8:	46bd      	mov	sp, r7
 801a4ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a4ce:	4770      	bx	lr

0801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>:
    addressof(_Tp& __r) noexcept
 801a4d0:	b580      	push	{r7, lr}
 801a4d2:	b082      	sub	sp, #8
 801a4d4:	af00      	add	r7, sp, #0
 801a4d6:	6078      	str	r0, [r7, #4]
    { return std::__addressof(__r); }
 801a4d8:	6878      	ldr	r0, [r7, #4]
 801a4da:	f000 f805 	bl	801a4e8 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801a4de:	4603      	mov	r3, r0
 801a4e0:	4618      	mov	r0, r3
 801a4e2:	3708      	adds	r7, #8
 801a4e4:	46bd      	mov	sp, r7
 801a4e6:	bd80      	pop	{r7, pc}

0801a4e8 <_ZSt11__addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 801a4e8:	b480      	push	{r7}
 801a4ea:	b083      	sub	sp, #12
 801a4ec:	af00      	add	r7, sp, #0
 801a4ee:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 801a4f0:	687b      	ldr	r3, [r7, #4]
 801a4f2:	4618      	mov	r0, r3
 801a4f4:	370c      	adds	r7, #12
 801a4f6:	46bd      	mov	sp, r7
 801a4f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a4fc:	4770      	bx	lr

0801a4fe <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801a4fe:	b590      	push	{r4, r7, lr}
 801a500:	b085      	sub	sp, #20
 801a502:	af00      	add	r7, sp, #0
 801a504:	6078      	str	r0, [r7, #4]
 801a506:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801a508:	687b      	ldr	r3, [r7, #4]
 801a50a:	4618      	mov	r0, r3
 801a50c:	f7ff ffe0 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801a510:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801a512:	6838      	ldr	r0, [r7, #0]
 801a514:	f7f0 fb84 	bl	800ac20 <_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE>
 801a518:	4603      	mov	r3, r0
        ::new (__storage)
 801a51a:	681c      	ldr	r4, [r3, #0]
 801a51c:	68fb      	ldr	r3, [r7, #12]
 801a51e:	4619      	mov	r1, r3
 801a520:	2004      	movs	r0, #4
 801a522:	f7e6 fd83 	bl	800102c <_ZnwjPv>
 801a526:	4603      	mov	r3, r0
 801a528:	601c      	str	r4, [r3, #0]
    }
 801a52a:	bf00      	nop
 801a52c:	3714      	adds	r7, #20
 801a52e:	46bd      	mov	sp, r7
 801a530:	bd90      	pop	{r4, r7, pc}

0801a532 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801a532:	b590      	push	{r4, r7, lr}
 801a534:	b085      	sub	sp, #20
 801a536:	af00      	add	r7, sp, #0
 801a538:	6078      	str	r0, [r7, #4]
 801a53a:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801a53c:	687b      	ldr	r3, [r7, #4]
 801a53e:	4618      	mov	r0, r3
 801a540:	f7ff ffc6 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801a544:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801a546:	6838      	ldr	r0, [r7, #0]
 801a548:	f7f0 fb8c 	bl	800ac64 <_ZSt7forwardIRKfEOT_RNSt16remove_referenceIS2_E4typeE>
 801a54c:	4603      	mov	r3, r0
        ::new (__storage)
 801a54e:	681c      	ldr	r4, [r3, #0]
 801a550:	68fb      	ldr	r3, [r7, #12]
 801a552:	4619      	mov	r1, r3
 801a554:	2004      	movs	r0, #4
 801a556:	f7e6 fd69 	bl	800102c <_ZnwjPv>
 801a55a:	4603      	mov	r3, r0
 801a55c:	601c      	str	r4, [r3, #0]
    }
 801a55e:	bf00      	nop
 801a560:	3714      	adds	r7, #20
 801a562:	46bd      	mov	sp, r7
 801a564:	bd90      	pop	{r4, r7, pc}

0801a566 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801a566:	b590      	push	{r4, r7, lr}
 801a568:	b085      	sub	sp, #20
 801a56a:	af00      	add	r7, sp, #0
 801a56c:	6078      	str	r0, [r7, #4]
 801a56e:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801a570:	687b      	ldr	r3, [r7, #4]
 801a572:	4618      	mov	r0, r3
 801a574:	f7ff ffac 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801a578:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801a57a:	6838      	ldr	r0, [r7, #0]
 801a57c:	f7f0 fb94 	bl	800aca8 <_ZSt7forwardIRKbEOT_RNSt16remove_referenceIS2_E4typeE>
 801a580:	4603      	mov	r3, r0
        ::new (__storage)
 801a582:	781c      	ldrb	r4, [r3, #0]
 801a584:	68fb      	ldr	r3, [r7, #12]
 801a586:	4619      	mov	r1, r3
 801a588:	2001      	movs	r0, #1
 801a58a:	f7e6 fd4f 	bl	800102c <_ZnwjPv>
 801a58e:	4603      	mov	r3, r0
 801a590:	4622      	mov	r2, r4
 801a592:	701a      	strb	r2, [r3, #0]
    }
 801a594:	bf00      	nop
 801a596:	3714      	adds	r7, #20
 801a598:	46bd      	mov	sp, r7
 801a59a:	bd90      	pop	{r4, r7, pc}

0801a59c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKS8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801a59c:	b590      	push	{r4, r7, lr}
 801a59e:	b085      	sub	sp, #20
 801a5a0:	af00      	add	r7, sp, #0
 801a5a2:	6078      	str	r0, [r7, #4]
 801a5a4:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801a5a6:	687b      	ldr	r3, [r7, #4]
 801a5a8:	4618      	mov	r0, r3
 801a5aa:	f7ff ff91 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801a5ae:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801a5b0:	6838      	ldr	r0, [r7, #0]
 801a5b2:	f7f0 fb13 	bl	800abdc <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE>
 801a5b6:	4604      	mov	r4, r0
        ::new (__storage)
 801a5b8:	68fb      	ldr	r3, [r7, #12]
 801a5ba:	4619      	mov	r1, r3
 801a5bc:	2018      	movs	r0, #24
 801a5be:	f7e6 fd35 	bl	800102c <_ZnwjPv>
 801a5c2:	4603      	mov	r3, r0
 801a5c4:	4621      	mov	r1, r4
 801a5c6:	4618      	mov	r0, r3
 801a5c8:	f006 f922 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
    }
 801a5cc:	bf00      	nop
 801a5ce:	3714      	adds	r7, #20
 801a5d0:	46bd      	mov	sp, r7
 801a5d2:	bd90      	pop	{r4, r7, pc}

0801a5d4 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKSB_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801a5d4:	b590      	push	{r4, r7, lr}
 801a5d6:	b085      	sub	sp, #20
 801a5d8:	af00      	add	r7, sp, #0
 801a5da:	6078      	str	r0, [r7, #4]
 801a5dc:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801a5de:	687b      	ldr	r3, [r7, #4]
 801a5e0:	4618      	mov	r0, r3
 801a5e2:	f7ff ff75 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801a5e6:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801a5e8:	6838      	ldr	r0, [r7, #0]
 801a5ea:	f7ff fcfa 	bl	8019fe2 <_ZSt7forwardIRKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISB_E4typeE>
 801a5ee:	4604      	mov	r4, r0
        ::new (__storage)
 801a5f0:	68fb      	ldr	r3, [r7, #12]
 801a5f2:	4619      	mov	r1, r3
 801a5f4:	200c      	movs	r0, #12
 801a5f6:	f7e6 fd19 	bl	800102c <_ZnwjPv>
 801a5fa:	4603      	mov	r3, r0
 801a5fc:	4621      	mov	r1, r4
 801a5fe:	4618      	mov	r0, r3
 801a600:	f000 f8c5 	bl	801a78e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_>
    }
 801a604:	bf00      	nop
 801a606:	3714      	adds	r7, #20
 801a608:	46bd      	mov	sp, r7
 801a60a:	bd90      	pop	{r4, r7, pc}

0801a60c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKSD_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801a60c:	b590      	push	{r4, r7, lr}
 801a60e:	b085      	sub	sp, #20
 801a610:	af00      	add	r7, sp, #0
 801a612:	6078      	str	r0, [r7, #4]
 801a614:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801a616:	687b      	ldr	r3, [r7, #4]
 801a618:	4618      	mov	r0, r3
 801a61a:	f7ff ff59 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801a61e:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801a620:	6838      	ldr	r0, [r7, #0]
 801a622:	f7ff fd0c 	bl	801a03e <_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801a626:	4604      	mov	r4, r0
        ::new (__storage)
 801a628:	68fb      	ldr	r3, [r7, #12]
 801a62a:	4619      	mov	r1, r3
 801a62c:	200c      	movs	r0, #12
 801a62e:	f7e6 fcfd 	bl	800102c <_ZnwjPv>
 801a632:	4603      	mov	r3, r0
 801a634:	4621      	mov	r1, r4
 801a636:	4618      	mov	r0, r3
 801a638:	f000 f8e6 	bl	801a808 <_ZNSt6vectorIiSaIiEEC1ERKS1_>
    }
 801a63c:	bf00      	nop
 801a63e:	3714      	adds	r7, #20
 801a640:	46bd      	mov	sp, r7
 801a642:	bd90      	pop	{r4, r7, pc}

0801a644 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKSF_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801a644:	b590      	push	{r4, r7, lr}
 801a646:	b085      	sub	sp, #20
 801a648:	af00      	add	r7, sp, #0
 801a64a:	6078      	str	r0, [r7, #4]
 801a64c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801a64e:	687b      	ldr	r3, [r7, #4]
 801a650:	4618      	mov	r0, r3
 801a652:	f7ff ff3d 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801a656:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801a658:	6838      	ldr	r0, [r7, #0]
 801a65a:	f7ff fd1e 	bl	801a09a <_ZSt7forwardIRKSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801a65e:	4604      	mov	r4, r0
        ::new (__storage)
 801a660:	68fb      	ldr	r3, [r7, #12]
 801a662:	4619      	mov	r1, r3
 801a664:	200c      	movs	r0, #12
 801a666:	f7e6 fce1 	bl	800102c <_ZnwjPv>
 801a66a:	4603      	mov	r3, r0
 801a66c:	4621      	mov	r1, r4
 801a66e:	4618      	mov	r0, r3
 801a670:	f000 f907 	bl	801a882 <_ZNSt6vectorIfSaIfEEC1ERKS1_>
    }
 801a674:	bf00      	nop
 801a676:	3714      	adds	r7, #20
 801a678:	46bd      	mov	sp, r7
 801a67a:	bd90      	pop	{r4, r7, pc}

0801a67c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEERKSH_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801a67c:	b590      	push	{r4, r7, lr}
 801a67e:	b085      	sub	sp, #20
 801a680:	af00      	add	r7, sp, #0
 801a682:	6078      	str	r0, [r7, #4]
 801a684:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801a686:	687b      	ldr	r3, [r7, #4]
 801a688:	4618      	mov	r0, r3
 801a68a:	f7ff ff21 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801a68e:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801a690:	6838      	ldr	r0, [r7, #0]
 801a692:	f7ff fd30 	bl	801a0f6 <_ZSt7forwardIRKSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS5_E4typeE>
 801a696:	4604      	mov	r4, r0
        ::new (__storage)
 801a698:	68fb      	ldr	r3, [r7, #12]
 801a69a:	4619      	mov	r1, r3
 801a69c:	2014      	movs	r0, #20
 801a69e:	f7e6 fcc5 	bl	800102c <_ZnwjPv>
 801a6a2:	4603      	mov	r3, r0
 801a6a4:	4621      	mov	r1, r4
 801a6a6:	4618      	mov	r0, r3
 801a6a8:	f000 f928 	bl	801a8fc <_ZNSt6vectorIbSaIbEEC1ERKS1_>
    }
 801a6ac:	bf00      	nop
 801a6ae:	3714      	adds	r7, #20
 801a6b0:	46bd      	mov	sp, r7
 801a6b2:	bd90      	pop	{r4, r7, pc}

0801a6b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEEE9constructISA_JSA_EEEvRSC_PT_DpOT0_>:
	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 801a6b4:	b580      	push	{r7, lr}
 801a6b6:	b084      	sub	sp, #16
 801a6b8:	af00      	add	r7, sp, #0
 801a6ba:	60f8      	str	r0, [r7, #12]
 801a6bc:	60b9      	str	r1, [r7, #8]
 801a6be:	607a      	str	r2, [r7, #4]
	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 801a6c0:	6878      	ldr	r0, [r7, #4]
 801a6c2:	f7fe ffff 	bl	80196c4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801a6c6:	4603      	mov	r3, r0
 801a6c8:	461a      	mov	r2, r3
 801a6ca:	68b9      	ldr	r1, [r7, #8]
 801a6cc:	68f8      	ldr	r0, [r7, #12]
 801a6ce:	f000 f9dc 	bl	801aa8a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>
 801a6d2:	bf00      	nop
 801a6d4:	3710      	adds	r7, #16
 801a6d6:	46bd      	mov	sp, r7
 801a6d8:	bd80      	pop	{r7, pc}

0801a6da <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801a6da:	b580      	push	{r7, lr}
 801a6dc:	b084      	sub	sp, #16
 801a6de:	af00      	add	r7, sp, #0
 801a6e0:	60f8      	str	r0, [r7, #12]
 801a6e2:	60b9      	str	r1, [r7, #8]
 801a6e4:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801a6e6:	68f8      	ldr	r0, [r7, #12]
 801a6e8:	f000 f9e8 	bl	801aabc <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>
 801a6ec:	4602      	mov	r2, r0
 801a6ee:	68bb      	ldr	r3, [r7, #8]
 801a6f0:	4293      	cmp	r3, r2
 801a6f2:	bf8c      	ite	hi
 801a6f4:	2301      	movhi	r3, #1
 801a6f6:	2300      	movls	r3, #0
 801a6f8:	b2db      	uxtb	r3, r3
 801a6fa:	2b00      	cmp	r3, #0
 801a6fc:	d001      	beq.n	801a702 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801a6fe:	f005 fe48 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801a702:	68bb      	ldr	r3, [r7, #8]
 801a704:	222c      	movs	r2, #44	; 0x2c
 801a706:	fb02 f303 	mul.w	r3, r2, r3
 801a70a:	4618      	mov	r0, r3
 801a70c:	f005 fd7c 	bl	8020208 <_Znwj>
 801a710:	4603      	mov	r3, r0
 801a712:	bf00      	nop
      }
 801a714:	4618      	mov	r0, r3
 801a716:	3710      	adds	r7, #16
 801a718:	46bd      	mov	sp, r7
 801a71a:	bd80      	pop	{r7, pc}

0801a71c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>:
      constexpr pair(pair&&) = default;
 801a71c:	b580      	push	{r7, lr}
 801a71e:	b082      	sub	sp, #8
 801a720:	af00      	add	r7, sp, #0
 801a722:	6078      	str	r0, [r7, #4]
 801a724:	6039      	str	r1, [r7, #0]
 801a726:	687b      	ldr	r3, [r7, #4]
 801a728:	683a      	ldr	r2, [r7, #0]
 801a72a:	4611      	mov	r1, r2
 801a72c:	4618      	mov	r0, r3
 801a72e:	f006 f86f 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801a732:	683b      	ldr	r3, [r7, #0]
 801a734:	699a      	ldr	r2, [r3, #24]
 801a736:	687b      	ldr	r3, [r7, #4]
 801a738:	619a      	str	r2, [r3, #24]
 801a73a:	687b      	ldr	r3, [r7, #4]
 801a73c:	4618      	mov	r0, r3
 801a73e:	3708      	adds	r7, #8
 801a740:	46bd      	mov	sp, r7
 801a742:	bd80      	pop	{r7, pc}

0801a744 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE9constructISJ_JSJ_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801a744:	b590      	push	{r4, r7, lr}
 801a746:	b085      	sub	sp, #20
 801a748:	af00      	add	r7, sp, #0
 801a74a:	60f8      	str	r0, [r7, #12]
 801a74c:	60b9      	str	r1, [r7, #8]
 801a74e:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801a750:	6878      	ldr	r0, [r7, #4]
 801a752:	f7fe f8ef 	bl	8018934 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS6_ifbEESt6vectorIP10ExpressionSaISC_EEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801a756:	4604      	mov	r4, r0
 801a758:	68bb      	ldr	r3, [r7, #8]
 801a75a:	4619      	mov	r1, r3
 801a75c:	201c      	movs	r0, #28
 801a75e:	f7e6 fc65 	bl	800102c <_ZnwjPv>
 801a762:	4603      	mov	r3, r0
 801a764:	4621      	mov	r1, r4
 801a766:	4618      	mov	r0, r3
 801a768:	f7ff ffd8 	bl	801a71c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS5_ifbEESt6vectorIP10ExpressionSaISB_EEEEC1EOSG_>
 801a76c:	bf00      	nop
 801a76e:	3714      	adds	r7, #20
 801a770:	46bd      	mov	sp, r7
 801a772:	bd90      	pop	{r4, r7, pc}

0801a774 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES2_IfSaIfEES2_IbSaIbEEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 801a774:	b580      	push	{r7, lr}
 801a776:	b082      	sub	sp, #8
 801a778:	af00      	add	r7, sp, #0
 801a77a:	6078      	str	r0, [r7, #4]
 801a77c:	687b      	ldr	r3, [r7, #4]
 801a77e:	4618      	mov	r0, r3
 801a780:	f000 f9aa 	bl	801aad8 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES2_IbSaIbEEEEC1Ev>
 801a784:	687b      	ldr	r3, [r7, #4]
 801a786:	4618      	mov	r0, r3
 801a788:	3708      	adds	r7, #8
 801a78a:	46bd      	mov	sp, r7
 801a78c:	bd80      	pop	{r7, pc}

0801a78e <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1ERKS7_>:
      vector(const vector& __x)
 801a78e:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a790:	b085      	sub	sp, #20
 801a792:	af00      	add	r7, sp, #0
 801a794:	6078      	str	r0, [r7, #4]
 801a796:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 801a798:	687c      	ldr	r4, [r7, #4]
 801a79a:	6838      	ldr	r0, [r7, #0]
 801a79c:	f000 f9aa 	bl	801aaf4 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>
 801a7a0:	4605      	mov	r5, r0
 801a7a2:	683b      	ldr	r3, [r7, #0]
 801a7a4:	4618      	mov	r0, r3
 801a7a6:	f7ff fb28 	bl	8019dfa <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 801a7aa:	4602      	mov	r2, r0
 801a7ac:	f107 030c 	add.w	r3, r7, #12
 801a7b0:	4611      	mov	r1, r2
 801a7b2:	4618      	mov	r0, r3
 801a7b4:	f000 f9b4 	bl	801ab20 <_ZN9__gnu_cxx14__alloc_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES6_E17_S_select_on_copyERKS7_>
 801a7b8:	f107 030c 	add.w	r3, r7, #12
 801a7bc:	461a      	mov	r2, r3
 801a7be:	4629      	mov	r1, r5
 801a7c0:	4620      	mov	r0, r4
 801a7c2:	f000 f9bb 	bl	801ab3c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EjRKS6_>
 801a7c6:	f107 030c 	add.w	r3, r7, #12
 801a7ca:	4618      	mov	r0, r3
 801a7cc:	f7f7 fd85 	bl	80122da <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 801a7d0:	6838      	ldr	r0, [r7, #0]
 801a7d2:	f000 f9c7 	bl	801ab64 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>
 801a7d6:	4605      	mov	r5, r0
 801a7d8:	6838      	ldr	r0, [r7, #0]
 801a7da:	f000 f9d7 	bl	801ab8c <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>
 801a7de:	4606      	mov	r6, r0
 801a7e0:	687b      	ldr	r3, [r7, #4]
 801a7e2:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 801a7e4:	687b      	ldr	r3, [r7, #4]
 801a7e6:	4618      	mov	r0, r3
 801a7e8:	f7f7 fcc6 	bl	8012178 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
 801a7ec:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 801a7ee:	4622      	mov	r2, r4
 801a7f0:	4631      	mov	r1, r6
 801a7f2:	4628      	mov	r0, r5
 801a7f4:	f000 f9de 	bl	801abb4 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E>
 801a7f8:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 801a7fa:	687b      	ldr	r3, [r7, #4]
 801a7fc:	605a      	str	r2, [r3, #4]
      }
 801a7fe:	687b      	ldr	r3, [r7, #4]
 801a800:	4618      	mov	r0, r3
 801a802:	3714      	adds	r7, #20
 801a804:	46bd      	mov	sp, r7
 801a806:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a808 <_ZNSt6vectorIiSaIiEEC1ERKS1_>:
      vector(const vector& __x)
 801a808:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a80a:	b085      	sub	sp, #20
 801a80c:	af00      	add	r7, sp, #0
 801a80e:	6078      	str	r0, [r7, #4]
 801a810:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 801a812:	687c      	ldr	r4, [r7, #4]
 801a814:	6838      	ldr	r0, [r7, #0]
 801a816:	f000 f9de 	bl	801abd6 <_ZNKSt6vectorIiSaIiEE4sizeEv>
 801a81a:	4605      	mov	r5, r0
 801a81c:	683b      	ldr	r3, [r7, #0]
 801a81e:	4618      	mov	r0, r3
 801a820:	f000 f9f7 	bl	801ac12 <_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
 801a824:	4602      	mov	r2, r0
 801a826:	f107 030c 	add.w	r3, r7, #12
 801a82a:	4611      	mov	r1, r2
 801a82c:	4618      	mov	r0, r3
 801a82e:	f000 f9e2 	bl	801abf6 <_ZN9__gnu_cxx14__alloc_traitsISaIiEiE17_S_select_on_copyERKS1_>
 801a832:	f107 030c 	add.w	r3, r7, #12
 801a836:	461a      	mov	r2, r3
 801a838:	4629      	mov	r1, r5
 801a83a:	4620      	mov	r0, r4
 801a83c:	f000 f9f4 	bl	801ac28 <_ZNSt12_Vector_baseIiSaIiEEC1EjRKS0_>
 801a840:	f107 030c 	add.w	r3, r7, #12
 801a844:	4618      	mov	r0, r3
 801a846:	f7f7 fd74 	bl	8012332 <_ZNSaIiED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 801a84a:	6838      	ldr	r0, [r7, #0]
 801a84c:	f000 fa00 	bl	801ac50 <_ZNKSt6vectorIiSaIiEE5beginEv>
 801a850:	4605      	mov	r5, r0
 801a852:	6838      	ldr	r0, [r7, #0]
 801a854:	f000 fa10 	bl	801ac78 <_ZNKSt6vectorIiSaIiEE3endEv>
 801a858:	4606      	mov	r6, r0
 801a85a:	687b      	ldr	r3, [r7, #4]
 801a85c:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 801a85e:	687b      	ldr	r3, [r7, #4]
 801a860:	4618      	mov	r0, r3
 801a862:	f7f7 fcc7 	bl	80121f4 <_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>
 801a866:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 801a868:	4622      	mov	r2, r4
 801a86a:	4631      	mov	r1, r6
 801a86c:	4628      	mov	r0, r5
 801a86e:	f000 fa17 	bl	801aca0 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E>
 801a872:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 801a874:	687b      	ldr	r3, [r7, #4]
 801a876:	605a      	str	r2, [r3, #4]
      }
 801a878:	687b      	ldr	r3, [r7, #4]
 801a87a:	4618      	mov	r0, r3
 801a87c:	3714      	adds	r7, #20
 801a87e:	46bd      	mov	sp, r7
 801a880:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a882 <_ZNSt6vectorIfSaIfEEC1ERKS1_>:
      vector(const vector& __x)
 801a882:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a884:	b085      	sub	sp, #20
 801a886:	af00      	add	r7, sp, #0
 801a888:	6078      	str	r0, [r7, #4]
 801a88a:	6039      	str	r1, [r7, #0]
	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 801a88c:	687c      	ldr	r4, [r7, #4]
 801a88e:	6838      	ldr	r0, [r7, #0]
 801a890:	f000 fa17 	bl	801acc2 <_ZNKSt6vectorIfSaIfEE4sizeEv>
 801a894:	4605      	mov	r5, r0
 801a896:	683b      	ldr	r3, [r7, #0]
 801a898:	4618      	mov	r0, r3
 801a89a:	f000 fa30 	bl	801acfe <_ZNKSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv>
 801a89e:	4602      	mov	r2, r0
 801a8a0:	f107 030c 	add.w	r3, r7, #12
 801a8a4:	4611      	mov	r1, r2
 801a8a6:	4618      	mov	r0, r3
 801a8a8:	f000 fa1b 	bl	801ace2 <_ZN9__gnu_cxx14__alloc_traitsISaIfEfE17_S_select_on_copyERKS1_>
 801a8ac:	f107 030c 	add.w	r3, r7, #12
 801a8b0:	461a      	mov	r2, r3
 801a8b2:	4629      	mov	r1, r5
 801a8b4:	4620      	mov	r0, r4
 801a8b6:	f000 fa2d 	bl	801ad14 <_ZNSt12_Vector_baseIfSaIfEEC1EjRKS0_>
 801a8ba:	f107 030c 	add.w	r3, r7, #12
 801a8be:	4618      	mov	r0, r3
 801a8c0:	f7f7 fd63 	bl	801238a <_ZNSaIfED1Ev>
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 801a8c4:	6838      	ldr	r0, [r7, #0]
 801a8c6:	f000 fa39 	bl	801ad3c <_ZNKSt6vectorIfSaIfEE5beginEv>
 801a8ca:	4605      	mov	r5, r0
 801a8cc:	6838      	ldr	r0, [r7, #0]
 801a8ce:	f000 fa49 	bl	801ad64 <_ZNKSt6vectorIfSaIfEE3endEv>
 801a8d2:	4606      	mov	r6, r0
 801a8d4:	687b      	ldr	r3, [r7, #4]
 801a8d6:	681c      	ldr	r4, [r3, #0]
				      _M_get_Tp_allocator());
 801a8d8:	687b      	ldr	r3, [r7, #4]
 801a8da:	4618      	mov	r0, r3
 801a8dc:	f7f7 fcc8 	bl	8012270 <_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv>
 801a8e0:	4603      	mov	r3, r0
	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 801a8e2:	4622      	mov	r2, r4
 801a8e4:	4631      	mov	r1, r6
 801a8e6:	4628      	mov	r0, r5
 801a8e8:	f000 fa50 	bl	801ad8c <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPffET0_T_SA_S9_RSaIT1_E>
 801a8ec:	4602      	mov	r2, r0
	this->_M_impl._M_finish =
 801a8ee:	687b      	ldr	r3, [r7, #4]
 801a8f0:	605a      	str	r2, [r3, #4]
      }
 801a8f2:	687b      	ldr	r3, [r7, #4]
 801a8f4:	4618      	mov	r0, r3
 801a8f6:	3714      	adds	r7, #20
 801a8f8:	46bd      	mov	sp, r7
 801a8fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a8fc <_ZNSt6vectorIbSaIbEEC1ERKS1_>:
      vector(const vector& __x)
 801a8fc:	b590      	push	{r4, r7, lr}
 801a8fe:	b08f      	sub	sp, #60	; 0x3c
 801a900:	af04      	add	r7, sp, #16
 801a902:	6078      	str	r0, [r7, #4]
 801a904:	6039      	str	r1, [r7, #0]
      : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
 801a906:	687c      	ldr	r4, [r7, #4]
 801a908:	683b      	ldr	r3, [r7, #0]
 801a90a:	4618      	mov	r0, r3
 801a90c:	f000 fa5d 	bl	801adca <_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv>
 801a910:	4602      	mov	r2, r0
 801a912:	f107 030c 	add.w	r3, r7, #12
 801a916:	4611      	mov	r1, r2
 801a918:	4618      	mov	r0, r3
 801a91a:	f000 fa48 	bl	801adae <_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_>
 801a91e:	f107 020c 	add.w	r2, r7, #12
 801a922:	f107 0308 	add.w	r3, r7, #8
 801a926:	4611      	mov	r1, r2
 801a928:	4618      	mov	r0, r3
 801a92a:	f000 fa59 	bl	801ade0 <_ZNSaIbEC1ImEERKSaIT_E>
 801a92e:	f107 0308 	add.w	r3, r7, #8
 801a932:	4619      	mov	r1, r3
 801a934:	4620      	mov	r0, r4
 801a936:	f000 fa6c 	bl	801ae12 <_ZNSt13_Bvector_baseISaIbEEC1ERKS0_>
 801a93a:	f107 0308 	add.w	r3, r7, #8
 801a93e:	4618      	mov	r0, r3
 801a940:	f000 fa5b 	bl	801adfa <_ZNSaIbED1Ev>
 801a944:	f107 030c 	add.w	r3, r7, #12
 801a948:	4618      	mov	r0, r3
 801a94a:	f7f7 fd4a 	bl	80123e2 <_ZNSaImED1Ev>
	_M_initialize(__x.size());
 801a94e:	6838      	ldr	r0, [r7, #0]
 801a950:	f000 fac9 	bl	801aee6 <_ZNKSt6vectorIbSaIbEE4sizeEv>
 801a954:	4603      	mov	r3, r0
 801a956:	4619      	mov	r1, r3
 801a958:	6878      	ldr	r0, [r7, #4]
 801a95a:	f000 fa76 	bl	801ae4a <_ZNSt6vectorIbSaIbEE13_M_initializeEj>
	_M_copy_aligned(__x.begin(), __x.end(), this->_M_impl._M_start);
 801a95e:	f107 0318 	add.w	r3, r7, #24
 801a962:	6839      	ldr	r1, [r7, #0]
 801a964:	4618      	mov	r0, r3
 801a966:	f000 fb0e 	bl	801af86 <_ZNKSt6vectorIbSaIbEE5beginEv>
 801a96a:	f107 0320 	add.w	r3, r7, #32
 801a96e:	6839      	ldr	r1, [r7, #0]
 801a970:	4618      	mov	r0, r3
 801a972:	f000 fb18 	bl	801afa6 <_ZNKSt6vectorIbSaIbEE3endEv>
 801a976:	f107 0410 	add.w	r4, r7, #16
 801a97a:	687a      	ldr	r2, [r7, #4]
 801a97c:	ab02      	add	r3, sp, #8
 801a97e:	e892 0003 	ldmia.w	r2, {r0, r1}
 801a982:	e883 0003 	stmia.w	r3, {r0, r1}
 801a986:	466a      	mov	r2, sp
 801a988:	f107 0320 	add.w	r3, r7, #32
 801a98c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a990:	e882 0003 	stmia.w	r2, {r0, r1}
 801a994:	f107 0318 	add.w	r3, r7, #24
 801a998:	cb0c      	ldmia	r3, {r2, r3}
 801a99a:	6879      	ldr	r1, [r7, #4]
 801a99c:	4620      	mov	r0, r4
 801a99e:	f000 fabf 	bl	801af20 <_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator>
      }
 801a9a2:	687b      	ldr	r3, [r7, #4]
 801a9a4:	4618      	mov	r0, r3
 801a9a6:	372c      	adds	r7, #44	; 0x2c
 801a9a8:	46bd      	mov	sp, r7
 801a9aa:	bd90      	pop	{r4, r7, pc}

0801a9ac <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1EOSH_>:
      _Copy_assign_base(_Copy_assign_base&&) = default;
 801a9ac:	b580      	push	{r7, lr}
 801a9ae:	b082      	sub	sp, #8
 801a9b0:	af00      	add	r7, sp, #0
 801a9b2:	6078      	str	r0, [r7, #4]
 801a9b4:	6039      	str	r1, [r7, #0]
 801a9b6:	687b      	ldr	r3, [r7, #4]
 801a9b8:	683a      	ldr	r2, [r7, #0]
 801a9ba:	4611      	mov	r1, r2
 801a9bc:	4618      	mov	r0, r3
 801a9be:	f000 fb0e 	bl	801afde <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1EOSH_>
 801a9c2:	687b      	ldr	r3, [r7, #4]
 801a9c4:	4618      	mov	r0, r3
 801a9c6:	3708      	adds	r7, #8
 801a9c8:	46bd      	mov	sp, r7
 801a9ca:	bd80      	pop	{r7, pc}

0801a9cc <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1EOSH_>:
      _Move_assign_base(_Move_assign_base&&) = default;
 801a9cc:	b580      	push	{r7, lr}
 801a9ce:	b082      	sub	sp, #8
 801a9d0:	af00      	add	r7, sp, #0
 801a9d2:	6078      	str	r0, [r7, #4]
 801a9d4:	6039      	str	r1, [r7, #0]
 801a9d6:	687b      	ldr	r3, [r7, #4]
 801a9d8:	683a      	ldr	r2, [r7, #0]
 801a9da:	4611      	mov	r1, r2
 801a9dc:	4618      	mov	r0, r3
 801a9de:	f7ff ffe5 	bl	801a9ac <_ZNSt8__detail9__variant17_Copy_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1EOSH_>
 801a9e2:	687b      	ldr	r3, [r7, #4]
 801a9e4:	4618      	mov	r0, r3
 801a9e6:	3708      	adds	r7, #8
 801a9e8:	46bd      	mov	sp, r7
 801a9ea:	bd80      	pop	{r7, pc}

0801a9ec <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1EOSH_>:
      _Variant_base(_Variant_base&&) = default;
 801a9ec:	b580      	push	{r7, lr}
 801a9ee:	b082      	sub	sp, #8
 801a9f0:	af00      	add	r7, sp, #0
 801a9f2:	6078      	str	r0, [r7, #4]
 801a9f4:	6039      	str	r1, [r7, #0]
 801a9f6:	687b      	ldr	r3, [r7, #4]
 801a9f8:	683a      	ldr	r2, [r7, #0]
 801a9fa:	4611      	mov	r1, r2
 801a9fc:	4618      	mov	r0, r3
 801a9fe:	f7ff ffe5 	bl	801a9cc <_ZNSt8__detail9__variant17_Move_assign_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1EOSH_>
 801aa02:	687b      	ldr	r3, [r7, #4]
 801aa04:	4618      	mov	r0, r3
 801aa06:	3708      	adds	r7, #8
 801aa08:	46bd      	mov	sp, r7
 801aa0a:	bd80      	pop	{r7, pc}

0801aa0c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEC1EOSF_>:
      variant(variant&&) = default;
 801aa0c:	b580      	push	{r7, lr}
 801aa0e:	b082      	sub	sp, #8
 801aa10:	af00      	add	r7, sp, #0
 801aa12:	6078      	str	r0, [r7, #4]
 801aa14:	6039      	str	r1, [r7, #0]
 801aa16:	687b      	ldr	r3, [r7, #4]
 801aa18:	683a      	ldr	r2, [r7, #0]
 801aa1a:	4611      	mov	r1, r2
 801aa1c:	4618      	mov	r0, r3
 801aa1e:	f7ff ffe5 	bl	801a9ec <_ZNSt8__detail9__variant13_Variant_baseIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1EOSH_>
 801aa22:	687b      	ldr	r3, [r7, #4]
 801aa24:	4618      	mov	r0, r3
 801aa26:	3708      	adds	r7, #8
 801aa28:	46bd      	mov	sp, r7
 801aa2a:	bd80      	pop	{r7, pc}

0801aa2c <_ZN6SymbolC1EOS_>:
 801aa2c:	b580      	push	{r7, lr}
 801aa2e:	b082      	sub	sp, #8
 801aa30:	af00      	add	r7, sp, #0
 801aa32:	6078      	str	r0, [r7, #4]
 801aa34:	6039      	str	r1, [r7, #0]
 801aa36:	683b      	ldr	r3, [r7, #0]
 801aa38:	781a      	ldrb	r2, [r3, #0]
 801aa3a:	687b      	ldr	r3, [r7, #4]
 801aa3c:	701a      	strb	r2, [r3, #0]
 801aa3e:	687b      	ldr	r3, [r7, #4]
 801aa40:	1d1a      	adds	r2, r3, #4
 801aa42:	683b      	ldr	r3, [r7, #0]
 801aa44:	3304      	adds	r3, #4
 801aa46:	4619      	mov	r1, r3
 801aa48:	4610      	mov	r0, r2
 801aa4a:	f7ff ffdf 	bl	801aa0c <_ZNSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEEC1EOSF_>
 801aa4e:	687b      	ldr	r3, [r7, #4]
 801aa50:	4618      	mov	r0, r3
 801aa52:	3708      	adds	r7, #8
 801aa54:	46bd      	mov	sp, r7
 801aa56:	bd80      	pop	{r7, pc}

0801aa58 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>:
 801aa58:	b580      	push	{r7, lr}
 801aa5a:	b082      	sub	sp, #8
 801aa5c:	af00      	add	r7, sp, #0
 801aa5e:	6078      	str	r0, [r7, #4]
 801aa60:	6039      	str	r1, [r7, #0]
 801aa62:	687b      	ldr	r3, [r7, #4]
 801aa64:	683a      	ldr	r2, [r7, #0]
 801aa66:	4611      	mov	r1, r2
 801aa68:	4618      	mov	r0, r3
 801aa6a:	f005 fed1 	bl	8020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 801aa6e:	687b      	ldr	r3, [r7, #4]
 801aa70:	f103 0218 	add.w	r2, r3, #24
 801aa74:	683b      	ldr	r3, [r7, #0]
 801aa76:	3318      	adds	r3, #24
 801aa78:	4619      	mov	r1, r3
 801aa7a:	4610      	mov	r0, r2
 801aa7c:	f7ff ffd6 	bl	801aa2c <_ZN6SymbolC1EOS_>
 801aa80:	687b      	ldr	r3, [r7, #4]
 801aa82:	4618      	mov	r0, r3
 801aa84:	3708      	adds	r7, #8
 801aa86:	46bd      	mov	sp, r7
 801aa88:	bd80      	pop	{r7, pc}

0801aa8a <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEE9constructISB_JSB_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 801aa8a:	b590      	push	{r4, r7, lr}
 801aa8c:	b085      	sub	sp, #20
 801aa8e:	af00      	add	r7, sp, #0
 801aa90:	60f8      	str	r0, [r7, #12]
 801aa92:	60b9      	str	r1, [r7, #8]
 801aa94:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801aa96:	6878      	ldr	r0, [r7, #4]
 801aa98:	f7fe fe14 	bl	80196c4 <_ZSt7forwardISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEEOT_RNSt16remove_referenceISA_E4typeE>
 801aa9c:	4604      	mov	r4, r0
 801aa9e:	68bb      	ldr	r3, [r7, #8]
 801aaa0:	4619      	mov	r1, r3
 801aaa2:	2038      	movs	r0, #56	; 0x38
 801aaa4:	f7e6 fac2 	bl	800102c <_ZnwjPv>
 801aaa8:	4603      	mov	r3, r0
 801aaaa:	4621      	mov	r1, r4
 801aaac:	4618      	mov	r0, r3
 801aaae:	f7ff ffd3 	bl	801aa58 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE6SymbolEC1EOS8_>
 801aab2:	bf00      	nop
 801aab4:	3714      	adds	r7, #20
 801aab6:	46bd      	mov	sp, r7
 801aab8:	bd90      	pop	{r4, r7, pc}
	...

0801aabc <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801aabc:	b480      	push	{r7}
 801aabe:	b083      	sub	sp, #12
 801aac0:	af00      	add	r7, sp, #0
 801aac2:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801aac4:	4b03      	ldr	r3, [pc, #12]	; (801aad4 <_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPFSt7variantIJS8_ifbEESt6vectorIP10ExpressionSaISE_EEEEEE8max_sizeEv+0x18>)
      }
 801aac6:	4618      	mov	r0, r3
 801aac8:	370c      	adds	r7, #12
 801aaca:	46bd      	mov	sp, r7
 801aacc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801aad0:	4770      	bx	lr
 801aad2:	bf00      	nop
 801aad4:	02e8ba2e 	.word	0x02e8ba2e

0801aad8 <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES2_IbSaIbEEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 801aad8:	b580      	push	{r7, lr}
 801aada:	b082      	sub	sp, #8
 801aadc:	af00      	add	r7, sp, #0
 801aade:	6078      	str	r0, [r7, #4]
 801aae0:	687b      	ldr	r3, [r7, #4]
 801aae2:	4618      	mov	r0, r3
 801aae4:	f000 fa91 	bl	801b00a <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorIbSaIbEEEEC1Ev>
 801aae8:	687b      	ldr	r3, [r7, #4]
 801aaea:	4618      	mov	r0, r3
 801aaec:	3708      	adds	r7, #8
 801aaee:	46bd      	mov	sp, r7
 801aaf0:	bd80      	pop	{r7, pc}
	...

0801aaf4 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801aaf4:	b480      	push	{r7}
 801aaf6:	b083      	sub	sp, #12
 801aaf8:	af00      	add	r7, sp, #0
 801aafa:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801aafc:	687b      	ldr	r3, [r7, #4]
 801aafe:	685a      	ldr	r2, [r3, #4]
 801ab00:	687b      	ldr	r3, [r7, #4]
 801ab02:	681b      	ldr	r3, [r3, #0]
 801ab04:	1ad3      	subs	r3, r2, r3
 801ab06:	10db      	asrs	r3, r3, #3
 801ab08:	4a04      	ldr	r2, [pc, #16]	; (801ab1c <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv+0x28>)
 801ab0a:	fb02 f303 	mul.w	r3, r2, r3
 801ab0e:	4618      	mov	r0, r3
 801ab10:	370c      	adds	r7, #12
 801ab12:	46bd      	mov	sp, r7
 801ab14:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ab18:	4770      	bx	lr
 801ab1a:	bf00      	nop
 801ab1c:	aaaaaaab 	.word	0xaaaaaaab

0801ab20 <_ZN9__gnu_cxx14__alloc_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES6_E17_S_select_on_copyERKS7_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 801ab20:	b580      	push	{r7, lr}
 801ab22:	b082      	sub	sp, #8
 801ab24:	af00      	add	r7, sp, #0
 801ab26:	6078      	str	r0, [r7, #4]
 801ab28:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 801ab2a:	687b      	ldr	r3, [r7, #4]
 801ab2c:	6839      	ldr	r1, [r7, #0]
 801ab2e:	4618      	mov	r0, r3
 801ab30:	f000 fa76 	bl	801b020 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE37select_on_container_copy_constructionERKS6_>
 801ab34:	6878      	ldr	r0, [r7, #4]
 801ab36:	3708      	adds	r7, #8
 801ab38:	46bd      	mov	sp, r7
 801ab3a:	bd80      	pop	{r7, pc}

0801ab3c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EjRKS6_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 801ab3c:	b580      	push	{r7, lr}
 801ab3e:	b084      	sub	sp, #16
 801ab40:	af00      	add	r7, sp, #0
 801ab42:	60f8      	str	r0, [r7, #12]
 801ab44:	60b9      	str	r1, [r7, #8]
 801ab46:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 801ab48:	68fb      	ldr	r3, [r7, #12]
 801ab4a:	6879      	ldr	r1, [r7, #4]
 801ab4c:	4618      	mov	r0, r3
 801ab4e:	f7fd fd30 	bl	80185b2 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>
      { _M_create_storage(__n); }
 801ab52:	68b9      	ldr	r1, [r7, #8]
 801ab54:	68f8      	ldr	r0, [r7, #12]
 801ab56:	f000 fa70 	bl	801b03a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEj>
 801ab5a:	68fb      	ldr	r3, [r7, #12]
 801ab5c:	4618      	mov	r0, r3
 801ab5e:	3710      	adds	r7, #16
 801ab60:	46bd      	mov	sp, r7
 801ab62:	bd80      	pop	{r7, pc}

0801ab64 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 801ab64:	b580      	push	{r7, lr}
 801ab66:	b084      	sub	sp, #16
 801ab68:	af00      	add	r7, sp, #0
 801ab6a:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 801ab6c:	687b      	ldr	r3, [r7, #4]
 801ab6e:	681b      	ldr	r3, [r3, #0]
 801ab70:	60fb      	str	r3, [r7, #12]
 801ab72:	f107 020c 	add.w	r2, r7, #12
 801ab76:	f107 0308 	add.w	r3, r7, #8
 801ab7a:	4611      	mov	r1, r2
 801ab7c:	4618      	mov	r0, r3
 801ab7e:	f000 fa7a 	bl	801b076 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS8_>
 801ab82:	68bb      	ldr	r3, [r7, #8]
 801ab84:	4618      	mov	r0, r3
 801ab86:	3710      	adds	r7, #16
 801ab88:	46bd      	mov	sp, r7
 801ab8a:	bd80      	pop	{r7, pc}

0801ab8c <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 801ab8c:	b580      	push	{r7, lr}
 801ab8e:	b084      	sub	sp, #16
 801ab90:	af00      	add	r7, sp, #0
 801ab92:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 801ab94:	687b      	ldr	r3, [r7, #4]
 801ab96:	685b      	ldr	r3, [r3, #4]
 801ab98:	60fb      	str	r3, [r7, #12]
 801ab9a:	f107 020c 	add.w	r2, r7, #12
 801ab9e:	f107 0308 	add.w	r3, r7, #8
 801aba2:	4611      	mov	r1, r2
 801aba4:	4618      	mov	r0, r3
 801aba6:	f000 fa66 	bl	801b076 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS8_>
 801abaa:	68bb      	ldr	r3, [r7, #8]
 801abac:	4618      	mov	r0, r3
 801abae:	3710      	adds	r7, #16
 801abb0:	46bd      	mov	sp, r7
 801abb2:	bd80      	pop	{r7, pc}

0801abb4 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_S7_ET0_T_SG_SF_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 801abb4:	b580      	push	{r7, lr}
 801abb6:	b084      	sub	sp, #16
 801abb8:	af00      	add	r7, sp, #0
 801abba:	60f8      	str	r0, [r7, #12]
 801abbc:	60b9      	str	r1, [r7, #8]
 801abbe:	607a      	str	r2, [r7, #4]
 801abc0:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 801abc2:	687a      	ldr	r2, [r7, #4]
 801abc4:	68b9      	ldr	r1, [r7, #8]
 801abc6:	68f8      	ldr	r0, [r7, #12]
 801abc8:	f000 fa65 	bl	801b096 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>
 801abcc:	4603      	mov	r3, r0
 801abce:	4618      	mov	r0, r3
 801abd0:	3710      	adds	r7, #16
 801abd2:	46bd      	mov	sp, r7
 801abd4:	bd80      	pop	{r7, pc}

0801abd6 <_ZNKSt6vectorIiSaIiEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801abd6:	b480      	push	{r7}
 801abd8:	b083      	sub	sp, #12
 801abda:	af00      	add	r7, sp, #0
 801abdc:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801abde:	687b      	ldr	r3, [r7, #4]
 801abe0:	685a      	ldr	r2, [r3, #4]
 801abe2:	687b      	ldr	r3, [r7, #4]
 801abe4:	681b      	ldr	r3, [r3, #0]
 801abe6:	1ad3      	subs	r3, r2, r3
 801abe8:	109b      	asrs	r3, r3, #2
 801abea:	4618      	mov	r0, r3
 801abec:	370c      	adds	r7, #12
 801abee:	46bd      	mov	sp, r7
 801abf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801abf4:	4770      	bx	lr

0801abf6 <_ZN9__gnu_cxx14__alloc_traitsISaIiEiE17_S_select_on_copyERKS1_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 801abf6:	b580      	push	{r7, lr}
 801abf8:	b082      	sub	sp, #8
 801abfa:	af00      	add	r7, sp, #0
 801abfc:	6078      	str	r0, [r7, #4]
 801abfe:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 801ac00:	687b      	ldr	r3, [r7, #4]
 801ac02:	6839      	ldr	r1, [r7, #0]
 801ac04:	4618      	mov	r0, r3
 801ac06:	f000 fa58 	bl	801b0ba <_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_>
 801ac0a:	6878      	ldr	r0, [r7, #4]
 801ac0c:	3708      	adds	r7, #8
 801ac0e:	46bd      	mov	sp, r7
 801ac10:	bd80      	pop	{r7, pc}

0801ac12 <_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801ac12:	b480      	push	{r7}
 801ac14:	b083      	sub	sp, #12
 801ac16:	af00      	add	r7, sp, #0
 801ac18:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801ac1a:	687b      	ldr	r3, [r7, #4]
 801ac1c:	4618      	mov	r0, r3
 801ac1e:	370c      	adds	r7, #12
 801ac20:	46bd      	mov	sp, r7
 801ac22:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ac26:	4770      	bx	lr

0801ac28 <_ZNSt12_Vector_baseIiSaIiEEC1EjRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 801ac28:	b580      	push	{r7, lr}
 801ac2a:	b084      	sub	sp, #16
 801ac2c:	af00      	add	r7, sp, #0
 801ac2e:	60f8      	str	r0, [r7, #12]
 801ac30:	60b9      	str	r1, [r7, #8]
 801ac32:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 801ac34:	68fb      	ldr	r3, [r7, #12]
 801ac36:	6879      	ldr	r1, [r7, #4]
 801ac38:	4618      	mov	r0, r3
 801ac3a:	f000 fa4b 	bl	801b0d4 <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
 801ac3e:	68b9      	ldr	r1, [r7, #8]
 801ac40:	68f8      	ldr	r0, [r7, #12]
 801ac42:	f000 fa59 	bl	801b0f8 <_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEj>
 801ac46:	68fb      	ldr	r3, [r7, #12]
 801ac48:	4618      	mov	r0, r3
 801ac4a:	3710      	adds	r7, #16
 801ac4c:	46bd      	mov	sp, r7
 801ac4e:	bd80      	pop	{r7, pc}

0801ac50 <_ZNKSt6vectorIiSaIiEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 801ac50:	b580      	push	{r7, lr}
 801ac52:	b084      	sub	sp, #16
 801ac54:	af00      	add	r7, sp, #0
 801ac56:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 801ac58:	687b      	ldr	r3, [r7, #4]
 801ac5a:	681b      	ldr	r3, [r3, #0]
 801ac5c:	60fb      	str	r3, [r7, #12]
 801ac5e:	f107 020c 	add.w	r2, r7, #12
 801ac62:	f107 0308 	add.w	r3, r7, #8
 801ac66:	4611      	mov	r1, r2
 801ac68:	4618      	mov	r0, r3
 801ac6a:	f000 fa60 	bl	801b12e <_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_>
 801ac6e:	68bb      	ldr	r3, [r7, #8]
 801ac70:	4618      	mov	r0, r3
 801ac72:	3710      	adds	r7, #16
 801ac74:	46bd      	mov	sp, r7
 801ac76:	bd80      	pop	{r7, pc}

0801ac78 <_ZNKSt6vectorIiSaIiEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 801ac78:	b580      	push	{r7, lr}
 801ac7a:	b084      	sub	sp, #16
 801ac7c:	af00      	add	r7, sp, #0
 801ac7e:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 801ac80:	687b      	ldr	r3, [r7, #4]
 801ac82:	685b      	ldr	r3, [r3, #4]
 801ac84:	60fb      	str	r3, [r7, #12]
 801ac86:	f107 020c 	add.w	r2, r7, #12
 801ac8a:	f107 0308 	add.w	r3, r7, #8
 801ac8e:	4611      	mov	r1, r2
 801ac90:	4618      	mov	r0, r3
 801ac92:	f000 fa4c 	bl	801b12e <_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_>
 801ac96:	68bb      	ldr	r3, [r7, #8]
 801ac98:	4618      	mov	r0, r3
 801ac9a:	3710      	adds	r7, #16
 801ac9c:	46bd      	mov	sp, r7
 801ac9e:	bd80      	pop	{r7, pc}

0801aca0 <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 801aca0:	b580      	push	{r7, lr}
 801aca2:	b084      	sub	sp, #16
 801aca4:	af00      	add	r7, sp, #0
 801aca6:	60f8      	str	r0, [r7, #12]
 801aca8:	60b9      	str	r1, [r7, #8]
 801acaa:	607a      	str	r2, [r7, #4]
 801acac:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 801acae:	687a      	ldr	r2, [r7, #4]
 801acb0:	68b9      	ldr	r1, [r7, #8]
 801acb2:	68f8      	ldr	r0, [r7, #12]
 801acb4:	f000 fa4b 	bl	801b14e <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_>
 801acb8:	4603      	mov	r3, r0
 801acba:	4618      	mov	r0, r3
 801acbc:	3710      	adds	r7, #16
 801acbe:	46bd      	mov	sp, r7
 801acc0:	bd80      	pop	{r7, pc}

0801acc2 <_ZNKSt6vectorIfSaIfEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801acc2:	b480      	push	{r7}
 801acc4:	b083      	sub	sp, #12
 801acc6:	af00      	add	r7, sp, #0
 801acc8:	6078      	str	r0, [r7, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 801acca:	687b      	ldr	r3, [r7, #4]
 801accc:	685a      	ldr	r2, [r3, #4]
 801acce:	687b      	ldr	r3, [r7, #4]
 801acd0:	681b      	ldr	r3, [r3, #0]
 801acd2:	1ad3      	subs	r3, r2, r3
 801acd4:	109b      	asrs	r3, r3, #2
 801acd6:	4618      	mov	r0, r3
 801acd8:	370c      	adds	r7, #12
 801acda:	46bd      	mov	sp, r7
 801acdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ace0:	4770      	bx	lr

0801ace2 <_ZN9__gnu_cxx14__alloc_traitsISaIfEfE17_S_select_on_copyERKS1_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 801ace2:	b580      	push	{r7, lr}
 801ace4:	b082      	sub	sp, #8
 801ace6:	af00      	add	r7, sp, #0
 801ace8:	6078      	str	r0, [r7, #4]
 801acea:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 801acec:	687b      	ldr	r3, [r7, #4]
 801acee:	6839      	ldr	r1, [r7, #0]
 801acf0:	4618      	mov	r0, r3
 801acf2:	f000 fa3e 	bl	801b172 <_ZNSt16allocator_traitsISaIfEE37select_on_container_copy_constructionERKS0_>
 801acf6:	6878      	ldr	r0, [r7, #4]
 801acf8:	3708      	adds	r7, #8
 801acfa:	46bd      	mov	sp, r7
 801acfc:	bd80      	pop	{r7, pc}

0801acfe <_ZNKSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 801acfe:	b480      	push	{r7}
 801ad00:	b083      	sub	sp, #12
 801ad02:	af00      	add	r7, sp, #0
 801ad04:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801ad06:	687b      	ldr	r3, [r7, #4]
 801ad08:	4618      	mov	r0, r3
 801ad0a:	370c      	adds	r7, #12
 801ad0c:	46bd      	mov	sp, r7
 801ad0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ad12:	4770      	bx	lr

0801ad14 <_ZNSt12_Vector_baseIfSaIfEEC1EjRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
 801ad14:	b580      	push	{r7, lr}
 801ad16:	b084      	sub	sp, #16
 801ad18:	af00      	add	r7, sp, #0
 801ad1a:	60f8      	str	r0, [r7, #12]
 801ad1c:	60b9      	str	r1, [r7, #8]
 801ad1e:	607a      	str	r2, [r7, #4]
      : _M_impl(__a)
 801ad20:	68fb      	ldr	r3, [r7, #12]
 801ad22:	6879      	ldr	r1, [r7, #4]
 801ad24:	4618      	mov	r0, r3
 801ad26:	f000 fa31 	bl	801b18c <_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
 801ad2a:	68b9      	ldr	r1, [r7, #8]
 801ad2c:	68f8      	ldr	r0, [r7, #12]
 801ad2e:	f000 fa3f 	bl	801b1b0 <_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEj>
 801ad32:	68fb      	ldr	r3, [r7, #12]
 801ad34:	4618      	mov	r0, r3
 801ad36:	3710      	adds	r7, #16
 801ad38:	46bd      	mov	sp, r7
 801ad3a:	bd80      	pop	{r7, pc}

0801ad3c <_ZNKSt6vectorIfSaIfEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 801ad3c:	b580      	push	{r7, lr}
 801ad3e:	b084      	sub	sp, #16
 801ad40:	af00      	add	r7, sp, #0
 801ad42:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_start); }
 801ad44:	687b      	ldr	r3, [r7, #4]
 801ad46:	681b      	ldr	r3, [r3, #0]
 801ad48:	60fb      	str	r3, [r7, #12]
 801ad4a:	f107 020c 	add.w	r2, r7, #12
 801ad4e:	f107 0308 	add.w	r3, r7, #8
 801ad52:	4611      	mov	r1, r2
 801ad54:	4618      	mov	r0, r3
 801ad56:	f000 fa46 	bl	801b1e6 <_ZN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEC1ERKS2_>
 801ad5a:	68bb      	ldr	r3, [r7, #8]
 801ad5c:	4618      	mov	r0, r3
 801ad5e:	3710      	adds	r7, #16
 801ad60:	46bd      	mov	sp, r7
 801ad62:	bd80      	pop	{r7, pc}

0801ad64 <_ZNKSt6vectorIfSaIfEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 801ad64:	b580      	push	{r7, lr}
 801ad66:	b084      	sub	sp, #16
 801ad68:	af00      	add	r7, sp, #0
 801ad6a:	6078      	str	r0, [r7, #4]
      { return const_iterator(this->_M_impl._M_finish); }
 801ad6c:	687b      	ldr	r3, [r7, #4]
 801ad6e:	685b      	ldr	r3, [r3, #4]
 801ad70:	60fb      	str	r3, [r7, #12]
 801ad72:	f107 020c 	add.w	r2, r7, #12
 801ad76:	f107 0308 	add.w	r3, r7, #8
 801ad7a:	4611      	mov	r1, r2
 801ad7c:	4618      	mov	r0, r3
 801ad7e:	f000 fa32 	bl	801b1e6 <_ZN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEC1ERKS2_>
 801ad82:	68bb      	ldr	r3, [r7, #8]
 801ad84:	4618      	mov	r0, r3
 801ad86:	3710      	adds	r7, #16
 801ad88:	46bd      	mov	sp, r7
 801ad8a:	bd80      	pop	{r7, pc}

0801ad8c <_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPffET0_T_SA_S9_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 801ad8c:	b580      	push	{r7, lr}
 801ad8e:	b084      	sub	sp, #16
 801ad90:	af00      	add	r7, sp, #0
 801ad92:	60f8      	str	r0, [r7, #12]
 801ad94:	60b9      	str	r1, [r7, #8]
 801ad96:	607a      	str	r2, [r7, #4]
 801ad98:	603b      	str	r3, [r7, #0]
    { return std::uninitialized_copy(__first, __last, __result); }
 801ad9a:	687a      	ldr	r2, [r7, #4]
 801ad9c:	68b9      	ldr	r1, [r7, #8]
 801ad9e:	68f8      	ldr	r0, [r7, #12]
 801ada0:	f000 fa31 	bl	801b206 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPfET0_T_SA_S9_>
 801ada4:	4603      	mov	r3, r0
 801ada6:	4618      	mov	r0, r3
 801ada8:	3710      	adds	r7, #16
 801adaa:	46bd      	mov	sp, r7
 801adac:	bd80      	pop	{r7, pc}

0801adae <_ZN9__gnu_cxx14__alloc_traitsISaImEmE17_S_select_on_copyERKS1_>:
    static _Alloc _S_select_on_copy(const _Alloc& __a)
 801adae:	b580      	push	{r7, lr}
 801adb0:	b082      	sub	sp, #8
 801adb2:	af00      	add	r7, sp, #0
 801adb4:	6078      	str	r0, [r7, #4]
 801adb6:	6039      	str	r1, [r7, #0]
    { return _Base_type::select_on_container_copy_construction(__a); }
 801adb8:	687b      	ldr	r3, [r7, #4]
 801adba:	6839      	ldr	r1, [r7, #0]
 801adbc:	4618      	mov	r0, r3
 801adbe:	f000 fa34 	bl	801b22a <_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_>
 801adc2:	6878      	ldr	r0, [r7, #4]
 801adc4:	3708      	adds	r7, #8
 801adc6:	46bd      	mov	sp, r7
 801adc8:	bd80      	pop	{r7, pc}

0801adca <_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv>:
      _M_get_Bit_allocator() const _GLIBCXX_NOEXCEPT
 801adca:	b480      	push	{r7}
 801adcc:	b083      	sub	sp, #12
 801adce:	af00      	add	r7, sp, #0
 801add0:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 801add2:	687b      	ldr	r3, [r7, #4]
 801add4:	4618      	mov	r0, r3
 801add6:	370c      	adds	r7, #12
 801add8:	46bd      	mov	sp, r7
 801adda:	f85d 7b04 	ldr.w	r7, [sp], #4
 801adde:	4770      	bx	lr

0801ade0 <_ZNSaIbEC1ImEERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 801ade0:	b580      	push	{r7, lr}
 801ade2:	b082      	sub	sp, #8
 801ade4:	af00      	add	r7, sp, #0
 801ade6:	6078      	str	r0, [r7, #4]
 801ade8:	6039      	str	r1, [r7, #0]
 801adea:	6878      	ldr	r0, [r7, #4]
 801adec:	f000 fa2a 	bl	801b244 <_ZN9__gnu_cxx13new_allocatorIbEC1Ev>
 801adf0:	687b      	ldr	r3, [r7, #4]
 801adf2:	4618      	mov	r0, r3
 801adf4:	3708      	adds	r7, #8
 801adf6:	46bd      	mov	sp, r7
 801adf8:	bd80      	pop	{r7, pc}

0801adfa <_ZNSaIbED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 801adfa:	b580      	push	{r7, lr}
 801adfc:	b082      	sub	sp, #8
 801adfe:	af00      	add	r7, sp, #0
 801ae00:	6078      	str	r0, [r7, #4]
 801ae02:	6878      	ldr	r0, [r7, #4]
 801ae04:	f000 fa29 	bl	801b25a <_ZN9__gnu_cxx13new_allocatorIbED1Ev>
 801ae08:	687b      	ldr	r3, [r7, #4]
 801ae0a:	4618      	mov	r0, r3
 801ae0c:	3708      	adds	r7, #8
 801ae0e:	46bd      	mov	sp, r7
 801ae10:	bd80      	pop	{r7, pc}

0801ae12 <_ZNSt13_Bvector_baseISaIbEEC1ERKS0_>:
      _Bvector_base(const allocator_type& __a)
 801ae12:	b590      	push	{r4, r7, lr}
 801ae14:	b085      	sub	sp, #20
 801ae16:	af00      	add	r7, sp, #0
 801ae18:	6078      	str	r0, [r7, #4]
 801ae1a:	6039      	str	r1, [r7, #0]
      : _M_impl(__a) { }
 801ae1c:	687c      	ldr	r4, [r7, #4]
 801ae1e:	f107 030c 	add.w	r3, r7, #12
 801ae22:	6839      	ldr	r1, [r7, #0]
 801ae24:	4618      	mov	r0, r3
 801ae26:	f000 fa23 	bl	801b270 <_ZNSaImEC1IbEERKSaIT_E>
 801ae2a:	f107 030c 	add.w	r3, r7, #12
 801ae2e:	4619      	mov	r1, r3
 801ae30:	4620      	mov	r0, r4
 801ae32:	f000 fa2a 	bl	801b28a <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1ERKSaImE>
 801ae36:	f107 030c 	add.w	r3, r7, #12
 801ae3a:	4618      	mov	r0, r3
 801ae3c:	f7f7 fad1 	bl	80123e2 <_ZNSaImED1Ev>
 801ae40:	687b      	ldr	r3, [r7, #4]
 801ae42:	4618      	mov	r0, r3
 801ae44:	3714      	adds	r7, #20
 801ae46:	46bd      	mov	sp, r7
 801ae48:	bd90      	pop	{r4, r7, pc}

0801ae4a <_ZNSt6vectorIbSaIbEE13_M_initializeEj>:
	return std::copy(const_iterator(__last._M_p, 0), __last,
			 iterator(__q, 0));
      }

      void
      _M_initialize(size_type __n)
 801ae4a:	b590      	push	{r4, r7, lr}
 801ae4c:	b08b      	sub	sp, #44	; 0x2c
 801ae4e:	af00      	add	r7, sp, #0
 801ae50:	60f8      	str	r0, [r7, #12]
 801ae52:	60b9      	str	r1, [r7, #8]
      {
	if (__n)
 801ae54:	68bb      	ldr	r3, [r7, #8]
 801ae56:	2b00      	cmp	r3, #0
 801ae58:	d021      	beq.n	801ae9e <_ZNSt6vectorIbSaIbEE13_M_initializeEj+0x54>
	  {
	    _Bit_pointer __q = this->_M_allocate(__n);
 801ae5a:	68fb      	ldr	r3, [r7, #12]
 801ae5c:	68b9      	ldr	r1, [r7, #8]
 801ae5e:	4618      	mov	r0, r3
 801ae60:	f000 fa25 	bl	801b2ae <_ZNSt13_Bvector_baseISaIbEE11_M_allocateEj>
 801ae64:	6278      	str	r0, [r7, #36]	; 0x24
	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
 801ae66:	68b8      	ldr	r0, [r7, #8]
 801ae68:	f000 fa34 	bl	801b2d4 <_ZNSt13_Bvector_baseISaIbEE8_S_nwordEj>
 801ae6c:	4603      	mov	r3, r0
 801ae6e:	009b      	lsls	r3, r3, #2
 801ae70:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801ae72:	441a      	add	r2, r3
 801ae74:	68fb      	ldr	r3, [r7, #12]
 801ae76:	611a      	str	r2, [r3, #16]
	    this->_M_impl._M_start = iterator(std::__addressof(*__q), 0);
 801ae78:	6a78      	ldr	r0, [r7, #36]	; 0x24
 801ae7a:	f7f7 fbd3 	bl	8012624 <_ZSt11__addressofImEPT_RS0_>
 801ae7e:	4601      	mov	r1, r0
 801ae80:	f107 0314 	add.w	r3, r7, #20
 801ae84:	2200      	movs	r2, #0
 801ae86:	4618      	mov	r0, r3
 801ae88:	f7fc fc86 	bl	8017798 <_ZNSt13_Bit_iteratorC1EPmj>
 801ae8c:	68fb      	ldr	r3, [r7, #12]
 801ae8e:	461a      	mov	r2, r3
 801ae90:	f107 0314 	add.w	r3, r7, #20
 801ae94:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ae98:	e882 0003 	stmia.w	r2, {r0, r1}
 801ae9c:	e011      	b.n	801aec2 <_ZNSt6vectorIbSaIbEE13_M_initializeEj+0x78>
	  }
	else
	  {
	    this->_M_impl._M_end_of_storage = _Bit_pointer();
 801ae9e:	68fb      	ldr	r3, [r7, #12]
 801aea0:	2200      	movs	r2, #0
 801aea2:	611a      	str	r2, [r3, #16]
	    this->_M_impl._M_start = iterator(0, 0);
 801aea4:	f107 031c 	add.w	r3, r7, #28
 801aea8:	2200      	movs	r2, #0
 801aeaa:	2100      	movs	r1, #0
 801aeac:	4618      	mov	r0, r3
 801aeae:	f7fc fc73 	bl	8017798 <_ZNSt13_Bit_iteratorC1EPmj>
 801aeb2:	68fb      	ldr	r3, [r7, #12]
 801aeb4:	461a      	mov	r2, r3
 801aeb6:	f107 031c 	add.w	r3, r7, #28
 801aeba:	e893 0003 	ldmia.w	r3, {r0, r1}
 801aebe:	e882 0003 	stmia.w	r2, {r0, r1}
	  }
	this->_M_impl._M_finish = this->_M_impl._M_start + difference_type(__n);
 801aec2:	68f9      	ldr	r1, [r7, #12]
 801aec4:	68ba      	ldr	r2, [r7, #8]
 801aec6:	68fc      	ldr	r4, [r7, #12]
 801aec8:	463b      	mov	r3, r7
 801aeca:	4618      	mov	r0, r3
 801aecc:	f7fc fca5 	bl	801781a <_ZNKSt13_Bit_iteratorplEi>
 801aed0:	f104 0308 	add.w	r3, r4, #8
 801aed4:	463a      	mov	r2, r7
 801aed6:	e892 0003 	ldmia.w	r2, {r0, r1}
 801aeda:	e883 0003 	stmia.w	r3, {r0, r1}

      }
 801aede:	bf00      	nop
 801aee0:	372c      	adds	r7, #44	; 0x2c
 801aee2:	46bd      	mov	sp, r7
 801aee4:	bd90      	pop	{r4, r7, pc}

0801aee6 <_ZNKSt6vectorIbSaIbEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 801aee6:	b580      	push	{r7, lr}
 801aee8:	b086      	sub	sp, #24
 801aeea:	af00      	add	r7, sp, #0
 801aeec:	6078      	str	r0, [r7, #4]
      { return size_type(end() - begin()); }
 801aeee:	f107 0308 	add.w	r3, r7, #8
 801aef2:	6879      	ldr	r1, [r7, #4]
 801aef4:	4618      	mov	r0, r3
 801aef6:	f000 f856 	bl	801afa6 <_ZNKSt6vectorIbSaIbEE3endEv>
 801aefa:	f107 0310 	add.w	r3, r7, #16
 801aefe:	6879      	ldr	r1, [r7, #4]
 801af00:	4618      	mov	r0, r3
 801af02:	f000 f840 	bl	801af86 <_ZNKSt6vectorIbSaIbEE5beginEv>
 801af06:	f107 0210 	add.w	r2, r7, #16
 801af0a:	f107 0308 	add.w	r3, r7, #8
 801af0e:	4611      	mov	r1, r2
 801af10:	4618      	mov	r0, r3
 801af12:	f7fc fc29 	bl	8017768 <_ZStmiRKSt18_Bit_iterator_baseS1_>
 801af16:	4603      	mov	r3, r0
 801af18:	4618      	mov	r0, r3
 801af1a:	3718      	adds	r7, #24
 801af1c:	46bd      	mov	sp, r7
 801af1e:	bd80      	pop	{r7, pc}

0801af20 <_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator>:
      _M_copy_aligned(const_iterator __first, const_iterator __last,
 801af20:	b590      	push	{r4, r7, lr}
 801af22:	b08f      	sub	sp, #60	; 0x3c
 801af24:	af04      	add	r7, sp, #16
 801af26:	60f8      	str	r0, [r7, #12]
 801af28:	60b9      	str	r1, [r7, #8]
 801af2a:	4639      	mov	r1, r7
 801af2c:	e881 000c 	stmia.w	r1, {r2, r3}
	_Bit_type* __q = std::copy(__first._M_p, __last._M_p, __result._M_p);
 801af30:	683b      	ldr	r3, [r7, #0]
 801af32:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 801af34:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 801af36:	4618      	mov	r0, r3
 801af38:	f000 f9d9 	bl	801b2ee <_ZSt4copyIPmS0_ET0_T_S2_S1_>
 801af3c:	6278      	str	r0, [r7, #36]	; 0x24
	return std::copy(const_iterator(__last._M_p, 0), __last,
 801af3e:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 801af40:	f107 0314 	add.w	r3, r7, #20
 801af44:	2200      	movs	r2, #0
 801af46:	4618      	mov	r0, r3
 801af48:	f7fc fc84 	bl	8017854 <_ZNSt19_Bit_const_iteratorC1EPmj>
 801af4c:	f107 031c 	add.w	r3, r7, #28
 801af50:	2200      	movs	r2, #0
 801af52:	6a79      	ldr	r1, [r7, #36]	; 0x24
 801af54:	4618      	mov	r0, r3
 801af56:	f7fc fc1f 	bl	8017798 <_ZNSt13_Bit_iteratorC1EPmj>
 801af5a:	68fc      	ldr	r4, [r7, #12]
 801af5c:	aa01      	add	r2, sp, #4
 801af5e:	f107 031c 	add.w	r3, r7, #28
 801af62:	e893 0003 	ldmia.w	r3, {r0, r1}
 801af66:	e882 0003 	stmia.w	r2, {r0, r1}
 801af6a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801af6c:	9300      	str	r3, [sp, #0]
 801af6e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 801af70:	f107 0214 	add.w	r2, r7, #20
 801af74:	ca06      	ldmia	r2, {r1, r2}
 801af76:	4620      	mov	r0, r4
 801af78:	f000 f9d1 	bl	801b31e <_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_>
			 iterator(__q, 0));
 801af7c:	bf00      	nop
      }
 801af7e:	68f8      	ldr	r0, [r7, #12]
 801af80:	372c      	adds	r7, #44	; 0x2c
 801af82:	46bd      	mov	sp, r7
 801af84:	bd90      	pop	{r4, r7, pc}

0801af86 <_ZNKSt6vectorIbSaIbEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
 801af86:	b580      	push	{r7, lr}
 801af88:	b082      	sub	sp, #8
 801af8a:	af00      	add	r7, sp, #0
 801af8c:	6078      	str	r0, [r7, #4]
 801af8e:	6039      	str	r1, [r7, #0]
      { return const_iterator(this->_M_impl._M_start._M_p, 0); }
 801af90:	683b      	ldr	r3, [r7, #0]
 801af92:	681b      	ldr	r3, [r3, #0]
 801af94:	2200      	movs	r2, #0
 801af96:	4619      	mov	r1, r3
 801af98:	6878      	ldr	r0, [r7, #4]
 801af9a:	f7fc fc5b 	bl	8017854 <_ZNSt19_Bit_const_iteratorC1EPmj>
 801af9e:	6878      	ldr	r0, [r7, #4]
 801afa0:	3708      	adds	r7, #8
 801afa2:	46bd      	mov	sp, r7
 801afa4:	bd80      	pop	{r7, pc}

0801afa6 <_ZNKSt6vectorIbSaIbEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
 801afa6:	b580      	push	{r7, lr}
 801afa8:	b082      	sub	sp, #8
 801afaa:	af00      	add	r7, sp, #0
 801afac:	6078      	str	r0, [r7, #4]
 801afae:	6039      	str	r1, [r7, #0]
      { return this->_M_impl._M_finish; }
 801afb0:	683b      	ldr	r3, [r7, #0]
 801afb2:	3308      	adds	r3, #8
 801afb4:	4619      	mov	r1, r3
 801afb6:	6878      	ldr	r0, [r7, #4]
 801afb8:	f7fc fc5d 	bl	8017876 <_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator>
 801afbc:	6878      	ldr	r0, [r7, #4]
 801afbe:	3708      	adds	r7, #8
 801afc0:	46bd      	mov	sp, r7
 801afc2:	bd80      	pop	{r7, pc}

0801afc4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEEv>:
      using _Base::_Base;
 801afc4:	b580      	push	{r7, lr}
 801afc6:	b082      	sub	sp, #8
 801afc8:	af00      	add	r7, sp, #0
 801afca:	6078      	str	r0, [r7, #4]
 801afcc:	687b      	ldr	r3, [r7, #4]
 801afce:	4618      	mov	r0, r3
 801afd0:	f7fd fd35 	bl	8018a3e <_ZNSt8__detail9__variant16_Variant_storageILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1Ev>
 801afd4:	687b      	ldr	r3, [r7, #4]
 801afd6:	4618      	mov	r0, r3
 801afd8:	3708      	adds	r7, #8
 801afda:	46bd      	mov	sp, r7
 801afdc:	bd80      	pop	{r7, pc}

0801afde <_ZNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEEC1EOSH_>:
      _Move_ctor_base(_Move_ctor_base&& __rhs)
 801afde:	b580      	push	{r7, lr}
 801afe0:	b082      	sub	sp, #8
 801afe2:	af00      	add	r7, sp, #0
 801afe4:	6078      	str	r0, [r7, #4]
 801afe6:	6039      	str	r1, [r7, #0]
      {
 801afe8:	687b      	ldr	r3, [r7, #4]
 801afea:	4618      	mov	r0, r3
 801afec:	f7ff ffea 	bl	801afc4 <_ZNSt8__detail9__variant15_Copy_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEEECI1NS0_16_Variant_storageILb0EJifbS7_SA_SC_SE_SG_EEEEv>
	__variant_construct<_Types...>(*this, std::move(__rhs));
 801aff0:	6838      	ldr	r0, [r7, #0]
 801aff2:	f000 f9c5 	bl	801b380 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEONSt16remove_referenceIT_E4typeEOSL_>
 801aff6:	4603      	mov	r3, r0
 801aff8:	4619      	mov	r1, r3
 801affa:	6878      	ldr	r0, [r7, #4]
 801affc:	f000 ffc6 	bl	801bf8c <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_>
      }
 801b000:	687b      	ldr	r3, [r7, #4]
 801b002:	4618      	mov	r0, r3
 801b004:	3708      	adds	r7, #8
 801b006:	46bd      	mov	sp, r7
 801b008:	bd80      	pop	{r7, pc}

0801b00a <_ZNSt8__detail9__variant15_Variadic_unionIJSt6vectorIbSaIbEEEEC1Ev>:
      constexpr _Variadic_union() : _M_rest() { }
 801b00a:	b480      	push	{r7}
 801b00c:	b083      	sub	sp, #12
 801b00e:	af00      	add	r7, sp, #0
 801b010:	6078      	str	r0, [r7, #4]
 801b012:	687b      	ldr	r3, [r7, #4]
 801b014:	4618      	mov	r0, r3
 801b016:	370c      	adds	r7, #12
 801b018:	46bd      	mov	sp, r7
 801b01a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b01e:	4770      	bx	lr

0801b020 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE37select_on_container_copy_constructionERKS6_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 801b020:	b580      	push	{r7, lr}
 801b022:	b082      	sub	sp, #8
 801b024:	af00      	add	r7, sp, #0
 801b026:	6078      	str	r0, [r7, #4]
 801b028:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 801b02a:	6839      	ldr	r1, [r7, #0]
 801b02c:	6878      	ldr	r0, [r7, #4]
 801b02e:	f7fe fbb6 	bl	801979e <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
 801b032:	6878      	ldr	r0, [r7, #4]
 801b034:	3708      	adds	r7, #8
 801b036:	46bd      	mov	sp, r7
 801b038:	bd80      	pop	{r7, pc}

0801b03a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 801b03a:	b580      	push	{r7, lr}
 801b03c:	b082      	sub	sp, #8
 801b03e:	af00      	add	r7, sp, #0
 801b040:	6078      	str	r0, [r7, #4]
 801b042:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 801b044:	6839      	ldr	r1, [r7, #0]
 801b046:	6878      	ldr	r0, [r7, #4]
 801b048:	f7fd fb1a 	bl	8018680 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEj>
 801b04c:	4602      	mov	r2, r0
 801b04e:	687b      	ldr	r3, [r7, #4]
 801b050:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 801b052:	687b      	ldr	r3, [r7, #4]
 801b054:	681a      	ldr	r2, [r3, #0]
 801b056:	687b      	ldr	r3, [r7, #4]
 801b058:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 801b05a:	687b      	ldr	r3, [r7, #4]
 801b05c:	6819      	ldr	r1, [r3, #0]
 801b05e:	683a      	ldr	r2, [r7, #0]
 801b060:	4613      	mov	r3, r2
 801b062:	005b      	lsls	r3, r3, #1
 801b064:	4413      	add	r3, r2
 801b066:	00db      	lsls	r3, r3, #3
 801b068:	18ca      	adds	r2, r1, r3
 801b06a:	687b      	ldr	r3, [r7, #4]
 801b06c:	609a      	str	r2, [r3, #8]
      }
 801b06e:	bf00      	nop
 801b070:	3708      	adds	r7, #8
 801b072:	46bd      	mov	sp, r7
 801b074:	bd80      	pop	{r7, pc}

0801b076 <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC1ERKS8_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801b076:	b480      	push	{r7}
 801b078:	b083      	sub	sp, #12
 801b07a:	af00      	add	r7, sp, #0
 801b07c:	6078      	str	r0, [r7, #4]
 801b07e:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801b080:	683b      	ldr	r3, [r7, #0]
 801b082:	681a      	ldr	r2, [r3, #0]
 801b084:	687b      	ldr	r3, [r7, #4]
 801b086:	601a      	str	r2, [r3, #0]
 801b088:	687b      	ldr	r3, [r7, #4]
 801b08a:	4618      	mov	r0, r3
 801b08c:	370c      	adds	r7, #12
 801b08e:	46bd      	mov	sp, r7
 801b090:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b094:	4770      	bx	lr

0801b096 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEPS7_ET0_T_SG_SF_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 801b096:	b580      	push	{r7, lr}
 801b098:	b086      	sub	sp, #24
 801b09a:	af00      	add	r7, sp, #0
 801b09c:	60f8      	str	r0, [r7, #12]
 801b09e:	60b9      	str	r1, [r7, #8]
 801b0a0:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 801b0a2:	2301      	movs	r3, #1
 801b0a4:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 801b0a6:	687a      	ldr	r2, [r7, #4]
 801b0a8:	68b9      	ldr	r1, [r7, #8]
 801b0aa:	68f8      	ldr	r0, [r7, #12]
 801b0ac:	f000 ff8b 	bl	801bfc6 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_>
 801b0b0:	4603      	mov	r3, r0
    }
 801b0b2:	4618      	mov	r0, r3
 801b0b4:	3718      	adds	r7, #24
 801b0b6:	46bd      	mov	sp, r7
 801b0b8:	bd80      	pop	{r7, pc}

0801b0ba <_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 801b0ba:	b580      	push	{r7, lr}
 801b0bc:	b082      	sub	sp, #8
 801b0be:	af00      	add	r7, sp, #0
 801b0c0:	6078      	str	r0, [r7, #4]
 801b0c2:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 801b0c4:	6839      	ldr	r1, [r7, #0]
 801b0c6:	6878      	ldr	r0, [r7, #4]
 801b0c8:	f000 ffac 	bl	801c024 <_ZNSaIiEC1ERKS_>
 801b0cc:	6878      	ldr	r0, [r7, #4]
 801b0ce:	3708      	adds	r7, #8
 801b0d0:	46bd      	mov	sp, r7
 801b0d2:	bd80      	pop	{r7, pc}

0801b0d4 <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 801b0d4:	b580      	push	{r7, lr}
 801b0d6:	b082      	sub	sp, #8
 801b0d8:	af00      	add	r7, sp, #0
 801b0da:	6078      	str	r0, [r7, #4]
 801b0dc:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 801b0de:	6839      	ldr	r1, [r7, #0]
 801b0e0:	6878      	ldr	r0, [r7, #4]
 801b0e2:	f000 ff9f 	bl	801c024 <_ZNSaIiEC1ERKS_>
 801b0e6:	687b      	ldr	r3, [r7, #4]
 801b0e8:	4618      	mov	r0, r3
 801b0ea:	f000 ffa9 	bl	801c040 <_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC1Ev>
	{ }
 801b0ee:	687b      	ldr	r3, [r7, #4]
 801b0f0:	4618      	mov	r0, r3
 801b0f2:	3708      	adds	r7, #8
 801b0f4:	46bd      	mov	sp, r7
 801b0f6:	bd80      	pop	{r7, pc}

0801b0f8 <_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 801b0f8:	b580      	push	{r7, lr}
 801b0fa:	b082      	sub	sp, #8
 801b0fc:	af00      	add	r7, sp, #0
 801b0fe:	6078      	str	r0, [r7, #4]
 801b100:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 801b102:	6839      	ldr	r1, [r7, #0]
 801b104:	6878      	ldr	r0, [r7, #4]
 801b106:	f000 ffaf 	bl	801c068 <_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEj>
 801b10a:	4602      	mov	r2, r0
 801b10c:	687b      	ldr	r3, [r7, #4]
 801b10e:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 801b110:	687b      	ldr	r3, [r7, #4]
 801b112:	681a      	ldr	r2, [r3, #0]
 801b114:	687b      	ldr	r3, [r7, #4]
 801b116:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 801b118:	687b      	ldr	r3, [r7, #4]
 801b11a:	681a      	ldr	r2, [r3, #0]
 801b11c:	683b      	ldr	r3, [r7, #0]
 801b11e:	009b      	lsls	r3, r3, #2
 801b120:	441a      	add	r2, r3
 801b122:	687b      	ldr	r3, [r7, #4]
 801b124:	609a      	str	r2, [r3, #8]
      }
 801b126:	bf00      	nop
 801b128:	3708      	adds	r7, #8
 801b12a:	46bd      	mov	sp, r7
 801b12c:	bd80      	pop	{r7, pc}

0801b12e <_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801b12e:	b480      	push	{r7}
 801b130:	b083      	sub	sp, #12
 801b132:	af00      	add	r7, sp, #0
 801b134:	6078      	str	r0, [r7, #4]
 801b136:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801b138:	683b      	ldr	r3, [r7, #0]
 801b13a:	681a      	ldr	r2, [r3, #0]
 801b13c:	687b      	ldr	r3, [r7, #4]
 801b13e:	601a      	str	r2, [r3, #0]
 801b140:	687b      	ldr	r3, [r7, #4]
 801b142:	4618      	mov	r0, r3
 801b144:	370c      	adds	r7, #12
 801b146:	46bd      	mov	sp, r7
 801b148:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b14c:	4770      	bx	lr

0801b14e <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 801b14e:	b580      	push	{r7, lr}
 801b150:	b086      	sub	sp, #24
 801b152:	af00      	add	r7, sp, #0
 801b154:	60f8      	str	r0, [r7, #12]
 801b156:	60b9      	str	r1, [r7, #8]
 801b158:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 801b15a:	2301      	movs	r3, #1
 801b15c:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 801b15e:	687a      	ldr	r2, [r7, #4]
 801b160:	68b9      	ldr	r1, [r7, #8]
 801b162:	68f8      	ldr	r0, [r7, #12]
 801b164:	f000 ff94 	bl	801c090 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_>
 801b168:	4603      	mov	r3, r0
    }
 801b16a:	4618      	mov	r0, r3
 801b16c:	3718      	adds	r7, #24
 801b16e:	46bd      	mov	sp, r7
 801b170:	bd80      	pop	{r7, pc}

0801b172 <_ZNSt16allocator_traitsISaIfEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 801b172:	b580      	push	{r7, lr}
 801b174:	b082      	sub	sp, #8
 801b176:	af00      	add	r7, sp, #0
 801b178:	6078      	str	r0, [r7, #4]
 801b17a:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 801b17c:	6839      	ldr	r1, [r7, #0]
 801b17e:	6878      	ldr	r0, [r7, #4]
 801b180:	f000 ff96 	bl	801c0b0 <_ZNSaIfEC1ERKS_>
 801b184:	6878      	ldr	r0, [r7, #4]
 801b186:	3708      	adds	r7, #8
 801b188:	46bd      	mov	sp, r7
 801b18a:	bd80      	pop	{r7, pc}

0801b18c <_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 801b18c:	b580      	push	{r7, lr}
 801b18e:	b082      	sub	sp, #8
 801b190:	af00      	add	r7, sp, #0
 801b192:	6078      	str	r0, [r7, #4]
 801b194:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(__a)
 801b196:	6839      	ldr	r1, [r7, #0]
 801b198:	6878      	ldr	r0, [r7, #4]
 801b19a:	f000 ff89 	bl	801c0b0 <_ZNSaIfEC1ERKS_>
 801b19e:	687b      	ldr	r3, [r7, #4]
 801b1a0:	4618      	mov	r0, r3
 801b1a2:	f000 ff93 	bl	801c0cc <_ZNSt12_Vector_baseIfSaIfEE17_Vector_impl_dataC1Ev>
	{ }
 801b1a6:	687b      	ldr	r3, [r7, #4]
 801b1a8:	4618      	mov	r0, r3
 801b1aa:	3708      	adds	r7, #8
 801b1ac:	46bd      	mov	sp, r7
 801b1ae:	bd80      	pop	{r7, pc}

0801b1b0 <_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEj>:
      _M_create_storage(size_t __n)
 801b1b0:	b580      	push	{r7, lr}
 801b1b2:	b082      	sub	sp, #8
 801b1b4:	af00      	add	r7, sp, #0
 801b1b6:	6078      	str	r0, [r7, #4]
 801b1b8:	6039      	str	r1, [r7, #0]
	this->_M_impl._M_start = this->_M_allocate(__n);
 801b1ba:	6839      	ldr	r1, [r7, #0]
 801b1bc:	6878      	ldr	r0, [r7, #4]
 801b1be:	f000 ff99 	bl	801c0f4 <_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEj>
 801b1c2:	4602      	mov	r2, r0
 801b1c4:	687b      	ldr	r3, [r7, #4]
 801b1c6:	601a      	str	r2, [r3, #0]
	this->_M_impl._M_finish = this->_M_impl._M_start;
 801b1c8:	687b      	ldr	r3, [r7, #4]
 801b1ca:	681a      	ldr	r2, [r3, #0]
 801b1cc:	687b      	ldr	r3, [r7, #4]
 801b1ce:	605a      	str	r2, [r3, #4]
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 801b1d0:	687b      	ldr	r3, [r7, #4]
 801b1d2:	681a      	ldr	r2, [r3, #0]
 801b1d4:	683b      	ldr	r3, [r7, #0]
 801b1d6:	009b      	lsls	r3, r3, #2
 801b1d8:	441a      	add	r2, r3
 801b1da:	687b      	ldr	r3, [r7, #4]
 801b1dc:	609a      	str	r2, [r3, #8]
      }
 801b1de:	bf00      	nop
 801b1e0:	3708      	adds	r7, #8
 801b1e2:	46bd      	mov	sp, r7
 801b1e4:	bd80      	pop	{r7, pc}

0801b1e6 <_ZN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 801b1e6:	b480      	push	{r7}
 801b1e8:	b083      	sub	sp, #12
 801b1ea:	af00      	add	r7, sp, #0
 801b1ec:	6078      	str	r0, [r7, #4]
 801b1ee:	6039      	str	r1, [r7, #0]
      : _M_current(__i) { }
 801b1f0:	683b      	ldr	r3, [r7, #0]
 801b1f2:	681a      	ldr	r2, [r3, #0]
 801b1f4:	687b      	ldr	r3, [r7, #4]
 801b1f6:	601a      	str	r2, [r3, #0]
 801b1f8:	687b      	ldr	r3, [r7, #4]
 801b1fa:	4618      	mov	r0, r3
 801b1fc:	370c      	adds	r7, #12
 801b1fe:	46bd      	mov	sp, r7
 801b200:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b204:	4770      	bx	lr

0801b206 <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPfET0_T_SA_S9_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
 801b206:	b580      	push	{r7, lr}
 801b208:	b086      	sub	sp, #24
 801b20a:	af00      	add	r7, sp, #0
 801b20c:	60f8      	str	r0, [r7, #12]
 801b20e:	60b9      	str	r1, [r7, #8]
 801b210:	607a      	str	r2, [r7, #4]
      const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 801b212:	2301      	movs	r3, #1
 801b214:	75fb      	strb	r3, [r7, #23]
	__uninit_copy(__first, __last, __result);
 801b216:	687a      	ldr	r2, [r7, #4]
 801b218:	68b9      	ldr	r1, [r7, #8]
 801b21a:	68f8      	ldr	r0, [r7, #12]
 801b21c:	f000 ff7e 	bl	801c11c <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPfEET0_T_SC_SB_>
 801b220:	4603      	mov	r3, r0
    }
 801b222:	4618      	mov	r0, r3
 801b224:	3718      	adds	r7, #24
 801b226:	46bd      	mov	sp, r7
 801b228:	bd80      	pop	{r7, pc}

0801b22a <_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
 801b22a:	b580      	push	{r7, lr}
 801b22c:	b082      	sub	sp, #8
 801b22e:	af00      	add	r7, sp, #0
 801b230:	6078      	str	r0, [r7, #4]
 801b232:	6039      	str	r1, [r7, #0]
      { return __rhs; }
 801b234:	6839      	ldr	r1, [r7, #0]
 801b236:	6878      	ldr	r0, [r7, #4]
 801b238:	f000 ff80 	bl	801c13c <_ZNSaImEC1ERKS_>
 801b23c:	6878      	ldr	r0, [r7, #4]
 801b23e:	3708      	adds	r7, #8
 801b240:	46bd      	mov	sp, r7
 801b242:	bd80      	pop	{r7, pc}

0801b244 <_ZN9__gnu_cxx13new_allocatorIbEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801b244:	b480      	push	{r7}
 801b246:	b083      	sub	sp, #12
 801b248:	af00      	add	r7, sp, #0
 801b24a:	6078      	str	r0, [r7, #4]
 801b24c:	687b      	ldr	r3, [r7, #4]
 801b24e:	4618      	mov	r0, r3
 801b250:	370c      	adds	r7, #12
 801b252:	46bd      	mov	sp, r7
 801b254:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b258:	4770      	bx	lr

0801b25a <_ZN9__gnu_cxx13new_allocatorIbED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801b25a:	b480      	push	{r7}
 801b25c:	b083      	sub	sp, #12
 801b25e:	af00      	add	r7, sp, #0
 801b260:	6078      	str	r0, [r7, #4]
 801b262:	687b      	ldr	r3, [r7, #4]
 801b264:	4618      	mov	r0, r3
 801b266:	370c      	adds	r7, #12
 801b268:	46bd      	mov	sp, r7
 801b26a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b26e:	4770      	bx	lr

0801b270 <_ZNSaImEC1IbEERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 801b270:	b580      	push	{r7, lr}
 801b272:	b082      	sub	sp, #8
 801b274:	af00      	add	r7, sp, #0
 801b276:	6078      	str	r0, [r7, #4]
 801b278:	6039      	str	r1, [r7, #0]
 801b27a:	6878      	ldr	r0, [r7, #4]
 801b27c:	f000 ff6c 	bl	801c158 <_ZN9__gnu_cxx13new_allocatorImEC1Ev>
 801b280:	687b      	ldr	r3, [r7, #4]
 801b282:	4618      	mov	r0, r3
 801b284:	3708      	adds	r7, #8
 801b286:	46bd      	mov	sp, r7
 801b288:	bd80      	pop	{r7, pc}

0801b28a <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1ERKSaImE>:
	  _Bvector_impl(const _Bit_alloc_type& __a) _GLIBCXX_NOEXCEPT
 801b28a:	b580      	push	{r7, lr}
 801b28c:	b082      	sub	sp, #8
 801b28e:	af00      	add	r7, sp, #0
 801b290:	6078      	str	r0, [r7, #4]
 801b292:	6039      	str	r1, [r7, #0]
	  : _Bit_alloc_type(__a)
 801b294:	6839      	ldr	r1, [r7, #0]
 801b296:	6878      	ldr	r0, [r7, #4]
 801b298:	f000 ff50 	bl	801c13c <_ZNSaImEC1ERKS_>
 801b29c:	687b      	ldr	r3, [r7, #4]
 801b29e:	4618      	mov	r0, r3
 801b2a0:	f000 ff65 	bl	801c16e <_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev>
	  { }
 801b2a4:	687b      	ldr	r3, [r7, #4]
 801b2a6:	4618      	mov	r0, r3
 801b2a8:	3708      	adds	r7, #8
 801b2aa:	46bd      	mov	sp, r7
 801b2ac:	bd80      	pop	{r7, pc}

0801b2ae <_ZNSt13_Bvector_baseISaIbEE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801b2ae:	b590      	push	{r4, r7, lr}
 801b2b0:	b083      	sub	sp, #12
 801b2b2:	af00      	add	r7, sp, #0
 801b2b4:	6078      	str	r0, [r7, #4]
 801b2b6:	6039      	str	r1, [r7, #0]
      { return _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n)); }
 801b2b8:	687c      	ldr	r4, [r7, #4]
 801b2ba:	6838      	ldr	r0, [r7, #0]
 801b2bc:	f000 f80a 	bl	801b2d4 <_ZNSt13_Bvector_baseISaIbEE8_S_nwordEj>
 801b2c0:	4603      	mov	r3, r0
 801b2c2:	4619      	mov	r1, r3
 801b2c4:	4620      	mov	r0, r4
 801b2c6:	f000 ff67 	bl	801c198 <_ZNSt16allocator_traitsISaImEE8allocateERS0_j>
 801b2ca:	4603      	mov	r3, r0
 801b2cc:	4618      	mov	r0, r3
 801b2ce:	370c      	adds	r7, #12
 801b2d0:	46bd      	mov	sp, r7
 801b2d2:	bd90      	pop	{r4, r7, pc}

0801b2d4 <_ZNSt13_Bvector_baseISaIbEE8_S_nwordEj>:
      _S_nword(size_t __n)
 801b2d4:	b480      	push	{r7}
 801b2d6:	b083      	sub	sp, #12
 801b2d8:	af00      	add	r7, sp, #0
 801b2da:	6078      	str	r0, [r7, #4]
      { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
 801b2dc:	687b      	ldr	r3, [r7, #4]
 801b2de:	331f      	adds	r3, #31
 801b2e0:	095b      	lsrs	r3, r3, #5
 801b2e2:	4618      	mov	r0, r3
 801b2e4:	370c      	adds	r7, #12
 801b2e6:	46bd      	mov	sp, r7
 801b2e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b2ec:	4770      	bx	lr

0801b2ee <_ZSt4copyIPmS0_ET0_T_S2_S1_>:
    copy(_II __first, _II __last, _OI __result)
 801b2ee:	b590      	push	{r4, r7, lr}
 801b2f0:	b085      	sub	sp, #20
 801b2f2:	af00      	add	r7, sp, #0
 801b2f4:	60f8      	str	r0, [r7, #12]
 801b2f6:	60b9      	str	r1, [r7, #8]
 801b2f8:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 801b2fa:	68f8      	ldr	r0, [r7, #12]
 801b2fc:	f000 ff5b 	bl	801c1b6 <_ZSt12__miter_baseIPmET_S1_>
 801b300:	4604      	mov	r4, r0
 801b302:	68b8      	ldr	r0, [r7, #8]
 801b304:	f000 ff57 	bl	801c1b6 <_ZSt12__miter_baseIPmET_S1_>
 801b308:	4603      	mov	r3, r0
 801b30a:	687a      	ldr	r2, [r7, #4]
 801b30c:	4619      	mov	r1, r3
 801b30e:	4620      	mov	r0, r4
 801b310:	f000 ff5c 	bl	801c1cc <_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_>
 801b314:	4603      	mov	r3, r0
    }
 801b316:	4618      	mov	r0, r3
 801b318:	3714      	adds	r7, #20
 801b31a:	46bd      	mov	sp, r7
 801b31c:	bd90      	pop	{r4, r7, pc}

0801b31e <_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_>:
    copy(_II __first, _II __last, _OI __result)
 801b31e:	b082      	sub	sp, #8
 801b320:	b590      	push	{r4, r7, lr}
 801b322:	b08d      	sub	sp, #52	; 0x34
 801b324:	af04      	add	r7, sp, #16
 801b326:	60f8      	str	r0, [r7, #12]
 801b328:	1d38      	adds	r0, r7, #4
 801b32a:	e880 0006 	stmia.w	r0, {r1, r2}
 801b32e:	637b      	str	r3, [r7, #52]	; 0x34
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 801b330:	f107 0010 	add.w	r0, r7, #16
 801b334:	1d3b      	adds	r3, r7, #4
 801b336:	e893 0006 	ldmia.w	r3, {r1, r2}
 801b33a:	f000 ff6a 	bl	801c212 <_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_>
 801b33e:	f107 0018 	add.w	r0, r7, #24
 801b342:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801b346:	e893 0006 	ldmia.w	r3, {r1, r2}
 801b34a:	f000 ff62 	bl	801c212 <_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_>
 801b34e:	68fc      	ldr	r4, [r7, #12]
 801b350:	aa01      	add	r2, sp, #4
 801b352:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801b356:	e893 0003 	ldmia.w	r3, {r0, r1}
 801b35a:	e882 0003 	stmia.w	r2, {r0, r1}
 801b35e:	69fb      	ldr	r3, [r7, #28]
 801b360:	9300      	str	r3, [sp, #0]
 801b362:	69bb      	ldr	r3, [r7, #24]
 801b364:	f107 0210 	add.w	r2, r7, #16
 801b368:	ca06      	ldmia	r2, {r1, r2}
 801b36a:	4620      	mov	r0, r4
 801b36c:	f000 ff65 	bl	801c23a <_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_>
 801b370:	bf00      	nop
    }
 801b372:	68f8      	ldr	r0, [r7, #12]
 801b374:	3724      	adds	r7, #36	; 0x24
 801b376:	46bd      	mov	sp, r7
 801b378:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 801b37c:	b002      	add	sp, #8
 801b37e:	4770      	bx	lr

0801b380 <_ZSt4moveIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEONSt16remove_referenceIT_E4typeEOSL_>:
    move(_Tp&& __t) noexcept
 801b380:	b480      	push	{r7}
 801b382:	b083      	sub	sp, #12
 801b384:	af00      	add	r7, sp, #0
 801b386:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801b388:	687b      	ldr	r3, [r7, #4]
 801b38a:	4618      	mov	r0, r3
 801b38c:	370c      	adds	r7, #12
 801b38e:	46bd      	mov	sp, r7
 801b390:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b394:	4770      	bx	lr

0801b396 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S8_SA_SC_SE_EEEEDcOT0_>:
    __variant_cast(_Tp&& __rhs)
 801b396:	b480      	push	{r7}
 801b398:	b083      	sub	sp, #12
 801b39a:	af00      	add	r7, sp, #0
 801b39c:	6078      	str	r0, [r7, #4]
        return static_cast<variant<_Types...>&&>(__rhs);
 801b39e:	687b      	ldr	r3, [r7, #4]
    }
 801b3a0:	4618      	mov	r0, r3
 801b3a2:	370c      	adds	r7, #12
 801b3a4:	46bd      	mov	sp, r7
 801b3a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b3aa:	4770      	bx	lr

0801b3ac <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801b3ac:	b580      	push	{r7, lr}
 801b3ae:	b082      	sub	sp, #8
 801b3b0:	af00      	add	r7, sp, #0
 801b3b2:	7138      	strb	r0, [r7, #4]
 801b3b4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801b3b6:	6838      	ldr	r0, [r7, #0]
 801b3b8:	f000 ffad 	bl	801c316 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b3bc:	4603      	mov	r3, r0
 801b3be:	4618      	mov	r0, r3
 801b3c0:	f000 ffb4 	bl	801c32c <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>
 801b3c4:	4603      	mov	r3, r0
 801b3c6:	4618      	mov	r0, r3
 801b3c8:	3708      	adds	r7, #8
 801b3ca:	46bd      	mov	sp, r7
 801b3cc:	bd80      	pop	{r7, pc}

0801b3ce <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801b3ce:	b590      	push	{r4, r7, lr}
 801b3d0:	b083      	sub	sp, #12
 801b3d2:	af00      	add	r7, sp, #0
 801b3d4:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801b3d6:	6878      	ldr	r0, [r7, #4]
 801b3d8:	f000 ff92 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b3dc:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801b3de:	4619      	mov	r1, r3
 801b3e0:	4620      	mov	r0, r4
 801b3e2:	f7ff ffe3 	bl	801b3ac <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 801b3e6:	4603      	mov	r3, r0
    }
 801b3e8:	4618      	mov	r0, r3
 801b3ea:	370c      	adds	r7, #12
 801b3ec:	46bd      	mov	sp, r7
 801b3ee:	bd90      	pop	{r4, r7, pc}

0801b3f0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESW_EEDcSO_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801b3f0:	b580      	push	{r7, lr}
 801b3f2:	b082      	sub	sp, #8
 801b3f4:	af00      	add	r7, sp, #0
 801b3f6:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801b3f8:	6878      	ldr	r0, [r7, #4]
 801b3fa:	f000 ff81 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b3fe:	4603      	mov	r3, r0
 801b400:	4618      	mov	r0, r3
 801b402:	f7ff ffe4 	bl	801b3ce <_ZNSt8__detail9__variant5__getILj0ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801b406:	4603      	mov	r3, r0
	}
 801b408:	4618      	mov	r0, r3
 801b40a:	3708      	adds	r7, #8
 801b40c:	46bd      	mov	sp, r7
 801b40e:	bd80      	pop	{r7, pc}

0801b410 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESU_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801b410:	b5b0      	push	{r4, r5, r7, lr}
 801b412:	b082      	sub	sp, #8
 801b414:	af00      	add	r7, sp, #0
 801b416:	6078      	str	r0, [r7, #4]
 801b418:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801b41a:	6878      	ldr	r0, [r7, #4]
 801b41c:	f000 ff5a 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b420:	4604      	mov	r4, r0
 801b422:	6838      	ldr	r0, [r7, #0]
 801b424:	f000 ff61 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b428:	4603      	mov	r3, r0
 801b42a:	4618      	mov	r0, r3
 801b42c:	f7ff ffe0 	bl	801b3f0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE28__element_by_index_or_cookieILj0ESW_EEDcSO_>
 801b430:	4603      	mov	r3, r0
 801b432:	4619      	mov	r1, r3
 801b434:	4620      	mov	r0, r4
 801b436:	f000 ff86 	bl	801c346 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>
		std::forward<_Variants>(__vars))...);
 801b43a:	462b      	mov	r3, r5
      }
 801b43c:	4618      	mov	r0, r3
 801b43e:	3708      	adds	r7, #8
 801b440:	46bd      	mov	sp, r7
 801b442:	bdb0      	pop	{r4, r5, r7, pc}

0801b444 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESU_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b444:	b5b0      	push	{r4, r5, r7, lr}
 801b446:	b082      	sub	sp, #8
 801b448:	af00      	add	r7, sp, #0
 801b44a:	6078      	str	r0, [r7, #4]
 801b44c:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801b44e:	6878      	ldr	r0, [r7, #4]
 801b450:	f000 ff40 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b454:	4604      	mov	r4, r0
 801b456:	6838      	ldr	r0, [r7, #0]
 801b458:	f000 ff47 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b45c:	4603      	mov	r3, r0
 801b45e:	4619      	mov	r1, r3
 801b460:	4620      	mov	r0, r4
 801b462:	f7ff ffd5 	bl	801b410 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE19__visit_invoke_implESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b466:	462b      	mov	r3, r5
      }
 801b468:	4618      	mov	r0, r3
 801b46a:	3708      	adds	r7, #8
 801b46c:	46bd      	mov	sp, r7
 801b46e:	bdb0      	pop	{r4, r5, r7, pc}

0801b470 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE14__visit_invokeESU_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b470:	b5b0      	push	{r4, r5, r7, lr}
 801b472:	b082      	sub	sp, #8
 801b474:	af00      	add	r7, sp, #0
 801b476:	6078      	str	r0, [r7, #4]
 801b478:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801b47a:	6878      	ldr	r0, [r7, #4]
 801b47c:	f000 ff2a 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b480:	4604      	mov	r4, r0
 801b482:	6838      	ldr	r0, [r7, #0]
 801b484:	f000 ff31 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b488:	4603      	mov	r3, r0
 801b48a:	4619      	mov	r1, r3
 801b48c:	4620      	mov	r0, r4
 801b48e:	f7ff ffd9 	bl	801b444 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj0EEEE17__do_visit_invokeESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b492:	462b      	mov	r3, r5
      }
 801b494:	4618      	mov	r0, r3
 801b496:	3708      	adds	r7, #8
 801b498:	46bd      	mov	sp, r7
 801b49a:	bdb0      	pop	{r4, r5, r7, pc}

0801b49c <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801b49c:	b580      	push	{r7, lr}
 801b49e:	b082      	sub	sp, #8
 801b4a0:	af00      	add	r7, sp, #0
 801b4a2:	7138      	strb	r0, [r7, #4]
 801b4a4:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801b4a6:	6838      	ldr	r0, [r7, #0]
 801b4a8:	f000 ff64 	bl	801c374 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b4ac:	4603      	mov	r3, r0
 801b4ae:	4618      	mov	r0, r3
 801b4b0:	f000 ff6b 	bl	801c38a <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>
 801b4b4:	4603      	mov	r3, r0
 801b4b6:	4618      	mov	r0, r3
 801b4b8:	3708      	adds	r7, #8
 801b4ba:	46bd      	mov	sp, r7
 801b4bc:	bd80      	pop	{r7, pc}

0801b4be <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b4be:	b590      	push	{r4, r7, lr}
 801b4c0:	b083      	sub	sp, #12
 801b4c2:	af00      	add	r7, sp, #0
 801b4c4:	7138      	strb	r0, [r7, #4]
 801b4c6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b4c8:	6838      	ldr	r0, [r7, #0]
 801b4ca:	f000 ff24 	bl	801c316 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b4ce:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b4d0:	4619      	mov	r1, r3
 801b4d2:	4620      	mov	r0, r4
 801b4d4:	f7ff ffe2 	bl	801b49c <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 801b4d8:	4603      	mov	r3, r0
    }
 801b4da:	4618      	mov	r0, r3
 801b4dc:	370c      	adds	r7, #12
 801b4de:	46bd      	mov	sp, r7
 801b4e0:	bd90      	pop	{r4, r7, pc}

0801b4e2 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801b4e2:	b590      	push	{r4, r7, lr}
 801b4e4:	b083      	sub	sp, #12
 801b4e6:	af00      	add	r7, sp, #0
 801b4e8:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801b4ea:	6878      	ldr	r0, [r7, #4]
 801b4ec:	f000 ff08 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b4f0:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801b4f2:	4619      	mov	r1, r3
 801b4f4:	4620      	mov	r0, r4
 801b4f6:	f7ff ffe2 	bl	801b4be <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b4fa:	4603      	mov	r3, r0
    }
 801b4fc:	4618      	mov	r0, r3
 801b4fe:	370c      	adds	r7, #12
 801b500:	46bd      	mov	sp, r7
 801b502:	bd90      	pop	{r4, r7, pc}

0801b504 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESW_EEDcSO_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801b504:	b580      	push	{r7, lr}
 801b506:	b082      	sub	sp, #8
 801b508:	af00      	add	r7, sp, #0
 801b50a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801b50c:	6878      	ldr	r0, [r7, #4]
 801b50e:	f000 fef7 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b512:	4603      	mov	r3, r0
 801b514:	4618      	mov	r0, r3
 801b516:	f7ff ffe4 	bl	801b4e2 <_ZNSt8__detail9__variant5__getILj1ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801b51a:	4603      	mov	r3, r0
	}
 801b51c:	4618      	mov	r0, r3
 801b51e:	3708      	adds	r7, #8
 801b520:	46bd      	mov	sp, r7
 801b522:	bd80      	pop	{r7, pc}

0801b524 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESU_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801b524:	b5b0      	push	{r4, r5, r7, lr}
 801b526:	b082      	sub	sp, #8
 801b528:	af00      	add	r7, sp, #0
 801b52a:	6078      	str	r0, [r7, #4]
 801b52c:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801b52e:	6878      	ldr	r0, [r7, #4]
 801b530:	f000 fed0 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b534:	4604      	mov	r4, r0
 801b536:	6838      	ldr	r0, [r7, #0]
 801b538:	f000 fed7 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b53c:	4603      	mov	r3, r0
 801b53e:	4618      	mov	r0, r3
 801b540:	f7ff ffe0 	bl	801b504 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE28__element_by_index_or_cookieILj1ESW_EEDcSO_>
 801b544:	4603      	mov	r3, r0
 801b546:	4619      	mov	r1, r3
 801b548:	4620      	mov	r0, r4
 801b54a:	f000 ff2b 	bl	801c3a4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>
		std::forward<_Variants>(__vars))...);
 801b54e:	462b      	mov	r3, r5
      }
 801b550:	4618      	mov	r0, r3
 801b552:	3708      	adds	r7, #8
 801b554:	46bd      	mov	sp, r7
 801b556:	bdb0      	pop	{r4, r5, r7, pc}

0801b558 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESU_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b558:	b5b0      	push	{r4, r5, r7, lr}
 801b55a:	b082      	sub	sp, #8
 801b55c:	af00      	add	r7, sp, #0
 801b55e:	6078      	str	r0, [r7, #4]
 801b560:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801b562:	6878      	ldr	r0, [r7, #4]
 801b564:	f000 feb6 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b568:	4604      	mov	r4, r0
 801b56a:	6838      	ldr	r0, [r7, #0]
 801b56c:	f000 febd 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b570:	4603      	mov	r3, r0
 801b572:	4619      	mov	r1, r3
 801b574:	4620      	mov	r0, r4
 801b576:	f7ff ffd5 	bl	801b524 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE19__visit_invoke_implESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b57a:	462b      	mov	r3, r5
      }
 801b57c:	4618      	mov	r0, r3
 801b57e:	3708      	adds	r7, #8
 801b580:	46bd      	mov	sp, r7
 801b582:	bdb0      	pop	{r4, r5, r7, pc}

0801b584 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE14__visit_invokeESU_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b584:	b5b0      	push	{r4, r5, r7, lr}
 801b586:	b082      	sub	sp, #8
 801b588:	af00      	add	r7, sp, #0
 801b58a:	6078      	str	r0, [r7, #4]
 801b58c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801b58e:	6878      	ldr	r0, [r7, #4]
 801b590:	f000 fea0 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b594:	4604      	mov	r4, r0
 801b596:	6838      	ldr	r0, [r7, #0]
 801b598:	f000 fea7 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b59c:	4603      	mov	r3, r0
 801b59e:	4619      	mov	r1, r3
 801b5a0:	4620      	mov	r0, r4
 801b5a2:	f7ff ffd9 	bl	801b558 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj1EEEE17__do_visit_invokeESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b5a6:	462b      	mov	r3, r5
      }
 801b5a8:	4618      	mov	r0, r3
 801b5aa:	3708      	adds	r7, #8
 801b5ac:	46bd      	mov	sp, r7
 801b5ae:	bdb0      	pop	{r4, r5, r7, pc}

0801b5b0 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801b5b0:	b580      	push	{r7, lr}
 801b5b2:	b082      	sub	sp, #8
 801b5b4:	af00      	add	r7, sp, #0
 801b5b6:	7138      	strb	r0, [r7, #4]
 801b5b8:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801b5ba:	6838      	ldr	r0, [r7, #0]
 801b5bc:	f000 ff09 	bl	801c3d2 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b5c0:	4603      	mov	r3, r0
 801b5c2:	4618      	mov	r0, r3
 801b5c4:	f000 ff10 	bl	801c3e8 <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>
 801b5c8:	4603      	mov	r3, r0
 801b5ca:	4618      	mov	r0, r3
 801b5cc:	3708      	adds	r7, #8
 801b5ce:	46bd      	mov	sp, r7
 801b5d0:	bd80      	pop	{r7, pc}

0801b5d2 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b5d2:	b590      	push	{r4, r7, lr}
 801b5d4:	b083      	sub	sp, #12
 801b5d6:	af00      	add	r7, sp, #0
 801b5d8:	7138      	strb	r0, [r7, #4]
 801b5da:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b5dc:	6838      	ldr	r0, [r7, #0]
 801b5de:	f000 fec9 	bl	801c374 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b5e2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b5e4:	4619      	mov	r1, r3
 801b5e6:	4620      	mov	r0, r4
 801b5e8:	f7ff ffe2 	bl	801b5b0 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 801b5ec:	4603      	mov	r3, r0
    }
 801b5ee:	4618      	mov	r0, r3
 801b5f0:	370c      	adds	r7, #12
 801b5f2:	46bd      	mov	sp, r7
 801b5f4:	bd90      	pop	{r4, r7, pc}

0801b5f6 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b5f6:	b590      	push	{r4, r7, lr}
 801b5f8:	b083      	sub	sp, #12
 801b5fa:	af00      	add	r7, sp, #0
 801b5fc:	7138      	strb	r0, [r7, #4]
 801b5fe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b600:	6838      	ldr	r0, [r7, #0]
 801b602:	f000 fe88 	bl	801c316 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b606:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b608:	4619      	mov	r1, r3
 801b60a:	4620      	mov	r0, r4
 801b60c:	f7ff ffe1 	bl	801b5d2 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b610:	4603      	mov	r3, r0
    }
 801b612:	4618      	mov	r0, r3
 801b614:	370c      	adds	r7, #12
 801b616:	46bd      	mov	sp, r7
 801b618:	bd90      	pop	{r4, r7, pc}

0801b61a <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801b61a:	b590      	push	{r4, r7, lr}
 801b61c:	b083      	sub	sp, #12
 801b61e:	af00      	add	r7, sp, #0
 801b620:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801b622:	6878      	ldr	r0, [r7, #4]
 801b624:	f000 fe6c 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b628:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801b62a:	4619      	mov	r1, r3
 801b62c:	4620      	mov	r0, r4
 801b62e:	f7ff ffe2 	bl	801b5f6 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b632:	4603      	mov	r3, r0
    }
 801b634:	4618      	mov	r0, r3
 801b636:	370c      	adds	r7, #12
 801b638:	46bd      	mov	sp, r7
 801b63a:	bd90      	pop	{r4, r7, pc}

0801b63c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESW_EEDcSO_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801b63c:	b580      	push	{r7, lr}
 801b63e:	b082      	sub	sp, #8
 801b640:	af00      	add	r7, sp, #0
 801b642:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801b644:	6878      	ldr	r0, [r7, #4]
 801b646:	f000 fe5b 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b64a:	4603      	mov	r3, r0
 801b64c:	4618      	mov	r0, r3
 801b64e:	f7ff ffe4 	bl	801b61a <_ZNSt8__detail9__variant5__getILj2ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801b652:	4603      	mov	r3, r0
	}
 801b654:	4618      	mov	r0, r3
 801b656:	3708      	adds	r7, #8
 801b658:	46bd      	mov	sp, r7
 801b65a:	bd80      	pop	{r7, pc}

0801b65c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESU_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801b65c:	b5b0      	push	{r4, r5, r7, lr}
 801b65e:	b082      	sub	sp, #8
 801b660:	af00      	add	r7, sp, #0
 801b662:	6078      	str	r0, [r7, #4]
 801b664:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801b666:	6878      	ldr	r0, [r7, #4]
 801b668:	f000 fe34 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b66c:	4604      	mov	r4, r0
 801b66e:	6838      	ldr	r0, [r7, #0]
 801b670:	f000 fe3b 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b674:	4603      	mov	r3, r0
 801b676:	4618      	mov	r0, r3
 801b678:	f7ff ffe0 	bl	801b63c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE28__element_by_index_or_cookieILj2ESW_EEDcSO_>
 801b67c:	4603      	mov	r3, r0
 801b67e:	4619      	mov	r1, r3
 801b680:	4620      	mov	r0, r4
 801b682:	f000 febe 	bl	801c402 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>
		std::forward<_Variants>(__vars))...);
 801b686:	462b      	mov	r3, r5
      }
 801b688:	4618      	mov	r0, r3
 801b68a:	3708      	adds	r7, #8
 801b68c:	46bd      	mov	sp, r7
 801b68e:	bdb0      	pop	{r4, r5, r7, pc}

0801b690 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESU_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b690:	b5b0      	push	{r4, r5, r7, lr}
 801b692:	b082      	sub	sp, #8
 801b694:	af00      	add	r7, sp, #0
 801b696:	6078      	str	r0, [r7, #4]
 801b698:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801b69a:	6878      	ldr	r0, [r7, #4]
 801b69c:	f000 fe1a 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b6a0:	4604      	mov	r4, r0
 801b6a2:	6838      	ldr	r0, [r7, #0]
 801b6a4:	f000 fe21 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b6a8:	4603      	mov	r3, r0
 801b6aa:	4619      	mov	r1, r3
 801b6ac:	4620      	mov	r0, r4
 801b6ae:	f7ff ffd5 	bl	801b65c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE19__visit_invoke_implESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b6b2:	462b      	mov	r3, r5
      }
 801b6b4:	4618      	mov	r0, r3
 801b6b6:	3708      	adds	r7, #8
 801b6b8:	46bd      	mov	sp, r7
 801b6ba:	bdb0      	pop	{r4, r5, r7, pc}

0801b6bc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE14__visit_invokeESU_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b6bc:	b5b0      	push	{r4, r5, r7, lr}
 801b6be:	b082      	sub	sp, #8
 801b6c0:	af00      	add	r7, sp, #0
 801b6c2:	6078      	str	r0, [r7, #4]
 801b6c4:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801b6c6:	6878      	ldr	r0, [r7, #4]
 801b6c8:	f000 fe04 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b6cc:	4604      	mov	r4, r0
 801b6ce:	6838      	ldr	r0, [r7, #0]
 801b6d0:	f000 fe0b 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b6d4:	4603      	mov	r3, r0
 801b6d6:	4619      	mov	r1, r3
 801b6d8:	4620      	mov	r0, r4
 801b6da:	f7ff ffd9 	bl	801b690 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj2EEEE17__do_visit_invokeESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b6de:	462b      	mov	r3, r5
      }
 801b6e0:	4618      	mov	r0, r3
 801b6e2:	3708      	adds	r7, #8
 801b6e4:	46bd      	mov	sp, r7
 801b6e6:	bdb0      	pop	{r4, r5, r7, pc}

0801b6e8 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801b6e8:	b580      	push	{r7, lr}
 801b6ea:	b082      	sub	sp, #8
 801b6ec:	af00      	add	r7, sp, #0
 801b6ee:	7138      	strb	r0, [r7, #4]
 801b6f0:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801b6f2:	6838      	ldr	r0, [r7, #0]
 801b6f4:	f000 fe9c 	bl	801c430 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b6f8:	4603      	mov	r3, r0
 801b6fa:	4618      	mov	r0, r3
 801b6fc:	f000 fea3 	bl	801c446 <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>
 801b700:	4603      	mov	r3, r0
 801b702:	4618      	mov	r0, r3
 801b704:	3708      	adds	r7, #8
 801b706:	46bd      	mov	sp, r7
 801b708:	bd80      	pop	{r7, pc}

0801b70a <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b70a:	b590      	push	{r4, r7, lr}
 801b70c:	b083      	sub	sp, #12
 801b70e:	af00      	add	r7, sp, #0
 801b710:	7138      	strb	r0, [r7, #4]
 801b712:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b714:	6838      	ldr	r0, [r7, #0]
 801b716:	f000 fe5c 	bl	801c3d2 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b71a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b71c:	4619      	mov	r1, r3
 801b71e:	4620      	mov	r0, r4
 801b720:	f7ff ffe2 	bl	801b6e8 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 801b724:	4603      	mov	r3, r0
    }
 801b726:	4618      	mov	r0, r3
 801b728:	370c      	adds	r7, #12
 801b72a:	46bd      	mov	sp, r7
 801b72c:	bd90      	pop	{r4, r7, pc}

0801b72e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b72e:	b590      	push	{r4, r7, lr}
 801b730:	b083      	sub	sp, #12
 801b732:	af00      	add	r7, sp, #0
 801b734:	7138      	strb	r0, [r7, #4]
 801b736:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b738:	6838      	ldr	r0, [r7, #0]
 801b73a:	f000 fe1b 	bl	801c374 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b73e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b740:	4619      	mov	r1, r3
 801b742:	4620      	mov	r0, r4
 801b744:	f7ff ffe1 	bl	801b70a <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b748:	4603      	mov	r3, r0
    }
 801b74a:	4618      	mov	r0, r3
 801b74c:	370c      	adds	r7, #12
 801b74e:	46bd      	mov	sp, r7
 801b750:	bd90      	pop	{r4, r7, pc}

0801b752 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b752:	b590      	push	{r4, r7, lr}
 801b754:	b083      	sub	sp, #12
 801b756:	af00      	add	r7, sp, #0
 801b758:	7138      	strb	r0, [r7, #4]
 801b75a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b75c:	6838      	ldr	r0, [r7, #0]
 801b75e:	f000 fdda 	bl	801c316 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b762:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b764:	4619      	mov	r1, r3
 801b766:	4620      	mov	r0, r4
 801b768:	f7ff ffe1 	bl	801b72e <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b76c:	4603      	mov	r3, r0
    }
 801b76e:	4618      	mov	r0, r3
 801b770:	370c      	adds	r7, #12
 801b772:	46bd      	mov	sp, r7
 801b774:	bd90      	pop	{r4, r7, pc}

0801b776 <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801b776:	b590      	push	{r4, r7, lr}
 801b778:	b083      	sub	sp, #12
 801b77a:	af00      	add	r7, sp, #0
 801b77c:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801b77e:	6878      	ldr	r0, [r7, #4]
 801b780:	f000 fdbe 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b784:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801b786:	4619      	mov	r1, r3
 801b788:	4620      	mov	r0, r4
 801b78a:	f7ff ffe2 	bl	801b752 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b78e:	4603      	mov	r3, r0
    }
 801b790:	4618      	mov	r0, r3
 801b792:	370c      	adds	r7, #12
 801b794:	46bd      	mov	sp, r7
 801b796:	bd90      	pop	{r4, r7, pc}

0801b798 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESW_EEDcSO_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801b798:	b580      	push	{r7, lr}
 801b79a:	b082      	sub	sp, #8
 801b79c:	af00      	add	r7, sp, #0
 801b79e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801b7a0:	6878      	ldr	r0, [r7, #4]
 801b7a2:	f000 fdad 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b7a6:	4603      	mov	r3, r0
 801b7a8:	4618      	mov	r0, r3
 801b7aa:	f7ff ffe4 	bl	801b776 <_ZNSt8__detail9__variant5__getILj3ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801b7ae:	4603      	mov	r3, r0
	}
 801b7b0:	4618      	mov	r0, r3
 801b7b2:	3708      	adds	r7, #8
 801b7b4:	46bd      	mov	sp, r7
 801b7b6:	bd80      	pop	{r7, pc}

0801b7b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESU_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801b7b8:	b5b0      	push	{r4, r5, r7, lr}
 801b7ba:	b082      	sub	sp, #8
 801b7bc:	af00      	add	r7, sp, #0
 801b7be:	6078      	str	r0, [r7, #4]
 801b7c0:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801b7c2:	6878      	ldr	r0, [r7, #4]
 801b7c4:	f000 fd86 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b7c8:	4604      	mov	r4, r0
 801b7ca:	6838      	ldr	r0, [r7, #0]
 801b7cc:	f000 fd8d 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b7d0:	4603      	mov	r3, r0
 801b7d2:	4618      	mov	r0, r3
 801b7d4:	f7ff ffe0 	bl	801b798 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE28__element_by_index_or_cookieILj3ESW_EEDcSO_>
 801b7d8:	4603      	mov	r3, r0
 801b7da:	4619      	mov	r1, r3
 801b7dc:	4620      	mov	r0, r4
 801b7de:	f000 fe43 	bl	801c468 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>
		std::forward<_Variants>(__vars))...);
 801b7e2:	462b      	mov	r3, r5
      }
 801b7e4:	4618      	mov	r0, r3
 801b7e6:	3708      	adds	r7, #8
 801b7e8:	46bd      	mov	sp, r7
 801b7ea:	bdb0      	pop	{r4, r5, r7, pc}

0801b7ec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESU_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b7ec:	b5b0      	push	{r4, r5, r7, lr}
 801b7ee:	b082      	sub	sp, #8
 801b7f0:	af00      	add	r7, sp, #0
 801b7f2:	6078      	str	r0, [r7, #4]
 801b7f4:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801b7f6:	6878      	ldr	r0, [r7, #4]
 801b7f8:	f000 fd6c 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b7fc:	4604      	mov	r4, r0
 801b7fe:	6838      	ldr	r0, [r7, #0]
 801b800:	f000 fd73 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b804:	4603      	mov	r3, r0
 801b806:	4619      	mov	r1, r3
 801b808:	4620      	mov	r0, r4
 801b80a:	f7ff ffd5 	bl	801b7b8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE19__visit_invoke_implESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b80e:	462b      	mov	r3, r5
      }
 801b810:	4618      	mov	r0, r3
 801b812:	3708      	adds	r7, #8
 801b814:	46bd      	mov	sp, r7
 801b816:	bdb0      	pop	{r4, r5, r7, pc}

0801b818 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE14__visit_invokeESU_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b818:	b5b0      	push	{r4, r5, r7, lr}
 801b81a:	b082      	sub	sp, #8
 801b81c:	af00      	add	r7, sp, #0
 801b81e:	6078      	str	r0, [r7, #4]
 801b820:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801b822:	6878      	ldr	r0, [r7, #4]
 801b824:	f000 fd56 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b828:	4604      	mov	r4, r0
 801b82a:	6838      	ldr	r0, [r7, #0]
 801b82c:	f000 fd5d 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b830:	4603      	mov	r3, r0
 801b832:	4619      	mov	r1, r3
 801b834:	4620      	mov	r0, r4
 801b836:	f7ff ffd9 	bl	801b7ec <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj3EEEE17__do_visit_invokeESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b83a:	462b      	mov	r3, r5
      }
 801b83c:	4618      	mov	r0, r3
 801b83e:	3708      	adds	r7, #8
 801b840:	46bd      	mov	sp, r7
 801b842:	bdb0      	pop	{r4, r5, r7, pc}

0801b844 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801b844:	b580      	push	{r7, lr}
 801b846:	b082      	sub	sp, #8
 801b848:	af00      	add	r7, sp, #0
 801b84a:	7138      	strb	r0, [r7, #4]
 801b84c:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801b84e:	6838      	ldr	r0, [r7, #0]
 801b850:	f000 fe21 	bl	801c496 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b854:	4603      	mov	r3, r0
 801b856:	4618      	mov	r0, r3
 801b858:	f000 fe28 	bl	801c4ac <_ZNOSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>
 801b85c:	4603      	mov	r3, r0
 801b85e:	4618      	mov	r0, r3
 801b860:	3708      	adds	r7, #8
 801b862:	46bd      	mov	sp, r7
 801b864:	bd80      	pop	{r7, pc}

0801b866 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b866:	b590      	push	{r4, r7, lr}
 801b868:	b083      	sub	sp, #12
 801b86a:	af00      	add	r7, sp, #0
 801b86c:	7138      	strb	r0, [r7, #4]
 801b86e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b870:	6838      	ldr	r0, [r7, #0]
 801b872:	f000 fddd 	bl	801c430 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b876:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b878:	4619      	mov	r1, r3
 801b87a:	4620      	mov	r0, r4
 801b87c:	f7ff ffe2 	bl	801b844 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 801b880:	4603      	mov	r3, r0
    }
 801b882:	4618      	mov	r0, r3
 801b884:	370c      	adds	r7, #12
 801b886:	46bd      	mov	sp, r7
 801b888:	bd90      	pop	{r4, r7, pc}

0801b88a <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b88a:	b590      	push	{r4, r7, lr}
 801b88c:	b083      	sub	sp, #12
 801b88e:	af00      	add	r7, sp, #0
 801b890:	7138      	strb	r0, [r7, #4]
 801b892:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b894:	6838      	ldr	r0, [r7, #0]
 801b896:	f000 fd9c 	bl	801c3d2 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b89a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b89c:	4619      	mov	r1, r3
 801b89e:	4620      	mov	r0, r4
 801b8a0:	f7ff ffe1 	bl	801b866 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b8a4:	4603      	mov	r3, r0
    }
 801b8a6:	4618      	mov	r0, r3
 801b8a8:	370c      	adds	r7, #12
 801b8aa:	46bd      	mov	sp, r7
 801b8ac:	bd90      	pop	{r4, r7, pc}

0801b8ae <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b8ae:	b590      	push	{r4, r7, lr}
 801b8b0:	b083      	sub	sp, #12
 801b8b2:	af00      	add	r7, sp, #0
 801b8b4:	7138      	strb	r0, [r7, #4]
 801b8b6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b8b8:	6838      	ldr	r0, [r7, #0]
 801b8ba:	f000 fd5b 	bl	801c374 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b8be:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b8c0:	4619      	mov	r1, r3
 801b8c2:	4620      	mov	r0, r4
 801b8c4:	f7ff ffe1 	bl	801b88a <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b8c8:	4603      	mov	r3, r0
    }
 801b8ca:	4618      	mov	r0, r3
 801b8cc:	370c      	adds	r7, #12
 801b8ce:	46bd      	mov	sp, r7
 801b8d0:	bd90      	pop	{r4, r7, pc}

0801b8d2 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b8d2:	b590      	push	{r4, r7, lr}
 801b8d4:	b083      	sub	sp, #12
 801b8d6:	af00      	add	r7, sp, #0
 801b8d8:	7138      	strb	r0, [r7, #4]
 801b8da:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b8dc:	6838      	ldr	r0, [r7, #0]
 801b8de:	f000 fd1a 	bl	801c316 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b8e2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b8e4:	4619      	mov	r1, r3
 801b8e6:	4620      	mov	r0, r4
 801b8e8:	f7ff ffe1 	bl	801b8ae <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b8ec:	4603      	mov	r3, r0
    }
 801b8ee:	4618      	mov	r0, r3
 801b8f0:	370c      	adds	r7, #12
 801b8f2:	46bd      	mov	sp, r7
 801b8f4:	bd90      	pop	{r4, r7, pc}

0801b8f6 <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801b8f6:	b590      	push	{r4, r7, lr}
 801b8f8:	b083      	sub	sp, #12
 801b8fa:	af00      	add	r7, sp, #0
 801b8fc:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801b8fe:	6878      	ldr	r0, [r7, #4]
 801b900:	f000 fcfe 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b904:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801b906:	4619      	mov	r1, r3
 801b908:	4620      	mov	r0, r4
 801b90a:	f7ff ffe2 	bl	801b8d2 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801b90e:	4603      	mov	r3, r0
    }
 801b910:	4618      	mov	r0, r3
 801b912:	370c      	adds	r7, #12
 801b914:	46bd      	mov	sp, r7
 801b916:	bd90      	pop	{r4, r7, pc}

0801b918 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESW_EEDcSO_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801b918:	b580      	push	{r7, lr}
 801b91a:	b082      	sub	sp, #8
 801b91c:	af00      	add	r7, sp, #0
 801b91e:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801b920:	6878      	ldr	r0, [r7, #4]
 801b922:	f000 fced 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801b926:	4603      	mov	r3, r0
 801b928:	4618      	mov	r0, r3
 801b92a:	f7ff ffe4 	bl	801b8f6 <_ZNSt8__detail9__variant5__getILj4ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801b92e:	4603      	mov	r3, r0
	}
 801b930:	4618      	mov	r0, r3
 801b932:	3708      	adds	r7, #8
 801b934:	46bd      	mov	sp, r7
 801b936:	bd80      	pop	{r7, pc}

0801b938 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESU_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801b938:	b5b0      	push	{r4, r5, r7, lr}
 801b93a:	b082      	sub	sp, #8
 801b93c:	af00      	add	r7, sp, #0
 801b93e:	6078      	str	r0, [r7, #4]
 801b940:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801b942:	6878      	ldr	r0, [r7, #4]
 801b944:	f000 fcc6 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b948:	4604      	mov	r4, r0
 801b94a:	6838      	ldr	r0, [r7, #0]
 801b94c:	f000 fccd 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b950:	4603      	mov	r3, r0
 801b952:	4618      	mov	r0, r3
 801b954:	f7ff ffe0 	bl	801b918 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE28__element_by_index_or_cookieILj4ESW_EEDcSO_>
 801b958:	4603      	mov	r3, r0
 801b95a:	4619      	mov	r1, r3
 801b95c:	4620      	mov	r0, r4
 801b95e:	f000 fdb6 	bl	801c4ce <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSB_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>
		std::forward<_Variants>(__vars))...);
 801b962:	462b      	mov	r3, r5
      }
 801b964:	4618      	mov	r0, r3
 801b966:	3708      	adds	r7, #8
 801b968:	46bd      	mov	sp, r7
 801b96a:	bdb0      	pop	{r4, r5, r7, pc}

0801b96c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESU_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b96c:	b5b0      	push	{r4, r5, r7, lr}
 801b96e:	b082      	sub	sp, #8
 801b970:	af00      	add	r7, sp, #0
 801b972:	6078      	str	r0, [r7, #4]
 801b974:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801b976:	6878      	ldr	r0, [r7, #4]
 801b978:	f000 fcac 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b97c:	4604      	mov	r4, r0
 801b97e:	6838      	ldr	r0, [r7, #0]
 801b980:	f000 fcb3 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b984:	4603      	mov	r3, r0
 801b986:	4619      	mov	r1, r3
 801b988:	4620      	mov	r0, r4
 801b98a:	f7ff ffd5 	bl	801b938 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE19__visit_invoke_implESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b98e:	462b      	mov	r3, r5
      }
 801b990:	4618      	mov	r0, r3
 801b992:	3708      	adds	r7, #8
 801b994:	46bd      	mov	sp, r7
 801b996:	bdb0      	pop	{r4, r5, r7, pc}

0801b998 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE14__visit_invokeESU_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801b998:	b5b0      	push	{r4, r5, r7, lr}
 801b99a:	b082      	sub	sp, #8
 801b99c:	af00      	add	r7, sp, #0
 801b99e:	6078      	str	r0, [r7, #4]
 801b9a0:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801b9a2:	6878      	ldr	r0, [r7, #4]
 801b9a4:	f000 fc96 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801b9a8:	4604      	mov	r4, r0
 801b9aa:	6838      	ldr	r0, [r7, #0]
 801b9ac:	f000 fc9d 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801b9b0:	4603      	mov	r3, r0
 801b9b2:	4619      	mov	r1, r3
 801b9b4:	4620      	mov	r0, r4
 801b9b6:	f7ff ffd9 	bl	801b96c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj4EEEE17__do_visit_invokeESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801b9ba:	462b      	mov	r3, r5
      }
 801b9bc:	4618      	mov	r0, r3
 801b9be:	3708      	adds	r7, #8
 801b9c0:	46bd      	mov	sp, r7
 801b9c2:	bdb0      	pop	{r4, r5, r7, pc}

0801b9c4 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801b9c4:	b580      	push	{r7, lr}
 801b9c6:	b082      	sub	sp, #8
 801b9c8:	af00      	add	r7, sp, #0
 801b9ca:	7138      	strb	r0, [r7, #4]
 801b9cc:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801b9ce:	6838      	ldr	r0, [r7, #0]
 801b9d0:	f000 fd94 	bl	801c4fc <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801b9d4:	4603      	mov	r3, r0
 801b9d6:	4618      	mov	r0, r3
 801b9d8:	f000 fd9b 	bl	801c512 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorIiSaIiEELb0EE6_M_getEv>
 801b9dc:	4603      	mov	r3, r0
 801b9de:	4618      	mov	r0, r3
 801b9e0:	3708      	adds	r7, #8
 801b9e2:	46bd      	mov	sp, r7
 801b9e4:	bd80      	pop	{r7, pc}

0801b9e6 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801b9e6:	b590      	push	{r4, r7, lr}
 801b9e8:	b083      	sub	sp, #12
 801b9ea:	af00      	add	r7, sp, #0
 801b9ec:	7138      	strb	r0, [r7, #4]
 801b9ee:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801b9f0:	6838      	ldr	r0, [r7, #0]
 801b9f2:	f000 fd50 	bl	801c496 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801b9f6:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801b9f8:	4619      	mov	r1, r3
 801b9fa:	4620      	mov	r0, r4
 801b9fc:	f7ff ffe2 	bl	801b9c4 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 801ba00:	4603      	mov	r3, r0
    }
 801ba02:	4618      	mov	r0, r3
 801ba04:	370c      	adds	r7, #12
 801ba06:	46bd      	mov	sp, r7
 801ba08:	bd90      	pop	{r4, r7, pc}

0801ba0a <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801ba0a:	b590      	push	{r4, r7, lr}
 801ba0c:	b083      	sub	sp, #12
 801ba0e:	af00      	add	r7, sp, #0
 801ba10:	7138      	strb	r0, [r7, #4]
 801ba12:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801ba14:	6838      	ldr	r0, [r7, #0]
 801ba16:	f000 fd0b 	bl	801c430 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801ba1a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801ba1c:	4619      	mov	r1, r3
 801ba1e:	4620      	mov	r0, r4
 801ba20:	f7ff ffe1 	bl	801b9e6 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801ba24:	4603      	mov	r3, r0
    }
 801ba26:	4618      	mov	r0, r3
 801ba28:	370c      	adds	r7, #12
 801ba2a:	46bd      	mov	sp, r7
 801ba2c:	bd90      	pop	{r4, r7, pc}

0801ba2e <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801ba2e:	b590      	push	{r4, r7, lr}
 801ba30:	b083      	sub	sp, #12
 801ba32:	af00      	add	r7, sp, #0
 801ba34:	7138      	strb	r0, [r7, #4]
 801ba36:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801ba38:	6838      	ldr	r0, [r7, #0]
 801ba3a:	f000 fcca 	bl	801c3d2 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801ba3e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801ba40:	4619      	mov	r1, r3
 801ba42:	4620      	mov	r0, r4
 801ba44:	f7ff ffe1 	bl	801ba0a <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801ba48:	4603      	mov	r3, r0
    }
 801ba4a:	4618      	mov	r0, r3
 801ba4c:	370c      	adds	r7, #12
 801ba4e:	46bd      	mov	sp, r7
 801ba50:	bd90      	pop	{r4, r7, pc}

0801ba52 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801ba52:	b590      	push	{r4, r7, lr}
 801ba54:	b083      	sub	sp, #12
 801ba56:	af00      	add	r7, sp, #0
 801ba58:	7138      	strb	r0, [r7, #4]
 801ba5a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801ba5c:	6838      	ldr	r0, [r7, #0]
 801ba5e:	f000 fc89 	bl	801c374 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801ba62:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801ba64:	4619      	mov	r1, r3
 801ba66:	4620      	mov	r0, r4
 801ba68:	f7ff ffe1 	bl	801ba2e <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801ba6c:	4603      	mov	r3, r0
    }
 801ba6e:	4618      	mov	r0, r3
 801ba70:	370c      	adds	r7, #12
 801ba72:	46bd      	mov	sp, r7
 801ba74:	bd90      	pop	{r4, r7, pc}

0801ba76 <_ZNSt8__detail9__variant5__getILj5ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801ba76:	b590      	push	{r4, r7, lr}
 801ba78:	b083      	sub	sp, #12
 801ba7a:	af00      	add	r7, sp, #0
 801ba7c:	7138      	strb	r0, [r7, #4]
 801ba7e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801ba80:	6838      	ldr	r0, [r7, #0]
 801ba82:	f000 fc48 	bl	801c316 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801ba86:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801ba88:	4619      	mov	r1, r3
 801ba8a:	4620      	mov	r0, r4
 801ba8c:	f7ff ffe1 	bl	801ba52 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801ba90:	4603      	mov	r3, r0
    }
 801ba92:	4618      	mov	r0, r3
 801ba94:	370c      	adds	r7, #12
 801ba96:	46bd      	mov	sp, r7
 801ba98:	bd90      	pop	{r4, r7, pc}

0801ba9a <_ZNSt8__detail9__variant5__getILj5ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801ba9a:	b590      	push	{r4, r7, lr}
 801ba9c:	b083      	sub	sp, #12
 801ba9e:	af00      	add	r7, sp, #0
 801baa0:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801baa2:	6878      	ldr	r0, [r7, #4]
 801baa4:	f000 fc2c 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801baa8:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801baaa:	4619      	mov	r1, r3
 801baac:	4620      	mov	r0, r4
 801baae:	f7ff ffe2 	bl	801ba76 <_ZNSt8__detail9__variant5__getILj5ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bab2:	4603      	mov	r3, r0
    }
 801bab4:	4618      	mov	r0, r3
 801bab6:	370c      	adds	r7, #12
 801bab8:	46bd      	mov	sp, r7
 801baba:	bd90      	pop	{r4, r7, pc}

0801babc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESW_EEDcSO_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801babc:	b580      	push	{r7, lr}
 801babe:	b082      	sub	sp, #8
 801bac0:	af00      	add	r7, sp, #0
 801bac2:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801bac4:	6878      	ldr	r0, [r7, #4]
 801bac6:	f000 fc1b 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801baca:	4603      	mov	r3, r0
 801bacc:	4618      	mov	r0, r3
 801bace:	f7ff ffe4 	bl	801ba9a <_ZNSt8__detail9__variant5__getILj5ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801bad2:	4603      	mov	r3, r0
	}
 801bad4:	4618      	mov	r0, r3
 801bad6:	3708      	adds	r7, #8
 801bad8:	46bd      	mov	sp, r7
 801bada:	bd80      	pop	{r7, pc}

0801badc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESU_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801badc:	b5b0      	push	{r4, r5, r7, lr}
 801bade:	b082      	sub	sp, #8
 801bae0:	af00      	add	r7, sp, #0
 801bae2:	6078      	str	r0, [r7, #4]
 801bae4:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801bae6:	6878      	ldr	r0, [r7, #4]
 801bae8:	f000 fbf4 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801baec:	4604      	mov	r4, r0
 801baee:	6838      	ldr	r0, [r7, #0]
 801baf0:	f000 fbfb 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801baf4:	4603      	mov	r3, r0
 801baf6:	4618      	mov	r0, r3
 801baf8:	f7ff ffe0 	bl	801babc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE28__element_by_index_or_cookieILj5ESW_EEDcSO_>
 801bafc:	4603      	mov	r3, r0
 801bafe:	4619      	mov	r1, r3
 801bb00:	4620      	mov	r0, r4
 801bb02:	f000 fd17 	bl	801c534 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSD_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>
		std::forward<_Variants>(__vars))...);
 801bb06:	462b      	mov	r3, r5
      }
 801bb08:	4618      	mov	r0, r3
 801bb0a:	3708      	adds	r7, #8
 801bb0c:	46bd      	mov	sp, r7
 801bb0e:	bdb0      	pop	{r4, r5, r7, pc}

0801bb10 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESU_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801bb10:	b5b0      	push	{r4, r5, r7, lr}
 801bb12:	b082      	sub	sp, #8
 801bb14:	af00      	add	r7, sp, #0
 801bb16:	6078      	str	r0, [r7, #4]
 801bb18:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801bb1a:	6878      	ldr	r0, [r7, #4]
 801bb1c:	f000 fbda 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801bb20:	4604      	mov	r4, r0
 801bb22:	6838      	ldr	r0, [r7, #0]
 801bb24:	f000 fbe1 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801bb28:	4603      	mov	r3, r0
 801bb2a:	4619      	mov	r1, r3
 801bb2c:	4620      	mov	r0, r4
 801bb2e:	f7ff ffd5 	bl	801badc <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE19__visit_invoke_implESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801bb32:	462b      	mov	r3, r5
      }
 801bb34:	4618      	mov	r0, r3
 801bb36:	3708      	adds	r7, #8
 801bb38:	46bd      	mov	sp, r7
 801bb3a:	bdb0      	pop	{r4, r5, r7, pc}

0801bb3c <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE14__visit_invokeESU_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801bb3c:	b5b0      	push	{r4, r5, r7, lr}
 801bb3e:	b082      	sub	sp, #8
 801bb40:	af00      	add	r7, sp, #0
 801bb42:	6078      	str	r0, [r7, #4]
 801bb44:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801bb46:	6878      	ldr	r0, [r7, #4]
 801bb48:	f000 fbc4 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801bb4c:	4604      	mov	r4, r0
 801bb4e:	6838      	ldr	r0, [r7, #0]
 801bb50:	f000 fbcb 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801bb54:	4603      	mov	r3, r0
 801bb56:	4619      	mov	r1, r3
 801bb58:	4620      	mov	r0, r4
 801bb5a:	f7ff ffd9 	bl	801bb10 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj5EEEE17__do_visit_invokeESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801bb5e:	462b      	mov	r3, r5
      }
 801bb60:	4618      	mov	r0, r3
 801bb62:	3708      	adds	r7, #8
 801bb64:	46bd      	mov	sp, r7
 801bb66:	bdb0      	pop	{r4, r5, r7, pc}

0801bb68 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801bb68:	b580      	push	{r7, lr}
 801bb6a:	b082      	sub	sp, #8
 801bb6c:	af00      	add	r7, sp, #0
 801bb6e:	7138      	strb	r0, [r7, #4]
 801bb70:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801bb72:	6838      	ldr	r0, [r7, #0]
 801bb74:	f000 fcf5 	bl	801c562 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801bb78:	4603      	mov	r3, r0
 801bb7a:	4618      	mov	r0, r3
 801bb7c:	f000 fcfc 	bl	801c578 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorIfSaIfEELb0EE6_M_getEv>
 801bb80:	4603      	mov	r3, r0
 801bb82:	4618      	mov	r0, r3
 801bb84:	3708      	adds	r7, #8
 801bb86:	46bd      	mov	sp, r7
 801bb88:	bd80      	pop	{r7, pc}

0801bb8a <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bb8a:	b590      	push	{r4, r7, lr}
 801bb8c:	b083      	sub	sp, #12
 801bb8e:	af00      	add	r7, sp, #0
 801bb90:	7138      	strb	r0, [r7, #4]
 801bb92:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bb94:	6838      	ldr	r0, [r7, #0]
 801bb96:	f000 fcb1 	bl	801c4fc <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801bb9a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bb9c:	4619      	mov	r1, r3
 801bb9e:	4620      	mov	r0, r4
 801bba0:	f7ff ffe2 	bl	801bb68 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 801bba4:	4603      	mov	r3, r0
    }
 801bba6:	4618      	mov	r0, r3
 801bba8:	370c      	adds	r7, #12
 801bbaa:	46bd      	mov	sp, r7
 801bbac:	bd90      	pop	{r4, r7, pc}

0801bbae <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bbae:	b590      	push	{r4, r7, lr}
 801bbb0:	b083      	sub	sp, #12
 801bbb2:	af00      	add	r7, sp, #0
 801bbb4:	7138      	strb	r0, [r7, #4]
 801bbb6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bbb8:	6838      	ldr	r0, [r7, #0]
 801bbba:	f000 fc6c 	bl	801c496 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801bbbe:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bbc0:	4619      	mov	r1, r3
 801bbc2:	4620      	mov	r0, r4
 801bbc4:	f7ff ffe1 	bl	801bb8a <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bbc8:	4603      	mov	r3, r0
    }
 801bbca:	4618      	mov	r0, r3
 801bbcc:	370c      	adds	r7, #12
 801bbce:	46bd      	mov	sp, r7
 801bbd0:	bd90      	pop	{r4, r7, pc}

0801bbd2 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bbd2:	b590      	push	{r4, r7, lr}
 801bbd4:	b083      	sub	sp, #12
 801bbd6:	af00      	add	r7, sp, #0
 801bbd8:	7138      	strb	r0, [r7, #4]
 801bbda:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bbdc:	6838      	ldr	r0, [r7, #0]
 801bbde:	f000 fc27 	bl	801c430 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801bbe2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bbe4:	4619      	mov	r1, r3
 801bbe6:	4620      	mov	r0, r4
 801bbe8:	f7ff ffe1 	bl	801bbae <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bbec:	4603      	mov	r3, r0
    }
 801bbee:	4618      	mov	r0, r3
 801bbf0:	370c      	adds	r7, #12
 801bbf2:	46bd      	mov	sp, r7
 801bbf4:	bd90      	pop	{r4, r7, pc}

0801bbf6 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bbf6:	b590      	push	{r4, r7, lr}
 801bbf8:	b083      	sub	sp, #12
 801bbfa:	af00      	add	r7, sp, #0
 801bbfc:	7138      	strb	r0, [r7, #4]
 801bbfe:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bc00:	6838      	ldr	r0, [r7, #0]
 801bc02:	f000 fbe6 	bl	801c3d2 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801bc06:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bc08:	4619      	mov	r1, r3
 801bc0a:	4620      	mov	r0, r4
 801bc0c:	f7ff ffe1 	bl	801bbd2 <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bc10:	4603      	mov	r3, r0
    }
 801bc12:	4618      	mov	r0, r3
 801bc14:	370c      	adds	r7, #12
 801bc16:	46bd      	mov	sp, r7
 801bc18:	bd90      	pop	{r4, r7, pc}

0801bc1a <_ZNSt8__detail9__variant5__getILj5ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bc1a:	b590      	push	{r4, r7, lr}
 801bc1c:	b083      	sub	sp, #12
 801bc1e:	af00      	add	r7, sp, #0
 801bc20:	7138      	strb	r0, [r7, #4]
 801bc22:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bc24:	6838      	ldr	r0, [r7, #0]
 801bc26:	f000 fba5 	bl	801c374 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801bc2a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bc2c:	4619      	mov	r1, r3
 801bc2e:	4620      	mov	r0, r4
 801bc30:	f7ff ffe1 	bl	801bbf6 <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bc34:	4603      	mov	r3, r0
    }
 801bc36:	4618      	mov	r0, r3
 801bc38:	370c      	adds	r7, #12
 801bc3a:	46bd      	mov	sp, r7
 801bc3c:	bd90      	pop	{r4, r7, pc}

0801bc3e <_ZNSt8__detail9__variant5__getILj6ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bc3e:	b590      	push	{r4, r7, lr}
 801bc40:	b083      	sub	sp, #12
 801bc42:	af00      	add	r7, sp, #0
 801bc44:	7138      	strb	r0, [r7, #4]
 801bc46:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bc48:	6838      	ldr	r0, [r7, #0]
 801bc4a:	f000 fb64 	bl	801c316 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801bc4e:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bc50:	4619      	mov	r1, r3
 801bc52:	4620      	mov	r0, r4
 801bc54:	f7ff ffe1 	bl	801bc1a <_ZNSt8__detail9__variant5__getILj5ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bc58:	4603      	mov	r3, r0
    }
 801bc5a:	4618      	mov	r0, r3
 801bc5c:	370c      	adds	r7, #12
 801bc5e:	46bd      	mov	sp, r7
 801bc60:	bd90      	pop	{r4, r7, pc}

0801bc62 <_ZNSt8__detail9__variant5__getILj6ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801bc62:	b590      	push	{r4, r7, lr}
 801bc64:	b083      	sub	sp, #12
 801bc66:	af00      	add	r7, sp, #0
 801bc68:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801bc6a:	6878      	ldr	r0, [r7, #4]
 801bc6c:	f000 fb48 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801bc70:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801bc72:	4619      	mov	r1, r3
 801bc74:	4620      	mov	r0, r4
 801bc76:	f7ff ffe2 	bl	801bc3e <_ZNSt8__detail9__variant5__getILj6ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bc7a:	4603      	mov	r3, r0
    }
 801bc7c:	4618      	mov	r0, r3
 801bc7e:	370c      	adds	r7, #12
 801bc80:	46bd      	mov	sp, r7
 801bc82:	bd90      	pop	{r4, r7, pc}

0801bc84 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj6EEEE28__element_by_index_or_cookieILj6ESW_EEDcSO_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801bc84:	b580      	push	{r7, lr}
 801bc86:	b082      	sub	sp, #8
 801bc88:	af00      	add	r7, sp, #0
 801bc8a:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801bc8c:	6878      	ldr	r0, [r7, #4]
 801bc8e:	f000 fb37 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801bc92:	4603      	mov	r3, r0
 801bc94:	4618      	mov	r0, r3
 801bc96:	f7ff ffe4 	bl	801bc62 <_ZNSt8__detail9__variant5__getILj6ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801bc9a:	4603      	mov	r3, r0
	}
 801bc9c:	4618      	mov	r0, r3
 801bc9e:	3708      	adds	r7, #8
 801bca0:	46bd      	mov	sp, r7
 801bca2:	bd80      	pop	{r7, pc}

0801bca4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj6EEEE19__visit_invoke_implESU_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801bca4:	b5b0      	push	{r4, r5, r7, lr}
 801bca6:	b082      	sub	sp, #8
 801bca8:	af00      	add	r7, sp, #0
 801bcaa:	6078      	str	r0, [r7, #4]
 801bcac:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801bcae:	6878      	ldr	r0, [r7, #4]
 801bcb0:	f000 fb10 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801bcb4:	4604      	mov	r4, r0
 801bcb6:	6838      	ldr	r0, [r7, #0]
 801bcb8:	f000 fb17 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801bcbc:	4603      	mov	r3, r0
 801bcbe:	4618      	mov	r0, r3
 801bcc0:	f7ff ffe0 	bl	801bc84 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj6EEEE28__element_by_index_or_cookieILj6ESW_EEDcSO_>
 801bcc4:	4603      	mov	r3, r0
 801bcc6:	4619      	mov	r1, r3
 801bcc8:	4620      	mov	r0, r4
 801bcca:	f000 fc66 	bl	801c59a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSF_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>
		std::forward<_Variants>(__vars))...);
 801bcce:	462b      	mov	r3, r5
      }
 801bcd0:	4618      	mov	r0, r3
 801bcd2:	3708      	adds	r7, #8
 801bcd4:	46bd      	mov	sp, r7
 801bcd6:	bdb0      	pop	{r4, r5, r7, pc}

0801bcd8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj6EEEE17__do_visit_invokeESU_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801bcd8:	b5b0      	push	{r4, r5, r7, lr}
 801bcda:	b082      	sub	sp, #8
 801bcdc:	af00      	add	r7, sp, #0
 801bcde:	6078      	str	r0, [r7, #4]
 801bce0:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801bce2:	6878      	ldr	r0, [r7, #4]
 801bce4:	f000 faf6 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801bce8:	4604      	mov	r4, r0
 801bcea:	6838      	ldr	r0, [r7, #0]
 801bcec:	f000 fafd 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801bcf0:	4603      	mov	r3, r0
 801bcf2:	4619      	mov	r1, r3
 801bcf4:	4620      	mov	r0, r4
 801bcf6:	f7ff ffd5 	bl	801bca4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj6EEEE19__visit_invoke_implESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801bcfa:	462b      	mov	r3, r5
      }
 801bcfc:	4618      	mov	r0, r3
 801bcfe:	3708      	adds	r7, #8
 801bd00:	46bd      	mov	sp, r7
 801bd02:	bdb0      	pop	{r4, r5, r7, pc}

0801bd04 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj6EEEE14__visit_invokeESU_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801bd04:	b5b0      	push	{r4, r5, r7, lr}
 801bd06:	b082      	sub	sp, #8
 801bd08:	af00      	add	r7, sp, #0
 801bd0a:	6078      	str	r0, [r7, #4]
 801bd0c:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801bd0e:	6878      	ldr	r0, [r7, #4]
 801bd10:	f000 fae0 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801bd14:	4604      	mov	r4, r0
 801bd16:	6838      	ldr	r0, [r7, #0]
 801bd18:	f000 fae7 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801bd1c:	4603      	mov	r3, r0
 801bd1e:	4619      	mov	r1, r3
 801bd20:	4620      	mov	r0, r4
 801bd22:	f7ff ffd9 	bl	801bcd8 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj6EEEE17__do_visit_invokeESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801bd26:	462b      	mov	r3, r5
      }
 801bd28:	4618      	mov	r0, r3
 801bd2a:	3708      	adds	r7, #8
 801bd2c:	46bd      	mov	sp, r7
 801bd2e:	bdb0      	pop	{r4, r5, r7, pc}

0801bd30 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorIbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>:
    __get(in_place_index_t<0>, _Union&& __u) noexcept
 801bd30:	b580      	push	{r7, lr}
 801bd32:	b082      	sub	sp, #8
 801bd34:	af00      	add	r7, sp, #0
 801bd36:	7138      	strb	r0, [r7, #4]
 801bd38:	6039      	str	r1, [r7, #0]
    { return std::forward<_Union>(__u)._M_first._M_get(); }
 801bd3a:	6838      	ldr	r0, [r7, #0]
 801bd3c:	f000 fc44 	bl	801c5c8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorIbSaIbEEEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801bd40:	4603      	mov	r3, r0
 801bd42:	4618      	mov	r0, r3
 801bd44:	f000 fc4b 	bl	801c5de <_ZNOSt8__detail9__variant14_UninitializedISt6vectorIbSaIbEELb0EE6_M_getEv>
 801bd48:	4603      	mov	r3, r0
 801bd4a:	4618      	mov	r0, r3
 801bd4c:	3708      	adds	r7, #8
 801bd4e:	46bd      	mov	sp, r7
 801bd50:	bd80      	pop	{r7, pc}

0801bd52 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bd52:	b590      	push	{r4, r7, lr}
 801bd54:	b083      	sub	sp, #12
 801bd56:	af00      	add	r7, sp, #0
 801bd58:	7138      	strb	r0, [r7, #4]
 801bd5a:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bd5c:	6838      	ldr	r0, [r7, #0]
 801bd5e:	f000 fc00 	bl	801c562 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
 801bd62:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bd64:	4619      	mov	r1, r3
 801bd66:	4620      	mov	r0, r4
 801bd68:	f7ff ffe2 	bl	801bd30 <_ZNSt8__detail9__variant5__getINS0_15_Variadic_unionIJSt6vectorIbSaIbEEEEEEEDcSt16in_place_index_tILj0EEOT_>
 801bd6c:	4603      	mov	r3, r0
    }
 801bd6e:	4618      	mov	r0, r3
 801bd70:	370c      	adds	r7, #12
 801bd72:	46bd      	mov	sp, r7
 801bd74:	bd90      	pop	{r4, r7, pc}

0801bd76 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bd76:	b590      	push	{r4, r7, lr}
 801bd78:	b083      	sub	sp, #12
 801bd7a:	af00      	add	r7, sp, #0
 801bd7c:	7138      	strb	r0, [r7, #4]
 801bd7e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bd80:	6838      	ldr	r0, [r7, #0]
 801bd82:	f000 fbbb 	bl	801c4fc <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISB_E4typeE>
 801bd86:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bd88:	4619      	mov	r1, r3
 801bd8a:	4620      	mov	r0, r4
 801bd8c:	f7ff ffe1 	bl	801bd52 <_ZNSt8__detail9__variant5__getILj1ENS0_15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bd90:	4603      	mov	r3, r0
    }
 801bd92:	4618      	mov	r0, r3
 801bd94:	370c      	adds	r7, #12
 801bd96:	46bd      	mov	sp, r7
 801bd98:	bd90      	pop	{r4, r7, pc}

0801bd9a <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bd9a:	b590      	push	{r4, r7, lr}
 801bd9c:	b083      	sub	sp, #12
 801bd9e:	af00      	add	r7, sp, #0
 801bda0:	7138      	strb	r0, [r7, #4]
 801bda2:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bda4:	6838      	ldr	r0, [r7, #0]
 801bda6:	f000 fb76 	bl	801c496 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801bdaa:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bdac:	4619      	mov	r1, r3
 801bdae:	4620      	mov	r0, r4
 801bdb0:	f7ff ffe1 	bl	801bd76 <_ZNSt8__detail9__variant5__getILj2ENS0_15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bdb4:	4603      	mov	r3, r0
    }
 801bdb6:	4618      	mov	r0, r3
 801bdb8:	370c      	adds	r7, #12
 801bdba:	46bd      	mov	sp, r7
 801bdbc:	bd90      	pop	{r4, r7, pc}

0801bdbe <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bdbe:	b590      	push	{r4, r7, lr}
 801bdc0:	b083      	sub	sp, #12
 801bdc2:	af00      	add	r7, sp, #0
 801bdc4:	7138      	strb	r0, [r7, #4]
 801bdc6:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bdc8:	6838      	ldr	r0, [r7, #0]
 801bdca:	f000 fb31 	bl	801c430 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801bdce:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bdd0:	4619      	mov	r1, r3
 801bdd2:	4620      	mov	r0, r4
 801bdd4:	f7ff ffe1 	bl	801bd9a <_ZNSt8__detail9__variant5__getILj3ENS0_15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bdd8:	4603      	mov	r3, r0
    }
 801bdda:	4618      	mov	r0, r3
 801bddc:	370c      	adds	r7, #12
 801bdde:	46bd      	mov	sp, r7
 801bde0:	bd90      	pop	{r4, r7, pc}

0801bde2 <_ZNSt8__detail9__variant5__getILj5ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801bde2:	b590      	push	{r4, r7, lr}
 801bde4:	b083      	sub	sp, #12
 801bde6:	af00      	add	r7, sp, #0
 801bde8:	7138      	strb	r0, [r7, #4]
 801bdea:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801bdec:	6838      	ldr	r0, [r7, #0]
 801bdee:	f000 faf0 	bl	801c3d2 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801bdf2:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801bdf4:	4619      	mov	r1, r3
 801bdf6:	4620      	mov	r0, r4
 801bdf8:	f7ff ffe1 	bl	801bdbe <_ZNSt8__detail9__variant5__getILj4ENS0_15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801bdfc:	4603      	mov	r3, r0
    }
 801bdfe:	4618      	mov	r0, r3
 801be00:	370c      	adds	r7, #12
 801be02:	46bd      	mov	sp, r7
 801be04:	bd90      	pop	{r4, r7, pc}

0801be06 <_ZNSt8__detail9__variant5__getILj6ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801be06:	b590      	push	{r4, r7, lr}
 801be08:	b083      	sub	sp, #12
 801be0a:	af00      	add	r7, sp, #0
 801be0c:	7138      	strb	r0, [r7, #4]
 801be0e:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801be10:	6838      	ldr	r0, [r7, #0]
 801be12:	f000 faaf 	bl	801c374 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801be16:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801be18:	4619      	mov	r1, r3
 801be1a:	4620      	mov	r0, r4
 801be1c:	f7ff ffe1 	bl	801bde2 <_ZNSt8__detail9__variant5__getILj5ENS0_15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801be20:	4603      	mov	r3, r0
    }
 801be22:	4618      	mov	r0, r3
 801be24:	370c      	adds	r7, #12
 801be26:	46bd      	mov	sp, r7
 801be28:	bd90      	pop	{r4, r7, pc}

0801be2a <_ZNSt8__detail9__variant5__getILj7ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>:
    __get(in_place_index_t<_Np>, _Union&& __u) noexcept
 801be2a:	b590      	push	{r4, r7, lr}
 801be2c:	b083      	sub	sp, #12
 801be2e:	af00      	add	r7, sp, #0
 801be30:	7138      	strb	r0, [r7, #4]
 801be32:	6039      	str	r1, [r7, #0]
			      std::forward<_Union>(__u)._M_rest);
 801be34:	6838      	ldr	r0, [r7, #0]
 801be36:	f000 fa6e 	bl	801c316 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801be3a:	4603      	mov	r3, r0
      return __variant::__get(in_place_index<_Np-1>,
 801be3c:	4619      	mov	r1, r3
 801be3e:	4620      	mov	r0, r4
 801be40:	f7ff ffe1 	bl	801be06 <_ZNSt8__detail9__variant5__getILj6ENS0_15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801be44:	4603      	mov	r3, r0
    }
 801be46:	4618      	mov	r0, r3
 801be48:	370c      	adds	r7, #12
 801be4a:	46bd      	mov	sp, r7
 801be4c:	bd90      	pop	{r4, r7, pc}

0801be4e <_ZNSt8__detail9__variant5__getILj7ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>:
    __get(_Variant&& __v) noexcept
 801be4e:	b590      	push	{r4, r7, lr}
 801be50:	b083      	sub	sp, #12
 801be52:	af00      	add	r7, sp, #0
 801be54:	6078      	str	r0, [r7, #4]
			      std::forward<_Variant>(__v)._M_u);
 801be56:	6878      	ldr	r0, [r7, #4]
 801be58:	f000 fa52 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801be5c:	4603      	mov	r3, r0
      return __variant::__get(std::in_place_index<_Np>,
 801be5e:	4619      	mov	r1, r3
 801be60:	4620      	mov	r0, r4
 801be62:	f7ff ffe2 	bl	801be2a <_ZNSt8__detail9__variant5__getILj7ENS0_15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEEDcSt16in_place_index_tIXT_EEOT0_>
 801be66:	4603      	mov	r3, r0
    }
 801be68:	4618      	mov	r0, r3
 801be6a:	370c      	adds	r7, #12
 801be6c:	46bd      	mov	sp, r7
 801be6e:	bd90      	pop	{r4, r7, pc}

0801be70 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj7EEEE28__element_by_index_or_cookieILj7ESW_EEDcSO_>:
	__element_by_index_or_cookie(_Variant&& __var) noexcept
 801be70:	b580      	push	{r7, lr}
 801be72:	b082      	sub	sp, #8
 801be74:	af00      	add	r7, sp, #0
 801be76:	6078      	str	r0, [r7, #4]
	    return __variant::__get<__index>(std::forward<_Variant>(__var));
 801be78:	6878      	ldr	r0, [r7, #4]
 801be7a:	f000 fa41 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801be7e:	4603      	mov	r3, r0
 801be80:	4618      	mov	r0, r3
 801be82:	f7ff ffe4 	bl	801be4e <_ZNSt8__detail9__variant5__getILj7ESt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEDcOT0_>
 801be86:	4603      	mov	r3, r0
	}
 801be88:	4618      	mov	r0, r3
 801be8a:	3708      	adds	r7, #8
 801be8c:	46bd      	mov	sp, r7
 801be8e:	bd80      	pop	{r7, pc}

0801be90 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj7EEEE19__visit_invoke_implESU_SX_>:
      __visit_invoke_impl(_Visitor&& __visitor, _Variants... __vars)
 801be90:	b5b0      	push	{r4, r5, r7, lr}
 801be92:	b082      	sub	sp, #8
 801be94:	af00      	add	r7, sp, #0
 801be96:	6078      	str	r0, [r7, #4]
 801be98:	6039      	str	r1, [r7, #0]
	  return std::__invoke(std::forward<_Visitor>(__visitor),
 801be9a:	6878      	ldr	r0, [r7, #4]
 801be9c:	f000 fa1a 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801bea0:	4604      	mov	r4, r0
 801bea2:	6838      	ldr	r0, [r7, #0]
 801bea4:	f000 fa21 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801bea8:	4603      	mov	r3, r0
 801beaa:	4618      	mov	r0, r3
 801beac:	f7ff ffe0 	bl	801be70 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj7EEEE28__element_by_index_or_cookieILj7ESW_EEDcSO_>
 801beb0:	4603      	mov	r3, r0
 801beb2:	4619      	mov	r1, r3
 801beb4:	4620      	mov	r0, r4
 801beb6:	f000 fba3 	bl	801c600 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSH_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>
		std::forward<_Variants>(__vars))...);
 801beba:	462b      	mov	r3, r5
      }
 801bebc:	4618      	mov	r0, r3
 801bebe:	3708      	adds	r7, #8
 801bec0:	46bd      	mov	sp, r7
 801bec2:	bdb0      	pop	{r4, r5, r7, pc}

0801bec4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj7EEEE17__do_visit_invokeESU_SX_>:
      __do_visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801bec4:	b5b0      	push	{r4, r5, r7, lr}
 801bec6:	b082      	sub	sp, #8
 801bec8:	af00      	add	r7, sp, #0
 801beca:	6078      	str	r0, [r7, #4]
 801becc:	6039      	str	r1, [r7, #0]
	return __visit_invoke_impl(std::forward<_Visitor>(__visitor),
 801bece:	6878      	ldr	r0, [r7, #4]
 801bed0:	f000 fa00 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801bed4:	4604      	mov	r4, r0
 801bed6:	6838      	ldr	r0, [r7, #0]
 801bed8:	f000 fa07 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801bedc:	4603      	mov	r3, r0
 801bede:	4619      	mov	r1, r3
 801bee0:	4620      	mov	r0, r4
 801bee2:	f7ff ffd5 	bl	801be90 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj7EEEE19__visit_invoke_implESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801bee6:	462b      	mov	r3, r5
      }
 801bee8:	4618      	mov	r0, r3
 801beea:	3708      	adds	r7, #8
 801beec:	46bd      	mov	sp, r7
 801beee:	bdb0      	pop	{r4, r5, r7, pc}

0801bef0 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj7EEEE14__visit_invokeESU_SX_>:
      __visit_invoke(_Visitor&& __visitor, _Variants... __vars)
 801bef0:	b5b0      	push	{r4, r5, r7, lr}
 801bef2:	b082      	sub	sp, #8
 801bef4:	af00      	add	r7, sp, #0
 801bef6:	6078      	str	r0, [r7, #4]
 801bef8:	6039      	str	r1, [r7, #0]
	  return __do_visit_invoke(std::forward<_Visitor>(__visitor),
 801befa:	6878      	ldr	r0, [r7, #4]
 801befc:	f000 f9ea 	bl	801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801bf00:	4604      	mov	r4, r0
 801bf02:	6838      	ldr	r0, [r7, #0]
 801bf04:	f000 f9f1 	bl	801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>
 801bf08:	4603      	mov	r3, r0
 801bf0a:	4619      	mov	r1, r3
 801bf0c:	4620      	mov	r0, r4
 801bf0e:	f7ff ffd9 	bl	801bec4 <_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISA_SaISA_EESB_IiSaIiEESB_IfSaIfEESB_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbSA_SD_SF_SH_SJ_EEESL_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbSA_SD_SF_SH_SJ_EEEJEEESt5tupleIJSX_EESt16integer_sequenceIjJLj7EEEE17__do_visit_invokeESU_SX_>
				   std::forward<_Variants>(__vars)...);
 801bf12:	462b      	mov	r3, r5
      }
 801bf14:	4618      	mov	r0, r3
 801bf16:	3708      	adds	r7, #8
 801bf18:	46bd      	mov	sp, r7
 801bf1a:	bdb0      	pop	{r4, r5, r7, pc}

0801bf1c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SC_SE_SG_SI_EEEJLj8EEE9_M_accessIJEEERKSY_jDpT_>:
	_M_access(size_t __first_index, _Args... __rest_indices) const
 801bf1c:	b580      	push	{r7, lr}
 801bf1e:	b082      	sub	sp, #8
 801bf20:	af00      	add	r7, sp, #0
 801bf22:	6078      	str	r0, [r7, #4]
 801bf24:	6039      	str	r1, [r7, #0]
	    ._M_access(__rest_indices...);
 801bf26:	683b      	ldr	r3, [r7, #0]
 801bf28:	009b      	lsls	r3, r3, #2
 801bf2a:	687a      	ldr	r2, [r7, #4]
 801bf2c:	4413      	add	r3, r2
 801bf2e:	4618      	mov	r0, r3
 801bf30:	f000 fb7d 	bl	801c62e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SC_SE_SG_SI_EEEJEE9_M_accessEv>
 801bf34:	4603      	mov	r3, r0
	}
 801bf36:	4618      	mov	r0, r3
 801bf38:	3708      	adds	r7, #8
 801bf3a:	46bd      	mov	sp, r7
 801bf3c:	bd80      	pop	{r7, pc}
	...

0801bf40 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SB_SD_SF_SH_EEEEDcSO_DpOT2_>:
    __do_visit(_Visitor&& __visitor, _Variants&&... __variants)
 801bf40:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bf42:	b085      	sub	sp, #20
 801bf44:	af00      	add	r7, sp, #0
 801bf46:	6078      	str	r0, [r7, #4]
 801bf48:	6039      	str	r1, [r7, #0]
      constexpr auto& __vtable = __detail::__variant::__gen_vtable<
 801bf4a:	4b0f      	ldr	r3, [pc, #60]	; (801bf88 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SB_SD_SF_SH_EEEEDcSO_DpOT2_+0x48>)
 801bf4c:	60fb      	str	r3, [r7, #12]
      auto __func_ptr = __vtable._M_access(__variants.index()...);
 801bf4e:	6838      	ldr	r0, [r7, #0]
 801bf50:	f7f5 fc00 	bl	8011754 <_ZNKSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEEE5indexEv>
 801bf54:	4603      	mov	r3, r0
 801bf56:	4619      	mov	r1, r3
 801bf58:	68f8      	ldr	r0, [r7, #12]
 801bf5a:	f7ff ffdf 	bl	801bf1c <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SC_SE_SG_SI_EEEJLj8EEE9_M_accessIJEEERKSY_jDpT_>
 801bf5e:	4603      	mov	r3, r0
 801bf60:	681b      	ldr	r3, [r3, #0]
 801bf62:	60bb      	str	r3, [r7, #8]
      return (*__func_ptr)(std::forward<_Visitor>(__visitor),
 801bf64:	68bc      	ldr	r4, [r7, #8]
 801bf66:	6878      	ldr	r0, [r7, #4]
 801bf68:	f000 fb6c 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801bf6c:	4605      	mov	r5, r0
 801bf6e:	6838      	ldr	r0, [r7, #0]
 801bf70:	f000 f9c6 	bl	801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>
 801bf74:	4603      	mov	r3, r0
 801bf76:	4619      	mov	r1, r3
 801bf78:	4628      	mov	r0, r5
 801bf7a:	47a0      	blx	r4
			   std::forward<_Variants>(__variants)...);
 801bf7c:	4633      	mov	r3, r6
    }
 801bf7e:	4618      	mov	r0, r3
 801bf80:	3714      	adds	r7, #20
 801bf82:	46bd      	mov	sp, r7
 801bf84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801bf86:	bf00      	nop
 801bf88:	0802529c 	.word	0x0802529c

0801bf8c <_ZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_>:
    void __variant_construct(_Tp&& __lhs, _Up&& __rhs)
 801bf8c:	b580      	push	{r7, lr}
 801bf8e:	b084      	sub	sp, #16
 801bf90:	af00      	add	r7, sp, #0
 801bf92:	6078      	str	r0, [r7, #4]
 801bf94:	6039      	str	r1, [r7, #0]
      __lhs._M_index = __rhs._M_index;
 801bf96:	683b      	ldr	r3, [r7, #0]
 801bf98:	7e1a      	ldrb	r2, [r3, #24]
 801bf9a:	687b      	ldr	r3, [r7, #4]
 801bf9c:	761a      	strb	r2, [r3, #24]
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801bf9e:	687b      	ldr	r3, [r7, #4]
 801bfa0:	60fb      	str	r3, [r7, #12]
 801bfa2:	6838      	ldr	r0, [r7, #0]
 801bfa4:	f000 f98b 	bl	801c2be <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>
 801bfa8:	4603      	mov	r3, r0
 801bfaa:	4618      	mov	r0, r3
 801bfac:	f7ff f9f3 	bl	801b396 <_ZSt14__variant_castIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS5_SaIS5_EES6_IiSaIiEES6_IfSaIfEES6_IbSaIbEEENSt8__detail9__variant15_Move_ctor_baseILb0EJifbS5_S8_SA_SC_SE_EEEEDcOT0_>
 801bfb0:	4602      	mov	r2, r0
 801bfb2:	f107 030c 	add.w	r3, r7, #12
 801bfb6:	4611      	mov	r1, r2
 801bfb8:	4618      	mov	r0, r3
 801bfba:	f7ff ffc1 	bl	801bf40 <_ZSt10__do_visitILb0ELb1EZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSt7variantIJifbS8_SB_SD_SF_SH_EEEEDcSO_DpOT2_>
    }
 801bfbe:	bf00      	nop
 801bfc0:	3710      	adds	r7, #16
 801bfc2:	46bd      	mov	sp, r7
 801bfc4:	bd80      	pop	{r7, pc}

0801bfc6 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 801bfc6:	b590      	push	{r4, r7, lr}
 801bfc8:	b087      	sub	sp, #28
 801bfca:	af00      	add	r7, sp, #0
 801bfcc:	60f8      	str	r0, [r7, #12]
 801bfce:	60b9      	str	r1, [r7, #8]
 801bfd0:	607a      	str	r2, [r7, #4]
	  _ForwardIterator __cur = __result;
 801bfd2:	687b      	ldr	r3, [r7, #4]
 801bfd4:	617b      	str	r3, [r7, #20]
	      for (; __first != __last; ++__first, (void)++__cur)
 801bfd6:	f107 0208 	add.w	r2, r7, #8
 801bfda:	f107 030c 	add.w	r3, r7, #12
 801bfde:	4611      	mov	r1, r2
 801bfe0:	4618      	mov	r0, r3
 801bfe2:	f000 fb3a 	bl	801c65a <_ZN9__gnu_cxxneIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESH_>
 801bfe6:	4603      	mov	r3, r0
 801bfe8:	2b00      	cmp	r3, #0
 801bfea:	d016      	beq.n	801c01a <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_+0x54>
		std::_Construct(std::__addressof(*__cur), *__first);
 801bfec:	6978      	ldr	r0, [r7, #20]
 801bfee:	f7ea f9b2 	bl	8006356 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
 801bff2:	4604      	mov	r4, r0
 801bff4:	f107 030c 	add.w	r3, r7, #12
 801bff8:	4618      	mov	r0, r3
 801bffa:	f000 fb57 	bl	801c6ac <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>
 801bffe:	4603      	mov	r3, r0
 801c000:	4619      	mov	r1, r3
 801c002:	4620      	mov	r0, r4
 801c004:	f7fe f8be 	bl	801a184 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJRKS5_EEvPT_DpOT0_>
	      for (; __first != __last; ++__first, (void)++__cur)
 801c008:	f107 030c 	add.w	r3, r7, #12
 801c00c:	4618      	mov	r0, r3
 801c00e:	f000 fb3c 	bl	801c68a <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>
 801c012:	697b      	ldr	r3, [r7, #20]
 801c014:	3318      	adds	r3, #24
 801c016:	617b      	str	r3, [r7, #20]
 801c018:	e7dd      	b.n	801bfd6 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEPS9_EET0_T_SI_SH_+0x10>
	      return __cur;
 801c01a:	697b      	ldr	r3, [r7, #20]
	}
 801c01c:	4618      	mov	r0, r3
 801c01e:	371c      	adds	r7, #28
 801c020:	46bd      	mov	sp, r7
 801c022:	bd90      	pop	{r4, r7, pc}

0801c024 <_ZNSaIiEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 801c024:	b580      	push	{r7, lr}
 801c026:	b082      	sub	sp, #8
 801c028:	af00      	add	r7, sp, #0
 801c02a:	6078      	str	r0, [r7, #4]
 801c02c:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 801c02e:	6839      	ldr	r1, [r7, #0]
 801c030:	6878      	ldr	r0, [r7, #4]
 801c032:	f000 fb47 	bl	801c6c4 <_ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_>
 801c036:	687b      	ldr	r3, [r7, #4]
 801c038:	4618      	mov	r0, r3
 801c03a:	3708      	adds	r7, #8
 801c03c:	46bd      	mov	sp, r7
 801c03e:	bd80      	pop	{r7, pc}

0801c040 <_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801c040:	b480      	push	{r7}
 801c042:	b083      	sub	sp, #12
 801c044:	af00      	add	r7, sp, #0
 801c046:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801c048:	687b      	ldr	r3, [r7, #4]
 801c04a:	2200      	movs	r2, #0
 801c04c:	601a      	str	r2, [r3, #0]
 801c04e:	687b      	ldr	r3, [r7, #4]
 801c050:	2200      	movs	r2, #0
 801c052:	605a      	str	r2, [r3, #4]
 801c054:	687b      	ldr	r3, [r7, #4]
 801c056:	2200      	movs	r2, #0
 801c058:	609a      	str	r2, [r3, #8]
	{ }
 801c05a:	687b      	ldr	r3, [r7, #4]
 801c05c:	4618      	mov	r0, r3
 801c05e:	370c      	adds	r7, #12
 801c060:	46bd      	mov	sp, r7
 801c062:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c066:	4770      	bx	lr

0801c068 <_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c068:	b580      	push	{r7, lr}
 801c06a:	b082      	sub	sp, #8
 801c06c:	af00      	add	r7, sp, #0
 801c06e:	6078      	str	r0, [r7, #4]
 801c070:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c072:	683b      	ldr	r3, [r7, #0]
 801c074:	2b00      	cmp	r3, #0
 801c076:	d006      	beq.n	801c086 <_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEj+0x1e>
 801c078:	687b      	ldr	r3, [r7, #4]
 801c07a:	6839      	ldr	r1, [r7, #0]
 801c07c:	4618      	mov	r0, r3
 801c07e:	f000 fb2d 	bl	801c6dc <_ZNSt16allocator_traitsISaIiEE8allocateERS0_j>
 801c082:	4603      	mov	r3, r0
 801c084:	e000      	b.n	801c088 <_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEj+0x20>
 801c086:	2300      	movs	r3, #0
      }
 801c088:	4618      	mov	r0, r3
 801c08a:	3708      	adds	r7, #8
 801c08c:	46bd      	mov	sp, r7
 801c08e:	bd80      	pop	{r7, pc}

0801c090 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 801c090:	b580      	push	{r7, lr}
 801c092:	b084      	sub	sp, #16
 801c094:	af00      	add	r7, sp, #0
 801c096:	60f8      	str	r0, [r7, #12]
 801c098:	60b9      	str	r1, [r7, #8]
 801c09a:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 801c09c:	687a      	ldr	r2, [r7, #4]
 801c09e:	68b9      	ldr	r1, [r7, #8]
 801c0a0:	68f8      	ldr	r0, [r7, #12]
 801c0a2:	f000 fb2a 	bl	801c6fa <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_>
 801c0a6:	4603      	mov	r3, r0
 801c0a8:	4618      	mov	r0, r3
 801c0aa:	3710      	adds	r7, #16
 801c0ac:	46bd      	mov	sp, r7
 801c0ae:	bd80      	pop	{r7, pc}

0801c0b0 <_ZNSaIfEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 801c0b0:	b580      	push	{r7, lr}
 801c0b2:	b082      	sub	sp, #8
 801c0b4:	af00      	add	r7, sp, #0
 801c0b6:	6078      	str	r0, [r7, #4]
 801c0b8:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 801c0ba:	6839      	ldr	r1, [r7, #0]
 801c0bc:	6878      	ldr	r0, [r7, #4]
 801c0be:	f000 fb34 	bl	801c72a <_ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_>
 801c0c2:	687b      	ldr	r3, [r7, #4]
 801c0c4:	4618      	mov	r0, r3
 801c0c6:	3708      	adds	r7, #8
 801c0c8:	46bd      	mov	sp, r7
 801c0ca:	bd80      	pop	{r7, pc}

0801c0cc <_ZNSt12_Vector_baseIfSaIfEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 801c0cc:	b480      	push	{r7}
 801c0ce:	b083      	sub	sp, #12
 801c0d0:	af00      	add	r7, sp, #0
 801c0d2:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801c0d4:	687b      	ldr	r3, [r7, #4]
 801c0d6:	2200      	movs	r2, #0
 801c0d8:	601a      	str	r2, [r3, #0]
 801c0da:	687b      	ldr	r3, [r7, #4]
 801c0dc:	2200      	movs	r2, #0
 801c0de:	605a      	str	r2, [r3, #4]
 801c0e0:	687b      	ldr	r3, [r7, #4]
 801c0e2:	2200      	movs	r2, #0
 801c0e4:	609a      	str	r2, [r3, #8]
	{ }
 801c0e6:	687b      	ldr	r3, [r7, #4]
 801c0e8:	4618      	mov	r0, r3
 801c0ea:	370c      	adds	r7, #12
 801c0ec:	46bd      	mov	sp, r7
 801c0ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c0f2:	4770      	bx	lr

0801c0f4 <_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEj>:
      _M_allocate(size_t __n)
 801c0f4:	b580      	push	{r7, lr}
 801c0f6:	b082      	sub	sp, #8
 801c0f8:	af00      	add	r7, sp, #0
 801c0fa:	6078      	str	r0, [r7, #4]
 801c0fc:	6039      	str	r1, [r7, #0]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 801c0fe:	683b      	ldr	r3, [r7, #0]
 801c100:	2b00      	cmp	r3, #0
 801c102:	d006      	beq.n	801c112 <_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEj+0x1e>
 801c104:	687b      	ldr	r3, [r7, #4]
 801c106:	6839      	ldr	r1, [r7, #0]
 801c108:	4618      	mov	r0, r3
 801c10a:	f000 fb1a 	bl	801c742 <_ZNSt16allocator_traitsISaIfEE8allocateERS0_j>
 801c10e:	4603      	mov	r3, r0
 801c110:	e000      	b.n	801c114 <_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEj+0x20>
 801c112:	2300      	movs	r3, #0
      }
 801c114:	4618      	mov	r0, r3
 801c116:	3708      	adds	r7, #8
 801c118:	46bd      	mov	sp, r7
 801c11a:	bd80      	pop	{r7, pc}

0801c11c <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPfEET0_T_SC_SB_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
 801c11c:	b580      	push	{r7, lr}
 801c11e:	b084      	sub	sp, #16
 801c120:	af00      	add	r7, sp, #0
 801c122:	60f8      	str	r0, [r7, #12]
 801c124:	60b9      	str	r1, [r7, #8]
 801c126:	607a      	str	r2, [r7, #4]
        { return std::copy(__first, __last, __result); }
 801c128:	687a      	ldr	r2, [r7, #4]
 801c12a:	68b9      	ldr	r1, [r7, #8]
 801c12c:	68f8      	ldr	r0, [r7, #12]
 801c12e:	f000 fb17 	bl	801c760 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPfET0_T_SA_S9_>
 801c132:	4603      	mov	r3, r0
 801c134:	4618      	mov	r0, r3
 801c136:	3710      	adds	r7, #16
 801c138:	46bd      	mov	sp, r7
 801c13a:	bd80      	pop	{r7, pc}

0801c13c <_ZNSaImEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
 801c13c:	b580      	push	{r7, lr}
 801c13e:	b082      	sub	sp, #8
 801c140:	af00      	add	r7, sp, #0
 801c142:	6078      	str	r0, [r7, #4]
 801c144:	6039      	str	r1, [r7, #0]
      : __allocator_base<_Tp>(__a) { }
 801c146:	6839      	ldr	r1, [r7, #0]
 801c148:	6878      	ldr	r0, [r7, #4]
 801c14a:	f000 fb21 	bl	801c790 <_ZN9__gnu_cxx13new_allocatorImEC1ERKS1_>
 801c14e:	687b      	ldr	r3, [r7, #4]
 801c150:	4618      	mov	r0, r3
 801c152:	3708      	adds	r7, #8
 801c154:	46bd      	mov	sp, r7
 801c156:	bd80      	pop	{r7, pc}

0801c158 <_ZN9__gnu_cxx13new_allocatorImEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 801c158:	b480      	push	{r7}
 801c15a:	b083      	sub	sp, #12
 801c15c:	af00      	add	r7, sp, #0
 801c15e:	6078      	str	r0, [r7, #4]
 801c160:	687b      	ldr	r3, [r7, #4]
 801c162:	4618      	mov	r0, r3
 801c164:	370c      	adds	r7, #12
 801c166:	46bd      	mov	sp, r7
 801c168:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c16c:	4770      	bx	lr

0801c16e <_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1Ev>:
	_Bvector_impl_data() _GLIBCXX_NOEXCEPT
 801c16e:	b580      	push	{r7, lr}
 801c170:	b082      	sub	sp, #8
 801c172:	af00      	add	r7, sp, #0
 801c174:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 801c176:	687b      	ldr	r3, [r7, #4]
 801c178:	4618      	mov	r0, r3
 801c17a:	f7f3 fd0d 	bl	800fb98 <_ZNSt13_Bit_iteratorC1Ev>
 801c17e:	687b      	ldr	r3, [r7, #4]
 801c180:	3308      	adds	r3, #8
 801c182:	4618      	mov	r0, r3
 801c184:	f7f3 fd08 	bl	800fb98 <_ZNSt13_Bit_iteratorC1Ev>
 801c188:	687b      	ldr	r3, [r7, #4]
 801c18a:	2200      	movs	r2, #0
 801c18c:	611a      	str	r2, [r3, #16]
	{ }
 801c18e:	687b      	ldr	r3, [r7, #4]
 801c190:	4618      	mov	r0, r3
 801c192:	3708      	adds	r7, #8
 801c194:	46bd      	mov	sp, r7
 801c196:	bd80      	pop	{r7, pc}

0801c198 <_ZNSt16allocator_traitsISaImEE8allocateERS0_j>:
      allocate(allocator_type& __a, size_type __n)
 801c198:	b580      	push	{r7, lr}
 801c19a:	b082      	sub	sp, #8
 801c19c:	af00      	add	r7, sp, #0
 801c19e:	6078      	str	r0, [r7, #4]
 801c1a0:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801c1a2:	2200      	movs	r2, #0
 801c1a4:	6839      	ldr	r1, [r7, #0]
 801c1a6:	6878      	ldr	r0, [r7, #4]
 801c1a8:	f000 fafe 	bl	801c7a8 <_ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv>
 801c1ac:	4603      	mov	r3, r0
 801c1ae:	4618      	mov	r0, r3
 801c1b0:	3708      	adds	r7, #8
 801c1b2:	46bd      	mov	sp, r7
 801c1b4:	bd80      	pop	{r7, pc}

0801c1b6 <_ZSt12__miter_baseIPmET_S1_>:
    __miter_base(_Iterator __it)
 801c1b6:	b480      	push	{r7}
 801c1b8:	b083      	sub	sp, #12
 801c1ba:	af00      	add	r7, sp, #0
 801c1bc:	6078      	str	r0, [r7, #4]
    { return __it; }
 801c1be:	687b      	ldr	r3, [r7, #4]
 801c1c0:	4618      	mov	r0, r3
 801c1c2:	370c      	adds	r7, #12
 801c1c4:	46bd      	mov	sp, r7
 801c1c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c1ca:	4770      	bx	lr

0801c1cc <_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 801c1cc:	b5b0      	push	{r4, r5, r7, lr}
 801c1ce:	b084      	sub	sp, #16
 801c1d0:	af00      	add	r7, sp, #0
 801c1d2:	60f8      	str	r0, [r7, #12]
 801c1d4:	60b9      	str	r1, [r7, #8]
 801c1d6:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 801c1d8:	68f8      	ldr	r0, [r7, #12]
 801c1da:	f000 fb04 	bl	801c7e6 <_ZSt12__niter_baseIPmET_S1_>
 801c1de:	4604      	mov	r4, r0
 801c1e0:	68b8      	ldr	r0, [r7, #8]
 801c1e2:	f000 fb00 	bl	801c7e6 <_ZSt12__niter_baseIPmET_S1_>
 801c1e6:	4605      	mov	r5, r0
 801c1e8:	687b      	ldr	r3, [r7, #4]
 801c1ea:	4618      	mov	r0, r3
 801c1ec:	f000 fafb 	bl	801c7e6 <_ZSt12__niter_baseIPmET_S1_>
 801c1f0:	4603      	mov	r3, r0
 801c1f2:	461a      	mov	r2, r3
 801c1f4:	4629      	mov	r1, r5
 801c1f6:	4620      	mov	r0, r4
 801c1f8:	f000 fb00 	bl	801c7fc <_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_>
 801c1fc:	4602      	mov	r2, r0
 801c1fe:	1d3b      	adds	r3, r7, #4
 801c200:	4611      	mov	r1, r2
 801c202:	4618      	mov	r0, r3
 801c204:	f000 fb0c 	bl	801c820 <_ZSt12__niter_wrapIPmET_RKS1_S1_>
 801c208:	4603      	mov	r3, r0
    }
 801c20a:	4618      	mov	r0, r3
 801c20c:	3710      	adds	r7, #16
 801c20e:	46bd      	mov	sp, r7
 801c210:	bdb0      	pop	{r4, r5, r7, pc}

0801c212 <_ZSt12__miter_baseISt19_Bit_const_iteratorET_S1_>:
    __miter_base(_Iterator __it)
 801c212:	b480      	push	{r7}
 801c214:	b085      	sub	sp, #20
 801c216:	af00      	add	r7, sp, #0
 801c218:	60f8      	str	r0, [r7, #12]
 801c21a:	1d3b      	adds	r3, r7, #4
 801c21c:	e883 0006 	stmia.w	r3, {r1, r2}
    { return __it; }
 801c220:	68fb      	ldr	r3, [r7, #12]
 801c222:	461a      	mov	r2, r3
 801c224:	1d3b      	adds	r3, r7, #4
 801c226:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c22a:	e882 0003 	stmia.w	r2, {r0, r1}
 801c22e:	68f8      	ldr	r0, [r7, #12]
 801c230:	3714      	adds	r7, #20
 801c232:	46bd      	mov	sp, r7
 801c234:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c238:	4770      	bx	lr

0801c23a <_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 801c23a:	b082      	sub	sp, #8
 801c23c:	b590      	push	{r4, r7, lr}
 801c23e:	b091      	sub	sp, #68	; 0x44
 801c240:	af04      	add	r7, sp, #16
 801c242:	60f8      	str	r0, [r7, #12]
 801c244:	1d38      	adds	r0, r7, #4
 801c246:	e880 0006 	stmia.w	r0, {r1, r2}
 801c24a:	647b      	str	r3, [r7, #68]	; 0x44
      return std::__niter_wrap(__result,
 801c24c:	f107 0010 	add.w	r0, r7, #16
 801c250:	1d3b      	adds	r3, r7, #4
 801c252:	e893 0006 	ldmia.w	r3, {r1, r2}
 801c256:	f000 faef 	bl	801c838 <_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_>
 801c25a:	f107 0018 	add.w	r0, r7, #24
 801c25e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 801c262:	e893 0006 	ldmia.w	r3, {r1, r2}
 801c266:	f000 fae7 	bl	801c838 <_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_>
 801c26a:	f107 0020 	add.w	r0, r7, #32
 801c26e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 801c272:	e893 0006 	ldmia.w	r3, {r1, r2}
 801c276:	f000 faf3 	bl	801c860 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>
 801c27a:	f107 0428 	add.w	r4, r7, #40	; 0x28
 801c27e:	aa01      	add	r2, sp, #4
 801c280:	f107 0320 	add.w	r3, r7, #32
 801c284:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c288:	e882 0003 	stmia.w	r2, {r0, r1}
 801c28c:	69fb      	ldr	r3, [r7, #28]
 801c28e:	9300      	str	r3, [sp, #0]
 801c290:	69bb      	ldr	r3, [r7, #24]
 801c292:	f107 0210 	add.w	r2, r7, #16
 801c296:	ca06      	ldmia	r2, {r1, r2}
 801c298:	4620      	mov	r0, r4
 801c29a:	f000 faf5 	bl	801c888 <_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_>
 801c29e:	68f8      	ldr	r0, [r7, #12]
 801c2a0:	f107 014c 	add.w	r1, r7, #76	; 0x4c
 801c2a4:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801c2a8:	cb0c      	ldmia	r3, {r2, r3}
 801c2aa:	f000 fb10 	bl	801c8ce <_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_>
					    std::__niter_base(__result)));
 801c2ae:	bf00      	nop
    }
 801c2b0:	68f8      	ldr	r0, [r7, #12]
 801c2b2:	3734      	adds	r7, #52	; 0x34
 801c2b4:	46bd      	mov	sp, r7
 801c2b6:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 801c2ba:	b002      	add	sp, #8
 801c2bc:	4770      	bx	lr

0801c2be <_ZSt7forwardINSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c2be:	b480      	push	{r7}
 801c2c0:	b083      	sub	sp, #12
 801c2c2:	af00      	add	r7, sp, #0
 801c2c4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c2c6:	687b      	ldr	r3, [r7, #4]
 801c2c8:	4618      	mov	r0, r3
 801c2ca:	370c      	adds	r7, #12
 801c2cc:	46bd      	mov	sp, r7
 801c2ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c2d2:	4770      	bx	lr

0801c2d4 <_ZSt7forwardIOZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c2d4:	b480      	push	{r7}
 801c2d6:	b083      	sub	sp, #12
 801c2d8:	af00      	add	r7, sp, #0
 801c2da:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c2dc:	687b      	ldr	r3, [r7, #4]
 801c2de:	4618      	mov	r0, r3
 801c2e0:	370c      	adds	r7, #12
 801c2e2:	46bd      	mov	sp, r7
 801c2e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c2e8:	4770      	bx	lr

0801c2ea <_ZSt7forwardIOSt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISI_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c2ea:	b480      	push	{r7}
 801c2ec:	b083      	sub	sp, #12
 801c2ee:	af00      	add	r7, sp, #0
 801c2f0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c2f2:	687b      	ldr	r3, [r7, #4]
 801c2f4:	4618      	mov	r0, r3
 801c2f6:	370c      	adds	r7, #12
 801c2f8:	46bd      	mov	sp, r7
 801c2fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c2fe:	4770      	bx	lr

0801c300 <_ZSt7forwardISt7variantIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EES7_IiSaIiEES7_IfSaIfEES7_IbSaIbEEEEEOT_RNSt16remove_referenceISH_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c300:	b480      	push	{r7}
 801c302:	b083      	sub	sp, #12
 801c304:	af00      	add	r7, sp, #0
 801c306:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c308:	687b      	ldr	r3, [r7, #4]
 801c30a:	4618      	mov	r0, r3
 801c30c:	370c      	adds	r7, #12
 801c30e:	46bd      	mov	sp, r7
 801c310:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c314:	4770      	bx	lr

0801c316 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c316:	b480      	push	{r7}
 801c318:	b083      	sub	sp, #12
 801c31a:	af00      	add	r7, sp, #0
 801c31c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c31e:	687b      	ldr	r3, [r7, #4]
 801c320:	4618      	mov	r0, r3
 801c322:	370c      	adds	r7, #12
 801c324:	46bd      	mov	sp, r7
 801c326:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c32a:	4770      	bx	lr

0801c32c <_ZNOSt8__detail9__variant14_UninitializedIiLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 801c32c:	b580      	push	{r7, lr}
 801c32e:	b082      	sub	sp, #8
 801c330:	af00      	add	r7, sp, #0
 801c332:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 801c334:	687b      	ldr	r3, [r7, #4]
 801c336:	4618      	mov	r0, r3
 801c338:	f7f2 f980 	bl	800e63c <_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_>
 801c33c:	4603      	mov	r3, r0
 801c33e:	4618      	mov	r0, r3
 801c340:	3708      	adds	r7, #8
 801c342:	46bd      	mov	sp, r7
 801c344:	bd80      	pop	{r7, pc}

0801c346 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JiEENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801c346:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c348:	b083      	sub	sp, #12
 801c34a:	af00      	add	r7, sp, #0
 801c34c:	6078      	str	r0, [r7, #4]
 801c34e:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801c350:	6878      	ldr	r0, [r7, #4]
 801c352:	f000 f977 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c356:	4604      	mov	r4, r0
 801c358:	6838      	ldr	r0, [r7, #0]
 801c35a:	f7eb fd7f 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 801c35e:	4603      	mov	r3, r0
 801c360:	461a      	mov	r2, r3
 801c362:	4621      	mov	r1, r4
 801c364:	4628      	mov	r0, r5
 801c366:	f000 fac7 	bl	801c8f8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JiEESQ_St14__invoke_otherSN_DpOT1_>
					std::forward<_Args>(__args)...);
 801c36a:	4633      	mov	r3, r6
    }
 801c36c:	4618      	mov	r0, r3
 801c36e:	370c      	adds	r7, #12
 801c370:	46bd      	mov	sp, r7
 801c372:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c374 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJfbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c374:	b480      	push	{r7}
 801c376:	b083      	sub	sp, #12
 801c378:	af00      	add	r7, sp, #0
 801c37a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c37c:	687b      	ldr	r3, [r7, #4]
 801c37e:	4618      	mov	r0, r3
 801c380:	370c      	adds	r7, #12
 801c382:	46bd      	mov	sp, r7
 801c384:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c388:	4770      	bx	lr

0801c38a <_ZNOSt8__detail9__variant14_UninitializedIfLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 801c38a:	b580      	push	{r7, lr}
 801c38c:	b082      	sub	sp, #8
 801c38e:	af00      	add	r7, sp, #0
 801c390:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 801c392:	687b      	ldr	r3, [r7, #4]
 801c394:	4618      	mov	r0, r3
 801c396:	f7f2 f95c 	bl	800e652 <_ZSt4moveIRfEONSt16remove_referenceIT_E4typeEOS2_>
 801c39a:	4603      	mov	r3, r0
 801c39c:	4618      	mov	r0, r3
 801c39e:	3708      	adds	r7, #8
 801c3a0:	46bd      	mov	sp, r7
 801c3a2:	bd80      	pop	{r7, pc}

0801c3a4 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JfEENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801c3a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c3a6:	b083      	sub	sp, #12
 801c3a8:	af00      	add	r7, sp, #0
 801c3aa:	6078      	str	r0, [r7, #4]
 801c3ac:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801c3ae:	6878      	ldr	r0, [r7, #4]
 801c3b0:	f000 f948 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c3b4:	4604      	mov	r4, r0
 801c3b6:	6838      	ldr	r0, [r7, #0]
 801c3b8:	f7ed fdea 	bl	8009f90 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 801c3bc:	4603      	mov	r3, r0
 801c3be:	461a      	mov	r2, r3
 801c3c0:	4621      	mov	r1, r4
 801c3c2:	4628      	mov	r0, r5
 801c3c4:	f000 faaf 	bl	801c926 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JfEESQ_St14__invoke_otherSN_DpOT1_>
					std::forward<_Args>(__args)...);
 801c3c8:	4633      	mov	r3, r6
    }
 801c3ca:	4618      	mov	r0, r3
 801c3cc:	370c      	adds	r7, #12
 801c3ce:	46bd      	mov	sp, r7
 801c3d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c3d2 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c3d2:	b480      	push	{r7}
 801c3d4:	b083      	sub	sp, #12
 801c3d6:	af00      	add	r7, sp, #0
 801c3d8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c3da:	687b      	ldr	r3, [r7, #4]
 801c3dc:	4618      	mov	r0, r3
 801c3de:	370c      	adds	r7, #12
 801c3e0:	46bd      	mov	sp, r7
 801c3e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c3e6:	4770      	bx	lr

0801c3e8 <_ZNOSt8__detail9__variant14_UninitializedIbLb1EE6_M_getEv>:
      constexpr _Type&& _M_get() && noexcept
 801c3e8:	b580      	push	{r7, lr}
 801c3ea:	b082      	sub	sp, #8
 801c3ec:	af00      	add	r7, sp, #0
 801c3ee:	6078      	str	r0, [r7, #4]
      { return std::move(_M_storage); }
 801c3f0:	687b      	ldr	r3, [r7, #4]
 801c3f2:	4618      	mov	r0, r3
 801c3f4:	f7f2 f938 	bl	800e668 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
 801c3f8:	4603      	mov	r3, r0
 801c3fa:	4618      	mov	r0, r3
 801c3fc:	3708      	adds	r7, #8
 801c3fe:	46bd      	mov	sp, r7
 801c400:	bd80      	pop	{r7, pc}

0801c402 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JbEENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801c402:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c404:	b083      	sub	sp, #12
 801c406:	af00      	add	r7, sp, #0
 801c408:	6078      	str	r0, [r7, #4]
 801c40a:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801c40c:	6878      	ldr	r0, [r7, #4]
 801c40e:	f000 f919 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c412:	4604      	mov	r4, r0
 801c414:	6838      	ldr	r0, [r7, #0]
 801c416:	f7f2 fa44 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801c41a:	4603      	mov	r3, r0
 801c41c:	461a      	mov	r2, r3
 801c41e:	4621      	mov	r1, r4
 801c420:	4628      	mov	r0, r5
 801c422:	f000 fa97 	bl	801c954 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JbEESQ_St14__invoke_otherSN_DpOT1_>
					std::forward<_Args>(__args)...);
 801c426:	4633      	mov	r3, r6
    }
 801c428:	4618      	mov	r0, r3
 801c42a:	370c      	adds	r7, #12
 801c42c:	46bd      	mov	sp, r7
 801c42e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c430 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c430:	b480      	push	{r7}
 801c432:	b083      	sub	sp, #12
 801c434:	af00      	add	r7, sp, #0
 801c436:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c438:	687b      	ldr	r3, [r7, #4]
 801c43a:	4618      	mov	r0, r3
 801c43c:	370c      	adds	r7, #12
 801c43e:	46bd      	mov	sp, r7
 801c440:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c444:	4770      	bx	lr

0801c446 <_ZNOSt8__detail9__variant14_UninitializedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 801c446:	b580      	push	{r7, lr}
 801c448:	b082      	sub	sp, #8
 801c44a:	af00      	add	r7, sp, #0
 801c44c:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 801c44e:	687b      	ldr	r3, [r7, #4]
 801c450:	4618      	mov	r0, r3
 801c452:	f7e9 fe16 	bl	8006082 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
 801c456:	4603      	mov	r3, r0
 801c458:	4618      	mov	r0, r3
 801c45a:	f7eb fe6f 	bl	800813c <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
 801c45e:	4603      	mov	r3, r0
 801c460:	4618      	mov	r0, r3
 801c462:	3708      	adds	r7, #8
 801c464:	46bd      	mov	sp, r7
 801c466:	bd80      	pop	{r7, pc}

0801c468 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JS8_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801c468:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c46a:	b083      	sub	sp, #12
 801c46c:	af00      	add	r7, sp, #0
 801c46e:	6078      	str	r0, [r7, #4]
 801c470:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801c472:	6878      	ldr	r0, [r7, #4]
 801c474:	f000 f8e6 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c478:	4604      	mov	r4, r0
 801c47a:	6838      	ldr	r0, [r7, #0]
 801c47c:	f7ed fd2e 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801c480:	4603      	mov	r3, r0
 801c482:	461a      	mov	r2, r3
 801c484:	4621      	mov	r1, r4
 801c486:	4628      	mov	r0, r5
 801c488:	f000 fa7b 	bl	801c982 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JS9_EESQ_St14__invoke_otherSN_DpOT1_>
					std::forward<_Args>(__args)...);
 801c48c:	4633      	mov	r3, r6
    }
 801c48e:	4618      	mov	r0, r3
 801c490:	370c      	adds	r7, #12
 801c492:	46bd      	mov	sp, r7
 801c494:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c496 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS9_EES3_IiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISJ_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c496:	b480      	push	{r7}
 801c498:	b083      	sub	sp, #12
 801c49a:	af00      	add	r7, sp, #0
 801c49c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c49e:	687b      	ldr	r3, [r7, #4]
 801c4a0:	4618      	mov	r0, r3
 801c4a2:	370c      	adds	r7, #12
 801c4a4:	46bd      	mov	sp, r7
 801c4a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c4aa:	4770      	bx	lr

0801c4ac <_ZNOSt8__detail9__variant14_UninitializedISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 801c4ac:	b580      	push	{r7, lr}
 801c4ae:	b082      	sub	sp, #8
 801c4b0:	af00      	add	r7, sp, #0
 801c4b2:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 801c4b4:	687b      	ldr	r3, [r7, #4]
 801c4b6:	4618      	mov	r0, r3
 801c4b8:	f7f5 fc11 	bl	8011cde <_ZN9__gnu_cxx16__aligned_membufISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEE6_M_ptrEv>
 801c4bc:	4603      	mov	r3, r0
 801c4be:	4618      	mov	r0, r3
 801c4c0:	f7fc f903 	bl	80186ca <_ZSt4moveIRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEONSt16remove_referenceIT_E4typeEOSB_>
 801c4c4:	4603      	mov	r3, r0
 801c4c6:	4618      	mov	r0, r3
 801c4c8:	3708      	adds	r7, #8
 801c4ca:	46bd      	mov	sp, r7
 801c4cc:	bd80      	pop	{r7, pc}

0801c4ce <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSB_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801c4ce:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c4d0:	b083      	sub	sp, #12
 801c4d2:	af00      	add	r7, sp, #0
 801c4d4:	6078      	str	r0, [r7, #4]
 801c4d6:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801c4d8:	6878      	ldr	r0, [r7, #4]
 801c4da:	f000 f8b3 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c4de:	4604      	mov	r4, r0
 801c4e0:	6838      	ldr	r0, [r7, #0]
 801c4e2:	f7fb fef9 	bl	80182d8 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 801c4e6:	4603      	mov	r3, r0
 801c4e8:	461a      	mov	r2, r3
 801c4ea:	4621      	mov	r1, r4
 801c4ec:	4628      	mov	r0, r5
 801c4ee:	f000 fa5f 	bl	801c9b0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JSC_EESQ_St14__invoke_otherSN_DpOT1_>
					std::forward<_Args>(__args)...);
 801c4f2:	4633      	mov	r3, r6
    }
 801c4f4:	4618      	mov	r0, r3
 801c4f6:	370c      	adds	r7, #12
 801c4f8:	46bd      	mov	sp, r7
 801c4fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c4fc <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorIiSaIiEES3_IfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceISB_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c4fc:	b480      	push	{r7}
 801c4fe:	b083      	sub	sp, #12
 801c500:	af00      	add	r7, sp, #0
 801c502:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c504:	687b      	ldr	r3, [r7, #4]
 801c506:	4618      	mov	r0, r3
 801c508:	370c      	adds	r7, #12
 801c50a:	46bd      	mov	sp, r7
 801c50c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c510:	4770      	bx	lr

0801c512 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorIiSaIiEELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 801c512:	b580      	push	{r7, lr}
 801c514:	b082      	sub	sp, #8
 801c516:	af00      	add	r7, sp, #0
 801c518:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 801c51a:	687b      	ldr	r3, [r7, #4]
 801c51c:	4618      	mov	r0, r3
 801c51e:	f7f5 fc0c 	bl	8011d3a <_ZN9__gnu_cxx16__aligned_membufISt6vectorIiSaIiEEE6_M_ptrEv>
 801c522:	4603      	mov	r3, r0
 801c524:	4618      	mov	r0, r3
 801c526:	f000 fa5a 	bl	801c9de <_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_>
 801c52a:	4603      	mov	r3, r0
 801c52c:	4618      	mov	r0, r3
 801c52e:	3708      	adds	r7, #8
 801c530:	46bd      	mov	sp, r7
 801c532:	bd80      	pop	{r7, pc}

0801c534 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSD_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801c534:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c536:	b083      	sub	sp, #12
 801c538:	af00      	add	r7, sp, #0
 801c53a:	6078      	str	r0, [r7, #4]
 801c53c:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801c53e:	6878      	ldr	r0, [r7, #4]
 801c540:	f000 f880 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c544:	4604      	mov	r4, r0
 801c546:	6838      	ldr	r0, [r7, #0]
 801c548:	f000 fa54 	bl	801c9f4 <_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE>
 801c54c:	4603      	mov	r3, r0
 801c54e:	461a      	mov	r2, r3
 801c550:	4621      	mov	r1, r4
 801c552:	4628      	mov	r0, r5
 801c554:	f000 fa59 	bl	801ca0a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JSE_EESQ_St14__invoke_otherSN_DpOT1_>
					std::forward<_Args>(__args)...);
 801c558:	4633      	mov	r3, r6
    }
 801c55a:	4618      	mov	r0, r3
 801c55c:	370c      	adds	r7, #12
 801c55e:	46bd      	mov	sp, r7
 801c560:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c562 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorIfSaIfEES3_IbSaIbEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c562:	b480      	push	{r7}
 801c564:	b083      	sub	sp, #12
 801c566:	af00      	add	r7, sp, #0
 801c568:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c56a:	687b      	ldr	r3, [r7, #4]
 801c56c:	4618      	mov	r0, r3
 801c56e:	370c      	adds	r7, #12
 801c570:	46bd      	mov	sp, r7
 801c572:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c576:	4770      	bx	lr

0801c578 <_ZNOSt8__detail9__variant14_UninitializedISt6vectorIfSaIfEELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 801c578:	b580      	push	{r7, lr}
 801c57a:	b082      	sub	sp, #8
 801c57c:	af00      	add	r7, sp, #0
 801c57e:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 801c580:	687b      	ldr	r3, [r7, #4]
 801c582:	4618      	mov	r0, r3
 801c584:	f7f5 fc07 	bl	8011d96 <_ZN9__gnu_cxx16__aligned_membufISt6vectorIfSaIfEEE6_M_ptrEv>
 801c588:	4603      	mov	r3, r0
 801c58a:	4618      	mov	r0, r3
 801c58c:	f000 fa54 	bl	801ca38 <_ZSt4moveIRSt6vectorIfSaIfEEEONSt16remove_referenceIT_E4typeEOS5_>
 801c590:	4603      	mov	r3, r0
 801c592:	4618      	mov	r0, r3
 801c594:	3708      	adds	r7, #8
 801c596:	46bd      	mov	sp, r7
 801c598:	bd80      	pop	{r7, pc}

0801c59a <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSF_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801c59a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c59c:	b083      	sub	sp, #12
 801c59e:	af00      	add	r7, sp, #0
 801c5a0:	6078      	str	r0, [r7, #4]
 801c5a2:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801c5a4:	6878      	ldr	r0, [r7, #4]
 801c5a6:	f000 f84d 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c5aa:	4604      	mov	r4, r0
 801c5ac:	6838      	ldr	r0, [r7, #0]
 801c5ae:	f000 fa4e 	bl	801ca4e <_ZSt7forwardISt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS3_E4typeE>
 801c5b2:	4603      	mov	r3, r0
 801c5b4:	461a      	mov	r2, r3
 801c5b6:	4621      	mov	r1, r4
 801c5b8:	4628      	mov	r0, r5
 801c5ba:	f000 fa53 	bl	801ca64 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JSG_EESQ_St14__invoke_otherSN_DpOT1_>
					std::forward<_Args>(__args)...);
 801c5be:	4633      	mov	r3, r6
    }
 801c5c0:	4618      	mov	r0, r3
 801c5c2:	370c      	adds	r7, #12
 801c5c4:	46bd      	mov	sp, r7
 801c5c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c5c8 <_ZSt7forwardINSt8__detail9__variant15_Variadic_unionIJSt6vectorIbSaIbEEEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c5c8:	b480      	push	{r7}
 801c5ca:	b083      	sub	sp, #12
 801c5cc:	af00      	add	r7, sp, #0
 801c5ce:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c5d0:	687b      	ldr	r3, [r7, #4]
 801c5d2:	4618      	mov	r0, r3
 801c5d4:	370c      	adds	r7, #12
 801c5d6:	46bd      	mov	sp, r7
 801c5d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c5dc:	4770      	bx	lr

0801c5de <_ZNOSt8__detail9__variant14_UninitializedISt6vectorIbSaIbEELb0EE6_M_getEv>:
      _Type&& _M_get() && noexcept
 801c5de:	b580      	push	{r7, lr}
 801c5e0:	b082      	sub	sp, #8
 801c5e2:	af00      	add	r7, sp, #0
 801c5e4:	6078      	str	r0, [r7, #4]
      { return std::move(*_M_storage._M_ptr()); }
 801c5e6:	687b      	ldr	r3, [r7, #4]
 801c5e8:	4618      	mov	r0, r3
 801c5ea:	f7f5 fc02 	bl	8011df2 <_ZN9__gnu_cxx16__aligned_membufISt6vectorIbSaIbEEE6_M_ptrEv>
 801c5ee:	4603      	mov	r3, r0
 801c5f0:	4618      	mov	r0, r3
 801c5f2:	f000 fa4e 	bl	801ca92 <_ZSt4moveIRSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS5_>
 801c5f6:	4603      	mov	r3, r0
 801c5f8:	4618      	mov	r0, r3
 801c5fa:	3708      	adds	r7, #8
 801c5fc:	46bd      	mov	sp, r7
 801c5fe:	bd80      	pop	{r7, pc}

0801c600 <_ZSt8__invokeIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_JSH_EENSt15__invoke_resultISP_JDpT0_EE4typeESQ_DpOST_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
 801c600:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c602:	b083      	sub	sp, #12
 801c604:	af00      	add	r7, sp, #0
 801c606:	6078      	str	r0, [r7, #4]
 801c608:	6039      	str	r1, [r7, #0]
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 801c60a:	6878      	ldr	r0, [r7, #4]
 801c60c:	f000 f81a 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c610:	4604      	mov	r4, r0
 801c612:	6838      	ldr	r0, [r7, #0]
 801c614:	f000 fa48 	bl	801caa8 <_ZSt7forwardISt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS3_E4typeE>
 801c618:	4603      	mov	r3, r0
 801c61a:	461a      	mov	r2, r3
 801c61c:	4621      	mov	r1, r4
 801c61e:	4628      	mov	r0, r5
 801c620:	f000 fa4d 	bl	801cabe <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JSI_EESQ_St14__invoke_otherSN_DpOT1_>
					std::forward<_Args>(__args)...);
 801c624:	4633      	mov	r3, r6
    }
 801c626:	4618      	mov	r0, r3
 801c628:	370c      	adds	r7, #12
 801c62a:	46bd      	mov	sp, r7
 801c62c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c62e <_ZNKSt8__detail9__variant12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_OSt7variantIJifbS9_SC_SE_SG_SI_EEEJEE9_M_accessEv>:
      _M_access() const
 801c62e:	b480      	push	{r7}
 801c630:	b083      	sub	sp, #12
 801c632:	af00      	add	r7, sp, #0
 801c634:	6078      	str	r0, [r7, #4]
      { return _M_data; }
 801c636:	687b      	ldr	r3, [r7, #4]
 801c638:	4618      	mov	r0, r3
 801c63a:	370c      	adds	r7, #12
 801c63c:	46bd      	mov	sp, r7
 801c63e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c642:	4770      	bx	lr

0801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c644:	b480      	push	{r7}
 801c646:	b083      	sub	sp, #12
 801c648:	af00      	add	r7, sp, #0
 801c64a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c64c:	687b      	ldr	r3, [r7, #4]
 801c64e:	4618      	mov	r0, r3
 801c650:	370c      	adds	r7, #12
 801c652:	46bd      	mov	sp, r7
 801c654:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c658:	4770      	bx	lr

0801c65a <_ZN9__gnu_cxxneIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESH_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 801c65a:	b590      	push	{r4, r7, lr}
 801c65c:	b083      	sub	sp, #12
 801c65e:	af00      	add	r7, sp, #0
 801c660:	6078      	str	r0, [r7, #4]
 801c662:	6039      	str	r1, [r7, #0]
    { return __lhs.base() != __rhs.base(); }
 801c664:	6878      	ldr	r0, [r7, #4]
 801c666:	f000 fa41 	bl	801caec <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
 801c66a:	4603      	mov	r3, r0
 801c66c:	681c      	ldr	r4, [r3, #0]
 801c66e:	6838      	ldr	r0, [r7, #0]
 801c670:	f000 fa3c 	bl	801caec <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>
 801c674:	4603      	mov	r3, r0
 801c676:	681b      	ldr	r3, [r3, #0]
 801c678:	429c      	cmp	r4, r3
 801c67a:	bf14      	ite	ne
 801c67c:	2301      	movne	r3, #1
 801c67e:	2300      	moveq	r3, #0
 801c680:	b2db      	uxtb	r3, r3
 801c682:	4618      	mov	r0, r3
 801c684:	370c      	adds	r7, #12
 801c686:	46bd      	mov	sp, r7
 801c688:	bd90      	pop	{r4, r7, pc}

0801c68a <_ZN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 801c68a:	b480      	push	{r7}
 801c68c:	b083      	sub	sp, #12
 801c68e:	af00      	add	r7, sp, #0
 801c690:	6078      	str	r0, [r7, #4]
	++_M_current;
 801c692:	687b      	ldr	r3, [r7, #4]
 801c694:	681b      	ldr	r3, [r3, #0]
 801c696:	f103 0218 	add.w	r2, r3, #24
 801c69a:	687b      	ldr	r3, [r7, #4]
 801c69c:	601a      	str	r2, [r3, #0]
	return *this;
 801c69e:	687b      	ldr	r3, [r7, #4]
      }
 801c6a0:	4618      	mov	r0, r3
 801c6a2:	370c      	adds	r7, #12
 801c6a4:	46bd      	mov	sp, r7
 801c6a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c6aa:	4770      	bx	lr

0801c6ac <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 801c6ac:	b480      	push	{r7}
 801c6ae:	b083      	sub	sp, #12
 801c6b0:	af00      	add	r7, sp, #0
 801c6b2:	6078      	str	r0, [r7, #4]
      { return *_M_current; }
 801c6b4:	687b      	ldr	r3, [r7, #4]
 801c6b6:	681b      	ldr	r3, [r3, #0]
 801c6b8:	4618      	mov	r0, r3
 801c6ba:	370c      	adds	r7, #12
 801c6bc:	46bd      	mov	sp, r7
 801c6be:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c6c2:	4770      	bx	lr

0801c6c4 <_ZN9__gnu_cxx13new_allocatorIiEC1ERKS1_>:
      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 801c6c4:	b480      	push	{r7}
 801c6c6:	b083      	sub	sp, #12
 801c6c8:	af00      	add	r7, sp, #0
 801c6ca:	6078      	str	r0, [r7, #4]
 801c6cc:	6039      	str	r1, [r7, #0]
 801c6ce:	687b      	ldr	r3, [r7, #4]
 801c6d0:	4618      	mov	r0, r3
 801c6d2:	370c      	adds	r7, #12
 801c6d4:	46bd      	mov	sp, r7
 801c6d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c6da:	4770      	bx	lr

0801c6dc <_ZNSt16allocator_traitsISaIiEE8allocateERS0_j>:
      allocate(allocator_type& __a, size_type __n)
 801c6dc:	b580      	push	{r7, lr}
 801c6de:	b082      	sub	sp, #8
 801c6e0:	af00      	add	r7, sp, #0
 801c6e2:	6078      	str	r0, [r7, #4]
 801c6e4:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801c6e6:	2200      	movs	r2, #0
 801c6e8:	6839      	ldr	r1, [r7, #0]
 801c6ea:	6878      	ldr	r0, [r7, #4]
 801c6ec:	f000 fa09 	bl	801cb02 <_ZN9__gnu_cxx13new_allocatorIiE8allocateEjPKv>
 801c6f0:	4603      	mov	r3, r0
 801c6f2:	4618      	mov	r0, r3
 801c6f4:	3708      	adds	r7, #8
 801c6f6:	46bd      	mov	sp, r7
 801c6f8:	bd80      	pop	{r7, pc}

0801c6fa <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_>:
    copy(_II __first, _II __last, _OI __result)
 801c6fa:	b590      	push	{r4, r7, lr}
 801c6fc:	b085      	sub	sp, #20
 801c6fe:	af00      	add	r7, sp, #0
 801c700:	60f8      	str	r0, [r7, #12]
 801c702:	60b9      	str	r1, [r7, #8]
 801c704:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 801c706:	68f8      	ldr	r0, [r7, #12]
 801c708:	f000 fa1a 	bl	801cb40 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_>
 801c70c:	4604      	mov	r4, r0
 801c70e:	68b8      	ldr	r0, [r7, #8]
 801c710:	f000 fa16 	bl	801cb40 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_>
 801c714:	4603      	mov	r3, r0
 801c716:	687a      	ldr	r2, [r7, #4]
 801c718:	4619      	mov	r1, r3
 801c71a:	4620      	mov	r0, r4
 801c71c:	f000 fa1b 	bl	801cb56 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_>
 801c720:	4603      	mov	r3, r0
    }
 801c722:	4618      	mov	r0, r3
 801c724:	3714      	adds	r7, #20
 801c726:	46bd      	mov	sp, r7
 801c728:	bd90      	pop	{r4, r7, pc}

0801c72a <_ZN9__gnu_cxx13new_allocatorIfEC1ERKS1_>:
 801c72a:	b480      	push	{r7}
 801c72c:	b083      	sub	sp, #12
 801c72e:	af00      	add	r7, sp, #0
 801c730:	6078      	str	r0, [r7, #4]
 801c732:	6039      	str	r1, [r7, #0]
 801c734:	687b      	ldr	r3, [r7, #4]
 801c736:	4618      	mov	r0, r3
 801c738:	370c      	adds	r7, #12
 801c73a:	46bd      	mov	sp, r7
 801c73c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c740:	4770      	bx	lr

0801c742 <_ZNSt16allocator_traitsISaIfEE8allocateERS0_j>:
      allocate(allocator_type& __a, size_type __n)
 801c742:	b580      	push	{r7, lr}
 801c744:	b082      	sub	sp, #8
 801c746:	af00      	add	r7, sp, #0
 801c748:	6078      	str	r0, [r7, #4]
 801c74a:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 801c74c:	2200      	movs	r2, #0
 801c74e:	6839      	ldr	r1, [r7, #0]
 801c750:	6878      	ldr	r0, [r7, #4]
 801c752:	f000 fa23 	bl	801cb9c <_ZN9__gnu_cxx13new_allocatorIfE8allocateEjPKv>
 801c756:	4603      	mov	r3, r0
 801c758:	4618      	mov	r0, r3
 801c75a:	3708      	adds	r7, #8
 801c75c:	46bd      	mov	sp, r7
 801c75e:	bd80      	pop	{r7, pc}

0801c760 <_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPfET0_T_SA_S9_>:
    copy(_II __first, _II __last, _OI __result)
 801c760:	b590      	push	{r4, r7, lr}
 801c762:	b085      	sub	sp, #20
 801c764:	af00      	add	r7, sp, #0
 801c766:	60f8      	str	r0, [r7, #12]
 801c768:	60b9      	str	r1, [r7, #8]
 801c76a:	607a      	str	r2, [r7, #4]
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 801c76c:	68f8      	ldr	r0, [r7, #12]
 801c76e:	f000 fa34 	bl	801cbda <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEET_S8_>
 801c772:	4604      	mov	r4, r0
 801c774:	68b8      	ldr	r0, [r7, #8]
 801c776:	f000 fa30 	bl	801cbda <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEET_S8_>
 801c77a:	4603      	mov	r3, r0
 801c77c:	687a      	ldr	r2, [r7, #4]
 801c77e:	4619      	mov	r1, r3
 801c780:	4620      	mov	r0, r4
 801c782:	f000 fa35 	bl	801cbf0 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPfET1_T0_SA_S9_>
 801c786:	4603      	mov	r3, r0
    }
 801c788:	4618      	mov	r0, r3
 801c78a:	3714      	adds	r7, #20
 801c78c:	46bd      	mov	sp, r7
 801c78e:	bd90      	pop	{r4, r7, pc}

0801c790 <_ZN9__gnu_cxx13new_allocatorImEC1ERKS1_>:
 801c790:	b480      	push	{r7}
 801c792:	b083      	sub	sp, #12
 801c794:	af00      	add	r7, sp, #0
 801c796:	6078      	str	r0, [r7, #4]
 801c798:	6039      	str	r1, [r7, #0]
 801c79a:	687b      	ldr	r3, [r7, #4]
 801c79c:	4618      	mov	r0, r3
 801c79e:	370c      	adds	r7, #12
 801c7a0:	46bd      	mov	sp, r7
 801c7a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c7a6:	4770      	bx	lr

0801c7a8 <_ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801c7a8:	b580      	push	{r7, lr}
 801c7aa:	b084      	sub	sp, #16
 801c7ac:	af00      	add	r7, sp, #0
 801c7ae:	60f8      	str	r0, [r7, #12]
 801c7b0:	60b9      	str	r1, [r7, #8]
 801c7b2:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801c7b4:	68f8      	ldr	r0, [r7, #12]
 801c7b6:	f000 fa3e 	bl	801cc36 <_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv>
 801c7ba:	4602      	mov	r2, r0
 801c7bc:	68bb      	ldr	r3, [r7, #8]
 801c7be:	4293      	cmp	r3, r2
 801c7c0:	bf8c      	ite	hi
 801c7c2:	2301      	movhi	r3, #1
 801c7c4:	2300      	movls	r3, #0
 801c7c6:	b2db      	uxtb	r3, r3
 801c7c8:	2b00      	cmp	r3, #0
 801c7ca:	d001      	beq.n	801c7d0 <_ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801c7cc:	f003 fde1 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801c7d0:	68bb      	ldr	r3, [r7, #8]
 801c7d2:	009b      	lsls	r3, r3, #2
 801c7d4:	4618      	mov	r0, r3
 801c7d6:	f003 fd17 	bl	8020208 <_Znwj>
 801c7da:	4603      	mov	r3, r0
 801c7dc:	bf00      	nop
      }
 801c7de:	4618      	mov	r0, r3
 801c7e0:	3710      	adds	r7, #16
 801c7e2:	46bd      	mov	sp, r7
 801c7e4:	bd80      	pop	{r7, pc}

0801c7e6 <_ZSt12__niter_baseIPmET_S1_>:
    __niter_base(_Iterator __it)
 801c7e6:	b480      	push	{r7}
 801c7e8:	b083      	sub	sp, #12
 801c7ea:	af00      	add	r7, sp, #0
 801c7ec:	6078      	str	r0, [r7, #4]
    { return __it; }
 801c7ee:	687b      	ldr	r3, [r7, #4]
 801c7f0:	4618      	mov	r0, r3
 801c7f2:	370c      	adds	r7, #12
 801c7f4:	46bd      	mov	sp, r7
 801c7f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c7fa:	4770      	bx	lr

0801c7fc <_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 801c7fc:	b580      	push	{r7, lr}
 801c7fe:	b086      	sub	sp, #24
 801c800:	af00      	add	r7, sp, #0
 801c802:	60f8      	str	r0, [r7, #12]
 801c804:	60b9      	str	r1, [r7, #8]
 801c806:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 801c808:	2301      	movs	r3, #1
 801c80a:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 801c80c:	687a      	ldr	r2, [r7, #4]
 801c80e:	68b9      	ldr	r1, [r7, #8]
 801c810:	68f8      	ldr	r0, [r7, #12]
 801c812:	f000 fa1c 	bl	801cc4e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_>
 801c816:	4603      	mov	r3, r0
    }
 801c818:	4618      	mov	r0, r3
 801c81a:	3718      	adds	r7, #24
 801c81c:	46bd      	mov	sp, r7
 801c81e:	bd80      	pop	{r7, pc}

0801c820 <_ZSt12__niter_wrapIPmET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 801c820:	b480      	push	{r7}
 801c822:	b083      	sub	sp, #12
 801c824:	af00      	add	r7, sp, #0
 801c826:	6078      	str	r0, [r7, #4]
 801c828:	6039      	str	r1, [r7, #0]
    { return __res; }
 801c82a:	683b      	ldr	r3, [r7, #0]
 801c82c:	4618      	mov	r0, r3
 801c82e:	370c      	adds	r7, #12
 801c830:	46bd      	mov	sp, r7
 801c832:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c836:	4770      	bx	lr

0801c838 <_ZSt12__niter_baseISt19_Bit_const_iteratorET_S1_>:
    __niter_base(_Iterator __it)
 801c838:	b480      	push	{r7}
 801c83a:	b085      	sub	sp, #20
 801c83c:	af00      	add	r7, sp, #0
 801c83e:	60f8      	str	r0, [r7, #12]
 801c840:	1d3b      	adds	r3, r7, #4
 801c842:	e883 0006 	stmia.w	r3, {r1, r2}
    { return __it; }
 801c846:	68fb      	ldr	r3, [r7, #12]
 801c848:	461a      	mov	r2, r3
 801c84a:	1d3b      	adds	r3, r7, #4
 801c84c:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c850:	e882 0003 	stmia.w	r2, {r0, r1}
 801c854:	68f8      	ldr	r0, [r7, #12]
 801c856:	3714      	adds	r7, #20
 801c858:	46bd      	mov	sp, r7
 801c85a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c85e:	4770      	bx	lr

0801c860 <_ZSt12__niter_baseISt13_Bit_iteratorET_S1_>:
    __niter_base(_Iterator __it)
 801c860:	b480      	push	{r7}
 801c862:	b085      	sub	sp, #20
 801c864:	af00      	add	r7, sp, #0
 801c866:	60f8      	str	r0, [r7, #12]
 801c868:	1d3b      	adds	r3, r7, #4
 801c86a:	e883 0006 	stmia.w	r3, {r1, r2}
    { return __it; }
 801c86e:	68fb      	ldr	r3, [r7, #12]
 801c870:	461a      	mov	r2, r3
 801c872:	1d3b      	adds	r3, r7, #4
 801c874:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c878:	e882 0003 	stmia.w	r2, {r0, r1}
 801c87c:	68f8      	ldr	r0, [r7, #12]
 801c87e:	3714      	adds	r7, #20
 801c880:	46bd      	mov	sp, r7
 801c882:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c886:	4770      	bx	lr

0801c888 <_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 801c888:	b082      	sub	sp, #8
 801c88a:	b590      	push	{r4, r7, lr}
 801c88c:	b08b      	sub	sp, #44	; 0x2c
 801c88e:	af04      	add	r7, sp, #16
 801c890:	60f8      	str	r0, [r7, #12]
 801c892:	1d38      	adds	r0, r7, #4
 801c894:	e880 0006 	stmia.w	r0, {r1, r2}
 801c898:	62fb      	str	r3, [r7, #44]	; 0x2c
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 801c89a:	2300      	movs	r3, #0
 801c89c:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 801c89e:	68fc      	ldr	r4, [r7, #12]
 801c8a0:	aa01      	add	r2, sp, #4
 801c8a2:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801c8a6:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c8aa:	e882 0003 	stmia.w	r2, {r0, r1}
 801c8ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 801c8b0:	9300      	str	r3, [sp, #0]
 801c8b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 801c8b4:	1d3a      	adds	r2, r7, #4
 801c8b6:	ca06      	ldmia	r2, {r1, r2}
 801c8b8:	4620      	mov	r0, r4
 801c8ba:	f000 f9e5 	bl	801cc88 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_>
 801c8be:	bf00      	nop
    }
 801c8c0:	68f8      	ldr	r0, [r7, #12]
 801c8c2:	371c      	adds	r7, #28
 801c8c4:	46bd      	mov	sp, r7
 801c8c6:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 801c8ca:	b002      	add	sp, #8
 801c8cc:	4770      	bx	lr

0801c8ce <_ZSt12__niter_wrapISt13_Bit_iteratorET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 801c8ce:	b480      	push	{r7}
 801c8d0:	b085      	sub	sp, #20
 801c8d2:	af00      	add	r7, sp, #0
 801c8d4:	60f8      	str	r0, [r7, #12]
 801c8d6:	60b9      	str	r1, [r7, #8]
 801c8d8:	4639      	mov	r1, r7
 801c8da:	e881 000c 	stmia.w	r1, {r2, r3}
    { return __res; }
 801c8de:	68fb      	ldr	r3, [r7, #12]
 801c8e0:	461a      	mov	r2, r3
 801c8e2:	463b      	mov	r3, r7
 801c8e4:	e893 0003 	ldmia.w	r3, {r0, r1}
 801c8e8:	e882 0003 	stmia.w	r2, {r0, r1}
 801c8ec:	68f8      	ldr	r0, [r7, #12]
 801c8ee:	3714      	adds	r7, #20
 801c8f0:	46bd      	mov	sp, r7
 801c8f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c8f6:	4770      	bx	lr

0801c8f8 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JiEESQ_St14__invoke_otherSN_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801c8f8:	b5b0      	push	{r4, r5, r7, lr}
 801c8fa:	b084      	sub	sp, #16
 801c8fc:	af00      	add	r7, sp, #0
 801c8fe:	7338      	strb	r0, [r7, #12]
 801c900:	60b9      	str	r1, [r7, #8]
 801c902:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801c904:	68b8      	ldr	r0, [r7, #8]
 801c906:	f7ff fe9d 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c90a:	4604      	mov	r4, r0
 801c90c:	6878      	ldr	r0, [r7, #4]
 801c90e:	f7eb faa5 	bl	8007e5c <_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE>
 801c912:	4603      	mov	r3, r0
 801c914:	4619      	mov	r1, r3
 801c916:	4620      	mov	r0, r4
 801c918:	f000 f9fa 	bl	801cd10 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESP_>
 801c91c:	462b      	mov	r3, r5
 801c91e:	4618      	mov	r0, r3
 801c920:	3710      	adds	r7, #16
 801c922:	46bd      	mov	sp, r7
 801c924:	bdb0      	pop	{r4, r5, r7, pc}

0801c926 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JfEESQ_St14__invoke_otherSN_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801c926:	b5b0      	push	{r4, r5, r7, lr}
 801c928:	b084      	sub	sp, #16
 801c92a:	af00      	add	r7, sp, #0
 801c92c:	7338      	strb	r0, [r7, #12]
 801c92e:	60b9      	str	r1, [r7, #8]
 801c930:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801c932:	68b8      	ldr	r0, [r7, #8]
 801c934:	f7ff fe86 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c938:	4604      	mov	r4, r0
 801c93a:	6878      	ldr	r0, [r7, #4]
 801c93c:	f7ed fb28 	bl	8009f90 <_ZSt7forwardIfEOT_RNSt16remove_referenceIS0_E4typeE>
 801c940:	4603      	mov	r3, r0
 801c942:	4619      	mov	r1, r3
 801c944:	4620      	mov	r0, r4
 801c946:	f000 f9fb 	bl	801cd40 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESP_>
 801c94a:	462b      	mov	r3, r5
 801c94c:	4618      	mov	r0, r3
 801c94e:	3710      	adds	r7, #16
 801c950:	46bd      	mov	sp, r7
 801c952:	bdb0      	pop	{r4, r5, r7, pc}

0801c954 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JbEESQ_St14__invoke_otherSN_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801c954:	b5b0      	push	{r4, r5, r7, lr}
 801c956:	b084      	sub	sp, #16
 801c958:	af00      	add	r7, sp, #0
 801c95a:	7338      	strb	r0, [r7, #12]
 801c95c:	60b9      	str	r1, [r7, #8]
 801c95e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801c960:	68b8      	ldr	r0, [r7, #8]
 801c962:	f7ff fe6f 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c966:	4604      	mov	r4, r0
 801c968:	6878      	ldr	r0, [r7, #4]
 801c96a:	f7f1 ff9a 	bl	800e8a2 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
 801c96e:	4603      	mov	r3, r0
 801c970:	4619      	mov	r1, r3
 801c972:	4620      	mov	r0, r4
 801c974:	f000 f9fc 	bl	801cd70 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESP_>
 801c978:	462b      	mov	r3, r5
 801c97a:	4618      	mov	r0, r3
 801c97c:	3710      	adds	r7, #16
 801c97e:	46bd      	mov	sp, r7
 801c980:	bdb0      	pop	{r4, r5, r7, pc}

0801c982 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JS9_EESQ_St14__invoke_otherSN_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801c982:	b5b0      	push	{r4, r5, r7, lr}
 801c984:	b084      	sub	sp, #16
 801c986:	af00      	add	r7, sp, #0
 801c988:	7338      	strb	r0, [r7, #12]
 801c98a:	60b9      	str	r1, [r7, #8]
 801c98c:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801c98e:	68b8      	ldr	r0, [r7, #8]
 801c990:	f7ff fe58 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c994:	4604      	mov	r4, r0
 801c996:	6878      	ldr	r0, [r7, #4]
 801c998:	f7ed faa0 	bl	8009edc <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
 801c99c:	4603      	mov	r3, r0
 801c99e:	4619      	mov	r1, r3
 801c9a0:	4620      	mov	r0, r4
 801c9a2:	f000 f9fd 	bl	801cda0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESP_>
 801c9a6:	462b      	mov	r3, r5
 801c9a8:	4618      	mov	r0, r3
 801c9aa:	3710      	adds	r7, #16
 801c9ac:	46bd      	mov	sp, r7
 801c9ae:	bdb0      	pop	{r4, r5, r7, pc}

0801c9b0 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JSC_EESQ_St14__invoke_otherSN_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801c9b0:	b5b0      	push	{r4, r5, r7, lr}
 801c9b2:	b084      	sub	sp, #16
 801c9b4:	af00      	add	r7, sp, #0
 801c9b6:	7338      	strb	r0, [r7, #12]
 801c9b8:	60b9      	str	r1, [r7, #8]
 801c9ba:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801c9bc:	68b8      	ldr	r0, [r7, #8]
 801c9be:	f7ff fe41 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801c9c2:	4604      	mov	r4, r0
 801c9c4:	6878      	ldr	r0, [r7, #4]
 801c9c6:	f7fb fc87 	bl	80182d8 <_ZSt7forwardISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceIS9_E4typeE>
 801c9ca:	4603      	mov	r3, r0
 801c9cc:	4619      	mov	r1, r3
 801c9ce:	4620      	mov	r0, r4
 801c9d0:	f000 f9fe 	bl	801cdd0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clISA_EENS0_16__variant_cookieESP_>
 801c9d4:	462b      	mov	r3, r5
 801c9d6:	4618      	mov	r0, r3
 801c9d8:	3710      	adds	r7, #16
 801c9da:	46bd      	mov	sp, r7
 801c9dc:	bdb0      	pop	{r4, r5, r7, pc}

0801c9de <_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
 801c9de:	b480      	push	{r7}
 801c9e0:	b083      	sub	sp, #12
 801c9e2:	af00      	add	r7, sp, #0
 801c9e4:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801c9e6:	687b      	ldr	r3, [r7, #4]
 801c9e8:	4618      	mov	r0, r3
 801c9ea:	370c      	adds	r7, #12
 801c9ec:	46bd      	mov	sp, r7
 801c9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c9f2:	4770      	bx	lr

0801c9f4 <_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801c9f4:	b480      	push	{r7}
 801c9f6:	b083      	sub	sp, #12
 801c9f8:	af00      	add	r7, sp, #0
 801c9fa:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801c9fc:	687b      	ldr	r3, [r7, #4]
 801c9fe:	4618      	mov	r0, r3
 801ca00:	370c      	adds	r7, #12
 801ca02:	46bd      	mov	sp, r7
 801ca04:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ca08:	4770      	bx	lr

0801ca0a <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JSE_EESQ_St14__invoke_otherSN_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801ca0a:	b5b0      	push	{r4, r5, r7, lr}
 801ca0c:	b084      	sub	sp, #16
 801ca0e:	af00      	add	r7, sp, #0
 801ca10:	7338      	strb	r0, [r7, #12]
 801ca12:	60b9      	str	r1, [r7, #8]
 801ca14:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801ca16:	68b8      	ldr	r0, [r7, #8]
 801ca18:	f7ff fe14 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801ca1c:	4604      	mov	r4, r0
 801ca1e:	6878      	ldr	r0, [r7, #4]
 801ca20:	f7ff ffe8 	bl	801c9f4 <_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE>
 801ca24:	4603      	mov	r3, r0
 801ca26:	4619      	mov	r1, r3
 801ca28:	4620      	mov	r0, r4
 801ca2a:	f000 f9e9 	bl	801ce00 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clISC_EENS0_16__variant_cookieESP_>
 801ca2e:	462b      	mov	r3, r5
 801ca30:	4618      	mov	r0, r3
 801ca32:	3710      	adds	r7, #16
 801ca34:	46bd      	mov	sp, r7
 801ca36:	bdb0      	pop	{r4, r5, r7, pc}

0801ca38 <_ZSt4moveIRSt6vectorIfSaIfEEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
 801ca38:	b480      	push	{r7}
 801ca3a:	b083      	sub	sp, #12
 801ca3c:	af00      	add	r7, sp, #0
 801ca3e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801ca40:	687b      	ldr	r3, [r7, #4]
 801ca42:	4618      	mov	r0, r3
 801ca44:	370c      	adds	r7, #12
 801ca46:	46bd      	mov	sp, r7
 801ca48:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ca4c:	4770      	bx	lr

0801ca4e <_ZSt7forwardISt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801ca4e:	b480      	push	{r7}
 801ca50:	b083      	sub	sp, #12
 801ca52:	af00      	add	r7, sp, #0
 801ca54:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801ca56:	687b      	ldr	r3, [r7, #4]
 801ca58:	4618      	mov	r0, r3
 801ca5a:	370c      	adds	r7, #12
 801ca5c:	46bd      	mov	sp, r7
 801ca5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ca62:	4770      	bx	lr

0801ca64 <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JSG_EESQ_St14__invoke_otherSN_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801ca64:	b5b0      	push	{r4, r5, r7, lr}
 801ca66:	b084      	sub	sp, #16
 801ca68:	af00      	add	r7, sp, #0
 801ca6a:	7338      	strb	r0, [r7, #12]
 801ca6c:	60b9      	str	r1, [r7, #8]
 801ca6e:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801ca70:	68b8      	ldr	r0, [r7, #8]
 801ca72:	f7ff fde7 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801ca76:	4604      	mov	r4, r0
 801ca78:	6878      	ldr	r0, [r7, #4]
 801ca7a:	f7ff ffe8 	bl	801ca4e <_ZSt7forwardISt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS3_E4typeE>
 801ca7e:	4603      	mov	r3, r0
 801ca80:	4619      	mov	r1, r3
 801ca82:	4620      	mov	r0, r4
 801ca84:	f000 f9d4 	bl	801ce30 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clISE_EENS0_16__variant_cookieESP_>
 801ca88:	462b      	mov	r3, r5
 801ca8a:	4618      	mov	r0, r3
 801ca8c:	3710      	adds	r7, #16
 801ca8e:	46bd      	mov	sp, r7
 801ca90:	bdb0      	pop	{r4, r5, r7, pc}

0801ca92 <_ZSt4moveIRSt6vectorIbSaIbEEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
 801ca92:	b480      	push	{r7}
 801ca94:	b083      	sub	sp, #12
 801ca96:	af00      	add	r7, sp, #0
 801ca98:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801ca9a:	687b      	ldr	r3, [r7, #4]
 801ca9c:	4618      	mov	r0, r3
 801ca9e:	370c      	adds	r7, #12
 801caa0:	46bd      	mov	sp, r7
 801caa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801caa6:	4770      	bx	lr

0801caa8 <_ZSt7forwardISt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801caa8:	b480      	push	{r7}
 801caaa:	b083      	sub	sp, #12
 801caac:	af00      	add	r7, sp, #0
 801caae:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801cab0:	687b      	ldr	r3, [r7, #4]
 801cab2:	4618      	mov	r0, r3
 801cab4:	370c      	adds	r7, #12
 801cab6:	46bd      	mov	sp, r7
 801cab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cabc:	4770      	bx	lr

0801cabe <_ZSt13__invoke_implINSt8__detail9__variant16__variant_cookieEZNS1_19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EESA_IiSaIiEESA_IfSaIfEESA_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS9_SC_SE_SG_SI_EEESK_EEvOT0_OT1_EUlOT_E_JSI_EESQ_St14__invoke_otherSN_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
 801cabe:	b5b0      	push	{r4, r5, r7, lr}
 801cac0:	b084      	sub	sp, #16
 801cac2:	af00      	add	r7, sp, #0
 801cac4:	7338      	strb	r0, [r7, #12]
 801cac6:	60b9      	str	r1, [r7, #8]
 801cac8:	607a      	str	r2, [r7, #4]
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
 801caca:	68b8      	ldr	r0, [r7, #8]
 801cacc:	f7ff fdba 	bl	801c644 <_ZSt7forwardIZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEERNS1_15_Move_ctor_baseILb0EJifbS8_SB_SD_SF_SH_EEESJ_EEvOT0_OT1_EUlOT_E_ESQ_RNSt16remove_referenceISP_E4typeE>
 801cad0:	4604      	mov	r4, r0
 801cad2:	6878      	ldr	r0, [r7, #4]
 801cad4:	f7ff ffe8 	bl	801caa8 <_ZSt7forwardISt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS3_E4typeE>
 801cad8:	4603      	mov	r3, r0
 801cada:	4619      	mov	r1, r3
 801cadc:	4620      	mov	r0, r4
 801cade:	f000 f9bf 	bl	801ce60 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clISG_EENS0_16__variant_cookieESP_>
 801cae2:	462b      	mov	r3, r5
 801cae4:	4618      	mov	r0, r3
 801cae6:	3710      	adds	r7, #16
 801cae8:	46bd      	mov	sp, r7
 801caea:	bdb0      	pop	{r4, r5, r7, pc}

0801caec <_ZNK9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801caec:	b480      	push	{r7}
 801caee:	b083      	sub	sp, #12
 801caf0:	af00      	add	r7, sp, #0
 801caf2:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801caf4:	687b      	ldr	r3, [r7, #4]
 801caf6:	4618      	mov	r0, r3
 801caf8:	370c      	adds	r7, #12
 801cafa:	46bd      	mov	sp, r7
 801cafc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cb00:	4770      	bx	lr

0801cb02 <_ZN9__gnu_cxx13new_allocatorIiE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cb02:	b580      	push	{r7, lr}
 801cb04:	b084      	sub	sp, #16
 801cb06:	af00      	add	r7, sp, #0
 801cb08:	60f8      	str	r0, [r7, #12]
 801cb0a:	60b9      	str	r1, [r7, #8]
 801cb0c:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cb0e:	68f8      	ldr	r0, [r7, #12]
 801cb10:	f000 f9be 	bl	801ce90 <_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv>
 801cb14:	4602      	mov	r2, r0
 801cb16:	68bb      	ldr	r3, [r7, #8]
 801cb18:	4293      	cmp	r3, r2
 801cb1a:	bf8c      	ite	hi
 801cb1c:	2301      	movhi	r3, #1
 801cb1e:	2300      	movls	r3, #0
 801cb20:	b2db      	uxtb	r3, r3
 801cb22:	2b00      	cmp	r3, #0
 801cb24:	d001      	beq.n	801cb2a <_ZN9__gnu_cxx13new_allocatorIiE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801cb26:	f003 fc34 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cb2a:	68bb      	ldr	r3, [r7, #8]
 801cb2c:	009b      	lsls	r3, r3, #2
 801cb2e:	4618      	mov	r0, r3
 801cb30:	f003 fb6a 	bl	8020208 <_Znwj>
 801cb34:	4603      	mov	r3, r0
 801cb36:	bf00      	nop
      }
 801cb38:	4618      	mov	r0, r3
 801cb3a:	3710      	adds	r7, #16
 801cb3c:	46bd      	mov	sp, r7
 801cb3e:	bd80      	pop	{r7, pc}

0801cb40 <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEET_S8_>:
    __miter_base(_Iterator __it)
 801cb40:	b480      	push	{r7}
 801cb42:	b083      	sub	sp, #12
 801cb44:	af00      	add	r7, sp, #0
 801cb46:	6078      	str	r0, [r7, #4]
    { return __it; }
 801cb48:	687b      	ldr	r3, [r7, #4]
 801cb4a:	4618      	mov	r0, r3
 801cb4c:	370c      	adds	r7, #12
 801cb4e:	46bd      	mov	sp, r7
 801cb50:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cb54:	4770      	bx	lr

0801cb56 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 801cb56:	b5b0      	push	{r4, r5, r7, lr}
 801cb58:	b084      	sub	sp, #16
 801cb5a:	af00      	add	r7, sp, #0
 801cb5c:	60f8      	str	r0, [r7, #12]
 801cb5e:	60b9      	str	r1, [r7, #8]
 801cb60:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 801cb62:	68f8      	ldr	r0, [r7, #12]
 801cb64:	f000 f9a0 	bl	801cea8 <_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 801cb68:	4604      	mov	r4, r0
 801cb6a:	68b8      	ldr	r0, [r7, #8]
 801cb6c:	f000 f99c 	bl	801cea8 <_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 801cb70:	4605      	mov	r5, r0
 801cb72:	687b      	ldr	r3, [r7, #4]
 801cb74:	4618      	mov	r0, r3
 801cb76:	f000 f9a5 	bl	801cec4 <_ZSt12__niter_baseIPiET_S1_>
 801cb7a:	4603      	mov	r3, r0
 801cb7c:	461a      	mov	r2, r3
 801cb7e:	4629      	mov	r1, r5
 801cb80:	4620      	mov	r0, r4
 801cb82:	f000 f9aa 	bl	801ceda <_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_>
 801cb86:	4602      	mov	r2, r0
 801cb88:	1d3b      	adds	r3, r7, #4
 801cb8a:	4611      	mov	r1, r2
 801cb8c:	4618      	mov	r0, r3
 801cb8e:	f000 f9b6 	bl	801cefe <_ZSt12__niter_wrapIPiET_RKS1_S1_>
 801cb92:	4603      	mov	r3, r0
    }
 801cb94:	4618      	mov	r0, r3
 801cb96:	3710      	adds	r7, #16
 801cb98:	46bd      	mov	sp, r7
 801cb9a:	bdb0      	pop	{r4, r5, r7, pc}

0801cb9c <_ZN9__gnu_cxx13new_allocatorIfE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 801cb9c:	b580      	push	{r7, lr}
 801cb9e:	b084      	sub	sp, #16
 801cba0:	af00      	add	r7, sp, #0
 801cba2:	60f8      	str	r0, [r7, #12]
 801cba4:	60b9      	str	r1, [r7, #8]
 801cba6:	607a      	str	r2, [r7, #4]
	if (__n > this->max_size())
 801cba8:	68f8      	ldr	r0, [r7, #12]
 801cbaa:	f000 f9b4 	bl	801cf16 <_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv>
 801cbae:	4602      	mov	r2, r0
 801cbb0:	68bb      	ldr	r3, [r7, #8]
 801cbb2:	4293      	cmp	r3, r2
 801cbb4:	bf8c      	ite	hi
 801cbb6:	2301      	movhi	r3, #1
 801cbb8:	2300      	movls	r3, #0
 801cbba:	b2db      	uxtb	r3, r3
 801cbbc:	2b00      	cmp	r3, #0
 801cbbe:	d001      	beq.n	801cbc4 <_ZN9__gnu_cxx13new_allocatorIfE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801cbc0:	f003 fbe7 	bl	8020392 <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801cbc4:	68bb      	ldr	r3, [r7, #8]
 801cbc6:	009b      	lsls	r3, r3, #2
 801cbc8:	4618      	mov	r0, r3
 801cbca:	f003 fb1d 	bl	8020208 <_Znwj>
 801cbce:	4603      	mov	r3, r0
 801cbd0:	bf00      	nop
      }
 801cbd2:	4618      	mov	r0, r3
 801cbd4:	3710      	adds	r7, #16
 801cbd6:	46bd      	mov	sp, r7
 801cbd8:	bd80      	pop	{r7, pc}

0801cbda <_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEET_S8_>:
    __miter_base(_Iterator __it)
 801cbda:	b480      	push	{r7}
 801cbdc:	b083      	sub	sp, #12
 801cbde:	af00      	add	r7, sp, #0
 801cbe0:	6078      	str	r0, [r7, #4]
    { return __it; }
 801cbe2:	687b      	ldr	r3, [r7, #4]
 801cbe4:	4618      	mov	r0, r3
 801cbe6:	370c      	adds	r7, #12
 801cbe8:	46bd      	mov	sp, r7
 801cbea:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cbee:	4770      	bx	lr

0801cbf0 <_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEEEPfET1_T0_SA_S9_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 801cbf0:	b5b0      	push	{r4, r5, r7, lr}
 801cbf2:	b084      	sub	sp, #16
 801cbf4:	af00      	add	r7, sp, #0
 801cbf6:	60f8      	str	r0, [r7, #12]
 801cbf8:	60b9      	str	r1, [r7, #8]
 801cbfa:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 801cbfc:	68f8      	ldr	r0, [r7, #12]
 801cbfe:	f000 f996 	bl	801cf2e <_ZSt12__niter_baseIPKfSt6vectorIfSaIfEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 801cc02:	4604      	mov	r4, r0
 801cc04:	68b8      	ldr	r0, [r7, #8]
 801cc06:	f000 f992 	bl	801cf2e <_ZSt12__niter_baseIPKfSt6vectorIfSaIfEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>
 801cc0a:	4605      	mov	r5, r0
 801cc0c:	687b      	ldr	r3, [r7, #4]
 801cc0e:	4618      	mov	r0, r3
 801cc10:	f000 f99b 	bl	801cf4a <_ZSt12__niter_baseIPfET_S1_>
 801cc14:	4603      	mov	r3, r0
 801cc16:	461a      	mov	r2, r3
 801cc18:	4629      	mov	r1, r5
 801cc1a:	4620      	mov	r0, r4
 801cc1c:	f000 f9a0 	bl	801cf60 <_ZSt13__copy_move_aILb0EPKfPfET1_T0_S4_S3_>
 801cc20:	4602      	mov	r2, r0
 801cc22:	1d3b      	adds	r3, r7, #4
 801cc24:	4611      	mov	r1, r2
 801cc26:	4618      	mov	r0, r3
 801cc28:	f000 f9ac 	bl	801cf84 <_ZSt12__niter_wrapIPfET_RKS1_S1_>
 801cc2c:	4603      	mov	r3, r0
    }
 801cc2e:	4618      	mov	r0, r3
 801cc30:	3710      	adds	r7, #16
 801cc32:	46bd      	mov	sp, r7
 801cc34:	bdb0      	pop	{r4, r5, r7, pc}

0801cc36 <_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801cc36:	b480      	push	{r7}
 801cc38:	b083      	sub	sp, #12
 801cc3a:	af00      	add	r7, sp, #0
 801cc3c:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801cc3e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801cc42:	4618      	mov	r0, r3
 801cc44:	370c      	adds	r7, #12
 801cc46:	46bd      	mov	sp, r7
 801cc48:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cc4c:	4770      	bx	lr

0801cc4e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 801cc4e:	b580      	push	{r7, lr}
 801cc50:	b086      	sub	sp, #24
 801cc52:	af00      	add	r7, sp, #0
 801cc54:	60f8      	str	r0, [r7, #12]
 801cc56:	60b9      	str	r1, [r7, #8]
 801cc58:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 801cc5a:	68ba      	ldr	r2, [r7, #8]
 801cc5c:	68fb      	ldr	r3, [r7, #12]
 801cc5e:	1ad3      	subs	r3, r2, r3
 801cc60:	109b      	asrs	r3, r3, #2
 801cc62:	617b      	str	r3, [r7, #20]
	  if (_Num)
 801cc64:	697b      	ldr	r3, [r7, #20]
 801cc66:	2b00      	cmp	r3, #0
 801cc68:	d006      	beq.n	801cc78 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 801cc6a:	697b      	ldr	r3, [r7, #20]
 801cc6c:	009b      	lsls	r3, r3, #2
 801cc6e:	461a      	mov	r2, r3
 801cc70:	68f9      	ldr	r1, [r7, #12]
 801cc72:	6878      	ldr	r0, [r7, #4]
 801cc74:	f004 fe30 	bl	80218d8 <memmove>
	  return __result + _Num;
 801cc78:	697b      	ldr	r3, [r7, #20]
 801cc7a:	009b      	lsls	r3, r3, #2
 801cc7c:	687a      	ldr	r2, [r7, #4]
 801cc7e:	4413      	add	r3, r2
	}
 801cc80:	4618      	mov	r0, r3
 801cc82:	3718      	adds	r7, #24
 801cc84:	46bd      	mov	sp, r7
 801cc86:	bd80      	pop	{r7, pc}

0801cc88 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_>:
	__copy_m(_II __first, _II __last, _OI __result)
 801cc88:	b082      	sub	sp, #8
 801cc8a:	b590      	push	{r4, r7, lr}
 801cc8c:	b089      	sub	sp, #36	; 0x24
 801cc8e:	af00      	add	r7, sp, #0
 801cc90:	60f8      	str	r0, [r7, #12]
 801cc92:	1d38      	adds	r0, r7, #4
 801cc94:	e880 0006 	stmia.w	r0, {r1, r2}
 801cc98:	637b      	str	r3, [r7, #52]	; 0x34
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 801cc9a:	1d3a      	adds	r2, r7, #4
 801cc9c:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801cca0:	4611      	mov	r1, r2
 801cca2:	4618      	mov	r0, r3
 801cca4:	f7fa fd60 	bl	8017768 <_ZStmiRKSt18_Bit_iterator_baseS1_>
 801cca8:	61f8      	str	r0, [r7, #28]
 801ccaa:	69fb      	ldr	r3, [r7, #28]
 801ccac:	2b00      	cmp	r3, #0
 801ccae:	dd20      	ble.n	801ccf2 <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_+0x6a>
	      *__result = *__first;
 801ccb0:	1d3b      	adds	r3, r7, #4
 801ccb2:	4618      	mov	r0, r3
 801ccb4:	f7fa fdf1 	bl	801789a <_ZNKSt19_Bit_const_iteratordeEv>
 801ccb8:	4603      	mov	r3, r0
 801ccba:	461c      	mov	r4, r3
 801ccbc:	f107 0314 	add.w	r3, r7, #20
 801ccc0:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 801ccc4:	4611      	mov	r1, r2
 801ccc6:	4618      	mov	r0, r3
 801ccc8:	f7fa fd77 	bl	80177ba <_ZNKSt13_Bit_iteratordeEv>
 801cccc:	f107 0314 	add.w	r3, r7, #20
 801ccd0:	4621      	mov	r1, r4
 801ccd2:	4618      	mov	r0, r3
 801ccd4:	f7fa fcd4 	bl	8017680 <_ZNSt14_Bit_referenceaSEb>
	      ++__first;
 801ccd8:	1d3b      	adds	r3, r7, #4
 801ccda:	4618      	mov	r0, r3
 801ccdc:	f7fa fdf6 	bl	80178cc <_ZNSt19_Bit_const_iteratorppEv>
	      ++__result;
 801cce0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801cce4:	4618      	mov	r0, r3
 801cce6:	f7fa fd7c 	bl	80177e2 <_ZNSt13_Bit_iteratorppEv>
	  for(_Distance __n = __last - __first; __n > 0; --__n)
 801ccea:	69fb      	ldr	r3, [r7, #28]
 801ccec:	3b01      	subs	r3, #1
 801ccee:	61fb      	str	r3, [r7, #28]
 801ccf0:	e7db      	b.n	801ccaa <_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_+0x22>
	  return __result;
 801ccf2:	68fb      	ldr	r3, [r7, #12]
 801ccf4:	461a      	mov	r2, r3
 801ccf6:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801ccfa:	e893 0003 	ldmia.w	r3, {r0, r1}
 801ccfe:	e882 0003 	stmia.w	r2, {r0, r1}
	}
 801cd02:	68f8      	ldr	r0, [r7, #12]
 801cd04:	3724      	adds	r7, #36	; 0x24
 801cd06:	46bd      	mov	sp, r7
 801cd08:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 801cd0c:	b002      	add	sp, #8
 801cd0e:	4770      	bx	lr

0801cd10 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clIiEENS0_16__variant_cookieESP_>:
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801cd10:	b5b0      	push	{r4, r5, r7, lr}
 801cd12:	b082      	sub	sp, #8
 801cd14:	af00      	add	r7, sp, #0
 801cd16:	6078      	str	r0, [r7, #4]
 801cd18:	6039      	str	r1, [r7, #0]
 801cd1a:	687b      	ldr	r3, [r7, #4]
 801cd1c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801cd1e:	4618      	mov	r0, r3
 801cd20:	f000 f93c 	bl	801cf9c <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801cd24:	4604      	mov	r4, r0
 801cd26:	6838      	ldr	r0, [r7, #0]
 801cd28:	f000 f943 	bl	801cfb2 <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 801cd2c:	4603      	mov	r3, r0
 801cd2e:	4619      	mov	r1, r3
 801cd30:	4620      	mov	r0, r4
 801cd32:	f000 f949 	bl	801cfc8 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEiEEvOT_OT0_>
	  return {};
 801cd36:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801cd38:	4618      	mov	r0, r3
 801cd3a:	3708      	adds	r7, #8
 801cd3c:	46bd      	mov	sp, r7
 801cd3e:	bdb0      	pop	{r4, r5, r7, pc}

0801cd40 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clIfEENS0_16__variant_cookieESP_>:
 801cd40:	b5b0      	push	{r4, r5, r7, lr}
 801cd42:	b082      	sub	sp, #8
 801cd44:	af00      	add	r7, sp, #0
 801cd46:	6078      	str	r0, [r7, #4]
 801cd48:	6039      	str	r1, [r7, #0]
 801cd4a:	687b      	ldr	r3, [r7, #4]
 801cd4c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801cd4e:	4618      	mov	r0, r3
 801cd50:	f000 f924 	bl	801cf9c <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801cd54:	4604      	mov	r4, r0
 801cd56:	6838      	ldr	r0, [r7, #0]
 801cd58:	f000 f950 	bl	801cffc <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 801cd5c:	4603      	mov	r3, r0
 801cd5e:	4619      	mov	r1, r3
 801cd60:	4620      	mov	r0, r4
 801cd62:	f000 f956 	bl	801d012 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEfEEvOT_OT0_>
	  return {};
 801cd66:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801cd68:	4618      	mov	r0, r3
 801cd6a:	3708      	adds	r7, #8
 801cd6c:	46bd      	mov	sp, r7
 801cd6e:	bdb0      	pop	{r4, r5, r7, pc}

0801cd70 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clIbEENS0_16__variant_cookieESP_>:
 801cd70:	b5b0      	push	{r4, r5, r7, lr}
 801cd72:	b082      	sub	sp, #8
 801cd74:	af00      	add	r7, sp, #0
 801cd76:	6078      	str	r0, [r7, #4]
 801cd78:	6039      	str	r1, [r7, #0]
 801cd7a:	687b      	ldr	r3, [r7, #4]
 801cd7c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801cd7e:	4618      	mov	r0, r3
 801cd80:	f000 f90c 	bl	801cf9c <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801cd84:	4604      	mov	r4, r0
 801cd86:	6838      	ldr	r0, [r7, #0]
 801cd88:	f000 f95d 	bl	801d046 <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 801cd8c:	4603      	mov	r3, r0
 801cd8e:	4619      	mov	r1, r3
 801cd90:	4620      	mov	r0, r4
 801cd92:	f000 f963 	bl	801d05c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEbEEvOT_OT0_>
	  return {};
 801cd96:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801cd98:	4618      	mov	r0, r3
 801cd9a:	3708      	adds	r7, #8
 801cd9c:	46bd      	mov	sp, r7
 801cd9e:	bdb0      	pop	{r4, r5, r7, pc}

0801cda0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clIS7_EENS0_16__variant_cookieESP_>:
 801cda0:	b5b0      	push	{r4, r5, r7, lr}
 801cda2:	b082      	sub	sp, #8
 801cda4:	af00      	add	r7, sp, #0
 801cda6:	6078      	str	r0, [r7, #4]
 801cda8:	6039      	str	r1, [r7, #0]
 801cdaa:	687b      	ldr	r3, [r7, #4]
 801cdac:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801cdae:	4618      	mov	r0, r3
 801cdb0:	f000 f8f4 	bl	801cf9c <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801cdb4:	4604      	mov	r4, r0
 801cdb6:	6838      	ldr	r0, [r7, #0]
 801cdb8:	f000 f96b 	bl	801d092 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801cdbc:	4603      	mov	r3, r0
 801cdbe:	4619      	mov	r1, r3
 801cdc0:	4620      	mov	r0, r4
 801cdc2:	f000 f971 	bl	801d0a8 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEES8_EEvOT_OT0_>
	  return {};
 801cdc6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801cdc8:	4618      	mov	r0, r3
 801cdca:	3708      	adds	r7, #8
 801cdcc:	46bd      	mov	sp, r7
 801cdce:	bdb0      	pop	{r4, r5, r7, pc}

0801cdd0 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clISA_EENS0_16__variant_cookieESP_>:
 801cdd0:	b5b0      	push	{r4, r5, r7, lr}
 801cdd2:	b082      	sub	sp, #8
 801cdd4:	af00      	add	r7, sp, #0
 801cdd6:	6078      	str	r0, [r7, #4]
 801cdd8:	6039      	str	r1, [r7, #0]
 801cdda:	687b      	ldr	r3, [r7, #4]
 801cddc:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801cdde:	4618      	mov	r0, r3
 801cde0:	f000 f8dc 	bl	801cf9c <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801cde4:	4604      	mov	r4, r0
 801cde6:	6838      	ldr	r0, [r7, #0]
 801cde8:	f000 f97a 	bl	801d0e0 <_ZSt7forwardIOSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 801cdec:	4603      	mov	r3, r0
 801cdee:	4619      	mov	r1, r3
 801cdf0:	4620      	mov	r0, r4
 801cdf2:	f000 f980 	bl	801d0f6 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEESB_EEvOT_OT0_>
	  return {};
 801cdf6:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801cdf8:	4618      	mov	r0, r3
 801cdfa:	3708      	adds	r7, #8
 801cdfc:	46bd      	mov	sp, r7
 801cdfe:	bdb0      	pop	{r4, r5, r7, pc}

0801ce00 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clISC_EENS0_16__variant_cookieESP_>:
 801ce00:	b5b0      	push	{r4, r5, r7, lr}
 801ce02:	b082      	sub	sp, #8
 801ce04:	af00      	add	r7, sp, #0
 801ce06:	6078      	str	r0, [r7, #4]
 801ce08:	6039      	str	r1, [r7, #0]
 801ce0a:	687b      	ldr	r3, [r7, #4]
 801ce0c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801ce0e:	4618      	mov	r0, r3
 801ce10:	f000 f8c4 	bl	801cf9c <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801ce14:	4604      	mov	r4, r0
 801ce16:	6838      	ldr	r0, [r7, #0]
 801ce18:	f000 f989 	bl	801d12e <_ZSt7forwardIOSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS4_E4typeE>
 801ce1c:	4603      	mov	r3, r0
 801ce1e:	4619      	mov	r1, r3
 801ce20:	4620      	mov	r0, r4
 801ce22:	f000 f9af 	bl	801d184 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEESD_EEvOT_OT0_>
	  return {};
 801ce26:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801ce28:	4618      	mov	r0, r3
 801ce2a:	3708      	adds	r7, #8
 801ce2c:	46bd      	mov	sp, r7
 801ce2e:	bdb0      	pop	{r4, r5, r7, pc}

0801ce30 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clISE_EENS0_16__variant_cookieESP_>:
 801ce30:	b5b0      	push	{r4, r5, r7, lr}
 801ce32:	b082      	sub	sp, #8
 801ce34:	af00      	add	r7, sp, #0
 801ce36:	6078      	str	r0, [r7, #4]
 801ce38:	6039      	str	r1, [r7, #0]
 801ce3a:	687b      	ldr	r3, [r7, #4]
 801ce3c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801ce3e:	4618      	mov	r0, r3
 801ce40:	f000 f8ac 	bl	801cf9c <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801ce44:	4604      	mov	r4, r0
 801ce46:	6838      	ldr	r0, [r7, #0]
 801ce48:	f000 f9b8 	bl	801d1bc <_ZSt7forwardIOSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS4_E4typeE>
 801ce4c:	4603      	mov	r3, r0
 801ce4e:	4619      	mov	r1, r3
 801ce50:	4620      	mov	r0, r4
 801ce52:	f000 f9de 	bl	801d212 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEESF_EEvOT_OT0_>
	  return {};
 801ce56:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801ce58:	4618      	mov	r0, r3
 801ce5a:	3708      	adds	r7, #8
 801ce5c:	46bd      	mov	sp, r7
 801ce5e:	bdb0      	pop	{r4, r5, r7, pc}

0801ce60 <_ZZNSt8__detail9__variant19__variant_constructIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EES8_IiSaIiEES8_IfSaIfEES8_IbSaIbEEERNS0_15_Move_ctor_baseILb0EJifbS7_SA_SC_SE_SG_EEESI_EEvOT0_OT1_ENUlOT_E_clISG_EENS0_16__variant_cookieESP_>:
 801ce60:	b5b0      	push	{r4, r5, r7, lr}
 801ce62:	b082      	sub	sp, #8
 801ce64:	af00      	add	r7, sp, #0
 801ce66:	6078      	str	r0, [r7, #4]
 801ce68:	6039      	str	r1, [r7, #0]
 801ce6a:	687b      	ldr	r3, [r7, #4]
 801ce6c:	681b      	ldr	r3, [r3, #0]
	  __variant_construct_single(std::forward<_Tp>(__lhs),
 801ce6e:	4618      	mov	r0, r3
 801ce70:	f000 f894 	bl	801cf9c <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>
 801ce74:	4604      	mov	r4, r0
 801ce76:	6838      	ldr	r0, [r7, #0]
 801ce78:	f000 f9e7 	bl	801d24a <_ZSt7forwardIOSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS4_E4typeE>
 801ce7c:	4603      	mov	r3, r0
 801ce7e:	4619      	mov	r1, r3
 801ce80:	4620      	mov	r0, r4
 801ce82:	f000 fa21 	bl	801d2c8 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEESH_EEvOT_OT0_>
	  return {};
 801ce86:	462b      	mov	r3, r5
      __do_visit([&__lhs](auto&& __rhs_mem) mutable
 801ce88:	4618      	mov	r0, r3
 801ce8a:	3708      	adds	r7, #8
 801ce8c:	46bd      	mov	sp, r7
 801ce8e:	bdb0      	pop	{r4, r5, r7, pc}

0801ce90 <_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801ce90:	b480      	push	{r7}
 801ce92:	b083      	sub	sp, #12
 801ce94:	af00      	add	r7, sp, #0
 801ce96:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801ce98:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801ce9c:	4618      	mov	r0, r3
 801ce9e:	370c      	adds	r7, #12
 801cea0:	46bd      	mov	sp, r7
 801cea2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cea6:	4770      	bx	lr

0801cea8 <_ZSt12__niter_baseIPKiSt6vectorIiSaIiEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 801cea8:	b580      	push	{r7, lr}
 801ceaa:	b082      	sub	sp, #8
 801ceac:	af00      	add	r7, sp, #0
 801ceae:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 801ceb0:	1d3b      	adds	r3, r7, #4
 801ceb2:	4618      	mov	r0, r3
 801ceb4:	f000 fa24 	bl	801d300 <_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv>
 801ceb8:	4603      	mov	r3, r0
 801ceba:	681b      	ldr	r3, [r3, #0]
 801cebc:	4618      	mov	r0, r3
 801cebe:	3708      	adds	r7, #8
 801cec0:	46bd      	mov	sp, r7
 801cec2:	bd80      	pop	{r7, pc}

0801cec4 <_ZSt12__niter_baseIPiET_S1_>:
    __niter_base(_Iterator __it)
 801cec4:	b480      	push	{r7}
 801cec6:	b083      	sub	sp, #12
 801cec8:	af00      	add	r7, sp, #0
 801ceca:	6078      	str	r0, [r7, #4]
    { return __it; }
 801cecc:	687b      	ldr	r3, [r7, #4]
 801cece:	4618      	mov	r0, r3
 801ced0:	370c      	adds	r7, #12
 801ced2:	46bd      	mov	sp, r7
 801ced4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ced8:	4770      	bx	lr

0801ceda <_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 801ceda:	b580      	push	{r7, lr}
 801cedc:	b086      	sub	sp, #24
 801cede:	af00      	add	r7, sp, #0
 801cee0:	60f8      	str	r0, [r7, #12]
 801cee2:	60b9      	str	r1, [r7, #8]
 801cee4:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 801cee6:	2301      	movs	r3, #1
 801cee8:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 801ceea:	687a      	ldr	r2, [r7, #4]
 801ceec:	68b9      	ldr	r1, [r7, #8]
 801ceee:	68f8      	ldr	r0, [r7, #12]
 801cef0:	f000 fa11 	bl	801d316 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_>
 801cef4:	4603      	mov	r3, r0
    }
 801cef6:	4618      	mov	r0, r3
 801cef8:	3718      	adds	r7, #24
 801cefa:	46bd      	mov	sp, r7
 801cefc:	bd80      	pop	{r7, pc}

0801cefe <_ZSt12__niter_wrapIPiET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 801cefe:	b480      	push	{r7}
 801cf00:	b083      	sub	sp, #12
 801cf02:	af00      	add	r7, sp, #0
 801cf04:	6078      	str	r0, [r7, #4]
 801cf06:	6039      	str	r1, [r7, #0]
    { return __res; }
 801cf08:	683b      	ldr	r3, [r7, #0]
 801cf0a:	4618      	mov	r0, r3
 801cf0c:	370c      	adds	r7, #12
 801cf0e:	46bd      	mov	sp, r7
 801cf10:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf14:	4770      	bx	lr

0801cf16 <_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801cf16:	b480      	push	{r7}
 801cf18:	b083      	sub	sp, #12
 801cf1a:	af00      	add	r7, sp, #0
 801cf1c:	6078      	str	r0, [r7, #4]
	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801cf1e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 801cf22:	4618      	mov	r0, r3
 801cf24:	370c      	adds	r7, #12
 801cf26:	46bd      	mov	sp, r7
 801cf28:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf2c:	4770      	bx	lr

0801cf2e <_ZSt12__niter_baseIPKfSt6vectorIfSaIfEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE>:
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
 801cf2e:	b580      	push	{r7, lr}
 801cf30:	b082      	sub	sp, #8
 801cf32:	af00      	add	r7, sp, #0
 801cf34:	6078      	str	r0, [r7, #4]
    { return __it.base(); }
 801cf36:	1d3b      	adds	r3, r7, #4
 801cf38:	4618      	mov	r0, r3
 801cf3a:	f000 fa09 	bl	801d350 <_ZNK9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEE4baseEv>
 801cf3e:	4603      	mov	r3, r0
 801cf40:	681b      	ldr	r3, [r3, #0]
 801cf42:	4618      	mov	r0, r3
 801cf44:	3708      	adds	r7, #8
 801cf46:	46bd      	mov	sp, r7
 801cf48:	bd80      	pop	{r7, pc}

0801cf4a <_ZSt12__niter_baseIPfET_S1_>:
    __niter_base(_Iterator __it)
 801cf4a:	b480      	push	{r7}
 801cf4c:	b083      	sub	sp, #12
 801cf4e:	af00      	add	r7, sp, #0
 801cf50:	6078      	str	r0, [r7, #4]
    { return __it; }
 801cf52:	687b      	ldr	r3, [r7, #4]
 801cf54:	4618      	mov	r0, r3
 801cf56:	370c      	adds	r7, #12
 801cf58:	46bd      	mov	sp, r7
 801cf5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf5e:	4770      	bx	lr

0801cf60 <_ZSt13__copy_move_aILb0EPKfPfET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 801cf60:	b580      	push	{r7, lr}
 801cf62:	b086      	sub	sp, #24
 801cf64:	af00      	add	r7, sp, #0
 801cf66:	60f8      	str	r0, [r7, #12]
 801cf68:	60b9      	str	r1, [r7, #8]
 801cf6a:	607a      	str	r2, [r7, #4]
      const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 801cf6c:	2301      	movs	r3, #1
 801cf6e:	75fb      	strb	r3, [r7, #23]
			      _Category>::__copy_m(__first, __last, __result);
 801cf70:	687a      	ldr	r2, [r7, #4]
 801cf72:	68b9      	ldr	r1, [r7, #8]
 801cf74:	68f8      	ldr	r0, [r7, #12]
 801cf76:	f000 f9f6 	bl	801d366 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_>
 801cf7a:	4603      	mov	r3, r0
    }
 801cf7c:	4618      	mov	r0, r3
 801cf7e:	3718      	adds	r7, #24
 801cf80:	46bd      	mov	sp, r7
 801cf82:	bd80      	pop	{r7, pc}

0801cf84 <_ZSt12__niter_wrapIPfET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 801cf84:	b480      	push	{r7}
 801cf86:	b083      	sub	sp, #12
 801cf88:	af00      	add	r7, sp, #0
 801cf8a:	6078      	str	r0, [r7, #4]
 801cf8c:	6039      	str	r1, [r7, #0]
    { return __res; }
 801cf8e:	683b      	ldr	r3, [r7, #0]
 801cf90:	4618      	mov	r0, r3
 801cf92:	370c      	adds	r7, #12
 801cf94:	46bd      	mov	sp, r7
 801cf96:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf9a:	4770      	bx	lr

0801cf9c <_ZSt7forwardIRNSt8__detail9__variant15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEOT_RNSt16remove_referenceISK_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801cf9c:	b480      	push	{r7}
 801cf9e:	b083      	sub	sp, #12
 801cfa0:	af00      	add	r7, sp, #0
 801cfa2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801cfa4:	687b      	ldr	r3, [r7, #4]
 801cfa6:	4618      	mov	r0, r3
 801cfa8:	370c      	adds	r7, #12
 801cfaa:	46bd      	mov	sp, r7
 801cfac:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cfb0:	4770      	bx	lr

0801cfb2 <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801cfb2:	b480      	push	{r7}
 801cfb4:	b083      	sub	sp, #12
 801cfb6:	af00      	add	r7, sp, #0
 801cfb8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801cfba:	687b      	ldr	r3, [r7, #4]
 801cfbc:	4618      	mov	r0, r3
 801cfbe:	370c      	adds	r7, #12
 801cfc0:	46bd      	mov	sp, r7
 801cfc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cfc6:	4770      	bx	lr

0801cfc8 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEiEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801cfc8:	b590      	push	{r4, r7, lr}
 801cfca:	b085      	sub	sp, #20
 801cfcc:	af00      	add	r7, sp, #0
 801cfce:	6078      	str	r0, [r7, #4]
 801cfd0:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801cfd2:	687b      	ldr	r3, [r7, #4]
 801cfd4:	4618      	mov	r0, r3
 801cfd6:	f7fd fa7b 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801cfda:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801cfdc:	6838      	ldr	r0, [r7, #0]
 801cfde:	f7ff ffe8 	bl	801cfb2 <_ZSt7forwardIOiEOT_RNSt16remove_referenceIS1_E4typeE>
 801cfe2:	4603      	mov	r3, r0
        ::new (__storage)
 801cfe4:	681c      	ldr	r4, [r3, #0]
 801cfe6:	68fb      	ldr	r3, [r7, #12]
 801cfe8:	4619      	mov	r1, r3
 801cfea:	2004      	movs	r0, #4
 801cfec:	f7e4 f81e 	bl	800102c <_ZnwjPv>
 801cff0:	4603      	mov	r3, r0
 801cff2:	601c      	str	r4, [r3, #0]
    }
 801cff4:	bf00      	nop
 801cff6:	3714      	adds	r7, #20
 801cff8:	46bd      	mov	sp, r7
 801cffa:	bd90      	pop	{r4, r7, pc}

0801cffc <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801cffc:	b480      	push	{r7}
 801cffe:	b083      	sub	sp, #12
 801d000:	af00      	add	r7, sp, #0
 801d002:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801d004:	687b      	ldr	r3, [r7, #4]
 801d006:	4618      	mov	r0, r3
 801d008:	370c      	adds	r7, #12
 801d00a:	46bd      	mov	sp, r7
 801d00c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d010:	4770      	bx	lr

0801d012 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEfEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801d012:	b590      	push	{r4, r7, lr}
 801d014:	b085      	sub	sp, #20
 801d016:	af00      	add	r7, sp, #0
 801d018:	6078      	str	r0, [r7, #4]
 801d01a:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801d01c:	687b      	ldr	r3, [r7, #4]
 801d01e:	4618      	mov	r0, r3
 801d020:	f7fd fa56 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801d024:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801d026:	6838      	ldr	r0, [r7, #0]
 801d028:	f7ff ffe8 	bl	801cffc <_ZSt7forwardIOfEOT_RNSt16remove_referenceIS1_E4typeE>
 801d02c:	4603      	mov	r3, r0
        ::new (__storage)
 801d02e:	681c      	ldr	r4, [r3, #0]
 801d030:	68fb      	ldr	r3, [r7, #12]
 801d032:	4619      	mov	r1, r3
 801d034:	2004      	movs	r0, #4
 801d036:	f7e3 fff9 	bl	800102c <_ZnwjPv>
 801d03a:	4603      	mov	r3, r0
 801d03c:	601c      	str	r4, [r3, #0]
    }
 801d03e:	bf00      	nop
 801d040:	3714      	adds	r7, #20
 801d042:	46bd      	mov	sp, r7
 801d044:	bd90      	pop	{r4, r7, pc}

0801d046 <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801d046:	b480      	push	{r7}
 801d048:	b083      	sub	sp, #12
 801d04a:	af00      	add	r7, sp, #0
 801d04c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801d04e:	687b      	ldr	r3, [r7, #4]
 801d050:	4618      	mov	r0, r3
 801d052:	370c      	adds	r7, #12
 801d054:	46bd      	mov	sp, r7
 801d056:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d05a:	4770      	bx	lr

0801d05c <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEbEEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801d05c:	b590      	push	{r4, r7, lr}
 801d05e:	b085      	sub	sp, #20
 801d060:	af00      	add	r7, sp, #0
 801d062:	6078      	str	r0, [r7, #4]
 801d064:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801d066:	687b      	ldr	r3, [r7, #4]
 801d068:	4618      	mov	r0, r3
 801d06a:	f7fd fa31 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801d06e:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801d070:	6838      	ldr	r0, [r7, #0]
 801d072:	f7ff ffe8 	bl	801d046 <_ZSt7forwardIObEOT_RNSt16remove_referenceIS1_E4typeE>
 801d076:	4603      	mov	r3, r0
        ::new (__storage)
 801d078:	781c      	ldrb	r4, [r3, #0]
 801d07a:	68fb      	ldr	r3, [r7, #12]
 801d07c:	4619      	mov	r1, r3
 801d07e:	2001      	movs	r0, #1
 801d080:	f7e3 ffd4 	bl	800102c <_ZnwjPv>
 801d084:	4603      	mov	r3, r0
 801d086:	4622      	mov	r2, r4
 801d088:	701a      	strb	r2, [r3, #0]
    }
 801d08a:	bf00      	nop
 801d08c:	3714      	adds	r7, #20
 801d08e:	46bd      	mov	sp, r7
 801d090:	bd90      	pop	{r4, r7, pc}

0801d092 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801d092:	b480      	push	{r7}
 801d094:	b083      	sub	sp, #12
 801d096:	af00      	add	r7, sp, #0
 801d098:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801d09a:	687b      	ldr	r3, [r7, #4]
 801d09c:	4618      	mov	r0, r3
 801d09e:	370c      	adds	r7, #12
 801d0a0:	46bd      	mov	sp, r7
 801d0a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d0a6:	4770      	bx	lr

0801d0a8 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEES8_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801d0a8:	b590      	push	{r4, r7, lr}
 801d0aa:	b085      	sub	sp, #20
 801d0ac:	af00      	add	r7, sp, #0
 801d0ae:	6078      	str	r0, [r7, #4]
 801d0b0:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801d0b2:	687b      	ldr	r3, [r7, #4]
 801d0b4:	4618      	mov	r0, r3
 801d0b6:	f7fd fa0b 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801d0ba:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801d0bc:	6838      	ldr	r0, [r7, #0]
 801d0be:	f7ff ffe8 	bl	801d092 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
 801d0c2:	4604      	mov	r4, r0
        ::new (__storage)
 801d0c4:	68fb      	ldr	r3, [r7, #12]
 801d0c6:	4619      	mov	r1, r3
 801d0c8:	2018      	movs	r0, #24
 801d0ca:	f7e3 ffaf 	bl	800102c <_ZnwjPv>
 801d0ce:	4603      	mov	r3, r0
 801d0d0:	4621      	mov	r1, r4
 801d0d2:	4618      	mov	r0, r3
 801d0d4:	f003 fa55 	bl	8020582 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    }
 801d0d8:	bf00      	nop
 801d0da:	3714      	adds	r7, #20
 801d0dc:	46bd      	mov	sp, r7
 801d0de:	bd90      	pop	{r4, r7, pc}

0801d0e0 <_ZSt7forwardIOSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801d0e0:	b480      	push	{r7}
 801d0e2:	b083      	sub	sp, #12
 801d0e4:	af00      	add	r7, sp, #0
 801d0e6:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801d0e8:	687b      	ldr	r3, [r7, #4]
 801d0ea:	4618      	mov	r0, r3
 801d0ec:	370c      	adds	r7, #12
 801d0ee:	46bd      	mov	sp, r7
 801d0f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d0f4:	4770      	bx	lr

0801d0f6 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEESB_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801d0f6:	b590      	push	{r4, r7, lr}
 801d0f8:	b085      	sub	sp, #20
 801d0fa:	af00      	add	r7, sp, #0
 801d0fc:	6078      	str	r0, [r7, #4]
 801d0fe:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801d100:	687b      	ldr	r3, [r7, #4]
 801d102:	4618      	mov	r0, r3
 801d104:	f7fd f9e4 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801d108:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801d10a:	6838      	ldr	r0, [r7, #0]
 801d10c:	f7ff ffe8 	bl	801d0e0 <_ZSt7forwardIOSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEEOT_RNSt16remove_referenceISA_E4typeE>
 801d110:	4604      	mov	r4, r0
        ::new (__storage)
 801d112:	68fb      	ldr	r3, [r7, #12]
 801d114:	4619      	mov	r1, r3
 801d116:	200c      	movs	r0, #12
 801d118:	f7e3 ff88 	bl	800102c <_ZnwjPv>
 801d11c:	4603      	mov	r3, r0
 801d11e:	4621      	mov	r1, r4
 801d120:	4618      	mov	r0, r3
 801d122:	f7fb fb2b 	bl	801877c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EOS7_>
    }
 801d126:	bf00      	nop
 801d128:	3714      	adds	r7, #20
 801d12a:	46bd      	mov	sp, r7
 801d12c:	bd90      	pop	{r4, r7, pc}

0801d12e <_ZSt7forwardIOSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801d12e:	b480      	push	{r7}
 801d130:	b083      	sub	sp, #12
 801d132:	af00      	add	r7, sp, #0
 801d134:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801d136:	687b      	ldr	r3, [r7, #4]
 801d138:	4618      	mov	r0, r3
 801d13a:	370c      	adds	r7, #12
 801d13c:	46bd      	mov	sp, r7
 801d13e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d142:	4770      	bx	lr

0801d144 <_ZNSt12_Vector_baseIiSaIiEEC1EOS1_>:
      _Vector_base(_Vector_base&&) = default;
 801d144:	b580      	push	{r7, lr}
 801d146:	b082      	sub	sp, #8
 801d148:	af00      	add	r7, sp, #0
 801d14a:	6078      	str	r0, [r7, #4]
 801d14c:	6039      	str	r1, [r7, #0]
 801d14e:	687b      	ldr	r3, [r7, #4]
 801d150:	683a      	ldr	r2, [r7, #0]
 801d152:	4611      	mov	r1, r2
 801d154:	4618      	mov	r0, r3
 801d156:	f000 f923 	bl	801d3a0 <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1EOS2_>
 801d15a:	687b      	ldr	r3, [r7, #4]
 801d15c:	4618      	mov	r0, r3
 801d15e:	3708      	adds	r7, #8
 801d160:	46bd      	mov	sp, r7
 801d162:	bd80      	pop	{r7, pc}

0801d164 <_ZNSt6vectorIiSaIiEEC1EOS1_>:
      vector(vector&&) noexcept = default;
 801d164:	b580      	push	{r7, lr}
 801d166:	b082      	sub	sp, #8
 801d168:	af00      	add	r7, sp, #0
 801d16a:	6078      	str	r0, [r7, #4]
 801d16c:	6039      	str	r1, [r7, #0]
 801d16e:	687b      	ldr	r3, [r7, #4]
 801d170:	683a      	ldr	r2, [r7, #0]
 801d172:	4611      	mov	r1, r2
 801d174:	4618      	mov	r0, r3
 801d176:	f7ff ffe5 	bl	801d144 <_ZNSt12_Vector_baseIiSaIiEEC1EOS1_>
 801d17a:	687b      	ldr	r3, [r7, #4]
 801d17c:	4618      	mov	r0, r3
 801d17e:	3708      	adds	r7, #8
 801d180:	46bd      	mov	sp, r7
 801d182:	bd80      	pop	{r7, pc}

0801d184 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEESD_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801d184:	b590      	push	{r4, r7, lr}
 801d186:	b085      	sub	sp, #20
 801d188:	af00      	add	r7, sp, #0
 801d18a:	6078      	str	r0, [r7, #4]
 801d18c:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801d18e:	687b      	ldr	r3, [r7, #4]
 801d190:	4618      	mov	r0, r3
 801d192:	f7fd f99d 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801d196:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801d198:	6838      	ldr	r0, [r7, #0]
 801d19a:	f7ff ffc8 	bl	801d12e <_ZSt7forwardIOSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS4_E4typeE>
 801d19e:	4604      	mov	r4, r0
        ::new (__storage)
 801d1a0:	68fb      	ldr	r3, [r7, #12]
 801d1a2:	4619      	mov	r1, r3
 801d1a4:	200c      	movs	r0, #12
 801d1a6:	f7e3 ff41 	bl	800102c <_ZnwjPv>
 801d1aa:	4603      	mov	r3, r0
 801d1ac:	4621      	mov	r1, r4
 801d1ae:	4618      	mov	r0, r3
 801d1b0:	f7ff ffd8 	bl	801d164 <_ZNSt6vectorIiSaIiEEC1EOS1_>
    }
 801d1b4:	bf00      	nop
 801d1b6:	3714      	adds	r7, #20
 801d1b8:	46bd      	mov	sp, r7
 801d1ba:	bd90      	pop	{r4, r7, pc}

0801d1bc <_ZSt7forwardIOSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801d1bc:	b480      	push	{r7}
 801d1be:	b083      	sub	sp, #12
 801d1c0:	af00      	add	r7, sp, #0
 801d1c2:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801d1c4:	687b      	ldr	r3, [r7, #4]
 801d1c6:	4618      	mov	r0, r3
 801d1c8:	370c      	adds	r7, #12
 801d1ca:	46bd      	mov	sp, r7
 801d1cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d1d0:	4770      	bx	lr

0801d1d2 <_ZNSt12_Vector_baseIfSaIfEEC1EOS1_>:
      _Vector_base(_Vector_base&&) = default;
 801d1d2:	b580      	push	{r7, lr}
 801d1d4:	b082      	sub	sp, #8
 801d1d6:	af00      	add	r7, sp, #0
 801d1d8:	6078      	str	r0, [r7, #4]
 801d1da:	6039      	str	r1, [r7, #0]
 801d1dc:	687b      	ldr	r3, [r7, #4]
 801d1de:	683a      	ldr	r2, [r7, #0]
 801d1e0:	4611      	mov	r1, r2
 801d1e2:	4618      	mov	r0, r3
 801d1e4:	f000 f8f7 	bl	801d3d6 <_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1EOS2_>
 801d1e8:	687b      	ldr	r3, [r7, #4]
 801d1ea:	4618      	mov	r0, r3
 801d1ec:	3708      	adds	r7, #8
 801d1ee:	46bd      	mov	sp, r7
 801d1f0:	bd80      	pop	{r7, pc}

0801d1f2 <_ZNSt6vectorIfSaIfEEC1EOS1_>:
      vector(vector&&) noexcept = default;
 801d1f2:	b580      	push	{r7, lr}
 801d1f4:	b082      	sub	sp, #8
 801d1f6:	af00      	add	r7, sp, #0
 801d1f8:	6078      	str	r0, [r7, #4]
 801d1fa:	6039      	str	r1, [r7, #0]
 801d1fc:	687b      	ldr	r3, [r7, #4]
 801d1fe:	683a      	ldr	r2, [r7, #0]
 801d200:	4611      	mov	r1, r2
 801d202:	4618      	mov	r0, r3
 801d204:	f7ff ffe5 	bl	801d1d2 <_ZNSt12_Vector_baseIfSaIfEEC1EOS1_>
 801d208:	687b      	ldr	r3, [r7, #4]
 801d20a:	4618      	mov	r0, r3
 801d20c:	3708      	adds	r7, #8
 801d20e:	46bd      	mov	sp, r7
 801d210:	bd80      	pop	{r7, pc}

0801d212 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEESF_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801d212:	b590      	push	{r4, r7, lr}
 801d214:	b085      	sub	sp, #20
 801d216:	af00      	add	r7, sp, #0
 801d218:	6078      	str	r0, [r7, #4]
 801d21a:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801d21c:	687b      	ldr	r3, [r7, #4]
 801d21e:	4618      	mov	r0, r3
 801d220:	f7fd f956 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801d224:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801d226:	6838      	ldr	r0, [r7, #0]
 801d228:	f7ff ffc8 	bl	801d1bc <_ZSt7forwardIOSt6vectorIfSaIfEEEOT_RNSt16remove_referenceIS4_E4typeE>
 801d22c:	4604      	mov	r4, r0
        ::new (__storage)
 801d22e:	68fb      	ldr	r3, [r7, #12]
 801d230:	4619      	mov	r1, r3
 801d232:	200c      	movs	r0, #12
 801d234:	f7e3 fefa 	bl	800102c <_ZnwjPv>
 801d238:	4603      	mov	r3, r0
 801d23a:	4621      	mov	r1, r4
 801d23c:	4618      	mov	r0, r3
 801d23e:	f7ff ffd8 	bl	801d1f2 <_ZNSt6vectorIfSaIfEEC1EOS1_>
    }
 801d242:	bf00      	nop
 801d244:	3714      	adds	r7, #20
 801d246:	46bd      	mov	sp, r7
 801d248:	bd90      	pop	{r4, r7, pc}

0801d24a <_ZSt7forwardIOSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 801d24a:	b480      	push	{r7}
 801d24c:	b083      	sub	sp, #12
 801d24e:	af00      	add	r7, sp, #0
 801d250:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 801d252:	687b      	ldr	r3, [r7, #4]
 801d254:	4618      	mov	r0, r3
 801d256:	370c      	adds	r7, #12
 801d258:	46bd      	mov	sp, r7
 801d25a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d25e:	4770      	bx	lr

0801d260 <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1EOS2_>:
	_Bvector_impl(_Bvector_impl&&) = default;
 801d260:	b580      	push	{r7, lr}
 801d262:	b082      	sub	sp, #8
 801d264:	af00      	add	r7, sp, #0
 801d266:	6078      	str	r0, [r7, #4]
 801d268:	6039      	str	r1, [r7, #0]
 801d26a:	6839      	ldr	r1, [r7, #0]
 801d26c:	6878      	ldr	r0, [r7, #4]
 801d26e:	f7fe ff65 	bl	801c13c <_ZNSaImEC1ERKS_>
 801d272:	687b      	ldr	r3, [r7, #4]
 801d274:	683a      	ldr	r2, [r7, #0]
 801d276:	4611      	mov	r1, r2
 801d278:	4618      	mov	r0, r3
 801d27a:	f000 f8c7 	bl	801d40c <_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1EOS2_>
 801d27e:	687b      	ldr	r3, [r7, #4]
 801d280:	4618      	mov	r0, r3
 801d282:	3708      	adds	r7, #8
 801d284:	46bd      	mov	sp, r7
 801d286:	bd80      	pop	{r7, pc}

0801d288 <_ZNSt13_Bvector_baseISaIbEEC1EOS1_>:
      _Bvector_base(_Bvector_base&&) = default;
 801d288:	b580      	push	{r7, lr}
 801d28a:	b082      	sub	sp, #8
 801d28c:	af00      	add	r7, sp, #0
 801d28e:	6078      	str	r0, [r7, #4]
 801d290:	6039      	str	r1, [r7, #0]
 801d292:	687b      	ldr	r3, [r7, #4]
 801d294:	683a      	ldr	r2, [r7, #0]
 801d296:	4611      	mov	r1, r2
 801d298:	4618      	mov	r0, r3
 801d29a:	f7ff ffe1 	bl	801d260 <_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1EOS2_>
 801d29e:	687b      	ldr	r3, [r7, #4]
 801d2a0:	4618      	mov	r0, r3
 801d2a2:	3708      	adds	r7, #8
 801d2a4:	46bd      	mov	sp, r7
 801d2a6:	bd80      	pop	{r7, pc}

0801d2a8 <_ZNSt6vectorIbSaIbEEC1EOS1_>:
      vector(vector&&) = default;
 801d2a8:	b580      	push	{r7, lr}
 801d2aa:	b082      	sub	sp, #8
 801d2ac:	af00      	add	r7, sp, #0
 801d2ae:	6078      	str	r0, [r7, #4]
 801d2b0:	6039      	str	r1, [r7, #0]
 801d2b2:	687b      	ldr	r3, [r7, #4]
 801d2b4:	683a      	ldr	r2, [r7, #0]
 801d2b6:	4611      	mov	r1, r2
 801d2b8:	4618      	mov	r0, r3
 801d2ba:	f7ff ffe5 	bl	801d288 <_ZNSt13_Bvector_baseISaIbEEC1EOS1_>
 801d2be:	687b      	ldr	r3, [r7, #4]
 801d2c0:	4618      	mov	r0, r3
 801d2c2:	3708      	adds	r7, #8
 801d2c4:	46bd      	mov	sp, r7
 801d2c6:	bd80      	pop	{r7, pc}

0801d2c8 <_ZNSt8__detail9__variant26__variant_construct_singleIRNS0_15_Move_ctor_baseILb0EJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEESH_EEvOT_OT0_>:
    void __variant_construct_single(_Tp&& __lhs, _Up&& __rhs_mem)
 801d2c8:	b590      	push	{r4, r7, lr}
 801d2ca:	b085      	sub	sp, #20
 801d2cc:	af00      	add	r7, sp, #0
 801d2ce:	6078      	str	r0, [r7, #4]
 801d2d0:	6039      	str	r1, [r7, #0]
      void* __storage = std::addressof(__lhs._M_u);
 801d2d2:	687b      	ldr	r3, [r7, #4]
 801d2d4:	4618      	mov	r0, r3
 801d2d6:	f7fd f8fb 	bl	801a4d0 <_ZSt9addressofINSt8__detail9__variant15_Variadic_unionIJifbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS8_SaIS8_EES9_IiSaIiEES9_IfSaIfEES9_IbSaIbEEEEEEPT_RSJ_>
 801d2da:	60f8      	str	r0, [r7, #12]
	  _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));
 801d2dc:	6838      	ldr	r0, [r7, #0]
 801d2de:	f7ff ffb4 	bl	801d24a <_ZSt7forwardIOSt6vectorIbSaIbEEEOT_RNSt16remove_referenceIS4_E4typeE>
 801d2e2:	4604      	mov	r4, r0
        ::new (__storage)
 801d2e4:	68fb      	ldr	r3, [r7, #12]
 801d2e6:	4619      	mov	r1, r3
 801d2e8:	2014      	movs	r0, #20
 801d2ea:	f7e3 fe9f 	bl	800102c <_ZnwjPv>
 801d2ee:	4603      	mov	r3, r0
 801d2f0:	4621      	mov	r1, r4
 801d2f2:	4618      	mov	r0, r3
 801d2f4:	f7ff ffd8 	bl	801d2a8 <_ZNSt6vectorIbSaIbEEC1EOS1_>
    }
 801d2f8:	bf00      	nop
 801d2fa:	3714      	adds	r7, #20
 801d2fc:	46bd      	mov	sp, r7
 801d2fe:	bd90      	pop	{r4, r7, pc}

0801d300 <_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801d300:	b480      	push	{r7}
 801d302:	b083      	sub	sp, #12
 801d304:	af00      	add	r7, sp, #0
 801d306:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801d308:	687b      	ldr	r3, [r7, #4]
 801d30a:	4618      	mov	r0, r3
 801d30c:	370c      	adds	r7, #12
 801d30e:	46bd      	mov	sp, r7
 801d310:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d314:	4770      	bx	lr

0801d316 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 801d316:	b580      	push	{r7, lr}
 801d318:	b086      	sub	sp, #24
 801d31a:	af00      	add	r7, sp, #0
 801d31c:	60f8      	str	r0, [r7, #12]
 801d31e:	60b9      	str	r1, [r7, #8]
 801d320:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 801d322:	68ba      	ldr	r2, [r7, #8]
 801d324:	68fb      	ldr	r3, [r7, #12]
 801d326:	1ad3      	subs	r3, r2, r3
 801d328:	109b      	asrs	r3, r3, #2
 801d32a:	617b      	str	r3, [r7, #20]
	  if (_Num)
 801d32c:	697b      	ldr	r3, [r7, #20]
 801d32e:	2b00      	cmp	r3, #0
 801d330:	d006      	beq.n	801d340 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 801d332:	697b      	ldr	r3, [r7, #20]
 801d334:	009b      	lsls	r3, r3, #2
 801d336:	461a      	mov	r2, r3
 801d338:	68f9      	ldr	r1, [r7, #12]
 801d33a:	6878      	ldr	r0, [r7, #4]
 801d33c:	f004 facc 	bl	80218d8 <memmove>
	  return __result + _Num;
 801d340:	697b      	ldr	r3, [r7, #20]
 801d342:	009b      	lsls	r3, r3, #2
 801d344:	687a      	ldr	r2, [r7, #4]
 801d346:	4413      	add	r3, r2
	}
 801d348:	4618      	mov	r0, r3
 801d34a:	3718      	adds	r7, #24
 801d34c:	46bd      	mov	sp, r7
 801d34e:	bd80      	pop	{r7, pc}

0801d350 <_ZNK9__gnu_cxx17__normal_iteratorIPKfSt6vectorIfSaIfEEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
 801d350:	b480      	push	{r7}
 801d352:	b083      	sub	sp, #12
 801d354:	af00      	add	r7, sp, #0
 801d356:	6078      	str	r0, [r7, #4]
      { return _M_current; }
 801d358:	687b      	ldr	r3, [r7, #4]
 801d35a:	4618      	mov	r0, r3
 801d35c:	370c      	adds	r7, #12
 801d35e:	46bd      	mov	sp, r7
 801d360:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d364:	4770      	bx	lr

0801d366 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 801d366:	b580      	push	{r7, lr}
 801d368:	b086      	sub	sp, #24
 801d36a:	af00      	add	r7, sp, #0
 801d36c:	60f8      	str	r0, [r7, #12]
 801d36e:	60b9      	str	r1, [r7, #8]
 801d370:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 801d372:	68ba      	ldr	r2, [r7, #8]
 801d374:	68fb      	ldr	r3, [r7, #12]
 801d376:	1ad3      	subs	r3, r2, r3
 801d378:	109b      	asrs	r3, r3, #2
 801d37a:	617b      	str	r3, [r7, #20]
	  if (_Num)
 801d37c:	697b      	ldr	r3, [r7, #20]
 801d37e:	2b00      	cmp	r3, #0
 801d380:	d006      	beq.n	801d390 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIfEEPT_PKS3_S6_S4_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 801d382:	697b      	ldr	r3, [r7, #20]
 801d384:	009b      	lsls	r3, r3, #2
 801d386:	461a      	mov	r2, r3
 801d388:	68f9      	ldr	r1, [r7, #12]
 801d38a:	6878      	ldr	r0, [r7, #4]
 801d38c:	f004 faa4 	bl	80218d8 <memmove>
	  return __result + _Num;
 801d390:	697b      	ldr	r3, [r7, #20]
 801d392:	009b      	lsls	r3, r3, #2
 801d394:	687a      	ldr	r2, [r7, #4]
 801d396:	4413      	add	r3, r2
	}
 801d398:	4618      	mov	r0, r3
 801d39a:	3718      	adds	r7, #24
 801d39c:	46bd      	mov	sp, r7
 801d39e:	bd80      	pop	{r7, pc}

0801d3a0 <_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC1EOS2_>:
	_Vector_impl(_Vector_impl&& __x) noexcept
 801d3a0:	b590      	push	{r4, r7, lr}
 801d3a2:	b083      	sub	sp, #12
 801d3a4:	af00      	add	r7, sp, #0
 801d3a6:	6078      	str	r0, [r7, #4]
 801d3a8:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 801d3aa:	6838      	ldr	r0, [r7, #0]
 801d3ac:	f000 f84d 	bl	801d44a <_ZSt4moveIRNSt12_Vector_baseIiSaIiEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_>
 801d3b0:	4603      	mov	r3, r0
 801d3b2:	4619      	mov	r1, r3
 801d3b4:	6878      	ldr	r0, [r7, #4]
 801d3b6:	f7fe fe35 	bl	801c024 <_ZNSaIiEC1ERKS_>
 801d3ba:	687c      	ldr	r4, [r7, #4]
 801d3bc:	6838      	ldr	r0, [r7, #0]
 801d3be:	f000 f844 	bl	801d44a <_ZSt4moveIRNSt12_Vector_baseIiSaIiEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_>
 801d3c2:	4603      	mov	r3, r0
 801d3c4:	4619      	mov	r1, r3
 801d3c6:	4620      	mov	r0, r4
 801d3c8:	f000 f84a 	bl	801d460 <_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC1EOS2_>
	{ }
 801d3cc:	687b      	ldr	r3, [r7, #4]
 801d3ce:	4618      	mov	r0, r3
 801d3d0:	370c      	adds	r7, #12
 801d3d2:	46bd      	mov	sp, r7
 801d3d4:	bd90      	pop	{r4, r7, pc}

0801d3d6 <_ZNSt12_Vector_baseIfSaIfEE12_Vector_implC1EOS2_>:
	_Vector_impl(_Vector_impl&& __x) noexcept
 801d3d6:	b590      	push	{r4, r7, lr}
 801d3d8:	b083      	sub	sp, #12
 801d3da:	af00      	add	r7, sp, #0
 801d3dc:	6078      	str	r0, [r7, #4]
 801d3de:	6039      	str	r1, [r7, #0]
	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 801d3e0:	6838      	ldr	r0, [r7, #0]
 801d3e2:	f000 f860 	bl	801d4a6 <_ZSt4moveIRNSt12_Vector_baseIfSaIfEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_>
 801d3e6:	4603      	mov	r3, r0
 801d3e8:	4619      	mov	r1, r3
 801d3ea:	6878      	ldr	r0, [r7, #4]
 801d3ec:	f7fe fe60 	bl	801c0b0 <_ZNSaIfEC1ERKS_>
 801d3f0:	687c      	ldr	r4, [r7, #4]
 801d3f2:	6838      	ldr	r0, [r7, #0]
 801d3f4:	f000 f857 	bl	801d4a6 <_ZSt4moveIRNSt12_Vector_baseIfSaIfEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_>
 801d3f8:	4603      	mov	r3, r0
 801d3fa:	4619      	mov	r1, r3
 801d3fc:	4620      	mov	r0, r4
 801d3fe:	f000 f85d 	bl	801d4bc <_ZNSt12_Vector_baseIfSaIfEE17_Vector_impl_dataC1EOS2_>
	{ }
 801d402:	687b      	ldr	r3, [r7, #4]
 801d404:	4618      	mov	r0, r3
 801d406:	370c      	adds	r7, #12
 801d408:	46bd      	mov	sp, r7
 801d40a:	bd90      	pop	{r4, r7, pc}

0801d40c <_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_dataC1EOS2_>:
	_Bvector_impl_data(_Bvector_impl_data&& __x) noexcept
 801d40c:	b580      	push	{r7, lr}
 801d40e:	b082      	sub	sp, #8
 801d410:	af00      	add	r7, sp, #0
 801d412:	6078      	str	r0, [r7, #4]
 801d414:	6039      	str	r1, [r7, #0]
	, _M_end_of_storage(__x._M_end_of_storage)
 801d416:	687b      	ldr	r3, [r7, #4]
 801d418:	683a      	ldr	r2, [r7, #0]
 801d41a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801d41e:	e883 0003 	stmia.w	r3, {r0, r1}
 801d422:	687b      	ldr	r3, [r7, #4]
 801d424:	683a      	ldr	r2, [r7, #0]
 801d426:	3308      	adds	r3, #8
 801d428:	3208      	adds	r2, #8
 801d42a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801d42e:	e883 0003 	stmia.w	r3, {r0, r1}
 801d432:	683b      	ldr	r3, [r7, #0]
 801d434:	691a      	ldr	r2, [r3, #16]
 801d436:	687b      	ldr	r3, [r7, #4]
 801d438:	611a      	str	r2, [r3, #16]
	{ __x._M_reset(); }
 801d43a:	6838      	ldr	r0, [r7, #0]
 801d43c:	f7f5 f8ae 	bl	801259c <_ZNSt13_Bvector_baseISaIbEE18_Bvector_impl_data8_M_resetEv>
 801d440:	687b      	ldr	r3, [r7, #4]
 801d442:	4618      	mov	r0, r3
 801d444:	3708      	adds	r7, #8
 801d446:	46bd      	mov	sp, r7
 801d448:	bd80      	pop	{r7, pc}

0801d44a <_ZSt4moveIRNSt12_Vector_baseIiSaIiEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 801d44a:	b480      	push	{r7}
 801d44c:	b083      	sub	sp, #12
 801d44e:	af00      	add	r7, sp, #0
 801d450:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801d452:	687b      	ldr	r3, [r7, #4]
 801d454:	4618      	mov	r0, r3
 801d456:	370c      	adds	r7, #12
 801d458:	46bd      	mov	sp, r7
 801d45a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d45e:	4770      	bx	lr

0801d460 <_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC1EOS2_>:
	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 801d460:	b480      	push	{r7}
 801d462:	b083      	sub	sp, #12
 801d464:	af00      	add	r7, sp, #0
 801d466:	6078      	str	r0, [r7, #4]
 801d468:	6039      	str	r1, [r7, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 801d46a:	683b      	ldr	r3, [r7, #0]
 801d46c:	681a      	ldr	r2, [r3, #0]
	  _M_end_of_storage(__x._M_end_of_storage)
 801d46e:	687b      	ldr	r3, [r7, #4]
 801d470:	601a      	str	r2, [r3, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 801d472:	683b      	ldr	r3, [r7, #0]
 801d474:	685a      	ldr	r2, [r3, #4]
	  _M_end_of_storage(__x._M_end_of_storage)
 801d476:	687b      	ldr	r3, [r7, #4]
 801d478:	605a      	str	r2, [r3, #4]
 801d47a:	683b      	ldr	r3, [r7, #0]
 801d47c:	689a      	ldr	r2, [r3, #8]
 801d47e:	687b      	ldr	r3, [r7, #4]
 801d480:	609a      	str	r2, [r3, #8]
	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 801d482:	683b      	ldr	r3, [r7, #0]
 801d484:	2200      	movs	r2, #0
 801d486:	609a      	str	r2, [r3, #8]
 801d488:	683b      	ldr	r3, [r7, #0]
 801d48a:	689a      	ldr	r2, [r3, #8]
 801d48c:	683b      	ldr	r3, [r7, #0]
 801d48e:	605a      	str	r2, [r3, #4]
 801d490:	683b      	ldr	r3, [r7, #0]
 801d492:	685a      	ldr	r2, [r3, #4]
 801d494:	683b      	ldr	r3, [r7, #0]
 801d496:	601a      	str	r2, [r3, #0]
 801d498:	687b      	ldr	r3, [r7, #4]
 801d49a:	4618      	mov	r0, r3
 801d49c:	370c      	adds	r7, #12
 801d49e:	46bd      	mov	sp, r7
 801d4a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d4a4:	4770      	bx	lr

0801d4a6 <_ZSt4moveIRNSt12_Vector_baseIfSaIfEE12_Vector_implEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 801d4a6:	b480      	push	{r7}
 801d4a8:	b083      	sub	sp, #12
 801d4aa:	af00      	add	r7, sp, #0
 801d4ac:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 801d4ae:	687b      	ldr	r3, [r7, #4]
 801d4b0:	4618      	mov	r0, r3
 801d4b2:	370c      	adds	r7, #12
 801d4b4:	46bd      	mov	sp, r7
 801d4b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d4ba:	4770      	bx	lr

0801d4bc <_ZNSt12_Vector_baseIfSaIfEE17_Vector_impl_dataC1EOS2_>:
	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 801d4bc:	b480      	push	{r7}
 801d4be:	b083      	sub	sp, #12
 801d4c0:	af00      	add	r7, sp, #0
 801d4c2:	6078      	str	r0, [r7, #4]
 801d4c4:	6039      	str	r1, [r7, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 801d4c6:	683b      	ldr	r3, [r7, #0]
 801d4c8:	681a      	ldr	r2, [r3, #0]
	  _M_end_of_storage(__x._M_end_of_storage)
 801d4ca:	687b      	ldr	r3, [r7, #4]
 801d4cc:	601a      	str	r2, [r3, #0]
	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 801d4ce:	683b      	ldr	r3, [r7, #0]
 801d4d0:	685a      	ldr	r2, [r3, #4]
	  _M_end_of_storage(__x._M_end_of_storage)
 801d4d2:	687b      	ldr	r3, [r7, #4]
 801d4d4:	605a      	str	r2, [r3, #4]
 801d4d6:	683b      	ldr	r3, [r7, #0]
 801d4d8:	689a      	ldr	r2, [r3, #8]
 801d4da:	687b      	ldr	r3, [r7, #4]
 801d4dc:	609a      	str	r2, [r3, #8]
	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 801d4de:	683b      	ldr	r3, [r7, #0]
 801d4e0:	2200      	movs	r2, #0
 801d4e2:	609a      	str	r2, [r3, #8]
 801d4e4:	683b      	ldr	r3, [r7, #0]
 801d4e6:	689a      	ldr	r2, [r3, #8]
 801d4e8:	683b      	ldr	r3, [r7, #0]
 801d4ea:	605a      	str	r2, [r3, #4]
 801d4ec:	683b      	ldr	r3, [r7, #0]
 801d4ee:	685a      	ldr	r2, [r3, #4]
 801d4f0:	683b      	ldr	r3, [r7, #0]
 801d4f2:	601a      	str	r2, [r3, #0]
 801d4f4:	687b      	ldr	r3, [r7, #4]
 801d4f6:	4618      	mov	r0, r3
 801d4f8:	370c      	adds	r7, #12
 801d4fa:	46bd      	mov	sp, r7
 801d4fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d500:	4770      	bx	lr
	...

0801d504 <_Z41__static_initialization_and_destruction_0ii>:
 801d504:	b590      	push	{r4, r7, lr}
 801d506:	b0e7      	sub	sp, #412	; 0x19c
 801d508:	af02      	add	r7, sp, #8
 801d50a:	1d3b      	adds	r3, r7, #4
 801d50c:	6018      	str	r0, [r3, #0]
 801d50e:	463b      	mov	r3, r7
 801d510:	6019      	str	r1, [r3, #0]
 801d512:	1d3b      	adds	r3, r7, #4
 801d514:	681b      	ldr	r3, [r3, #0]
 801d516:	2b01      	cmp	r3, #1
 801d518:	f040 819d 	bne.w	801d856 <_Z41__static_initialization_and_destruction_0ii+0x352>
 801d51c:	463b      	mov	r3, r7
 801d51e:	681b      	ldr	r3, [r3, #0]
 801d520:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801d524:	4293      	cmp	r3, r2
 801d526:	f040 8196 	bne.w	801d856 <_Z41__static_initialization_and_destruction_0ii+0x352>
};
 801d52a:	f107 0314 	add.w	r3, r7, #20
 801d52e:	4618      	mov	r0, r3
 801d530:	2322      	movs	r3, #34	; 0x22
 801d532:	461a      	mov	r2, r3
 801d534:	2100      	movs	r1, #0
 801d536:	f004 f9e9 	bl	802190c <memset>
 801d53a:	f107 0314 	add.w	r3, r7, #20
 801d53e:	223a      	movs	r2, #58	; 0x3a
 801d540:	701a      	strb	r2, [r3, #0]
 801d542:	f107 0314 	add.w	r3, r7, #20
 801d546:	2201      	movs	r2, #1
 801d548:	705a      	strb	r2, [r3, #1]
 801d54a:	f107 0314 	add.w	r3, r7, #20
 801d54e:	220a      	movs	r2, #10
 801d550:	709a      	strb	r2, [r3, #2]
 801d552:	f107 0314 	add.w	r3, r7, #20
 801d556:	220a      	movs	r2, #10
 801d558:	70da      	strb	r2, [r3, #3]
 801d55a:	f107 0314 	add.w	r3, r7, #20
 801d55e:	222c      	movs	r2, #44	; 0x2c
 801d560:	711a      	strb	r2, [r3, #4]
 801d562:	f107 0314 	add.w	r3, r7, #20
 801d566:	220c      	movs	r2, #12
 801d568:	715a      	strb	r2, [r3, #5]
 801d56a:	f107 0314 	add.w	r3, r7, #20
 801d56e:	222e      	movs	r2, #46	; 0x2e
 801d570:	719a      	strb	r2, [r3, #6]
 801d572:	f107 0314 	add.w	r3, r7, #20
 801d576:	220b      	movs	r2, #11
 801d578:	71da      	strb	r2, [r3, #7]
 801d57a:	f107 0314 	add.w	r3, r7, #20
 801d57e:	225b      	movs	r2, #91	; 0x5b
 801d580:	721a      	strb	r2, [r3, #8]
 801d582:	f107 0314 	add.w	r3, r7, #20
 801d586:	220d      	movs	r2, #13
 801d588:	725a      	strb	r2, [r3, #9]
 801d58a:	f107 0314 	add.w	r3, r7, #20
 801d58e:	225d      	movs	r2, #93	; 0x5d
 801d590:	729a      	strb	r2, [r3, #10]
 801d592:	f107 0314 	add.w	r3, r7, #20
 801d596:	220e      	movs	r2, #14
 801d598:	72da      	strb	r2, [r3, #11]
 801d59a:	f107 0314 	add.w	r3, r7, #20
 801d59e:	227c      	movs	r2, #124	; 0x7c
 801d5a0:	731a      	strb	r2, [r3, #12]
 801d5a2:	f107 0314 	add.w	r3, r7, #20
 801d5a6:	2215      	movs	r2, #21
 801d5a8:	735a      	strb	r2, [r3, #13]
 801d5aa:	f107 0314 	add.w	r3, r7, #20
 801d5ae:	2226      	movs	r2, #38	; 0x26
 801d5b0:	739a      	strb	r2, [r3, #14]
 801d5b2:	f107 0314 	add.w	r3, r7, #20
 801d5b6:	2216      	movs	r2, #22
 801d5b8:	73da      	strb	r2, [r3, #15]
 801d5ba:	f107 0314 	add.w	r3, r7, #20
 801d5be:	222b      	movs	r2, #43	; 0x2b
 801d5c0:	741a      	strb	r2, [r3, #16]
 801d5c2:	f107 0314 	add.w	r3, r7, #20
 801d5c6:	221f      	movs	r2, #31
 801d5c8:	745a      	strb	r2, [r3, #17]
 801d5ca:	f107 0314 	add.w	r3, r7, #20
 801d5ce:	222d      	movs	r2, #45	; 0x2d
 801d5d0:	749a      	strb	r2, [r3, #18]
 801d5d2:	f107 0314 	add.w	r3, r7, #20
 801d5d6:	2220      	movs	r2, #32
 801d5d8:	74da      	strb	r2, [r3, #19]
 801d5da:	f107 0314 	add.w	r3, r7, #20
 801d5de:	222a      	movs	r2, #42	; 0x2a
 801d5e0:	751a      	strb	r2, [r3, #20]
 801d5e2:	f107 0314 	add.w	r3, r7, #20
 801d5e6:	2221      	movs	r2, #33	; 0x21
 801d5e8:	755a      	strb	r2, [r3, #21]
 801d5ea:	f107 0314 	add.w	r3, r7, #20
 801d5ee:	222f      	movs	r2, #47	; 0x2f
 801d5f0:	759a      	strb	r2, [r3, #22]
 801d5f2:	f107 0314 	add.w	r3, r7, #20
 801d5f6:	2222      	movs	r2, #34	; 0x22
 801d5f8:	75da      	strb	r2, [r3, #23]
 801d5fa:	f107 0314 	add.w	r3, r7, #20
 801d5fe:	225e      	movs	r2, #94	; 0x5e
 801d600:	761a      	strb	r2, [r3, #24]
 801d602:	f107 0314 	add.w	r3, r7, #20
 801d606:	2223      	movs	r2, #35	; 0x23
 801d608:	765a      	strb	r2, [r3, #25]
 801d60a:	f107 0314 	add.w	r3, r7, #20
 801d60e:	2225      	movs	r2, #37	; 0x25
 801d610:	769a      	strb	r2, [r3, #26]
 801d612:	f107 0314 	add.w	r3, r7, #20
 801d616:	2224      	movs	r2, #36	; 0x24
 801d618:	76da      	strb	r2, [r3, #27]
 801d61a:	f107 0314 	add.w	r3, r7, #20
 801d61e:	2228      	movs	r2, #40	; 0x28
 801d620:	771a      	strb	r2, [r3, #28]
 801d622:	f107 0314 	add.w	r3, r7, #20
 801d626:	2226      	movs	r2, #38	; 0x26
 801d628:	775a      	strb	r2, [r3, #29]
 801d62a:	f107 0314 	add.w	r3, r7, #20
 801d62e:	2229      	movs	r2, #41	; 0x29
 801d630:	779a      	strb	r2, [r3, #30]
 801d632:	f107 0314 	add.w	r3, r7, #20
 801d636:	2227      	movs	r2, #39	; 0x27
 801d638:	77da      	strb	r2, [r3, #31]
 801d63a:	f107 0314 	add.w	r3, r7, #20
 801d63e:	2225      	movs	r2, #37	; 0x25
 801d640:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 801d644:	f107 030c 	add.w	r3, r7, #12
 801d648:	f107 0214 	add.w	r2, r7, #20
 801d64c:	601a      	str	r2, [r3, #0]
 801d64e:	f107 030c 	add.w	r3, r7, #12
 801d652:	2211      	movs	r2, #17
 801d654:	605a      	str	r2, [r3, #4]
 801d656:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d65a:	4618      	mov	r0, r3
 801d65c:	f7e3 fe42 	bl	80012e4 <_ZNSaISt4pairIKc10token_typeEEC1Ev>
 801d660:	f107 0138 	add.w	r1, r7, #56	; 0x38
 801d664:	f107 020c 	add.w	r2, r7, #12
 801d668:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d66c:	9300      	str	r3, [sp, #0]
 801d66e:	460b      	mov	r3, r1
 801d670:	ca06      	ldmia	r2, {r1, r2}
 801d672:	4885      	ldr	r0, [pc, #532]	; (801d888 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801d674:	f7e3 fe4e 	bl	8001314 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801d678:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 801d67c:	4618      	mov	r0, r3
 801d67e:	f7e3 fe3d 	bl	80012fc <_ZNSaISt4pairIKc10token_typeEED1Ev>
	{"true", TOKEN_TRUE},
 801d682:	2305      	movs	r3, #5
 801d684:	f887 3162 	strb.w	r3, [r7, #354]	; 0x162
};
 801d688:	f507 72b1 	add.w	r2, r7, #354	; 0x162
 801d68c:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d690:	497e      	ldr	r1, [pc, #504]	; (801d88c <_Z41__static_initialization_and_destruction_0ii+0x388>)
 801d692:	4618      	mov	r0, r3
 801d694:	f7e3 fd2a 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"false", TOKEN_FALSE},
 801d698:	2306      	movs	r3, #6
 801d69a:	f887 3163 	strb.w	r3, [r7, #355]	; 0x163
};
 801d69e:	f207 1263 	addw	r2, r7, #355	; 0x163
 801d6a2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d6a6:	331c      	adds	r3, #28
 801d6a8:	4979      	ldr	r1, [pc, #484]	; (801d890 <_Z41__static_initialization_and_destruction_0ii+0x38c>)
 801d6aa:	4618      	mov	r0, r3
 801d6ac:	f7e3 fd46 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"setup", TOKEN_SETUP},
 801d6b0:	2307      	movs	r3, #7
 801d6b2:	f887 3164 	strb.w	r3, [r7, #356]	; 0x164
};
 801d6b6:	f507 72b2 	add.w	r2, r7, #356	; 0x164
 801d6ba:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d6be:	3338      	adds	r3, #56	; 0x38
 801d6c0:	4974      	ldr	r1, [pc, #464]	; (801d894 <_Z41__static_initialization_and_destruction_0ii+0x390>)
 801d6c2:	4618      	mov	r0, r3
 801d6c4:	f7e3 fd3a 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"loop", TOKEN_LOOP},
 801d6c8:	2308      	movs	r3, #8
 801d6ca:	f887 3165 	strb.w	r3, [r7, #357]	; 0x165
};
 801d6ce:	f207 1265 	addw	r2, r7, #357	; 0x165
 801d6d2:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d6d6:	3354      	adds	r3, #84	; 0x54
 801d6d8:	496f      	ldr	r1, [pc, #444]	; (801d898 <_Z41__static_initialization_and_destruction_0ii+0x394>)
 801d6da:	4618      	mov	r0, r3
 801d6dc:	f7e3 fd06 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"finish", TOKEN_FINISH},
 801d6e0:	2309      	movs	r3, #9
 801d6e2:	f887 3166 	strb.w	r3, [r7, #358]	; 0x166
};
 801d6e6:	f507 72b3 	add.w	r2, r7, #358	; 0x166
 801d6ea:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d6ee:	3370      	adds	r3, #112	; 0x70
 801d6f0:	496a      	ldr	r1, [pc, #424]	; (801d89c <_Z41__static_initialization_and_destruction_0ii+0x398>)
 801d6f2:	4618      	mov	r0, r3
 801d6f4:	f7e3 fd4a 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"if", TOKEN_IF},
 801d6f8:	2310      	movs	r3, #16
 801d6fa:	f887 3167 	strb.w	r3, [r7, #359]	; 0x167
};
 801d6fe:	f207 1267 	addw	r2, r7, #359	; 0x167
 801d702:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d706:	338c      	adds	r3, #140	; 0x8c
 801d708:	4965      	ldr	r1, [pc, #404]	; (801d8a0 <_Z41__static_initialization_and_destruction_0ii+0x39c>)
 801d70a:	4618      	mov	r0, r3
 801d70c:	f7e3 fd66 	bl	80011dc <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA3_KcS7_Lb1EEEOT_OT0_>
	{"elseif", TOKEN_ELSEIF},
 801d710:	2311      	movs	r3, #17
 801d712:	f887 3168 	strb.w	r3, [r7, #360]	; 0x168
};
 801d716:	f507 72b4 	add.w	r2, r7, #360	; 0x168
 801d71a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d71e:	33a8      	adds	r3, #168	; 0xa8
 801d720:	4960      	ldr	r1, [pc, #384]	; (801d8a4 <_Z41__static_initialization_and_destruction_0ii+0x3a0>)
 801d722:	4618      	mov	r0, r3
 801d724:	f7e3 fd32 	bl	800118c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA7_KcS7_Lb1EEEOT_OT0_>
	{"else", TOKEN_ELSE},
 801d728:	2312      	movs	r3, #18
 801d72a:	f887 3169 	strb.w	r3, [r7, #361]	; 0x169
};
 801d72e:	f207 1269 	addw	r2, r7, #361	; 0x169
 801d732:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d736:	33c4      	adds	r3, #196	; 0xc4
 801d738:	495b      	ldr	r1, [pc, #364]	; (801d8a8 <_Z41__static_initialization_and_destruction_0ii+0x3a4>)
 801d73a:	4618      	mov	r0, r3
 801d73c:	f7e3 fcd6 	bl	80010ec <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA5_KcS7_Lb1EEEOT_OT0_>
	{"while", TOKEN_WHILE},
 801d740:	2313      	movs	r3, #19
 801d742:	f887 316a 	strb.w	r3, [r7, #362]	; 0x16a
};
 801d746:	f507 72b5 	add.w	r2, r7, #362	; 0x16a
 801d74a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d74e:	33e0      	adds	r3, #224	; 0xe0
 801d750:	4956      	ldr	r1, [pc, #344]	; (801d8ac <_Z41__static_initialization_and_destruction_0ii+0x3a8>)
 801d752:	4618      	mov	r0, r3
 801d754:	f7e3 fcf2 	bl	800113c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA6_KcS7_Lb1EEEOT_OT0_>
	{"end", TOKEN_END},
 801d758:	2314      	movs	r3, #20
 801d75a:	f887 316b 	strb.w	r3, [r7, #363]	; 0x16b
};
 801d75e:	f207 126b 	addw	r2, r7, #363	; 0x16b
 801d762:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d766:	33fc      	adds	r3, #252	; 0xfc
 801d768:	4951      	ldr	r1, [pc, #324]	; (801d8b0 <_Z41__static_initialization_and_destruction_0ii+0x3ac>)
 801d76a:	4618      	mov	r0, r3
 801d76c:	f7e3 fd5e 	bl	800122c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEC1IRA4_KcS7_Lb1EEEOT_OT0_>
 801d770:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801d774:	f107 0248 	add.w	r2, r7, #72	; 0x48
 801d778:	601a      	str	r2, [r3, #0]
 801d77a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 801d77e:	220a      	movs	r2, #10
 801d780:	605a      	str	r2, [r3, #4]
 801d782:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801d786:	4618      	mov	r0, r3
 801d788:	f7e3 fe51 	bl	800142e <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEEC1Ev>
 801d78c:	f507 71b6 	add.w	r1, r7, #364	; 0x16c
 801d790:	f107 0240 	add.w	r2, r7, #64	; 0x40
 801d794:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801d798:	9300      	str	r3, [sp, #0]
 801d79a:	460b      	mov	r3, r1
 801d79c:	ca06      	ldmia	r2, {r1, r2}
 801d79e:	4845      	ldr	r0, [pc, #276]	; (801d8b4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801d7a0:	f7e3 fe5d 	bl	800145e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEEC1ESt16initializer_listISB_ERKS8_RKSC_>
 801d7a4:	f507 73b8 	add.w	r3, r7, #368	; 0x170
 801d7a8:	4618      	mov	r0, r3
 801d7aa:	f7e3 fe4c 	bl	8001446 <_ZNSaISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeEED1Ev>
 801d7ae:	f107 0448 	add.w	r4, r7, #72	; 0x48
 801d7b2:	f504 748c 	add.w	r4, r4, #280	; 0x118
 801d7b6:	f107 0348 	add.w	r3, r7, #72	; 0x48
 801d7ba:	429c      	cmp	r4, r3
 801d7bc:	d004      	beq.n	801d7c8 <_Z41__static_initialization_and_destruction_0ii+0x2c4>
 801d7be:	3c1c      	subs	r4, #28
 801d7c0:	4620      	mov	r0, r4
 801d7c2:	f7e3 fc86 	bl	80010d2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeED1Ev>
 801d7c6:	e7f6      	b.n	801d7b6 <_Z41__static_initialization_and_destruction_0ii+0x2b2>
};
 801d7c8:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801d7cc:	2200      	movs	r2, #0
 801d7ce:	601a      	str	r2, [r3, #0]
 801d7d0:	605a      	str	r2, [r3, #4]
 801d7d2:	609a      	str	r2, [r3, #8]
 801d7d4:	233c      	movs	r3, #60	; 0x3c
 801d7d6:	f887 317c 	strb.w	r3, [r7, #380]	; 0x17c
 801d7da:	231b      	movs	r3, #27
 801d7dc:	f887 317d 	strb.w	r3, [r7, #381]	; 0x17d
 801d7e0:	231c      	movs	r3, #28
 801d7e2:	f887 317e 	strb.w	r3, [r7, #382]	; 0x17e
 801d7e6:	233e      	movs	r3, #62	; 0x3e
 801d7e8:	f887 317f 	strb.w	r3, [r7, #383]	; 0x17f
 801d7ec:	2319      	movs	r3, #25
 801d7ee:	f887 3180 	strb.w	r3, [r7, #384]	; 0x180
 801d7f2:	231a      	movs	r3, #26
 801d7f4:	f887 3181 	strb.w	r3, [r7, #385]	; 0x181
 801d7f8:	233d      	movs	r3, #61	; 0x3d
 801d7fa:	f887 3182 	strb.w	r3, [r7, #386]	; 0x182
 801d7fe:	2318      	movs	r3, #24
 801d800:	f887 3183 	strb.w	r3, [r7, #387]	; 0x183
 801d804:	231d      	movs	r3, #29
 801d806:	f887 3184 	strb.w	r3, [r7, #388]	; 0x184
 801d80a:	2321      	movs	r3, #33	; 0x21
 801d80c:	f887 3185 	strb.w	r3, [r7, #389]	; 0x185
 801d810:	2317      	movs	r3, #23
 801d812:	f887 3186 	strb.w	r3, [r7, #390]	; 0x186
 801d816:	231e      	movs	r3, #30
 801d818:	f887 3187 	strb.w	r3, [r7, #391]	; 0x187
 801d81c:	f507 73be 	add.w	r3, r7, #380	; 0x17c
 801d820:	f8c7 3174 	str.w	r3, [r7, #372]	; 0x174
 801d824:	2304      	movs	r3, #4
 801d826:	f8c7 3178 	str.w	r3, [r7, #376]	; 0x178
 801d82a:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801d82e:	4618      	mov	r0, r3
 801d830:	f7e3 fe45 	bl	80014be <_ZNSaISt4pairIKc12double_tokenEEC1Ev>
 801d834:	f507 72c4 	add.w	r2, r7, #392	; 0x188
 801d838:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801d83c:	9300      	str	r3, [sp, #0]
 801d83e:	4613      	mov	r3, r2
 801d840:	f507 72ba 	add.w	r2, r7, #372	; 0x174
 801d844:	ca06      	ldmia	r2, {r1, r2}
 801d846:	481c      	ldr	r0, [pc, #112]	; (801d8b8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801d848:	f7e3 fe51 	bl	80014ee <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEEC1ESt16initializer_listIS5_ERKS2_RKS6_>
 801d84c:	f507 73c6 	add.w	r3, r7, #396	; 0x18c
 801d850:	4618      	mov	r0, r3
 801d852:	f7e3 fe40 	bl	80014d6 <_ZNSaISt4pairIKc12double_tokenEED1Ev>
static const std::map<char, double_token> token_double_chars
 801d856:	1d3b      	adds	r3, r7, #4
 801d858:	681b      	ldr	r3, [r3, #0]
 801d85a:	2b00      	cmp	r3, #0
 801d85c:	d10e      	bne.n	801d87c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801d85e:	463b      	mov	r3, r7
 801d860:	681b      	ldr	r3, [r3, #0]
 801d862:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801d866:	4293      	cmp	r3, r2
 801d868:	d108      	bne.n	801d87c <_Z41__static_initialization_and_destruction_0ii+0x378>
 801d86a:	4813      	ldr	r0, [pc, #76]	; (801d8b8 <_Z41__static_initialization_and_destruction_0ii+0x3b4>)
 801d86c:	f7e6 fa98 	bl	8003da0 <_ZNSt3mapIc12double_tokenSt4lessIcESaISt4pairIKcS0_EEED1Ev>
static const std::map<std::string, token_type> token_strings
 801d870:	4810      	ldr	r0, [pc, #64]	; (801d8b4 <_Z41__static_initialization_and_destruction_0ii+0x3b0>)
 801d872:	f7e6 faa2 	bl	8003dba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE10token_typeSt4lessIS5_ESaISt4pairIKS5_S6_EEED1Ev>
static const std::map<char, token_type> token_chars
 801d876:	4804      	ldr	r0, [pc, #16]	; (801d888 <_Z41__static_initialization_and_destruction_0ii+0x384>)
 801d878:	f7e6 faac 	bl	8003dd4 <_ZNSt3mapIc10token_typeSt4lessIcESaISt4pairIKcS0_EEED1Ev>
 801d87c:	bf00      	nop
 801d87e:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 801d882:	46bd      	mov	sp, r7
 801d884:	bd90      	pop	{r4, r7, pc}
 801d886:	bf00      	nop
 801d888:	20000648 	.word	0x20000648
 801d88c:	080251b0 	.word	0x080251b0
 801d890:	080251b8 	.word	0x080251b8
 801d894:	080251c0 	.word	0x080251c0
 801d898:	080251c8 	.word	0x080251c8
 801d89c:	080251d0 	.word	0x080251d0
 801d8a0:	080251d8 	.word	0x080251d8
 801d8a4:	080251dc 	.word	0x080251dc
 801d8a8:	080251e4 	.word	0x080251e4
 801d8ac:	080251ec 	.word	0x080251ec
 801d8b0:	080251f4 	.word	0x080251f4
 801d8b4:	20000660 	.word	0x20000660
 801d8b8:	20000678 	.word	0x20000678

0801d8bc <_GLOBAL__sub_I__ZN16Function_handlerC2Ev>:
 801d8bc:	b580      	push	{r7, lr}
 801d8be:	af00      	add	r7, sp, #0
 801d8c0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801d8c4:	2001      	movs	r0, #1
 801d8c6:	f7ff fe1d 	bl	801d504 <_Z41__static_initialization_and_destruction_0ii>
 801d8ca:	bd80      	pop	{r7, pc}

0801d8cc <_GLOBAL__sub_D__ZN16Function_handlerC2Ev>:
 801d8cc:	b580      	push	{r7, lr}
 801d8ce:	af00      	add	r7, sp, #0
 801d8d0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801d8d4:	2000      	movs	r0, #0
 801d8d6:	f7ff fe15 	bl	801d504 <_Z41__static_initialization_and_destruction_0ii>
 801d8da:	bd80      	pop	{r7, pc}

0801d8dc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 801d8dc:	f8df d034 	ldr.w	sp, [pc, #52]	; 801d914 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 801d8e0:	480d      	ldr	r0, [pc, #52]	; (801d918 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 801d8e2:	490e      	ldr	r1, [pc, #56]	; (801d91c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 801d8e4:	4a0e      	ldr	r2, [pc, #56]	; (801d920 <LoopFillZerobss+0x1e>)
  movs r3, #0
 801d8e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 801d8e8:	e002      	b.n	801d8f0 <LoopCopyDataInit>

0801d8ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 801d8ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 801d8ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 801d8ee:	3304      	adds	r3, #4

0801d8f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 801d8f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 801d8f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 801d8f4:	d3f9      	bcc.n	801d8ea <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 801d8f6:	4a0b      	ldr	r2, [pc, #44]	; (801d924 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 801d8f8:	4c0b      	ldr	r4, [pc, #44]	; (801d928 <LoopFillZerobss+0x26>)
  movs r3, #0
 801d8fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 801d8fc:	e001      	b.n	801d902 <LoopFillZerobss>

0801d8fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 801d8fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 801d900:	3204      	adds	r2, #4

0801d902 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 801d902:	42a2      	cmp	r2, r4
  bcc FillZerobss
 801d904:	d3fb      	bcc.n	801d8fe <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 801d906:	f7f9 fe81 	bl	801760c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 801d90a:	f003 ff63 	bl	80217d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 801d90e:	f7f8 fd8f 	bl	8016430 <main>
  bx  lr    
 801d912:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 801d914:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 801d918:	20000000 	.word	0x20000000
  ldr r1, =_edata
 801d91c:	200001e4 	.word	0x200001e4
  ldr r2, =_sidata
 801d920:	08025824 	.word	0x08025824
  ldr r2, =_sbss
 801d924:	200001e4 	.word	0x200001e4
  ldr r4, =_ebss
 801d928:	20000740 	.word	0x20000740

0801d92c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 801d92c:	e7fe      	b.n	801d92c <ADC_IRQHandler>

0801d92e <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 801d92e:	b580      	push	{r7, lr}
 801d930:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 801d932:	2003      	movs	r0, #3
 801d934:	f000 f94c 	bl	801dbd0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 801d938:	200f      	movs	r0, #15
 801d93a:	f000 f805 	bl	801d948 <HAL_InitTick>
  
  /* Init the low level hardware */
  HAL_MspInit();
 801d93e:	f7f9 fcfb 	bl	8017338 <HAL_MspInit>
  
  /* Return function status */
  return HAL_OK;
 801d942:	2300      	movs	r3, #0
}
 801d944:	4618      	mov	r0, r3
 801d946:	bd80      	pop	{r7, pc}

0801d948 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 801d948:	b580      	push	{r7, lr}
 801d94a:	b082      	sub	sp, #8
 801d94c:	af00      	add	r7, sp, #0
 801d94e:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 801d950:	4b12      	ldr	r3, [pc, #72]	; (801d99c <HAL_InitTick+0x54>)
 801d952:	681a      	ldr	r2, [r3, #0]
 801d954:	4b12      	ldr	r3, [pc, #72]	; (801d9a0 <HAL_InitTick+0x58>)
 801d956:	781b      	ldrb	r3, [r3, #0]
 801d958:	4619      	mov	r1, r3
 801d95a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801d95e:	fbb3 f3f1 	udiv	r3, r3, r1
 801d962:	fbb2 f3f3 	udiv	r3, r2, r3
 801d966:	4618      	mov	r0, r3
 801d968:	f000 f967 	bl	801dc3a <HAL_SYSTICK_Config>
 801d96c:	4603      	mov	r3, r0
 801d96e:	2b00      	cmp	r3, #0
 801d970:	d001      	beq.n	801d976 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 801d972:	2301      	movs	r3, #1
 801d974:	e00e      	b.n	801d994 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 801d976:	687b      	ldr	r3, [r7, #4]
 801d978:	2b0f      	cmp	r3, #15
 801d97a:	d80a      	bhi.n	801d992 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 801d97c:	2200      	movs	r2, #0
 801d97e:	6879      	ldr	r1, [r7, #4]
 801d980:	f04f 30ff 	mov.w	r0, #4294967295
 801d984:	f000 f92f 	bl	801dbe6 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 801d988:	4a06      	ldr	r2, [pc, #24]	; (801d9a4 <HAL_InitTick+0x5c>)
 801d98a:	687b      	ldr	r3, [r7, #4]
 801d98c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 801d98e:	2300      	movs	r3, #0
 801d990:	e000      	b.n	801d994 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 801d992:	2301      	movs	r3, #1
}
 801d994:	4618      	mov	r0, r3
 801d996:	3708      	adds	r7, #8
 801d998:	46bd      	mov	sp, r7
 801d99a:	bd80      	pop	{r7, pc}
 801d99c:	20000000 	.word	0x20000000
 801d9a0:	20000008 	.word	0x20000008
 801d9a4:	20000004 	.word	0x20000004

0801d9a8 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 801d9a8:	b480      	push	{r7}
 801d9aa:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 801d9ac:	4b06      	ldr	r3, [pc, #24]	; (801d9c8 <HAL_IncTick+0x20>)
 801d9ae:	781b      	ldrb	r3, [r3, #0]
 801d9b0:	461a      	mov	r2, r3
 801d9b2:	4b06      	ldr	r3, [pc, #24]	; (801d9cc <HAL_IncTick+0x24>)
 801d9b4:	681b      	ldr	r3, [r3, #0]
 801d9b6:	4413      	add	r3, r2
 801d9b8:	4a04      	ldr	r2, [pc, #16]	; (801d9cc <HAL_IncTick+0x24>)
 801d9ba:	6013      	str	r3, [r2, #0]
}
 801d9bc:	bf00      	nop
 801d9be:	46bd      	mov	sp, r7
 801d9c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d9c4:	4770      	bx	lr
 801d9c6:	bf00      	nop
 801d9c8:	20000008 	.word	0x20000008
 801d9cc:	2000072c 	.word	0x2000072c

0801d9d0 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 801d9d0:	b480      	push	{r7}
 801d9d2:	af00      	add	r7, sp, #0
  return uwTick;
 801d9d4:	4b03      	ldr	r3, [pc, #12]	; (801d9e4 <HAL_GetTick+0x14>)
 801d9d6:	681b      	ldr	r3, [r3, #0]
}
 801d9d8:	4618      	mov	r0, r3
 801d9da:	46bd      	mov	sp, r7
 801d9dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d9e0:	4770      	bx	lr
 801d9e2:	bf00      	nop
 801d9e4:	2000072c 	.word	0x2000072c

0801d9e8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 801d9e8:	b580      	push	{r7, lr}
 801d9ea:	b084      	sub	sp, #16
 801d9ec:	af00      	add	r7, sp, #0
 801d9ee:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 801d9f0:	f7ff ffee 	bl	801d9d0 <HAL_GetTick>
 801d9f4:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 801d9f6:	687b      	ldr	r3, [r7, #4]
 801d9f8:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 801d9fa:	68fb      	ldr	r3, [r7, #12]
 801d9fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 801da00:	d005      	beq.n	801da0e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 801da02:	4b0a      	ldr	r3, [pc, #40]	; (801da2c <HAL_Delay+0x44>)
 801da04:	781b      	ldrb	r3, [r3, #0]
 801da06:	461a      	mov	r2, r3
 801da08:	68fb      	ldr	r3, [r7, #12]
 801da0a:	4413      	add	r3, r2
 801da0c:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 801da0e:	bf00      	nop
 801da10:	f7ff ffde 	bl	801d9d0 <HAL_GetTick>
 801da14:	4602      	mov	r2, r0
 801da16:	68bb      	ldr	r3, [r7, #8]
 801da18:	1ad3      	subs	r3, r2, r3
 801da1a:	68fa      	ldr	r2, [r7, #12]
 801da1c:	429a      	cmp	r2, r3
 801da1e:	d8f7      	bhi.n	801da10 <HAL_Delay+0x28>
  {
  }
}
 801da20:	bf00      	nop
 801da22:	bf00      	nop
 801da24:	3710      	adds	r7, #16
 801da26:	46bd      	mov	sp, r7
 801da28:	bd80      	pop	{r7, pc}
 801da2a:	bf00      	nop
 801da2c:	20000008 	.word	0x20000008

0801da30 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 801da30:	b480      	push	{r7}
 801da32:	b085      	sub	sp, #20
 801da34:	af00      	add	r7, sp, #0
 801da36:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 801da38:	687b      	ldr	r3, [r7, #4]
 801da3a:	f003 0307 	and.w	r3, r3, #7
 801da3e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 801da40:	4b0b      	ldr	r3, [pc, #44]	; (801da70 <__NVIC_SetPriorityGrouping+0x40>)
 801da42:	68db      	ldr	r3, [r3, #12]
 801da44:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 801da46:	68ba      	ldr	r2, [r7, #8]
 801da48:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 801da4c:	4013      	ands	r3, r2
 801da4e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 801da50:	68fb      	ldr	r3, [r7, #12]
 801da52:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 801da54:	68bb      	ldr	r3, [r7, #8]
 801da56:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 801da58:	4b06      	ldr	r3, [pc, #24]	; (801da74 <__NVIC_SetPriorityGrouping+0x44>)
 801da5a:	4313      	orrs	r3, r2
 801da5c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 801da5e:	4a04      	ldr	r2, [pc, #16]	; (801da70 <__NVIC_SetPriorityGrouping+0x40>)
 801da60:	68bb      	ldr	r3, [r7, #8]
 801da62:	60d3      	str	r3, [r2, #12]
}
 801da64:	bf00      	nop
 801da66:	3714      	adds	r7, #20
 801da68:	46bd      	mov	sp, r7
 801da6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801da6e:	4770      	bx	lr
 801da70:	e000ed00 	.word	0xe000ed00
 801da74:	05fa0000 	.word	0x05fa0000

0801da78 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 801da78:	b480      	push	{r7}
 801da7a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 801da7c:	4b04      	ldr	r3, [pc, #16]	; (801da90 <__NVIC_GetPriorityGrouping+0x18>)
 801da7e:	68db      	ldr	r3, [r3, #12]
 801da80:	0a1b      	lsrs	r3, r3, #8
 801da82:	f003 0307 	and.w	r3, r3, #7
}
 801da86:	4618      	mov	r0, r3
 801da88:	46bd      	mov	sp, r7
 801da8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801da8e:	4770      	bx	lr
 801da90:	e000ed00 	.word	0xe000ed00

0801da94 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 801da94:	b480      	push	{r7}
 801da96:	b083      	sub	sp, #12
 801da98:	af00      	add	r7, sp, #0
 801da9a:	4603      	mov	r3, r0
 801da9c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 801da9e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801daa2:	2b00      	cmp	r3, #0
 801daa4:	db0b      	blt.n	801dabe <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 801daa6:	79fb      	ldrb	r3, [r7, #7]
 801daa8:	f003 021f 	and.w	r2, r3, #31
 801daac:	4907      	ldr	r1, [pc, #28]	; (801dacc <__NVIC_EnableIRQ+0x38>)
 801daae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801dab2:	095b      	lsrs	r3, r3, #5
 801dab4:	2001      	movs	r0, #1
 801dab6:	fa00 f202 	lsl.w	r2, r0, r2
 801daba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 801dabe:	bf00      	nop
 801dac0:	370c      	adds	r7, #12
 801dac2:	46bd      	mov	sp, r7
 801dac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dac8:	4770      	bx	lr
 801daca:	bf00      	nop
 801dacc:	e000e100 	.word	0xe000e100

0801dad0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 801dad0:	b480      	push	{r7}
 801dad2:	b083      	sub	sp, #12
 801dad4:	af00      	add	r7, sp, #0
 801dad6:	4603      	mov	r3, r0
 801dad8:	6039      	str	r1, [r7, #0]
 801dada:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 801dadc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801dae0:	2b00      	cmp	r3, #0
 801dae2:	db0a      	blt.n	801dafa <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801dae4:	683b      	ldr	r3, [r7, #0]
 801dae6:	b2da      	uxtb	r2, r3
 801dae8:	490c      	ldr	r1, [pc, #48]	; (801db1c <__NVIC_SetPriority+0x4c>)
 801daea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801daee:	0112      	lsls	r2, r2, #4
 801daf0:	b2d2      	uxtb	r2, r2
 801daf2:	440b      	add	r3, r1
 801daf4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 801daf8:	e00a      	b.n	801db10 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801dafa:	683b      	ldr	r3, [r7, #0]
 801dafc:	b2da      	uxtb	r2, r3
 801dafe:	4908      	ldr	r1, [pc, #32]	; (801db20 <__NVIC_SetPriority+0x50>)
 801db00:	79fb      	ldrb	r3, [r7, #7]
 801db02:	f003 030f 	and.w	r3, r3, #15
 801db06:	3b04      	subs	r3, #4
 801db08:	0112      	lsls	r2, r2, #4
 801db0a:	b2d2      	uxtb	r2, r2
 801db0c:	440b      	add	r3, r1
 801db0e:	761a      	strb	r2, [r3, #24]
}
 801db10:	bf00      	nop
 801db12:	370c      	adds	r7, #12
 801db14:	46bd      	mov	sp, r7
 801db16:	f85d 7b04 	ldr.w	r7, [sp], #4
 801db1a:	4770      	bx	lr
 801db1c:	e000e100 	.word	0xe000e100
 801db20:	e000ed00 	.word	0xe000ed00

0801db24 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 801db24:	b480      	push	{r7}
 801db26:	b089      	sub	sp, #36	; 0x24
 801db28:	af00      	add	r7, sp, #0
 801db2a:	60f8      	str	r0, [r7, #12]
 801db2c:	60b9      	str	r1, [r7, #8]
 801db2e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 801db30:	68fb      	ldr	r3, [r7, #12]
 801db32:	f003 0307 	and.w	r3, r3, #7
 801db36:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 801db38:	69fb      	ldr	r3, [r7, #28]
 801db3a:	f1c3 0307 	rsb	r3, r3, #7
 801db3e:	2b04      	cmp	r3, #4
 801db40:	bf28      	it	cs
 801db42:	2304      	movcs	r3, #4
 801db44:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 801db46:	69fb      	ldr	r3, [r7, #28]
 801db48:	3304      	adds	r3, #4
 801db4a:	2b06      	cmp	r3, #6
 801db4c:	d902      	bls.n	801db54 <NVIC_EncodePriority+0x30>
 801db4e:	69fb      	ldr	r3, [r7, #28]
 801db50:	3b03      	subs	r3, #3
 801db52:	e000      	b.n	801db56 <NVIC_EncodePriority+0x32>
 801db54:	2300      	movs	r3, #0
 801db56:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801db58:	f04f 32ff 	mov.w	r2, #4294967295
 801db5c:	69bb      	ldr	r3, [r7, #24]
 801db5e:	fa02 f303 	lsl.w	r3, r2, r3
 801db62:	43da      	mvns	r2, r3
 801db64:	68bb      	ldr	r3, [r7, #8]
 801db66:	401a      	ands	r2, r3
 801db68:	697b      	ldr	r3, [r7, #20]
 801db6a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 801db6c:	f04f 31ff 	mov.w	r1, #4294967295
 801db70:	697b      	ldr	r3, [r7, #20]
 801db72:	fa01 f303 	lsl.w	r3, r1, r3
 801db76:	43d9      	mvns	r1, r3
 801db78:	687b      	ldr	r3, [r7, #4]
 801db7a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801db7c:	4313      	orrs	r3, r2
         );
}
 801db7e:	4618      	mov	r0, r3
 801db80:	3724      	adds	r7, #36	; 0x24
 801db82:	46bd      	mov	sp, r7
 801db84:	f85d 7b04 	ldr.w	r7, [sp], #4
 801db88:	4770      	bx	lr
	...

0801db8c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 801db8c:	b580      	push	{r7, lr}
 801db8e:	b082      	sub	sp, #8
 801db90:	af00      	add	r7, sp, #0
 801db92:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 801db94:	687b      	ldr	r3, [r7, #4]
 801db96:	3b01      	subs	r3, #1
 801db98:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801db9c:	d301      	bcc.n	801dba2 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 801db9e:	2301      	movs	r3, #1
 801dba0:	e00f      	b.n	801dbc2 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 801dba2:	4a0a      	ldr	r2, [pc, #40]	; (801dbcc <SysTick_Config+0x40>)
 801dba4:	687b      	ldr	r3, [r7, #4]
 801dba6:	3b01      	subs	r3, #1
 801dba8:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 801dbaa:	210f      	movs	r1, #15
 801dbac:	f04f 30ff 	mov.w	r0, #4294967295
 801dbb0:	f7ff ff8e 	bl	801dad0 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 801dbb4:	4b05      	ldr	r3, [pc, #20]	; (801dbcc <SysTick_Config+0x40>)
 801dbb6:	2200      	movs	r2, #0
 801dbb8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 801dbba:	4b04      	ldr	r3, [pc, #16]	; (801dbcc <SysTick_Config+0x40>)
 801dbbc:	2207      	movs	r2, #7
 801dbbe:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 801dbc0:	2300      	movs	r3, #0
}
 801dbc2:	4618      	mov	r0, r3
 801dbc4:	3708      	adds	r7, #8
 801dbc6:	46bd      	mov	sp, r7
 801dbc8:	bd80      	pop	{r7, pc}
 801dbca:	bf00      	nop
 801dbcc:	e000e010 	.word	0xe000e010

0801dbd0 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 801dbd0:	b580      	push	{r7, lr}
 801dbd2:	b082      	sub	sp, #8
 801dbd4:	af00      	add	r7, sp, #0
 801dbd6:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 801dbd8:	6878      	ldr	r0, [r7, #4]
 801dbda:	f7ff ff29 	bl	801da30 <__NVIC_SetPriorityGrouping>
}
 801dbde:	bf00      	nop
 801dbe0:	3708      	adds	r7, #8
 801dbe2:	46bd      	mov	sp, r7
 801dbe4:	bd80      	pop	{r7, pc}

0801dbe6 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 801dbe6:	b580      	push	{r7, lr}
 801dbe8:	b086      	sub	sp, #24
 801dbea:	af00      	add	r7, sp, #0
 801dbec:	4603      	mov	r3, r0
 801dbee:	60b9      	str	r1, [r7, #8]
 801dbf0:	607a      	str	r2, [r7, #4]
 801dbf2:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 801dbf4:	2300      	movs	r3, #0
 801dbf6:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 801dbf8:	f7ff ff3e 	bl	801da78 <__NVIC_GetPriorityGrouping>
 801dbfc:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 801dbfe:	687a      	ldr	r2, [r7, #4]
 801dc00:	68b9      	ldr	r1, [r7, #8]
 801dc02:	6978      	ldr	r0, [r7, #20]
 801dc04:	f7ff ff8e 	bl	801db24 <NVIC_EncodePriority>
 801dc08:	4602      	mov	r2, r0
 801dc0a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801dc0e:	4611      	mov	r1, r2
 801dc10:	4618      	mov	r0, r3
 801dc12:	f7ff ff5d 	bl	801dad0 <__NVIC_SetPriority>
}
 801dc16:	bf00      	nop
 801dc18:	3718      	adds	r7, #24
 801dc1a:	46bd      	mov	sp, r7
 801dc1c:	bd80      	pop	{r7, pc}

0801dc1e <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 801dc1e:	b580      	push	{r7, lr}
 801dc20:	b082      	sub	sp, #8
 801dc22:	af00      	add	r7, sp, #0
 801dc24:	4603      	mov	r3, r0
 801dc26:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 801dc28:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801dc2c:	4618      	mov	r0, r3
 801dc2e:	f7ff ff31 	bl	801da94 <__NVIC_EnableIRQ>
}
 801dc32:	bf00      	nop
 801dc34:	3708      	adds	r7, #8
 801dc36:	46bd      	mov	sp, r7
 801dc38:	bd80      	pop	{r7, pc}

0801dc3a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 801dc3a:	b580      	push	{r7, lr}
 801dc3c:	b082      	sub	sp, #8
 801dc3e:	af00      	add	r7, sp, #0
 801dc40:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 801dc42:	6878      	ldr	r0, [r7, #4]
 801dc44:	f7ff ffa2 	bl	801db8c <SysTick_Config>
 801dc48:	4603      	mov	r3, r0
}
 801dc4a:	4618      	mov	r0, r3
 801dc4c:	3708      	adds	r7, #8
 801dc4e:	46bd      	mov	sp, r7
 801dc50:	bd80      	pop	{r7, pc}

0801dc52 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 801dc52:	b580      	push	{r7, lr}
 801dc54:	b084      	sub	sp, #16
 801dc56:	af00      	add	r7, sp, #0
 801dc58:	6078      	str	r0, [r7, #4]
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 801dc5a:	687b      	ldr	r3, [r7, #4]
 801dc5c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801dc5e:	60fb      	str	r3, [r7, #12]
  
  uint32_t tickstart = HAL_GetTick();
 801dc60:	f7ff feb6 	bl	801d9d0 <HAL_GetTick>
 801dc64:	60b8      	str	r0, [r7, #8]
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 801dc66:	687b      	ldr	r3, [r7, #4]
 801dc68:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 801dc6c:	b2db      	uxtb	r3, r3
 801dc6e:	2b02      	cmp	r3, #2
 801dc70:	d008      	beq.n	801dc84 <HAL_DMA_Abort+0x32>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 801dc72:	687b      	ldr	r3, [r7, #4]
 801dc74:	2280      	movs	r2, #128	; 0x80
 801dc76:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 801dc78:	687b      	ldr	r3, [r7, #4]
 801dc7a:	2200      	movs	r2, #0
 801dc7c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    return HAL_ERROR;
 801dc80:	2301      	movs	r3, #1
 801dc82:	e052      	b.n	801dd2a <HAL_DMA_Abort+0xd8>
  }
  else
  {
    /* Disable all the transfer interrupts */
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 801dc84:	687b      	ldr	r3, [r7, #4]
 801dc86:	681b      	ldr	r3, [r3, #0]
 801dc88:	681a      	ldr	r2, [r3, #0]
 801dc8a:	687b      	ldr	r3, [r7, #4]
 801dc8c:	681b      	ldr	r3, [r3, #0]
 801dc8e:	f022 0216 	bic.w	r2, r2, #22
 801dc92:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 801dc94:	687b      	ldr	r3, [r7, #4]
 801dc96:	681b      	ldr	r3, [r3, #0]
 801dc98:	695a      	ldr	r2, [r3, #20]
 801dc9a:	687b      	ldr	r3, [r7, #4]
 801dc9c:	681b      	ldr	r3, [r3, #0]
 801dc9e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 801dca2:	615a      	str	r2, [r3, #20]
    
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 801dca4:	687b      	ldr	r3, [r7, #4]
 801dca6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801dca8:	2b00      	cmp	r3, #0
 801dcaa:	d103      	bne.n	801dcb4 <HAL_DMA_Abort+0x62>
 801dcac:	687b      	ldr	r3, [r7, #4]
 801dcae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801dcb0:	2b00      	cmp	r3, #0
 801dcb2:	d007      	beq.n	801dcc4 <HAL_DMA_Abort+0x72>
    {
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 801dcb4:	687b      	ldr	r3, [r7, #4]
 801dcb6:	681b      	ldr	r3, [r3, #0]
 801dcb8:	681a      	ldr	r2, [r3, #0]
 801dcba:	687b      	ldr	r3, [r7, #4]
 801dcbc:	681b      	ldr	r3, [r3, #0]
 801dcbe:	f022 0208 	bic.w	r2, r2, #8
 801dcc2:	601a      	str	r2, [r3, #0]
    }
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 801dcc4:	687b      	ldr	r3, [r7, #4]
 801dcc6:	681b      	ldr	r3, [r3, #0]
 801dcc8:	681a      	ldr	r2, [r3, #0]
 801dcca:	687b      	ldr	r3, [r7, #4]
 801dccc:	681b      	ldr	r3, [r3, #0]
 801dcce:	f022 0201 	bic.w	r2, r2, #1
 801dcd2:	601a      	str	r2, [r3, #0]
    
    /* Check if the DMA Stream is effectively disabled */
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 801dcd4:	e013      	b.n	801dcfe <HAL_DMA_Abort+0xac>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 801dcd6:	f7ff fe7b 	bl	801d9d0 <HAL_GetTick>
 801dcda:	4602      	mov	r2, r0
 801dcdc:	68bb      	ldr	r3, [r7, #8]
 801dcde:	1ad3      	subs	r3, r2, r3
 801dce0:	2b05      	cmp	r3, #5
 801dce2:	d90c      	bls.n	801dcfe <HAL_DMA_Abort+0xac>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 801dce4:	687b      	ldr	r3, [r7, #4]
 801dce6:	2220      	movs	r2, #32
 801dce8:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 801dcea:	687b      	ldr	r3, [r7, #4]
 801dcec:	2200      	movs	r2, #0
 801dcee:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 801dcf2:	687b      	ldr	r3, [r7, #4]
 801dcf4:	2203      	movs	r2, #3
 801dcf6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_TIMEOUT;
 801dcfa:	2303      	movs	r3, #3
 801dcfc:	e015      	b.n	801dd2a <HAL_DMA_Abort+0xd8>
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 801dcfe:	687b      	ldr	r3, [r7, #4]
 801dd00:	681b      	ldr	r3, [r3, #0]
 801dd02:	681b      	ldr	r3, [r3, #0]
 801dd04:	f003 0301 	and.w	r3, r3, #1
 801dd08:	2b00      	cmp	r3, #0
 801dd0a:	d1e4      	bne.n	801dcd6 <HAL_DMA_Abort+0x84>
      }
    }
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 801dd0c:	687b      	ldr	r3, [r7, #4]
 801dd0e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801dd10:	223f      	movs	r2, #63	; 0x3f
 801dd12:	409a      	lsls	r2, r3
 801dd14:	68fb      	ldr	r3, [r7, #12]
 801dd16:	609a      	str	r2, [r3, #8]
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 801dd18:	687b      	ldr	r3, [r7, #4]
 801dd1a:	2200      	movs	r2, #0
 801dd1c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Change the DMA state*/
    hdma->State = HAL_DMA_STATE_READY;
 801dd20:	687b      	ldr	r3, [r7, #4]
 801dd22:	2201      	movs	r2, #1
 801dd24:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  }
  return HAL_OK;
 801dd28:	2300      	movs	r3, #0
}
 801dd2a:	4618      	mov	r0, r3
 801dd2c:	3710      	adds	r7, #16
 801dd2e:	46bd      	mov	sp, r7
 801dd30:	bd80      	pop	{r7, pc}

0801dd32 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 801dd32:	b480      	push	{r7}
 801dd34:	b083      	sub	sp, #12
 801dd36:	af00      	add	r7, sp, #0
 801dd38:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 801dd3a:	687b      	ldr	r3, [r7, #4]
 801dd3c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 801dd40:	b2db      	uxtb	r3, r3
 801dd42:	2b02      	cmp	r3, #2
 801dd44:	d004      	beq.n	801dd50 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 801dd46:	687b      	ldr	r3, [r7, #4]
 801dd48:	2280      	movs	r2, #128	; 0x80
 801dd4a:	655a      	str	r2, [r3, #84]	; 0x54
    return HAL_ERROR;
 801dd4c:	2301      	movs	r3, #1
 801dd4e:	e00c      	b.n	801dd6a <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 801dd50:	687b      	ldr	r3, [r7, #4]
 801dd52:	2205      	movs	r2, #5
 801dd54:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 801dd58:	687b      	ldr	r3, [r7, #4]
 801dd5a:	681b      	ldr	r3, [r3, #0]
 801dd5c:	681a      	ldr	r2, [r3, #0]
 801dd5e:	687b      	ldr	r3, [r7, #4]
 801dd60:	681b      	ldr	r3, [r3, #0]
 801dd62:	f022 0201 	bic.w	r2, r2, #1
 801dd66:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 801dd68:	2300      	movs	r3, #0
}
 801dd6a:	4618      	mov	r0, r3
 801dd6c:	370c      	adds	r7, #12
 801dd6e:	46bd      	mov	sp, r7
 801dd70:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dd74:	4770      	bx	lr
	...

0801dd78 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 801dd78:	b480      	push	{r7}
 801dd7a:	b089      	sub	sp, #36	; 0x24
 801dd7c:	af00      	add	r7, sp, #0
 801dd7e:	6078      	str	r0, [r7, #4]
 801dd80:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 801dd82:	2300      	movs	r3, #0
 801dd84:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 801dd86:	2300      	movs	r3, #0
 801dd88:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 801dd8a:	2300      	movs	r3, #0
 801dd8c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 801dd8e:	2300      	movs	r3, #0
 801dd90:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 801dd92:	2300      	movs	r3, #0
 801dd94:	61fb      	str	r3, [r7, #28]
 801dd96:	e175      	b.n	801e084 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 801dd98:	2201      	movs	r2, #1
 801dd9a:	69fb      	ldr	r3, [r7, #28]
 801dd9c:	fa02 f303 	lsl.w	r3, r2, r3
 801dda0:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 801dda2:	683b      	ldr	r3, [r7, #0]
 801dda4:	681b      	ldr	r3, [r3, #0]
 801dda6:	697a      	ldr	r2, [r7, #20]
 801dda8:	4013      	ands	r3, r2
 801ddaa:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 801ddac:	693a      	ldr	r2, [r7, #16]
 801ddae:	697b      	ldr	r3, [r7, #20]
 801ddb0:	429a      	cmp	r2, r3
 801ddb2:	f040 8164 	bne.w	801e07e <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 801ddb6:	683b      	ldr	r3, [r7, #0]
 801ddb8:	685b      	ldr	r3, [r3, #4]
 801ddba:	2b01      	cmp	r3, #1
 801ddbc:	d00b      	beq.n	801ddd6 <HAL_GPIO_Init+0x5e>
 801ddbe:	683b      	ldr	r3, [r7, #0]
 801ddc0:	685b      	ldr	r3, [r3, #4]
 801ddc2:	2b02      	cmp	r3, #2
 801ddc4:	d007      	beq.n	801ddd6 <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 801ddc6:	683b      	ldr	r3, [r7, #0]
 801ddc8:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 801ddca:	2b11      	cmp	r3, #17
 801ddcc:	d003      	beq.n	801ddd6 <HAL_GPIO_Init+0x5e>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 801ddce:	683b      	ldr	r3, [r7, #0]
 801ddd0:	685b      	ldr	r3, [r3, #4]
 801ddd2:	2b12      	cmp	r3, #18
 801ddd4:	d130      	bne.n	801de38 <HAL_GPIO_Init+0xc0>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 801ddd6:	687b      	ldr	r3, [r7, #4]
 801ddd8:	689b      	ldr	r3, [r3, #8]
 801ddda:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 801dddc:	69fb      	ldr	r3, [r7, #28]
 801ddde:	005b      	lsls	r3, r3, #1
 801dde0:	2203      	movs	r2, #3
 801dde2:	fa02 f303 	lsl.w	r3, r2, r3
 801dde6:	43db      	mvns	r3, r3
 801dde8:	69ba      	ldr	r2, [r7, #24]
 801ddea:	4013      	ands	r3, r2
 801ddec:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 801ddee:	683b      	ldr	r3, [r7, #0]
 801ddf0:	68da      	ldr	r2, [r3, #12]
 801ddf2:	69fb      	ldr	r3, [r7, #28]
 801ddf4:	005b      	lsls	r3, r3, #1
 801ddf6:	fa02 f303 	lsl.w	r3, r2, r3
 801ddfa:	69ba      	ldr	r2, [r7, #24]
 801ddfc:	4313      	orrs	r3, r2
 801ddfe:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 801de00:	687b      	ldr	r3, [r7, #4]
 801de02:	69ba      	ldr	r2, [r7, #24]
 801de04:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 801de06:	687b      	ldr	r3, [r7, #4]
 801de08:	685b      	ldr	r3, [r3, #4]
 801de0a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 801de0c:	2201      	movs	r2, #1
 801de0e:	69fb      	ldr	r3, [r7, #28]
 801de10:	fa02 f303 	lsl.w	r3, r2, r3
 801de14:	43db      	mvns	r3, r3
 801de16:	69ba      	ldr	r2, [r7, #24]
 801de18:	4013      	ands	r3, r2
 801de1a:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4) << position);
 801de1c:	683b      	ldr	r3, [r7, #0]
 801de1e:	685b      	ldr	r3, [r3, #4]
 801de20:	091b      	lsrs	r3, r3, #4
 801de22:	f003 0201 	and.w	r2, r3, #1
 801de26:	69fb      	ldr	r3, [r7, #28]
 801de28:	fa02 f303 	lsl.w	r3, r2, r3
 801de2c:	69ba      	ldr	r2, [r7, #24]
 801de2e:	4313      	orrs	r3, r2
 801de30:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 801de32:	687b      	ldr	r3, [r7, #4]
 801de34:	69ba      	ldr	r2, [r7, #24]
 801de36:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 801de38:	687b      	ldr	r3, [r7, #4]
 801de3a:	68db      	ldr	r3, [r3, #12]
 801de3c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 801de3e:	69fb      	ldr	r3, [r7, #28]
 801de40:	005b      	lsls	r3, r3, #1
 801de42:	2203      	movs	r2, #3
 801de44:	fa02 f303 	lsl.w	r3, r2, r3
 801de48:	43db      	mvns	r3, r3
 801de4a:	69ba      	ldr	r2, [r7, #24]
 801de4c:	4013      	ands	r3, r2
 801de4e:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2));
 801de50:	683b      	ldr	r3, [r7, #0]
 801de52:	689a      	ldr	r2, [r3, #8]
 801de54:	69fb      	ldr	r3, [r7, #28]
 801de56:	005b      	lsls	r3, r3, #1
 801de58:	fa02 f303 	lsl.w	r3, r2, r3
 801de5c:	69ba      	ldr	r2, [r7, #24]
 801de5e:	4313      	orrs	r3, r2
 801de60:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 801de62:	687b      	ldr	r3, [r7, #4]
 801de64:	69ba      	ldr	r2, [r7, #24]
 801de66:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 801de68:	683b      	ldr	r3, [r7, #0]
 801de6a:	685b      	ldr	r3, [r3, #4]
 801de6c:	2b02      	cmp	r3, #2
 801de6e:	d003      	beq.n	801de78 <HAL_GPIO_Init+0x100>
 801de70:	683b      	ldr	r3, [r7, #0]
 801de72:	685b      	ldr	r3, [r3, #4]
 801de74:	2b12      	cmp	r3, #18
 801de76:	d123      	bne.n	801dec0 <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 801de78:	69fb      	ldr	r3, [r7, #28]
 801de7a:	08da      	lsrs	r2, r3, #3
 801de7c:	687b      	ldr	r3, [r7, #4]
 801de7e:	3208      	adds	r2, #8
 801de80:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801de84:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 801de86:	69fb      	ldr	r3, [r7, #28]
 801de88:	f003 0307 	and.w	r3, r3, #7
 801de8c:	009b      	lsls	r3, r3, #2
 801de8e:	220f      	movs	r2, #15
 801de90:	fa02 f303 	lsl.w	r3, r2, r3
 801de94:	43db      	mvns	r3, r3
 801de96:	69ba      	ldr	r2, [r7, #24]
 801de98:	4013      	ands	r3, r2
 801de9a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 801de9c:	683b      	ldr	r3, [r7, #0]
 801de9e:	691a      	ldr	r2, [r3, #16]
 801dea0:	69fb      	ldr	r3, [r7, #28]
 801dea2:	f003 0307 	and.w	r3, r3, #7
 801dea6:	009b      	lsls	r3, r3, #2
 801dea8:	fa02 f303 	lsl.w	r3, r2, r3
 801deac:	69ba      	ldr	r2, [r7, #24]
 801deae:	4313      	orrs	r3, r2
 801deb0:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 801deb2:	69fb      	ldr	r3, [r7, #28]
 801deb4:	08da      	lsrs	r2, r3, #3
 801deb6:	687b      	ldr	r3, [r7, #4]
 801deb8:	3208      	adds	r2, #8
 801deba:	69b9      	ldr	r1, [r7, #24]
 801debc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }
      
      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 801dec0:	687b      	ldr	r3, [r7, #4]
 801dec2:	681b      	ldr	r3, [r3, #0]
 801dec4:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 801dec6:	69fb      	ldr	r3, [r7, #28]
 801dec8:	005b      	lsls	r3, r3, #1
 801deca:	2203      	movs	r2, #3
 801decc:	fa02 f303 	lsl.w	r3, r2, r3
 801ded0:	43db      	mvns	r3, r3
 801ded2:	69ba      	ldr	r2, [r7, #24]
 801ded4:	4013      	ands	r3, r2
 801ded6:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 801ded8:	683b      	ldr	r3, [r7, #0]
 801deda:	685b      	ldr	r3, [r3, #4]
 801dedc:	f003 0203 	and.w	r2, r3, #3
 801dee0:	69fb      	ldr	r3, [r7, #28]
 801dee2:	005b      	lsls	r3, r3, #1
 801dee4:	fa02 f303 	lsl.w	r3, r2, r3
 801dee8:	69ba      	ldr	r2, [r7, #24]
 801deea:	4313      	orrs	r3, r2
 801deec:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 801deee:	687b      	ldr	r3, [r7, #4]
 801def0:	69ba      	ldr	r2, [r7, #24]
 801def2:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 801def4:	683b      	ldr	r3, [r7, #0]
 801def6:	685b      	ldr	r3, [r3, #4]
 801def8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801defc:	2b00      	cmp	r3, #0
 801defe:	f000 80be 	beq.w	801e07e <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 801df02:	4b66      	ldr	r3, [pc, #408]	; (801e09c <HAL_GPIO_Init+0x324>)
 801df04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801df06:	4a65      	ldr	r2, [pc, #404]	; (801e09c <HAL_GPIO_Init+0x324>)
 801df08:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801df0c:	6453      	str	r3, [r2, #68]	; 0x44
 801df0e:	4b63      	ldr	r3, [pc, #396]	; (801e09c <HAL_GPIO_Init+0x324>)
 801df10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801df12:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801df16:	60fb      	str	r3, [r7, #12]
 801df18:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 801df1a:	4a61      	ldr	r2, [pc, #388]	; (801e0a0 <HAL_GPIO_Init+0x328>)
 801df1c:	69fb      	ldr	r3, [r7, #28]
 801df1e:	089b      	lsrs	r3, r3, #2
 801df20:	3302      	adds	r3, #2
 801df22:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801df26:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 801df28:	69fb      	ldr	r3, [r7, #28]
 801df2a:	f003 0303 	and.w	r3, r3, #3
 801df2e:	009b      	lsls	r3, r3, #2
 801df30:	220f      	movs	r2, #15
 801df32:	fa02 f303 	lsl.w	r3, r2, r3
 801df36:	43db      	mvns	r3, r3
 801df38:	69ba      	ldr	r2, [r7, #24]
 801df3a:	4013      	ands	r3, r2
 801df3c:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 801df3e:	687b      	ldr	r3, [r7, #4]
 801df40:	4a58      	ldr	r2, [pc, #352]	; (801e0a4 <HAL_GPIO_Init+0x32c>)
 801df42:	4293      	cmp	r3, r2
 801df44:	d037      	beq.n	801dfb6 <HAL_GPIO_Init+0x23e>
 801df46:	687b      	ldr	r3, [r7, #4]
 801df48:	4a57      	ldr	r2, [pc, #348]	; (801e0a8 <HAL_GPIO_Init+0x330>)
 801df4a:	4293      	cmp	r3, r2
 801df4c:	d031      	beq.n	801dfb2 <HAL_GPIO_Init+0x23a>
 801df4e:	687b      	ldr	r3, [r7, #4]
 801df50:	4a56      	ldr	r2, [pc, #344]	; (801e0ac <HAL_GPIO_Init+0x334>)
 801df52:	4293      	cmp	r3, r2
 801df54:	d02b      	beq.n	801dfae <HAL_GPIO_Init+0x236>
 801df56:	687b      	ldr	r3, [r7, #4]
 801df58:	4a55      	ldr	r2, [pc, #340]	; (801e0b0 <HAL_GPIO_Init+0x338>)
 801df5a:	4293      	cmp	r3, r2
 801df5c:	d025      	beq.n	801dfaa <HAL_GPIO_Init+0x232>
 801df5e:	687b      	ldr	r3, [r7, #4]
 801df60:	4a54      	ldr	r2, [pc, #336]	; (801e0b4 <HAL_GPIO_Init+0x33c>)
 801df62:	4293      	cmp	r3, r2
 801df64:	d01f      	beq.n	801dfa6 <HAL_GPIO_Init+0x22e>
 801df66:	687b      	ldr	r3, [r7, #4]
 801df68:	4a53      	ldr	r2, [pc, #332]	; (801e0b8 <HAL_GPIO_Init+0x340>)
 801df6a:	4293      	cmp	r3, r2
 801df6c:	d019      	beq.n	801dfa2 <HAL_GPIO_Init+0x22a>
 801df6e:	687b      	ldr	r3, [r7, #4]
 801df70:	4a52      	ldr	r2, [pc, #328]	; (801e0bc <HAL_GPIO_Init+0x344>)
 801df72:	4293      	cmp	r3, r2
 801df74:	d013      	beq.n	801df9e <HAL_GPIO_Init+0x226>
 801df76:	687b      	ldr	r3, [r7, #4]
 801df78:	4a51      	ldr	r2, [pc, #324]	; (801e0c0 <HAL_GPIO_Init+0x348>)
 801df7a:	4293      	cmp	r3, r2
 801df7c:	d00d      	beq.n	801df9a <HAL_GPIO_Init+0x222>
 801df7e:	687b      	ldr	r3, [r7, #4]
 801df80:	4a50      	ldr	r2, [pc, #320]	; (801e0c4 <HAL_GPIO_Init+0x34c>)
 801df82:	4293      	cmp	r3, r2
 801df84:	d007      	beq.n	801df96 <HAL_GPIO_Init+0x21e>
 801df86:	687b      	ldr	r3, [r7, #4]
 801df88:	4a4f      	ldr	r2, [pc, #316]	; (801e0c8 <HAL_GPIO_Init+0x350>)
 801df8a:	4293      	cmp	r3, r2
 801df8c:	d101      	bne.n	801df92 <HAL_GPIO_Init+0x21a>
 801df8e:	2309      	movs	r3, #9
 801df90:	e012      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801df92:	230a      	movs	r3, #10
 801df94:	e010      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801df96:	2308      	movs	r3, #8
 801df98:	e00e      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801df9a:	2307      	movs	r3, #7
 801df9c:	e00c      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801df9e:	2306      	movs	r3, #6
 801dfa0:	e00a      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801dfa2:	2305      	movs	r3, #5
 801dfa4:	e008      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801dfa6:	2304      	movs	r3, #4
 801dfa8:	e006      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801dfaa:	2303      	movs	r3, #3
 801dfac:	e004      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801dfae:	2302      	movs	r3, #2
 801dfb0:	e002      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801dfb2:	2301      	movs	r3, #1
 801dfb4:	e000      	b.n	801dfb8 <HAL_GPIO_Init+0x240>
 801dfb6:	2300      	movs	r3, #0
 801dfb8:	69fa      	ldr	r2, [r7, #28]
 801dfba:	f002 0203 	and.w	r2, r2, #3
 801dfbe:	0092      	lsls	r2, r2, #2
 801dfc0:	4093      	lsls	r3, r2
 801dfc2:	69ba      	ldr	r2, [r7, #24]
 801dfc4:	4313      	orrs	r3, r2
 801dfc6:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 801dfc8:	4935      	ldr	r1, [pc, #212]	; (801e0a0 <HAL_GPIO_Init+0x328>)
 801dfca:	69fb      	ldr	r3, [r7, #28]
 801dfcc:	089b      	lsrs	r3, r3, #2
 801dfce:	3302      	adds	r3, #2
 801dfd0:	69ba      	ldr	r2, [r7, #24]
 801dfd2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 801dfd6:	4b3d      	ldr	r3, [pc, #244]	; (801e0cc <HAL_GPIO_Init+0x354>)
 801dfd8:	681b      	ldr	r3, [r3, #0]
 801dfda:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801dfdc:	693b      	ldr	r3, [r7, #16]
 801dfde:	43db      	mvns	r3, r3
 801dfe0:	69ba      	ldr	r2, [r7, #24]
 801dfe2:	4013      	ands	r3, r2
 801dfe4:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 801dfe6:	683b      	ldr	r3, [r7, #0]
 801dfe8:	685b      	ldr	r3, [r3, #4]
 801dfea:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 801dfee:	2b00      	cmp	r3, #0
 801dff0:	d003      	beq.n	801dffa <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 801dff2:	69ba      	ldr	r2, [r7, #24]
 801dff4:	693b      	ldr	r3, [r7, #16]
 801dff6:	4313      	orrs	r3, r2
 801dff8:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 801dffa:	4a34      	ldr	r2, [pc, #208]	; (801e0cc <HAL_GPIO_Init+0x354>)
 801dffc:	69bb      	ldr	r3, [r7, #24]
 801dffe:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 801e000:	4b32      	ldr	r3, [pc, #200]	; (801e0cc <HAL_GPIO_Init+0x354>)
 801e002:	685b      	ldr	r3, [r3, #4]
 801e004:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801e006:	693b      	ldr	r3, [r7, #16]
 801e008:	43db      	mvns	r3, r3
 801e00a:	69ba      	ldr	r2, [r7, #24]
 801e00c:	4013      	ands	r3, r2
 801e00e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 801e010:	683b      	ldr	r3, [r7, #0]
 801e012:	685b      	ldr	r3, [r3, #4]
 801e014:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801e018:	2b00      	cmp	r3, #0
 801e01a:	d003      	beq.n	801e024 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 801e01c:	69ba      	ldr	r2, [r7, #24]
 801e01e:	693b      	ldr	r3, [r7, #16]
 801e020:	4313      	orrs	r3, r2
 801e022:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 801e024:	4a29      	ldr	r2, [pc, #164]	; (801e0cc <HAL_GPIO_Init+0x354>)
 801e026:	69bb      	ldr	r3, [r7, #24]
 801e028:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 801e02a:	4b28      	ldr	r3, [pc, #160]	; (801e0cc <HAL_GPIO_Init+0x354>)
 801e02c:	689b      	ldr	r3, [r3, #8]
 801e02e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801e030:	693b      	ldr	r3, [r7, #16]
 801e032:	43db      	mvns	r3, r3
 801e034:	69ba      	ldr	r2, [r7, #24]
 801e036:	4013      	ands	r3, r2
 801e038:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 801e03a:	683b      	ldr	r3, [r7, #0]
 801e03c:	685b      	ldr	r3, [r3, #4]
 801e03e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 801e042:	2b00      	cmp	r3, #0
 801e044:	d003      	beq.n	801e04e <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 801e046:	69ba      	ldr	r2, [r7, #24]
 801e048:	693b      	ldr	r3, [r7, #16]
 801e04a:	4313      	orrs	r3, r2
 801e04c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 801e04e:	4a1f      	ldr	r2, [pc, #124]	; (801e0cc <HAL_GPIO_Init+0x354>)
 801e050:	69bb      	ldr	r3, [r7, #24]
 801e052:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 801e054:	4b1d      	ldr	r3, [pc, #116]	; (801e0cc <HAL_GPIO_Init+0x354>)
 801e056:	68db      	ldr	r3, [r3, #12]
 801e058:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801e05a:	693b      	ldr	r3, [r7, #16]
 801e05c:	43db      	mvns	r3, r3
 801e05e:	69ba      	ldr	r2, [r7, #24]
 801e060:	4013      	ands	r3, r2
 801e062:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 801e064:	683b      	ldr	r3, [r7, #0]
 801e066:	685b      	ldr	r3, [r3, #4]
 801e068:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 801e06c:	2b00      	cmp	r3, #0
 801e06e:	d003      	beq.n	801e078 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 801e070:	69ba      	ldr	r2, [r7, #24]
 801e072:	693b      	ldr	r3, [r7, #16]
 801e074:	4313      	orrs	r3, r2
 801e076:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 801e078:	4a14      	ldr	r2, [pc, #80]	; (801e0cc <HAL_GPIO_Init+0x354>)
 801e07a:	69bb      	ldr	r3, [r7, #24]
 801e07c:	60d3      	str	r3, [r2, #12]
  for(position = 0; position < GPIO_NUMBER; position++)
 801e07e:	69fb      	ldr	r3, [r7, #28]
 801e080:	3301      	adds	r3, #1
 801e082:	61fb      	str	r3, [r7, #28]
 801e084:	69fb      	ldr	r3, [r7, #28]
 801e086:	2b0f      	cmp	r3, #15
 801e088:	f67f ae86 	bls.w	801dd98 <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 801e08c:	bf00      	nop
 801e08e:	bf00      	nop
 801e090:	3724      	adds	r7, #36	; 0x24
 801e092:	46bd      	mov	sp, r7
 801e094:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e098:	4770      	bx	lr
 801e09a:	bf00      	nop
 801e09c:	40023800 	.word	0x40023800
 801e0a0:	40013800 	.word	0x40013800
 801e0a4:	40020000 	.word	0x40020000
 801e0a8:	40020400 	.word	0x40020400
 801e0ac:	40020800 	.word	0x40020800
 801e0b0:	40020c00 	.word	0x40020c00
 801e0b4:	40021000 	.word	0x40021000
 801e0b8:	40021400 	.word	0x40021400
 801e0bc:	40021800 	.word	0x40021800
 801e0c0:	40021c00 	.word	0x40021c00
 801e0c4:	40022000 	.word	0x40022000
 801e0c8:	40022400 	.word	0x40022400
 801e0cc:	40013c00 	.word	0x40013c00

0801e0d0 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 801e0d0:	b580      	push	{r7, lr}
 801e0d2:	b082      	sub	sp, #8
 801e0d4:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 801e0d6:	2300      	movs	r3, #0
 801e0d8:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 801e0da:	4b23      	ldr	r3, [pc, #140]	; (801e168 <HAL_PWREx_EnableOverDrive+0x98>)
 801e0dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e0de:	4a22      	ldr	r2, [pc, #136]	; (801e168 <HAL_PWREx_EnableOverDrive+0x98>)
 801e0e0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801e0e4:	6413      	str	r3, [r2, #64]	; 0x40
 801e0e6:	4b20      	ldr	r3, [pc, #128]	; (801e168 <HAL_PWREx_EnableOverDrive+0x98>)
 801e0e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e0ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801e0ee:	603b      	str	r3, [r7, #0]
 801e0f0:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 801e0f2:	4b1e      	ldr	r3, [pc, #120]	; (801e16c <HAL_PWREx_EnableOverDrive+0x9c>)
 801e0f4:	681b      	ldr	r3, [r3, #0]
 801e0f6:	4a1d      	ldr	r2, [pc, #116]	; (801e16c <HAL_PWREx_EnableOverDrive+0x9c>)
 801e0f8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801e0fc:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 801e0fe:	f7ff fc67 	bl	801d9d0 <HAL_GetTick>
 801e102:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 801e104:	e009      	b.n	801e11a <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 801e106:	f7ff fc63 	bl	801d9d0 <HAL_GetTick>
 801e10a:	4602      	mov	r2, r0
 801e10c:	687b      	ldr	r3, [r7, #4]
 801e10e:	1ad3      	subs	r3, r2, r3
 801e110:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 801e114:	d901      	bls.n	801e11a <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 801e116:	2303      	movs	r3, #3
 801e118:	e022      	b.n	801e160 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 801e11a:	4b14      	ldr	r3, [pc, #80]	; (801e16c <HAL_PWREx_EnableOverDrive+0x9c>)
 801e11c:	685b      	ldr	r3, [r3, #4]
 801e11e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 801e122:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 801e126:	d1ee      	bne.n	801e106 <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 801e128:	4b10      	ldr	r3, [pc, #64]	; (801e16c <HAL_PWREx_EnableOverDrive+0x9c>)
 801e12a:	681b      	ldr	r3, [r3, #0]
 801e12c:	4a0f      	ldr	r2, [pc, #60]	; (801e16c <HAL_PWREx_EnableOverDrive+0x9c>)
 801e12e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 801e132:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 801e134:	f7ff fc4c 	bl	801d9d0 <HAL_GetTick>
 801e138:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 801e13a:	e009      	b.n	801e150 <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 801e13c:	f7ff fc48 	bl	801d9d0 <HAL_GetTick>
 801e140:	4602      	mov	r2, r0
 801e142:	687b      	ldr	r3, [r7, #4]
 801e144:	1ad3      	subs	r3, r2, r3
 801e146:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 801e14a:	d901      	bls.n	801e150 <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 801e14c:	2303      	movs	r3, #3
 801e14e:	e007      	b.n	801e160 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 801e150:	4b06      	ldr	r3, [pc, #24]	; (801e16c <HAL_PWREx_EnableOverDrive+0x9c>)
 801e152:	685b      	ldr	r3, [r3, #4]
 801e154:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801e158:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 801e15c:	d1ee      	bne.n	801e13c <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 801e15e:	2300      	movs	r3, #0
}
 801e160:	4618      	mov	r0, r3
 801e162:	3708      	adds	r7, #8
 801e164:	46bd      	mov	sp, r7
 801e166:	bd80      	pop	{r7, pc}
 801e168:	40023800 	.word	0x40023800
 801e16c:	40007000 	.word	0x40007000

0801e170 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 801e170:	b580      	push	{r7, lr}
 801e172:	b086      	sub	sp, #24
 801e174:	af00      	add	r7, sp, #0
 801e176:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 801e178:	2300      	movs	r3, #0
 801e17a:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 801e17c:	687b      	ldr	r3, [r7, #4]
 801e17e:	2b00      	cmp	r3, #0
 801e180:	d101      	bne.n	801e186 <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 801e182:	2301      	movs	r3, #1
 801e184:	e291      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 801e186:	687b      	ldr	r3, [r7, #4]
 801e188:	681b      	ldr	r3, [r3, #0]
 801e18a:	f003 0301 	and.w	r3, r3, #1
 801e18e:	2b00      	cmp	r3, #0
 801e190:	f000 8087 	beq.w	801e2a2 <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 801e194:	4b96      	ldr	r3, [pc, #600]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e196:	689b      	ldr	r3, [r3, #8]
 801e198:	f003 030c 	and.w	r3, r3, #12
 801e19c:	2b04      	cmp	r3, #4
 801e19e:	d00c      	beq.n	801e1ba <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 801e1a0:	4b93      	ldr	r3, [pc, #588]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e1a2:	689b      	ldr	r3, [r3, #8]
 801e1a4:	f003 030c 	and.w	r3, r3, #12
 801e1a8:	2b08      	cmp	r3, #8
 801e1aa:	d112      	bne.n	801e1d2 <HAL_RCC_OscConfig+0x62>
 801e1ac:	4b90      	ldr	r3, [pc, #576]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e1ae:	685b      	ldr	r3, [r3, #4]
 801e1b0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 801e1b4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 801e1b8:	d10b      	bne.n	801e1d2 <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 801e1ba:	4b8d      	ldr	r3, [pc, #564]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e1bc:	681b      	ldr	r3, [r3, #0]
 801e1be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801e1c2:	2b00      	cmp	r3, #0
 801e1c4:	d06c      	beq.n	801e2a0 <HAL_RCC_OscConfig+0x130>
 801e1c6:	687b      	ldr	r3, [r7, #4]
 801e1c8:	685b      	ldr	r3, [r3, #4]
 801e1ca:	2b00      	cmp	r3, #0
 801e1cc:	d168      	bne.n	801e2a0 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 801e1ce:	2301      	movs	r3, #1
 801e1d0:	e26b      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 801e1d2:	687b      	ldr	r3, [r7, #4]
 801e1d4:	685b      	ldr	r3, [r3, #4]
 801e1d6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 801e1da:	d106      	bne.n	801e1ea <HAL_RCC_OscConfig+0x7a>
 801e1dc:	4b84      	ldr	r3, [pc, #528]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e1de:	681b      	ldr	r3, [r3, #0]
 801e1e0:	4a83      	ldr	r2, [pc, #524]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e1e2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801e1e6:	6013      	str	r3, [r2, #0]
 801e1e8:	e02e      	b.n	801e248 <HAL_RCC_OscConfig+0xd8>
 801e1ea:	687b      	ldr	r3, [r7, #4]
 801e1ec:	685b      	ldr	r3, [r3, #4]
 801e1ee:	2b00      	cmp	r3, #0
 801e1f0:	d10c      	bne.n	801e20c <HAL_RCC_OscConfig+0x9c>
 801e1f2:	4b7f      	ldr	r3, [pc, #508]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e1f4:	681b      	ldr	r3, [r3, #0]
 801e1f6:	4a7e      	ldr	r2, [pc, #504]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e1f8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 801e1fc:	6013      	str	r3, [r2, #0]
 801e1fe:	4b7c      	ldr	r3, [pc, #496]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e200:	681b      	ldr	r3, [r3, #0]
 801e202:	4a7b      	ldr	r2, [pc, #492]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e204:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 801e208:	6013      	str	r3, [r2, #0]
 801e20a:	e01d      	b.n	801e248 <HAL_RCC_OscConfig+0xd8>
 801e20c:	687b      	ldr	r3, [r7, #4]
 801e20e:	685b      	ldr	r3, [r3, #4]
 801e210:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 801e214:	d10c      	bne.n	801e230 <HAL_RCC_OscConfig+0xc0>
 801e216:	4b76      	ldr	r3, [pc, #472]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e218:	681b      	ldr	r3, [r3, #0]
 801e21a:	4a75      	ldr	r2, [pc, #468]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e21c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 801e220:	6013      	str	r3, [r2, #0]
 801e222:	4b73      	ldr	r3, [pc, #460]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e224:	681b      	ldr	r3, [r3, #0]
 801e226:	4a72      	ldr	r2, [pc, #456]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e228:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801e22c:	6013      	str	r3, [r2, #0]
 801e22e:	e00b      	b.n	801e248 <HAL_RCC_OscConfig+0xd8>
 801e230:	4b6f      	ldr	r3, [pc, #444]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e232:	681b      	ldr	r3, [r3, #0]
 801e234:	4a6e      	ldr	r2, [pc, #440]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e236:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 801e23a:	6013      	str	r3, [r2, #0]
 801e23c:	4b6c      	ldr	r3, [pc, #432]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e23e:	681b      	ldr	r3, [r3, #0]
 801e240:	4a6b      	ldr	r2, [pc, #428]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e242:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 801e246:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 801e248:	687b      	ldr	r3, [r7, #4]
 801e24a:	685b      	ldr	r3, [r3, #4]
 801e24c:	2b00      	cmp	r3, #0
 801e24e:	d013      	beq.n	801e278 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801e250:	f7ff fbbe 	bl	801d9d0 <HAL_GetTick>
 801e254:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 801e256:	e008      	b.n	801e26a <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 801e258:	f7ff fbba 	bl	801d9d0 <HAL_GetTick>
 801e25c:	4602      	mov	r2, r0
 801e25e:	693b      	ldr	r3, [r7, #16]
 801e260:	1ad3      	subs	r3, r2, r3
 801e262:	2b64      	cmp	r3, #100	; 0x64
 801e264:	d901      	bls.n	801e26a <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 801e266:	2303      	movs	r3, #3
 801e268:	e21f      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 801e26a:	4b61      	ldr	r3, [pc, #388]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e26c:	681b      	ldr	r3, [r3, #0]
 801e26e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801e272:	2b00      	cmp	r3, #0
 801e274:	d0f0      	beq.n	801e258 <HAL_RCC_OscConfig+0xe8>
 801e276:	e014      	b.n	801e2a2 <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801e278:	f7ff fbaa 	bl	801d9d0 <HAL_GetTick>
 801e27c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 801e27e:	e008      	b.n	801e292 <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 801e280:	f7ff fba6 	bl	801d9d0 <HAL_GetTick>
 801e284:	4602      	mov	r2, r0
 801e286:	693b      	ldr	r3, [r7, #16]
 801e288:	1ad3      	subs	r3, r2, r3
 801e28a:	2b64      	cmp	r3, #100	; 0x64
 801e28c:	d901      	bls.n	801e292 <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 801e28e:	2303      	movs	r3, #3
 801e290:	e20b      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 801e292:	4b57      	ldr	r3, [pc, #348]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e294:	681b      	ldr	r3, [r3, #0]
 801e296:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801e29a:	2b00      	cmp	r3, #0
 801e29c:	d1f0      	bne.n	801e280 <HAL_RCC_OscConfig+0x110>
 801e29e:	e000      	b.n	801e2a2 <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 801e2a0:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 801e2a2:	687b      	ldr	r3, [r7, #4]
 801e2a4:	681b      	ldr	r3, [r3, #0]
 801e2a6:	f003 0302 	and.w	r3, r3, #2
 801e2aa:	2b00      	cmp	r3, #0
 801e2ac:	d069      	beq.n	801e382 <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 801e2ae:	4b50      	ldr	r3, [pc, #320]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e2b0:	689b      	ldr	r3, [r3, #8]
 801e2b2:	f003 030c 	and.w	r3, r3, #12
 801e2b6:	2b00      	cmp	r3, #0
 801e2b8:	d00b      	beq.n	801e2d2 <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 801e2ba:	4b4d      	ldr	r3, [pc, #308]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e2bc:	689b      	ldr	r3, [r3, #8]
 801e2be:	f003 030c 	and.w	r3, r3, #12
 801e2c2:	2b08      	cmp	r3, #8
 801e2c4:	d11c      	bne.n	801e300 <HAL_RCC_OscConfig+0x190>
 801e2c6:	4b4a      	ldr	r3, [pc, #296]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e2c8:	685b      	ldr	r3, [r3, #4]
 801e2ca:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 801e2ce:	2b00      	cmp	r3, #0
 801e2d0:	d116      	bne.n	801e300 <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 801e2d2:	4b47      	ldr	r3, [pc, #284]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e2d4:	681b      	ldr	r3, [r3, #0]
 801e2d6:	f003 0302 	and.w	r3, r3, #2
 801e2da:	2b00      	cmp	r3, #0
 801e2dc:	d005      	beq.n	801e2ea <HAL_RCC_OscConfig+0x17a>
 801e2de:	687b      	ldr	r3, [r7, #4]
 801e2e0:	68db      	ldr	r3, [r3, #12]
 801e2e2:	2b01      	cmp	r3, #1
 801e2e4:	d001      	beq.n	801e2ea <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 801e2e6:	2301      	movs	r3, #1
 801e2e8:	e1df      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 801e2ea:	4b41      	ldr	r3, [pc, #260]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e2ec:	681b      	ldr	r3, [r3, #0]
 801e2ee:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 801e2f2:	687b      	ldr	r3, [r7, #4]
 801e2f4:	691b      	ldr	r3, [r3, #16]
 801e2f6:	00db      	lsls	r3, r3, #3
 801e2f8:	493d      	ldr	r1, [pc, #244]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e2fa:	4313      	orrs	r3, r2
 801e2fc:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 801e2fe:	e040      	b.n	801e382 <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 801e300:	687b      	ldr	r3, [r7, #4]
 801e302:	68db      	ldr	r3, [r3, #12]
 801e304:	2b00      	cmp	r3, #0
 801e306:	d023      	beq.n	801e350 <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 801e308:	4b39      	ldr	r3, [pc, #228]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e30a:	681b      	ldr	r3, [r3, #0]
 801e30c:	4a38      	ldr	r2, [pc, #224]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e30e:	f043 0301 	orr.w	r3, r3, #1
 801e312:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801e314:	f7ff fb5c 	bl	801d9d0 <HAL_GetTick>
 801e318:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 801e31a:	e008      	b.n	801e32e <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 801e31c:	f7ff fb58 	bl	801d9d0 <HAL_GetTick>
 801e320:	4602      	mov	r2, r0
 801e322:	693b      	ldr	r3, [r7, #16]
 801e324:	1ad3      	subs	r3, r2, r3
 801e326:	2b02      	cmp	r3, #2
 801e328:	d901      	bls.n	801e32e <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 801e32a:	2303      	movs	r3, #3
 801e32c:	e1bd      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 801e32e:	4b30      	ldr	r3, [pc, #192]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e330:	681b      	ldr	r3, [r3, #0]
 801e332:	f003 0302 	and.w	r3, r3, #2
 801e336:	2b00      	cmp	r3, #0
 801e338:	d0f0      	beq.n	801e31c <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 801e33a:	4b2d      	ldr	r3, [pc, #180]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e33c:	681b      	ldr	r3, [r3, #0]
 801e33e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 801e342:	687b      	ldr	r3, [r7, #4]
 801e344:	691b      	ldr	r3, [r3, #16]
 801e346:	00db      	lsls	r3, r3, #3
 801e348:	4929      	ldr	r1, [pc, #164]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e34a:	4313      	orrs	r3, r2
 801e34c:	600b      	str	r3, [r1, #0]
 801e34e:	e018      	b.n	801e382 <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 801e350:	4b27      	ldr	r3, [pc, #156]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e352:	681b      	ldr	r3, [r3, #0]
 801e354:	4a26      	ldr	r2, [pc, #152]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e356:	f023 0301 	bic.w	r3, r3, #1
 801e35a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801e35c:	f7ff fb38 	bl	801d9d0 <HAL_GetTick>
 801e360:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 801e362:	e008      	b.n	801e376 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 801e364:	f7ff fb34 	bl	801d9d0 <HAL_GetTick>
 801e368:	4602      	mov	r2, r0
 801e36a:	693b      	ldr	r3, [r7, #16]
 801e36c:	1ad3      	subs	r3, r2, r3
 801e36e:	2b02      	cmp	r3, #2
 801e370:	d901      	bls.n	801e376 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 801e372:	2303      	movs	r3, #3
 801e374:	e199      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 801e376:	4b1e      	ldr	r3, [pc, #120]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e378:	681b      	ldr	r3, [r3, #0]
 801e37a:	f003 0302 	and.w	r3, r3, #2
 801e37e:	2b00      	cmp	r3, #0
 801e380:	d1f0      	bne.n	801e364 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 801e382:	687b      	ldr	r3, [r7, #4]
 801e384:	681b      	ldr	r3, [r3, #0]
 801e386:	f003 0308 	and.w	r3, r3, #8
 801e38a:	2b00      	cmp	r3, #0
 801e38c:	d038      	beq.n	801e400 <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 801e38e:	687b      	ldr	r3, [r7, #4]
 801e390:	695b      	ldr	r3, [r3, #20]
 801e392:	2b00      	cmp	r3, #0
 801e394:	d019      	beq.n	801e3ca <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 801e396:	4b16      	ldr	r3, [pc, #88]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e398:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801e39a:	4a15      	ldr	r2, [pc, #84]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e39c:	f043 0301 	orr.w	r3, r3, #1
 801e3a0:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 801e3a2:	f7ff fb15 	bl	801d9d0 <HAL_GetTick>
 801e3a6:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 801e3a8:	e008      	b.n	801e3bc <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 801e3aa:	f7ff fb11 	bl	801d9d0 <HAL_GetTick>
 801e3ae:	4602      	mov	r2, r0
 801e3b0:	693b      	ldr	r3, [r7, #16]
 801e3b2:	1ad3      	subs	r3, r2, r3
 801e3b4:	2b02      	cmp	r3, #2
 801e3b6:	d901      	bls.n	801e3bc <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 801e3b8:	2303      	movs	r3, #3
 801e3ba:	e176      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 801e3bc:	4b0c      	ldr	r3, [pc, #48]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e3be:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801e3c0:	f003 0302 	and.w	r3, r3, #2
 801e3c4:	2b00      	cmp	r3, #0
 801e3c6:	d0f0      	beq.n	801e3aa <HAL_RCC_OscConfig+0x23a>
 801e3c8:	e01a      	b.n	801e400 <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 801e3ca:	4b09      	ldr	r3, [pc, #36]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e3cc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801e3ce:	4a08      	ldr	r2, [pc, #32]	; (801e3f0 <HAL_RCC_OscConfig+0x280>)
 801e3d0:	f023 0301 	bic.w	r3, r3, #1
 801e3d4:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 801e3d6:	f7ff fafb 	bl	801d9d0 <HAL_GetTick>
 801e3da:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 801e3dc:	e00a      	b.n	801e3f4 <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 801e3de:	f7ff faf7 	bl	801d9d0 <HAL_GetTick>
 801e3e2:	4602      	mov	r2, r0
 801e3e4:	693b      	ldr	r3, [r7, #16]
 801e3e6:	1ad3      	subs	r3, r2, r3
 801e3e8:	2b02      	cmp	r3, #2
 801e3ea:	d903      	bls.n	801e3f4 <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 801e3ec:	2303      	movs	r3, #3
 801e3ee:	e15c      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
 801e3f0:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 801e3f4:	4b91      	ldr	r3, [pc, #580]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e3f6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801e3f8:	f003 0302 	and.w	r3, r3, #2
 801e3fc:	2b00      	cmp	r3, #0
 801e3fe:	d1ee      	bne.n	801e3de <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 801e400:	687b      	ldr	r3, [r7, #4]
 801e402:	681b      	ldr	r3, [r3, #0]
 801e404:	f003 0304 	and.w	r3, r3, #4
 801e408:	2b00      	cmp	r3, #0
 801e40a:	f000 80a4 	beq.w	801e556 <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 801e40e:	4b8b      	ldr	r3, [pc, #556]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e410:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e412:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801e416:	2b00      	cmp	r3, #0
 801e418:	d10d      	bne.n	801e436 <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 801e41a:	4b88      	ldr	r3, [pc, #544]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e41c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e41e:	4a87      	ldr	r2, [pc, #540]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e420:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801e424:	6413      	str	r3, [r2, #64]	; 0x40
 801e426:	4b85      	ldr	r3, [pc, #532]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e428:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e42a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801e42e:	60bb      	str	r3, [r7, #8]
 801e430:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 801e432:	2301      	movs	r3, #1
 801e434:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 801e436:	4b82      	ldr	r3, [pc, #520]	; (801e640 <HAL_RCC_OscConfig+0x4d0>)
 801e438:	681b      	ldr	r3, [r3, #0]
 801e43a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801e43e:	2b00      	cmp	r3, #0
 801e440:	d118      	bne.n	801e474 <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 801e442:	4b7f      	ldr	r3, [pc, #508]	; (801e640 <HAL_RCC_OscConfig+0x4d0>)
 801e444:	681b      	ldr	r3, [r3, #0]
 801e446:	4a7e      	ldr	r2, [pc, #504]	; (801e640 <HAL_RCC_OscConfig+0x4d0>)
 801e448:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801e44c:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 801e44e:	f7ff fabf 	bl	801d9d0 <HAL_GetTick>
 801e452:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 801e454:	e008      	b.n	801e468 <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 801e456:	f7ff fabb 	bl	801d9d0 <HAL_GetTick>
 801e45a:	4602      	mov	r2, r0
 801e45c:	693b      	ldr	r3, [r7, #16]
 801e45e:	1ad3      	subs	r3, r2, r3
 801e460:	2b64      	cmp	r3, #100	; 0x64
 801e462:	d901      	bls.n	801e468 <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 801e464:	2303      	movs	r3, #3
 801e466:	e120      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 801e468:	4b75      	ldr	r3, [pc, #468]	; (801e640 <HAL_RCC_OscConfig+0x4d0>)
 801e46a:	681b      	ldr	r3, [r3, #0]
 801e46c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801e470:	2b00      	cmp	r3, #0
 801e472:	d0f0      	beq.n	801e456 <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 801e474:	687b      	ldr	r3, [r7, #4]
 801e476:	689b      	ldr	r3, [r3, #8]
 801e478:	2b01      	cmp	r3, #1
 801e47a:	d106      	bne.n	801e48a <HAL_RCC_OscConfig+0x31a>
 801e47c:	4b6f      	ldr	r3, [pc, #444]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e47e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801e480:	4a6e      	ldr	r2, [pc, #440]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e482:	f043 0301 	orr.w	r3, r3, #1
 801e486:	6713      	str	r3, [r2, #112]	; 0x70
 801e488:	e02d      	b.n	801e4e6 <HAL_RCC_OscConfig+0x376>
 801e48a:	687b      	ldr	r3, [r7, #4]
 801e48c:	689b      	ldr	r3, [r3, #8]
 801e48e:	2b00      	cmp	r3, #0
 801e490:	d10c      	bne.n	801e4ac <HAL_RCC_OscConfig+0x33c>
 801e492:	4b6a      	ldr	r3, [pc, #424]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e494:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801e496:	4a69      	ldr	r2, [pc, #420]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e498:	f023 0301 	bic.w	r3, r3, #1
 801e49c:	6713      	str	r3, [r2, #112]	; 0x70
 801e49e:	4b67      	ldr	r3, [pc, #412]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4a0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801e4a2:	4a66      	ldr	r2, [pc, #408]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4a4:	f023 0304 	bic.w	r3, r3, #4
 801e4a8:	6713      	str	r3, [r2, #112]	; 0x70
 801e4aa:	e01c      	b.n	801e4e6 <HAL_RCC_OscConfig+0x376>
 801e4ac:	687b      	ldr	r3, [r7, #4]
 801e4ae:	689b      	ldr	r3, [r3, #8]
 801e4b0:	2b05      	cmp	r3, #5
 801e4b2:	d10c      	bne.n	801e4ce <HAL_RCC_OscConfig+0x35e>
 801e4b4:	4b61      	ldr	r3, [pc, #388]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4b6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801e4b8:	4a60      	ldr	r2, [pc, #384]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4ba:	f043 0304 	orr.w	r3, r3, #4
 801e4be:	6713      	str	r3, [r2, #112]	; 0x70
 801e4c0:	4b5e      	ldr	r3, [pc, #376]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801e4c4:	4a5d      	ldr	r2, [pc, #372]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4c6:	f043 0301 	orr.w	r3, r3, #1
 801e4ca:	6713      	str	r3, [r2, #112]	; 0x70
 801e4cc:	e00b      	b.n	801e4e6 <HAL_RCC_OscConfig+0x376>
 801e4ce:	4b5b      	ldr	r3, [pc, #364]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801e4d2:	4a5a      	ldr	r2, [pc, #360]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4d4:	f023 0301 	bic.w	r3, r3, #1
 801e4d8:	6713      	str	r3, [r2, #112]	; 0x70
 801e4da:	4b58      	ldr	r3, [pc, #352]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801e4de:	4a57      	ldr	r2, [pc, #348]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e4e0:	f023 0304 	bic.w	r3, r3, #4
 801e4e4:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 801e4e6:	687b      	ldr	r3, [r7, #4]
 801e4e8:	689b      	ldr	r3, [r3, #8]
 801e4ea:	2b00      	cmp	r3, #0
 801e4ec:	d015      	beq.n	801e51a <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 801e4ee:	f7ff fa6f 	bl	801d9d0 <HAL_GetTick>
 801e4f2:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 801e4f4:	e00a      	b.n	801e50c <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 801e4f6:	f7ff fa6b 	bl	801d9d0 <HAL_GetTick>
 801e4fa:	4602      	mov	r2, r0
 801e4fc:	693b      	ldr	r3, [r7, #16]
 801e4fe:	1ad3      	subs	r3, r2, r3
 801e500:	f241 3288 	movw	r2, #5000	; 0x1388
 801e504:	4293      	cmp	r3, r2
 801e506:	d901      	bls.n	801e50c <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 801e508:	2303      	movs	r3, #3
 801e50a:	e0ce      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 801e50c:	4b4b      	ldr	r3, [pc, #300]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e50e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801e510:	f003 0302 	and.w	r3, r3, #2
 801e514:	2b00      	cmp	r3, #0
 801e516:	d0ee      	beq.n	801e4f6 <HAL_RCC_OscConfig+0x386>
 801e518:	e014      	b.n	801e544 <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 801e51a:	f7ff fa59 	bl	801d9d0 <HAL_GetTick>
 801e51e:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 801e520:	e00a      	b.n	801e538 <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 801e522:	f7ff fa55 	bl	801d9d0 <HAL_GetTick>
 801e526:	4602      	mov	r2, r0
 801e528:	693b      	ldr	r3, [r7, #16]
 801e52a:	1ad3      	subs	r3, r2, r3
 801e52c:	f241 3288 	movw	r2, #5000	; 0x1388
 801e530:	4293      	cmp	r3, r2
 801e532:	d901      	bls.n	801e538 <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 801e534:	2303      	movs	r3, #3
 801e536:	e0b8      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 801e538:	4b40      	ldr	r3, [pc, #256]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e53a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801e53c:	f003 0302 	and.w	r3, r3, #2
 801e540:	2b00      	cmp	r3, #0
 801e542:	d1ee      	bne.n	801e522 <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 801e544:	7dfb      	ldrb	r3, [r7, #23]
 801e546:	2b01      	cmp	r3, #1
 801e548:	d105      	bne.n	801e556 <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 801e54a:	4b3c      	ldr	r3, [pc, #240]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e54c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e54e:	4a3b      	ldr	r2, [pc, #236]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e550:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801e554:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 801e556:	687b      	ldr	r3, [r7, #4]
 801e558:	699b      	ldr	r3, [r3, #24]
 801e55a:	2b00      	cmp	r3, #0
 801e55c:	f000 80a4 	beq.w	801e6a8 <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 801e560:	4b36      	ldr	r3, [pc, #216]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e562:	689b      	ldr	r3, [r3, #8]
 801e564:	f003 030c 	and.w	r3, r3, #12
 801e568:	2b08      	cmp	r3, #8
 801e56a:	d06b      	beq.n	801e644 <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 801e56c:	687b      	ldr	r3, [r7, #4]
 801e56e:	699b      	ldr	r3, [r3, #24]
 801e570:	2b02      	cmp	r3, #2
 801e572:	d149      	bne.n	801e608 <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 801e574:	4b31      	ldr	r3, [pc, #196]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e576:	681b      	ldr	r3, [r3, #0]
 801e578:	4a30      	ldr	r2, [pc, #192]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e57a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 801e57e:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801e580:	f7ff fa26 	bl	801d9d0 <HAL_GetTick>
 801e584:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 801e586:	e008      	b.n	801e59a <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 801e588:	f7ff fa22 	bl	801d9d0 <HAL_GetTick>
 801e58c:	4602      	mov	r2, r0
 801e58e:	693b      	ldr	r3, [r7, #16]
 801e590:	1ad3      	subs	r3, r2, r3
 801e592:	2b02      	cmp	r3, #2
 801e594:	d901      	bls.n	801e59a <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 801e596:	2303      	movs	r3, #3
 801e598:	e087      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 801e59a:	4b28      	ldr	r3, [pc, #160]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e59c:	681b      	ldr	r3, [r3, #0]
 801e59e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801e5a2:	2b00      	cmp	r3, #0
 801e5a4:	d1f0      	bne.n	801e588 <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 801e5a6:	687b      	ldr	r3, [r7, #4]
 801e5a8:	69da      	ldr	r2, [r3, #28]
 801e5aa:	687b      	ldr	r3, [r7, #4]
 801e5ac:	6a1b      	ldr	r3, [r3, #32]
 801e5ae:	431a      	orrs	r2, r3
 801e5b0:	687b      	ldr	r3, [r7, #4]
 801e5b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801e5b4:	019b      	lsls	r3, r3, #6
 801e5b6:	431a      	orrs	r2, r3
 801e5b8:	687b      	ldr	r3, [r7, #4]
 801e5ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e5bc:	085b      	lsrs	r3, r3, #1
 801e5be:	3b01      	subs	r3, #1
 801e5c0:	041b      	lsls	r3, r3, #16
 801e5c2:	431a      	orrs	r2, r3
 801e5c4:	687b      	ldr	r3, [r7, #4]
 801e5c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e5c8:	061b      	lsls	r3, r3, #24
 801e5ca:	4313      	orrs	r3, r2
 801e5cc:	4a1b      	ldr	r2, [pc, #108]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e5ce:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 801e5d2:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 801e5d4:	4b19      	ldr	r3, [pc, #100]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e5d6:	681b      	ldr	r3, [r3, #0]
 801e5d8:	4a18      	ldr	r2, [pc, #96]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e5da:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801e5de:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801e5e0:	f7ff f9f6 	bl	801d9d0 <HAL_GetTick>
 801e5e4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 801e5e6:	e008      	b.n	801e5fa <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 801e5e8:	f7ff f9f2 	bl	801d9d0 <HAL_GetTick>
 801e5ec:	4602      	mov	r2, r0
 801e5ee:	693b      	ldr	r3, [r7, #16]
 801e5f0:	1ad3      	subs	r3, r2, r3
 801e5f2:	2b02      	cmp	r3, #2
 801e5f4:	d901      	bls.n	801e5fa <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 801e5f6:	2303      	movs	r3, #3
 801e5f8:	e057      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 801e5fa:	4b10      	ldr	r3, [pc, #64]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e5fc:	681b      	ldr	r3, [r3, #0]
 801e5fe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801e602:	2b00      	cmp	r3, #0
 801e604:	d0f0      	beq.n	801e5e8 <HAL_RCC_OscConfig+0x478>
 801e606:	e04f      	b.n	801e6a8 <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 801e608:	4b0c      	ldr	r3, [pc, #48]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e60a:	681b      	ldr	r3, [r3, #0]
 801e60c:	4a0b      	ldr	r2, [pc, #44]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e60e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 801e612:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801e614:	f7ff f9dc 	bl	801d9d0 <HAL_GetTick>
 801e618:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 801e61a:	e008      	b.n	801e62e <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 801e61c:	f7ff f9d8 	bl	801d9d0 <HAL_GetTick>
 801e620:	4602      	mov	r2, r0
 801e622:	693b      	ldr	r3, [r7, #16]
 801e624:	1ad3      	subs	r3, r2, r3
 801e626:	2b02      	cmp	r3, #2
 801e628:	d901      	bls.n	801e62e <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 801e62a:	2303      	movs	r3, #3
 801e62c:	e03d      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 801e62e:	4b03      	ldr	r3, [pc, #12]	; (801e63c <HAL_RCC_OscConfig+0x4cc>)
 801e630:	681b      	ldr	r3, [r3, #0]
 801e632:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801e636:	2b00      	cmp	r3, #0
 801e638:	d1f0      	bne.n	801e61c <HAL_RCC_OscConfig+0x4ac>
 801e63a:	e035      	b.n	801e6a8 <HAL_RCC_OscConfig+0x538>
 801e63c:	40023800 	.word	0x40023800
 801e640:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 801e644:	4b1b      	ldr	r3, [pc, #108]	; (801e6b4 <HAL_RCC_OscConfig+0x544>)
 801e646:	685b      	ldr	r3, [r3, #4]
 801e648:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 801e64a:	687b      	ldr	r3, [r7, #4]
 801e64c:	699b      	ldr	r3, [r3, #24]
 801e64e:	2b01      	cmp	r3, #1
 801e650:	d028      	beq.n	801e6a4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 801e652:	68fb      	ldr	r3, [r7, #12]
 801e654:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 801e658:	687b      	ldr	r3, [r7, #4]
 801e65a:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 801e65c:	429a      	cmp	r2, r3
 801e65e:	d121      	bne.n	801e6a4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 801e660:	68fb      	ldr	r3, [r7, #12]
 801e662:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 801e666:	687b      	ldr	r3, [r7, #4]
 801e668:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 801e66a:	429a      	cmp	r2, r3
 801e66c:	d11a      	bne.n	801e6a4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 801e66e:	68fa      	ldr	r2, [r7, #12]
 801e670:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 801e674:	4013      	ands	r3, r2
 801e676:	687a      	ldr	r2, [r7, #4]
 801e678:	6a52      	ldr	r2, [r2, #36]	; 0x24
 801e67a:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 801e67c:	4293      	cmp	r3, r2
 801e67e:	d111      	bne.n	801e6a4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 801e680:	68fb      	ldr	r3, [r7, #12]
 801e682:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 801e686:	687b      	ldr	r3, [r7, #4]
 801e688:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e68a:	085b      	lsrs	r3, r3, #1
 801e68c:	3b01      	subs	r3, #1
 801e68e:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 801e690:	429a      	cmp	r2, r3
 801e692:	d107      	bne.n	801e6a4 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 801e694:	68fb      	ldr	r3, [r7, #12]
 801e696:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 801e69a:	687b      	ldr	r3, [r7, #4]
 801e69c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e69e:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 801e6a0:	429a      	cmp	r2, r3
 801e6a2:	d001      	beq.n	801e6a8 <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 801e6a4:	2301      	movs	r3, #1
 801e6a6:	e000      	b.n	801e6aa <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 801e6a8:	2300      	movs	r3, #0
}
 801e6aa:	4618      	mov	r0, r3
 801e6ac:	3718      	adds	r7, #24
 801e6ae:	46bd      	mov	sp, r7
 801e6b0:	bd80      	pop	{r7, pc}
 801e6b2:	bf00      	nop
 801e6b4:	40023800 	.word	0x40023800

0801e6b8 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 801e6b8:	b580      	push	{r7, lr}
 801e6ba:	b084      	sub	sp, #16
 801e6bc:	af00      	add	r7, sp, #0
 801e6be:	6078      	str	r0, [r7, #4]
 801e6c0:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 801e6c2:	2300      	movs	r3, #0
 801e6c4:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 801e6c6:	687b      	ldr	r3, [r7, #4]
 801e6c8:	2b00      	cmp	r3, #0
 801e6ca:	d101      	bne.n	801e6d0 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 801e6cc:	2301      	movs	r3, #1
 801e6ce:	e0d0      	b.n	801e872 <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 801e6d0:	4b6a      	ldr	r3, [pc, #424]	; (801e87c <HAL_RCC_ClockConfig+0x1c4>)
 801e6d2:	681b      	ldr	r3, [r3, #0]
 801e6d4:	f003 030f 	and.w	r3, r3, #15
 801e6d8:	683a      	ldr	r2, [r7, #0]
 801e6da:	429a      	cmp	r2, r3
 801e6dc:	d910      	bls.n	801e700 <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 801e6de:	4b67      	ldr	r3, [pc, #412]	; (801e87c <HAL_RCC_ClockConfig+0x1c4>)
 801e6e0:	681b      	ldr	r3, [r3, #0]
 801e6e2:	f023 020f 	bic.w	r2, r3, #15
 801e6e6:	4965      	ldr	r1, [pc, #404]	; (801e87c <HAL_RCC_ClockConfig+0x1c4>)
 801e6e8:	683b      	ldr	r3, [r7, #0]
 801e6ea:	4313      	orrs	r3, r2
 801e6ec:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 801e6ee:	4b63      	ldr	r3, [pc, #396]	; (801e87c <HAL_RCC_ClockConfig+0x1c4>)
 801e6f0:	681b      	ldr	r3, [r3, #0]
 801e6f2:	f003 030f 	and.w	r3, r3, #15
 801e6f6:	683a      	ldr	r2, [r7, #0]
 801e6f8:	429a      	cmp	r2, r3
 801e6fa:	d001      	beq.n	801e700 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 801e6fc:	2301      	movs	r3, #1
 801e6fe:	e0b8      	b.n	801e872 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 801e700:	687b      	ldr	r3, [r7, #4]
 801e702:	681b      	ldr	r3, [r3, #0]
 801e704:	f003 0302 	and.w	r3, r3, #2
 801e708:	2b00      	cmp	r3, #0
 801e70a:	d020      	beq.n	801e74e <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 801e70c:	687b      	ldr	r3, [r7, #4]
 801e70e:	681b      	ldr	r3, [r3, #0]
 801e710:	f003 0304 	and.w	r3, r3, #4
 801e714:	2b00      	cmp	r3, #0
 801e716:	d005      	beq.n	801e724 <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 801e718:	4b59      	ldr	r3, [pc, #356]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e71a:	689b      	ldr	r3, [r3, #8]
 801e71c:	4a58      	ldr	r2, [pc, #352]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e71e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 801e722:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 801e724:	687b      	ldr	r3, [r7, #4]
 801e726:	681b      	ldr	r3, [r3, #0]
 801e728:	f003 0308 	and.w	r3, r3, #8
 801e72c:	2b00      	cmp	r3, #0
 801e72e:	d005      	beq.n	801e73c <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 801e730:	4b53      	ldr	r3, [pc, #332]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e732:	689b      	ldr	r3, [r3, #8]
 801e734:	4a52      	ldr	r2, [pc, #328]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e736:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 801e73a:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 801e73c:	4b50      	ldr	r3, [pc, #320]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e73e:	689b      	ldr	r3, [r3, #8]
 801e740:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 801e744:	687b      	ldr	r3, [r7, #4]
 801e746:	689b      	ldr	r3, [r3, #8]
 801e748:	494d      	ldr	r1, [pc, #308]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e74a:	4313      	orrs	r3, r2
 801e74c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 801e74e:	687b      	ldr	r3, [r7, #4]
 801e750:	681b      	ldr	r3, [r3, #0]
 801e752:	f003 0301 	and.w	r3, r3, #1
 801e756:	2b00      	cmp	r3, #0
 801e758:	d040      	beq.n	801e7dc <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 801e75a:	687b      	ldr	r3, [r7, #4]
 801e75c:	685b      	ldr	r3, [r3, #4]
 801e75e:	2b01      	cmp	r3, #1
 801e760:	d107      	bne.n	801e772 <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 801e762:	4b47      	ldr	r3, [pc, #284]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e764:	681b      	ldr	r3, [r3, #0]
 801e766:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801e76a:	2b00      	cmp	r3, #0
 801e76c:	d115      	bne.n	801e79a <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 801e76e:	2301      	movs	r3, #1
 801e770:	e07f      	b.n	801e872 <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 801e772:	687b      	ldr	r3, [r7, #4]
 801e774:	685b      	ldr	r3, [r3, #4]
 801e776:	2b02      	cmp	r3, #2
 801e778:	d107      	bne.n	801e78a <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 801e77a:	4b41      	ldr	r3, [pc, #260]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e77c:	681b      	ldr	r3, [r3, #0]
 801e77e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801e782:	2b00      	cmp	r3, #0
 801e784:	d109      	bne.n	801e79a <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 801e786:	2301      	movs	r3, #1
 801e788:	e073      	b.n	801e872 <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 801e78a:	4b3d      	ldr	r3, [pc, #244]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e78c:	681b      	ldr	r3, [r3, #0]
 801e78e:	f003 0302 	and.w	r3, r3, #2
 801e792:	2b00      	cmp	r3, #0
 801e794:	d101      	bne.n	801e79a <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 801e796:	2301      	movs	r3, #1
 801e798:	e06b      	b.n	801e872 <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 801e79a:	4b39      	ldr	r3, [pc, #228]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e79c:	689b      	ldr	r3, [r3, #8]
 801e79e:	f023 0203 	bic.w	r2, r3, #3
 801e7a2:	687b      	ldr	r3, [r7, #4]
 801e7a4:	685b      	ldr	r3, [r3, #4]
 801e7a6:	4936      	ldr	r1, [pc, #216]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e7a8:	4313      	orrs	r3, r2
 801e7aa:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 801e7ac:	f7ff f910 	bl	801d9d0 <HAL_GetTick>
 801e7b0:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 801e7b2:	e00a      	b.n	801e7ca <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 801e7b4:	f7ff f90c 	bl	801d9d0 <HAL_GetTick>
 801e7b8:	4602      	mov	r2, r0
 801e7ba:	68fb      	ldr	r3, [r7, #12]
 801e7bc:	1ad3      	subs	r3, r2, r3
 801e7be:	f241 3288 	movw	r2, #5000	; 0x1388
 801e7c2:	4293      	cmp	r3, r2
 801e7c4:	d901      	bls.n	801e7ca <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 801e7c6:	2303      	movs	r3, #3
 801e7c8:	e053      	b.n	801e872 <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 801e7ca:	4b2d      	ldr	r3, [pc, #180]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e7cc:	689b      	ldr	r3, [r3, #8]
 801e7ce:	f003 020c 	and.w	r2, r3, #12
 801e7d2:	687b      	ldr	r3, [r7, #4]
 801e7d4:	685b      	ldr	r3, [r3, #4]
 801e7d6:	009b      	lsls	r3, r3, #2
 801e7d8:	429a      	cmp	r2, r3
 801e7da:	d1eb      	bne.n	801e7b4 <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 801e7dc:	4b27      	ldr	r3, [pc, #156]	; (801e87c <HAL_RCC_ClockConfig+0x1c4>)
 801e7de:	681b      	ldr	r3, [r3, #0]
 801e7e0:	f003 030f 	and.w	r3, r3, #15
 801e7e4:	683a      	ldr	r2, [r7, #0]
 801e7e6:	429a      	cmp	r2, r3
 801e7e8:	d210      	bcs.n	801e80c <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 801e7ea:	4b24      	ldr	r3, [pc, #144]	; (801e87c <HAL_RCC_ClockConfig+0x1c4>)
 801e7ec:	681b      	ldr	r3, [r3, #0]
 801e7ee:	f023 020f 	bic.w	r2, r3, #15
 801e7f2:	4922      	ldr	r1, [pc, #136]	; (801e87c <HAL_RCC_ClockConfig+0x1c4>)
 801e7f4:	683b      	ldr	r3, [r7, #0]
 801e7f6:	4313      	orrs	r3, r2
 801e7f8:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 801e7fa:	4b20      	ldr	r3, [pc, #128]	; (801e87c <HAL_RCC_ClockConfig+0x1c4>)
 801e7fc:	681b      	ldr	r3, [r3, #0]
 801e7fe:	f003 030f 	and.w	r3, r3, #15
 801e802:	683a      	ldr	r2, [r7, #0]
 801e804:	429a      	cmp	r2, r3
 801e806:	d001      	beq.n	801e80c <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 801e808:	2301      	movs	r3, #1
 801e80a:	e032      	b.n	801e872 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 801e80c:	687b      	ldr	r3, [r7, #4]
 801e80e:	681b      	ldr	r3, [r3, #0]
 801e810:	f003 0304 	and.w	r3, r3, #4
 801e814:	2b00      	cmp	r3, #0
 801e816:	d008      	beq.n	801e82a <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 801e818:	4b19      	ldr	r3, [pc, #100]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e81a:	689b      	ldr	r3, [r3, #8]
 801e81c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 801e820:	687b      	ldr	r3, [r7, #4]
 801e822:	68db      	ldr	r3, [r3, #12]
 801e824:	4916      	ldr	r1, [pc, #88]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e826:	4313      	orrs	r3, r2
 801e828:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 801e82a:	687b      	ldr	r3, [r7, #4]
 801e82c:	681b      	ldr	r3, [r3, #0]
 801e82e:	f003 0308 	and.w	r3, r3, #8
 801e832:	2b00      	cmp	r3, #0
 801e834:	d009      	beq.n	801e84a <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 801e836:	4b12      	ldr	r3, [pc, #72]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e838:	689b      	ldr	r3, [r3, #8]
 801e83a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 801e83e:	687b      	ldr	r3, [r7, #4]
 801e840:	691b      	ldr	r3, [r3, #16]
 801e842:	00db      	lsls	r3, r3, #3
 801e844:	490e      	ldr	r1, [pc, #56]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e846:	4313      	orrs	r3, r2
 801e848:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 801e84a:	f000 f821 	bl	801e890 <HAL_RCC_GetSysClockFreq>
 801e84e:	4602      	mov	r2, r0
 801e850:	4b0b      	ldr	r3, [pc, #44]	; (801e880 <HAL_RCC_ClockConfig+0x1c8>)
 801e852:	689b      	ldr	r3, [r3, #8]
 801e854:	091b      	lsrs	r3, r3, #4
 801e856:	f003 030f 	and.w	r3, r3, #15
 801e85a:	490a      	ldr	r1, [pc, #40]	; (801e884 <HAL_RCC_ClockConfig+0x1cc>)
 801e85c:	5ccb      	ldrb	r3, [r1, r3]
 801e85e:	fa22 f303 	lsr.w	r3, r2, r3
 801e862:	4a09      	ldr	r2, [pc, #36]	; (801e888 <HAL_RCC_ClockConfig+0x1d0>)
 801e864:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 801e866:	4b09      	ldr	r3, [pc, #36]	; (801e88c <HAL_RCC_ClockConfig+0x1d4>)
 801e868:	681b      	ldr	r3, [r3, #0]
 801e86a:	4618      	mov	r0, r3
 801e86c:	f7ff f86c 	bl	801d948 <HAL_InitTick>

  return HAL_OK;
 801e870:	2300      	movs	r3, #0
}
 801e872:	4618      	mov	r0, r3
 801e874:	3710      	adds	r7, #16
 801e876:	46bd      	mov	sp, r7
 801e878:	bd80      	pop	{r7, pc}
 801e87a:	bf00      	nop
 801e87c:	40023c00 	.word	0x40023c00
 801e880:	40023800 	.word	0x40023800
 801e884:	08025264 	.word	0x08025264
 801e888:	20000000 	.word	0x20000000
 801e88c:	20000004 	.word	0x20000004

0801e890 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 801e890:	b5b0      	push	{r4, r5, r7, lr}
 801e892:	b084      	sub	sp, #16
 801e894:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 801e896:	2100      	movs	r1, #0
 801e898:	6079      	str	r1, [r7, #4]
 801e89a:	2100      	movs	r1, #0
 801e89c:	60f9      	str	r1, [r7, #12]
 801e89e:	2100      	movs	r1, #0
 801e8a0:	6039      	str	r1, [r7, #0]
  uint32_t sysclockfreq = 0;
 801e8a2:	2100      	movs	r1, #0
 801e8a4:	60b9      	str	r1, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 801e8a6:	4952      	ldr	r1, [pc, #328]	; (801e9f0 <HAL_RCC_GetSysClockFreq+0x160>)
 801e8a8:	6889      	ldr	r1, [r1, #8]
 801e8aa:	f001 010c 	and.w	r1, r1, #12
 801e8ae:	2908      	cmp	r1, #8
 801e8b0:	d00d      	beq.n	801e8ce <HAL_RCC_GetSysClockFreq+0x3e>
 801e8b2:	2908      	cmp	r1, #8
 801e8b4:	f200 8094 	bhi.w	801e9e0 <HAL_RCC_GetSysClockFreq+0x150>
 801e8b8:	2900      	cmp	r1, #0
 801e8ba:	d002      	beq.n	801e8c2 <HAL_RCC_GetSysClockFreq+0x32>
 801e8bc:	2904      	cmp	r1, #4
 801e8be:	d003      	beq.n	801e8c8 <HAL_RCC_GetSysClockFreq+0x38>
 801e8c0:	e08e      	b.n	801e9e0 <HAL_RCC_GetSysClockFreq+0x150>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 801e8c2:	4b4c      	ldr	r3, [pc, #304]	; (801e9f4 <HAL_RCC_GetSysClockFreq+0x164>)
 801e8c4:	60bb      	str	r3, [r7, #8]
      break;
 801e8c6:	e08e      	b.n	801e9e6 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 801e8c8:	4b4b      	ldr	r3, [pc, #300]	; (801e9f8 <HAL_RCC_GetSysClockFreq+0x168>)
 801e8ca:	60bb      	str	r3, [r7, #8]
      break;
 801e8cc:	e08b      	b.n	801e9e6 <HAL_RCC_GetSysClockFreq+0x156>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 801e8ce:	4948      	ldr	r1, [pc, #288]	; (801e9f0 <HAL_RCC_GetSysClockFreq+0x160>)
 801e8d0:	6849      	ldr	r1, [r1, #4]
 801e8d2:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 801e8d6:	6079      	str	r1, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 801e8d8:	4945      	ldr	r1, [pc, #276]	; (801e9f0 <HAL_RCC_GetSysClockFreq+0x160>)
 801e8da:	6849      	ldr	r1, [r1, #4]
 801e8dc:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 801e8e0:	2900      	cmp	r1, #0
 801e8e2:	d024      	beq.n	801e92e <HAL_RCC_GetSysClockFreq+0x9e>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 801e8e4:	4942      	ldr	r1, [pc, #264]	; (801e9f0 <HAL_RCC_GetSysClockFreq+0x160>)
 801e8e6:	6849      	ldr	r1, [r1, #4]
 801e8e8:	0989      	lsrs	r1, r1, #6
 801e8ea:	4608      	mov	r0, r1
 801e8ec:	f04f 0100 	mov.w	r1, #0
 801e8f0:	f240 14ff 	movw	r4, #511	; 0x1ff
 801e8f4:	f04f 0500 	mov.w	r5, #0
 801e8f8:	ea00 0204 	and.w	r2, r0, r4
 801e8fc:	ea01 0305 	and.w	r3, r1, r5
 801e900:	493d      	ldr	r1, [pc, #244]	; (801e9f8 <HAL_RCC_GetSysClockFreq+0x168>)
 801e902:	fb01 f003 	mul.w	r0, r1, r3
 801e906:	2100      	movs	r1, #0
 801e908:	fb01 f102 	mul.w	r1, r1, r2
 801e90c:	1844      	adds	r4, r0, r1
 801e90e:	493a      	ldr	r1, [pc, #232]	; (801e9f8 <HAL_RCC_GetSysClockFreq+0x168>)
 801e910:	fba2 0101 	umull	r0, r1, r2, r1
 801e914:	1863      	adds	r3, r4, r1
 801e916:	4619      	mov	r1, r3
 801e918:	687b      	ldr	r3, [r7, #4]
 801e91a:	461a      	mov	r2, r3
 801e91c:	f04f 0300 	mov.w	r3, #0
 801e920:	f7e2 f9d2 	bl	8000cc8 <__aeabi_uldivmod>
 801e924:	4602      	mov	r2, r0
 801e926:	460b      	mov	r3, r1
 801e928:	4613      	mov	r3, r2
 801e92a:	60fb      	str	r3, [r7, #12]
 801e92c:	e04a      	b.n	801e9c4 <HAL_RCC_GetSysClockFreq+0x134>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 801e92e:	4b30      	ldr	r3, [pc, #192]	; (801e9f0 <HAL_RCC_GetSysClockFreq+0x160>)
 801e930:	685b      	ldr	r3, [r3, #4]
 801e932:	099b      	lsrs	r3, r3, #6
 801e934:	461a      	mov	r2, r3
 801e936:	f04f 0300 	mov.w	r3, #0
 801e93a:	f240 10ff 	movw	r0, #511	; 0x1ff
 801e93e:	f04f 0100 	mov.w	r1, #0
 801e942:	ea02 0400 	and.w	r4, r2, r0
 801e946:	ea03 0501 	and.w	r5, r3, r1
 801e94a:	4620      	mov	r0, r4
 801e94c:	4629      	mov	r1, r5
 801e94e:	f04f 0200 	mov.w	r2, #0
 801e952:	f04f 0300 	mov.w	r3, #0
 801e956:	014b      	lsls	r3, r1, #5
 801e958:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 801e95c:	0142      	lsls	r2, r0, #5
 801e95e:	4610      	mov	r0, r2
 801e960:	4619      	mov	r1, r3
 801e962:	1b00      	subs	r0, r0, r4
 801e964:	eb61 0105 	sbc.w	r1, r1, r5
 801e968:	f04f 0200 	mov.w	r2, #0
 801e96c:	f04f 0300 	mov.w	r3, #0
 801e970:	018b      	lsls	r3, r1, #6
 801e972:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 801e976:	0182      	lsls	r2, r0, #6
 801e978:	1a12      	subs	r2, r2, r0
 801e97a:	eb63 0301 	sbc.w	r3, r3, r1
 801e97e:	f04f 0000 	mov.w	r0, #0
 801e982:	f04f 0100 	mov.w	r1, #0
 801e986:	00d9      	lsls	r1, r3, #3
 801e988:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 801e98c:	00d0      	lsls	r0, r2, #3
 801e98e:	4602      	mov	r2, r0
 801e990:	460b      	mov	r3, r1
 801e992:	1912      	adds	r2, r2, r4
 801e994:	eb45 0303 	adc.w	r3, r5, r3
 801e998:	f04f 0000 	mov.w	r0, #0
 801e99c:	f04f 0100 	mov.w	r1, #0
 801e9a0:	0299      	lsls	r1, r3, #10
 801e9a2:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 801e9a6:	0290      	lsls	r0, r2, #10
 801e9a8:	4602      	mov	r2, r0
 801e9aa:	460b      	mov	r3, r1
 801e9ac:	4610      	mov	r0, r2
 801e9ae:	4619      	mov	r1, r3
 801e9b0:	687b      	ldr	r3, [r7, #4]
 801e9b2:	461a      	mov	r2, r3
 801e9b4:	f04f 0300 	mov.w	r3, #0
 801e9b8:	f7e2 f986 	bl	8000cc8 <__aeabi_uldivmod>
 801e9bc:	4602      	mov	r2, r0
 801e9be:	460b      	mov	r3, r1
 801e9c0:	4613      	mov	r3, r2
 801e9c2:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 801e9c4:	4b0a      	ldr	r3, [pc, #40]	; (801e9f0 <HAL_RCC_GetSysClockFreq+0x160>)
 801e9c6:	685b      	ldr	r3, [r3, #4]
 801e9c8:	0c1b      	lsrs	r3, r3, #16
 801e9ca:	f003 0303 	and.w	r3, r3, #3
 801e9ce:	3301      	adds	r3, #1
 801e9d0:	005b      	lsls	r3, r3, #1
 801e9d2:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco / pllp;
 801e9d4:	68fa      	ldr	r2, [r7, #12]
 801e9d6:	683b      	ldr	r3, [r7, #0]
 801e9d8:	fbb2 f3f3 	udiv	r3, r2, r3
 801e9dc:	60bb      	str	r3, [r7, #8]
      break;
 801e9de:	e002      	b.n	801e9e6 <HAL_RCC_GetSysClockFreq+0x156>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 801e9e0:	4b04      	ldr	r3, [pc, #16]	; (801e9f4 <HAL_RCC_GetSysClockFreq+0x164>)
 801e9e2:	60bb      	str	r3, [r7, #8]
      break;
 801e9e4:	bf00      	nop
    }
  }
  return sysclockfreq;
 801e9e6:	68bb      	ldr	r3, [r7, #8]
}
 801e9e8:	4618      	mov	r0, r3
 801e9ea:	3710      	adds	r7, #16
 801e9ec:	46bd      	mov	sp, r7
 801e9ee:	bdb0      	pop	{r4, r5, r7, pc}
 801e9f0:	40023800 	.word	0x40023800
 801e9f4:	00f42400 	.word	0x00f42400
 801e9f8:	017d7840 	.word	0x017d7840

0801e9fc <HAL_RCC_GetHCLKFreq>:
  *         right HCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 801e9fc:	b480      	push	{r7}
 801e9fe:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 801ea00:	4b03      	ldr	r3, [pc, #12]	; (801ea10 <HAL_RCC_GetHCLKFreq+0x14>)
 801ea02:	681b      	ldr	r3, [r3, #0]
}
 801ea04:	4618      	mov	r0, r3
 801ea06:	46bd      	mov	sp, r7
 801ea08:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ea0c:	4770      	bx	lr
 801ea0e:	bf00      	nop
 801ea10:	20000000 	.word	0x20000000

0801ea14 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 801ea14:	b580      	push	{r7, lr}
 801ea16:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 801ea18:	f7ff fff0 	bl	801e9fc <HAL_RCC_GetHCLKFreq>
 801ea1c:	4602      	mov	r2, r0
 801ea1e:	4b05      	ldr	r3, [pc, #20]	; (801ea34 <HAL_RCC_GetPCLK1Freq+0x20>)
 801ea20:	689b      	ldr	r3, [r3, #8]
 801ea22:	0a9b      	lsrs	r3, r3, #10
 801ea24:	f003 0307 	and.w	r3, r3, #7
 801ea28:	4903      	ldr	r1, [pc, #12]	; (801ea38 <HAL_RCC_GetPCLK1Freq+0x24>)
 801ea2a:	5ccb      	ldrb	r3, [r1, r3]
 801ea2c:	fa22 f303 	lsr.w	r3, r2, r3
}
 801ea30:	4618      	mov	r0, r3
 801ea32:	bd80      	pop	{r7, pc}
 801ea34:	40023800 	.word	0x40023800
 801ea38:	08025274 	.word	0x08025274

0801ea3c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 801ea3c:	b580      	push	{r7, lr}
 801ea3e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 801ea40:	f7ff ffdc 	bl	801e9fc <HAL_RCC_GetHCLKFreq>
 801ea44:	4602      	mov	r2, r0
 801ea46:	4b05      	ldr	r3, [pc, #20]	; (801ea5c <HAL_RCC_GetPCLK2Freq+0x20>)
 801ea48:	689b      	ldr	r3, [r3, #8]
 801ea4a:	0b5b      	lsrs	r3, r3, #13
 801ea4c:	f003 0307 	and.w	r3, r3, #7
 801ea50:	4903      	ldr	r1, [pc, #12]	; (801ea60 <HAL_RCC_GetPCLK2Freq+0x24>)
 801ea52:	5ccb      	ldrb	r3, [r1, r3]
 801ea54:	fa22 f303 	lsr.w	r3, r2, r3
}
 801ea58:	4618      	mov	r0, r3
 801ea5a:	bd80      	pop	{r7, pc}
 801ea5c:	40023800 	.word	0x40023800
 801ea60:	08025274 	.word	0x08025274

0801ea64 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 801ea64:	b580      	push	{r7, lr}
 801ea66:	b088      	sub	sp, #32
 801ea68:	af00      	add	r7, sp, #0
 801ea6a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 801ea6c:	2300      	movs	r3, #0
 801ea6e:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 801ea70:	2300      	movs	r3, #0
 801ea72:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 801ea74:	2300      	movs	r3, #0
 801ea76:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 801ea78:	2300      	movs	r3, #0
 801ea7a:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 801ea7c:	2300      	movs	r3, #0
 801ea7e:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 801ea80:	687b      	ldr	r3, [r7, #4]
 801ea82:	681b      	ldr	r3, [r3, #0]
 801ea84:	f003 0301 	and.w	r3, r3, #1
 801ea88:	2b00      	cmp	r3, #0
 801ea8a:	d012      	beq.n	801eab2 <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 801ea8c:	4b69      	ldr	r3, [pc, #420]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ea8e:	689b      	ldr	r3, [r3, #8]
 801ea90:	4a68      	ldr	r2, [pc, #416]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ea92:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 801ea96:	6093      	str	r3, [r2, #8]
 801ea98:	4b66      	ldr	r3, [pc, #408]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ea9a:	689a      	ldr	r2, [r3, #8]
 801ea9c:	687b      	ldr	r3, [r7, #4]
 801ea9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801eaa0:	4964      	ldr	r1, [pc, #400]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801eaa2:	4313      	orrs	r3, r2
 801eaa4:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 801eaa6:	687b      	ldr	r3, [r7, #4]
 801eaa8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801eaaa:	2b00      	cmp	r3, #0
 801eaac:	d101      	bne.n	801eab2 <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 801eaae:	2301      	movs	r3, #1
 801eab0:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 801eab2:	687b      	ldr	r3, [r7, #4]
 801eab4:	681b      	ldr	r3, [r3, #0]
 801eab6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 801eaba:	2b00      	cmp	r3, #0
 801eabc:	d017      	beq.n	801eaee <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 801eabe:	4b5d      	ldr	r3, [pc, #372]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801eac0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801eac4:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 801eac8:	687b      	ldr	r3, [r7, #4]
 801eaca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801eacc:	4959      	ldr	r1, [pc, #356]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801eace:	4313      	orrs	r3, r2
 801ead0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 801ead4:	687b      	ldr	r3, [r7, #4]
 801ead6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801ead8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 801eadc:	d101      	bne.n	801eae2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 801eade:	2301      	movs	r3, #1
 801eae0:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 801eae2:	687b      	ldr	r3, [r7, #4]
 801eae4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801eae6:	2b00      	cmp	r3, #0
 801eae8:	d101      	bne.n	801eaee <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 801eaea:	2301      	movs	r3, #1
 801eaec:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 801eaee:	687b      	ldr	r3, [r7, #4]
 801eaf0:	681b      	ldr	r3, [r3, #0]
 801eaf2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 801eaf6:	2b00      	cmp	r3, #0
 801eaf8:	d017      	beq.n	801eb2a <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 801eafa:	4b4e      	ldr	r3, [pc, #312]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801eafc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801eb00:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 801eb04:	687b      	ldr	r3, [r7, #4]
 801eb06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801eb08:	494a      	ldr	r1, [pc, #296]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801eb0a:	4313      	orrs	r3, r2
 801eb0c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 801eb10:	687b      	ldr	r3, [r7, #4]
 801eb12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801eb14:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 801eb18:	d101      	bne.n	801eb1e <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 801eb1a:	2301      	movs	r3, #1
 801eb1c:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 801eb1e:	687b      	ldr	r3, [r7, #4]
 801eb20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801eb22:	2b00      	cmp	r3, #0
 801eb24:	d101      	bne.n	801eb2a <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 801eb26:	2301      	movs	r3, #1
 801eb28:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 801eb2a:	687b      	ldr	r3, [r7, #4]
 801eb2c:	681b      	ldr	r3, [r3, #0]
 801eb2e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801eb32:	2b00      	cmp	r3, #0
 801eb34:	d001      	beq.n	801eb3a <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 801eb36:	2301      	movs	r3, #1
 801eb38:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 801eb3a:	687b      	ldr	r3, [r7, #4]
 801eb3c:	681b      	ldr	r3, [r3, #0]
 801eb3e:	f003 0320 	and.w	r3, r3, #32
 801eb42:	2b00      	cmp	r3, #0
 801eb44:	f000 808b 	beq.w	801ec5e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 801eb48:	4b3a      	ldr	r3, [pc, #232]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801eb4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801eb4c:	4a39      	ldr	r2, [pc, #228]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801eb4e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801eb52:	6413      	str	r3, [r2, #64]	; 0x40
 801eb54:	4b37      	ldr	r3, [pc, #220]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801eb56:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801eb58:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801eb5c:	60bb      	str	r3, [r7, #8]
 801eb5e:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 801eb60:	4b35      	ldr	r3, [pc, #212]	; (801ec38 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 801eb62:	681b      	ldr	r3, [r3, #0]
 801eb64:	4a34      	ldr	r2, [pc, #208]	; (801ec38 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 801eb66:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801eb6a:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 801eb6c:	f7fe ff30 	bl	801d9d0 <HAL_GetTick>
 801eb70:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 801eb72:	e008      	b.n	801eb86 <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 801eb74:	f7fe ff2c 	bl	801d9d0 <HAL_GetTick>
 801eb78:	4602      	mov	r2, r0
 801eb7a:	697b      	ldr	r3, [r7, #20]
 801eb7c:	1ad3      	subs	r3, r2, r3
 801eb7e:	2b64      	cmp	r3, #100	; 0x64
 801eb80:	d901      	bls.n	801eb86 <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 801eb82:	2303      	movs	r3, #3
 801eb84:	e357      	b.n	801f236 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 801eb86:	4b2c      	ldr	r3, [pc, #176]	; (801ec38 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 801eb88:	681b      	ldr	r3, [r3, #0]
 801eb8a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801eb8e:	2b00      	cmp	r3, #0
 801eb90:	d0f0      	beq.n	801eb74 <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 801eb92:	4b28      	ldr	r3, [pc, #160]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801eb94:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801eb96:	f403 7340 	and.w	r3, r3, #768	; 0x300
 801eb9a:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 801eb9c:	693b      	ldr	r3, [r7, #16]
 801eb9e:	2b00      	cmp	r3, #0
 801eba0:	d035      	beq.n	801ec0e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 801eba2:	687b      	ldr	r3, [r7, #4]
 801eba4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801eba6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 801ebaa:	693a      	ldr	r2, [r7, #16]
 801ebac:	429a      	cmp	r2, r3
 801ebae:	d02e      	beq.n	801ec0e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 801ebb0:	4b20      	ldr	r3, [pc, #128]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ebb2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801ebb4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801ebb8:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 801ebba:	4b1e      	ldr	r3, [pc, #120]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ebbc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801ebbe:	4a1d      	ldr	r2, [pc, #116]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ebc0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801ebc4:	6713      	str	r3, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 801ebc6:	4b1b      	ldr	r3, [pc, #108]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ebc8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801ebca:	4a1a      	ldr	r2, [pc, #104]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ebcc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 801ebd0:	6713      	str	r3, [r2, #112]	; 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 801ebd2:	4a18      	ldr	r2, [pc, #96]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ebd4:	693b      	ldr	r3, [r7, #16]
 801ebd6:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 801ebd8:	4b16      	ldr	r3, [pc, #88]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ebda:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801ebdc:	f003 0301 	and.w	r3, r3, #1
 801ebe0:	2b01      	cmp	r3, #1
 801ebe2:	d114      	bne.n	801ec0e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801ebe4:	f7fe fef4 	bl	801d9d0 <HAL_GetTick>
 801ebe8:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 801ebea:	e00a      	b.n	801ec02 <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 801ebec:	f7fe fef0 	bl	801d9d0 <HAL_GetTick>
 801ebf0:	4602      	mov	r2, r0
 801ebf2:	697b      	ldr	r3, [r7, #20]
 801ebf4:	1ad3      	subs	r3, r2, r3
 801ebf6:	f241 3288 	movw	r2, #5000	; 0x1388
 801ebfa:	4293      	cmp	r3, r2
 801ebfc:	d901      	bls.n	801ec02 <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 801ebfe:	2303      	movs	r3, #3
 801ec00:	e319      	b.n	801f236 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 801ec02:	4b0c      	ldr	r3, [pc, #48]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ec04:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801ec06:	f003 0302 	and.w	r3, r3, #2
 801ec0a:	2b00      	cmp	r3, #0
 801ec0c:	d0ee      	beq.n	801ebec <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 801ec0e:	687b      	ldr	r3, [r7, #4]
 801ec10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ec12:	f403 7340 	and.w	r3, r3, #768	; 0x300
 801ec16:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801ec1a:	d111      	bne.n	801ec40 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 801ec1c:	4b05      	ldr	r3, [pc, #20]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ec1e:	689b      	ldr	r3, [r3, #8]
 801ec20:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 801ec24:	687b      	ldr	r3, [r7, #4]
 801ec26:	6b19      	ldr	r1, [r3, #48]	; 0x30
 801ec28:	4b04      	ldr	r3, [pc, #16]	; (801ec3c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 801ec2a:	400b      	ands	r3, r1
 801ec2c:	4901      	ldr	r1, [pc, #4]	; (801ec34 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 801ec2e:	4313      	orrs	r3, r2
 801ec30:	608b      	str	r3, [r1, #8]
 801ec32:	e00b      	b.n	801ec4c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 801ec34:	40023800 	.word	0x40023800
 801ec38:	40007000 	.word	0x40007000
 801ec3c:	0ffffcff 	.word	0x0ffffcff
 801ec40:	4bb1      	ldr	r3, [pc, #708]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ec42:	689b      	ldr	r3, [r3, #8]
 801ec44:	4ab0      	ldr	r2, [pc, #704]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ec46:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 801ec4a:	6093      	str	r3, [r2, #8]
 801ec4c:	4bae      	ldr	r3, [pc, #696]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ec4e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 801ec50:	687b      	ldr	r3, [r7, #4]
 801ec52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ec54:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ec58:	49ab      	ldr	r1, [pc, #684]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ec5a:	4313      	orrs	r3, r2
 801ec5c:	670b      	str	r3, [r1, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 801ec5e:	687b      	ldr	r3, [r7, #4]
 801ec60:	681b      	ldr	r3, [r3, #0]
 801ec62:	f003 0310 	and.w	r3, r3, #16
 801ec66:	2b00      	cmp	r3, #0
 801ec68:	d010      	beq.n	801ec8c <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 801ec6a:	4ba7      	ldr	r3, [pc, #668]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ec6c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801ec70:	4aa5      	ldr	r2, [pc, #660]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ec72:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 801ec76:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 801ec7a:	4ba3      	ldr	r3, [pc, #652]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ec7c:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 801ec80:	687b      	ldr	r3, [r7, #4]
 801ec82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ec84:	49a0      	ldr	r1, [pc, #640]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ec86:	4313      	orrs	r3, r2
 801ec88:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 801ec8c:	687b      	ldr	r3, [r7, #4]
 801ec8e:	681b      	ldr	r3, [r3, #0]
 801ec90:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801ec94:	2b00      	cmp	r3, #0
 801ec96:	d00a      	beq.n	801ecae <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 801ec98:	4b9b      	ldr	r3, [pc, #620]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ec9a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ec9e:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 801eca2:	687b      	ldr	r3, [r7, #4]
 801eca4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801eca6:	4998      	ldr	r1, [pc, #608]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801eca8:	4313      	orrs	r3, r2
 801ecaa:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 801ecae:	687b      	ldr	r3, [r7, #4]
 801ecb0:	681b      	ldr	r3, [r3, #0]
 801ecb2:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 801ecb6:	2b00      	cmp	r3, #0
 801ecb8:	d00a      	beq.n	801ecd0 <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 801ecba:	4b93      	ldr	r3, [pc, #588]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ecbc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ecc0:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 801ecc4:	687b      	ldr	r3, [r7, #4]
 801ecc6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801ecc8:	498f      	ldr	r1, [pc, #572]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ecca:	4313      	orrs	r3, r2
 801eccc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 801ecd0:	687b      	ldr	r3, [r7, #4]
 801ecd2:	681b      	ldr	r3, [r3, #0]
 801ecd4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 801ecd8:	2b00      	cmp	r3, #0
 801ecda:	d00a      	beq.n	801ecf2 <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 801ecdc:	4b8a      	ldr	r3, [pc, #552]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ecde:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ece2:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 801ece6:	687b      	ldr	r3, [r7, #4]
 801ece8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801ecea:	4987      	ldr	r1, [pc, #540]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ecec:	4313      	orrs	r3, r2
 801ecee:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 801ecf2:	687b      	ldr	r3, [r7, #4]
 801ecf4:	681b      	ldr	r3, [r3, #0]
 801ecf6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801ecfa:	2b00      	cmp	r3, #0
 801ecfc:	d00a      	beq.n	801ed14 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 801ecfe:	4b82      	ldr	r3, [pc, #520]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed00:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ed04:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 801ed08:	687b      	ldr	r3, [r7, #4]
 801ed0a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801ed0c:	497e      	ldr	r1, [pc, #504]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed0e:	4313      	orrs	r3, r2
 801ed10:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 801ed14:	687b      	ldr	r3, [r7, #4]
 801ed16:	681b      	ldr	r3, [r3, #0]
 801ed18:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801ed1c:	2b00      	cmp	r3, #0
 801ed1e:	d00a      	beq.n	801ed36 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 801ed20:	4b79      	ldr	r3, [pc, #484]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed22:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ed26:	f023 0203 	bic.w	r2, r3, #3
 801ed2a:	687b      	ldr	r3, [r7, #4]
 801ed2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ed2e:	4976      	ldr	r1, [pc, #472]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed30:	4313      	orrs	r3, r2
 801ed32:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 801ed36:	687b      	ldr	r3, [r7, #4]
 801ed38:	681b      	ldr	r3, [r3, #0]
 801ed3a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801ed3e:	2b00      	cmp	r3, #0
 801ed40:	d00a      	beq.n	801ed58 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 801ed42:	4b71      	ldr	r3, [pc, #452]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed44:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ed48:	f023 020c 	bic.w	r2, r3, #12
 801ed4c:	687b      	ldr	r3, [r7, #4]
 801ed4e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801ed50:	496d      	ldr	r1, [pc, #436]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed52:	4313      	orrs	r3, r2
 801ed54:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 801ed58:	687b      	ldr	r3, [r7, #4]
 801ed5a:	681b      	ldr	r3, [r3, #0]
 801ed5c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801ed60:	2b00      	cmp	r3, #0
 801ed62:	d00a      	beq.n	801ed7a <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 801ed64:	4b68      	ldr	r3, [pc, #416]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed66:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ed6a:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 801ed6e:	687b      	ldr	r3, [r7, #4]
 801ed70:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801ed72:	4965      	ldr	r1, [pc, #404]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed74:	4313      	orrs	r3, r2
 801ed76:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 801ed7a:	687b      	ldr	r3, [r7, #4]
 801ed7c:	681b      	ldr	r3, [r3, #0]
 801ed7e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 801ed82:	2b00      	cmp	r3, #0
 801ed84:	d00a      	beq.n	801ed9c <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 801ed86:	4b60      	ldr	r3, [pc, #384]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed88:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ed8c:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 801ed90:	687b      	ldr	r3, [r7, #4]
 801ed92:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801ed94:	495c      	ldr	r1, [pc, #368]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ed96:	4313      	orrs	r3, r2
 801ed98:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 801ed9c:	687b      	ldr	r3, [r7, #4]
 801ed9e:	681b      	ldr	r3, [r3, #0]
 801eda0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 801eda4:	2b00      	cmp	r3, #0
 801eda6:	d00a      	beq.n	801edbe <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 801eda8:	4b57      	ldr	r3, [pc, #348]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801edaa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801edae:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 801edb2:	687b      	ldr	r3, [r7, #4]
 801edb4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801edb6:	4954      	ldr	r1, [pc, #336]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801edb8:	4313      	orrs	r3, r2
 801edba:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 801edbe:	687b      	ldr	r3, [r7, #4]
 801edc0:	681b      	ldr	r3, [r3, #0]
 801edc2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 801edc6:	2b00      	cmp	r3, #0
 801edc8:	d00a      	beq.n	801ede0 <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 801edca:	4b4f      	ldr	r3, [pc, #316]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801edcc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801edd0:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 801edd4:	687b      	ldr	r3, [r7, #4]
 801edd6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801edd8:	494b      	ldr	r1, [pc, #300]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801edda:	4313      	orrs	r3, r2
 801eddc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 801ede0:	687b      	ldr	r3, [r7, #4]
 801ede2:	681b      	ldr	r3, [r3, #0]
 801ede4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 801ede8:	2b00      	cmp	r3, #0
 801edea:	d00a      	beq.n	801ee02 <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 801edec:	4b46      	ldr	r3, [pc, #280]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801edee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801edf2:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 801edf6:	687b      	ldr	r3, [r7, #4]
 801edf8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801edfa:	4943      	ldr	r1, [pc, #268]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801edfc:	4313      	orrs	r3, r2
 801edfe:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 801ee02:	687b      	ldr	r3, [r7, #4]
 801ee04:	681b      	ldr	r3, [r3, #0]
 801ee06:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 801ee0a:	2b00      	cmp	r3, #0
 801ee0c:	d00a      	beq.n	801ee24 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 801ee0e:	4b3e      	ldr	r3, [pc, #248]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ee10:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ee14:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 801ee18:	687b      	ldr	r3, [r7, #4]
 801ee1a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801ee1c:	493a      	ldr	r1, [pc, #232]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ee1e:	4313      	orrs	r3, r2
 801ee20:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 801ee24:	687b      	ldr	r3, [r7, #4]
 801ee26:	681b      	ldr	r3, [r3, #0]
 801ee28:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 801ee2c:	2b00      	cmp	r3, #0
 801ee2e:	d00a      	beq.n	801ee46 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 801ee30:	4b35      	ldr	r3, [pc, #212]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ee32:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ee36:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 801ee3a:	687b      	ldr	r3, [r7, #4]
 801ee3c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 801ee3e:	4932      	ldr	r1, [pc, #200]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ee40:	4313      	orrs	r3, r2
 801ee42:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 801ee46:	687b      	ldr	r3, [r7, #4]
 801ee48:	681b      	ldr	r3, [r3, #0]
 801ee4a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 801ee4e:	2b00      	cmp	r3, #0
 801ee50:	d011      	beq.n	801ee76 <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 801ee52:	4b2d      	ldr	r3, [pc, #180]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ee54:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ee58:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 801ee5c:	687b      	ldr	r3, [r7, #4]
 801ee5e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801ee60:	4929      	ldr	r1, [pc, #164]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ee62:	4313      	orrs	r3, r2
 801ee64:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 801ee68:	687b      	ldr	r3, [r7, #4]
 801ee6a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801ee6c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 801ee70:	d101      	bne.n	801ee76 <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 801ee72:	2301      	movs	r3, #1
 801ee74:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 801ee76:	687b      	ldr	r3, [r7, #4]
 801ee78:	681b      	ldr	r3, [r3, #0]
 801ee7a:	f003 0308 	and.w	r3, r3, #8
 801ee7e:	2b00      	cmp	r3, #0
 801ee80:	d001      	beq.n	801ee86 <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 801ee82:	2301      	movs	r3, #1
 801ee84:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 801ee86:	687b      	ldr	r3, [r7, #4]
 801ee88:	681b      	ldr	r3, [r3, #0]
 801ee8a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 801ee8e:	2b00      	cmp	r3, #0
 801ee90:	d00a      	beq.n	801eea8 <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 801ee92:	4b1d      	ldr	r3, [pc, #116]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801ee94:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801ee98:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 801ee9c:	687b      	ldr	r3, [r7, #4]
 801ee9e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801eea0:	4919      	ldr	r1, [pc, #100]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801eea2:	4313      	orrs	r3, r2
 801eea4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 801eea8:	687b      	ldr	r3, [r7, #4]
 801eeaa:	681b      	ldr	r3, [r3, #0]
 801eeac:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 801eeb0:	2b00      	cmp	r3, #0
 801eeb2:	d00b      	beq.n	801eecc <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 801eeb4:	4b14      	ldr	r3, [pc, #80]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801eeb6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801eeba:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 801eebe:	687b      	ldr	r3, [r7, #4]
 801eec0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801eec4:	4910      	ldr	r1, [pc, #64]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801eec6:	4313      	orrs	r3, r2
 801eec8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 801eecc:	69fb      	ldr	r3, [r7, #28]
 801eece:	2b01      	cmp	r3, #1
 801eed0:	d006      	beq.n	801eee0 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 801eed2:	687b      	ldr	r3, [r7, #4]
 801eed4:	681b      	ldr	r3, [r3, #0]
 801eed6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801eeda:	2b00      	cmp	r3, #0
 801eedc:	f000 80d9 	beq.w	801f092 <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 801eee0:	4b09      	ldr	r3, [pc, #36]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801eee2:	681b      	ldr	r3, [r3, #0]
 801eee4:	4a08      	ldr	r2, [pc, #32]	; (801ef08 <HAL_RCCEx_PeriphCLKConfig+0x4a4>)
 801eee6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 801eeea:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 801eeec:	f7fe fd70 	bl	801d9d0 <HAL_GetTick>
 801eef0:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 801eef2:	e00b      	b.n	801ef0c <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 801eef4:	f7fe fd6c 	bl	801d9d0 <HAL_GetTick>
 801eef8:	4602      	mov	r2, r0
 801eefa:	697b      	ldr	r3, [r7, #20]
 801eefc:	1ad3      	subs	r3, r2, r3
 801eefe:	2b64      	cmp	r3, #100	; 0x64
 801ef00:	d904      	bls.n	801ef0c <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 801ef02:	2303      	movs	r3, #3
 801ef04:	e197      	b.n	801f236 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 801ef06:	bf00      	nop
 801ef08:	40023800 	.word	0x40023800
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 801ef0c:	4b6c      	ldr	r3, [pc, #432]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801ef0e:	681b      	ldr	r3, [r3, #0]
 801ef10:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 801ef14:	2b00      	cmp	r3, #0
 801ef16:	d1ed      	bne.n	801eef4 <HAL_RCCEx_PeriphCLKConfig+0x490>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 801ef18:	687b      	ldr	r3, [r7, #4]
 801ef1a:	681b      	ldr	r3, [r3, #0]
 801ef1c:	f003 0301 	and.w	r3, r3, #1
 801ef20:	2b00      	cmp	r3, #0
 801ef22:	d021      	beq.n	801ef68 <HAL_RCCEx_PeriphCLKConfig+0x504>
 801ef24:	687b      	ldr	r3, [r7, #4]
 801ef26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801ef28:	2b00      	cmp	r3, #0
 801ef2a:	d11d      	bne.n	801ef68 <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 801ef2c:	4b64      	ldr	r3, [pc, #400]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801ef2e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801ef32:	0c1b      	lsrs	r3, r3, #16
 801ef34:	f003 0303 	and.w	r3, r3, #3
 801ef38:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 801ef3a:	4b61      	ldr	r3, [pc, #388]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801ef3c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801ef40:	0e1b      	lsrs	r3, r3, #24
 801ef42:	f003 030f 	and.w	r3, r3, #15
 801ef46:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 801ef48:	687b      	ldr	r3, [r7, #4]
 801ef4a:	685b      	ldr	r3, [r3, #4]
 801ef4c:	019a      	lsls	r2, r3, #6
 801ef4e:	693b      	ldr	r3, [r7, #16]
 801ef50:	041b      	lsls	r3, r3, #16
 801ef52:	431a      	orrs	r2, r3
 801ef54:	68fb      	ldr	r3, [r7, #12]
 801ef56:	061b      	lsls	r3, r3, #24
 801ef58:	431a      	orrs	r2, r3
 801ef5a:	687b      	ldr	r3, [r7, #4]
 801ef5c:	689b      	ldr	r3, [r3, #8]
 801ef5e:	071b      	lsls	r3, r3, #28
 801ef60:	4957      	ldr	r1, [pc, #348]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801ef62:	4313      	orrs	r3, r2
 801ef64:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 801ef68:	687b      	ldr	r3, [r7, #4]
 801ef6a:	681b      	ldr	r3, [r3, #0]
 801ef6c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 801ef70:	2b00      	cmp	r3, #0
 801ef72:	d004      	beq.n	801ef7e <HAL_RCCEx_PeriphCLKConfig+0x51a>
 801ef74:	687b      	ldr	r3, [r7, #4]
 801ef76:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801ef78:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 801ef7c:	d00a      	beq.n	801ef94 <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 801ef7e:	687b      	ldr	r3, [r7, #4]
 801ef80:	681b      	ldr	r3, [r3, #0]
 801ef82:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 801ef86:	2b00      	cmp	r3, #0
 801ef88:	d02e      	beq.n	801efe8 <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 801ef8a:	687b      	ldr	r3, [r7, #4]
 801ef8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ef8e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 801ef92:	d129      	bne.n	801efe8 <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 801ef94:	4b4a      	ldr	r3, [pc, #296]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801ef96:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801ef9a:	0c1b      	lsrs	r3, r3, #16
 801ef9c:	f003 0303 	and.w	r3, r3, #3
 801efa0:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 801efa2:	4b47      	ldr	r3, [pc, #284]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801efa4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801efa8:	0f1b      	lsrs	r3, r3, #28
 801efaa:	f003 0307 	and.w	r3, r3, #7
 801efae:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 801efb0:	687b      	ldr	r3, [r7, #4]
 801efb2:	685b      	ldr	r3, [r3, #4]
 801efb4:	019a      	lsls	r2, r3, #6
 801efb6:	693b      	ldr	r3, [r7, #16]
 801efb8:	041b      	lsls	r3, r3, #16
 801efba:	431a      	orrs	r2, r3
 801efbc:	687b      	ldr	r3, [r7, #4]
 801efbe:	68db      	ldr	r3, [r3, #12]
 801efc0:	061b      	lsls	r3, r3, #24
 801efc2:	431a      	orrs	r2, r3
 801efc4:	68fb      	ldr	r3, [r7, #12]
 801efc6:	071b      	lsls	r3, r3, #28
 801efc8:	493d      	ldr	r1, [pc, #244]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801efca:	4313      	orrs	r3, r2
 801efcc:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 801efd0:	4b3b      	ldr	r3, [pc, #236]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801efd2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801efd6:	f023 021f 	bic.w	r2, r3, #31
 801efda:	687b      	ldr	r3, [r7, #4]
 801efdc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801efde:	3b01      	subs	r3, #1
 801efe0:	4937      	ldr	r1, [pc, #220]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801efe2:	4313      	orrs	r3, r2
 801efe4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 801efe8:	687b      	ldr	r3, [r7, #4]
 801efea:	681b      	ldr	r3, [r3, #0]
 801efec:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801eff0:	2b00      	cmp	r3, #0
 801eff2:	d01d      	beq.n	801f030 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 801eff4:	4b32      	ldr	r3, [pc, #200]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801eff6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801effa:	0e1b      	lsrs	r3, r3, #24
 801effc:	f003 030f 	and.w	r3, r3, #15
 801f000:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 801f002:	4b2f      	ldr	r3, [pc, #188]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801f004:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801f008:	0f1b      	lsrs	r3, r3, #28
 801f00a:	f003 0307 	and.w	r3, r3, #7
 801f00e:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 801f010:	687b      	ldr	r3, [r7, #4]
 801f012:	685b      	ldr	r3, [r3, #4]
 801f014:	019a      	lsls	r2, r3, #6
 801f016:	687b      	ldr	r3, [r7, #4]
 801f018:	691b      	ldr	r3, [r3, #16]
 801f01a:	041b      	lsls	r3, r3, #16
 801f01c:	431a      	orrs	r2, r3
 801f01e:	693b      	ldr	r3, [r7, #16]
 801f020:	061b      	lsls	r3, r3, #24
 801f022:	431a      	orrs	r2, r3
 801f024:	68fb      	ldr	r3, [r7, #12]
 801f026:	071b      	lsls	r3, r3, #28
 801f028:	4925      	ldr	r1, [pc, #148]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801f02a:	4313      	orrs	r3, r2
 801f02c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 801f030:	687b      	ldr	r3, [r7, #4]
 801f032:	681b      	ldr	r3, [r3, #0]
 801f034:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801f038:	2b00      	cmp	r3, #0
 801f03a:	d011      	beq.n	801f060 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 801f03c:	687b      	ldr	r3, [r7, #4]
 801f03e:	685b      	ldr	r3, [r3, #4]
 801f040:	019a      	lsls	r2, r3, #6
 801f042:	687b      	ldr	r3, [r7, #4]
 801f044:	691b      	ldr	r3, [r3, #16]
 801f046:	041b      	lsls	r3, r3, #16
 801f048:	431a      	orrs	r2, r3
 801f04a:	687b      	ldr	r3, [r7, #4]
 801f04c:	68db      	ldr	r3, [r3, #12]
 801f04e:	061b      	lsls	r3, r3, #24
 801f050:	431a      	orrs	r2, r3
 801f052:	687b      	ldr	r3, [r7, #4]
 801f054:	689b      	ldr	r3, [r3, #8]
 801f056:	071b      	lsls	r3, r3, #28
 801f058:	4919      	ldr	r1, [pc, #100]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801f05a:	4313      	orrs	r3, r2
 801f05c:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 801f060:	4b17      	ldr	r3, [pc, #92]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801f062:	681b      	ldr	r3, [r3, #0]
 801f064:	4a16      	ldr	r2, [pc, #88]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801f066:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 801f06a:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 801f06c:	f7fe fcb0 	bl	801d9d0 <HAL_GetTick>
 801f070:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 801f072:	e008      	b.n	801f086 <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 801f074:	f7fe fcac 	bl	801d9d0 <HAL_GetTick>
 801f078:	4602      	mov	r2, r0
 801f07a:	697b      	ldr	r3, [r7, #20]
 801f07c:	1ad3      	subs	r3, r2, r3
 801f07e:	2b64      	cmp	r3, #100	; 0x64
 801f080:	d901      	bls.n	801f086 <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 801f082:	2303      	movs	r3, #3
 801f084:	e0d7      	b.n	801f236 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 801f086:	4b0e      	ldr	r3, [pc, #56]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801f088:	681b      	ldr	r3, [r3, #0]
 801f08a:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 801f08e:	2b00      	cmp	r3, #0
 801f090:	d0f0      	beq.n	801f074 <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 801f092:	69bb      	ldr	r3, [r7, #24]
 801f094:	2b01      	cmp	r3, #1
 801f096:	f040 80cd 	bne.w	801f234 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 801f09a:	4b09      	ldr	r3, [pc, #36]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801f09c:	681b      	ldr	r3, [r3, #0]
 801f09e:	4a08      	ldr	r2, [pc, #32]	; (801f0c0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 801f0a0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801f0a4:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 801f0a6:	f7fe fc93 	bl	801d9d0 <HAL_GetTick>
 801f0aa:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 801f0ac:	e00a      	b.n	801f0c4 <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 801f0ae:	f7fe fc8f 	bl	801d9d0 <HAL_GetTick>
 801f0b2:	4602      	mov	r2, r0
 801f0b4:	697b      	ldr	r3, [r7, #20]
 801f0b6:	1ad3      	subs	r3, r2, r3
 801f0b8:	2b64      	cmp	r3, #100	; 0x64
 801f0ba:	d903      	bls.n	801f0c4 <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 801f0bc:	2303      	movs	r3, #3
 801f0be:	e0ba      	b.n	801f236 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 801f0c0:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 801f0c4:	4b5e      	ldr	r3, [pc, #376]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f0c6:	681b      	ldr	r3, [r3, #0]
 801f0c8:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 801f0cc:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 801f0d0:	d0ed      	beq.n	801f0ae <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 801f0d2:	687b      	ldr	r3, [r7, #4]
 801f0d4:	681b      	ldr	r3, [r3, #0]
 801f0d6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 801f0da:	2b00      	cmp	r3, #0
 801f0dc:	d003      	beq.n	801f0e6 <HAL_RCCEx_PeriphCLKConfig+0x682>
 801f0de:	687b      	ldr	r3, [r7, #4]
 801f0e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801f0e2:	2b00      	cmp	r3, #0
 801f0e4:	d009      	beq.n	801f0fa <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 801f0e6:	687b      	ldr	r3, [r7, #4]
 801f0e8:	681b      	ldr	r3, [r3, #0]
 801f0ea:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 801f0ee:	2b00      	cmp	r3, #0
 801f0f0:	d02e      	beq.n	801f150 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 801f0f2:	687b      	ldr	r3, [r7, #4]
 801f0f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801f0f6:	2b00      	cmp	r3, #0
 801f0f8:	d12a      	bne.n	801f150 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 801f0fa:	4b51      	ldr	r3, [pc, #324]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f0fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801f100:	0c1b      	lsrs	r3, r3, #16
 801f102:	f003 0303 	and.w	r3, r3, #3
 801f106:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 801f108:	4b4d      	ldr	r3, [pc, #308]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f10a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801f10e:	0f1b      	lsrs	r3, r3, #28
 801f110:	f003 0307 	and.w	r3, r3, #7
 801f114:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 801f116:	687b      	ldr	r3, [r7, #4]
 801f118:	695b      	ldr	r3, [r3, #20]
 801f11a:	019a      	lsls	r2, r3, #6
 801f11c:	693b      	ldr	r3, [r7, #16]
 801f11e:	041b      	lsls	r3, r3, #16
 801f120:	431a      	orrs	r2, r3
 801f122:	687b      	ldr	r3, [r7, #4]
 801f124:	699b      	ldr	r3, [r3, #24]
 801f126:	061b      	lsls	r3, r3, #24
 801f128:	431a      	orrs	r2, r3
 801f12a:	68fb      	ldr	r3, [r7, #12]
 801f12c:	071b      	lsls	r3, r3, #28
 801f12e:	4944      	ldr	r1, [pc, #272]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f130:	4313      	orrs	r3, r2
 801f132:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 801f136:	4b42      	ldr	r3, [pc, #264]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f138:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801f13c:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 801f140:	687b      	ldr	r3, [r7, #4]
 801f142:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f144:	3b01      	subs	r3, #1
 801f146:	021b      	lsls	r3, r3, #8
 801f148:	493d      	ldr	r1, [pc, #244]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f14a:	4313      	orrs	r3, r2
 801f14c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 801f150:	687b      	ldr	r3, [r7, #4]
 801f152:	681b      	ldr	r3, [r3, #0]
 801f154:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 801f158:	2b00      	cmp	r3, #0
 801f15a:	d022      	beq.n	801f1a2 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 801f15c:	687b      	ldr	r3, [r7, #4]
 801f15e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801f160:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 801f164:	d11d      	bne.n	801f1a2 <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 801f166:	4b36      	ldr	r3, [pc, #216]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f168:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801f16c:	0e1b      	lsrs	r3, r3, #24
 801f16e:	f003 030f 	and.w	r3, r3, #15
 801f172:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 801f174:	4b32      	ldr	r3, [pc, #200]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f176:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801f17a:	0f1b      	lsrs	r3, r3, #28
 801f17c:	f003 0307 	and.w	r3, r3, #7
 801f180:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 801f182:	687b      	ldr	r3, [r7, #4]
 801f184:	695b      	ldr	r3, [r3, #20]
 801f186:	019a      	lsls	r2, r3, #6
 801f188:	687b      	ldr	r3, [r7, #4]
 801f18a:	6a1b      	ldr	r3, [r3, #32]
 801f18c:	041b      	lsls	r3, r3, #16
 801f18e:	431a      	orrs	r2, r3
 801f190:	693b      	ldr	r3, [r7, #16]
 801f192:	061b      	lsls	r3, r3, #24
 801f194:	431a      	orrs	r2, r3
 801f196:	68fb      	ldr	r3, [r7, #12]
 801f198:	071b      	lsls	r3, r3, #28
 801f19a:	4929      	ldr	r1, [pc, #164]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f19c:	4313      	orrs	r3, r2
 801f19e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 801f1a2:	687b      	ldr	r3, [r7, #4]
 801f1a4:	681b      	ldr	r3, [r3, #0]
 801f1a6:	f003 0308 	and.w	r3, r3, #8
 801f1aa:	2b00      	cmp	r3, #0
 801f1ac:	d028      	beq.n	801f200 <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 801f1ae:	4b24      	ldr	r3, [pc, #144]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f1b0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801f1b4:	0e1b      	lsrs	r3, r3, #24
 801f1b6:	f003 030f 	and.w	r3, r3, #15
 801f1ba:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 801f1bc:	4b20      	ldr	r3, [pc, #128]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f1be:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801f1c2:	0c1b      	lsrs	r3, r3, #16
 801f1c4:	f003 0303 	and.w	r3, r3, #3
 801f1c8:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 801f1ca:	687b      	ldr	r3, [r7, #4]
 801f1cc:	695b      	ldr	r3, [r3, #20]
 801f1ce:	019a      	lsls	r2, r3, #6
 801f1d0:	68fb      	ldr	r3, [r7, #12]
 801f1d2:	041b      	lsls	r3, r3, #16
 801f1d4:	431a      	orrs	r2, r3
 801f1d6:	693b      	ldr	r3, [r7, #16]
 801f1d8:	061b      	lsls	r3, r3, #24
 801f1da:	431a      	orrs	r2, r3
 801f1dc:	687b      	ldr	r3, [r7, #4]
 801f1de:	69db      	ldr	r3, [r3, #28]
 801f1e0:	071b      	lsls	r3, r3, #28
 801f1e2:	4917      	ldr	r1, [pc, #92]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f1e4:	4313      	orrs	r3, r2
 801f1e6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 801f1ea:	4b15      	ldr	r3, [pc, #84]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f1ec:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801f1f0:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 801f1f4:	687b      	ldr	r3, [r7, #4]
 801f1f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f1f8:	4911      	ldr	r1, [pc, #68]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f1fa:	4313      	orrs	r3, r2
 801f1fc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 801f200:	4b0f      	ldr	r3, [pc, #60]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f202:	681b      	ldr	r3, [r3, #0]
 801f204:	4a0e      	ldr	r2, [pc, #56]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f206:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801f20a:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 801f20c:	f7fe fbe0 	bl	801d9d0 <HAL_GetTick>
 801f210:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 801f212:	e008      	b.n	801f226 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 801f214:	f7fe fbdc 	bl	801d9d0 <HAL_GetTick>
 801f218:	4602      	mov	r2, r0
 801f21a:	697b      	ldr	r3, [r7, #20]
 801f21c:	1ad3      	subs	r3, r2, r3
 801f21e:	2b64      	cmp	r3, #100	; 0x64
 801f220:	d901      	bls.n	801f226 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 801f222:	2303      	movs	r3, #3
 801f224:	e007      	b.n	801f236 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 801f226:	4b06      	ldr	r3, [pc, #24]	; (801f240 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 801f228:	681b      	ldr	r3, [r3, #0]
 801f22a:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 801f22e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 801f232:	d1ef      	bne.n	801f214 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 801f234:	2300      	movs	r3, #0
}
 801f236:	4618      	mov	r0, r3
 801f238:	3720      	adds	r7, #32
 801f23a:	46bd      	mov	sp, r7
 801f23c:	bd80      	pop	{r7, pc}
 801f23e:	bf00      	nop
 801f240:	40023800 	.word	0x40023800

0801f244 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 801f244:	b580      	push	{r7, lr}
 801f246:	b082      	sub	sp, #8
 801f248:	af00      	add	r7, sp, #0
 801f24a:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 801f24c:	687b      	ldr	r3, [r7, #4]
 801f24e:	2b00      	cmp	r3, #0
 801f250:	d101      	bne.n	801f256 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 801f252:	2301      	movs	r3, #1
 801f254:	e040      	b.n	801f2d8 <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 801f256:	687b      	ldr	r3, [r7, #4]
 801f258:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 801f25a:	2b00      	cmp	r3, #0
 801f25c:	d106      	bne.n	801f26c <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 801f25e:	687b      	ldr	r3, [r7, #4]
 801f260:	2200      	movs	r2, #0
 801f262:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 801f266:	6878      	ldr	r0, [r7, #4]
 801f268:	f7f8 f88a 	bl	8017380 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 801f26c:	687b      	ldr	r3, [r7, #4]
 801f26e:	2224      	movs	r2, #36	; 0x24
 801f270:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 801f272:	687b      	ldr	r3, [r7, #4]
 801f274:	681b      	ldr	r3, [r3, #0]
 801f276:	681a      	ldr	r2, [r3, #0]
 801f278:	687b      	ldr	r3, [r7, #4]
 801f27a:	681b      	ldr	r3, [r3, #0]
 801f27c:	f022 0201 	bic.w	r2, r2, #1
 801f280:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 801f282:	6878      	ldr	r0, [r7, #4]
 801f284:	f000 fb9c 	bl	801f9c0 <UART_SetConfig>
 801f288:	4603      	mov	r3, r0
 801f28a:	2b01      	cmp	r3, #1
 801f28c:	d101      	bne.n	801f292 <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 801f28e:	2301      	movs	r3, #1
 801f290:	e022      	b.n	801f2d8 <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 801f292:	687b      	ldr	r3, [r7, #4]
 801f294:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801f296:	2b00      	cmp	r3, #0
 801f298:	d002      	beq.n	801f2a0 <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 801f29a:	6878      	ldr	r0, [r7, #4]
 801f29c:	f000 fdf2 	bl	801fe84 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 801f2a0:	687b      	ldr	r3, [r7, #4]
 801f2a2:	681b      	ldr	r3, [r3, #0]
 801f2a4:	685a      	ldr	r2, [r3, #4]
 801f2a6:	687b      	ldr	r3, [r7, #4]
 801f2a8:	681b      	ldr	r3, [r3, #0]
 801f2aa:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 801f2ae:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 801f2b0:	687b      	ldr	r3, [r7, #4]
 801f2b2:	681b      	ldr	r3, [r3, #0]
 801f2b4:	689a      	ldr	r2, [r3, #8]
 801f2b6:	687b      	ldr	r3, [r7, #4]
 801f2b8:	681b      	ldr	r3, [r3, #0]
 801f2ba:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 801f2be:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 801f2c0:	687b      	ldr	r3, [r7, #4]
 801f2c2:	681b      	ldr	r3, [r3, #0]
 801f2c4:	681a      	ldr	r2, [r3, #0]
 801f2c6:	687b      	ldr	r3, [r7, #4]
 801f2c8:	681b      	ldr	r3, [r3, #0]
 801f2ca:	f042 0201 	orr.w	r2, r2, #1
 801f2ce:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 801f2d0:	6878      	ldr	r0, [r7, #4]
 801f2d2:	f000 fe79 	bl	801ffc8 <UART_CheckIdleState>
 801f2d6:	4603      	mov	r3, r0
}
 801f2d8:	4618      	mov	r0, r3
 801f2da:	3708      	adds	r7, #8
 801f2dc:	46bd      	mov	sp, r7
 801f2de:	bd80      	pop	{r7, pc}

0801f2e0 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 801f2e0:	b580      	push	{r7, lr}
 801f2e2:	b08a      	sub	sp, #40	; 0x28
 801f2e4:	af02      	add	r7, sp, #8
 801f2e6:	60f8      	str	r0, [r7, #12]
 801f2e8:	60b9      	str	r1, [r7, #8]
 801f2ea:	603b      	str	r3, [r7, #0]
 801f2ec:	4613      	mov	r3, r2
 801f2ee:	80fb      	strh	r3, [r7, #6]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 801f2f0:	68fb      	ldr	r3, [r7, #12]
 801f2f2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 801f2f4:	2b20      	cmp	r3, #32
 801f2f6:	f040 8081 	bne.w	801f3fc <HAL_UART_Transmit+0x11c>
  {
    if ((pData == NULL) || (Size == 0U))
 801f2fa:	68bb      	ldr	r3, [r7, #8]
 801f2fc:	2b00      	cmp	r3, #0
 801f2fe:	d002      	beq.n	801f306 <HAL_UART_Transmit+0x26>
 801f300:	88fb      	ldrh	r3, [r7, #6]
 801f302:	2b00      	cmp	r3, #0
 801f304:	d101      	bne.n	801f30a <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 801f306:	2301      	movs	r3, #1
 801f308:	e079      	b.n	801f3fe <HAL_UART_Transmit+0x11e>
    }

    __HAL_LOCK(huart);
 801f30a:	68fb      	ldr	r3, [r7, #12]
 801f30c:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 801f310:	2b01      	cmp	r3, #1
 801f312:	d101      	bne.n	801f318 <HAL_UART_Transmit+0x38>
 801f314:	2302      	movs	r3, #2
 801f316:	e072      	b.n	801f3fe <HAL_UART_Transmit+0x11e>
 801f318:	68fb      	ldr	r3, [r7, #12]
 801f31a:	2201      	movs	r2, #1
 801f31c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 801f320:	68fb      	ldr	r3, [r7, #12]
 801f322:	2200      	movs	r2, #0
 801f324:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 801f328:	68fb      	ldr	r3, [r7, #12]
 801f32a:	2221      	movs	r2, #33	; 0x21
 801f32c:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 801f32e:	f7fe fb4f 	bl	801d9d0 <HAL_GetTick>
 801f332:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 801f334:	68fb      	ldr	r3, [r7, #12]
 801f336:	88fa      	ldrh	r2, [r7, #6]
 801f338:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 801f33c:	68fb      	ldr	r3, [r7, #12]
 801f33e:	88fa      	ldrh	r2, [r7, #6]
 801f340:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 801f344:	68fb      	ldr	r3, [r7, #12]
 801f346:	689b      	ldr	r3, [r3, #8]
 801f348:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801f34c:	d108      	bne.n	801f360 <HAL_UART_Transmit+0x80>
 801f34e:	68fb      	ldr	r3, [r7, #12]
 801f350:	691b      	ldr	r3, [r3, #16]
 801f352:	2b00      	cmp	r3, #0
 801f354:	d104      	bne.n	801f360 <HAL_UART_Transmit+0x80>
    {
      pdata8bits  = NULL;
 801f356:	2300      	movs	r3, #0
 801f358:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 801f35a:	68bb      	ldr	r3, [r7, #8]
 801f35c:	61bb      	str	r3, [r7, #24]
 801f35e:	e003      	b.n	801f368 <HAL_UART_Transmit+0x88>
    }
    else
    {
      pdata8bits  = pData;
 801f360:	68bb      	ldr	r3, [r7, #8]
 801f362:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 801f364:	2300      	movs	r3, #0
 801f366:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 801f368:	68fb      	ldr	r3, [r7, #12]
 801f36a:	2200      	movs	r2, #0
 801f36c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    while (huart->TxXferCount > 0U)
 801f370:	e02c      	b.n	801f3cc <HAL_UART_Transmit+0xec>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 801f372:	683b      	ldr	r3, [r7, #0]
 801f374:	9300      	str	r3, [sp, #0]
 801f376:	697b      	ldr	r3, [r7, #20]
 801f378:	2200      	movs	r2, #0
 801f37a:	2180      	movs	r1, #128	; 0x80
 801f37c:	68f8      	ldr	r0, [r7, #12]
 801f37e:	f000 fe56 	bl	802002e <UART_WaitOnFlagUntilTimeout>
 801f382:	4603      	mov	r3, r0
 801f384:	2b00      	cmp	r3, #0
 801f386:	d001      	beq.n	801f38c <HAL_UART_Transmit+0xac>
      {
        return HAL_TIMEOUT;
 801f388:	2303      	movs	r3, #3
 801f38a:	e038      	b.n	801f3fe <HAL_UART_Transmit+0x11e>
      }
      if (pdata8bits == NULL)
 801f38c:	69fb      	ldr	r3, [r7, #28]
 801f38e:	2b00      	cmp	r3, #0
 801f390:	d10b      	bne.n	801f3aa <HAL_UART_Transmit+0xca>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 801f392:	69bb      	ldr	r3, [r7, #24]
 801f394:	881b      	ldrh	r3, [r3, #0]
 801f396:	461a      	mov	r2, r3
 801f398:	68fb      	ldr	r3, [r7, #12]
 801f39a:	681b      	ldr	r3, [r3, #0]
 801f39c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 801f3a0:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 801f3a2:	69bb      	ldr	r3, [r7, #24]
 801f3a4:	3302      	adds	r3, #2
 801f3a6:	61bb      	str	r3, [r7, #24]
 801f3a8:	e007      	b.n	801f3ba <HAL_UART_Transmit+0xda>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 801f3aa:	69fb      	ldr	r3, [r7, #28]
 801f3ac:	781a      	ldrb	r2, [r3, #0]
 801f3ae:	68fb      	ldr	r3, [r7, #12]
 801f3b0:	681b      	ldr	r3, [r3, #0]
 801f3b2:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 801f3b4:	69fb      	ldr	r3, [r7, #28]
 801f3b6:	3301      	adds	r3, #1
 801f3b8:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 801f3ba:	68fb      	ldr	r3, [r7, #12]
 801f3bc:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 801f3c0:	b29b      	uxth	r3, r3
 801f3c2:	3b01      	subs	r3, #1
 801f3c4:	b29a      	uxth	r2, r3
 801f3c6:	68fb      	ldr	r3, [r7, #12]
 801f3c8:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 801f3cc:	68fb      	ldr	r3, [r7, #12]
 801f3ce:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 801f3d2:	b29b      	uxth	r3, r3
 801f3d4:	2b00      	cmp	r3, #0
 801f3d6:	d1cc      	bne.n	801f372 <HAL_UART_Transmit+0x92>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 801f3d8:	683b      	ldr	r3, [r7, #0]
 801f3da:	9300      	str	r3, [sp, #0]
 801f3dc:	697b      	ldr	r3, [r7, #20]
 801f3de:	2200      	movs	r2, #0
 801f3e0:	2140      	movs	r1, #64	; 0x40
 801f3e2:	68f8      	ldr	r0, [r7, #12]
 801f3e4:	f000 fe23 	bl	802002e <UART_WaitOnFlagUntilTimeout>
 801f3e8:	4603      	mov	r3, r0
 801f3ea:	2b00      	cmp	r3, #0
 801f3ec:	d001      	beq.n	801f3f2 <HAL_UART_Transmit+0x112>
    {
      return HAL_TIMEOUT;
 801f3ee:	2303      	movs	r3, #3
 801f3f0:	e005      	b.n	801f3fe <HAL_UART_Transmit+0x11e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 801f3f2:	68fb      	ldr	r3, [r7, #12]
 801f3f4:	2220      	movs	r2, #32
 801f3f6:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 801f3f8:	2300      	movs	r3, #0
 801f3fa:	e000      	b.n	801f3fe <HAL_UART_Transmit+0x11e>
  }
  else
  {
    return HAL_BUSY;
 801f3fc:	2302      	movs	r3, #2
  }
}
 801f3fe:	4618      	mov	r0, r3
 801f400:	3720      	adds	r7, #32
 801f402:	46bd      	mov	sp, r7
 801f404:	bd80      	pop	{r7, pc}

0801f406 <HAL_UART_Receive>:
  * @param Size    Amount of data elements (u8 or u16) to be received.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 801f406:	b580      	push	{r7, lr}
 801f408:	b08a      	sub	sp, #40	; 0x28
 801f40a:	af02      	add	r7, sp, #8
 801f40c:	60f8      	str	r0, [r7, #12]
 801f40e:	60b9      	str	r1, [r7, #8]
 801f410:	603b      	str	r3, [r7, #0]
 801f412:	4613      	mov	r3, r2
 801f414:	80fb      	strh	r3, [r7, #6]
  uint16_t *pdata16bits;
  uint16_t uhMask;
  uint32_t tickstart;

  /* Check that a Rx process is not already ongoing */
  if (huart->RxState == HAL_UART_STATE_READY)
 801f416:	68fb      	ldr	r3, [r7, #12]
 801f418:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801f41a:	2b20      	cmp	r3, #32
 801f41c:	f040 80be 	bne.w	801f59c <HAL_UART_Receive+0x196>
  {
    if ((pData == NULL) || (Size == 0U))
 801f420:	68bb      	ldr	r3, [r7, #8]
 801f422:	2b00      	cmp	r3, #0
 801f424:	d002      	beq.n	801f42c <HAL_UART_Receive+0x26>
 801f426:	88fb      	ldrh	r3, [r7, #6]
 801f428:	2b00      	cmp	r3, #0
 801f42a:	d101      	bne.n	801f430 <HAL_UART_Receive+0x2a>
    {
      return  HAL_ERROR;
 801f42c:	2301      	movs	r3, #1
 801f42e:	e0b6      	b.n	801f59e <HAL_UART_Receive+0x198>
    }

    __HAL_LOCK(huart);
 801f430:	68fb      	ldr	r3, [r7, #12]
 801f432:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 801f436:	2b01      	cmp	r3, #1
 801f438:	d101      	bne.n	801f43e <HAL_UART_Receive+0x38>
 801f43a:	2302      	movs	r3, #2
 801f43c:	e0af      	b.n	801f59e <HAL_UART_Receive+0x198>
 801f43e:	68fb      	ldr	r3, [r7, #12]
 801f440:	2201      	movs	r2, #1
 801f442:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 801f446:	68fb      	ldr	r3, [r7, #12]
 801f448:	2200      	movs	r2, #0
 801f44a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 801f44e:	68fb      	ldr	r3, [r7, #12]
 801f450:	2222      	movs	r2, #34	; 0x22
 801f452:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 801f454:	68fb      	ldr	r3, [r7, #12]
 801f456:	2200      	movs	r2, #0
 801f458:	661a      	str	r2, [r3, #96]	; 0x60

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 801f45a:	f7fe fab9 	bl	801d9d0 <HAL_GetTick>
 801f45e:	6178      	str	r0, [r7, #20]

    huart->RxXferSize  = Size;
 801f460:	68fb      	ldr	r3, [r7, #12]
 801f462:	88fa      	ldrh	r2, [r7, #6]
 801f464:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
    huart->RxXferCount = Size;
 801f468:	68fb      	ldr	r3, [r7, #12]
 801f46a:	88fa      	ldrh	r2, [r7, #6]
 801f46c:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

    /* Computation of UART mask to apply to RDR register */
    UART_MASK_COMPUTATION(huart);
 801f470:	68fb      	ldr	r3, [r7, #12]
 801f472:	689b      	ldr	r3, [r3, #8]
 801f474:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801f478:	d10e      	bne.n	801f498 <HAL_UART_Receive+0x92>
 801f47a:	68fb      	ldr	r3, [r7, #12]
 801f47c:	691b      	ldr	r3, [r3, #16]
 801f47e:	2b00      	cmp	r3, #0
 801f480:	d105      	bne.n	801f48e <HAL_UART_Receive+0x88>
 801f482:	68fb      	ldr	r3, [r7, #12]
 801f484:	f240 12ff 	movw	r2, #511	; 0x1ff
 801f488:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 801f48c:	e02d      	b.n	801f4ea <HAL_UART_Receive+0xe4>
 801f48e:	68fb      	ldr	r3, [r7, #12]
 801f490:	22ff      	movs	r2, #255	; 0xff
 801f492:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 801f496:	e028      	b.n	801f4ea <HAL_UART_Receive+0xe4>
 801f498:	68fb      	ldr	r3, [r7, #12]
 801f49a:	689b      	ldr	r3, [r3, #8]
 801f49c:	2b00      	cmp	r3, #0
 801f49e:	d10d      	bne.n	801f4bc <HAL_UART_Receive+0xb6>
 801f4a0:	68fb      	ldr	r3, [r7, #12]
 801f4a2:	691b      	ldr	r3, [r3, #16]
 801f4a4:	2b00      	cmp	r3, #0
 801f4a6:	d104      	bne.n	801f4b2 <HAL_UART_Receive+0xac>
 801f4a8:	68fb      	ldr	r3, [r7, #12]
 801f4aa:	22ff      	movs	r2, #255	; 0xff
 801f4ac:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 801f4b0:	e01b      	b.n	801f4ea <HAL_UART_Receive+0xe4>
 801f4b2:	68fb      	ldr	r3, [r7, #12]
 801f4b4:	227f      	movs	r2, #127	; 0x7f
 801f4b6:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 801f4ba:	e016      	b.n	801f4ea <HAL_UART_Receive+0xe4>
 801f4bc:	68fb      	ldr	r3, [r7, #12]
 801f4be:	689b      	ldr	r3, [r3, #8]
 801f4c0:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 801f4c4:	d10d      	bne.n	801f4e2 <HAL_UART_Receive+0xdc>
 801f4c6:	68fb      	ldr	r3, [r7, #12]
 801f4c8:	691b      	ldr	r3, [r3, #16]
 801f4ca:	2b00      	cmp	r3, #0
 801f4cc:	d104      	bne.n	801f4d8 <HAL_UART_Receive+0xd2>
 801f4ce:	68fb      	ldr	r3, [r7, #12]
 801f4d0:	227f      	movs	r2, #127	; 0x7f
 801f4d2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 801f4d6:	e008      	b.n	801f4ea <HAL_UART_Receive+0xe4>
 801f4d8:	68fb      	ldr	r3, [r7, #12]
 801f4da:	223f      	movs	r2, #63	; 0x3f
 801f4dc:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 801f4e0:	e003      	b.n	801f4ea <HAL_UART_Receive+0xe4>
 801f4e2:	68fb      	ldr	r3, [r7, #12]
 801f4e4:	2200      	movs	r2, #0
 801f4e6:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
    uhMask = huart->Mask;
 801f4ea:	68fb      	ldr	r3, [r7, #12]
 801f4ec:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 801f4f0:	827b      	strh	r3, [r7, #18]

    /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 801f4f2:	68fb      	ldr	r3, [r7, #12]
 801f4f4:	689b      	ldr	r3, [r3, #8]
 801f4f6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801f4fa:	d108      	bne.n	801f50e <HAL_UART_Receive+0x108>
 801f4fc:	68fb      	ldr	r3, [r7, #12]
 801f4fe:	691b      	ldr	r3, [r3, #16]
 801f500:	2b00      	cmp	r3, #0
 801f502:	d104      	bne.n	801f50e <HAL_UART_Receive+0x108>
    {
      pdata8bits  = NULL;
 801f504:	2300      	movs	r3, #0
 801f506:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 801f508:	68bb      	ldr	r3, [r7, #8]
 801f50a:	61bb      	str	r3, [r7, #24]
 801f50c:	e003      	b.n	801f516 <HAL_UART_Receive+0x110>
    }
    else
    {
      pdata8bits  = pData;
 801f50e:	68bb      	ldr	r3, [r7, #8]
 801f510:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 801f512:	2300      	movs	r3, #0
 801f514:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 801f516:	68fb      	ldr	r3, [r7, #12]
 801f518:	2200      	movs	r2, #0
 801f51a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* as long as data have to be received */
    while (huart->RxXferCount > 0U)
 801f51e:	e032      	b.n	801f586 <HAL_UART_Receive+0x180>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 801f520:	683b      	ldr	r3, [r7, #0]
 801f522:	9300      	str	r3, [sp, #0]
 801f524:	697b      	ldr	r3, [r7, #20]
 801f526:	2200      	movs	r2, #0
 801f528:	2120      	movs	r1, #32
 801f52a:	68f8      	ldr	r0, [r7, #12]
 801f52c:	f000 fd7f 	bl	802002e <UART_WaitOnFlagUntilTimeout>
 801f530:	4603      	mov	r3, r0
 801f532:	2b00      	cmp	r3, #0
 801f534:	d001      	beq.n	801f53a <HAL_UART_Receive+0x134>
      {
        return HAL_TIMEOUT;
 801f536:	2303      	movs	r3, #3
 801f538:	e031      	b.n	801f59e <HAL_UART_Receive+0x198>
      }
      if (pdata8bits == NULL)
 801f53a:	69fb      	ldr	r3, [r7, #28]
 801f53c:	2b00      	cmp	r3, #0
 801f53e:	d10c      	bne.n	801f55a <HAL_UART_Receive+0x154>
      {
        *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 801f540:	68fb      	ldr	r3, [r7, #12]
 801f542:	681b      	ldr	r3, [r3, #0]
 801f544:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801f546:	b29a      	uxth	r2, r3
 801f548:	8a7b      	ldrh	r3, [r7, #18]
 801f54a:	4013      	ands	r3, r2
 801f54c:	b29a      	uxth	r2, r3
 801f54e:	69bb      	ldr	r3, [r7, #24]
 801f550:	801a      	strh	r2, [r3, #0]
        pdata16bits++;
 801f552:	69bb      	ldr	r3, [r7, #24]
 801f554:	3302      	adds	r3, #2
 801f556:	61bb      	str	r3, [r7, #24]
 801f558:	e00c      	b.n	801f574 <HAL_UART_Receive+0x16e>
      }
      else
      {
        *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 801f55a:	68fb      	ldr	r3, [r7, #12]
 801f55c:	681b      	ldr	r3, [r3, #0]
 801f55e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801f560:	b2da      	uxtb	r2, r3
 801f562:	8a7b      	ldrh	r3, [r7, #18]
 801f564:	b2db      	uxtb	r3, r3
 801f566:	4013      	ands	r3, r2
 801f568:	b2da      	uxtb	r2, r3
 801f56a:	69fb      	ldr	r3, [r7, #28]
 801f56c:	701a      	strb	r2, [r3, #0]
        pdata8bits++;
 801f56e:	69fb      	ldr	r3, [r7, #28]
 801f570:	3301      	adds	r3, #1
 801f572:	61fb      	str	r3, [r7, #28]
      }
      huart->RxXferCount--;
 801f574:	68fb      	ldr	r3, [r7, #12]
 801f576:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 801f57a:	b29b      	uxth	r3, r3
 801f57c:	3b01      	subs	r3, #1
 801f57e:	b29a      	uxth	r2, r3
 801f580:	68fb      	ldr	r3, [r7, #12]
 801f582:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
    while (huart->RxXferCount > 0U)
 801f586:	68fb      	ldr	r3, [r7, #12]
 801f588:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 801f58c:	b29b      	uxth	r3, r3
 801f58e:	2b00      	cmp	r3, #0
 801f590:	d1c6      	bne.n	801f520 <HAL_UART_Receive+0x11a>
    }

    /* At end of Rx process, restore huart->RxState to Ready */
    huart->RxState = HAL_UART_STATE_READY;
 801f592:	68fb      	ldr	r3, [r7, #12]
 801f594:	2220      	movs	r2, #32
 801f596:	67da      	str	r2, [r3, #124]	; 0x7c

    return HAL_OK;
 801f598:	2300      	movs	r3, #0
 801f59a:	e000      	b.n	801f59e <HAL_UART_Receive+0x198>
  }
  else
  {
    return HAL_BUSY;
 801f59c:	2302      	movs	r3, #2
  }
}
 801f59e:	4618      	mov	r0, r3
 801f5a0:	3720      	adds	r7, #32
 801f5a2:	46bd      	mov	sp, r7
 801f5a4:	bd80      	pop	{r7, pc}
	...

0801f5a8 <HAL_UART_IRQHandler>:
  * @brief Handle UART interrupt request.
  * @param huart UART handle.
  * @retval None
  */
void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
{
 801f5a8:	b580      	push	{r7, lr}
 801f5aa:	b088      	sub	sp, #32
 801f5ac:	af00      	add	r7, sp, #0
 801f5ae:	6078      	str	r0, [r7, #4]
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 801f5b0:	687b      	ldr	r3, [r7, #4]
 801f5b2:	681b      	ldr	r3, [r3, #0]
 801f5b4:	69db      	ldr	r3, [r3, #28]
 801f5b6:	61fb      	str	r3, [r7, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 801f5b8:	687b      	ldr	r3, [r7, #4]
 801f5ba:	681b      	ldr	r3, [r3, #0]
 801f5bc:	681b      	ldr	r3, [r3, #0]
 801f5be:	61bb      	str	r3, [r7, #24]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 801f5c0:	687b      	ldr	r3, [r7, #4]
 801f5c2:	681b      	ldr	r3, [r3, #0]
 801f5c4:	689b      	ldr	r3, [r3, #8]
 801f5c6:	617b      	str	r3, [r7, #20]

  uint32_t errorflags;
  uint32_t errorcode;

  /* If no error occurs */
  errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | USART_ISR_RTOF));
 801f5c8:	69fa      	ldr	r2, [r7, #28]
 801f5ca:	f640 030f 	movw	r3, #2063	; 0x80f
 801f5ce:	4013      	ands	r3, r2
 801f5d0:	613b      	str	r3, [r7, #16]
  if (errorflags == 0U)
 801f5d2:	693b      	ldr	r3, [r7, #16]
 801f5d4:	2b00      	cmp	r3, #0
 801f5d6:	d113      	bne.n	801f600 <HAL_UART_IRQHandler+0x58>
  {
    /* UART in mode Receiver ---------------------------------------------------*/
    if (((isrflags & USART_ISR_RXNE) != 0U)
 801f5d8:	69fb      	ldr	r3, [r7, #28]
 801f5da:	f003 0320 	and.w	r3, r3, #32
 801f5de:	2b00      	cmp	r3, #0
 801f5e0:	d00e      	beq.n	801f600 <HAL_UART_IRQHandler+0x58>
        && ((cr1its & USART_CR1_RXNEIE) != 0U))
 801f5e2:	69bb      	ldr	r3, [r7, #24]
 801f5e4:	f003 0320 	and.w	r3, r3, #32
 801f5e8:	2b00      	cmp	r3, #0
 801f5ea:	d009      	beq.n	801f600 <HAL_UART_IRQHandler+0x58>
    {
      if (huart->RxISR != NULL)
 801f5ec:	687b      	ldr	r3, [r7, #4]
 801f5ee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801f5f0:	2b00      	cmp	r3, #0
 801f5f2:	f000 81b9 	beq.w	801f968 <HAL_UART_IRQHandler+0x3c0>
      {
        huart->RxISR(huart);
 801f5f6:	687b      	ldr	r3, [r7, #4]
 801f5f8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801f5fa:	6878      	ldr	r0, [r7, #4]
 801f5fc:	4798      	blx	r3
      }
      return;
 801f5fe:	e1b3      	b.n	801f968 <HAL_UART_IRQHandler+0x3c0>
    }
  }

  /* If some errors occur */
  if ((errorflags != 0U)
 801f600:	693b      	ldr	r3, [r7, #16]
 801f602:	2b00      	cmp	r3, #0
 801f604:	f000 80e3 	beq.w	801f7ce <HAL_UART_IRQHandler+0x226>
      && (((cr3its & USART_CR3_EIE) != 0U)
 801f608:	697b      	ldr	r3, [r7, #20]
 801f60a:	f003 0301 	and.w	r3, r3, #1
 801f60e:	2b00      	cmp	r3, #0
 801f610:	d105      	bne.n	801f61e <HAL_UART_IRQHandler+0x76>
          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U)))
 801f612:	69ba      	ldr	r2, [r7, #24]
 801f614:	4ba5      	ldr	r3, [pc, #660]	; (801f8ac <HAL_UART_IRQHandler+0x304>)
 801f616:	4013      	ands	r3, r2
 801f618:	2b00      	cmp	r3, #0
 801f61a:	f000 80d8 	beq.w	801f7ce <HAL_UART_IRQHandler+0x226>
  {
    /* UART parity error interrupt occurred -------------------------------------*/
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 801f61e:	69fb      	ldr	r3, [r7, #28]
 801f620:	f003 0301 	and.w	r3, r3, #1
 801f624:	2b00      	cmp	r3, #0
 801f626:	d010      	beq.n	801f64a <HAL_UART_IRQHandler+0xa2>
 801f628:	69bb      	ldr	r3, [r7, #24]
 801f62a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801f62e:	2b00      	cmp	r3, #0
 801f630:	d00b      	beq.n	801f64a <HAL_UART_IRQHandler+0xa2>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 801f632:	687b      	ldr	r3, [r7, #4]
 801f634:	681b      	ldr	r3, [r3, #0]
 801f636:	2201      	movs	r2, #1
 801f638:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_PE;
 801f63a:	687b      	ldr	r3, [r7, #4]
 801f63c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801f640:	f043 0201 	orr.w	r2, r3, #1
 801f644:	687b      	ldr	r3, [r7, #4]
 801f646:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART frame error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 801f64a:	69fb      	ldr	r3, [r7, #28]
 801f64c:	f003 0302 	and.w	r3, r3, #2
 801f650:	2b00      	cmp	r3, #0
 801f652:	d010      	beq.n	801f676 <HAL_UART_IRQHandler+0xce>
 801f654:	697b      	ldr	r3, [r7, #20]
 801f656:	f003 0301 	and.w	r3, r3, #1
 801f65a:	2b00      	cmp	r3, #0
 801f65c:	d00b      	beq.n	801f676 <HAL_UART_IRQHandler+0xce>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 801f65e:	687b      	ldr	r3, [r7, #4]
 801f660:	681b      	ldr	r3, [r3, #0]
 801f662:	2202      	movs	r2, #2
 801f664:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_FE;
 801f666:	687b      	ldr	r3, [r7, #4]
 801f668:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801f66c:	f043 0204 	orr.w	r2, r3, #4
 801f670:	687b      	ldr	r3, [r7, #4]
 801f672:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART noise error interrupt occurred --------------------------------------*/
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 801f676:	69fb      	ldr	r3, [r7, #28]
 801f678:	f003 0304 	and.w	r3, r3, #4
 801f67c:	2b00      	cmp	r3, #0
 801f67e:	d010      	beq.n	801f6a2 <HAL_UART_IRQHandler+0xfa>
 801f680:	697b      	ldr	r3, [r7, #20]
 801f682:	f003 0301 	and.w	r3, r3, #1
 801f686:	2b00      	cmp	r3, #0
 801f688:	d00b      	beq.n	801f6a2 <HAL_UART_IRQHandler+0xfa>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 801f68a:	687b      	ldr	r3, [r7, #4]
 801f68c:	681b      	ldr	r3, [r3, #0]
 801f68e:	2204      	movs	r2, #4
 801f690:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_NE;
 801f692:	687b      	ldr	r3, [r7, #4]
 801f694:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801f698:	f043 0202 	orr.w	r2, r3, #2
 801f69c:	687b      	ldr	r3, [r7, #4]
 801f69e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Over-Run interrupt occurred -----------------------------------------*/
    if (((isrflags & USART_ISR_ORE) != 0U)
 801f6a2:	69fb      	ldr	r3, [r7, #28]
 801f6a4:	f003 0308 	and.w	r3, r3, #8
 801f6a8:	2b00      	cmp	r3, #0
 801f6aa:	d015      	beq.n	801f6d8 <HAL_UART_IRQHandler+0x130>
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 801f6ac:	69bb      	ldr	r3, [r7, #24]
 801f6ae:	f003 0320 	and.w	r3, r3, #32
 801f6b2:	2b00      	cmp	r3, #0
 801f6b4:	d104      	bne.n	801f6c0 <HAL_UART_IRQHandler+0x118>
            ((cr3its & USART_CR3_EIE) != 0U)))
 801f6b6:	697b      	ldr	r3, [r7, #20]
 801f6b8:	f003 0301 	and.w	r3, r3, #1
        && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 801f6bc:	2b00      	cmp	r3, #0
 801f6be:	d00b      	beq.n	801f6d8 <HAL_UART_IRQHandler+0x130>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 801f6c0:	687b      	ldr	r3, [r7, #4]
 801f6c2:	681b      	ldr	r3, [r3, #0]
 801f6c4:	2208      	movs	r2, #8
 801f6c6:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 801f6c8:	687b      	ldr	r3, [r7, #4]
 801f6ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801f6ce:	f043 0208 	orr.w	r2, r3, #8
 801f6d2:	687b      	ldr	r3, [r7, #4]
 801f6d4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* UART Receiver Timeout interrupt occurred ---------------------------------*/
    if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 801f6d8:	69fb      	ldr	r3, [r7, #28]
 801f6da:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 801f6de:	2b00      	cmp	r3, #0
 801f6e0:	d011      	beq.n	801f706 <HAL_UART_IRQHandler+0x15e>
 801f6e2:	69bb      	ldr	r3, [r7, #24]
 801f6e4:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 801f6e8:	2b00      	cmp	r3, #0
 801f6ea:	d00c      	beq.n	801f706 <HAL_UART_IRQHandler+0x15e>
    {
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 801f6ec:	687b      	ldr	r3, [r7, #4]
 801f6ee:	681b      	ldr	r3, [r3, #0]
 801f6f0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 801f6f4:	621a      	str	r2, [r3, #32]

      huart->ErrorCode |= HAL_UART_ERROR_RTO;
 801f6f6:	687b      	ldr	r3, [r7, #4]
 801f6f8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801f6fc:	f043 0220 	orr.w	r2, r3, #32
 801f700:	687b      	ldr	r3, [r7, #4]
 801f702:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }

    /* Call UART Error Call back function if need be ----------------------------*/
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 801f706:	687b      	ldr	r3, [r7, #4]
 801f708:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801f70c:	2b00      	cmp	r3, #0
 801f70e:	f000 812d 	beq.w	801f96c <HAL_UART_IRQHandler+0x3c4>
    {
      /* UART in mode Receiver --------------------------------------------------*/
      if (((isrflags & USART_ISR_RXNE) != 0U)
 801f712:	69fb      	ldr	r3, [r7, #28]
 801f714:	f003 0320 	and.w	r3, r3, #32
 801f718:	2b00      	cmp	r3, #0
 801f71a:	d00c      	beq.n	801f736 <HAL_UART_IRQHandler+0x18e>
          && ((cr1its & USART_CR1_RXNEIE) != 0U))
 801f71c:	69bb      	ldr	r3, [r7, #24]
 801f71e:	f003 0320 	and.w	r3, r3, #32
 801f722:	2b00      	cmp	r3, #0
 801f724:	d007      	beq.n	801f736 <HAL_UART_IRQHandler+0x18e>
      {
        if (huart->RxISR != NULL)
 801f726:	687b      	ldr	r3, [r7, #4]
 801f728:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801f72a:	2b00      	cmp	r3, #0
 801f72c:	d003      	beq.n	801f736 <HAL_UART_IRQHandler+0x18e>
        {
          huart->RxISR(huart);
 801f72e:	687b      	ldr	r3, [r7, #4]
 801f730:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801f732:	6878      	ldr	r0, [r7, #4]
 801f734:	4798      	blx	r3
      /* If Error is to be considered as blocking :
          - Receiver Timeout error in Reception
          - Overrun error in Reception
          - any error occurs in DMA mode reception
      */
      errorcode = huart->ErrorCode;
 801f736:	687b      	ldr	r3, [r7, #4]
 801f738:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801f73c:	60fb      	str	r3, [r7, #12]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 801f73e:	687b      	ldr	r3, [r7, #4]
 801f740:	681b      	ldr	r3, [r3, #0]
 801f742:	689b      	ldr	r3, [r3, #8]
 801f744:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801f748:	2b40      	cmp	r3, #64	; 0x40
 801f74a:	d004      	beq.n	801f756 <HAL_UART_IRQHandler+0x1ae>
          ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 801f74c:	68fb      	ldr	r3, [r7, #12]
 801f74e:	f003 0328 	and.w	r3, r3, #40	; 0x28
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 801f752:	2b00      	cmp	r3, #0
 801f754:	d031      	beq.n	801f7ba <HAL_UART_IRQHandler+0x212>
      {
        /* Blocking error : transfer is aborted
           Set the UART state ready to be able to start again the process,
           Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
        UART_EndRxTransfer(huart);
 801f756:	6878      	ldr	r0, [r7, #4]
 801f758:	f000 fce5 	bl	8020126 <UART_EndRxTransfer>

        /* Disable the UART DMA Rx request if enabled */
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 801f75c:	687b      	ldr	r3, [r7, #4]
 801f75e:	681b      	ldr	r3, [r3, #0]
 801f760:	689b      	ldr	r3, [r3, #8]
 801f762:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801f766:	2b40      	cmp	r3, #64	; 0x40
 801f768:	d123      	bne.n	801f7b2 <HAL_UART_IRQHandler+0x20a>
        {
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 801f76a:	687b      	ldr	r3, [r7, #4]
 801f76c:	681b      	ldr	r3, [r3, #0]
 801f76e:	689a      	ldr	r2, [r3, #8]
 801f770:	687b      	ldr	r3, [r7, #4]
 801f772:	681b      	ldr	r3, [r3, #0]
 801f774:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 801f778:	609a      	str	r2, [r3, #8]

          /* Abort the UART DMA Rx channel */
          if (huart->hdmarx != NULL)
 801f77a:	687b      	ldr	r3, [r7, #4]
 801f77c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801f77e:	2b00      	cmp	r3, #0
 801f780:	d013      	beq.n	801f7aa <HAL_UART_IRQHandler+0x202>
          {
            /* Set the UART DMA Abort callback :
               will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 801f782:	687b      	ldr	r3, [r7, #4]
 801f784:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801f786:	4a4a      	ldr	r2, [pc, #296]	; (801f8b0 <HAL_UART_IRQHandler+0x308>)
 801f788:	651a      	str	r2, [r3, #80]	; 0x50

            /* Abort DMA RX */
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 801f78a:	687b      	ldr	r3, [r7, #4]
 801f78c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801f78e:	4618      	mov	r0, r3
 801f790:	f7fe facf 	bl	801dd32 <HAL_DMA_Abort_IT>
 801f794:	4603      	mov	r3, r0
 801f796:	2b00      	cmp	r3, #0
 801f798:	d017      	beq.n	801f7ca <HAL_UART_IRQHandler+0x222>
            {
              /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 801f79a:	687b      	ldr	r3, [r7, #4]
 801f79c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801f79e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801f7a0:	687a      	ldr	r2, [r7, #4]
 801f7a2:	6f12      	ldr	r2, [r2, #112]	; 0x70
 801f7a4:	4610      	mov	r0, r2
 801f7a6:	4798      	blx	r3
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 801f7a8:	e00f      	b.n	801f7ca <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
            /*Call registered error callback*/
            huart->ErrorCallback(huart);
#else
            /*Call legacy weak error callback*/
            HAL_UART_ErrorCallback(huart);
 801f7aa:	6878      	ldr	r0, [r7, #4]
 801f7ac:	f000 f8f2 	bl	801f994 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 801f7b0:	e00b      	b.n	801f7ca <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
          /*Call registered error callback*/
          huart->ErrorCallback(huart);
#else
          /*Call legacy weak error callback*/
          HAL_UART_ErrorCallback(huart);
 801f7b2:	6878      	ldr	r0, [r7, #4]
 801f7b4:	f000 f8ee 	bl	801f994 <HAL_UART_ErrorCallback>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 801f7b8:	e007      	b.n	801f7ca <HAL_UART_IRQHandler+0x222>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered error callback*/
        huart->ErrorCallback(huart);
#else
        /*Call legacy weak error callback*/
        HAL_UART_ErrorCallback(huart);
 801f7ba:	6878      	ldr	r0, [r7, #4]
 801f7bc:	f000 f8ea 	bl	801f994 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 801f7c0:	687b      	ldr	r3, [r7, #4]
 801f7c2:	2200      	movs	r2, #0
 801f7c4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
      }
    }
    return;
 801f7c8:	e0d0      	b.n	801f96c <HAL_UART_IRQHandler+0x3c4>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 801f7ca:	bf00      	nop
    return;
 801f7cc:	e0ce      	b.n	801f96c <HAL_UART_IRQHandler+0x3c4>

  } /* End if some error occurs */

  /* Check current reception Mode :
     If Reception till IDLE event has been selected : */
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 801f7ce:	687b      	ldr	r3, [r7, #4]
 801f7d0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801f7d2:	2b01      	cmp	r3, #1
 801f7d4:	f040 80a7 	bne.w	801f926 <HAL_UART_IRQHandler+0x37e>
      && ((isrflags & USART_ISR_IDLE) != 0U)
 801f7d8:	69fb      	ldr	r3, [r7, #28]
 801f7da:	f003 0310 	and.w	r3, r3, #16
 801f7de:	2b00      	cmp	r3, #0
 801f7e0:	f000 80a1 	beq.w	801f926 <HAL_UART_IRQHandler+0x37e>
      && ((cr1its & USART_ISR_IDLE) != 0U))
 801f7e4:	69bb      	ldr	r3, [r7, #24]
 801f7e6:	f003 0310 	and.w	r3, r3, #16
 801f7ea:	2b00      	cmp	r3, #0
 801f7ec:	f000 809b 	beq.w	801f926 <HAL_UART_IRQHandler+0x37e>
  {
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 801f7f0:	687b      	ldr	r3, [r7, #4]
 801f7f2:	681b      	ldr	r3, [r3, #0]
 801f7f4:	2210      	movs	r2, #16
 801f7f6:	621a      	str	r2, [r3, #32]

    /* Check if DMA mode is enabled in UART */
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 801f7f8:	687b      	ldr	r3, [r7, #4]
 801f7fa:	681b      	ldr	r3, [r3, #0]
 801f7fc:	689b      	ldr	r3, [r3, #8]
 801f7fe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801f802:	2b40      	cmp	r3, #64	; 0x40
 801f804:	d156      	bne.n	801f8b4 <HAL_UART_IRQHandler+0x30c>
    {
      /* DMA mode enabled */
      /* Check received length : If all expected data are received, do nothing,
         (DMA cplt callback will be called).
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 801f806:	687b      	ldr	r3, [r7, #4]
 801f808:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801f80a:	681b      	ldr	r3, [r3, #0]
 801f80c:	685b      	ldr	r3, [r3, #4]
 801f80e:	813b      	strh	r3, [r7, #8]
      if ((nb_remaining_rx_data > 0U)
 801f810:	893b      	ldrh	r3, [r7, #8]
 801f812:	2b00      	cmp	r3, #0
 801f814:	f000 80ac 	beq.w	801f970 <HAL_UART_IRQHandler+0x3c8>
          && (nb_remaining_rx_data < huart->RxXferSize))
 801f818:	687b      	ldr	r3, [r7, #4]
 801f81a:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 801f81e:	893a      	ldrh	r2, [r7, #8]
 801f820:	429a      	cmp	r2, r3
 801f822:	f080 80a5 	bcs.w	801f970 <HAL_UART_IRQHandler+0x3c8>
      {
        /* Reception is not complete */
        huart->RxXferCount = nb_remaining_rx_data;
 801f826:	687b      	ldr	r3, [r7, #4]
 801f828:	893a      	ldrh	r2, [r7, #8]
 801f82a:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a

        /* In Normal mode, end DMA xfer and HAL UART Rx process*/
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 801f82e:	687b      	ldr	r3, [r7, #4]
 801f830:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801f832:	69db      	ldr	r3, [r3, #28]
 801f834:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801f838:	d02a      	beq.n	801f890 <HAL_UART_IRQHandler+0x2e8>
        {
          /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
          CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 801f83a:	687b      	ldr	r3, [r7, #4]
 801f83c:	681b      	ldr	r3, [r3, #0]
 801f83e:	681a      	ldr	r2, [r3, #0]
 801f840:	687b      	ldr	r3, [r7, #4]
 801f842:	681b      	ldr	r3, [r3, #0]
 801f844:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 801f848:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 801f84a:	687b      	ldr	r3, [r7, #4]
 801f84c:	681b      	ldr	r3, [r3, #0]
 801f84e:	689a      	ldr	r2, [r3, #8]
 801f850:	687b      	ldr	r3, [r7, #4]
 801f852:	681b      	ldr	r3, [r3, #0]
 801f854:	f022 0201 	bic.w	r2, r2, #1
 801f858:	609a      	str	r2, [r3, #8]

          /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
             in the UART CR3 register */
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 801f85a:	687b      	ldr	r3, [r7, #4]
 801f85c:	681b      	ldr	r3, [r3, #0]
 801f85e:	689a      	ldr	r2, [r3, #8]
 801f860:	687b      	ldr	r3, [r7, #4]
 801f862:	681b      	ldr	r3, [r3, #0]
 801f864:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 801f868:	609a      	str	r2, [r3, #8]

          /* At end of Rx process, restore huart->RxState to Ready */
          huart->RxState = HAL_UART_STATE_READY;
 801f86a:	687b      	ldr	r3, [r7, #4]
 801f86c:	2220      	movs	r2, #32
 801f86e:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 801f870:	687b      	ldr	r3, [r7, #4]
 801f872:	2200      	movs	r2, #0
 801f874:	661a      	str	r2, [r3, #96]	; 0x60

          CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 801f876:	687b      	ldr	r3, [r7, #4]
 801f878:	681b      	ldr	r3, [r3, #0]
 801f87a:	681a      	ldr	r2, [r3, #0]
 801f87c:	687b      	ldr	r3, [r7, #4]
 801f87e:	681b      	ldr	r3, [r3, #0]
 801f880:	f022 0210 	bic.w	r2, r2, #16
 801f884:	601a      	str	r2, [r3, #0]

          /* Last bytes received, so no need as the abort is immediate */
          (void)HAL_DMA_Abort(huart->hdmarx);
 801f886:	687b      	ldr	r3, [r7, #4]
 801f888:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801f88a:	4618      	mov	r0, r3
 801f88c:	f7fe f9e1 	bl	801dc52 <HAL_DMA_Abort>
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx Event callback*/
        huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 801f890:	687b      	ldr	r3, [r7, #4]
 801f892:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 801f896:	687b      	ldr	r3, [r7, #4]
 801f898:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 801f89c:	b29b      	uxth	r3, r3
 801f89e:	1ad3      	subs	r3, r2, r3
 801f8a0:	b29b      	uxth	r3, r3
 801f8a2:	4619      	mov	r1, r3
 801f8a4:	6878      	ldr	r0, [r7, #4]
 801f8a6:	f000 f87f 	bl	801f9a8 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 801f8aa:	e061      	b.n	801f970 <HAL_UART_IRQHandler+0x3c8>
 801f8ac:	04000120 	.word	0x04000120
 801f8b0:	08020185 	.word	0x08020185
    else
    {
      /* DMA mode not enabled */
      /* Check received length : If all expected data are received, do nothing.
         Otherwise, if at least one data has already been received, IDLE event is to be notified to user */
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 801f8b4:	687b      	ldr	r3, [r7, #4]
 801f8b6:	f8b3 2058 	ldrh.w	r2, [r3, #88]	; 0x58
 801f8ba:	687b      	ldr	r3, [r7, #4]
 801f8bc:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 801f8c0:	b29b      	uxth	r3, r3
 801f8c2:	1ad3      	subs	r3, r2, r3
 801f8c4:	817b      	strh	r3, [r7, #10]
      if ((huart->RxXferCount > 0U)
 801f8c6:	687b      	ldr	r3, [r7, #4]
 801f8c8:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 801f8cc:	b29b      	uxth	r3, r3
 801f8ce:	2b00      	cmp	r3, #0
 801f8d0:	d050      	beq.n	801f974 <HAL_UART_IRQHandler+0x3cc>
          && (nb_rx_data > 0U))
 801f8d2:	897b      	ldrh	r3, [r7, #10]
 801f8d4:	2b00      	cmp	r3, #0
 801f8d6:	d04d      	beq.n	801f974 <HAL_UART_IRQHandler+0x3cc>
      {
        /* Disable the UART Parity Error Interrupt and RXNE interrupts */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 801f8d8:	687b      	ldr	r3, [r7, #4]
 801f8da:	681b      	ldr	r3, [r3, #0]
 801f8dc:	681a      	ldr	r2, [r3, #0]
 801f8de:	687b      	ldr	r3, [r7, #4]
 801f8e0:	681b      	ldr	r3, [r3, #0]
 801f8e2:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 801f8e6:	601a      	str	r2, [r3, #0]

        /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 801f8e8:	687b      	ldr	r3, [r7, #4]
 801f8ea:	681b      	ldr	r3, [r3, #0]
 801f8ec:	689a      	ldr	r2, [r3, #8]
 801f8ee:	687b      	ldr	r3, [r7, #4]
 801f8f0:	681b      	ldr	r3, [r3, #0]
 801f8f2:	f022 0201 	bic.w	r2, r2, #1
 801f8f6:	609a      	str	r2, [r3, #8]

        /* Rx process is completed, restore huart->RxState to Ready */
        huart->RxState = HAL_UART_STATE_READY;
 801f8f8:	687b      	ldr	r3, [r7, #4]
 801f8fa:	2220      	movs	r2, #32
 801f8fc:	67da      	str	r2, [r3, #124]	; 0x7c
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 801f8fe:	687b      	ldr	r3, [r7, #4]
 801f900:	2200      	movs	r2, #0
 801f902:	661a      	str	r2, [r3, #96]	; 0x60

        /* Clear RxISR function pointer */
        huart->RxISR = NULL;
 801f904:	687b      	ldr	r3, [r7, #4]
 801f906:	2200      	movs	r2, #0
 801f908:	665a      	str	r2, [r3, #100]	; 0x64

        CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 801f90a:	687b      	ldr	r3, [r7, #4]
 801f90c:	681b      	ldr	r3, [r3, #0]
 801f90e:	681a      	ldr	r2, [r3, #0]
 801f910:	687b      	ldr	r3, [r7, #4]
 801f912:	681b      	ldr	r3, [r3, #0]
 801f914:	f022 0210 	bic.w	r2, r2, #16
 801f918:	601a      	str	r2, [r3, #0]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
        /*Call registered Rx complete callback*/
        huart->RxEventCallback(huart, nb_rx_data);
#else
        /*Call legacy weak Rx Event callback*/
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 801f91a:	897b      	ldrh	r3, [r7, #10]
 801f91c:	4619      	mov	r1, r3
 801f91e:	6878      	ldr	r0, [r7, #4]
 801f920:	f000 f842 	bl	801f9a8 <HAL_UARTEx_RxEventCallback>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
      }
      return;
 801f924:	e026      	b.n	801f974 <HAL_UART_IRQHandler+0x3cc>
  }
#endif /* USART_CR3_WUFIE */
#endif /* USART_CR1_UESM */

  /* UART in mode Transmitter ------------------------------------------------*/
  if (((isrflags & USART_ISR_TXE) != 0U)
 801f926:	69fb      	ldr	r3, [r7, #28]
 801f928:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801f92c:	2b00      	cmp	r3, #0
 801f92e:	d00d      	beq.n	801f94c <HAL_UART_IRQHandler+0x3a4>
      && ((cr1its & USART_CR1_TXEIE) != 0U))
 801f930:	69bb      	ldr	r3, [r7, #24]
 801f932:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801f936:	2b00      	cmp	r3, #0
 801f938:	d008      	beq.n	801f94c <HAL_UART_IRQHandler+0x3a4>
  {
    if (huart->TxISR != NULL)
 801f93a:	687b      	ldr	r3, [r7, #4]
 801f93c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801f93e:	2b00      	cmp	r3, #0
 801f940:	d01a      	beq.n	801f978 <HAL_UART_IRQHandler+0x3d0>
    {
      huart->TxISR(huart);
 801f942:	687b      	ldr	r3, [r7, #4]
 801f944:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801f946:	6878      	ldr	r0, [r7, #4]
 801f948:	4798      	blx	r3
    }
    return;
 801f94a:	e015      	b.n	801f978 <HAL_UART_IRQHandler+0x3d0>
  }

  /* UART in mode Transmitter (transmission end) -----------------------------*/
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 801f94c:	69fb      	ldr	r3, [r7, #28]
 801f94e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801f952:	2b00      	cmp	r3, #0
 801f954:	d011      	beq.n	801f97a <HAL_UART_IRQHandler+0x3d2>
 801f956:	69bb      	ldr	r3, [r7, #24]
 801f958:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801f95c:	2b00      	cmp	r3, #0
 801f95e:	d00c      	beq.n	801f97a <HAL_UART_IRQHandler+0x3d2>
  {
    UART_EndTransmit_IT(huart);
 801f960:	6878      	ldr	r0, [r7, #4]
 801f962:	f000 fc25 	bl	80201b0 <UART_EndTransmit_IT>
    return;
 801f966:	e008      	b.n	801f97a <HAL_UART_IRQHandler+0x3d2>
      return;
 801f968:	bf00      	nop
 801f96a:	e006      	b.n	801f97a <HAL_UART_IRQHandler+0x3d2>
    return;
 801f96c:	bf00      	nop
 801f96e:	e004      	b.n	801f97a <HAL_UART_IRQHandler+0x3d2>
      return;
 801f970:	bf00      	nop
 801f972:	e002      	b.n	801f97a <HAL_UART_IRQHandler+0x3d2>
      return;
 801f974:	bf00      	nop
 801f976:	e000      	b.n	801f97a <HAL_UART_IRQHandler+0x3d2>
    return;
 801f978:	bf00      	nop
  }

}
 801f97a:	3720      	adds	r7, #32
 801f97c:	46bd      	mov	sp, r7
 801f97e:	bd80      	pop	{r7, pc}

0801f980 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 801f980:	b480      	push	{r7}
 801f982:	b083      	sub	sp, #12
 801f984:	af00      	add	r7, sp, #0
 801f986:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 801f988:	bf00      	nop
 801f98a:	370c      	adds	r7, #12
 801f98c:	46bd      	mov	sp, r7
 801f98e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f992:	4770      	bx	lr

0801f994 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 801f994:	b480      	push	{r7}
 801f996:	b083      	sub	sp, #12
 801f998:	af00      	add	r7, sp, #0
 801f99a:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 801f99c:	bf00      	nop
 801f99e:	370c      	adds	r7, #12
 801f9a0:	46bd      	mov	sp, r7
 801f9a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f9a6:	4770      	bx	lr

0801f9a8 <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 801f9a8:	b480      	push	{r7}
 801f9aa:	b083      	sub	sp, #12
 801f9ac:	af00      	add	r7, sp, #0
 801f9ae:	6078      	str	r0, [r7, #4]
 801f9b0:	460b      	mov	r3, r1
 801f9b2:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 801f9b4:	bf00      	nop
 801f9b6:	370c      	adds	r7, #12
 801f9b8:	46bd      	mov	sp, r7
 801f9ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 801f9be:	4770      	bx	lr

0801f9c0 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 801f9c0:	b580      	push	{r7, lr}
 801f9c2:	b088      	sub	sp, #32
 801f9c4:	af00      	add	r7, sp, #0
 801f9c6:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 801f9c8:	2300      	movs	r3, #0
 801f9ca:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 801f9cc:	687b      	ldr	r3, [r7, #4]
 801f9ce:	689a      	ldr	r2, [r3, #8]
 801f9d0:	687b      	ldr	r3, [r7, #4]
 801f9d2:	691b      	ldr	r3, [r3, #16]
 801f9d4:	431a      	orrs	r2, r3
 801f9d6:	687b      	ldr	r3, [r7, #4]
 801f9d8:	695b      	ldr	r3, [r3, #20]
 801f9da:	431a      	orrs	r2, r3
 801f9dc:	687b      	ldr	r3, [r7, #4]
 801f9de:	69db      	ldr	r3, [r3, #28]
 801f9e0:	4313      	orrs	r3, r2
 801f9e2:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 801f9e4:	687b      	ldr	r3, [r7, #4]
 801f9e6:	681b      	ldr	r3, [r3, #0]
 801f9e8:	681a      	ldr	r2, [r3, #0]
 801f9ea:	4ba7      	ldr	r3, [pc, #668]	; (801fc88 <UART_SetConfig+0x2c8>)
 801f9ec:	4013      	ands	r3, r2
 801f9ee:	687a      	ldr	r2, [r7, #4]
 801f9f0:	6812      	ldr	r2, [r2, #0]
 801f9f2:	6979      	ldr	r1, [r7, #20]
 801f9f4:	430b      	orrs	r3, r1
 801f9f6:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 801f9f8:	687b      	ldr	r3, [r7, #4]
 801f9fa:	681b      	ldr	r3, [r3, #0]
 801f9fc:	685b      	ldr	r3, [r3, #4]
 801f9fe:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 801fa02:	687b      	ldr	r3, [r7, #4]
 801fa04:	68da      	ldr	r2, [r3, #12]
 801fa06:	687b      	ldr	r3, [r7, #4]
 801fa08:	681b      	ldr	r3, [r3, #0]
 801fa0a:	430a      	orrs	r2, r1
 801fa0c:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 801fa0e:	687b      	ldr	r3, [r7, #4]
 801fa10:	699b      	ldr	r3, [r3, #24]
 801fa12:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 801fa14:	687b      	ldr	r3, [r7, #4]
 801fa16:	6a1b      	ldr	r3, [r3, #32]
 801fa18:	697a      	ldr	r2, [r7, #20]
 801fa1a:	4313      	orrs	r3, r2
 801fa1c:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 801fa1e:	687b      	ldr	r3, [r7, #4]
 801fa20:	681b      	ldr	r3, [r3, #0]
 801fa22:	689b      	ldr	r3, [r3, #8]
 801fa24:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 801fa28:	687b      	ldr	r3, [r7, #4]
 801fa2a:	681b      	ldr	r3, [r3, #0]
 801fa2c:	697a      	ldr	r2, [r7, #20]
 801fa2e:	430a      	orrs	r2, r1
 801fa30:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 801fa32:	687b      	ldr	r3, [r7, #4]
 801fa34:	681b      	ldr	r3, [r3, #0]
 801fa36:	4a95      	ldr	r2, [pc, #596]	; (801fc8c <UART_SetConfig+0x2cc>)
 801fa38:	4293      	cmp	r3, r2
 801fa3a:	d120      	bne.n	801fa7e <UART_SetConfig+0xbe>
 801fa3c:	4b94      	ldr	r3, [pc, #592]	; (801fc90 <UART_SetConfig+0x2d0>)
 801fa3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801fa42:	f003 0303 	and.w	r3, r3, #3
 801fa46:	2b03      	cmp	r3, #3
 801fa48:	d816      	bhi.n	801fa78 <UART_SetConfig+0xb8>
 801fa4a:	a201      	add	r2, pc, #4	; (adr r2, 801fa50 <UART_SetConfig+0x90>)
 801fa4c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801fa50:	0801fa61 	.word	0x0801fa61
 801fa54:	0801fa6d 	.word	0x0801fa6d
 801fa58:	0801fa67 	.word	0x0801fa67
 801fa5c:	0801fa73 	.word	0x0801fa73
 801fa60:	2301      	movs	r3, #1
 801fa62:	77fb      	strb	r3, [r7, #31]
 801fa64:	e14f      	b.n	801fd06 <UART_SetConfig+0x346>
 801fa66:	2302      	movs	r3, #2
 801fa68:	77fb      	strb	r3, [r7, #31]
 801fa6a:	e14c      	b.n	801fd06 <UART_SetConfig+0x346>
 801fa6c:	2304      	movs	r3, #4
 801fa6e:	77fb      	strb	r3, [r7, #31]
 801fa70:	e149      	b.n	801fd06 <UART_SetConfig+0x346>
 801fa72:	2308      	movs	r3, #8
 801fa74:	77fb      	strb	r3, [r7, #31]
 801fa76:	e146      	b.n	801fd06 <UART_SetConfig+0x346>
 801fa78:	2310      	movs	r3, #16
 801fa7a:	77fb      	strb	r3, [r7, #31]
 801fa7c:	e143      	b.n	801fd06 <UART_SetConfig+0x346>
 801fa7e:	687b      	ldr	r3, [r7, #4]
 801fa80:	681b      	ldr	r3, [r3, #0]
 801fa82:	4a84      	ldr	r2, [pc, #528]	; (801fc94 <UART_SetConfig+0x2d4>)
 801fa84:	4293      	cmp	r3, r2
 801fa86:	d132      	bne.n	801faee <UART_SetConfig+0x12e>
 801fa88:	4b81      	ldr	r3, [pc, #516]	; (801fc90 <UART_SetConfig+0x2d0>)
 801fa8a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801fa8e:	f003 030c 	and.w	r3, r3, #12
 801fa92:	2b0c      	cmp	r3, #12
 801fa94:	d828      	bhi.n	801fae8 <UART_SetConfig+0x128>
 801fa96:	a201      	add	r2, pc, #4	; (adr r2, 801fa9c <UART_SetConfig+0xdc>)
 801fa98:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801fa9c:	0801fad1 	.word	0x0801fad1
 801faa0:	0801fae9 	.word	0x0801fae9
 801faa4:	0801fae9 	.word	0x0801fae9
 801faa8:	0801fae9 	.word	0x0801fae9
 801faac:	0801fadd 	.word	0x0801fadd
 801fab0:	0801fae9 	.word	0x0801fae9
 801fab4:	0801fae9 	.word	0x0801fae9
 801fab8:	0801fae9 	.word	0x0801fae9
 801fabc:	0801fad7 	.word	0x0801fad7
 801fac0:	0801fae9 	.word	0x0801fae9
 801fac4:	0801fae9 	.word	0x0801fae9
 801fac8:	0801fae9 	.word	0x0801fae9
 801facc:	0801fae3 	.word	0x0801fae3
 801fad0:	2300      	movs	r3, #0
 801fad2:	77fb      	strb	r3, [r7, #31]
 801fad4:	e117      	b.n	801fd06 <UART_SetConfig+0x346>
 801fad6:	2302      	movs	r3, #2
 801fad8:	77fb      	strb	r3, [r7, #31]
 801fada:	e114      	b.n	801fd06 <UART_SetConfig+0x346>
 801fadc:	2304      	movs	r3, #4
 801fade:	77fb      	strb	r3, [r7, #31]
 801fae0:	e111      	b.n	801fd06 <UART_SetConfig+0x346>
 801fae2:	2308      	movs	r3, #8
 801fae4:	77fb      	strb	r3, [r7, #31]
 801fae6:	e10e      	b.n	801fd06 <UART_SetConfig+0x346>
 801fae8:	2310      	movs	r3, #16
 801faea:	77fb      	strb	r3, [r7, #31]
 801faec:	e10b      	b.n	801fd06 <UART_SetConfig+0x346>
 801faee:	687b      	ldr	r3, [r7, #4]
 801faf0:	681b      	ldr	r3, [r3, #0]
 801faf2:	4a69      	ldr	r2, [pc, #420]	; (801fc98 <UART_SetConfig+0x2d8>)
 801faf4:	4293      	cmp	r3, r2
 801faf6:	d120      	bne.n	801fb3a <UART_SetConfig+0x17a>
 801faf8:	4b65      	ldr	r3, [pc, #404]	; (801fc90 <UART_SetConfig+0x2d0>)
 801fafa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801fafe:	f003 0330 	and.w	r3, r3, #48	; 0x30
 801fb02:	2b30      	cmp	r3, #48	; 0x30
 801fb04:	d013      	beq.n	801fb2e <UART_SetConfig+0x16e>
 801fb06:	2b30      	cmp	r3, #48	; 0x30
 801fb08:	d814      	bhi.n	801fb34 <UART_SetConfig+0x174>
 801fb0a:	2b20      	cmp	r3, #32
 801fb0c:	d009      	beq.n	801fb22 <UART_SetConfig+0x162>
 801fb0e:	2b20      	cmp	r3, #32
 801fb10:	d810      	bhi.n	801fb34 <UART_SetConfig+0x174>
 801fb12:	2b00      	cmp	r3, #0
 801fb14:	d002      	beq.n	801fb1c <UART_SetConfig+0x15c>
 801fb16:	2b10      	cmp	r3, #16
 801fb18:	d006      	beq.n	801fb28 <UART_SetConfig+0x168>
 801fb1a:	e00b      	b.n	801fb34 <UART_SetConfig+0x174>
 801fb1c:	2300      	movs	r3, #0
 801fb1e:	77fb      	strb	r3, [r7, #31]
 801fb20:	e0f1      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb22:	2302      	movs	r3, #2
 801fb24:	77fb      	strb	r3, [r7, #31]
 801fb26:	e0ee      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb28:	2304      	movs	r3, #4
 801fb2a:	77fb      	strb	r3, [r7, #31]
 801fb2c:	e0eb      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb2e:	2308      	movs	r3, #8
 801fb30:	77fb      	strb	r3, [r7, #31]
 801fb32:	e0e8      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb34:	2310      	movs	r3, #16
 801fb36:	77fb      	strb	r3, [r7, #31]
 801fb38:	e0e5      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb3a:	687b      	ldr	r3, [r7, #4]
 801fb3c:	681b      	ldr	r3, [r3, #0]
 801fb3e:	4a57      	ldr	r2, [pc, #348]	; (801fc9c <UART_SetConfig+0x2dc>)
 801fb40:	4293      	cmp	r3, r2
 801fb42:	d120      	bne.n	801fb86 <UART_SetConfig+0x1c6>
 801fb44:	4b52      	ldr	r3, [pc, #328]	; (801fc90 <UART_SetConfig+0x2d0>)
 801fb46:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801fb4a:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 801fb4e:	2bc0      	cmp	r3, #192	; 0xc0
 801fb50:	d013      	beq.n	801fb7a <UART_SetConfig+0x1ba>
 801fb52:	2bc0      	cmp	r3, #192	; 0xc0
 801fb54:	d814      	bhi.n	801fb80 <UART_SetConfig+0x1c0>
 801fb56:	2b80      	cmp	r3, #128	; 0x80
 801fb58:	d009      	beq.n	801fb6e <UART_SetConfig+0x1ae>
 801fb5a:	2b80      	cmp	r3, #128	; 0x80
 801fb5c:	d810      	bhi.n	801fb80 <UART_SetConfig+0x1c0>
 801fb5e:	2b00      	cmp	r3, #0
 801fb60:	d002      	beq.n	801fb68 <UART_SetConfig+0x1a8>
 801fb62:	2b40      	cmp	r3, #64	; 0x40
 801fb64:	d006      	beq.n	801fb74 <UART_SetConfig+0x1b4>
 801fb66:	e00b      	b.n	801fb80 <UART_SetConfig+0x1c0>
 801fb68:	2300      	movs	r3, #0
 801fb6a:	77fb      	strb	r3, [r7, #31]
 801fb6c:	e0cb      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb6e:	2302      	movs	r3, #2
 801fb70:	77fb      	strb	r3, [r7, #31]
 801fb72:	e0c8      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb74:	2304      	movs	r3, #4
 801fb76:	77fb      	strb	r3, [r7, #31]
 801fb78:	e0c5      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb7a:	2308      	movs	r3, #8
 801fb7c:	77fb      	strb	r3, [r7, #31]
 801fb7e:	e0c2      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb80:	2310      	movs	r3, #16
 801fb82:	77fb      	strb	r3, [r7, #31]
 801fb84:	e0bf      	b.n	801fd06 <UART_SetConfig+0x346>
 801fb86:	687b      	ldr	r3, [r7, #4]
 801fb88:	681b      	ldr	r3, [r3, #0]
 801fb8a:	4a45      	ldr	r2, [pc, #276]	; (801fca0 <UART_SetConfig+0x2e0>)
 801fb8c:	4293      	cmp	r3, r2
 801fb8e:	d125      	bne.n	801fbdc <UART_SetConfig+0x21c>
 801fb90:	4b3f      	ldr	r3, [pc, #252]	; (801fc90 <UART_SetConfig+0x2d0>)
 801fb92:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801fb96:	f403 7340 	and.w	r3, r3, #768	; 0x300
 801fb9a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801fb9e:	d017      	beq.n	801fbd0 <UART_SetConfig+0x210>
 801fba0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801fba4:	d817      	bhi.n	801fbd6 <UART_SetConfig+0x216>
 801fba6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801fbaa:	d00b      	beq.n	801fbc4 <UART_SetConfig+0x204>
 801fbac:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801fbb0:	d811      	bhi.n	801fbd6 <UART_SetConfig+0x216>
 801fbb2:	2b00      	cmp	r3, #0
 801fbb4:	d003      	beq.n	801fbbe <UART_SetConfig+0x1fe>
 801fbb6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801fbba:	d006      	beq.n	801fbca <UART_SetConfig+0x20a>
 801fbbc:	e00b      	b.n	801fbd6 <UART_SetConfig+0x216>
 801fbbe:	2300      	movs	r3, #0
 801fbc0:	77fb      	strb	r3, [r7, #31]
 801fbc2:	e0a0      	b.n	801fd06 <UART_SetConfig+0x346>
 801fbc4:	2302      	movs	r3, #2
 801fbc6:	77fb      	strb	r3, [r7, #31]
 801fbc8:	e09d      	b.n	801fd06 <UART_SetConfig+0x346>
 801fbca:	2304      	movs	r3, #4
 801fbcc:	77fb      	strb	r3, [r7, #31]
 801fbce:	e09a      	b.n	801fd06 <UART_SetConfig+0x346>
 801fbd0:	2308      	movs	r3, #8
 801fbd2:	77fb      	strb	r3, [r7, #31]
 801fbd4:	e097      	b.n	801fd06 <UART_SetConfig+0x346>
 801fbd6:	2310      	movs	r3, #16
 801fbd8:	77fb      	strb	r3, [r7, #31]
 801fbda:	e094      	b.n	801fd06 <UART_SetConfig+0x346>
 801fbdc:	687b      	ldr	r3, [r7, #4]
 801fbde:	681b      	ldr	r3, [r3, #0]
 801fbe0:	4a30      	ldr	r2, [pc, #192]	; (801fca4 <UART_SetConfig+0x2e4>)
 801fbe2:	4293      	cmp	r3, r2
 801fbe4:	d125      	bne.n	801fc32 <UART_SetConfig+0x272>
 801fbe6:	4b2a      	ldr	r3, [pc, #168]	; (801fc90 <UART_SetConfig+0x2d0>)
 801fbe8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801fbec:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 801fbf0:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 801fbf4:	d017      	beq.n	801fc26 <UART_SetConfig+0x266>
 801fbf6:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 801fbfa:	d817      	bhi.n	801fc2c <UART_SetConfig+0x26c>
 801fbfc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801fc00:	d00b      	beq.n	801fc1a <UART_SetConfig+0x25a>
 801fc02:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801fc06:	d811      	bhi.n	801fc2c <UART_SetConfig+0x26c>
 801fc08:	2b00      	cmp	r3, #0
 801fc0a:	d003      	beq.n	801fc14 <UART_SetConfig+0x254>
 801fc0c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fc10:	d006      	beq.n	801fc20 <UART_SetConfig+0x260>
 801fc12:	e00b      	b.n	801fc2c <UART_SetConfig+0x26c>
 801fc14:	2301      	movs	r3, #1
 801fc16:	77fb      	strb	r3, [r7, #31]
 801fc18:	e075      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc1a:	2302      	movs	r3, #2
 801fc1c:	77fb      	strb	r3, [r7, #31]
 801fc1e:	e072      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc20:	2304      	movs	r3, #4
 801fc22:	77fb      	strb	r3, [r7, #31]
 801fc24:	e06f      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc26:	2308      	movs	r3, #8
 801fc28:	77fb      	strb	r3, [r7, #31]
 801fc2a:	e06c      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc2c:	2310      	movs	r3, #16
 801fc2e:	77fb      	strb	r3, [r7, #31]
 801fc30:	e069      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc32:	687b      	ldr	r3, [r7, #4]
 801fc34:	681b      	ldr	r3, [r3, #0]
 801fc36:	4a1c      	ldr	r2, [pc, #112]	; (801fca8 <UART_SetConfig+0x2e8>)
 801fc38:	4293      	cmp	r3, r2
 801fc3a:	d137      	bne.n	801fcac <UART_SetConfig+0x2ec>
 801fc3c:	4b14      	ldr	r3, [pc, #80]	; (801fc90 <UART_SetConfig+0x2d0>)
 801fc3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801fc42:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 801fc46:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 801fc4a:	d017      	beq.n	801fc7c <UART_SetConfig+0x2bc>
 801fc4c:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 801fc50:	d817      	bhi.n	801fc82 <UART_SetConfig+0x2c2>
 801fc52:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801fc56:	d00b      	beq.n	801fc70 <UART_SetConfig+0x2b0>
 801fc58:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801fc5c:	d811      	bhi.n	801fc82 <UART_SetConfig+0x2c2>
 801fc5e:	2b00      	cmp	r3, #0
 801fc60:	d003      	beq.n	801fc6a <UART_SetConfig+0x2aa>
 801fc62:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801fc66:	d006      	beq.n	801fc76 <UART_SetConfig+0x2b6>
 801fc68:	e00b      	b.n	801fc82 <UART_SetConfig+0x2c2>
 801fc6a:	2300      	movs	r3, #0
 801fc6c:	77fb      	strb	r3, [r7, #31]
 801fc6e:	e04a      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc70:	2302      	movs	r3, #2
 801fc72:	77fb      	strb	r3, [r7, #31]
 801fc74:	e047      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc76:	2304      	movs	r3, #4
 801fc78:	77fb      	strb	r3, [r7, #31]
 801fc7a:	e044      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc7c:	2308      	movs	r3, #8
 801fc7e:	77fb      	strb	r3, [r7, #31]
 801fc80:	e041      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc82:	2310      	movs	r3, #16
 801fc84:	77fb      	strb	r3, [r7, #31]
 801fc86:	e03e      	b.n	801fd06 <UART_SetConfig+0x346>
 801fc88:	efff69f3 	.word	0xefff69f3
 801fc8c:	40011000 	.word	0x40011000
 801fc90:	40023800 	.word	0x40023800
 801fc94:	40004400 	.word	0x40004400
 801fc98:	40004800 	.word	0x40004800
 801fc9c:	40004c00 	.word	0x40004c00
 801fca0:	40005000 	.word	0x40005000
 801fca4:	40011400 	.word	0x40011400
 801fca8:	40007800 	.word	0x40007800
 801fcac:	687b      	ldr	r3, [r7, #4]
 801fcae:	681b      	ldr	r3, [r3, #0]
 801fcb0:	4a71      	ldr	r2, [pc, #452]	; (801fe78 <UART_SetConfig+0x4b8>)
 801fcb2:	4293      	cmp	r3, r2
 801fcb4:	d125      	bne.n	801fd02 <UART_SetConfig+0x342>
 801fcb6:	4b71      	ldr	r3, [pc, #452]	; (801fe7c <UART_SetConfig+0x4bc>)
 801fcb8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801fcbc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 801fcc0:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 801fcc4:	d017      	beq.n	801fcf6 <UART_SetConfig+0x336>
 801fcc6:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 801fcca:	d817      	bhi.n	801fcfc <UART_SetConfig+0x33c>
 801fccc:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 801fcd0:	d00b      	beq.n	801fcea <UART_SetConfig+0x32a>
 801fcd2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 801fcd6:	d811      	bhi.n	801fcfc <UART_SetConfig+0x33c>
 801fcd8:	2b00      	cmp	r3, #0
 801fcda:	d003      	beq.n	801fce4 <UART_SetConfig+0x324>
 801fcdc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 801fce0:	d006      	beq.n	801fcf0 <UART_SetConfig+0x330>
 801fce2:	e00b      	b.n	801fcfc <UART_SetConfig+0x33c>
 801fce4:	2300      	movs	r3, #0
 801fce6:	77fb      	strb	r3, [r7, #31]
 801fce8:	e00d      	b.n	801fd06 <UART_SetConfig+0x346>
 801fcea:	2302      	movs	r3, #2
 801fcec:	77fb      	strb	r3, [r7, #31]
 801fcee:	e00a      	b.n	801fd06 <UART_SetConfig+0x346>
 801fcf0:	2304      	movs	r3, #4
 801fcf2:	77fb      	strb	r3, [r7, #31]
 801fcf4:	e007      	b.n	801fd06 <UART_SetConfig+0x346>
 801fcf6:	2308      	movs	r3, #8
 801fcf8:	77fb      	strb	r3, [r7, #31]
 801fcfa:	e004      	b.n	801fd06 <UART_SetConfig+0x346>
 801fcfc:	2310      	movs	r3, #16
 801fcfe:	77fb      	strb	r3, [r7, #31]
 801fd00:	e001      	b.n	801fd06 <UART_SetConfig+0x346>
 801fd02:	2310      	movs	r3, #16
 801fd04:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 801fd06:	687b      	ldr	r3, [r7, #4]
 801fd08:	69db      	ldr	r3, [r3, #28]
 801fd0a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 801fd0e:	d15b      	bne.n	801fdc8 <UART_SetConfig+0x408>
  {
    switch (clocksource)
 801fd10:	7ffb      	ldrb	r3, [r7, #31]
 801fd12:	2b08      	cmp	r3, #8
 801fd14:	d827      	bhi.n	801fd66 <UART_SetConfig+0x3a6>
 801fd16:	a201      	add	r2, pc, #4	; (adr r2, 801fd1c <UART_SetConfig+0x35c>)
 801fd18:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801fd1c:	0801fd41 	.word	0x0801fd41
 801fd20:	0801fd49 	.word	0x0801fd49
 801fd24:	0801fd51 	.word	0x0801fd51
 801fd28:	0801fd67 	.word	0x0801fd67
 801fd2c:	0801fd57 	.word	0x0801fd57
 801fd30:	0801fd67 	.word	0x0801fd67
 801fd34:	0801fd67 	.word	0x0801fd67
 801fd38:	0801fd67 	.word	0x0801fd67
 801fd3c:	0801fd5f 	.word	0x0801fd5f
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 801fd40:	f7fe fe68 	bl	801ea14 <HAL_RCC_GetPCLK1Freq>
 801fd44:	61b8      	str	r0, [r7, #24]
        break;
 801fd46:	e013      	b.n	801fd70 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 801fd48:	f7fe fe78 	bl	801ea3c <HAL_RCC_GetPCLK2Freq>
 801fd4c:	61b8      	str	r0, [r7, #24]
        break;
 801fd4e:	e00f      	b.n	801fd70 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 801fd50:	4b4b      	ldr	r3, [pc, #300]	; (801fe80 <UART_SetConfig+0x4c0>)
 801fd52:	61bb      	str	r3, [r7, #24]
        break;
 801fd54:	e00c      	b.n	801fd70 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 801fd56:	f7fe fd9b 	bl	801e890 <HAL_RCC_GetSysClockFreq>
 801fd5a:	61b8      	str	r0, [r7, #24]
        break;
 801fd5c:	e008      	b.n	801fd70 <UART_SetConfig+0x3b0>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 801fd5e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801fd62:	61bb      	str	r3, [r7, #24]
        break;
 801fd64:	e004      	b.n	801fd70 <UART_SetConfig+0x3b0>
      default:
        pclk = 0U;
 801fd66:	2300      	movs	r3, #0
 801fd68:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 801fd6a:	2301      	movs	r3, #1
 801fd6c:	77bb      	strb	r3, [r7, #30]
        break;
 801fd6e:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 801fd70:	69bb      	ldr	r3, [r7, #24]
 801fd72:	2b00      	cmp	r3, #0
 801fd74:	d074      	beq.n	801fe60 <UART_SetConfig+0x4a0>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 801fd76:	69bb      	ldr	r3, [r7, #24]
 801fd78:	005a      	lsls	r2, r3, #1
 801fd7a:	687b      	ldr	r3, [r7, #4]
 801fd7c:	685b      	ldr	r3, [r3, #4]
 801fd7e:	085b      	lsrs	r3, r3, #1
 801fd80:	441a      	add	r2, r3
 801fd82:	687b      	ldr	r3, [r7, #4]
 801fd84:	685b      	ldr	r3, [r3, #4]
 801fd86:	fbb2 f3f3 	udiv	r3, r2, r3
 801fd8a:	b29b      	uxth	r3, r3
 801fd8c:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 801fd8e:	693b      	ldr	r3, [r7, #16]
 801fd90:	2b0f      	cmp	r3, #15
 801fd92:	d916      	bls.n	801fdc2 <UART_SetConfig+0x402>
 801fd94:	693b      	ldr	r3, [r7, #16]
 801fd96:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 801fd9a:	d212      	bcs.n	801fdc2 <UART_SetConfig+0x402>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 801fd9c:	693b      	ldr	r3, [r7, #16]
 801fd9e:	b29b      	uxth	r3, r3
 801fda0:	f023 030f 	bic.w	r3, r3, #15
 801fda4:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 801fda6:	693b      	ldr	r3, [r7, #16]
 801fda8:	085b      	lsrs	r3, r3, #1
 801fdaa:	b29b      	uxth	r3, r3
 801fdac:	f003 0307 	and.w	r3, r3, #7
 801fdb0:	b29a      	uxth	r2, r3
 801fdb2:	89fb      	ldrh	r3, [r7, #14]
 801fdb4:	4313      	orrs	r3, r2
 801fdb6:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 801fdb8:	687b      	ldr	r3, [r7, #4]
 801fdba:	681b      	ldr	r3, [r3, #0]
 801fdbc:	89fa      	ldrh	r2, [r7, #14]
 801fdbe:	60da      	str	r2, [r3, #12]
 801fdc0:	e04e      	b.n	801fe60 <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 801fdc2:	2301      	movs	r3, #1
 801fdc4:	77bb      	strb	r3, [r7, #30]
 801fdc6:	e04b      	b.n	801fe60 <UART_SetConfig+0x4a0>
      }
    }
  }
  else
  {
    switch (clocksource)
 801fdc8:	7ffb      	ldrb	r3, [r7, #31]
 801fdca:	2b08      	cmp	r3, #8
 801fdcc:	d827      	bhi.n	801fe1e <UART_SetConfig+0x45e>
 801fdce:	a201      	add	r2, pc, #4	; (adr r2, 801fdd4 <UART_SetConfig+0x414>)
 801fdd0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801fdd4:	0801fdf9 	.word	0x0801fdf9
 801fdd8:	0801fe01 	.word	0x0801fe01
 801fddc:	0801fe09 	.word	0x0801fe09
 801fde0:	0801fe1f 	.word	0x0801fe1f
 801fde4:	0801fe0f 	.word	0x0801fe0f
 801fde8:	0801fe1f 	.word	0x0801fe1f
 801fdec:	0801fe1f 	.word	0x0801fe1f
 801fdf0:	0801fe1f 	.word	0x0801fe1f
 801fdf4:	0801fe17 	.word	0x0801fe17
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 801fdf8:	f7fe fe0c 	bl	801ea14 <HAL_RCC_GetPCLK1Freq>
 801fdfc:	61b8      	str	r0, [r7, #24]
        break;
 801fdfe:	e013      	b.n	801fe28 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 801fe00:	f7fe fe1c 	bl	801ea3c <HAL_RCC_GetPCLK2Freq>
 801fe04:	61b8      	str	r0, [r7, #24]
        break;
 801fe06:	e00f      	b.n	801fe28 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 801fe08:	4b1d      	ldr	r3, [pc, #116]	; (801fe80 <UART_SetConfig+0x4c0>)
 801fe0a:	61bb      	str	r3, [r7, #24]
        break;
 801fe0c:	e00c      	b.n	801fe28 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 801fe0e:	f7fe fd3f 	bl	801e890 <HAL_RCC_GetSysClockFreq>
 801fe12:	61b8      	str	r0, [r7, #24]
        break;
 801fe14:	e008      	b.n	801fe28 <UART_SetConfig+0x468>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 801fe16:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801fe1a:	61bb      	str	r3, [r7, #24]
        break;
 801fe1c:	e004      	b.n	801fe28 <UART_SetConfig+0x468>
      default:
        pclk = 0U;
 801fe1e:	2300      	movs	r3, #0
 801fe20:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 801fe22:	2301      	movs	r3, #1
 801fe24:	77bb      	strb	r3, [r7, #30]
        break;
 801fe26:	bf00      	nop
    }

    if (pclk != 0U)
 801fe28:	69bb      	ldr	r3, [r7, #24]
 801fe2a:	2b00      	cmp	r3, #0
 801fe2c:	d018      	beq.n	801fe60 <UART_SetConfig+0x4a0>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 801fe2e:	687b      	ldr	r3, [r7, #4]
 801fe30:	685b      	ldr	r3, [r3, #4]
 801fe32:	085a      	lsrs	r2, r3, #1
 801fe34:	69bb      	ldr	r3, [r7, #24]
 801fe36:	441a      	add	r2, r3
 801fe38:	687b      	ldr	r3, [r7, #4]
 801fe3a:	685b      	ldr	r3, [r3, #4]
 801fe3c:	fbb2 f3f3 	udiv	r3, r2, r3
 801fe40:	b29b      	uxth	r3, r3
 801fe42:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 801fe44:	693b      	ldr	r3, [r7, #16]
 801fe46:	2b0f      	cmp	r3, #15
 801fe48:	d908      	bls.n	801fe5c <UART_SetConfig+0x49c>
 801fe4a:	693b      	ldr	r3, [r7, #16]
 801fe4c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 801fe50:	d204      	bcs.n	801fe5c <UART_SetConfig+0x49c>
      {
        huart->Instance->BRR = usartdiv;
 801fe52:	687b      	ldr	r3, [r7, #4]
 801fe54:	681b      	ldr	r3, [r3, #0]
 801fe56:	693a      	ldr	r2, [r7, #16]
 801fe58:	60da      	str	r2, [r3, #12]
 801fe5a:	e001      	b.n	801fe60 <UART_SetConfig+0x4a0>
      }
      else
      {
        ret = HAL_ERROR;
 801fe5c:	2301      	movs	r3, #1
 801fe5e:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 801fe60:	687b      	ldr	r3, [r7, #4]
 801fe62:	2200      	movs	r2, #0
 801fe64:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 801fe66:	687b      	ldr	r3, [r7, #4]
 801fe68:	2200      	movs	r2, #0
 801fe6a:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 801fe6c:	7fbb      	ldrb	r3, [r7, #30]
}
 801fe6e:	4618      	mov	r0, r3
 801fe70:	3720      	adds	r7, #32
 801fe72:	46bd      	mov	sp, r7
 801fe74:	bd80      	pop	{r7, pc}
 801fe76:	bf00      	nop
 801fe78:	40007c00 	.word	0x40007c00
 801fe7c:	40023800 	.word	0x40023800
 801fe80:	00f42400 	.word	0x00f42400

0801fe84 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 801fe84:	b480      	push	{r7}
 801fe86:	b083      	sub	sp, #12
 801fe88:	af00      	add	r7, sp, #0
 801fe8a:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 801fe8c:	687b      	ldr	r3, [r7, #4]
 801fe8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801fe90:	f003 0301 	and.w	r3, r3, #1
 801fe94:	2b00      	cmp	r3, #0
 801fe96:	d00a      	beq.n	801feae <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 801fe98:	687b      	ldr	r3, [r7, #4]
 801fe9a:	681b      	ldr	r3, [r3, #0]
 801fe9c:	685b      	ldr	r3, [r3, #4]
 801fe9e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 801fea2:	687b      	ldr	r3, [r7, #4]
 801fea4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 801fea6:	687b      	ldr	r3, [r7, #4]
 801fea8:	681b      	ldr	r3, [r3, #0]
 801feaa:	430a      	orrs	r2, r1
 801feac:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 801feae:	687b      	ldr	r3, [r7, #4]
 801feb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801feb2:	f003 0302 	and.w	r3, r3, #2
 801feb6:	2b00      	cmp	r3, #0
 801feb8:	d00a      	beq.n	801fed0 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 801feba:	687b      	ldr	r3, [r7, #4]
 801febc:	681b      	ldr	r3, [r3, #0]
 801febe:	685b      	ldr	r3, [r3, #4]
 801fec0:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 801fec4:	687b      	ldr	r3, [r7, #4]
 801fec6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801fec8:	687b      	ldr	r3, [r7, #4]
 801feca:	681b      	ldr	r3, [r3, #0]
 801fecc:	430a      	orrs	r2, r1
 801fece:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 801fed0:	687b      	ldr	r3, [r7, #4]
 801fed2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801fed4:	f003 0304 	and.w	r3, r3, #4
 801fed8:	2b00      	cmp	r3, #0
 801feda:	d00a      	beq.n	801fef2 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 801fedc:	687b      	ldr	r3, [r7, #4]
 801fede:	681b      	ldr	r3, [r3, #0]
 801fee0:	685b      	ldr	r3, [r3, #4]
 801fee2:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 801fee6:	687b      	ldr	r3, [r7, #4]
 801fee8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 801feea:	687b      	ldr	r3, [r7, #4]
 801feec:	681b      	ldr	r3, [r3, #0]
 801feee:	430a      	orrs	r2, r1
 801fef0:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 801fef2:	687b      	ldr	r3, [r7, #4]
 801fef4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801fef6:	f003 0308 	and.w	r3, r3, #8
 801fefa:	2b00      	cmp	r3, #0
 801fefc:	d00a      	beq.n	801ff14 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 801fefe:	687b      	ldr	r3, [r7, #4]
 801ff00:	681b      	ldr	r3, [r3, #0]
 801ff02:	685b      	ldr	r3, [r3, #4]
 801ff04:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 801ff08:	687b      	ldr	r3, [r7, #4]
 801ff0a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 801ff0c:	687b      	ldr	r3, [r7, #4]
 801ff0e:	681b      	ldr	r3, [r3, #0]
 801ff10:	430a      	orrs	r2, r1
 801ff12:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 801ff14:	687b      	ldr	r3, [r7, #4]
 801ff16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801ff18:	f003 0310 	and.w	r3, r3, #16
 801ff1c:	2b00      	cmp	r3, #0
 801ff1e:	d00a      	beq.n	801ff36 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 801ff20:	687b      	ldr	r3, [r7, #4]
 801ff22:	681b      	ldr	r3, [r3, #0]
 801ff24:	689b      	ldr	r3, [r3, #8]
 801ff26:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 801ff2a:	687b      	ldr	r3, [r7, #4]
 801ff2c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 801ff2e:	687b      	ldr	r3, [r7, #4]
 801ff30:	681b      	ldr	r3, [r3, #0]
 801ff32:	430a      	orrs	r2, r1
 801ff34:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 801ff36:	687b      	ldr	r3, [r7, #4]
 801ff38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801ff3a:	f003 0320 	and.w	r3, r3, #32
 801ff3e:	2b00      	cmp	r3, #0
 801ff40:	d00a      	beq.n	801ff58 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 801ff42:	687b      	ldr	r3, [r7, #4]
 801ff44:	681b      	ldr	r3, [r3, #0]
 801ff46:	689b      	ldr	r3, [r3, #8]
 801ff48:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 801ff4c:	687b      	ldr	r3, [r7, #4]
 801ff4e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 801ff50:	687b      	ldr	r3, [r7, #4]
 801ff52:	681b      	ldr	r3, [r3, #0]
 801ff54:	430a      	orrs	r2, r1
 801ff56:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 801ff58:	687b      	ldr	r3, [r7, #4]
 801ff5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801ff5c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 801ff60:	2b00      	cmp	r3, #0
 801ff62:	d01a      	beq.n	801ff9a <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 801ff64:	687b      	ldr	r3, [r7, #4]
 801ff66:	681b      	ldr	r3, [r3, #0]
 801ff68:	685b      	ldr	r3, [r3, #4]
 801ff6a:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 801ff6e:	687b      	ldr	r3, [r7, #4]
 801ff70:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 801ff72:	687b      	ldr	r3, [r7, #4]
 801ff74:	681b      	ldr	r3, [r3, #0]
 801ff76:	430a      	orrs	r2, r1
 801ff78:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 801ff7a:	687b      	ldr	r3, [r7, #4]
 801ff7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ff7e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 801ff82:	d10a      	bne.n	801ff9a <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 801ff84:	687b      	ldr	r3, [r7, #4]
 801ff86:	681b      	ldr	r3, [r3, #0]
 801ff88:	685b      	ldr	r3, [r3, #4]
 801ff8a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 801ff8e:	687b      	ldr	r3, [r7, #4]
 801ff90:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 801ff92:	687b      	ldr	r3, [r7, #4]
 801ff94:	681b      	ldr	r3, [r3, #0]
 801ff96:	430a      	orrs	r2, r1
 801ff98:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 801ff9a:	687b      	ldr	r3, [r7, #4]
 801ff9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801ff9e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801ffa2:	2b00      	cmp	r3, #0
 801ffa4:	d00a      	beq.n	801ffbc <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 801ffa6:	687b      	ldr	r3, [r7, #4]
 801ffa8:	681b      	ldr	r3, [r3, #0]
 801ffaa:	685b      	ldr	r3, [r3, #4]
 801ffac:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 801ffb0:	687b      	ldr	r3, [r7, #4]
 801ffb2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 801ffb4:	687b      	ldr	r3, [r7, #4]
 801ffb6:	681b      	ldr	r3, [r3, #0]
 801ffb8:	430a      	orrs	r2, r1
 801ffba:	605a      	str	r2, [r3, #4]
  }
}
 801ffbc:	bf00      	nop
 801ffbe:	370c      	adds	r7, #12
 801ffc0:	46bd      	mov	sp, r7
 801ffc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ffc6:	4770      	bx	lr

0801ffc8 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 801ffc8:	b580      	push	{r7, lr}
 801ffca:	b086      	sub	sp, #24
 801ffcc:	af02      	add	r7, sp, #8
 801ffce:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 801ffd0:	687b      	ldr	r3, [r7, #4]
 801ffd2:	2200      	movs	r2, #0
 801ffd4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 801ffd8:	f7fd fcfa 	bl	801d9d0 <HAL_GetTick>
 801ffdc:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 801ffde:	687b      	ldr	r3, [r7, #4]
 801ffe0:	681b      	ldr	r3, [r3, #0]
 801ffe2:	681b      	ldr	r3, [r3, #0]
 801ffe4:	f003 0308 	and.w	r3, r3, #8
 801ffe8:	2b08      	cmp	r3, #8
 801ffea:	d10e      	bne.n	802000a <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 801ffec:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 801fff0:	9300      	str	r3, [sp, #0]
 801fff2:	68fb      	ldr	r3, [r7, #12]
 801fff4:	2200      	movs	r2, #0
 801fff6:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 801fffa:	6878      	ldr	r0, [r7, #4]
 801fffc:	f000 f817 	bl	802002e <UART_WaitOnFlagUntilTimeout>
 8020000:	4603      	mov	r3, r0
 8020002:	2b00      	cmp	r3, #0
 8020004:	d001      	beq.n	802000a <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8020006:	2303      	movs	r3, #3
 8020008:	e00d      	b.n	8020026 <UART_CheckIdleState+0x5e>
    }
  }
#endif

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 802000a:	687b      	ldr	r3, [r7, #4]
 802000c:	2220      	movs	r2, #32
 802000e:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8020010:	687b      	ldr	r3, [r7, #4]
 8020012:	2220      	movs	r2, #32
 8020014:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8020016:	687b      	ldr	r3, [r7, #4]
 8020018:	2200      	movs	r2, #0
 802001a:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 802001c:	687b      	ldr	r3, [r7, #4]
 802001e:	2200      	movs	r2, #0
 8020020:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  return HAL_OK;
 8020024:	2300      	movs	r3, #0
}
 8020026:	4618      	mov	r0, r3
 8020028:	3710      	adds	r7, #16
 802002a:	46bd      	mov	sp, r7
 802002c:	bd80      	pop	{r7, pc}

0802002e <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 802002e:	b580      	push	{r7, lr}
 8020030:	b084      	sub	sp, #16
 8020032:	af00      	add	r7, sp, #0
 8020034:	60f8      	str	r0, [r7, #12]
 8020036:	60b9      	str	r1, [r7, #8]
 8020038:	603b      	str	r3, [r7, #0]
 802003a:	4613      	mov	r3, r2
 802003c:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 802003e:	e05e      	b.n	80200fe <UART_WaitOnFlagUntilTimeout+0xd0>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8020040:	69bb      	ldr	r3, [r7, #24]
 8020042:	f1b3 3fff 	cmp.w	r3, #4294967295
 8020046:	d05a      	beq.n	80200fe <UART_WaitOnFlagUntilTimeout+0xd0>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8020048:	f7fd fcc2 	bl	801d9d0 <HAL_GetTick>
 802004c:	4602      	mov	r2, r0
 802004e:	683b      	ldr	r3, [r7, #0]
 8020050:	1ad3      	subs	r3, r2, r3
 8020052:	69ba      	ldr	r2, [r7, #24]
 8020054:	429a      	cmp	r2, r3
 8020056:	d302      	bcc.n	802005e <UART_WaitOnFlagUntilTimeout+0x30>
 8020058:	69bb      	ldr	r3, [r7, #24]
 802005a:	2b00      	cmp	r3, #0
 802005c:	d11b      	bne.n	8020096 <UART_WaitOnFlagUntilTimeout+0x68>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 802005e:	68fb      	ldr	r3, [r7, #12]
 8020060:	681b      	ldr	r3, [r3, #0]
 8020062:	681a      	ldr	r2, [r3, #0]
 8020064:	68fb      	ldr	r3, [r7, #12]
 8020066:	681b      	ldr	r3, [r3, #0]
 8020068:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 802006c:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802006e:	68fb      	ldr	r3, [r7, #12]
 8020070:	681b      	ldr	r3, [r3, #0]
 8020072:	689a      	ldr	r2, [r3, #8]
 8020074:	68fb      	ldr	r3, [r7, #12]
 8020076:	681b      	ldr	r3, [r3, #0]
 8020078:	f022 0201 	bic.w	r2, r2, #1
 802007c:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
 802007e:	68fb      	ldr	r3, [r7, #12]
 8020080:	2220      	movs	r2, #32
 8020082:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8020084:	68fb      	ldr	r3, [r7, #12]
 8020086:	2220      	movs	r2, #32
 8020088:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 802008a:	68fb      	ldr	r3, [r7, #12]
 802008c:	2200      	movs	r2, #0
 802008e:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        return HAL_TIMEOUT;
 8020092:	2303      	movs	r3, #3
 8020094:	e043      	b.n	802011e <UART_WaitOnFlagUntilTimeout+0xf0>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8020096:	68fb      	ldr	r3, [r7, #12]
 8020098:	681b      	ldr	r3, [r3, #0]
 802009a:	681b      	ldr	r3, [r3, #0]
 802009c:	f003 0304 	and.w	r3, r3, #4
 80200a0:	2b00      	cmp	r3, #0
 80200a2:	d02c      	beq.n	80200fe <UART_WaitOnFlagUntilTimeout+0xd0>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 80200a4:	68fb      	ldr	r3, [r7, #12]
 80200a6:	681b      	ldr	r3, [r3, #0]
 80200a8:	69db      	ldr	r3, [r3, #28]
 80200aa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80200ae:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80200b2:	d124      	bne.n	80200fe <UART_WaitOnFlagUntilTimeout+0xd0>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80200b4:	68fb      	ldr	r3, [r7, #12]
 80200b6:	681b      	ldr	r3, [r3, #0]
 80200b8:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80200bc:	621a      	str	r2, [r3, #32]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80200be:	68fb      	ldr	r3, [r7, #12]
 80200c0:	681b      	ldr	r3, [r3, #0]
 80200c2:	681a      	ldr	r2, [r3, #0]
 80200c4:	68fb      	ldr	r3, [r7, #12]
 80200c6:	681b      	ldr	r3, [r3, #0]
 80200c8:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80200cc:	601a      	str	r2, [r3, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80200ce:	68fb      	ldr	r3, [r7, #12]
 80200d0:	681b      	ldr	r3, [r3, #0]
 80200d2:	689a      	ldr	r2, [r3, #8]
 80200d4:	68fb      	ldr	r3, [r7, #12]
 80200d6:	681b      	ldr	r3, [r3, #0]
 80200d8:	f022 0201 	bic.w	r2, r2, #1
 80200dc:	609a      	str	r2, [r3, #8]

          huart->gState = HAL_UART_STATE_READY;
 80200de:	68fb      	ldr	r3, [r7, #12]
 80200e0:	2220      	movs	r2, #32
 80200e2:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 80200e4:	68fb      	ldr	r3, [r7, #12]
 80200e6:	2220      	movs	r2, #32
 80200e8:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80200ea:	68fb      	ldr	r3, [r7, #12]
 80200ec:	2220      	movs	r2, #32
 80200ee:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80200f2:	68fb      	ldr	r3, [r7, #12]
 80200f4:	2200      	movs	r2, #0
 80200f6:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

          return HAL_TIMEOUT;
 80200fa:	2303      	movs	r3, #3
 80200fc:	e00f      	b.n	802011e <UART_WaitOnFlagUntilTimeout+0xf0>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80200fe:	68fb      	ldr	r3, [r7, #12]
 8020100:	681b      	ldr	r3, [r3, #0]
 8020102:	69da      	ldr	r2, [r3, #28]
 8020104:	68bb      	ldr	r3, [r7, #8]
 8020106:	4013      	ands	r3, r2
 8020108:	68ba      	ldr	r2, [r7, #8]
 802010a:	429a      	cmp	r2, r3
 802010c:	bf0c      	ite	eq
 802010e:	2301      	moveq	r3, #1
 8020110:	2300      	movne	r3, #0
 8020112:	b2db      	uxtb	r3, r3
 8020114:	461a      	mov	r2, r3
 8020116:	79fb      	ldrb	r3, [r7, #7]
 8020118:	429a      	cmp	r2, r3
 802011a:	d091      	beq.n	8020040 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 802011c:	2300      	movs	r3, #0
}
 802011e:	4618      	mov	r0, r3
 8020120:	3710      	adds	r7, #16
 8020122:	46bd      	mov	sp, r7
 8020124:	bd80      	pop	{r7, pc}

08020126 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 8020126:	b480      	push	{r7}
 8020128:	b083      	sub	sp, #12
 802012a:	af00      	add	r7, sp, #0
 802012c:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 802012e:	687b      	ldr	r3, [r7, #4]
 8020130:	681b      	ldr	r3, [r3, #0]
 8020132:	681a      	ldr	r2, [r3, #0]
 8020134:	687b      	ldr	r3, [r7, #4]
 8020136:	681b      	ldr	r3, [r3, #0]
 8020138:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 802013c:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 802013e:	687b      	ldr	r3, [r7, #4]
 8020140:	681b      	ldr	r3, [r3, #0]
 8020142:	689a      	ldr	r2, [r3, #8]
 8020144:	687b      	ldr	r3, [r7, #4]
 8020146:	681b      	ldr	r3, [r3, #0]
 8020148:	f022 0201 	bic.w	r2, r2, #1
 802014c:	609a      	str	r2, [r3, #8]

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 802014e:	687b      	ldr	r3, [r7, #4]
 8020150:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8020152:	2b01      	cmp	r3, #1
 8020154:	d107      	bne.n	8020166 <UART_EndRxTransfer+0x40>
  {
    CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8020156:	687b      	ldr	r3, [r7, #4]
 8020158:	681b      	ldr	r3, [r3, #0]
 802015a:	681a      	ldr	r2, [r3, #0]
 802015c:	687b      	ldr	r3, [r7, #4]
 802015e:	681b      	ldr	r3, [r3, #0]
 8020160:	f022 0210 	bic.w	r2, r2, #16
 8020164:	601a      	str	r2, [r3, #0]
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8020166:	687b      	ldr	r3, [r7, #4]
 8020168:	2220      	movs	r2, #32
 802016a:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 802016c:	687b      	ldr	r3, [r7, #4]
 802016e:	2200      	movs	r2, #0
 8020170:	661a      	str	r2, [r3, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8020172:	687b      	ldr	r3, [r7, #4]
 8020174:	2200      	movs	r2, #0
 8020176:	665a      	str	r2, [r3, #100]	; 0x64
}
 8020178:	bf00      	nop
 802017a:	370c      	adds	r7, #12
 802017c:	46bd      	mov	sp, r7
 802017e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8020182:	4770      	bx	lr

08020184 <UART_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8020184:	b580      	push	{r7, lr}
 8020186:	b084      	sub	sp, #16
 8020188:	af00      	add	r7, sp, #0
 802018a:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 802018c:	687b      	ldr	r3, [r7, #4]
 802018e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020190:	60fb      	str	r3, [r7, #12]
  huart->RxXferCount = 0U;
 8020192:	68fb      	ldr	r3, [r7, #12]
 8020194:	2200      	movs	r2, #0
 8020196:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
  huart->TxXferCount = 0U;
 802019a:	68fb      	ldr	r3, [r7, #12]
 802019c:	2200      	movs	r2, #0
 802019e:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 80201a2:	68f8      	ldr	r0, [r7, #12]
 80201a4:	f7ff fbf6 	bl	801f994 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80201a8:	bf00      	nop
 80201aa:	3710      	adds	r7, #16
 80201ac:	46bd      	mov	sp, r7
 80201ae:	bd80      	pop	{r7, pc}

080201b0 <UART_EndTransmit_IT>:
  * @param  huart pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
 80201b0:	b580      	push	{r7, lr}
 80201b2:	b082      	sub	sp, #8
 80201b4:	af00      	add	r7, sp, #0
 80201b6:	6078      	str	r0, [r7, #4]
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80201b8:	687b      	ldr	r3, [r7, #4]
 80201ba:	681b      	ldr	r3, [r3, #0]
 80201bc:	681a      	ldr	r2, [r3, #0]
 80201be:	687b      	ldr	r3, [r7, #4]
 80201c0:	681b      	ldr	r3, [r3, #0]
 80201c2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80201c6:	601a      	str	r2, [r3, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 80201c8:	687b      	ldr	r3, [r7, #4]
 80201ca:	2220      	movs	r2, #32
 80201cc:	679a      	str	r2, [r3, #120]	; 0x78

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 80201ce:	687b      	ldr	r3, [r7, #4]
 80201d0:	2200      	movs	r2, #0
 80201d2:	669a      	str	r2, [r3, #104]	; 0x68
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 80201d4:	6878      	ldr	r0, [r7, #4]
 80201d6:	f7ff fbd3 	bl	801f980 <HAL_UART_TxCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 80201da:	bf00      	nop
 80201dc:	3708      	adds	r7, #8
 80201de:	46bd      	mov	sp, r7
 80201e0:	bd80      	pop	{r7, pc}

080201e2 <_ZdlPv>:
 80201e2:	f001 bb55 	b.w	8021890 <free>

080201e6 <_ZdlPvj>:
 80201e6:	f7ff bffc 	b.w	80201e2 <_ZdlPv>

080201ea <__cxa_guard_acquire>:
 80201ea:	6803      	ldr	r3, [r0, #0]
 80201ec:	07db      	lsls	r3, r3, #31
 80201ee:	d406      	bmi.n	80201fe <__cxa_guard_acquire+0x14>
 80201f0:	7843      	ldrb	r3, [r0, #1]
 80201f2:	b103      	cbz	r3, 80201f6 <__cxa_guard_acquire+0xc>
 80201f4:	deff      	udf	#255	; 0xff
 80201f6:	2301      	movs	r3, #1
 80201f8:	7043      	strb	r3, [r0, #1]
 80201fa:	4618      	mov	r0, r3
 80201fc:	4770      	bx	lr
 80201fe:	2000      	movs	r0, #0
 8020200:	4770      	bx	lr

08020202 <__cxa_guard_release>:
 8020202:	2301      	movs	r3, #1
 8020204:	6003      	str	r3, [r0, #0]
 8020206:	4770      	bx	lr

08020208 <_Znwj>:
 8020208:	2801      	cmp	r0, #1
 802020a:	bf38      	it	cc
 802020c:	2001      	movcc	r0, #1
 802020e:	b510      	push	{r4, lr}
 8020210:	4604      	mov	r4, r0
 8020212:	4620      	mov	r0, r4
 8020214:	f001 fb34 	bl	8021880 <malloc>
 8020218:	b930      	cbnz	r0, 8020228 <_Znwj+0x20>
 802021a:	f000 fb09 	bl	8020830 <_ZSt15get_new_handlerv>
 802021e:	b908      	cbnz	r0, 8020224 <_Znwj+0x1c>
 8020220:	f001 fac4 	bl	80217ac <abort>
 8020224:	4780      	blx	r0
 8020226:	e7f4      	b.n	8020212 <_Znwj+0xa>
 8020228:	bd10      	pop	{r4, pc}

0802022a <_ZNSaIcEC1Ev>:
 802022a:	4770      	bx	lr

0802022c <_ZNSaIcED1Ev>:
 802022c:	4770      	bx	lr

0802022e <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>:
 802022e:	68c3      	ldr	r3, [r0, #12]
 8020230:	689a      	ldr	r2, [r3, #8]
 8020232:	60c2      	str	r2, [r0, #12]
 8020234:	b510      	push	{r4, lr}
 8020236:	b102      	cbz	r2, 802023a <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0xc>
 8020238:	6050      	str	r0, [r2, #4]
 802023a:	6842      	ldr	r2, [r0, #4]
 802023c:	605a      	str	r2, [r3, #4]
 802023e:	680c      	ldr	r4, [r1, #0]
 8020240:	4284      	cmp	r4, r0
 8020242:	d103      	bne.n	802024c <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x1e>
 8020244:	600b      	str	r3, [r1, #0]
 8020246:	6098      	str	r0, [r3, #8]
 8020248:	6043      	str	r3, [r0, #4]
 802024a:	bd10      	pop	{r4, pc}
 802024c:	6891      	ldr	r1, [r2, #8]
 802024e:	4281      	cmp	r1, r0
 8020250:	bf0c      	ite	eq
 8020252:	6093      	streq	r3, [r2, #8]
 8020254:	60d3      	strne	r3, [r2, #12]
 8020256:	e7f6      	b.n	8020246 <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_+0x18>

08020258 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>:
 8020258:	6883      	ldr	r3, [r0, #8]
 802025a:	68da      	ldr	r2, [r3, #12]
 802025c:	6082      	str	r2, [r0, #8]
 802025e:	b510      	push	{r4, lr}
 8020260:	b102      	cbz	r2, 8020264 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0xc>
 8020262:	6050      	str	r0, [r2, #4]
 8020264:	6842      	ldr	r2, [r0, #4]
 8020266:	605a      	str	r2, [r3, #4]
 8020268:	680c      	ldr	r4, [r1, #0]
 802026a:	4284      	cmp	r4, r0
 802026c:	d103      	bne.n	8020276 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x1e>
 802026e:	600b      	str	r3, [r1, #0]
 8020270:	60d8      	str	r0, [r3, #12]
 8020272:	6043      	str	r3, [r0, #4]
 8020274:	bd10      	pop	{r4, pc}
 8020276:	68d1      	ldr	r1, [r2, #12]
 8020278:	4281      	cmp	r1, r0
 802027a:	bf0c      	ite	eq
 802027c:	60d3      	streq	r3, [r2, #12]
 802027e:	6093      	strne	r3, [r2, #8]
 8020280:	e7f6      	b.n	8020270 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_+0x18>

08020282 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 8020282:	7803      	ldrb	r3, [r0, #0]
 8020284:	b933      	cbnz	r3, 8020294 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 8020286:	6843      	ldr	r3, [r0, #4]
 8020288:	685b      	ldr	r3, [r3, #4]
 802028a:	4283      	cmp	r3, r0
 802028c:	d102      	bne.n	8020294 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x12>
 802028e:	68db      	ldr	r3, [r3, #12]
 8020290:	4618      	mov	r0, r3
 8020292:	4770      	bx	lr
 8020294:	6882      	ldr	r2, [r0, #8]
 8020296:	b122      	cbz	r2, 80202a2 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x20>
 8020298:	4613      	mov	r3, r2
 802029a:	68d2      	ldr	r2, [r2, #12]
 802029c:	2a00      	cmp	r2, #0
 802029e:	d1fb      	bne.n	8020298 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x16>
 80202a0:	e7f6      	b.n	8020290 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 80202a2:	6843      	ldr	r3, [r0, #4]
 80202a4:	689a      	ldr	r2, [r3, #8]
 80202a6:	4282      	cmp	r2, r0
 80202a8:	d1f2      	bne.n	8020290 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0xe>
 80202aa:	4618      	mov	r0, r3
 80202ac:	685b      	ldr	r3, [r3, #4]
 80202ae:	e7f9      	b.n	80202a4 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base+0x22>

080202b0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>:
 80202b0:	68c3      	ldr	r3, [r0, #12]
 80202b2:	b123      	cbz	r3, 80202be <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0xe>
 80202b4:	4618      	mov	r0, r3
 80202b6:	689b      	ldr	r3, [r3, #8]
 80202b8:	2b00      	cmp	r3, #0
 80202ba:	d1fb      	bne.n	80202b4 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x4>
 80202bc:	4770      	bx	lr
 80202be:	6843      	ldr	r3, [r0, #4]
 80202c0:	68da      	ldr	r2, [r3, #12]
 80202c2:	4282      	cmp	r2, r0
 80202c4:	d102      	bne.n	80202cc <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x1c>
 80202c6:	4618      	mov	r0, r3
 80202c8:	685b      	ldr	r3, [r3, #4]
 80202ca:	e7f9      	b.n	80202c0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base+0x10>
 80202cc:	68c2      	ldr	r2, [r0, #12]
 80202ce:	4293      	cmp	r3, r2
 80202d0:	bf18      	it	ne
 80202d2:	4618      	movne	r0, r3
 80202d4:	4770      	bx	lr

080202d6 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>:
 80202d6:	f7ff bfd4 	b.w	8020282 <_ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base>

080202da <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>:
 80202da:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80202de:	461e      	mov	r6, r3
 80202e0:	f103 0804 	add.w	r8, r3, #4
 80202e4:	2300      	movs	r3, #0
 80202e6:	e9c1 3302 	strd	r3, r3, [r1, #8]
 80202ea:	460c      	mov	r4, r1
 80202ec:	604a      	str	r2, [r1, #4]
 80202ee:	700b      	strb	r3, [r1, #0]
 80202f0:	b300      	cbz	r0, 8020334 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x5a>
 80202f2:	4296      	cmp	r6, r2
 80202f4:	6091      	str	r1, [r2, #8]
 80202f6:	d118      	bne.n	802032a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x50>
 80202f8:	6071      	str	r1, [r6, #4]
 80202fa:	60f4      	str	r4, [r6, #12]
 80202fc:	2701      	movs	r7, #1
 80202fe:	f04f 0900 	mov.w	r9, #0
 8020302:	6873      	ldr	r3, [r6, #4]
 8020304:	42a3      	cmp	r3, r4
 8020306:	d03f      	beq.n	8020388 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xae>
 8020308:	6860      	ldr	r0, [r4, #4]
 802030a:	7802      	ldrb	r2, [r0, #0]
 802030c:	2a00      	cmp	r2, #0
 802030e:	d13c      	bne.n	802038a <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0xb0>
 8020310:	6845      	ldr	r5, [r0, #4]
 8020312:	68ab      	ldr	r3, [r5, #8]
 8020314:	4298      	cmp	r0, r3
 8020316:	d123      	bne.n	8020360 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x86>
 8020318:	68eb      	ldr	r3, [r5, #12]
 802031a:	b183      	cbz	r3, 802033e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 802031c:	781a      	ldrb	r2, [r3, #0]
 802031e:	b972      	cbnz	r2, 802033e <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x64>
 8020320:	7007      	strb	r7, [r0, #0]
 8020322:	701f      	strb	r7, [r3, #0]
 8020324:	702a      	strb	r2, [r5, #0]
 8020326:	462c      	mov	r4, r5
 8020328:	e7eb      	b.n	8020302 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x28>
 802032a:	68b3      	ldr	r3, [r6, #8]
 802032c:	4293      	cmp	r3, r2
 802032e:	d1e5      	bne.n	80202fc <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 8020330:	60b1      	str	r1, [r6, #8]
 8020332:	e7e3      	b.n	80202fc <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 8020334:	60d1      	str	r1, [r2, #12]
 8020336:	68f3      	ldr	r3, [r6, #12]
 8020338:	4293      	cmp	r3, r2
 802033a:	d1df      	bne.n	80202fc <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x22>
 802033c:	e7dd      	b.n	80202fa <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x20>
 802033e:	68c3      	ldr	r3, [r0, #12]
 8020340:	42a3      	cmp	r3, r4
 8020342:	d103      	bne.n	802034c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x72>
 8020344:	4641      	mov	r1, r8
 8020346:	f7ff ff72 	bl	802022e <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 802034a:	4604      	mov	r4, r0
 802034c:	6863      	ldr	r3, [r4, #4]
 802034e:	4641      	mov	r1, r8
 8020350:	701f      	strb	r7, [r3, #0]
 8020352:	4628      	mov	r0, r5
 8020354:	f885 9000 	strb.w	r9, [r5]
 8020358:	f7ff ff7e 	bl	8020258 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 802035c:	4625      	mov	r5, r4
 802035e:	e7e2      	b.n	8020326 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x4c>
 8020360:	b113      	cbz	r3, 8020368 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x8e>
 8020362:	781a      	ldrb	r2, [r3, #0]
 8020364:	2a00      	cmp	r2, #0
 8020366:	d0db      	beq.n	8020320 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x46>
 8020368:	6883      	ldr	r3, [r0, #8]
 802036a:	42a3      	cmp	r3, r4
 802036c:	d103      	bne.n	8020376 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x9c>
 802036e:	4641      	mov	r1, r8
 8020370:	f7ff ff72 	bl	8020258 <_ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_>
 8020374:	4604      	mov	r4, r0
 8020376:	6863      	ldr	r3, [r4, #4]
 8020378:	4641      	mov	r1, r8
 802037a:	701f      	strb	r7, [r3, #0]
 802037c:	4628      	mov	r0, r5
 802037e:	f885 9000 	strb.w	r9, [r5]
 8020382:	f7ff ff54 	bl	802022e <_ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_>
 8020386:	e7e9      	b.n	802035c <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_+0x82>
 8020388:	4623      	mov	r3, r4
 802038a:	2201      	movs	r2, #1
 802038c:	701a      	strb	r2, [r3, #0]
 802038e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08020392 <_ZSt17__throw_bad_allocv>:
 8020392:	b508      	push	{r3, lr}
 8020394:	f001 fa0a 	bl	80217ac <abort>

08020398 <_ZSt19__throw_logic_errorPKc>:
 8020398:	b508      	push	{r3, lr}
 802039a:	f001 fa07 	bl	80217ac <abort>

0802039e <_ZSt24__throw_invalid_argumentPKc>:
 802039e:	b508      	push	{r3, lr}
 80203a0:	f001 fa04 	bl	80217ac <abort>

080203a4 <_ZSt20__throw_length_errorPKc>:
 80203a4:	b508      	push	{r3, lr}
 80203a6:	f001 fa01 	bl	80217ac <abort>

080203aa <_ZSt20__throw_out_of_rangePKc>:
 80203aa:	b508      	push	{r3, lr}
 80203ac:	f001 f9fe 	bl	80217ac <abort>

080203b0 <_ZNSt11char_traitsIcE7compareEPKcS2_j>:
 80203b0:	b10a      	cbz	r2, 80203b6 <_ZNSt11char_traitsIcE7compareEPKcS2_j+0x6>
 80203b2:	f001 ba75 	b.w	80218a0 <memcmp>
 80203b6:	4610      	mov	r0, r2
 80203b8:	4770      	bx	lr

080203ba <_ZNSt11char_traitsIcE4copyEPcPKcj>:
 80203ba:	b10a      	cbz	r2, 80203c0 <_ZNSt11char_traitsIcE4copyEPcPKcj+0x6>
 80203bc:	f001 ba7e 	b.w	80218bc <memcpy>
 80203c0:	4770      	bx	lr

080203c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
 80203c2:	6001      	str	r1, [r0, #0]
 80203c4:	4770      	bx	lr

080203c6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
 80203c6:	6800      	ldr	r0, [r0, #0]
 80203c8:	4770      	bx	lr

080203ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
 80203ca:	3008      	adds	r0, #8
 80203cc:	4770      	bx	lr

080203ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEj>:
 80203ce:	6081      	str	r1, [r0, #8]
 80203d0:	4770      	bx	lr

080203d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEj>:
 80203d2:	6803      	ldr	r3, [r0, #0]
 80203d4:	6041      	str	r1, [r0, #4]
 80203d6:	2200      	movs	r2, #0
 80203d8:	545a      	strb	r2, [r3, r1]
 80203da:	4770      	bx	lr

080203dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 80203dc:	b508      	push	{r3, lr}
 80203de:	680b      	ldr	r3, [r1, #0]
 80203e0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80203e4:	d302      	bcc.n	80203ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 80203e6:	480d      	ldr	r0, [pc, #52]	; (802041c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 80203e8:	f7ff ffdc 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
 80203ec:	4293      	cmp	r3, r2
 80203ee:	d90b      	bls.n	8020408 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 80203f0:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 80203f4:	ea4f 0042 	mov.w	r0, r2, lsl #1
 80203f8:	d206      	bcs.n	8020408 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 80203fa:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80203fe:	bf2a      	itet	cs
 8020400:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 8020404:	6008      	strcc	r0, [r1, #0]
 8020406:	600b      	strcs	r3, [r1, #0]
 8020408:	6808      	ldr	r0, [r1, #0]
 802040a:	3001      	adds	r0, #1
 802040c:	d501      	bpl.n	8020412 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 802040e:	f7ff ffc0 	bl	8020392 <_ZSt17__throw_bad_allocv>
 8020412:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8020416:	f7ff bef7 	b.w	8020208 <_Znwj>
 802041a:	bf00      	nop
 802041c:	080252bc 	.word	0x080252bc

08020420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 8020420:	f850 3b08 	ldr.w	r3, [r0], #8
 8020424:	4283      	cmp	r3, r0
 8020426:	d002      	beq.n	802042e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 8020428:	4618      	mov	r0, r3
 802042a:	f7ff beda 	b.w	80201e2 <_ZdlPv>
 802042e:	4770      	bx	lr

08020430 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 8020430:	6840      	ldr	r0, [r0, #4]
 8020432:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8020436:	3901      	subs	r1, #1
 8020438:	1a09      	subs	r1, r1, r0
 802043a:	4291      	cmp	r1, r2
 802043c:	b508      	push	{r3, lr}
 802043e:	d202      	bcs.n	8020446 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 8020440:	4618      	mov	r0, r3
 8020442:	f7ff ffaf 	bl	80203a4 <_ZSt20__throw_length_errorPKc>
 8020446:	bd08      	pop	{r3, pc}

08020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 8020448:	2a01      	cmp	r2, #1
 802044a:	b510      	push	{r4, lr}
 802044c:	d102      	bne.n	8020454 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xc>
 802044e:	780a      	ldrb	r2, [r1, #0]
 8020450:	7002      	strb	r2, [r0, #0]
 8020452:	bd10      	pop	{r4, pc}
 8020454:	f7ff ffb1 	bl	80203ba <_ZNSt11char_traitsIcE4copyEPcPKcj>
 8020458:	e7fb      	b.n	8020452 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0xa>

0802045a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
 802045a:	2a01      	cmp	r2, #1
 802045c:	b430      	push	{r4, r5}
 802045e:	d103      	bne.n	8020468 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xe>
 8020460:	780b      	ldrb	r3, [r1, #0]
 8020462:	7003      	strb	r3, [r0, #0]
 8020464:	bc30      	pop	{r4, r5}
 8020466:	4770      	bx	lr
 8020468:	2a00      	cmp	r2, #0
 802046a:	d0fb      	beq.n	8020464 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xa>
 802046c:	bc30      	pop	{r4, r5}
 802046e:	f001 ba33 	b.w	80218d8 <memmove>

08020472 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
 8020472:	b508      	push	{r3, lr}
 8020474:	1a52      	subs	r2, r2, r1
 8020476:	f7ff ffe7 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802047a:	bd08      	pop	{r3, pc}

0802047c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 802047c:	b508      	push	{r3, lr}
 802047e:	1a52      	subs	r2, r2, r1
 8020480:	f7ff ffe2 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8020484:	bd08      	pop	{r3, pc}

08020486 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
 8020486:	4288      	cmp	r0, r1
 8020488:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802048a:	4604      	mov	r4, r0
 802048c:	460e      	mov	r6, r1
 802048e:	d01e      	beq.n	80204ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x48>
 8020490:	4603      	mov	r3, r0
 8020492:	684d      	ldr	r5, [r1, #4]
 8020494:	f853 2b08 	ldr.w	r2, [r3], #8
 8020498:	429a      	cmp	r2, r3
 802049a:	bf14      	ite	ne
 802049c:	6882      	ldrne	r2, [r0, #8]
 802049e:	220f      	moveq	r2, #15
 80204a0:	42aa      	cmp	r2, r5
 80204a2:	d20a      	bcs.n	80204ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
 80204a4:	a901      	add	r1, sp, #4
 80204a6:	9501      	str	r5, [sp, #4]
 80204a8:	f7ff ff98 	bl	80203dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 80204ac:	4607      	mov	r7, r0
 80204ae:	4620      	mov	r0, r4
 80204b0:	f7ff ffb6 	bl	8020420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80204b4:	9b01      	ldr	r3, [sp, #4]
 80204b6:	6027      	str	r7, [r4, #0]
 80204b8:	60a3      	str	r3, [r4, #8]
 80204ba:	b125      	cbz	r5, 80204c6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x40>
 80204bc:	6831      	ldr	r1, [r6, #0]
 80204be:	6820      	ldr	r0, [r4, #0]
 80204c0:	462a      	mov	r2, r5
 80204c2:	f7ff ffc1 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80204c6:	6823      	ldr	r3, [r4, #0]
 80204c8:	6065      	str	r5, [r4, #4]
 80204ca:	2200      	movs	r2, #0
 80204cc:	555a      	strb	r2, [r3, r5]
 80204ce:	b003      	add	sp, #12
 80204d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080204d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 80204d2:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80204d6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80204d8:	461f      	mov	r7, r3
 80204da:	6843      	ldr	r3, [r0, #4]
 80204dc:	eb01 0802 	add.w	r8, r1, r2
 80204e0:	1ab2      	subs	r2, r6, r2
 80204e2:	441a      	add	r2, r3
 80204e4:	eba3 0908 	sub.w	r9, r3, r8
 80204e8:	4603      	mov	r3, r0
 80204ea:	9201      	str	r2, [sp, #4]
 80204ec:	f853 2b08 	ldr.w	r2, [r3], #8
 80204f0:	429a      	cmp	r2, r3
 80204f2:	bf18      	it	ne
 80204f4:	6882      	ldrne	r2, [r0, #8]
 80204f6:	460d      	mov	r5, r1
 80204f8:	bf08      	it	eq
 80204fa:	220f      	moveq	r2, #15
 80204fc:	a901      	add	r1, sp, #4
 80204fe:	4604      	mov	r4, r0
 8020500:	f7ff ff6c 	bl	80203dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8020504:	4682      	mov	sl, r0
 8020506:	b11d      	cbz	r5, 8020510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 8020508:	6821      	ldr	r1, [r4, #0]
 802050a:	462a      	mov	r2, r5
 802050c:	f7ff ff9c 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8020510:	b137      	cbz	r7, 8020520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8020512:	b12e      	cbz	r6, 8020520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 8020514:	4632      	mov	r2, r6
 8020516:	4639      	mov	r1, r7
 8020518:	eb0a 0005 	add.w	r0, sl, r5
 802051c:	f7ff ff94 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8020520:	f1b9 0f00 	cmp.w	r9, #0
 8020524:	d007      	beq.n	8020536 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 8020526:	6821      	ldr	r1, [r4, #0]
 8020528:	4435      	add	r5, r6
 802052a:	464a      	mov	r2, r9
 802052c:	4441      	add	r1, r8
 802052e:	eb0a 0005 	add.w	r0, sl, r5
 8020532:	f7ff ff89 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8020536:	4620      	mov	r0, r4
 8020538:	f7ff ff72 	bl	8020420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 802053c:	9b01      	ldr	r3, [sp, #4]
 802053e:	f8c4 a000 	str.w	sl, [r4]
 8020542:	60a3      	str	r3, [r4, #8]
 8020544:	b002      	add	sp, #8
 8020546:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0802054a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>:
 802054a:	b538      	push	{r3, r4, r5, lr}
 802054c:	4604      	mov	r4, r0
 802054e:	4615      	mov	r5, r2
 8020550:	4608      	mov	r0, r1
 8020552:	4411      	add	r1, r2
 8020554:	6862      	ldr	r2, [r4, #4]
 8020556:	1a52      	subs	r2, r2, r1
 8020558:	d005      	beq.n	8020566 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 802055a:	b125      	cbz	r5, 8020566 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj+0x1c>
 802055c:	6823      	ldr	r3, [r4, #0]
 802055e:	4419      	add	r1, r3
 8020560:	4418      	add	r0, r3
 8020562:	f7ff ff7a 	bl	802045a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 8020566:	6862      	ldr	r2, [r4, #4]
 8020568:	6823      	ldr	r3, [r4, #0]
 802056a:	1b55      	subs	r5, r2, r5
 802056c:	2200      	movs	r2, #0
 802056e:	6065      	str	r5, [r4, #4]
 8020570:	555a      	strb	r2, [r3, r5]
 8020572:	bd38      	pop	{r3, r4, r5, pc}

08020574 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
 8020574:	f100 0208 	add.w	r2, r0, #8
 8020578:	6002      	str	r2, [r0, #0]
 802057a:	2200      	movs	r2, #0
 802057c:	6042      	str	r2, [r0, #4]
 802057e:	7202      	strb	r2, [r0, #8]
 8020580:	4770      	bx	lr

08020582 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
 8020582:	b570      	push	{r4, r5, r6, lr}
 8020584:	4604      	mov	r4, r0
 8020586:	460e      	mov	r6, r1
 8020588:	3008      	adds	r0, #8
 802058a:	6020      	str	r0, [r4, #0]
 802058c:	f856 3b08 	ldr.w	r3, [r6], #8
 8020590:	429e      	cmp	r6, r3
 8020592:	460d      	mov	r5, r1
 8020594:	d10b      	bne.n	80205ae <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x2c>
 8020596:	2210      	movs	r2, #16
 8020598:	4631      	mov	r1, r6
 802059a:	f7ff ff0e 	bl	80203ba <_ZNSt11char_traitsIcE4copyEPcPKcj>
 802059e:	686b      	ldr	r3, [r5, #4]
 80205a0:	6063      	str	r3, [r4, #4]
 80205a2:	2300      	movs	r3, #0
 80205a4:	602e      	str	r6, [r5, #0]
 80205a6:	606b      	str	r3, [r5, #4]
 80205a8:	722b      	strb	r3, [r5, #8]
 80205aa:	4620      	mov	r0, r4
 80205ac:	bd70      	pop	{r4, r5, r6, pc}
 80205ae:	6023      	str	r3, [r4, #0]
 80205b0:	688b      	ldr	r3, [r1, #8]
 80205b2:	60a3      	str	r3, [r4, #8]
 80205b4:	e7f3      	b.n	802059e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x1c>

080205b6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
 80205b6:	b510      	push	{r4, lr}
 80205b8:	4604      	mov	r4, r0
 80205ba:	f7ff ff31 	bl	8020420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 80205be:	4620      	mov	r0, r4
 80205c0:	bd10      	pop	{r4, pc}

080205c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
 80205c2:	b510      	push	{r4, lr}
 80205c4:	4604      	mov	r4, r0
 80205c6:	f7ff ff5e 	bl	8020486 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 80205ca:	4620      	mov	r0, r4
 80205cc:	bd10      	pop	{r4, pc}

080205ce <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>:
 80205ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80205d0:	460d      	mov	r5, r1
 80205d2:	f851 3b08 	ldr.w	r3, [r1], #8
 80205d6:	686a      	ldr	r2, [r5, #4]
 80205d8:	4299      	cmp	r1, r3
 80205da:	4604      	mov	r4, r0
 80205dc:	6800      	ldr	r0, [r0, #0]
 80205de:	d10d      	bne.n	80205fc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x2e>
 80205e0:	b10a      	cbz	r2, 80205e6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x18>
 80205e2:	f7ff ff31 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80205e6:	686b      	ldr	r3, [r5, #4]
 80205e8:	6822      	ldr	r2, [r4, #0]
 80205ea:	6063      	str	r3, [r4, #4]
 80205ec:	2100      	movs	r1, #0
 80205ee:	54d1      	strb	r1, [r2, r3]
 80205f0:	682a      	ldr	r2, [r5, #0]
 80205f2:	2300      	movs	r3, #0
 80205f4:	606b      	str	r3, [r5, #4]
 80205f6:	7013      	strb	r3, [r2, #0]
 80205f8:	4620      	mov	r0, r4
 80205fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80205fc:	e9c4 3200 	strd	r3, r2, [r4]
 8020600:	f104 0708 	add.w	r7, r4, #8
 8020604:	42b8      	cmp	r0, r7
 8020606:	68ab      	ldr	r3, [r5, #8]
 8020608:	bf18      	it	ne
 802060a:	68a6      	ldrne	r6, [r4, #8]
 802060c:	60a3      	str	r3, [r4, #8]
 802060e:	bf08      	it	eq
 8020610:	2000      	moveq	r0, #0
 8020612:	b110      	cbz	r0, 802061a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x4c>
 8020614:	6028      	str	r0, [r5, #0]
 8020616:	60ae      	str	r6, [r5, #8]
 8020618:	e7ea      	b.n	80205f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>
 802061a:	6029      	str	r1, [r5, #0]
 802061c:	e7e8      	b.n	80205f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_+0x22>

0802061e <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
 802061e:	6840      	ldr	r0, [r0, #4]
 8020620:	4770      	bx	lr

08020622 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:
 8020622:	6840      	ldr	r0, [r0, #4]
 8020624:	4770      	bx	lr

08020626 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj>:
 8020626:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020628:	4605      	mov	r5, r0
 802062a:	6843      	ldr	r3, [r0, #4]
 802062c:	4299      	cmp	r1, r3
 802062e:	bf2c      	ite	cs
 8020630:	9101      	strcs	r1, [sp, #4]
 8020632:	9301      	strcc	r3, [sp, #4]
 8020634:	f855 1b08 	ldr.w	r1, [r5], #8
 8020638:	428d      	cmp	r5, r1
 802063a:	bf18      	it	ne
 802063c:	6882      	ldrne	r2, [r0, #8]
 802063e:	4604      	mov	r4, r0
 8020640:	9801      	ldr	r0, [sp, #4]
 8020642:	bf08      	it	eq
 8020644:	220f      	moveq	r2, #15
 8020646:	4290      	cmp	r0, r2
 8020648:	d012      	beq.n	8020670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 802064a:	d801      	bhi.n	8020650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x2a>
 802064c:	280f      	cmp	r0, #15
 802064e:	d911      	bls.n	8020674 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4e>
 8020650:	a901      	add	r1, sp, #4
 8020652:	4620      	mov	r0, r4
 8020654:	f7ff fec2 	bl	80203dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 8020658:	6862      	ldr	r2, [r4, #4]
 802065a:	6821      	ldr	r1, [r4, #0]
 802065c:	3201      	adds	r2, #1
 802065e:	4605      	mov	r5, r0
 8020660:	f7ff fef2 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8020664:	4620      	mov	r0, r4
 8020666:	f7ff fedb 	bl	8020420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 802066a:	9b01      	ldr	r3, [sp, #4]
 802066c:	6025      	str	r5, [r4, #0]
 802066e:	60a3      	str	r3, [r4, #8]
 8020670:	b003      	add	sp, #12
 8020672:	bd30      	pop	{r4, r5, pc}
 8020674:	428d      	cmp	r5, r1
 8020676:	d0fb      	beq.n	8020670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>
 8020678:	1c5a      	adds	r2, r3, #1
 802067a:	4628      	mov	r0, r5
 802067c:	f7ff fee4 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8020680:	6820      	ldr	r0, [r4, #0]
 8020682:	f7ff fdae 	bl	80201e2 <_ZdlPv>
 8020686:	6025      	str	r5, [r4, #0]
 8020688:	e7f2      	b.n	8020670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj+0x4a>

0802068a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv>:
 802068a:	6843      	ldr	r3, [r0, #4]
 802068c:	6800      	ldr	r0, [r0, #0]
 802068e:	3b01      	subs	r3, #1
 8020690:	4418      	add	r0, r3
 8020692:	4770      	bx	lr

08020694 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc>:
 8020694:	4603      	mov	r3, r0
 8020696:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8020698:	f853 2b08 	ldr.w	r2, [r3], #8
 802069c:	6846      	ldr	r6, [r0, #4]
 802069e:	429a      	cmp	r2, r3
 80206a0:	bf18      	it	ne
 80206a2:	6883      	ldrne	r3, [r0, #8]
 80206a4:	f106 0501 	add.w	r5, r6, #1
 80206a8:	bf08      	it	eq
 80206aa:	230f      	moveq	r3, #15
 80206ac:	429d      	cmp	r5, r3
 80206ae:	4604      	mov	r4, r0
 80206b0:	460f      	mov	r7, r1
 80206b2:	d906      	bls.n	80206c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc+0x2e>
 80206b4:	2301      	movs	r3, #1
 80206b6:	9300      	str	r3, [sp, #0]
 80206b8:	2300      	movs	r3, #0
 80206ba:	461a      	mov	r2, r3
 80206bc:	4631      	mov	r1, r6
 80206be:	f7ff ff08 	bl	80204d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 80206c2:	6823      	ldr	r3, [r4, #0]
 80206c4:	559f      	strb	r7, [r3, r6]
 80206c6:	6823      	ldr	r3, [r4, #0]
 80206c8:	6065      	str	r5, [r4, #4]
 80206ca:	2200      	movs	r2, #0
 80206cc:	555a      	strb	r2, [r3, r5]
 80206ce:	b003      	add	sp, #12
 80206d0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080206d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv>:
 80206d2:	b508      	push	{r3, lr}
 80206d4:	6841      	ldr	r1, [r0, #4]
 80206d6:	2201      	movs	r2, #1
 80206d8:	3901      	subs	r1, #1
 80206da:	f7ff ff36 	bl	802054a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj>
 80206de:	bd08      	pop	{r3, pc}

080206e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>:
 80206e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80206e2:	4604      	mov	r4, r0
 80206e4:	4623      	mov	r3, r4
 80206e6:	6840      	ldr	r0, [r0, #4]
 80206e8:	f853 6b08 	ldr.w	r6, [r3], #8
 80206ec:	429e      	cmp	r6, r3
 80206ee:	bf18      	it	ne
 80206f0:	68a3      	ldrne	r3, [r4, #8]
 80206f2:	eb00 0502 	add.w	r5, r0, r2
 80206f6:	bf08      	it	eq
 80206f8:	230f      	moveq	r3, #15
 80206fa:	429d      	cmp	r5, r3
 80206fc:	d80a      	bhi.n	8020714 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x34>
 80206fe:	b112      	cbz	r2, 8020706 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>
 8020700:	4430      	add	r0, r6
 8020702:	f7ff fea1 	bl	8020448 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8020706:	6823      	ldr	r3, [r4, #0]
 8020708:	6065      	str	r5, [r4, #4]
 802070a:	2200      	movs	r2, #0
 802070c:	4620      	mov	r0, r4
 802070e:	555a      	strb	r2, [r3, r5]
 8020710:	b002      	add	sp, #8
 8020712:	bd70      	pop	{r4, r5, r6, pc}
 8020714:	9200      	str	r2, [sp, #0]
 8020716:	460b      	mov	r3, r1
 8020718:	2200      	movs	r2, #0
 802071a:	4601      	mov	r1, r0
 802071c:	4620      	mov	r0, r4
 802071e:	f7ff fed8 	bl	80204d2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 8020722:	e7f0      	b.n	8020706 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj+0x26>

08020724 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_>:
 8020724:	b508      	push	{r3, lr}
 8020726:	e9d1 1200 	ldrd	r1, r2, [r1]
 802072a:	f7ff ffd9 	bl	80206e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 802072e:	bd08      	pop	{r3, pc}

08020730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj>:
 8020730:	b570      	push	{r4, r5, r6, lr}
 8020732:	4b06      	ldr	r3, [pc, #24]	; (802074c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcj+0x1c>)
 8020734:	4604      	mov	r4, r0
 8020736:	460d      	mov	r5, r1
 8020738:	4616      	mov	r6, r2
 802073a:	2100      	movs	r1, #0
 802073c:	f7ff fe78 	bl	8020430 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 8020740:	4632      	mov	r2, r6
 8020742:	4629      	mov	r1, r5
 8020744:	4620      	mov	r0, r4
 8020746:	f7ff ffcb 	bl	80206e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 802074a:	bd70      	pop	{r4, r5, r6, pc}
 802074c:	080252d4 	.word	0x080252d4

08020750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
 8020750:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020752:	4604      	mov	r4, r0
 8020754:	4608      	mov	r0, r1
 8020756:	460d      	mov	r5, r1
 8020758:	f7df fdaa 	bl	80002b0 <strlen>
 802075c:	4b06      	ldr	r3, [pc, #24]	; (8020778 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc+0x28>)
 802075e:	9001      	str	r0, [sp, #4]
 8020760:	4602      	mov	r2, r0
 8020762:	2100      	movs	r1, #0
 8020764:	4620      	mov	r0, r4
 8020766:	f7ff fe63 	bl	8020430 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 802076a:	9a01      	ldr	r2, [sp, #4]
 802076c:	4629      	mov	r1, r5
 802076e:	4620      	mov	r0, r4
 8020770:	f7ff ffb6 	bl	80206e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj>
 8020774:	b003      	add	sp, #12
 8020776:	bd30      	pop	{r4, r5, pc}
 8020778:	080252d4 	.word	0x080252d4

0802077c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
 802077c:	6800      	ldr	r0, [r0, #0]
 802077e:	4770      	bx	lr

08020780 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>:
 8020780:	b538      	push	{r3, r4, r5, lr}
 8020782:	6845      	ldr	r5, [r0, #4]
 8020784:	684c      	ldr	r4, [r1, #4]
 8020786:	6800      	ldr	r0, [r0, #0]
 8020788:	6809      	ldr	r1, [r1, #0]
 802078a:	42a5      	cmp	r5, r4
 802078c:	462a      	mov	r2, r5
 802078e:	bf28      	it	cs
 8020790:	4622      	movcs	r2, r4
 8020792:	f7ff fe0d 	bl	80203b0 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8020796:	b900      	cbnz	r0, 802079a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_+0x1a>
 8020798:	1b28      	subs	r0, r5, r4
 802079a:	bd38      	pop	{r3, r4, r5, pc}

0802079c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
 802079c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802079e:	6846      	ldr	r6, [r0, #4]
 80207a0:	9101      	str	r1, [sp, #4]
 80207a2:	4605      	mov	r5, r0
 80207a4:	4608      	mov	r0, r1
 80207a6:	f7df fd83 	bl	80002b0 <strlen>
 80207aa:	4286      	cmp	r6, r0
 80207ac:	4604      	mov	r4, r0
 80207ae:	4632      	mov	r2, r6
 80207b0:	9901      	ldr	r1, [sp, #4]
 80207b2:	bf28      	it	cs
 80207b4:	4602      	movcs	r2, r0
 80207b6:	6828      	ldr	r0, [r5, #0]
 80207b8:	f7ff fdfa 	bl	80203b0 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 80207bc:	b900      	cbnz	r0, 80207c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x24>
 80207be:	1b30      	subs	r0, r6, r4
 80207c0:	b002      	add	sp, #8
 80207c2:	bd70      	pop	{r4, r5, r6, pc}

080207c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
 80207c4:	6001      	str	r1, [r0, #0]
 80207c6:	4770      	bx	lr

080207c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
 80207c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80207ca:	4604      	mov	r4, r0
 80207cc:	4616      	mov	r6, r2
 80207ce:	460d      	mov	r5, r1
 80207d0:	b919      	cbnz	r1, 80207da <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 80207d2:	b112      	cbz	r2, 80207da <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 80207d4:	480d      	ldr	r0, [pc, #52]	; (802080c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x44>)
 80207d6:	f7ff fddf 	bl	8020398 <_ZSt19__throw_logic_errorPKc>
 80207da:	1b73      	subs	r3, r6, r5
 80207dc:	2b0f      	cmp	r3, #15
 80207de:	9301      	str	r3, [sp, #4]
 80207e0:	d907      	bls.n	80207f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x2a>
 80207e2:	2200      	movs	r2, #0
 80207e4:	a901      	add	r1, sp, #4
 80207e6:	4620      	mov	r0, r4
 80207e8:	f7ff fdf8 	bl	80203dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 80207ec:	9b01      	ldr	r3, [sp, #4]
 80207ee:	6020      	str	r0, [r4, #0]
 80207f0:	60a3      	str	r3, [r4, #8]
 80207f2:	4632      	mov	r2, r6
 80207f4:	4629      	mov	r1, r5
 80207f6:	6820      	ldr	r0, [r4, #0]
 80207f8:	f7ff fe3b 	bl	8020472 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
 80207fc:	9b01      	ldr	r3, [sp, #4]
 80207fe:	6822      	ldr	r2, [r4, #0]
 8020800:	6063      	str	r3, [r4, #4]
 8020802:	2100      	movs	r1, #0
 8020804:	54d1      	strb	r1, [r2, r3]
 8020806:	b002      	add	sp, #8
 8020808:	bd70      	pop	{r4, r5, r6, pc}
 802080a:	bf00      	nop
 802080c:	080252e9 	.word	0x080252e9

08020810 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
 8020810:	b538      	push	{r3, r4, r5, lr}
 8020812:	f100 0308 	add.w	r3, r0, #8
 8020816:	6003      	str	r3, [r0, #0]
 8020818:	e9d1 5200 	ldrd	r5, r2, [r1]
 802081c:	4604      	mov	r4, r0
 802081e:	f04f 0300 	mov.w	r3, #0
 8020822:	442a      	add	r2, r5
 8020824:	4629      	mov	r1, r5
 8020826:	f7ff ffcf 	bl	80207c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
 802082a:	4620      	mov	r0, r4
 802082c:	bd38      	pop	{r3, r4, r5, pc}
	...

08020830 <_ZSt15get_new_handlerv>:
 8020830:	4b02      	ldr	r3, [pc, #8]	; (802083c <_ZSt15get_new_handlerv+0xc>)
 8020832:	6818      	ldr	r0, [r3, #0]
 8020834:	f3bf 8f5b 	dmb	ish
 8020838:	4770      	bx	lr
 802083a:	bf00      	nop
 802083c:	20000690 	.word	0x20000690

08020840 <pow>:
 8020840:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020844:	ec59 8b10 	vmov	r8, r9, d0
 8020848:	ec57 6b11 	vmov	r6, r7, d1
 802084c:	f000 f8a8 	bl	80209a0 <__ieee754_pow>
 8020850:	4b4e      	ldr	r3, [pc, #312]	; (802098c <pow+0x14c>)
 8020852:	f993 3000 	ldrsb.w	r3, [r3]
 8020856:	3301      	adds	r3, #1
 8020858:	ec55 4b10 	vmov	r4, r5, d0
 802085c:	d015      	beq.n	802088a <pow+0x4a>
 802085e:	4632      	mov	r2, r6
 8020860:	463b      	mov	r3, r7
 8020862:	4630      	mov	r0, r6
 8020864:	4639      	mov	r1, r7
 8020866:	f7e0 f981 	bl	8000b6c <__aeabi_dcmpun>
 802086a:	b970      	cbnz	r0, 802088a <pow+0x4a>
 802086c:	4642      	mov	r2, r8
 802086e:	464b      	mov	r3, r9
 8020870:	4640      	mov	r0, r8
 8020872:	4649      	mov	r1, r9
 8020874:	f7e0 f97a 	bl	8000b6c <__aeabi_dcmpun>
 8020878:	2200      	movs	r2, #0
 802087a:	2300      	movs	r3, #0
 802087c:	b148      	cbz	r0, 8020892 <pow+0x52>
 802087e:	4630      	mov	r0, r6
 8020880:	4639      	mov	r1, r7
 8020882:	f7e0 f941 	bl	8000b08 <__aeabi_dcmpeq>
 8020886:	2800      	cmp	r0, #0
 8020888:	d17d      	bne.n	8020986 <pow+0x146>
 802088a:	ec45 4b10 	vmov	d0, r4, r5
 802088e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020892:	4640      	mov	r0, r8
 8020894:	4649      	mov	r1, r9
 8020896:	f7e0 f937 	bl	8000b08 <__aeabi_dcmpeq>
 802089a:	b1e0      	cbz	r0, 80208d6 <pow+0x96>
 802089c:	2200      	movs	r2, #0
 802089e:	2300      	movs	r3, #0
 80208a0:	4630      	mov	r0, r6
 80208a2:	4639      	mov	r1, r7
 80208a4:	f7e0 f930 	bl	8000b08 <__aeabi_dcmpeq>
 80208a8:	2800      	cmp	r0, #0
 80208aa:	d16c      	bne.n	8020986 <pow+0x146>
 80208ac:	ec47 6b10 	vmov	d0, r6, r7
 80208b0:	f000 fe55 	bl	802155e <finite>
 80208b4:	2800      	cmp	r0, #0
 80208b6:	d0e8      	beq.n	802088a <pow+0x4a>
 80208b8:	2200      	movs	r2, #0
 80208ba:	2300      	movs	r3, #0
 80208bc:	4630      	mov	r0, r6
 80208be:	4639      	mov	r1, r7
 80208c0:	f7e0 f92c 	bl	8000b1c <__aeabi_dcmplt>
 80208c4:	2800      	cmp	r0, #0
 80208c6:	d0e0      	beq.n	802088a <pow+0x4a>
 80208c8:	f000 ff7e 	bl	80217c8 <__errno>
 80208cc:	2321      	movs	r3, #33	; 0x21
 80208ce:	6003      	str	r3, [r0, #0]
 80208d0:	2400      	movs	r4, #0
 80208d2:	4d2f      	ldr	r5, [pc, #188]	; (8020990 <pow+0x150>)
 80208d4:	e7d9      	b.n	802088a <pow+0x4a>
 80208d6:	ec45 4b10 	vmov	d0, r4, r5
 80208da:	f000 fe40 	bl	802155e <finite>
 80208de:	bbb8      	cbnz	r0, 8020950 <pow+0x110>
 80208e0:	ec49 8b10 	vmov	d0, r8, r9
 80208e4:	f000 fe3b 	bl	802155e <finite>
 80208e8:	b390      	cbz	r0, 8020950 <pow+0x110>
 80208ea:	ec47 6b10 	vmov	d0, r6, r7
 80208ee:	f000 fe36 	bl	802155e <finite>
 80208f2:	b368      	cbz	r0, 8020950 <pow+0x110>
 80208f4:	4622      	mov	r2, r4
 80208f6:	462b      	mov	r3, r5
 80208f8:	4620      	mov	r0, r4
 80208fa:	4629      	mov	r1, r5
 80208fc:	f7e0 f936 	bl	8000b6c <__aeabi_dcmpun>
 8020900:	b160      	cbz	r0, 802091c <pow+0xdc>
 8020902:	f000 ff61 	bl	80217c8 <__errno>
 8020906:	2321      	movs	r3, #33	; 0x21
 8020908:	6003      	str	r3, [r0, #0]
 802090a:	2200      	movs	r2, #0
 802090c:	2300      	movs	r3, #0
 802090e:	4610      	mov	r0, r2
 8020910:	4619      	mov	r1, r3
 8020912:	f7df ffbb 	bl	800088c <__aeabi_ddiv>
 8020916:	4604      	mov	r4, r0
 8020918:	460d      	mov	r5, r1
 802091a:	e7b6      	b.n	802088a <pow+0x4a>
 802091c:	f000 ff54 	bl	80217c8 <__errno>
 8020920:	2322      	movs	r3, #34	; 0x22
 8020922:	6003      	str	r3, [r0, #0]
 8020924:	2200      	movs	r2, #0
 8020926:	2300      	movs	r3, #0
 8020928:	4640      	mov	r0, r8
 802092a:	4649      	mov	r1, r9
 802092c:	f7e0 f8f6 	bl	8000b1c <__aeabi_dcmplt>
 8020930:	2400      	movs	r4, #0
 8020932:	b158      	cbz	r0, 802094c <pow+0x10c>
 8020934:	ec47 6b10 	vmov	d0, r6, r7
 8020938:	f000 fe26 	bl	8021588 <rint>
 802093c:	4632      	mov	r2, r6
 802093e:	ec51 0b10 	vmov	r0, r1, d0
 8020942:	463b      	mov	r3, r7
 8020944:	f7e0 f8e0 	bl	8000b08 <__aeabi_dcmpeq>
 8020948:	2800      	cmp	r0, #0
 802094a:	d0c2      	beq.n	80208d2 <pow+0x92>
 802094c:	4d11      	ldr	r5, [pc, #68]	; (8020994 <pow+0x154>)
 802094e:	e79c      	b.n	802088a <pow+0x4a>
 8020950:	2200      	movs	r2, #0
 8020952:	2300      	movs	r3, #0
 8020954:	4620      	mov	r0, r4
 8020956:	4629      	mov	r1, r5
 8020958:	f7e0 f8d6 	bl	8000b08 <__aeabi_dcmpeq>
 802095c:	2800      	cmp	r0, #0
 802095e:	d094      	beq.n	802088a <pow+0x4a>
 8020960:	ec49 8b10 	vmov	d0, r8, r9
 8020964:	f000 fdfb 	bl	802155e <finite>
 8020968:	2800      	cmp	r0, #0
 802096a:	d08e      	beq.n	802088a <pow+0x4a>
 802096c:	ec47 6b10 	vmov	d0, r6, r7
 8020970:	f000 fdf5 	bl	802155e <finite>
 8020974:	2800      	cmp	r0, #0
 8020976:	d088      	beq.n	802088a <pow+0x4a>
 8020978:	f000 ff26 	bl	80217c8 <__errno>
 802097c:	2322      	movs	r3, #34	; 0x22
 802097e:	6003      	str	r3, [r0, #0]
 8020980:	2400      	movs	r4, #0
 8020982:	2500      	movs	r5, #0
 8020984:	e781      	b.n	802088a <pow+0x4a>
 8020986:	4d04      	ldr	r5, [pc, #16]	; (8020998 <pow+0x158>)
 8020988:	2400      	movs	r4, #0
 802098a:	e77e      	b.n	802088a <pow+0x4a>
 802098c:	20000009 	.word	0x20000009
 8020990:	fff00000 	.word	0xfff00000
 8020994:	7ff00000 	.word	0x7ff00000
 8020998:	3ff00000 	.word	0x3ff00000
 802099c:	00000000 	.word	0x00000000

080209a0 <__ieee754_pow>:
 80209a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209a4:	ed2d 8b06 	vpush	{d8-d10}
 80209a8:	b08d      	sub	sp, #52	; 0x34
 80209aa:	ed8d 1b02 	vstr	d1, [sp, #8]
 80209ae:	e9dd 0702 	ldrd	r0, r7, [sp, #8]
 80209b2:	f027 4600 	bic.w	r6, r7, #2147483648	; 0x80000000
 80209b6:	ea56 0100 	orrs.w	r1, r6, r0
 80209ba:	ec53 2b10 	vmov	r2, r3, d0
 80209be:	f000 84d1 	beq.w	8021364 <__ieee754_pow+0x9c4>
 80209c2:	497f      	ldr	r1, [pc, #508]	; (8020bc0 <__ieee754_pow+0x220>)
 80209c4:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 80209c8:	428c      	cmp	r4, r1
 80209ca:	ee10 8a10 	vmov	r8, s0
 80209ce:	4699      	mov	r9, r3
 80209d0:	dc09      	bgt.n	80209e6 <__ieee754_pow+0x46>
 80209d2:	d103      	bne.n	80209dc <__ieee754_pow+0x3c>
 80209d4:	b97a      	cbnz	r2, 80209f6 <__ieee754_pow+0x56>
 80209d6:	42a6      	cmp	r6, r4
 80209d8:	dd02      	ble.n	80209e0 <__ieee754_pow+0x40>
 80209da:	e00c      	b.n	80209f6 <__ieee754_pow+0x56>
 80209dc:	428e      	cmp	r6, r1
 80209de:	dc02      	bgt.n	80209e6 <__ieee754_pow+0x46>
 80209e0:	428e      	cmp	r6, r1
 80209e2:	d110      	bne.n	8020a06 <__ieee754_pow+0x66>
 80209e4:	b178      	cbz	r0, 8020a06 <__ieee754_pow+0x66>
 80209e6:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 80209ea:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 80209ee:	ea54 0308 	orrs.w	r3, r4, r8
 80209f2:	f000 84b7 	beq.w	8021364 <__ieee754_pow+0x9c4>
 80209f6:	4873      	ldr	r0, [pc, #460]	; (8020bc4 <__ieee754_pow+0x224>)
 80209f8:	b00d      	add	sp, #52	; 0x34
 80209fa:	ecbd 8b06 	vpop	{d8-d10}
 80209fe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a02:	f000 bdb9 	b.w	8021578 <nan>
 8020a06:	f1b9 0f00 	cmp.w	r9, #0
 8020a0a:	da36      	bge.n	8020a7a <__ieee754_pow+0xda>
 8020a0c:	496e      	ldr	r1, [pc, #440]	; (8020bc8 <__ieee754_pow+0x228>)
 8020a0e:	428e      	cmp	r6, r1
 8020a10:	dc51      	bgt.n	8020ab6 <__ieee754_pow+0x116>
 8020a12:	f1a1 7154 	sub.w	r1, r1, #55574528	; 0x3500000
 8020a16:	428e      	cmp	r6, r1
 8020a18:	f340 84af 	ble.w	802137a <__ieee754_pow+0x9da>
 8020a1c:	1531      	asrs	r1, r6, #20
 8020a1e:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 8020a22:	2914      	cmp	r1, #20
 8020a24:	dd0f      	ble.n	8020a46 <__ieee754_pow+0xa6>
 8020a26:	f1c1 0134 	rsb	r1, r1, #52	; 0x34
 8020a2a:	fa20 fc01 	lsr.w	ip, r0, r1
 8020a2e:	fa0c f101 	lsl.w	r1, ip, r1
 8020a32:	4281      	cmp	r1, r0
 8020a34:	f040 84a1 	bne.w	802137a <__ieee754_pow+0x9da>
 8020a38:	f00c 0c01 	and.w	ip, ip, #1
 8020a3c:	f1cc 0102 	rsb	r1, ip, #2
 8020a40:	9100      	str	r1, [sp, #0]
 8020a42:	b180      	cbz	r0, 8020a66 <__ieee754_pow+0xc6>
 8020a44:	e059      	b.n	8020afa <__ieee754_pow+0x15a>
 8020a46:	2800      	cmp	r0, #0
 8020a48:	d155      	bne.n	8020af6 <__ieee754_pow+0x156>
 8020a4a:	f1c1 0114 	rsb	r1, r1, #20
 8020a4e:	fa46 fc01 	asr.w	ip, r6, r1
 8020a52:	fa0c f101 	lsl.w	r1, ip, r1
 8020a56:	42b1      	cmp	r1, r6
 8020a58:	f040 848c 	bne.w	8021374 <__ieee754_pow+0x9d4>
 8020a5c:	f00c 0c01 	and.w	ip, ip, #1
 8020a60:	f1cc 0102 	rsb	r1, ip, #2
 8020a64:	9100      	str	r1, [sp, #0]
 8020a66:	4959      	ldr	r1, [pc, #356]	; (8020bcc <__ieee754_pow+0x22c>)
 8020a68:	428e      	cmp	r6, r1
 8020a6a:	d12d      	bne.n	8020ac8 <__ieee754_pow+0x128>
 8020a6c:	2f00      	cmp	r7, #0
 8020a6e:	da79      	bge.n	8020b64 <__ieee754_pow+0x1c4>
 8020a70:	4956      	ldr	r1, [pc, #344]	; (8020bcc <__ieee754_pow+0x22c>)
 8020a72:	2000      	movs	r0, #0
 8020a74:	f7df ff0a 	bl	800088c <__aeabi_ddiv>
 8020a78:	e016      	b.n	8020aa8 <__ieee754_pow+0x108>
 8020a7a:	2100      	movs	r1, #0
 8020a7c:	9100      	str	r1, [sp, #0]
 8020a7e:	2800      	cmp	r0, #0
 8020a80:	d13b      	bne.n	8020afa <__ieee754_pow+0x15a>
 8020a82:	494f      	ldr	r1, [pc, #316]	; (8020bc0 <__ieee754_pow+0x220>)
 8020a84:	428e      	cmp	r6, r1
 8020a86:	d1ee      	bne.n	8020a66 <__ieee754_pow+0xc6>
 8020a88:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 8020a8c:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8020a90:	ea53 0308 	orrs.w	r3, r3, r8
 8020a94:	f000 8466 	beq.w	8021364 <__ieee754_pow+0x9c4>
 8020a98:	4b4d      	ldr	r3, [pc, #308]	; (8020bd0 <__ieee754_pow+0x230>)
 8020a9a:	429c      	cmp	r4, r3
 8020a9c:	dd0d      	ble.n	8020aba <__ieee754_pow+0x11a>
 8020a9e:	2f00      	cmp	r7, #0
 8020aa0:	f280 8464 	bge.w	802136c <__ieee754_pow+0x9cc>
 8020aa4:	2000      	movs	r0, #0
 8020aa6:	2100      	movs	r1, #0
 8020aa8:	ec41 0b10 	vmov	d0, r0, r1
 8020aac:	b00d      	add	sp, #52	; 0x34
 8020aae:	ecbd 8b06 	vpop	{d8-d10}
 8020ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ab6:	2102      	movs	r1, #2
 8020ab8:	e7e0      	b.n	8020a7c <__ieee754_pow+0xdc>
 8020aba:	2f00      	cmp	r7, #0
 8020abc:	daf2      	bge.n	8020aa4 <__ieee754_pow+0x104>
 8020abe:	e9dd 0302 	ldrd	r0, r3, [sp, #8]
 8020ac2:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8020ac6:	e7ef      	b.n	8020aa8 <__ieee754_pow+0x108>
 8020ac8:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 8020acc:	d104      	bne.n	8020ad8 <__ieee754_pow+0x138>
 8020ace:	4610      	mov	r0, r2
 8020ad0:	4619      	mov	r1, r3
 8020ad2:	f7df fdb1 	bl	8000638 <__aeabi_dmul>
 8020ad6:	e7e7      	b.n	8020aa8 <__ieee754_pow+0x108>
 8020ad8:	493e      	ldr	r1, [pc, #248]	; (8020bd4 <__ieee754_pow+0x234>)
 8020ada:	428f      	cmp	r7, r1
 8020adc:	d10d      	bne.n	8020afa <__ieee754_pow+0x15a>
 8020ade:	f1b9 0f00 	cmp.w	r9, #0
 8020ae2:	db0a      	blt.n	8020afa <__ieee754_pow+0x15a>
 8020ae4:	ec43 2b10 	vmov	d0, r2, r3
 8020ae8:	b00d      	add	sp, #52	; 0x34
 8020aea:	ecbd 8b06 	vpop	{d8-d10}
 8020aee:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020af2:	f000 bc77 	b.w	80213e4 <__ieee754_sqrt>
 8020af6:	2100      	movs	r1, #0
 8020af8:	9100      	str	r1, [sp, #0]
 8020afa:	ec43 2b10 	vmov	d0, r2, r3
 8020afe:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8020b02:	f000 fd23 	bl	802154c <fabs>
 8020b06:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8020b0a:	ec51 0b10 	vmov	r0, r1, d0
 8020b0e:	f1b8 0f00 	cmp.w	r8, #0
 8020b12:	d12a      	bne.n	8020b6a <__ieee754_pow+0x1ca>
 8020b14:	b12c      	cbz	r4, 8020b22 <__ieee754_pow+0x182>
 8020b16:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 8020bcc <__ieee754_pow+0x22c>
 8020b1a:	f029 4e40 	bic.w	lr, r9, #3221225472	; 0xc0000000
 8020b1e:	45e6      	cmp	lr, ip
 8020b20:	d123      	bne.n	8020b6a <__ieee754_pow+0x1ca>
 8020b22:	2f00      	cmp	r7, #0
 8020b24:	da05      	bge.n	8020b32 <__ieee754_pow+0x192>
 8020b26:	4602      	mov	r2, r0
 8020b28:	460b      	mov	r3, r1
 8020b2a:	2000      	movs	r0, #0
 8020b2c:	4927      	ldr	r1, [pc, #156]	; (8020bcc <__ieee754_pow+0x22c>)
 8020b2e:	f7df fead 	bl	800088c <__aeabi_ddiv>
 8020b32:	f1b9 0f00 	cmp.w	r9, #0
 8020b36:	dab7      	bge.n	8020aa8 <__ieee754_pow+0x108>
 8020b38:	9b00      	ldr	r3, [sp, #0]
 8020b3a:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8020b3e:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8020b42:	4323      	orrs	r3, r4
 8020b44:	d108      	bne.n	8020b58 <__ieee754_pow+0x1b8>
 8020b46:	4602      	mov	r2, r0
 8020b48:	460b      	mov	r3, r1
 8020b4a:	4610      	mov	r0, r2
 8020b4c:	4619      	mov	r1, r3
 8020b4e:	f7df fbbb 	bl	80002c8 <__aeabi_dsub>
 8020b52:	4602      	mov	r2, r0
 8020b54:	460b      	mov	r3, r1
 8020b56:	e78d      	b.n	8020a74 <__ieee754_pow+0xd4>
 8020b58:	9b00      	ldr	r3, [sp, #0]
 8020b5a:	2b01      	cmp	r3, #1
 8020b5c:	d1a4      	bne.n	8020aa8 <__ieee754_pow+0x108>
 8020b5e:	4602      	mov	r2, r0
 8020b60:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8020b64:	4610      	mov	r0, r2
 8020b66:	4619      	mov	r1, r3
 8020b68:	e79e      	b.n	8020aa8 <__ieee754_pow+0x108>
 8020b6a:	ea4f 7cd9 	mov.w	ip, r9, lsr #31
 8020b6e:	f10c 35ff 	add.w	r5, ip, #4294967295
 8020b72:	950a      	str	r5, [sp, #40]	; 0x28
 8020b74:	9d00      	ldr	r5, [sp, #0]
 8020b76:	46ac      	mov	ip, r5
 8020b78:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8020b7a:	ea5c 0505 	orrs.w	r5, ip, r5
 8020b7e:	d0e4      	beq.n	8020b4a <__ieee754_pow+0x1aa>
 8020b80:	4b15      	ldr	r3, [pc, #84]	; (8020bd8 <__ieee754_pow+0x238>)
 8020b82:	429e      	cmp	r6, r3
 8020b84:	f340 80fc 	ble.w	8020d80 <__ieee754_pow+0x3e0>
 8020b88:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8020b8c:	429e      	cmp	r6, r3
 8020b8e:	4b10      	ldr	r3, [pc, #64]	; (8020bd0 <__ieee754_pow+0x230>)
 8020b90:	dd07      	ble.n	8020ba2 <__ieee754_pow+0x202>
 8020b92:	429c      	cmp	r4, r3
 8020b94:	dc0a      	bgt.n	8020bac <__ieee754_pow+0x20c>
 8020b96:	2f00      	cmp	r7, #0
 8020b98:	da84      	bge.n	8020aa4 <__ieee754_pow+0x104>
 8020b9a:	a307      	add	r3, pc, #28	; (adr r3, 8020bb8 <__ieee754_pow+0x218>)
 8020b9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020ba0:	e795      	b.n	8020ace <__ieee754_pow+0x12e>
 8020ba2:	429c      	cmp	r4, r3
 8020ba4:	dbf7      	blt.n	8020b96 <__ieee754_pow+0x1f6>
 8020ba6:	4b09      	ldr	r3, [pc, #36]	; (8020bcc <__ieee754_pow+0x22c>)
 8020ba8:	429c      	cmp	r4, r3
 8020baa:	dd17      	ble.n	8020bdc <__ieee754_pow+0x23c>
 8020bac:	2f00      	cmp	r7, #0
 8020bae:	dcf4      	bgt.n	8020b9a <__ieee754_pow+0x1fa>
 8020bb0:	e778      	b.n	8020aa4 <__ieee754_pow+0x104>
 8020bb2:	bf00      	nop
 8020bb4:	f3af 8000 	nop.w
 8020bb8:	8800759c 	.word	0x8800759c
 8020bbc:	7e37e43c 	.word	0x7e37e43c
 8020bc0:	7ff00000 	.word	0x7ff00000
 8020bc4:	0802571f 	.word	0x0802571f
 8020bc8:	433fffff 	.word	0x433fffff
 8020bcc:	3ff00000 	.word	0x3ff00000
 8020bd0:	3fefffff 	.word	0x3fefffff
 8020bd4:	3fe00000 	.word	0x3fe00000
 8020bd8:	41e00000 	.word	0x41e00000
 8020bdc:	4b64      	ldr	r3, [pc, #400]	; (8020d70 <__ieee754_pow+0x3d0>)
 8020bde:	2200      	movs	r2, #0
 8020be0:	f7df fb72 	bl	80002c8 <__aeabi_dsub>
 8020be4:	a356      	add	r3, pc, #344	; (adr r3, 8020d40 <__ieee754_pow+0x3a0>)
 8020be6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020bea:	4604      	mov	r4, r0
 8020bec:	460d      	mov	r5, r1
 8020bee:	f7df fd23 	bl	8000638 <__aeabi_dmul>
 8020bf2:	a355      	add	r3, pc, #340	; (adr r3, 8020d48 <__ieee754_pow+0x3a8>)
 8020bf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020bf8:	4606      	mov	r6, r0
 8020bfa:	460f      	mov	r7, r1
 8020bfc:	4620      	mov	r0, r4
 8020bfe:	4629      	mov	r1, r5
 8020c00:	f7df fd1a 	bl	8000638 <__aeabi_dmul>
 8020c04:	4b5b      	ldr	r3, [pc, #364]	; (8020d74 <__ieee754_pow+0x3d4>)
 8020c06:	4682      	mov	sl, r0
 8020c08:	468b      	mov	fp, r1
 8020c0a:	2200      	movs	r2, #0
 8020c0c:	4620      	mov	r0, r4
 8020c0e:	4629      	mov	r1, r5
 8020c10:	f7df fd12 	bl	8000638 <__aeabi_dmul>
 8020c14:	4602      	mov	r2, r0
 8020c16:	460b      	mov	r3, r1
 8020c18:	a14d      	add	r1, pc, #308	; (adr r1, 8020d50 <__ieee754_pow+0x3b0>)
 8020c1a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020c1e:	f7df fb53 	bl	80002c8 <__aeabi_dsub>
 8020c22:	4622      	mov	r2, r4
 8020c24:	462b      	mov	r3, r5
 8020c26:	f7df fd07 	bl	8000638 <__aeabi_dmul>
 8020c2a:	4602      	mov	r2, r0
 8020c2c:	460b      	mov	r3, r1
 8020c2e:	2000      	movs	r0, #0
 8020c30:	4951      	ldr	r1, [pc, #324]	; (8020d78 <__ieee754_pow+0x3d8>)
 8020c32:	f7df fb49 	bl	80002c8 <__aeabi_dsub>
 8020c36:	4622      	mov	r2, r4
 8020c38:	4680      	mov	r8, r0
 8020c3a:	4689      	mov	r9, r1
 8020c3c:	462b      	mov	r3, r5
 8020c3e:	4620      	mov	r0, r4
 8020c40:	4629      	mov	r1, r5
 8020c42:	f7df fcf9 	bl	8000638 <__aeabi_dmul>
 8020c46:	4602      	mov	r2, r0
 8020c48:	460b      	mov	r3, r1
 8020c4a:	4640      	mov	r0, r8
 8020c4c:	4649      	mov	r1, r9
 8020c4e:	f7df fcf3 	bl	8000638 <__aeabi_dmul>
 8020c52:	a341      	add	r3, pc, #260	; (adr r3, 8020d58 <__ieee754_pow+0x3b8>)
 8020c54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020c58:	f7df fcee 	bl	8000638 <__aeabi_dmul>
 8020c5c:	4602      	mov	r2, r0
 8020c5e:	460b      	mov	r3, r1
 8020c60:	4650      	mov	r0, sl
 8020c62:	4659      	mov	r1, fp
 8020c64:	f7df fb30 	bl	80002c8 <__aeabi_dsub>
 8020c68:	4602      	mov	r2, r0
 8020c6a:	460b      	mov	r3, r1
 8020c6c:	4680      	mov	r8, r0
 8020c6e:	4689      	mov	r9, r1
 8020c70:	4630      	mov	r0, r6
 8020c72:	4639      	mov	r1, r7
 8020c74:	f7df fb2a 	bl	80002cc <__adddf3>
 8020c78:	2400      	movs	r4, #0
 8020c7a:	4632      	mov	r2, r6
 8020c7c:	463b      	mov	r3, r7
 8020c7e:	4620      	mov	r0, r4
 8020c80:	460d      	mov	r5, r1
 8020c82:	f7df fb21 	bl	80002c8 <__aeabi_dsub>
 8020c86:	4602      	mov	r2, r0
 8020c88:	460b      	mov	r3, r1
 8020c8a:	4640      	mov	r0, r8
 8020c8c:	4649      	mov	r1, r9
 8020c8e:	f7df fb1b 	bl	80002c8 <__aeabi_dsub>
 8020c92:	9b00      	ldr	r3, [sp, #0]
 8020c94:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020c96:	3b01      	subs	r3, #1
 8020c98:	4313      	orrs	r3, r2
 8020c9a:	4682      	mov	sl, r0
 8020c9c:	468b      	mov	fp, r1
 8020c9e:	f040 81f1 	bne.w	8021084 <__ieee754_pow+0x6e4>
 8020ca2:	ed9f 7b2f 	vldr	d7, [pc, #188]	; 8020d60 <__ieee754_pow+0x3c0>
 8020ca6:	eeb0 8a47 	vmov.f32	s16, s14
 8020caa:	eef0 8a67 	vmov.f32	s17, s15
 8020cae:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8020cb2:	2600      	movs	r6, #0
 8020cb4:	4632      	mov	r2, r6
 8020cb6:	463b      	mov	r3, r7
 8020cb8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020cbc:	f7df fb04 	bl	80002c8 <__aeabi_dsub>
 8020cc0:	4622      	mov	r2, r4
 8020cc2:	462b      	mov	r3, r5
 8020cc4:	f7df fcb8 	bl	8000638 <__aeabi_dmul>
 8020cc8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8020ccc:	4680      	mov	r8, r0
 8020cce:	4689      	mov	r9, r1
 8020cd0:	4650      	mov	r0, sl
 8020cd2:	4659      	mov	r1, fp
 8020cd4:	f7df fcb0 	bl	8000638 <__aeabi_dmul>
 8020cd8:	4602      	mov	r2, r0
 8020cda:	460b      	mov	r3, r1
 8020cdc:	4640      	mov	r0, r8
 8020cde:	4649      	mov	r1, r9
 8020ce0:	f7df faf4 	bl	80002cc <__adddf3>
 8020ce4:	4632      	mov	r2, r6
 8020ce6:	463b      	mov	r3, r7
 8020ce8:	4680      	mov	r8, r0
 8020cea:	4689      	mov	r9, r1
 8020cec:	4620      	mov	r0, r4
 8020cee:	4629      	mov	r1, r5
 8020cf0:	f7df fca2 	bl	8000638 <__aeabi_dmul>
 8020cf4:	460b      	mov	r3, r1
 8020cf6:	4604      	mov	r4, r0
 8020cf8:	460d      	mov	r5, r1
 8020cfa:	4602      	mov	r2, r0
 8020cfc:	4649      	mov	r1, r9
 8020cfe:	4640      	mov	r0, r8
 8020d00:	f7df fae4 	bl	80002cc <__adddf3>
 8020d04:	4b1d      	ldr	r3, [pc, #116]	; (8020d7c <__ieee754_pow+0x3dc>)
 8020d06:	4299      	cmp	r1, r3
 8020d08:	ec45 4b19 	vmov	d9, r4, r5
 8020d0c:	4606      	mov	r6, r0
 8020d0e:	460f      	mov	r7, r1
 8020d10:	468b      	mov	fp, r1
 8020d12:	f340 82fe 	ble.w	8021312 <__ieee754_pow+0x972>
 8020d16:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 8020d1a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 8020d1e:	4303      	orrs	r3, r0
 8020d20:	f000 81f0 	beq.w	8021104 <__ieee754_pow+0x764>
 8020d24:	a310      	add	r3, pc, #64	; (adr r3, 8020d68 <__ieee754_pow+0x3c8>)
 8020d26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020d2a:	ec51 0b18 	vmov	r0, r1, d8
 8020d2e:	f7df fc83 	bl	8000638 <__aeabi_dmul>
 8020d32:	a30d      	add	r3, pc, #52	; (adr r3, 8020d68 <__ieee754_pow+0x3c8>)
 8020d34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020d38:	e6cb      	b.n	8020ad2 <__ieee754_pow+0x132>
 8020d3a:	bf00      	nop
 8020d3c:	f3af 8000 	nop.w
 8020d40:	60000000 	.word	0x60000000
 8020d44:	3ff71547 	.word	0x3ff71547
 8020d48:	f85ddf44 	.word	0xf85ddf44
 8020d4c:	3e54ae0b 	.word	0x3e54ae0b
 8020d50:	55555555 	.word	0x55555555
 8020d54:	3fd55555 	.word	0x3fd55555
 8020d58:	652b82fe 	.word	0x652b82fe
 8020d5c:	3ff71547 	.word	0x3ff71547
 8020d60:	00000000 	.word	0x00000000
 8020d64:	bff00000 	.word	0xbff00000
 8020d68:	8800759c 	.word	0x8800759c
 8020d6c:	7e37e43c 	.word	0x7e37e43c
 8020d70:	3ff00000 	.word	0x3ff00000
 8020d74:	3fd00000 	.word	0x3fd00000
 8020d78:	3fe00000 	.word	0x3fe00000
 8020d7c:	408fffff 	.word	0x408fffff
 8020d80:	4bd7      	ldr	r3, [pc, #860]	; (80210e0 <__ieee754_pow+0x740>)
 8020d82:	ea03 0309 	and.w	r3, r3, r9
 8020d86:	2200      	movs	r2, #0
 8020d88:	b92b      	cbnz	r3, 8020d96 <__ieee754_pow+0x3f6>
 8020d8a:	4bd6      	ldr	r3, [pc, #856]	; (80210e4 <__ieee754_pow+0x744>)
 8020d8c:	f7df fc54 	bl	8000638 <__aeabi_dmul>
 8020d90:	f06f 0234 	mvn.w	r2, #52	; 0x34
 8020d94:	460c      	mov	r4, r1
 8020d96:	1523      	asrs	r3, r4, #20
 8020d98:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8020d9c:	4413      	add	r3, r2
 8020d9e:	9309      	str	r3, [sp, #36]	; 0x24
 8020da0:	4bd1      	ldr	r3, [pc, #836]	; (80210e8 <__ieee754_pow+0x748>)
 8020da2:	f3c4 0413 	ubfx	r4, r4, #0, #20
 8020da6:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 8020daa:	429c      	cmp	r4, r3
 8020dac:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8020db0:	dd08      	ble.n	8020dc4 <__ieee754_pow+0x424>
 8020db2:	4bce      	ldr	r3, [pc, #824]	; (80210ec <__ieee754_pow+0x74c>)
 8020db4:	429c      	cmp	r4, r3
 8020db6:	f340 8163 	ble.w	8021080 <__ieee754_pow+0x6e0>
 8020dba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020dbc:	3301      	adds	r3, #1
 8020dbe:	9309      	str	r3, [sp, #36]	; 0x24
 8020dc0:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 8020dc4:	2400      	movs	r4, #0
 8020dc6:	00e3      	lsls	r3, r4, #3
 8020dc8:	930b      	str	r3, [sp, #44]	; 0x2c
 8020dca:	4bc9      	ldr	r3, [pc, #804]	; (80210f0 <__ieee754_pow+0x750>)
 8020dcc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8020dd0:	ed93 7b00 	vldr	d7, [r3]
 8020dd4:	4629      	mov	r1, r5
 8020dd6:	ec53 2b17 	vmov	r2, r3, d7
 8020dda:	eeb0 8a47 	vmov.f32	s16, s14
 8020dde:	eef0 8a67 	vmov.f32	s17, s15
 8020de2:	4682      	mov	sl, r0
 8020de4:	f7df fa70 	bl	80002c8 <__aeabi_dsub>
 8020de8:	4652      	mov	r2, sl
 8020dea:	4606      	mov	r6, r0
 8020dec:	460f      	mov	r7, r1
 8020dee:	462b      	mov	r3, r5
 8020df0:	ec51 0b18 	vmov	r0, r1, d8
 8020df4:	f7df fa6a 	bl	80002cc <__adddf3>
 8020df8:	4602      	mov	r2, r0
 8020dfa:	460b      	mov	r3, r1
 8020dfc:	2000      	movs	r0, #0
 8020dfe:	49bd      	ldr	r1, [pc, #756]	; (80210f4 <__ieee754_pow+0x754>)
 8020e00:	f7df fd44 	bl	800088c <__aeabi_ddiv>
 8020e04:	ec41 0b19 	vmov	d9, r0, r1
 8020e08:	4602      	mov	r2, r0
 8020e0a:	460b      	mov	r3, r1
 8020e0c:	4630      	mov	r0, r6
 8020e0e:	4639      	mov	r1, r7
 8020e10:	f7df fc12 	bl	8000638 <__aeabi_dmul>
 8020e14:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8020e18:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8020e1c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8020e20:	2300      	movs	r3, #0
 8020e22:	9304      	str	r3, [sp, #16]
 8020e24:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8020e28:	46ab      	mov	fp, r5
 8020e2a:	106d      	asrs	r5, r5, #1
 8020e2c:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8020e30:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 8020e34:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 8020e38:	2200      	movs	r2, #0
 8020e3a:	4640      	mov	r0, r8
 8020e3c:	4649      	mov	r1, r9
 8020e3e:	4614      	mov	r4, r2
 8020e40:	461d      	mov	r5, r3
 8020e42:	f7df fbf9 	bl	8000638 <__aeabi_dmul>
 8020e46:	4602      	mov	r2, r0
 8020e48:	460b      	mov	r3, r1
 8020e4a:	4630      	mov	r0, r6
 8020e4c:	4639      	mov	r1, r7
 8020e4e:	f7df fa3b 	bl	80002c8 <__aeabi_dsub>
 8020e52:	ec53 2b18 	vmov	r2, r3, d8
 8020e56:	4606      	mov	r6, r0
 8020e58:	460f      	mov	r7, r1
 8020e5a:	4620      	mov	r0, r4
 8020e5c:	4629      	mov	r1, r5
 8020e5e:	f7df fa33 	bl	80002c8 <__aeabi_dsub>
 8020e62:	4602      	mov	r2, r0
 8020e64:	460b      	mov	r3, r1
 8020e66:	4650      	mov	r0, sl
 8020e68:	4659      	mov	r1, fp
 8020e6a:	f7df fa2d 	bl	80002c8 <__aeabi_dsub>
 8020e6e:	4642      	mov	r2, r8
 8020e70:	464b      	mov	r3, r9
 8020e72:	f7df fbe1 	bl	8000638 <__aeabi_dmul>
 8020e76:	4602      	mov	r2, r0
 8020e78:	460b      	mov	r3, r1
 8020e7a:	4630      	mov	r0, r6
 8020e7c:	4639      	mov	r1, r7
 8020e7e:	f7df fa23 	bl	80002c8 <__aeabi_dsub>
 8020e82:	ec53 2b19 	vmov	r2, r3, d9
 8020e86:	f7df fbd7 	bl	8000638 <__aeabi_dmul>
 8020e8a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8020e8e:	ec41 0b18 	vmov	d8, r0, r1
 8020e92:	4610      	mov	r0, r2
 8020e94:	4619      	mov	r1, r3
 8020e96:	f7df fbcf 	bl	8000638 <__aeabi_dmul>
 8020e9a:	a37d      	add	r3, pc, #500	; (adr r3, 8021090 <__ieee754_pow+0x6f0>)
 8020e9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020ea0:	4604      	mov	r4, r0
 8020ea2:	460d      	mov	r5, r1
 8020ea4:	f7df fbc8 	bl	8000638 <__aeabi_dmul>
 8020ea8:	a37b      	add	r3, pc, #492	; (adr r3, 8021098 <__ieee754_pow+0x6f8>)
 8020eaa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020eae:	f7df fa0d 	bl	80002cc <__adddf3>
 8020eb2:	4622      	mov	r2, r4
 8020eb4:	462b      	mov	r3, r5
 8020eb6:	f7df fbbf 	bl	8000638 <__aeabi_dmul>
 8020eba:	a379      	add	r3, pc, #484	; (adr r3, 80210a0 <__ieee754_pow+0x700>)
 8020ebc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020ec0:	f7df fa04 	bl	80002cc <__adddf3>
 8020ec4:	4622      	mov	r2, r4
 8020ec6:	462b      	mov	r3, r5
 8020ec8:	f7df fbb6 	bl	8000638 <__aeabi_dmul>
 8020ecc:	a376      	add	r3, pc, #472	; (adr r3, 80210a8 <__ieee754_pow+0x708>)
 8020ece:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020ed2:	f7df f9fb 	bl	80002cc <__adddf3>
 8020ed6:	4622      	mov	r2, r4
 8020ed8:	462b      	mov	r3, r5
 8020eda:	f7df fbad 	bl	8000638 <__aeabi_dmul>
 8020ede:	a374      	add	r3, pc, #464	; (adr r3, 80210b0 <__ieee754_pow+0x710>)
 8020ee0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020ee4:	f7df f9f2 	bl	80002cc <__adddf3>
 8020ee8:	4622      	mov	r2, r4
 8020eea:	462b      	mov	r3, r5
 8020eec:	f7df fba4 	bl	8000638 <__aeabi_dmul>
 8020ef0:	a371      	add	r3, pc, #452	; (adr r3, 80210b8 <__ieee754_pow+0x718>)
 8020ef2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020ef6:	f7df f9e9 	bl	80002cc <__adddf3>
 8020efa:	4622      	mov	r2, r4
 8020efc:	4606      	mov	r6, r0
 8020efe:	460f      	mov	r7, r1
 8020f00:	462b      	mov	r3, r5
 8020f02:	4620      	mov	r0, r4
 8020f04:	4629      	mov	r1, r5
 8020f06:	f7df fb97 	bl	8000638 <__aeabi_dmul>
 8020f0a:	4602      	mov	r2, r0
 8020f0c:	460b      	mov	r3, r1
 8020f0e:	4630      	mov	r0, r6
 8020f10:	4639      	mov	r1, r7
 8020f12:	f7df fb91 	bl	8000638 <__aeabi_dmul>
 8020f16:	4642      	mov	r2, r8
 8020f18:	4604      	mov	r4, r0
 8020f1a:	460d      	mov	r5, r1
 8020f1c:	464b      	mov	r3, r9
 8020f1e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8020f22:	f7df f9d3 	bl	80002cc <__adddf3>
 8020f26:	ec53 2b18 	vmov	r2, r3, d8
 8020f2a:	f7df fb85 	bl	8000638 <__aeabi_dmul>
 8020f2e:	4622      	mov	r2, r4
 8020f30:	462b      	mov	r3, r5
 8020f32:	f7df f9cb 	bl	80002cc <__adddf3>
 8020f36:	4642      	mov	r2, r8
 8020f38:	4682      	mov	sl, r0
 8020f3a:	468b      	mov	fp, r1
 8020f3c:	464b      	mov	r3, r9
 8020f3e:	4640      	mov	r0, r8
 8020f40:	4649      	mov	r1, r9
 8020f42:	f7df fb79 	bl	8000638 <__aeabi_dmul>
 8020f46:	4b6c      	ldr	r3, [pc, #432]	; (80210f8 <__ieee754_pow+0x758>)
 8020f48:	2200      	movs	r2, #0
 8020f4a:	4606      	mov	r6, r0
 8020f4c:	460f      	mov	r7, r1
 8020f4e:	f7df f9bd 	bl	80002cc <__adddf3>
 8020f52:	4652      	mov	r2, sl
 8020f54:	465b      	mov	r3, fp
 8020f56:	f7df f9b9 	bl	80002cc <__adddf3>
 8020f5a:	9c04      	ldr	r4, [sp, #16]
 8020f5c:	460d      	mov	r5, r1
 8020f5e:	4622      	mov	r2, r4
 8020f60:	460b      	mov	r3, r1
 8020f62:	4640      	mov	r0, r8
 8020f64:	4649      	mov	r1, r9
 8020f66:	f7df fb67 	bl	8000638 <__aeabi_dmul>
 8020f6a:	4b63      	ldr	r3, [pc, #396]	; (80210f8 <__ieee754_pow+0x758>)
 8020f6c:	4680      	mov	r8, r0
 8020f6e:	4689      	mov	r9, r1
 8020f70:	2200      	movs	r2, #0
 8020f72:	4620      	mov	r0, r4
 8020f74:	4629      	mov	r1, r5
 8020f76:	f7df f9a7 	bl	80002c8 <__aeabi_dsub>
 8020f7a:	4632      	mov	r2, r6
 8020f7c:	463b      	mov	r3, r7
 8020f7e:	f7df f9a3 	bl	80002c8 <__aeabi_dsub>
 8020f82:	4602      	mov	r2, r0
 8020f84:	460b      	mov	r3, r1
 8020f86:	4650      	mov	r0, sl
 8020f88:	4659      	mov	r1, fp
 8020f8a:	f7df f99d 	bl	80002c8 <__aeabi_dsub>
 8020f8e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8020f92:	f7df fb51 	bl	8000638 <__aeabi_dmul>
 8020f96:	4622      	mov	r2, r4
 8020f98:	4606      	mov	r6, r0
 8020f9a:	460f      	mov	r7, r1
 8020f9c:	462b      	mov	r3, r5
 8020f9e:	ec51 0b18 	vmov	r0, r1, d8
 8020fa2:	f7df fb49 	bl	8000638 <__aeabi_dmul>
 8020fa6:	4602      	mov	r2, r0
 8020fa8:	460b      	mov	r3, r1
 8020faa:	4630      	mov	r0, r6
 8020fac:	4639      	mov	r1, r7
 8020fae:	f7df f98d 	bl	80002cc <__adddf3>
 8020fb2:	4606      	mov	r6, r0
 8020fb4:	460f      	mov	r7, r1
 8020fb6:	4602      	mov	r2, r0
 8020fb8:	460b      	mov	r3, r1
 8020fba:	4640      	mov	r0, r8
 8020fbc:	4649      	mov	r1, r9
 8020fbe:	f7df f985 	bl	80002cc <__adddf3>
 8020fc2:	9c04      	ldr	r4, [sp, #16]
 8020fc4:	a33e      	add	r3, pc, #248	; (adr r3, 80210c0 <__ieee754_pow+0x720>)
 8020fc6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020fca:	4620      	mov	r0, r4
 8020fcc:	460d      	mov	r5, r1
 8020fce:	f7df fb33 	bl	8000638 <__aeabi_dmul>
 8020fd2:	4642      	mov	r2, r8
 8020fd4:	ec41 0b18 	vmov	d8, r0, r1
 8020fd8:	464b      	mov	r3, r9
 8020fda:	4620      	mov	r0, r4
 8020fdc:	4629      	mov	r1, r5
 8020fde:	f7df f973 	bl	80002c8 <__aeabi_dsub>
 8020fe2:	4602      	mov	r2, r0
 8020fe4:	460b      	mov	r3, r1
 8020fe6:	4630      	mov	r0, r6
 8020fe8:	4639      	mov	r1, r7
 8020fea:	f7df f96d 	bl	80002c8 <__aeabi_dsub>
 8020fee:	a336      	add	r3, pc, #216	; (adr r3, 80210c8 <__ieee754_pow+0x728>)
 8020ff0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020ff4:	f7df fb20 	bl	8000638 <__aeabi_dmul>
 8020ff8:	a335      	add	r3, pc, #212	; (adr r3, 80210d0 <__ieee754_pow+0x730>)
 8020ffa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020ffe:	4606      	mov	r6, r0
 8021000:	460f      	mov	r7, r1
 8021002:	4620      	mov	r0, r4
 8021004:	4629      	mov	r1, r5
 8021006:	f7df fb17 	bl	8000638 <__aeabi_dmul>
 802100a:	4602      	mov	r2, r0
 802100c:	460b      	mov	r3, r1
 802100e:	4630      	mov	r0, r6
 8021010:	4639      	mov	r1, r7
 8021012:	f7df f95b 	bl	80002cc <__adddf3>
 8021016:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021018:	4b38      	ldr	r3, [pc, #224]	; (80210fc <__ieee754_pow+0x75c>)
 802101a:	4413      	add	r3, r2
 802101c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021020:	f7df f954 	bl	80002cc <__adddf3>
 8021024:	4682      	mov	sl, r0
 8021026:	9809      	ldr	r0, [sp, #36]	; 0x24
 8021028:	468b      	mov	fp, r1
 802102a:	f7df fa9b 	bl	8000564 <__aeabi_i2d>
 802102e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021030:	4b33      	ldr	r3, [pc, #204]	; (8021100 <__ieee754_pow+0x760>)
 8021032:	4413      	add	r3, r2
 8021034:	e9d3 8900 	ldrd	r8, r9, [r3]
 8021038:	4606      	mov	r6, r0
 802103a:	460f      	mov	r7, r1
 802103c:	4652      	mov	r2, sl
 802103e:	465b      	mov	r3, fp
 8021040:	ec51 0b18 	vmov	r0, r1, d8
 8021044:	f7df f942 	bl	80002cc <__adddf3>
 8021048:	4642      	mov	r2, r8
 802104a:	464b      	mov	r3, r9
 802104c:	f7df f93e 	bl	80002cc <__adddf3>
 8021050:	4632      	mov	r2, r6
 8021052:	463b      	mov	r3, r7
 8021054:	f7df f93a 	bl	80002cc <__adddf3>
 8021058:	9c04      	ldr	r4, [sp, #16]
 802105a:	4632      	mov	r2, r6
 802105c:	463b      	mov	r3, r7
 802105e:	4620      	mov	r0, r4
 8021060:	460d      	mov	r5, r1
 8021062:	f7df f931 	bl	80002c8 <__aeabi_dsub>
 8021066:	4642      	mov	r2, r8
 8021068:	464b      	mov	r3, r9
 802106a:	f7df f92d 	bl	80002c8 <__aeabi_dsub>
 802106e:	ec53 2b18 	vmov	r2, r3, d8
 8021072:	f7df f929 	bl	80002c8 <__aeabi_dsub>
 8021076:	4602      	mov	r2, r0
 8021078:	460b      	mov	r3, r1
 802107a:	4650      	mov	r0, sl
 802107c:	4659      	mov	r1, fp
 802107e:	e606      	b.n	8020c8e <__ieee754_pow+0x2ee>
 8021080:	2401      	movs	r4, #1
 8021082:	e6a0      	b.n	8020dc6 <__ieee754_pow+0x426>
 8021084:	ed9f 7b14 	vldr	d7, [pc, #80]	; 80210d8 <__ieee754_pow+0x738>
 8021088:	e60d      	b.n	8020ca6 <__ieee754_pow+0x306>
 802108a:	bf00      	nop
 802108c:	f3af 8000 	nop.w
 8021090:	4a454eef 	.word	0x4a454eef
 8021094:	3fca7e28 	.word	0x3fca7e28
 8021098:	93c9db65 	.word	0x93c9db65
 802109c:	3fcd864a 	.word	0x3fcd864a
 80210a0:	a91d4101 	.word	0xa91d4101
 80210a4:	3fd17460 	.word	0x3fd17460
 80210a8:	518f264d 	.word	0x518f264d
 80210ac:	3fd55555 	.word	0x3fd55555
 80210b0:	db6fabff 	.word	0xdb6fabff
 80210b4:	3fdb6db6 	.word	0x3fdb6db6
 80210b8:	33333303 	.word	0x33333303
 80210bc:	3fe33333 	.word	0x3fe33333
 80210c0:	e0000000 	.word	0xe0000000
 80210c4:	3feec709 	.word	0x3feec709
 80210c8:	dc3a03fd 	.word	0xdc3a03fd
 80210cc:	3feec709 	.word	0x3feec709
 80210d0:	145b01f5 	.word	0x145b01f5
 80210d4:	be3e2fe0 	.word	0xbe3e2fe0
 80210d8:	00000000 	.word	0x00000000
 80210dc:	3ff00000 	.word	0x3ff00000
 80210e0:	7ff00000 	.word	0x7ff00000
 80210e4:	43400000 	.word	0x43400000
 80210e8:	0003988e 	.word	0x0003988e
 80210ec:	000bb679 	.word	0x000bb679
 80210f0:	08025318 	.word	0x08025318
 80210f4:	3ff00000 	.word	0x3ff00000
 80210f8:	40080000 	.word	0x40080000
 80210fc:	08025338 	.word	0x08025338
 8021100:	08025328 	.word	0x08025328
 8021104:	a3b5      	add	r3, pc, #724	; (adr r3, 80213dc <__ieee754_pow+0xa3c>)
 8021106:	e9d3 2300 	ldrd	r2, r3, [r3]
 802110a:	4640      	mov	r0, r8
 802110c:	4649      	mov	r1, r9
 802110e:	f7df f8dd 	bl	80002cc <__adddf3>
 8021112:	4622      	mov	r2, r4
 8021114:	ec41 0b1a 	vmov	d10, r0, r1
 8021118:	462b      	mov	r3, r5
 802111a:	4630      	mov	r0, r6
 802111c:	4639      	mov	r1, r7
 802111e:	f7df f8d3 	bl	80002c8 <__aeabi_dsub>
 8021122:	4602      	mov	r2, r0
 8021124:	460b      	mov	r3, r1
 8021126:	ec51 0b1a 	vmov	r0, r1, d10
 802112a:	f7df fd15 	bl	8000b58 <__aeabi_dcmpgt>
 802112e:	2800      	cmp	r0, #0
 8021130:	f47f adf8 	bne.w	8020d24 <__ieee754_pow+0x384>
 8021134:	4aa4      	ldr	r2, [pc, #656]	; (80213c8 <__ieee754_pow+0xa28>)
 8021136:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802113a:	4293      	cmp	r3, r2
 802113c:	f340 810b 	ble.w	8021356 <__ieee754_pow+0x9b6>
 8021140:	151b      	asrs	r3, r3, #20
 8021142:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 8021146:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 802114a:	fa4a f303 	asr.w	r3, sl, r3
 802114e:	445b      	add	r3, fp
 8021150:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8021154:	4e9d      	ldr	r6, [pc, #628]	; (80213cc <__ieee754_pow+0xa2c>)
 8021156:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 802115a:	4116      	asrs	r6, r2
 802115c:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8021160:	2000      	movs	r0, #0
 8021162:	ea23 0106 	bic.w	r1, r3, r6
 8021166:	f1c2 0214 	rsb	r2, r2, #20
 802116a:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 802116e:	fa4a fa02 	asr.w	sl, sl, r2
 8021172:	f1bb 0f00 	cmp.w	fp, #0
 8021176:	4602      	mov	r2, r0
 8021178:	460b      	mov	r3, r1
 802117a:	4620      	mov	r0, r4
 802117c:	4629      	mov	r1, r5
 802117e:	bfb8      	it	lt
 8021180:	f1ca 0a00 	rsblt	sl, sl, #0
 8021184:	f7df f8a0 	bl	80002c8 <__aeabi_dsub>
 8021188:	ec41 0b19 	vmov	d9, r0, r1
 802118c:	4642      	mov	r2, r8
 802118e:	464b      	mov	r3, r9
 8021190:	ec51 0b19 	vmov	r0, r1, d9
 8021194:	f7df f89a 	bl	80002cc <__adddf3>
 8021198:	2400      	movs	r4, #0
 802119a:	a379      	add	r3, pc, #484	; (adr r3, 8021380 <__ieee754_pow+0x9e0>)
 802119c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80211a0:	4620      	mov	r0, r4
 80211a2:	460d      	mov	r5, r1
 80211a4:	f7df fa48 	bl	8000638 <__aeabi_dmul>
 80211a8:	ec53 2b19 	vmov	r2, r3, d9
 80211ac:	4606      	mov	r6, r0
 80211ae:	460f      	mov	r7, r1
 80211b0:	4620      	mov	r0, r4
 80211b2:	4629      	mov	r1, r5
 80211b4:	f7df f888 	bl	80002c8 <__aeabi_dsub>
 80211b8:	4602      	mov	r2, r0
 80211ba:	460b      	mov	r3, r1
 80211bc:	4640      	mov	r0, r8
 80211be:	4649      	mov	r1, r9
 80211c0:	f7df f882 	bl	80002c8 <__aeabi_dsub>
 80211c4:	a370      	add	r3, pc, #448	; (adr r3, 8021388 <__ieee754_pow+0x9e8>)
 80211c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80211ca:	f7df fa35 	bl	8000638 <__aeabi_dmul>
 80211ce:	a370      	add	r3, pc, #448	; (adr r3, 8021390 <__ieee754_pow+0x9f0>)
 80211d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80211d4:	4680      	mov	r8, r0
 80211d6:	4689      	mov	r9, r1
 80211d8:	4620      	mov	r0, r4
 80211da:	4629      	mov	r1, r5
 80211dc:	f7df fa2c 	bl	8000638 <__aeabi_dmul>
 80211e0:	4602      	mov	r2, r0
 80211e2:	460b      	mov	r3, r1
 80211e4:	4640      	mov	r0, r8
 80211e6:	4649      	mov	r1, r9
 80211e8:	f7df f870 	bl	80002cc <__adddf3>
 80211ec:	4604      	mov	r4, r0
 80211ee:	460d      	mov	r5, r1
 80211f0:	4602      	mov	r2, r0
 80211f2:	460b      	mov	r3, r1
 80211f4:	4630      	mov	r0, r6
 80211f6:	4639      	mov	r1, r7
 80211f8:	f7df f868 	bl	80002cc <__adddf3>
 80211fc:	4632      	mov	r2, r6
 80211fe:	463b      	mov	r3, r7
 8021200:	4680      	mov	r8, r0
 8021202:	4689      	mov	r9, r1
 8021204:	f7df f860 	bl	80002c8 <__aeabi_dsub>
 8021208:	4602      	mov	r2, r0
 802120a:	460b      	mov	r3, r1
 802120c:	4620      	mov	r0, r4
 802120e:	4629      	mov	r1, r5
 8021210:	f7df f85a 	bl	80002c8 <__aeabi_dsub>
 8021214:	4642      	mov	r2, r8
 8021216:	4606      	mov	r6, r0
 8021218:	460f      	mov	r7, r1
 802121a:	464b      	mov	r3, r9
 802121c:	4640      	mov	r0, r8
 802121e:	4649      	mov	r1, r9
 8021220:	f7df fa0a 	bl	8000638 <__aeabi_dmul>
 8021224:	a35c      	add	r3, pc, #368	; (adr r3, 8021398 <__ieee754_pow+0x9f8>)
 8021226:	e9d3 2300 	ldrd	r2, r3, [r3]
 802122a:	4604      	mov	r4, r0
 802122c:	460d      	mov	r5, r1
 802122e:	f7df fa03 	bl	8000638 <__aeabi_dmul>
 8021232:	a35b      	add	r3, pc, #364	; (adr r3, 80213a0 <__ieee754_pow+0xa00>)
 8021234:	e9d3 2300 	ldrd	r2, r3, [r3]
 8021238:	f7df f846 	bl	80002c8 <__aeabi_dsub>
 802123c:	4622      	mov	r2, r4
 802123e:	462b      	mov	r3, r5
 8021240:	f7df f9fa 	bl	8000638 <__aeabi_dmul>
 8021244:	a358      	add	r3, pc, #352	; (adr r3, 80213a8 <__ieee754_pow+0xa08>)
 8021246:	e9d3 2300 	ldrd	r2, r3, [r3]
 802124a:	f7df f83f 	bl	80002cc <__adddf3>
 802124e:	4622      	mov	r2, r4
 8021250:	462b      	mov	r3, r5
 8021252:	f7df f9f1 	bl	8000638 <__aeabi_dmul>
 8021256:	a356      	add	r3, pc, #344	; (adr r3, 80213b0 <__ieee754_pow+0xa10>)
 8021258:	e9d3 2300 	ldrd	r2, r3, [r3]
 802125c:	f7df f834 	bl	80002c8 <__aeabi_dsub>
 8021260:	4622      	mov	r2, r4
 8021262:	462b      	mov	r3, r5
 8021264:	f7df f9e8 	bl	8000638 <__aeabi_dmul>
 8021268:	a353      	add	r3, pc, #332	; (adr r3, 80213b8 <__ieee754_pow+0xa18>)
 802126a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802126e:	f7df f82d 	bl	80002cc <__adddf3>
 8021272:	4622      	mov	r2, r4
 8021274:	462b      	mov	r3, r5
 8021276:	f7df f9df 	bl	8000638 <__aeabi_dmul>
 802127a:	4602      	mov	r2, r0
 802127c:	460b      	mov	r3, r1
 802127e:	4640      	mov	r0, r8
 8021280:	4649      	mov	r1, r9
 8021282:	f7df f821 	bl	80002c8 <__aeabi_dsub>
 8021286:	4604      	mov	r4, r0
 8021288:	460d      	mov	r5, r1
 802128a:	4602      	mov	r2, r0
 802128c:	460b      	mov	r3, r1
 802128e:	4640      	mov	r0, r8
 8021290:	4649      	mov	r1, r9
 8021292:	f7df f9d1 	bl	8000638 <__aeabi_dmul>
 8021296:	2200      	movs	r2, #0
 8021298:	ec41 0b19 	vmov	d9, r0, r1
 802129c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80212a0:	4620      	mov	r0, r4
 80212a2:	4629      	mov	r1, r5
 80212a4:	f7df f810 	bl	80002c8 <__aeabi_dsub>
 80212a8:	4602      	mov	r2, r0
 80212aa:	460b      	mov	r3, r1
 80212ac:	ec51 0b19 	vmov	r0, r1, d9
 80212b0:	f7df faec 	bl	800088c <__aeabi_ddiv>
 80212b4:	4632      	mov	r2, r6
 80212b6:	4604      	mov	r4, r0
 80212b8:	460d      	mov	r5, r1
 80212ba:	463b      	mov	r3, r7
 80212bc:	4640      	mov	r0, r8
 80212be:	4649      	mov	r1, r9
 80212c0:	f7df f9ba 	bl	8000638 <__aeabi_dmul>
 80212c4:	4632      	mov	r2, r6
 80212c6:	463b      	mov	r3, r7
 80212c8:	f7df f800 	bl	80002cc <__adddf3>
 80212cc:	4602      	mov	r2, r0
 80212ce:	460b      	mov	r3, r1
 80212d0:	4620      	mov	r0, r4
 80212d2:	4629      	mov	r1, r5
 80212d4:	f7de fff8 	bl	80002c8 <__aeabi_dsub>
 80212d8:	4642      	mov	r2, r8
 80212da:	464b      	mov	r3, r9
 80212dc:	f7de fff4 	bl	80002c8 <__aeabi_dsub>
 80212e0:	460b      	mov	r3, r1
 80212e2:	4602      	mov	r2, r0
 80212e4:	493a      	ldr	r1, [pc, #232]	; (80213d0 <__ieee754_pow+0xa30>)
 80212e6:	2000      	movs	r0, #0
 80212e8:	f7de ffee 	bl	80002c8 <__aeabi_dsub>
 80212ec:	e9cd 0100 	strd	r0, r1, [sp]
 80212f0:	9b01      	ldr	r3, [sp, #4]
 80212f2:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 80212f6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80212fa:	da2f      	bge.n	802135c <__ieee754_pow+0x9bc>
 80212fc:	4650      	mov	r0, sl
 80212fe:	ed9d 0b00 	vldr	d0, [sp]
 8021302:	f000 f9cd 	bl	80216a0 <scalbn>
 8021306:	ec51 0b10 	vmov	r0, r1, d0
 802130a:	ec53 2b18 	vmov	r2, r3, d8
 802130e:	f7ff bbe0 	b.w	8020ad2 <__ieee754_pow+0x132>
 8021312:	4b30      	ldr	r3, [pc, #192]	; (80213d4 <__ieee754_pow+0xa34>)
 8021314:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8021318:	429e      	cmp	r6, r3
 802131a:	f77f af0b 	ble.w	8021134 <__ieee754_pow+0x794>
 802131e:	4b2e      	ldr	r3, [pc, #184]	; (80213d8 <__ieee754_pow+0xa38>)
 8021320:	440b      	add	r3, r1
 8021322:	4303      	orrs	r3, r0
 8021324:	d00b      	beq.n	802133e <__ieee754_pow+0x99e>
 8021326:	a326      	add	r3, pc, #152	; (adr r3, 80213c0 <__ieee754_pow+0xa20>)
 8021328:	e9d3 2300 	ldrd	r2, r3, [r3]
 802132c:	ec51 0b18 	vmov	r0, r1, d8
 8021330:	f7df f982 	bl	8000638 <__aeabi_dmul>
 8021334:	a322      	add	r3, pc, #136	; (adr r3, 80213c0 <__ieee754_pow+0xa20>)
 8021336:	e9d3 2300 	ldrd	r2, r3, [r3]
 802133a:	f7ff bbca 	b.w	8020ad2 <__ieee754_pow+0x132>
 802133e:	4622      	mov	r2, r4
 8021340:	462b      	mov	r3, r5
 8021342:	f7de ffc1 	bl	80002c8 <__aeabi_dsub>
 8021346:	4642      	mov	r2, r8
 8021348:	464b      	mov	r3, r9
 802134a:	f7df fbfb 	bl	8000b44 <__aeabi_dcmpge>
 802134e:	2800      	cmp	r0, #0
 8021350:	f43f aef0 	beq.w	8021134 <__ieee754_pow+0x794>
 8021354:	e7e7      	b.n	8021326 <__ieee754_pow+0x986>
 8021356:	f04f 0a00 	mov.w	sl, #0
 802135a:	e717      	b.n	802118c <__ieee754_pow+0x7ec>
 802135c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8021360:	4619      	mov	r1, r3
 8021362:	e7d2      	b.n	802130a <__ieee754_pow+0x96a>
 8021364:	491a      	ldr	r1, [pc, #104]	; (80213d0 <__ieee754_pow+0xa30>)
 8021366:	2000      	movs	r0, #0
 8021368:	f7ff bb9e 	b.w	8020aa8 <__ieee754_pow+0x108>
 802136c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8021370:	f7ff bb9a 	b.w	8020aa8 <__ieee754_pow+0x108>
 8021374:	9000      	str	r0, [sp, #0]
 8021376:	f7ff bb76 	b.w	8020a66 <__ieee754_pow+0xc6>
 802137a:	2100      	movs	r1, #0
 802137c:	f7ff bb60 	b.w	8020a40 <__ieee754_pow+0xa0>
 8021380:	00000000 	.word	0x00000000
 8021384:	3fe62e43 	.word	0x3fe62e43
 8021388:	fefa39ef 	.word	0xfefa39ef
 802138c:	3fe62e42 	.word	0x3fe62e42
 8021390:	0ca86c39 	.word	0x0ca86c39
 8021394:	be205c61 	.word	0xbe205c61
 8021398:	72bea4d0 	.word	0x72bea4d0
 802139c:	3e663769 	.word	0x3e663769
 80213a0:	c5d26bf1 	.word	0xc5d26bf1
 80213a4:	3ebbbd41 	.word	0x3ebbbd41
 80213a8:	af25de2c 	.word	0xaf25de2c
 80213ac:	3f11566a 	.word	0x3f11566a
 80213b0:	16bebd93 	.word	0x16bebd93
 80213b4:	3f66c16c 	.word	0x3f66c16c
 80213b8:	5555553e 	.word	0x5555553e
 80213bc:	3fc55555 	.word	0x3fc55555
 80213c0:	c2f8f359 	.word	0xc2f8f359
 80213c4:	01a56e1f 	.word	0x01a56e1f
 80213c8:	3fe00000 	.word	0x3fe00000
 80213cc:	000fffff 	.word	0x000fffff
 80213d0:	3ff00000 	.word	0x3ff00000
 80213d4:	4090cbff 	.word	0x4090cbff
 80213d8:	3f6f3400 	.word	0x3f6f3400
 80213dc:	652b82fe 	.word	0x652b82fe
 80213e0:	3c971547 	.word	0x3c971547

080213e4 <__ieee754_sqrt>:
 80213e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80213e8:	ec55 4b10 	vmov	r4, r5, d0
 80213ec:	4e56      	ldr	r6, [pc, #344]	; (8021548 <__ieee754_sqrt+0x164>)
 80213ee:	43ae      	bics	r6, r5
 80213f0:	ee10 0a10 	vmov	r0, s0
 80213f4:	ee10 3a10 	vmov	r3, s0
 80213f8:	4629      	mov	r1, r5
 80213fa:	462a      	mov	r2, r5
 80213fc:	d110      	bne.n	8021420 <__ieee754_sqrt+0x3c>
 80213fe:	ee10 2a10 	vmov	r2, s0
 8021402:	462b      	mov	r3, r5
 8021404:	f7df f918 	bl	8000638 <__aeabi_dmul>
 8021408:	4602      	mov	r2, r0
 802140a:	460b      	mov	r3, r1
 802140c:	4620      	mov	r0, r4
 802140e:	4629      	mov	r1, r5
 8021410:	f7de ff5c 	bl	80002cc <__adddf3>
 8021414:	4604      	mov	r4, r0
 8021416:	460d      	mov	r5, r1
 8021418:	ec45 4b10 	vmov	d0, r4, r5
 802141c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021420:	2d00      	cmp	r5, #0
 8021422:	dc10      	bgt.n	8021446 <__ieee754_sqrt+0x62>
 8021424:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8021428:	4330      	orrs	r0, r6
 802142a:	d0f5      	beq.n	8021418 <__ieee754_sqrt+0x34>
 802142c:	b15d      	cbz	r5, 8021446 <__ieee754_sqrt+0x62>
 802142e:	ee10 2a10 	vmov	r2, s0
 8021432:	462b      	mov	r3, r5
 8021434:	ee10 0a10 	vmov	r0, s0
 8021438:	f7de ff46 	bl	80002c8 <__aeabi_dsub>
 802143c:	4602      	mov	r2, r0
 802143e:	460b      	mov	r3, r1
 8021440:	f7df fa24 	bl	800088c <__aeabi_ddiv>
 8021444:	e7e6      	b.n	8021414 <__ieee754_sqrt+0x30>
 8021446:	1509      	asrs	r1, r1, #20
 8021448:	d076      	beq.n	8021538 <__ieee754_sqrt+0x154>
 802144a:	f3c2 0213 	ubfx	r2, r2, #0, #20
 802144e:	07ce      	lsls	r6, r1, #31
 8021450:	f442 1080 	orr.w	r0, r2, #1048576	; 0x100000
 8021454:	bf5e      	ittt	pl
 8021456:	0fda      	lsrpl	r2, r3, #31
 8021458:	005b      	lslpl	r3, r3, #1
 802145a:	eb02 0040 	addpl.w	r0, r2, r0, lsl #1
 802145e:	0fda      	lsrs	r2, r3, #31
 8021460:	f2a1 35ff 	subw	r5, r1, #1023	; 0x3ff
 8021464:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8021468:	2000      	movs	r0, #0
 802146a:	106d      	asrs	r5, r5, #1
 802146c:	005b      	lsls	r3, r3, #1
 802146e:	f04f 0e16 	mov.w	lr, #22
 8021472:	4684      	mov	ip, r0
 8021474:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8021478:	eb0c 0401 	add.w	r4, ip, r1
 802147c:	4294      	cmp	r4, r2
 802147e:	bfde      	ittt	le
 8021480:	1b12      	suble	r2, r2, r4
 8021482:	eb04 0c01 	addle.w	ip, r4, r1
 8021486:	1840      	addle	r0, r0, r1
 8021488:	0052      	lsls	r2, r2, #1
 802148a:	f1be 0e01 	subs.w	lr, lr, #1
 802148e:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8021492:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8021496:	ea4f 0343 	mov.w	r3, r3, lsl #1
 802149a:	d1ed      	bne.n	8021478 <__ieee754_sqrt+0x94>
 802149c:	4671      	mov	r1, lr
 802149e:	2720      	movs	r7, #32
 80214a0:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 80214a4:	4562      	cmp	r2, ip
 80214a6:	eb04 060e 	add.w	r6, r4, lr
 80214aa:	dc02      	bgt.n	80214b2 <__ieee754_sqrt+0xce>
 80214ac:	d113      	bne.n	80214d6 <__ieee754_sqrt+0xf2>
 80214ae:	429e      	cmp	r6, r3
 80214b0:	d811      	bhi.n	80214d6 <__ieee754_sqrt+0xf2>
 80214b2:	2e00      	cmp	r6, #0
 80214b4:	eb06 0e04 	add.w	lr, r6, r4
 80214b8:	da43      	bge.n	8021542 <__ieee754_sqrt+0x15e>
 80214ba:	f1be 0f00 	cmp.w	lr, #0
 80214be:	db40      	blt.n	8021542 <__ieee754_sqrt+0x15e>
 80214c0:	f10c 0801 	add.w	r8, ip, #1
 80214c4:	eba2 020c 	sub.w	r2, r2, ip
 80214c8:	429e      	cmp	r6, r3
 80214ca:	bf88      	it	hi
 80214cc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80214d0:	1b9b      	subs	r3, r3, r6
 80214d2:	4421      	add	r1, r4
 80214d4:	46c4      	mov	ip, r8
 80214d6:	0052      	lsls	r2, r2, #1
 80214d8:	3f01      	subs	r7, #1
 80214da:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 80214de:	ea4f 0454 	mov.w	r4, r4, lsr #1
 80214e2:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80214e6:	d1dd      	bne.n	80214a4 <__ieee754_sqrt+0xc0>
 80214e8:	4313      	orrs	r3, r2
 80214ea:	d006      	beq.n	80214fa <__ieee754_sqrt+0x116>
 80214ec:	1c4c      	adds	r4, r1, #1
 80214ee:	bf13      	iteet	ne
 80214f0:	3101      	addne	r1, #1
 80214f2:	3001      	addeq	r0, #1
 80214f4:	4639      	moveq	r1, r7
 80214f6:	f021 0101 	bicne.w	r1, r1, #1
 80214fa:	1043      	asrs	r3, r0, #1
 80214fc:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8021500:	0849      	lsrs	r1, r1, #1
 8021502:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8021506:	07c2      	lsls	r2, r0, #31
 8021508:	bf48      	it	mi
 802150a:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
 802150e:	eb03 5705 	add.w	r7, r3, r5, lsl #20
 8021512:	460c      	mov	r4, r1
 8021514:	463d      	mov	r5, r7
 8021516:	e77f      	b.n	8021418 <__ieee754_sqrt+0x34>
 8021518:	0ada      	lsrs	r2, r3, #11
 802151a:	3815      	subs	r0, #21
 802151c:	055b      	lsls	r3, r3, #21
 802151e:	2a00      	cmp	r2, #0
 8021520:	d0fa      	beq.n	8021518 <__ieee754_sqrt+0x134>
 8021522:	02d7      	lsls	r7, r2, #11
 8021524:	d50a      	bpl.n	802153c <__ieee754_sqrt+0x158>
 8021526:	f1c1 0420 	rsb	r4, r1, #32
 802152a:	fa23 f404 	lsr.w	r4, r3, r4
 802152e:	1e4d      	subs	r5, r1, #1
 8021530:	408b      	lsls	r3, r1
 8021532:	4322      	orrs	r2, r4
 8021534:	1b41      	subs	r1, r0, r5
 8021536:	e788      	b.n	802144a <__ieee754_sqrt+0x66>
 8021538:	4608      	mov	r0, r1
 802153a:	e7f0      	b.n	802151e <__ieee754_sqrt+0x13a>
 802153c:	0052      	lsls	r2, r2, #1
 802153e:	3101      	adds	r1, #1
 8021540:	e7ef      	b.n	8021522 <__ieee754_sqrt+0x13e>
 8021542:	46e0      	mov	r8, ip
 8021544:	e7be      	b.n	80214c4 <__ieee754_sqrt+0xe0>
 8021546:	bf00      	nop
 8021548:	7ff00000 	.word	0x7ff00000

0802154c <fabs>:
 802154c:	ec51 0b10 	vmov	r0, r1, d0
 8021550:	ee10 2a10 	vmov	r2, s0
 8021554:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8021558:	ec43 2b10 	vmov	d0, r2, r3
 802155c:	4770      	bx	lr

0802155e <finite>:
 802155e:	b082      	sub	sp, #8
 8021560:	ed8d 0b00 	vstr	d0, [sp]
 8021564:	9801      	ldr	r0, [sp, #4]
 8021566:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 802156a:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 802156e:	0fc0      	lsrs	r0, r0, #31
 8021570:	b002      	add	sp, #8
 8021572:	4770      	bx	lr
 8021574:	0000      	movs	r0, r0
	...

08021578 <nan>:
 8021578:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8021580 <nan+0x8>
 802157c:	4770      	bx	lr
 802157e:	bf00      	nop
 8021580:	00000000 	.word	0x00000000
 8021584:	7ff80000 	.word	0x7ff80000

08021588 <rint>:
 8021588:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802158a:	ec51 0b10 	vmov	r0, r1, d0
 802158e:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8021592:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8021596:	2e13      	cmp	r6, #19
 8021598:	ee10 4a10 	vmov	r4, s0
 802159c:	460b      	mov	r3, r1
 802159e:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 80215a2:	dc58      	bgt.n	8021656 <rint+0xce>
 80215a4:	2e00      	cmp	r6, #0
 80215a6:	da2b      	bge.n	8021600 <rint+0x78>
 80215a8:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 80215ac:	4302      	orrs	r2, r0
 80215ae:	d023      	beq.n	80215f8 <rint+0x70>
 80215b0:	f3c1 0213 	ubfx	r2, r1, #0, #20
 80215b4:	4302      	orrs	r2, r0
 80215b6:	4254      	negs	r4, r2
 80215b8:	4314      	orrs	r4, r2
 80215ba:	0c4b      	lsrs	r3, r1, #17
 80215bc:	0b24      	lsrs	r4, r4, #12
 80215be:	045b      	lsls	r3, r3, #17
 80215c0:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 80215c4:	ea44 0103 	orr.w	r1, r4, r3
 80215c8:	4b32      	ldr	r3, [pc, #200]	; (8021694 <rint+0x10c>)
 80215ca:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80215ce:	e9d3 6700 	ldrd	r6, r7, [r3]
 80215d2:	4602      	mov	r2, r0
 80215d4:	460b      	mov	r3, r1
 80215d6:	4630      	mov	r0, r6
 80215d8:	4639      	mov	r1, r7
 80215da:	f7de fe77 	bl	80002cc <__adddf3>
 80215de:	e9cd 0100 	strd	r0, r1, [sp]
 80215e2:	463b      	mov	r3, r7
 80215e4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80215e8:	4632      	mov	r2, r6
 80215ea:	f7de fe6d 	bl	80002c8 <__aeabi_dsub>
 80215ee:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80215f2:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 80215f6:	4639      	mov	r1, r7
 80215f8:	ec41 0b10 	vmov	d0, r0, r1
 80215fc:	b003      	add	sp, #12
 80215fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021600:	4a25      	ldr	r2, [pc, #148]	; (8021698 <rint+0x110>)
 8021602:	4132      	asrs	r2, r6
 8021604:	ea01 0702 	and.w	r7, r1, r2
 8021608:	4307      	orrs	r7, r0
 802160a:	d0f5      	beq.n	80215f8 <rint+0x70>
 802160c:	0851      	lsrs	r1, r2, #1
 802160e:	ea03 0252 	and.w	r2, r3, r2, lsr #1
 8021612:	4314      	orrs	r4, r2
 8021614:	d00c      	beq.n	8021630 <rint+0xa8>
 8021616:	ea23 0201 	bic.w	r2, r3, r1
 802161a:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 802161e:	2e13      	cmp	r6, #19
 8021620:	fa43 f606 	asr.w	r6, r3, r6
 8021624:	bf0c      	ite	eq
 8021626:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 802162a:	2400      	movne	r4, #0
 802162c:	ea42 0306 	orr.w	r3, r2, r6
 8021630:	4918      	ldr	r1, [pc, #96]	; (8021694 <rint+0x10c>)
 8021632:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 8021636:	4622      	mov	r2, r4
 8021638:	e9d5 4500 	ldrd	r4, r5, [r5]
 802163c:	4620      	mov	r0, r4
 802163e:	4629      	mov	r1, r5
 8021640:	f7de fe44 	bl	80002cc <__adddf3>
 8021644:	e9cd 0100 	strd	r0, r1, [sp]
 8021648:	e9dd 0100 	ldrd	r0, r1, [sp]
 802164c:	4622      	mov	r2, r4
 802164e:	462b      	mov	r3, r5
 8021650:	f7de fe3a 	bl	80002c8 <__aeabi_dsub>
 8021654:	e7d0      	b.n	80215f8 <rint+0x70>
 8021656:	2e33      	cmp	r6, #51	; 0x33
 8021658:	dd07      	ble.n	802166a <rint+0xe2>
 802165a:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 802165e:	d1cb      	bne.n	80215f8 <rint+0x70>
 8021660:	ee10 2a10 	vmov	r2, s0
 8021664:	f7de fe32 	bl	80002cc <__adddf3>
 8021668:	e7c6      	b.n	80215f8 <rint+0x70>
 802166a:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
 802166e:	f04f 36ff 	mov.w	r6, #4294967295
 8021672:	40d6      	lsrs	r6, r2
 8021674:	4230      	tst	r0, r6
 8021676:	d0bf      	beq.n	80215f8 <rint+0x70>
 8021678:	ea14 0056 	ands.w	r0, r4, r6, lsr #1
 802167c:	ea4f 0156 	mov.w	r1, r6, lsr #1
 8021680:	bf1f      	itttt	ne
 8021682:	ea24 0101 	bicne.w	r1, r4, r1
 8021686:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 802168a:	fa44 f202 	asrne.w	r2, r4, r2
 802168e:	ea41 0402 	orrne.w	r4, r1, r2
 8021692:	e7cd      	b.n	8021630 <rint+0xa8>
 8021694:	08025348 	.word	0x08025348
 8021698:	000fffff 	.word	0x000fffff
 802169c:	00000000 	.word	0x00000000

080216a0 <scalbn>:
 80216a0:	b570      	push	{r4, r5, r6, lr}
 80216a2:	ec55 4b10 	vmov	r4, r5, d0
 80216a6:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80216aa:	4606      	mov	r6, r0
 80216ac:	462b      	mov	r3, r5
 80216ae:	b99a      	cbnz	r2, 80216d8 <scalbn+0x38>
 80216b0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80216b4:	4323      	orrs	r3, r4
 80216b6:	d036      	beq.n	8021726 <scalbn+0x86>
 80216b8:	4b39      	ldr	r3, [pc, #228]	; (80217a0 <scalbn+0x100>)
 80216ba:	4629      	mov	r1, r5
 80216bc:	ee10 0a10 	vmov	r0, s0
 80216c0:	2200      	movs	r2, #0
 80216c2:	f7de ffb9 	bl	8000638 <__aeabi_dmul>
 80216c6:	4b37      	ldr	r3, [pc, #220]	; (80217a4 <scalbn+0x104>)
 80216c8:	429e      	cmp	r6, r3
 80216ca:	4604      	mov	r4, r0
 80216cc:	460d      	mov	r5, r1
 80216ce:	da10      	bge.n	80216f2 <scalbn+0x52>
 80216d0:	a32b      	add	r3, pc, #172	; (adr r3, 8021780 <scalbn+0xe0>)
 80216d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80216d6:	e03a      	b.n	802174e <scalbn+0xae>
 80216d8:	f240 71ff 	movw	r1, #2047	; 0x7ff
 80216dc:	428a      	cmp	r2, r1
 80216de:	d10c      	bne.n	80216fa <scalbn+0x5a>
 80216e0:	ee10 2a10 	vmov	r2, s0
 80216e4:	4620      	mov	r0, r4
 80216e6:	4629      	mov	r1, r5
 80216e8:	f7de fdf0 	bl	80002cc <__adddf3>
 80216ec:	4604      	mov	r4, r0
 80216ee:	460d      	mov	r5, r1
 80216f0:	e019      	b.n	8021726 <scalbn+0x86>
 80216f2:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80216f6:	460b      	mov	r3, r1
 80216f8:	3a36      	subs	r2, #54	; 0x36
 80216fa:	4432      	add	r2, r6
 80216fc:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8021700:	428a      	cmp	r2, r1
 8021702:	dd08      	ble.n	8021716 <scalbn+0x76>
 8021704:	2d00      	cmp	r5, #0
 8021706:	a120      	add	r1, pc, #128	; (adr r1, 8021788 <scalbn+0xe8>)
 8021708:	e9d1 0100 	ldrd	r0, r1, [r1]
 802170c:	da1c      	bge.n	8021748 <scalbn+0xa8>
 802170e:	a120      	add	r1, pc, #128	; (adr r1, 8021790 <scalbn+0xf0>)
 8021710:	e9d1 0100 	ldrd	r0, r1, [r1]
 8021714:	e018      	b.n	8021748 <scalbn+0xa8>
 8021716:	2a00      	cmp	r2, #0
 8021718:	dd08      	ble.n	802172c <scalbn+0x8c>
 802171a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802171e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8021722:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8021726:	ec45 4b10 	vmov	d0, r4, r5
 802172a:	bd70      	pop	{r4, r5, r6, pc}
 802172c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8021730:	da19      	bge.n	8021766 <scalbn+0xc6>
 8021732:	f24c 3350 	movw	r3, #50000	; 0xc350
 8021736:	429e      	cmp	r6, r3
 8021738:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 802173c:	dd0a      	ble.n	8021754 <scalbn+0xb4>
 802173e:	a112      	add	r1, pc, #72	; (adr r1, 8021788 <scalbn+0xe8>)
 8021740:	e9d1 0100 	ldrd	r0, r1, [r1]
 8021744:	2b00      	cmp	r3, #0
 8021746:	d1e2      	bne.n	802170e <scalbn+0x6e>
 8021748:	a30f      	add	r3, pc, #60	; (adr r3, 8021788 <scalbn+0xe8>)
 802174a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802174e:	f7de ff73 	bl	8000638 <__aeabi_dmul>
 8021752:	e7cb      	b.n	80216ec <scalbn+0x4c>
 8021754:	a10a      	add	r1, pc, #40	; (adr r1, 8021780 <scalbn+0xe0>)
 8021756:	e9d1 0100 	ldrd	r0, r1, [r1]
 802175a:	2b00      	cmp	r3, #0
 802175c:	d0b8      	beq.n	80216d0 <scalbn+0x30>
 802175e:	a10e      	add	r1, pc, #56	; (adr r1, 8021798 <scalbn+0xf8>)
 8021760:	e9d1 0100 	ldrd	r0, r1, [r1]
 8021764:	e7b4      	b.n	80216d0 <scalbn+0x30>
 8021766:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802176a:	3236      	adds	r2, #54	; 0x36
 802176c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8021770:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8021774:	4620      	mov	r0, r4
 8021776:	4b0c      	ldr	r3, [pc, #48]	; (80217a8 <scalbn+0x108>)
 8021778:	2200      	movs	r2, #0
 802177a:	e7e8      	b.n	802174e <scalbn+0xae>
 802177c:	f3af 8000 	nop.w
 8021780:	c2f8f359 	.word	0xc2f8f359
 8021784:	01a56e1f 	.word	0x01a56e1f
 8021788:	8800759c 	.word	0x8800759c
 802178c:	7e37e43c 	.word	0x7e37e43c
 8021790:	8800759c 	.word	0x8800759c
 8021794:	fe37e43c 	.word	0xfe37e43c
 8021798:	c2f8f359 	.word	0xc2f8f359
 802179c:	81a56e1f 	.word	0x81a56e1f
 80217a0:	43500000 	.word	0x43500000
 80217a4:	ffff3cb0 	.word	0xffff3cb0
 80217a8:	3c900000 	.word	0x3c900000

080217ac <abort>:
 80217ac:	b508      	push	{r3, lr}
 80217ae:	2006      	movs	r0, #6
 80217b0:	f000 f996 	bl	8021ae0 <raise>
 80217b4:	2001      	movs	r0, #1
 80217b6:	f7f5 fe7b 	bl	80174b0 <_exit>

080217ba <atexit>:
 80217ba:	2300      	movs	r3, #0
 80217bc:	4601      	mov	r1, r0
 80217be:	461a      	mov	r2, r3
 80217c0:	4618      	mov	r0, r3
 80217c2:	f001 b8f9 	b.w	80229b8 <__register_exitproc>
	...

080217c8 <__errno>:
 80217c8:	4b01      	ldr	r3, [pc, #4]	; (80217d0 <__errno+0x8>)
 80217ca:	6818      	ldr	r0, [r3, #0]
 80217cc:	4770      	bx	lr
 80217ce:	bf00      	nop
 80217d0:	2000000c 	.word	0x2000000c

080217d4 <__libc_init_array>:
 80217d4:	b570      	push	{r4, r5, r6, lr}
 80217d6:	4d0d      	ldr	r5, [pc, #52]	; (802180c <__libc_init_array+0x38>)
 80217d8:	4c0d      	ldr	r4, [pc, #52]	; (8021810 <__libc_init_array+0x3c>)
 80217da:	1b64      	subs	r4, r4, r5
 80217dc:	10a4      	asrs	r4, r4, #2
 80217de:	2600      	movs	r6, #0
 80217e0:	42a6      	cmp	r6, r4
 80217e2:	d109      	bne.n	80217f8 <__libc_init_array+0x24>
 80217e4:	4d0b      	ldr	r5, [pc, #44]	; (8021814 <__libc_init_array+0x40>)
 80217e6:	4c0c      	ldr	r4, [pc, #48]	; (8021818 <__libc_init_array+0x44>)
 80217e8:	f003 f870 	bl	80248cc <_init>
 80217ec:	1b64      	subs	r4, r4, r5
 80217ee:	10a4      	asrs	r4, r4, #2
 80217f0:	2600      	movs	r6, #0
 80217f2:	42a6      	cmp	r6, r4
 80217f4:	d105      	bne.n	8021802 <__libc_init_array+0x2e>
 80217f6:	bd70      	pop	{r4, r5, r6, pc}
 80217f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80217fc:	4798      	blx	r3
 80217fe:	3601      	adds	r6, #1
 8021800:	e7ee      	b.n	80217e0 <__libc_init_array+0xc>
 8021802:	f855 3b04 	ldr.w	r3, [r5], #4
 8021806:	4798      	blx	r3
 8021808:	3601      	adds	r6, #1
 802180a:	e7f2      	b.n	80217f2 <__libc_init_array+0x1e>
 802180c:	080257bc 	.word	0x080257bc
 8021810:	080257bc 	.word	0x080257bc
 8021814:	080257bc 	.word	0x080257bc
 8021818:	080257f0 	.word	0x080257f0

0802181c <isalnum>:
 802181c:	4b02      	ldr	r3, [pc, #8]	; (8021828 <isalnum+0xc>)
 802181e:	4418      	add	r0, r3
 8021820:	7840      	ldrb	r0, [r0, #1]
 8021822:	f000 0007 	and.w	r0, r0, #7
 8021826:	4770      	bx	lr
 8021828:	080253dd 	.word	0x080253dd

0802182c <isalpha>:
 802182c:	4b02      	ldr	r3, [pc, #8]	; (8021838 <isalpha+0xc>)
 802182e:	4418      	add	r0, r3
 8021830:	7840      	ldrb	r0, [r0, #1]
 8021832:	f000 0003 	and.w	r0, r0, #3
 8021836:	4770      	bx	lr
 8021838:	080253dd 	.word	0x080253dd

0802183c <isspace>:
 802183c:	4b02      	ldr	r3, [pc, #8]	; (8021848 <isspace+0xc>)
 802183e:	4418      	add	r0, r3
 8021840:	7840      	ldrb	r0, [r0, #1]
 8021842:	f000 0008 	and.w	r0, r0, #8
 8021846:	4770      	bx	lr
 8021848:	080253dd 	.word	0x080253dd

0802184c <__itoa>:
 802184c:	1e93      	subs	r3, r2, #2
 802184e:	2b22      	cmp	r3, #34	; 0x22
 8021850:	b510      	push	{r4, lr}
 8021852:	460c      	mov	r4, r1
 8021854:	d904      	bls.n	8021860 <__itoa+0x14>
 8021856:	2300      	movs	r3, #0
 8021858:	700b      	strb	r3, [r1, #0]
 802185a:	461c      	mov	r4, r3
 802185c:	4620      	mov	r0, r4
 802185e:	bd10      	pop	{r4, pc}
 8021860:	2a0a      	cmp	r2, #10
 8021862:	d109      	bne.n	8021878 <__itoa+0x2c>
 8021864:	2800      	cmp	r0, #0
 8021866:	da07      	bge.n	8021878 <__itoa+0x2c>
 8021868:	232d      	movs	r3, #45	; 0x2d
 802186a:	700b      	strb	r3, [r1, #0]
 802186c:	4240      	negs	r0, r0
 802186e:	2101      	movs	r1, #1
 8021870:	4421      	add	r1, r4
 8021872:	f001 f85f 	bl	8022934 <__utoa>
 8021876:	e7f1      	b.n	802185c <__itoa+0x10>
 8021878:	2100      	movs	r1, #0
 802187a:	e7f9      	b.n	8021870 <__itoa+0x24>

0802187c <itoa>:
 802187c:	f7ff bfe6 	b.w	802184c <__itoa>

08021880 <malloc>:
 8021880:	4b02      	ldr	r3, [pc, #8]	; (802188c <malloc+0xc>)
 8021882:	4601      	mov	r1, r0
 8021884:	6818      	ldr	r0, [r3, #0]
 8021886:	f000 b899 	b.w	80219bc <_malloc_r>
 802188a:	bf00      	nop
 802188c:	2000000c 	.word	0x2000000c

08021890 <free>:
 8021890:	4b02      	ldr	r3, [pc, #8]	; (802189c <free+0xc>)
 8021892:	4601      	mov	r1, r0
 8021894:	6818      	ldr	r0, [r3, #0]
 8021896:	f000 b841 	b.w	802191c <_free_r>
 802189a:	bf00      	nop
 802189c:	2000000c 	.word	0x2000000c

080218a0 <memcmp>:
 80218a0:	b530      	push	{r4, r5, lr}
 80218a2:	3901      	subs	r1, #1
 80218a4:	2400      	movs	r4, #0
 80218a6:	42a2      	cmp	r2, r4
 80218a8:	d101      	bne.n	80218ae <memcmp+0xe>
 80218aa:	2000      	movs	r0, #0
 80218ac:	e005      	b.n	80218ba <memcmp+0x1a>
 80218ae:	5d03      	ldrb	r3, [r0, r4]
 80218b0:	3401      	adds	r4, #1
 80218b2:	5d0d      	ldrb	r5, [r1, r4]
 80218b4:	42ab      	cmp	r3, r5
 80218b6:	d0f6      	beq.n	80218a6 <memcmp+0x6>
 80218b8:	1b58      	subs	r0, r3, r5
 80218ba:	bd30      	pop	{r4, r5, pc}

080218bc <memcpy>:
 80218bc:	440a      	add	r2, r1
 80218be:	4291      	cmp	r1, r2
 80218c0:	f100 33ff 	add.w	r3, r0, #4294967295
 80218c4:	d100      	bne.n	80218c8 <memcpy+0xc>
 80218c6:	4770      	bx	lr
 80218c8:	b510      	push	{r4, lr}
 80218ca:	f811 4b01 	ldrb.w	r4, [r1], #1
 80218ce:	f803 4f01 	strb.w	r4, [r3, #1]!
 80218d2:	4291      	cmp	r1, r2
 80218d4:	d1f9      	bne.n	80218ca <memcpy+0xe>
 80218d6:	bd10      	pop	{r4, pc}

080218d8 <memmove>:
 80218d8:	4288      	cmp	r0, r1
 80218da:	b510      	push	{r4, lr}
 80218dc:	eb01 0402 	add.w	r4, r1, r2
 80218e0:	d902      	bls.n	80218e8 <memmove+0x10>
 80218e2:	4284      	cmp	r4, r0
 80218e4:	4623      	mov	r3, r4
 80218e6:	d807      	bhi.n	80218f8 <memmove+0x20>
 80218e8:	1e43      	subs	r3, r0, #1
 80218ea:	42a1      	cmp	r1, r4
 80218ec:	d008      	beq.n	8021900 <memmove+0x28>
 80218ee:	f811 2b01 	ldrb.w	r2, [r1], #1
 80218f2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80218f6:	e7f8      	b.n	80218ea <memmove+0x12>
 80218f8:	4402      	add	r2, r0
 80218fa:	4601      	mov	r1, r0
 80218fc:	428a      	cmp	r2, r1
 80218fe:	d100      	bne.n	8021902 <memmove+0x2a>
 8021900:	bd10      	pop	{r4, pc}
 8021902:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8021906:	f802 4d01 	strb.w	r4, [r2, #-1]!
 802190a:	e7f7      	b.n	80218fc <memmove+0x24>

0802190c <memset>:
 802190c:	4402      	add	r2, r0
 802190e:	4603      	mov	r3, r0
 8021910:	4293      	cmp	r3, r2
 8021912:	d100      	bne.n	8021916 <memset+0xa>
 8021914:	4770      	bx	lr
 8021916:	f803 1b01 	strb.w	r1, [r3], #1
 802191a:	e7f9      	b.n	8021910 <memset+0x4>

0802191c <_free_r>:
 802191c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802191e:	2900      	cmp	r1, #0
 8021920:	d048      	beq.n	80219b4 <_free_r+0x98>
 8021922:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8021926:	9001      	str	r0, [sp, #4]
 8021928:	2b00      	cmp	r3, #0
 802192a:	f1a1 0404 	sub.w	r4, r1, #4
 802192e:	bfb8      	it	lt
 8021930:	18e4      	addlt	r4, r4, r3
 8021932:	f001 fc29 	bl	8023188 <__malloc_lock>
 8021936:	4a20      	ldr	r2, [pc, #128]	; (80219b8 <_free_r+0x9c>)
 8021938:	9801      	ldr	r0, [sp, #4]
 802193a:	6813      	ldr	r3, [r2, #0]
 802193c:	4615      	mov	r5, r2
 802193e:	b933      	cbnz	r3, 802194e <_free_r+0x32>
 8021940:	6063      	str	r3, [r4, #4]
 8021942:	6014      	str	r4, [r2, #0]
 8021944:	b003      	add	sp, #12
 8021946:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802194a:	f001 bc23 	b.w	8023194 <__malloc_unlock>
 802194e:	42a3      	cmp	r3, r4
 8021950:	d90b      	bls.n	802196a <_free_r+0x4e>
 8021952:	6821      	ldr	r1, [r4, #0]
 8021954:	1862      	adds	r2, r4, r1
 8021956:	4293      	cmp	r3, r2
 8021958:	bf04      	itt	eq
 802195a:	681a      	ldreq	r2, [r3, #0]
 802195c:	685b      	ldreq	r3, [r3, #4]
 802195e:	6063      	str	r3, [r4, #4]
 8021960:	bf04      	itt	eq
 8021962:	1852      	addeq	r2, r2, r1
 8021964:	6022      	streq	r2, [r4, #0]
 8021966:	602c      	str	r4, [r5, #0]
 8021968:	e7ec      	b.n	8021944 <_free_r+0x28>
 802196a:	461a      	mov	r2, r3
 802196c:	685b      	ldr	r3, [r3, #4]
 802196e:	b10b      	cbz	r3, 8021974 <_free_r+0x58>
 8021970:	42a3      	cmp	r3, r4
 8021972:	d9fa      	bls.n	802196a <_free_r+0x4e>
 8021974:	6811      	ldr	r1, [r2, #0]
 8021976:	1855      	adds	r5, r2, r1
 8021978:	42a5      	cmp	r5, r4
 802197a:	d10b      	bne.n	8021994 <_free_r+0x78>
 802197c:	6824      	ldr	r4, [r4, #0]
 802197e:	4421      	add	r1, r4
 8021980:	1854      	adds	r4, r2, r1
 8021982:	42a3      	cmp	r3, r4
 8021984:	6011      	str	r1, [r2, #0]
 8021986:	d1dd      	bne.n	8021944 <_free_r+0x28>
 8021988:	681c      	ldr	r4, [r3, #0]
 802198a:	685b      	ldr	r3, [r3, #4]
 802198c:	6053      	str	r3, [r2, #4]
 802198e:	4421      	add	r1, r4
 8021990:	6011      	str	r1, [r2, #0]
 8021992:	e7d7      	b.n	8021944 <_free_r+0x28>
 8021994:	d902      	bls.n	802199c <_free_r+0x80>
 8021996:	230c      	movs	r3, #12
 8021998:	6003      	str	r3, [r0, #0]
 802199a:	e7d3      	b.n	8021944 <_free_r+0x28>
 802199c:	6825      	ldr	r5, [r4, #0]
 802199e:	1961      	adds	r1, r4, r5
 80219a0:	428b      	cmp	r3, r1
 80219a2:	bf04      	itt	eq
 80219a4:	6819      	ldreq	r1, [r3, #0]
 80219a6:	685b      	ldreq	r3, [r3, #4]
 80219a8:	6063      	str	r3, [r4, #4]
 80219aa:	bf04      	itt	eq
 80219ac:	1949      	addeq	r1, r1, r5
 80219ae:	6021      	streq	r1, [r4, #0]
 80219b0:	6054      	str	r4, [r2, #4]
 80219b2:	e7c7      	b.n	8021944 <_free_r+0x28>
 80219b4:	b003      	add	sp, #12
 80219b6:	bd30      	pop	{r4, r5, pc}
 80219b8:	20000694 	.word	0x20000694

080219bc <_malloc_r>:
 80219bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80219be:	1ccd      	adds	r5, r1, #3
 80219c0:	f025 0503 	bic.w	r5, r5, #3
 80219c4:	3508      	adds	r5, #8
 80219c6:	2d0c      	cmp	r5, #12
 80219c8:	bf38      	it	cc
 80219ca:	250c      	movcc	r5, #12
 80219cc:	2d00      	cmp	r5, #0
 80219ce:	4606      	mov	r6, r0
 80219d0:	db01      	blt.n	80219d6 <_malloc_r+0x1a>
 80219d2:	42a9      	cmp	r1, r5
 80219d4:	d903      	bls.n	80219de <_malloc_r+0x22>
 80219d6:	230c      	movs	r3, #12
 80219d8:	6033      	str	r3, [r6, #0]
 80219da:	2000      	movs	r0, #0
 80219dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80219de:	f001 fbd3 	bl	8023188 <__malloc_lock>
 80219e2:	4921      	ldr	r1, [pc, #132]	; (8021a68 <_malloc_r+0xac>)
 80219e4:	680a      	ldr	r2, [r1, #0]
 80219e6:	4614      	mov	r4, r2
 80219e8:	b99c      	cbnz	r4, 8021a12 <_malloc_r+0x56>
 80219ea:	4f20      	ldr	r7, [pc, #128]	; (8021a6c <_malloc_r+0xb0>)
 80219ec:	683b      	ldr	r3, [r7, #0]
 80219ee:	b923      	cbnz	r3, 80219fa <_malloc_r+0x3e>
 80219f0:	4621      	mov	r1, r4
 80219f2:	4630      	mov	r0, r6
 80219f4:	f000 f83c 	bl	8021a70 <_sbrk_r>
 80219f8:	6038      	str	r0, [r7, #0]
 80219fa:	4629      	mov	r1, r5
 80219fc:	4630      	mov	r0, r6
 80219fe:	f000 f837 	bl	8021a70 <_sbrk_r>
 8021a02:	1c43      	adds	r3, r0, #1
 8021a04:	d123      	bne.n	8021a4e <_malloc_r+0x92>
 8021a06:	230c      	movs	r3, #12
 8021a08:	6033      	str	r3, [r6, #0]
 8021a0a:	4630      	mov	r0, r6
 8021a0c:	f001 fbc2 	bl	8023194 <__malloc_unlock>
 8021a10:	e7e3      	b.n	80219da <_malloc_r+0x1e>
 8021a12:	6823      	ldr	r3, [r4, #0]
 8021a14:	1b5b      	subs	r3, r3, r5
 8021a16:	d417      	bmi.n	8021a48 <_malloc_r+0x8c>
 8021a18:	2b0b      	cmp	r3, #11
 8021a1a:	d903      	bls.n	8021a24 <_malloc_r+0x68>
 8021a1c:	6023      	str	r3, [r4, #0]
 8021a1e:	441c      	add	r4, r3
 8021a20:	6025      	str	r5, [r4, #0]
 8021a22:	e004      	b.n	8021a2e <_malloc_r+0x72>
 8021a24:	6863      	ldr	r3, [r4, #4]
 8021a26:	42a2      	cmp	r2, r4
 8021a28:	bf0c      	ite	eq
 8021a2a:	600b      	streq	r3, [r1, #0]
 8021a2c:	6053      	strne	r3, [r2, #4]
 8021a2e:	4630      	mov	r0, r6
 8021a30:	f001 fbb0 	bl	8023194 <__malloc_unlock>
 8021a34:	f104 000b 	add.w	r0, r4, #11
 8021a38:	1d23      	adds	r3, r4, #4
 8021a3a:	f020 0007 	bic.w	r0, r0, #7
 8021a3e:	1ac2      	subs	r2, r0, r3
 8021a40:	d0cc      	beq.n	80219dc <_malloc_r+0x20>
 8021a42:	1a1b      	subs	r3, r3, r0
 8021a44:	50a3      	str	r3, [r4, r2]
 8021a46:	e7c9      	b.n	80219dc <_malloc_r+0x20>
 8021a48:	4622      	mov	r2, r4
 8021a4a:	6864      	ldr	r4, [r4, #4]
 8021a4c:	e7cc      	b.n	80219e8 <_malloc_r+0x2c>
 8021a4e:	1cc4      	adds	r4, r0, #3
 8021a50:	f024 0403 	bic.w	r4, r4, #3
 8021a54:	42a0      	cmp	r0, r4
 8021a56:	d0e3      	beq.n	8021a20 <_malloc_r+0x64>
 8021a58:	1a21      	subs	r1, r4, r0
 8021a5a:	4630      	mov	r0, r6
 8021a5c:	f000 f808 	bl	8021a70 <_sbrk_r>
 8021a60:	3001      	adds	r0, #1
 8021a62:	d1dd      	bne.n	8021a20 <_malloc_r+0x64>
 8021a64:	e7cf      	b.n	8021a06 <_malloc_r+0x4a>
 8021a66:	bf00      	nop
 8021a68:	20000694 	.word	0x20000694
 8021a6c:	20000698 	.word	0x20000698

08021a70 <_sbrk_r>:
 8021a70:	b538      	push	{r3, r4, r5, lr}
 8021a72:	4d06      	ldr	r5, [pc, #24]	; (8021a8c <_sbrk_r+0x1c>)
 8021a74:	2300      	movs	r3, #0
 8021a76:	4604      	mov	r4, r0
 8021a78:	4608      	mov	r0, r1
 8021a7a:	602b      	str	r3, [r5, #0]
 8021a7c:	f7f5 fd90 	bl	80175a0 <_sbrk>
 8021a80:	1c43      	adds	r3, r0, #1
 8021a82:	d102      	bne.n	8021a8a <_sbrk_r+0x1a>
 8021a84:	682b      	ldr	r3, [r5, #0]
 8021a86:	b103      	cbz	r3, 8021a8a <_sbrk_r+0x1a>
 8021a88:	6023      	str	r3, [r4, #0]
 8021a8a:	bd38      	pop	{r3, r4, r5, pc}
 8021a8c:	2000073c 	.word	0x2000073c

08021a90 <_raise_r>:
 8021a90:	291f      	cmp	r1, #31
 8021a92:	b538      	push	{r3, r4, r5, lr}
 8021a94:	4604      	mov	r4, r0
 8021a96:	460d      	mov	r5, r1
 8021a98:	d904      	bls.n	8021aa4 <_raise_r+0x14>
 8021a9a:	2316      	movs	r3, #22
 8021a9c:	6003      	str	r3, [r0, #0]
 8021a9e:	f04f 30ff 	mov.w	r0, #4294967295
 8021aa2:	bd38      	pop	{r3, r4, r5, pc}
 8021aa4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8021aa6:	b112      	cbz	r2, 8021aae <_raise_r+0x1e>
 8021aa8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021aac:	b94b      	cbnz	r3, 8021ac2 <_raise_r+0x32>
 8021aae:	4620      	mov	r0, r4
 8021ab0:	f000 f830 	bl	8021b14 <_getpid_r>
 8021ab4:	462a      	mov	r2, r5
 8021ab6:	4601      	mov	r1, r0
 8021ab8:	4620      	mov	r0, r4
 8021aba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021abe:	f000 b817 	b.w	8021af0 <_kill_r>
 8021ac2:	2b01      	cmp	r3, #1
 8021ac4:	d00a      	beq.n	8021adc <_raise_r+0x4c>
 8021ac6:	1c59      	adds	r1, r3, #1
 8021ac8:	d103      	bne.n	8021ad2 <_raise_r+0x42>
 8021aca:	2316      	movs	r3, #22
 8021acc:	6003      	str	r3, [r0, #0]
 8021ace:	2001      	movs	r0, #1
 8021ad0:	e7e7      	b.n	8021aa2 <_raise_r+0x12>
 8021ad2:	2400      	movs	r4, #0
 8021ad4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021ad8:	4628      	mov	r0, r5
 8021ada:	4798      	blx	r3
 8021adc:	2000      	movs	r0, #0
 8021ade:	e7e0      	b.n	8021aa2 <_raise_r+0x12>

08021ae0 <raise>:
 8021ae0:	4b02      	ldr	r3, [pc, #8]	; (8021aec <raise+0xc>)
 8021ae2:	4601      	mov	r1, r0
 8021ae4:	6818      	ldr	r0, [r3, #0]
 8021ae6:	f7ff bfd3 	b.w	8021a90 <_raise_r>
 8021aea:	bf00      	nop
 8021aec:	2000000c 	.word	0x2000000c

08021af0 <_kill_r>:
 8021af0:	b538      	push	{r3, r4, r5, lr}
 8021af2:	4d07      	ldr	r5, [pc, #28]	; (8021b10 <_kill_r+0x20>)
 8021af4:	2300      	movs	r3, #0
 8021af6:	4604      	mov	r4, r0
 8021af8:	4608      	mov	r0, r1
 8021afa:	4611      	mov	r1, r2
 8021afc:	602b      	str	r3, [r5, #0]
 8021afe:	f7f5 fcc7 	bl	8017490 <_kill>
 8021b02:	1c43      	adds	r3, r0, #1
 8021b04:	d102      	bne.n	8021b0c <_kill_r+0x1c>
 8021b06:	682b      	ldr	r3, [r5, #0]
 8021b08:	b103      	cbz	r3, 8021b0c <_kill_r+0x1c>
 8021b0a:	6023      	str	r3, [r4, #0]
 8021b0c:	bd38      	pop	{r3, r4, r5, pc}
 8021b0e:	bf00      	nop
 8021b10:	2000073c 	.word	0x2000073c

08021b14 <_getpid_r>:
 8021b14:	f7f5 bcb4 	b.w	8017480 <_getpid>

08021b18 <sulp>:
 8021b18:	b570      	push	{r4, r5, r6, lr}
 8021b1a:	4604      	mov	r4, r0
 8021b1c:	460d      	mov	r5, r1
 8021b1e:	ec45 4b10 	vmov	d0, r4, r5
 8021b22:	4616      	mov	r6, r2
 8021b24:	f001 fea8 	bl	8023878 <__ulp>
 8021b28:	ec51 0b10 	vmov	r0, r1, d0
 8021b2c:	b17e      	cbz	r6, 8021b4e <sulp+0x36>
 8021b2e:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8021b32:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8021b36:	2b00      	cmp	r3, #0
 8021b38:	dd09      	ble.n	8021b4e <sulp+0x36>
 8021b3a:	051b      	lsls	r3, r3, #20
 8021b3c:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8021b40:	2400      	movs	r4, #0
 8021b42:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8021b46:	4622      	mov	r2, r4
 8021b48:	462b      	mov	r3, r5
 8021b4a:	f7de fd75 	bl	8000638 <__aeabi_dmul>
 8021b4e:	bd70      	pop	{r4, r5, r6, pc}

08021b50 <_strtod_l>:
 8021b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b54:	b0a3      	sub	sp, #140	; 0x8c
 8021b56:	461f      	mov	r7, r3
 8021b58:	2300      	movs	r3, #0
 8021b5a:	931e      	str	r3, [sp, #120]	; 0x78
 8021b5c:	4ba4      	ldr	r3, [pc, #656]	; (8021df0 <_strtod_l+0x2a0>)
 8021b5e:	9219      	str	r2, [sp, #100]	; 0x64
 8021b60:	681b      	ldr	r3, [r3, #0]
 8021b62:	9307      	str	r3, [sp, #28]
 8021b64:	4604      	mov	r4, r0
 8021b66:	4618      	mov	r0, r3
 8021b68:	4688      	mov	r8, r1
 8021b6a:	f7de fba1 	bl	80002b0 <strlen>
 8021b6e:	f04f 0a00 	mov.w	sl, #0
 8021b72:	4605      	mov	r5, r0
 8021b74:	f04f 0b00 	mov.w	fp, #0
 8021b78:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8021b7c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021b7e:	781a      	ldrb	r2, [r3, #0]
 8021b80:	2a2b      	cmp	r2, #43	; 0x2b
 8021b82:	d04c      	beq.n	8021c1e <_strtod_l+0xce>
 8021b84:	d839      	bhi.n	8021bfa <_strtod_l+0xaa>
 8021b86:	2a0d      	cmp	r2, #13
 8021b88:	d832      	bhi.n	8021bf0 <_strtod_l+0xa0>
 8021b8a:	2a08      	cmp	r2, #8
 8021b8c:	d832      	bhi.n	8021bf4 <_strtod_l+0xa4>
 8021b8e:	2a00      	cmp	r2, #0
 8021b90:	d03c      	beq.n	8021c0c <_strtod_l+0xbc>
 8021b92:	2300      	movs	r3, #0
 8021b94:	930e      	str	r3, [sp, #56]	; 0x38
 8021b96:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8021b98:	7833      	ldrb	r3, [r6, #0]
 8021b9a:	2b30      	cmp	r3, #48	; 0x30
 8021b9c:	f040 80b4 	bne.w	8021d08 <_strtod_l+0x1b8>
 8021ba0:	7873      	ldrb	r3, [r6, #1]
 8021ba2:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8021ba6:	2b58      	cmp	r3, #88	; 0x58
 8021ba8:	d16c      	bne.n	8021c84 <_strtod_l+0x134>
 8021baa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021bac:	9301      	str	r3, [sp, #4]
 8021bae:	ab1e      	add	r3, sp, #120	; 0x78
 8021bb0:	9702      	str	r7, [sp, #8]
 8021bb2:	9300      	str	r3, [sp, #0]
 8021bb4:	4a8f      	ldr	r2, [pc, #572]	; (8021df4 <_strtod_l+0x2a4>)
 8021bb6:	ab1f      	add	r3, sp, #124	; 0x7c
 8021bb8:	a91d      	add	r1, sp, #116	; 0x74
 8021bba:	4620      	mov	r0, r4
 8021bbc:	f000 ffc6 	bl	8022b4c <__gethex>
 8021bc0:	f010 0707 	ands.w	r7, r0, #7
 8021bc4:	4605      	mov	r5, r0
 8021bc6:	d005      	beq.n	8021bd4 <_strtod_l+0x84>
 8021bc8:	2f06      	cmp	r7, #6
 8021bca:	d12a      	bne.n	8021c22 <_strtod_l+0xd2>
 8021bcc:	3601      	adds	r6, #1
 8021bce:	2300      	movs	r3, #0
 8021bd0:	961d      	str	r6, [sp, #116]	; 0x74
 8021bd2:	930e      	str	r3, [sp, #56]	; 0x38
 8021bd4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021bd6:	2b00      	cmp	r3, #0
 8021bd8:	f040 8596 	bne.w	8022708 <_strtod_l+0xbb8>
 8021bdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021bde:	b1db      	cbz	r3, 8021c18 <_strtod_l+0xc8>
 8021be0:	4652      	mov	r2, sl
 8021be2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8021be6:	ec43 2b10 	vmov	d0, r2, r3
 8021bea:	b023      	add	sp, #140	; 0x8c
 8021bec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021bf0:	2a20      	cmp	r2, #32
 8021bf2:	d1ce      	bne.n	8021b92 <_strtod_l+0x42>
 8021bf4:	3301      	adds	r3, #1
 8021bf6:	931d      	str	r3, [sp, #116]	; 0x74
 8021bf8:	e7c0      	b.n	8021b7c <_strtod_l+0x2c>
 8021bfa:	2a2d      	cmp	r2, #45	; 0x2d
 8021bfc:	d1c9      	bne.n	8021b92 <_strtod_l+0x42>
 8021bfe:	2201      	movs	r2, #1
 8021c00:	920e      	str	r2, [sp, #56]	; 0x38
 8021c02:	1c5a      	adds	r2, r3, #1
 8021c04:	921d      	str	r2, [sp, #116]	; 0x74
 8021c06:	785b      	ldrb	r3, [r3, #1]
 8021c08:	2b00      	cmp	r3, #0
 8021c0a:	d1c4      	bne.n	8021b96 <_strtod_l+0x46>
 8021c0c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021c0e:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8021c12:	2b00      	cmp	r3, #0
 8021c14:	f040 8576 	bne.w	8022704 <_strtod_l+0xbb4>
 8021c18:	4652      	mov	r2, sl
 8021c1a:	465b      	mov	r3, fp
 8021c1c:	e7e3      	b.n	8021be6 <_strtod_l+0x96>
 8021c1e:	2200      	movs	r2, #0
 8021c20:	e7ee      	b.n	8021c00 <_strtod_l+0xb0>
 8021c22:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8021c24:	b13a      	cbz	r2, 8021c36 <_strtod_l+0xe6>
 8021c26:	2135      	movs	r1, #53	; 0x35
 8021c28:	a820      	add	r0, sp, #128	; 0x80
 8021c2a:	f001 ff30 	bl	8023a8e <__copybits>
 8021c2e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8021c30:	4620      	mov	r0, r4
 8021c32:	f001 faf5 	bl	8023220 <_Bfree>
 8021c36:	3f01      	subs	r7, #1
 8021c38:	2f05      	cmp	r7, #5
 8021c3a:	d807      	bhi.n	8021c4c <_strtod_l+0xfc>
 8021c3c:	e8df f007 	tbb	[pc, r7]
 8021c40:	1d180b0e 	.word	0x1d180b0e
 8021c44:	030e      	.short	0x030e
 8021c46:	f04f 0b00 	mov.w	fp, #0
 8021c4a:	46da      	mov	sl, fp
 8021c4c:	0728      	lsls	r0, r5, #28
 8021c4e:	d5c1      	bpl.n	8021bd4 <_strtod_l+0x84>
 8021c50:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 8021c54:	e7be      	b.n	8021bd4 <_strtod_l+0x84>
 8021c56:	e9dd ab20 	ldrd	sl, fp, [sp, #128]	; 0x80
 8021c5a:	e7f7      	b.n	8021c4c <_strtod_l+0xfc>
 8021c5c:	e9dd a320 	ldrd	sl, r3, [sp, #128]	; 0x80
 8021c60:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8021c62:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8021c66:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8021c6a:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 8021c6e:	e7ed      	b.n	8021c4c <_strtod_l+0xfc>
 8021c70:	f8df b184 	ldr.w	fp, [pc, #388]	; 8021df8 <_strtod_l+0x2a8>
 8021c74:	f04f 0a00 	mov.w	sl, #0
 8021c78:	e7e8      	b.n	8021c4c <_strtod_l+0xfc>
 8021c7a:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 8021c7e:	f04f 3aff 	mov.w	sl, #4294967295
 8021c82:	e7e3      	b.n	8021c4c <_strtod_l+0xfc>
 8021c84:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021c86:	1c5a      	adds	r2, r3, #1
 8021c88:	921d      	str	r2, [sp, #116]	; 0x74
 8021c8a:	785b      	ldrb	r3, [r3, #1]
 8021c8c:	2b30      	cmp	r3, #48	; 0x30
 8021c8e:	d0f9      	beq.n	8021c84 <_strtod_l+0x134>
 8021c90:	2b00      	cmp	r3, #0
 8021c92:	d09f      	beq.n	8021bd4 <_strtod_l+0x84>
 8021c94:	2301      	movs	r3, #1
 8021c96:	f04f 0900 	mov.w	r9, #0
 8021c9a:	9304      	str	r3, [sp, #16]
 8021c9c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021c9e:	930a      	str	r3, [sp, #40]	; 0x28
 8021ca0:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8021ca4:	464f      	mov	r7, r9
 8021ca6:	220a      	movs	r2, #10
 8021ca8:	981d      	ldr	r0, [sp, #116]	; 0x74
 8021caa:	7806      	ldrb	r6, [r0, #0]
 8021cac:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8021cb0:	b2d9      	uxtb	r1, r3
 8021cb2:	2909      	cmp	r1, #9
 8021cb4:	d92a      	bls.n	8021d0c <_strtod_l+0x1bc>
 8021cb6:	9907      	ldr	r1, [sp, #28]
 8021cb8:	462a      	mov	r2, r5
 8021cba:	f001 ff41 	bl	8023b40 <strncmp>
 8021cbe:	b398      	cbz	r0, 8021d28 <_strtod_l+0x1d8>
 8021cc0:	2000      	movs	r0, #0
 8021cc2:	4633      	mov	r3, r6
 8021cc4:	463d      	mov	r5, r7
 8021cc6:	9007      	str	r0, [sp, #28]
 8021cc8:	4602      	mov	r2, r0
 8021cca:	2b65      	cmp	r3, #101	; 0x65
 8021ccc:	d001      	beq.n	8021cd2 <_strtod_l+0x182>
 8021cce:	2b45      	cmp	r3, #69	; 0x45
 8021cd0:	d118      	bne.n	8021d04 <_strtod_l+0x1b4>
 8021cd2:	b91d      	cbnz	r5, 8021cdc <_strtod_l+0x18c>
 8021cd4:	9b04      	ldr	r3, [sp, #16]
 8021cd6:	4303      	orrs	r3, r0
 8021cd8:	d098      	beq.n	8021c0c <_strtod_l+0xbc>
 8021cda:	2500      	movs	r5, #0
 8021cdc:	f8dd 8074 	ldr.w	r8, [sp, #116]	; 0x74
 8021ce0:	f108 0301 	add.w	r3, r8, #1
 8021ce4:	931d      	str	r3, [sp, #116]	; 0x74
 8021ce6:	f898 3001 	ldrb.w	r3, [r8, #1]
 8021cea:	2b2b      	cmp	r3, #43	; 0x2b
 8021cec:	d075      	beq.n	8021dda <_strtod_l+0x28a>
 8021cee:	2b2d      	cmp	r3, #45	; 0x2d
 8021cf0:	d07b      	beq.n	8021dea <_strtod_l+0x29a>
 8021cf2:	f04f 0c00 	mov.w	ip, #0
 8021cf6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8021cfa:	2909      	cmp	r1, #9
 8021cfc:	f240 8082 	bls.w	8021e04 <_strtod_l+0x2b4>
 8021d00:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
 8021d04:	2600      	movs	r6, #0
 8021d06:	e09d      	b.n	8021e44 <_strtod_l+0x2f4>
 8021d08:	2300      	movs	r3, #0
 8021d0a:	e7c4      	b.n	8021c96 <_strtod_l+0x146>
 8021d0c:	2f08      	cmp	r7, #8
 8021d0e:	bfd8      	it	le
 8021d10:	9909      	ldrle	r1, [sp, #36]	; 0x24
 8021d12:	f100 0001 	add.w	r0, r0, #1
 8021d16:	bfda      	itte	le
 8021d18:	fb02 3301 	mlale	r3, r2, r1, r3
 8021d1c:	9309      	strle	r3, [sp, #36]	; 0x24
 8021d1e:	fb02 3909 	mlagt	r9, r2, r9, r3
 8021d22:	3701      	adds	r7, #1
 8021d24:	901d      	str	r0, [sp, #116]	; 0x74
 8021d26:	e7bf      	b.n	8021ca8 <_strtod_l+0x158>
 8021d28:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021d2a:	195a      	adds	r2, r3, r5
 8021d2c:	921d      	str	r2, [sp, #116]	; 0x74
 8021d2e:	5d5b      	ldrb	r3, [r3, r5]
 8021d30:	2f00      	cmp	r7, #0
 8021d32:	d037      	beq.n	8021da4 <_strtod_l+0x254>
 8021d34:	9007      	str	r0, [sp, #28]
 8021d36:	463d      	mov	r5, r7
 8021d38:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8021d3c:	2a09      	cmp	r2, #9
 8021d3e:	d912      	bls.n	8021d66 <_strtod_l+0x216>
 8021d40:	2201      	movs	r2, #1
 8021d42:	e7c2      	b.n	8021cca <_strtod_l+0x17a>
 8021d44:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021d46:	1c5a      	adds	r2, r3, #1
 8021d48:	921d      	str	r2, [sp, #116]	; 0x74
 8021d4a:	785b      	ldrb	r3, [r3, #1]
 8021d4c:	3001      	adds	r0, #1
 8021d4e:	2b30      	cmp	r3, #48	; 0x30
 8021d50:	d0f8      	beq.n	8021d44 <_strtod_l+0x1f4>
 8021d52:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 8021d56:	2a08      	cmp	r2, #8
 8021d58:	f200 84db 	bhi.w	8022712 <_strtod_l+0xbc2>
 8021d5c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021d5e:	9007      	str	r0, [sp, #28]
 8021d60:	2000      	movs	r0, #0
 8021d62:	920a      	str	r2, [sp, #40]	; 0x28
 8021d64:	4605      	mov	r5, r0
 8021d66:	3b30      	subs	r3, #48	; 0x30
 8021d68:	f100 0201 	add.w	r2, r0, #1
 8021d6c:	d014      	beq.n	8021d98 <_strtod_l+0x248>
 8021d6e:	9907      	ldr	r1, [sp, #28]
 8021d70:	4411      	add	r1, r2
 8021d72:	9107      	str	r1, [sp, #28]
 8021d74:	462a      	mov	r2, r5
 8021d76:	eb00 0e05 	add.w	lr, r0, r5
 8021d7a:	210a      	movs	r1, #10
 8021d7c:	4572      	cmp	r2, lr
 8021d7e:	d113      	bne.n	8021da8 <_strtod_l+0x258>
 8021d80:	182a      	adds	r2, r5, r0
 8021d82:	2a08      	cmp	r2, #8
 8021d84:	f105 0501 	add.w	r5, r5, #1
 8021d88:	4405      	add	r5, r0
 8021d8a:	dc1c      	bgt.n	8021dc6 <_strtod_l+0x276>
 8021d8c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021d8e:	220a      	movs	r2, #10
 8021d90:	fb02 3301 	mla	r3, r2, r1, r3
 8021d94:	9309      	str	r3, [sp, #36]	; 0x24
 8021d96:	2200      	movs	r2, #0
 8021d98:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021d9a:	1c59      	adds	r1, r3, #1
 8021d9c:	911d      	str	r1, [sp, #116]	; 0x74
 8021d9e:	785b      	ldrb	r3, [r3, #1]
 8021da0:	4610      	mov	r0, r2
 8021da2:	e7c9      	b.n	8021d38 <_strtod_l+0x1e8>
 8021da4:	4638      	mov	r0, r7
 8021da6:	e7d2      	b.n	8021d4e <_strtod_l+0x1fe>
 8021da8:	2a08      	cmp	r2, #8
 8021daa:	dc04      	bgt.n	8021db6 <_strtod_l+0x266>
 8021dac:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8021dae:	434e      	muls	r6, r1
 8021db0:	9609      	str	r6, [sp, #36]	; 0x24
 8021db2:	3201      	adds	r2, #1
 8021db4:	e7e2      	b.n	8021d7c <_strtod_l+0x22c>
 8021db6:	f102 0c01 	add.w	ip, r2, #1
 8021dba:	f1bc 0f10 	cmp.w	ip, #16
 8021dbe:	bfd8      	it	le
 8021dc0:	fb01 f909 	mulle.w	r9, r1, r9
 8021dc4:	e7f5      	b.n	8021db2 <_strtod_l+0x262>
 8021dc6:	2d10      	cmp	r5, #16
 8021dc8:	bfdc      	itt	le
 8021dca:	220a      	movle	r2, #10
 8021dcc:	fb02 3909 	mlale	r9, r2, r9, r3
 8021dd0:	e7e1      	b.n	8021d96 <_strtod_l+0x246>
 8021dd2:	2300      	movs	r3, #0
 8021dd4:	9307      	str	r3, [sp, #28]
 8021dd6:	2201      	movs	r2, #1
 8021dd8:	e77c      	b.n	8021cd4 <_strtod_l+0x184>
 8021dda:	f04f 0c00 	mov.w	ip, #0
 8021dde:	f108 0302 	add.w	r3, r8, #2
 8021de2:	931d      	str	r3, [sp, #116]	; 0x74
 8021de4:	f898 3002 	ldrb.w	r3, [r8, #2]
 8021de8:	e785      	b.n	8021cf6 <_strtod_l+0x1a6>
 8021dea:	f04f 0c01 	mov.w	ip, #1
 8021dee:	e7f6      	b.n	8021dde <_strtod_l+0x28e>
 8021df0:	08025558 	.word	0x08025558
 8021df4:	08025368 	.word	0x08025368
 8021df8:	7ff00000 	.word	0x7ff00000
 8021dfc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021dfe:	1c59      	adds	r1, r3, #1
 8021e00:	911d      	str	r1, [sp, #116]	; 0x74
 8021e02:	785b      	ldrb	r3, [r3, #1]
 8021e04:	2b30      	cmp	r3, #48	; 0x30
 8021e06:	d0f9      	beq.n	8021dfc <_strtod_l+0x2ac>
 8021e08:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
 8021e0c:	2908      	cmp	r1, #8
 8021e0e:	f63f af79 	bhi.w	8021d04 <_strtod_l+0x1b4>
 8021e12:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8021e16:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021e18:	9308      	str	r3, [sp, #32]
 8021e1a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021e1c:	1c59      	adds	r1, r3, #1
 8021e1e:	911d      	str	r1, [sp, #116]	; 0x74
 8021e20:	785b      	ldrb	r3, [r3, #1]
 8021e22:	f1a3 0630 	sub.w	r6, r3, #48	; 0x30
 8021e26:	2e09      	cmp	r6, #9
 8021e28:	d937      	bls.n	8021e9a <_strtod_l+0x34a>
 8021e2a:	9e08      	ldr	r6, [sp, #32]
 8021e2c:	1b89      	subs	r1, r1, r6
 8021e2e:	2908      	cmp	r1, #8
 8021e30:	f644 661f 	movw	r6, #19999	; 0x4e1f
 8021e34:	dc02      	bgt.n	8021e3c <_strtod_l+0x2ec>
 8021e36:	4576      	cmp	r6, lr
 8021e38:	bfa8      	it	ge
 8021e3a:	4676      	movge	r6, lr
 8021e3c:	f1bc 0f00 	cmp.w	ip, #0
 8021e40:	d000      	beq.n	8021e44 <_strtod_l+0x2f4>
 8021e42:	4276      	negs	r6, r6
 8021e44:	2d00      	cmp	r5, #0
 8021e46:	d14f      	bne.n	8021ee8 <_strtod_l+0x398>
 8021e48:	9904      	ldr	r1, [sp, #16]
 8021e4a:	4301      	orrs	r1, r0
 8021e4c:	f47f aec2 	bne.w	8021bd4 <_strtod_l+0x84>
 8021e50:	2a00      	cmp	r2, #0
 8021e52:	f47f aedb 	bne.w	8021c0c <_strtod_l+0xbc>
 8021e56:	2b69      	cmp	r3, #105	; 0x69
 8021e58:	d027      	beq.n	8021eaa <_strtod_l+0x35a>
 8021e5a:	dc24      	bgt.n	8021ea6 <_strtod_l+0x356>
 8021e5c:	2b49      	cmp	r3, #73	; 0x49
 8021e5e:	d024      	beq.n	8021eaa <_strtod_l+0x35a>
 8021e60:	2b4e      	cmp	r3, #78	; 0x4e
 8021e62:	f47f aed3 	bne.w	8021c0c <_strtod_l+0xbc>
 8021e66:	499e      	ldr	r1, [pc, #632]	; (80220e0 <_strtod_l+0x590>)
 8021e68:	a81d      	add	r0, sp, #116	; 0x74
 8021e6a:	f001 f8c7 	bl	8022ffc <__match>
 8021e6e:	2800      	cmp	r0, #0
 8021e70:	f43f aecc 	beq.w	8021c0c <_strtod_l+0xbc>
 8021e74:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021e76:	781b      	ldrb	r3, [r3, #0]
 8021e78:	2b28      	cmp	r3, #40	; 0x28
 8021e7a:	d12d      	bne.n	8021ed8 <_strtod_l+0x388>
 8021e7c:	4999      	ldr	r1, [pc, #612]	; (80220e4 <_strtod_l+0x594>)
 8021e7e:	aa20      	add	r2, sp, #128	; 0x80
 8021e80:	a81d      	add	r0, sp, #116	; 0x74
 8021e82:	f001 f8cf 	bl	8023024 <__hexnan>
 8021e86:	2805      	cmp	r0, #5
 8021e88:	d126      	bne.n	8021ed8 <_strtod_l+0x388>
 8021e8a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021e8c:	f8dd a080 	ldr.w	sl, [sp, #128]	; 0x80
 8021e90:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8021e94:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8021e98:	e69c      	b.n	8021bd4 <_strtod_l+0x84>
 8021e9a:	210a      	movs	r1, #10
 8021e9c:	fb01 3e0e 	mla	lr, r1, lr, r3
 8021ea0:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8021ea4:	e7b9      	b.n	8021e1a <_strtod_l+0x2ca>
 8021ea6:	2b6e      	cmp	r3, #110	; 0x6e
 8021ea8:	e7db      	b.n	8021e62 <_strtod_l+0x312>
 8021eaa:	498f      	ldr	r1, [pc, #572]	; (80220e8 <_strtod_l+0x598>)
 8021eac:	a81d      	add	r0, sp, #116	; 0x74
 8021eae:	f001 f8a5 	bl	8022ffc <__match>
 8021eb2:	2800      	cmp	r0, #0
 8021eb4:	f43f aeaa 	beq.w	8021c0c <_strtod_l+0xbc>
 8021eb8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021eba:	498c      	ldr	r1, [pc, #560]	; (80220ec <_strtod_l+0x59c>)
 8021ebc:	3b01      	subs	r3, #1
 8021ebe:	a81d      	add	r0, sp, #116	; 0x74
 8021ec0:	931d      	str	r3, [sp, #116]	; 0x74
 8021ec2:	f001 f89b 	bl	8022ffc <__match>
 8021ec6:	b910      	cbnz	r0, 8021ece <_strtod_l+0x37e>
 8021ec8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8021eca:	3301      	adds	r3, #1
 8021ecc:	931d      	str	r3, [sp, #116]	; 0x74
 8021ece:	f8df b22c 	ldr.w	fp, [pc, #556]	; 80220fc <_strtod_l+0x5ac>
 8021ed2:	f04f 0a00 	mov.w	sl, #0
 8021ed6:	e67d      	b.n	8021bd4 <_strtod_l+0x84>
 8021ed8:	4885      	ldr	r0, [pc, #532]	; (80220f0 <_strtod_l+0x5a0>)
 8021eda:	f7ff fb4d 	bl	8021578 <nan>
 8021ede:	ed8d 0b04 	vstr	d0, [sp, #16]
 8021ee2:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 8021ee6:	e675      	b.n	8021bd4 <_strtod_l+0x84>
 8021ee8:	9b07      	ldr	r3, [sp, #28]
 8021eea:	9809      	ldr	r0, [sp, #36]	; 0x24
 8021eec:	1af3      	subs	r3, r6, r3
 8021eee:	2f00      	cmp	r7, #0
 8021ef0:	bf08      	it	eq
 8021ef2:	462f      	moveq	r7, r5
 8021ef4:	2d10      	cmp	r5, #16
 8021ef6:	9308      	str	r3, [sp, #32]
 8021ef8:	46a8      	mov	r8, r5
 8021efa:	bfa8      	it	ge
 8021efc:	f04f 0810 	movge.w	r8, #16
 8021f00:	f7de fb20 	bl	8000544 <__aeabi_ui2d>
 8021f04:	2d09      	cmp	r5, #9
 8021f06:	4682      	mov	sl, r0
 8021f08:	468b      	mov	fp, r1
 8021f0a:	dd13      	ble.n	8021f34 <_strtod_l+0x3e4>
 8021f0c:	4b79      	ldr	r3, [pc, #484]	; (80220f4 <_strtod_l+0x5a4>)
 8021f0e:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8021f12:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8021f16:	f7de fb8f 	bl	8000638 <__aeabi_dmul>
 8021f1a:	4682      	mov	sl, r0
 8021f1c:	4648      	mov	r0, r9
 8021f1e:	468b      	mov	fp, r1
 8021f20:	f7de fb10 	bl	8000544 <__aeabi_ui2d>
 8021f24:	4602      	mov	r2, r0
 8021f26:	460b      	mov	r3, r1
 8021f28:	4650      	mov	r0, sl
 8021f2a:	4659      	mov	r1, fp
 8021f2c:	f7de f9ce 	bl	80002cc <__adddf3>
 8021f30:	4682      	mov	sl, r0
 8021f32:	468b      	mov	fp, r1
 8021f34:	2d0f      	cmp	r5, #15
 8021f36:	dc38      	bgt.n	8021faa <_strtod_l+0x45a>
 8021f38:	9b08      	ldr	r3, [sp, #32]
 8021f3a:	2b00      	cmp	r3, #0
 8021f3c:	f43f ae4a 	beq.w	8021bd4 <_strtod_l+0x84>
 8021f40:	dd24      	ble.n	8021f8c <_strtod_l+0x43c>
 8021f42:	2b16      	cmp	r3, #22
 8021f44:	dc0b      	bgt.n	8021f5e <_strtod_l+0x40e>
 8021f46:	4d6b      	ldr	r5, [pc, #428]	; (80220f4 <_strtod_l+0x5a4>)
 8021f48:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8021f4c:	e9d5 0100 	ldrd	r0, r1, [r5]
 8021f50:	4652      	mov	r2, sl
 8021f52:	465b      	mov	r3, fp
 8021f54:	f7de fb70 	bl	8000638 <__aeabi_dmul>
 8021f58:	4682      	mov	sl, r0
 8021f5a:	468b      	mov	fp, r1
 8021f5c:	e63a      	b.n	8021bd4 <_strtod_l+0x84>
 8021f5e:	9a08      	ldr	r2, [sp, #32]
 8021f60:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 8021f64:	4293      	cmp	r3, r2
 8021f66:	db20      	blt.n	8021faa <_strtod_l+0x45a>
 8021f68:	4c62      	ldr	r4, [pc, #392]	; (80220f4 <_strtod_l+0x5a4>)
 8021f6a:	f1c5 050f 	rsb	r5, r5, #15
 8021f6e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8021f72:	4652      	mov	r2, sl
 8021f74:	465b      	mov	r3, fp
 8021f76:	e9d1 0100 	ldrd	r0, r1, [r1]
 8021f7a:	f7de fb5d 	bl	8000638 <__aeabi_dmul>
 8021f7e:	9b08      	ldr	r3, [sp, #32]
 8021f80:	1b5d      	subs	r5, r3, r5
 8021f82:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8021f86:	e9d4 2300 	ldrd	r2, r3, [r4]
 8021f8a:	e7e3      	b.n	8021f54 <_strtod_l+0x404>
 8021f8c:	9b08      	ldr	r3, [sp, #32]
 8021f8e:	3316      	adds	r3, #22
 8021f90:	db0b      	blt.n	8021faa <_strtod_l+0x45a>
 8021f92:	9b07      	ldr	r3, [sp, #28]
 8021f94:	4a57      	ldr	r2, [pc, #348]	; (80220f4 <_strtod_l+0x5a4>)
 8021f96:	1b9e      	subs	r6, r3, r6
 8021f98:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 8021f9c:	e9d6 2300 	ldrd	r2, r3, [r6]
 8021fa0:	4650      	mov	r0, sl
 8021fa2:	4659      	mov	r1, fp
 8021fa4:	f7de fc72 	bl	800088c <__aeabi_ddiv>
 8021fa8:	e7d6      	b.n	8021f58 <_strtod_l+0x408>
 8021faa:	9b08      	ldr	r3, [sp, #32]
 8021fac:	eba5 0808 	sub.w	r8, r5, r8
 8021fb0:	4498      	add	r8, r3
 8021fb2:	f1b8 0f00 	cmp.w	r8, #0
 8021fb6:	dd71      	ble.n	802209c <_strtod_l+0x54c>
 8021fb8:	f018 030f 	ands.w	r3, r8, #15
 8021fbc:	d00a      	beq.n	8021fd4 <_strtod_l+0x484>
 8021fbe:	494d      	ldr	r1, [pc, #308]	; (80220f4 <_strtod_l+0x5a4>)
 8021fc0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8021fc4:	4652      	mov	r2, sl
 8021fc6:	465b      	mov	r3, fp
 8021fc8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8021fcc:	f7de fb34 	bl	8000638 <__aeabi_dmul>
 8021fd0:	4682      	mov	sl, r0
 8021fd2:	468b      	mov	fp, r1
 8021fd4:	f038 080f 	bics.w	r8, r8, #15
 8021fd8:	d04d      	beq.n	8022076 <_strtod_l+0x526>
 8021fda:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8021fde:	dd22      	ble.n	8022026 <_strtod_l+0x4d6>
 8021fe0:	2500      	movs	r5, #0
 8021fe2:	462e      	mov	r6, r5
 8021fe4:	9509      	str	r5, [sp, #36]	; 0x24
 8021fe6:	9507      	str	r5, [sp, #28]
 8021fe8:	2322      	movs	r3, #34	; 0x22
 8021fea:	f8df b110 	ldr.w	fp, [pc, #272]	; 80220fc <_strtod_l+0x5ac>
 8021fee:	6023      	str	r3, [r4, #0]
 8021ff0:	f04f 0a00 	mov.w	sl, #0
 8021ff4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ff6:	2b00      	cmp	r3, #0
 8021ff8:	f43f adec 	beq.w	8021bd4 <_strtod_l+0x84>
 8021ffc:	991e      	ldr	r1, [sp, #120]	; 0x78
 8021ffe:	4620      	mov	r0, r4
 8022000:	f001 f90e 	bl	8023220 <_Bfree>
 8022004:	9907      	ldr	r1, [sp, #28]
 8022006:	4620      	mov	r0, r4
 8022008:	f001 f90a 	bl	8023220 <_Bfree>
 802200c:	4631      	mov	r1, r6
 802200e:	4620      	mov	r0, r4
 8022010:	f001 f906 	bl	8023220 <_Bfree>
 8022014:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022016:	4620      	mov	r0, r4
 8022018:	f001 f902 	bl	8023220 <_Bfree>
 802201c:	4629      	mov	r1, r5
 802201e:	4620      	mov	r0, r4
 8022020:	f001 f8fe 	bl	8023220 <_Bfree>
 8022024:	e5d6      	b.n	8021bd4 <_strtod_l+0x84>
 8022026:	2300      	movs	r3, #0
 8022028:	ea4f 1828 	mov.w	r8, r8, asr #4
 802202c:	4650      	mov	r0, sl
 802202e:	4659      	mov	r1, fp
 8022030:	4699      	mov	r9, r3
 8022032:	f1b8 0f01 	cmp.w	r8, #1
 8022036:	dc21      	bgt.n	802207c <_strtod_l+0x52c>
 8022038:	b10b      	cbz	r3, 802203e <_strtod_l+0x4ee>
 802203a:	4682      	mov	sl, r0
 802203c:	468b      	mov	fp, r1
 802203e:	4b2e      	ldr	r3, [pc, #184]	; (80220f8 <_strtod_l+0x5a8>)
 8022040:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8022044:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 8022048:	4652      	mov	r2, sl
 802204a:	465b      	mov	r3, fp
 802204c:	e9d9 0100 	ldrd	r0, r1, [r9]
 8022050:	f7de faf2 	bl	8000638 <__aeabi_dmul>
 8022054:	4b29      	ldr	r3, [pc, #164]	; (80220fc <_strtod_l+0x5ac>)
 8022056:	460a      	mov	r2, r1
 8022058:	400b      	ands	r3, r1
 802205a:	4929      	ldr	r1, [pc, #164]	; (8022100 <_strtod_l+0x5b0>)
 802205c:	428b      	cmp	r3, r1
 802205e:	4682      	mov	sl, r0
 8022060:	d8be      	bhi.n	8021fe0 <_strtod_l+0x490>
 8022062:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8022066:	428b      	cmp	r3, r1
 8022068:	bf86      	itte	hi
 802206a:	f8df b098 	ldrhi.w	fp, [pc, #152]	; 8022104 <_strtod_l+0x5b4>
 802206e:	f04f 3aff 	movhi.w	sl, #4294967295
 8022072:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8022076:	2300      	movs	r3, #0
 8022078:	9304      	str	r3, [sp, #16]
 802207a:	e081      	b.n	8022180 <_strtod_l+0x630>
 802207c:	f018 0f01 	tst.w	r8, #1
 8022080:	d007      	beq.n	8022092 <_strtod_l+0x542>
 8022082:	4b1d      	ldr	r3, [pc, #116]	; (80220f8 <_strtod_l+0x5a8>)
 8022084:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
 8022088:	e9d3 2300 	ldrd	r2, r3, [r3]
 802208c:	f7de fad4 	bl	8000638 <__aeabi_dmul>
 8022090:	2301      	movs	r3, #1
 8022092:	f109 0901 	add.w	r9, r9, #1
 8022096:	ea4f 0868 	mov.w	r8, r8, asr #1
 802209a:	e7ca      	b.n	8022032 <_strtod_l+0x4e2>
 802209c:	d0eb      	beq.n	8022076 <_strtod_l+0x526>
 802209e:	f1c8 0800 	rsb	r8, r8, #0
 80220a2:	f018 020f 	ands.w	r2, r8, #15
 80220a6:	d00a      	beq.n	80220be <_strtod_l+0x56e>
 80220a8:	4b12      	ldr	r3, [pc, #72]	; (80220f4 <_strtod_l+0x5a4>)
 80220aa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80220ae:	4650      	mov	r0, sl
 80220b0:	4659      	mov	r1, fp
 80220b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80220b6:	f7de fbe9 	bl	800088c <__aeabi_ddiv>
 80220ba:	4682      	mov	sl, r0
 80220bc:	468b      	mov	fp, r1
 80220be:	ea5f 1828 	movs.w	r8, r8, asr #4
 80220c2:	d0d8      	beq.n	8022076 <_strtod_l+0x526>
 80220c4:	f1b8 0f1f 	cmp.w	r8, #31
 80220c8:	dd1e      	ble.n	8022108 <_strtod_l+0x5b8>
 80220ca:	2500      	movs	r5, #0
 80220cc:	462e      	mov	r6, r5
 80220ce:	9509      	str	r5, [sp, #36]	; 0x24
 80220d0:	9507      	str	r5, [sp, #28]
 80220d2:	2322      	movs	r3, #34	; 0x22
 80220d4:	f04f 0a00 	mov.w	sl, #0
 80220d8:	f04f 0b00 	mov.w	fp, #0
 80220dc:	6023      	str	r3, [r4, #0]
 80220de:	e789      	b.n	8021ff4 <_strtod_l+0x4a4>
 80220e0:	08025365 	.word	0x08025365
 80220e4:	0802537c 	.word	0x0802537c
 80220e8:	0802535c 	.word	0x0802535c
 80220ec:	0802535f 	.word	0x0802535f
 80220f0:	0802571f 	.word	0x0802571f
 80220f4:	08025610 	.word	0x08025610
 80220f8:	080255e8 	.word	0x080255e8
 80220fc:	7ff00000 	.word	0x7ff00000
 8022100:	7ca00000 	.word	0x7ca00000
 8022104:	7fefffff 	.word	0x7fefffff
 8022108:	f018 0310 	ands.w	r3, r8, #16
 802210c:	bf18      	it	ne
 802210e:	236a      	movne	r3, #106	; 0x6a
 8022110:	f8df 93b4 	ldr.w	r9, [pc, #948]	; 80224c8 <_strtod_l+0x978>
 8022114:	9304      	str	r3, [sp, #16]
 8022116:	4650      	mov	r0, sl
 8022118:	4659      	mov	r1, fp
 802211a:	2300      	movs	r3, #0
 802211c:	f018 0f01 	tst.w	r8, #1
 8022120:	d004      	beq.n	802212c <_strtod_l+0x5dc>
 8022122:	e9d9 2300 	ldrd	r2, r3, [r9]
 8022126:	f7de fa87 	bl	8000638 <__aeabi_dmul>
 802212a:	2301      	movs	r3, #1
 802212c:	ea5f 0868 	movs.w	r8, r8, asr #1
 8022130:	f109 0908 	add.w	r9, r9, #8
 8022134:	d1f2      	bne.n	802211c <_strtod_l+0x5cc>
 8022136:	b10b      	cbz	r3, 802213c <_strtod_l+0x5ec>
 8022138:	4682      	mov	sl, r0
 802213a:	468b      	mov	fp, r1
 802213c:	9b04      	ldr	r3, [sp, #16]
 802213e:	b1bb      	cbz	r3, 8022170 <_strtod_l+0x620>
 8022140:	f3cb 530a 	ubfx	r3, fp, #20, #11
 8022144:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8022148:	2b00      	cmp	r3, #0
 802214a:	4659      	mov	r1, fp
 802214c:	dd10      	ble.n	8022170 <_strtod_l+0x620>
 802214e:	2b1f      	cmp	r3, #31
 8022150:	f340 8128 	ble.w	80223a4 <_strtod_l+0x854>
 8022154:	2b34      	cmp	r3, #52	; 0x34
 8022156:	bfde      	ittt	le
 8022158:	3b20      	suble	r3, #32
 802215a:	f04f 32ff 	movle.w	r2, #4294967295
 802215e:	fa02 f303 	lslle.w	r3, r2, r3
 8022162:	f04f 0a00 	mov.w	sl, #0
 8022166:	bfcc      	ite	gt
 8022168:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 802216c:	ea03 0b01 	andle.w	fp, r3, r1
 8022170:	2200      	movs	r2, #0
 8022172:	2300      	movs	r3, #0
 8022174:	4650      	mov	r0, sl
 8022176:	4659      	mov	r1, fp
 8022178:	f7de fcc6 	bl	8000b08 <__aeabi_dcmpeq>
 802217c:	2800      	cmp	r0, #0
 802217e:	d1a4      	bne.n	80220ca <_strtod_l+0x57a>
 8022180:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022182:	9300      	str	r3, [sp, #0]
 8022184:	990a      	ldr	r1, [sp, #40]	; 0x28
 8022186:	462b      	mov	r3, r5
 8022188:	463a      	mov	r2, r7
 802218a:	4620      	mov	r0, r4
 802218c:	f001 f8b4 	bl	80232f8 <__s2b>
 8022190:	9009      	str	r0, [sp, #36]	; 0x24
 8022192:	2800      	cmp	r0, #0
 8022194:	f43f af24 	beq.w	8021fe0 <_strtod_l+0x490>
 8022198:	9b07      	ldr	r3, [sp, #28]
 802219a:	1b9e      	subs	r6, r3, r6
 802219c:	9b08      	ldr	r3, [sp, #32]
 802219e:	2b00      	cmp	r3, #0
 80221a0:	bfb4      	ite	lt
 80221a2:	4633      	movlt	r3, r6
 80221a4:	2300      	movge	r3, #0
 80221a6:	9310      	str	r3, [sp, #64]	; 0x40
 80221a8:	9b08      	ldr	r3, [sp, #32]
 80221aa:	2500      	movs	r5, #0
 80221ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80221b0:	9318      	str	r3, [sp, #96]	; 0x60
 80221b2:	462e      	mov	r6, r5
 80221b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80221b6:	4620      	mov	r0, r4
 80221b8:	6859      	ldr	r1, [r3, #4]
 80221ba:	f000 fff1 	bl	80231a0 <_Balloc>
 80221be:	9007      	str	r0, [sp, #28]
 80221c0:	2800      	cmp	r0, #0
 80221c2:	f43f af11 	beq.w	8021fe8 <_strtod_l+0x498>
 80221c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80221c8:	691a      	ldr	r2, [r3, #16]
 80221ca:	3202      	adds	r2, #2
 80221cc:	f103 010c 	add.w	r1, r3, #12
 80221d0:	0092      	lsls	r2, r2, #2
 80221d2:	300c      	adds	r0, #12
 80221d4:	f7ff fb72 	bl	80218bc <memcpy>
 80221d8:	ec4b ab10 	vmov	d0, sl, fp
 80221dc:	aa20      	add	r2, sp, #128	; 0x80
 80221de:	a91f      	add	r1, sp, #124	; 0x7c
 80221e0:	4620      	mov	r0, r4
 80221e2:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 80221e6:	f001 fbc3 	bl	8023970 <__d2b>
 80221ea:	901e      	str	r0, [sp, #120]	; 0x78
 80221ec:	2800      	cmp	r0, #0
 80221ee:	f43f aefb 	beq.w	8021fe8 <_strtod_l+0x498>
 80221f2:	2101      	movs	r1, #1
 80221f4:	4620      	mov	r0, r4
 80221f6:	f001 f919 	bl	802342c <__i2b>
 80221fa:	4606      	mov	r6, r0
 80221fc:	2800      	cmp	r0, #0
 80221fe:	f43f aef3 	beq.w	8021fe8 <_strtod_l+0x498>
 8022202:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022204:	9904      	ldr	r1, [sp, #16]
 8022206:	2b00      	cmp	r3, #0
 8022208:	bfab      	itete	ge
 802220a:	9a10      	ldrge	r2, [sp, #64]	; 0x40
 802220c:	9a18      	ldrlt	r2, [sp, #96]	; 0x60
 802220e:	9f18      	ldrge	r7, [sp, #96]	; 0x60
 8022210:	f8dd 9040 	ldrlt.w	r9, [sp, #64]	; 0x40
 8022214:	bfac      	ite	ge
 8022216:	eb03 0902 	addge.w	r9, r3, r2
 802221a:	1ad7      	sublt	r7, r2, r3
 802221c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802221e:	eba3 0801 	sub.w	r8, r3, r1
 8022222:	4490      	add	r8, r2
 8022224:	4ba3      	ldr	r3, [pc, #652]	; (80224b4 <_strtod_l+0x964>)
 8022226:	f108 38ff 	add.w	r8, r8, #4294967295
 802222a:	4598      	cmp	r8, r3
 802222c:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8022230:	f280 80cc 	bge.w	80223cc <_strtod_l+0x87c>
 8022234:	eba3 0308 	sub.w	r3, r3, r8
 8022238:	2b1f      	cmp	r3, #31
 802223a:	eba2 0203 	sub.w	r2, r2, r3
 802223e:	f04f 0101 	mov.w	r1, #1
 8022242:	f300 80b6 	bgt.w	80223b2 <_strtod_l+0x862>
 8022246:	fa01 f303 	lsl.w	r3, r1, r3
 802224a:	9311      	str	r3, [sp, #68]	; 0x44
 802224c:	2300      	movs	r3, #0
 802224e:	930c      	str	r3, [sp, #48]	; 0x30
 8022250:	eb09 0802 	add.w	r8, r9, r2
 8022254:	9b04      	ldr	r3, [sp, #16]
 8022256:	45c1      	cmp	r9, r8
 8022258:	4417      	add	r7, r2
 802225a:	441f      	add	r7, r3
 802225c:	464b      	mov	r3, r9
 802225e:	bfa8      	it	ge
 8022260:	4643      	movge	r3, r8
 8022262:	42bb      	cmp	r3, r7
 8022264:	bfa8      	it	ge
 8022266:	463b      	movge	r3, r7
 8022268:	2b00      	cmp	r3, #0
 802226a:	bfc2      	ittt	gt
 802226c:	eba8 0803 	subgt.w	r8, r8, r3
 8022270:	1aff      	subgt	r7, r7, r3
 8022272:	eba9 0903 	subgt.w	r9, r9, r3
 8022276:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022278:	2b00      	cmp	r3, #0
 802227a:	dd17      	ble.n	80222ac <_strtod_l+0x75c>
 802227c:	4631      	mov	r1, r6
 802227e:	461a      	mov	r2, r3
 8022280:	4620      	mov	r0, r4
 8022282:	f001 f98f 	bl	80235a4 <__pow5mult>
 8022286:	4606      	mov	r6, r0
 8022288:	2800      	cmp	r0, #0
 802228a:	f43f aead 	beq.w	8021fe8 <_strtod_l+0x498>
 802228e:	4601      	mov	r1, r0
 8022290:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022292:	4620      	mov	r0, r4
 8022294:	f001 f8e0 	bl	8023458 <__multiply>
 8022298:	900f      	str	r0, [sp, #60]	; 0x3c
 802229a:	2800      	cmp	r0, #0
 802229c:	f43f aea4 	beq.w	8021fe8 <_strtod_l+0x498>
 80222a0:	991e      	ldr	r1, [sp, #120]	; 0x78
 80222a2:	4620      	mov	r0, r4
 80222a4:	f000 ffbc 	bl	8023220 <_Bfree>
 80222a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80222aa:	931e      	str	r3, [sp, #120]	; 0x78
 80222ac:	f1b8 0f00 	cmp.w	r8, #0
 80222b0:	f300 8091 	bgt.w	80223d6 <_strtod_l+0x886>
 80222b4:	9b08      	ldr	r3, [sp, #32]
 80222b6:	2b00      	cmp	r3, #0
 80222b8:	dd08      	ble.n	80222cc <_strtod_l+0x77c>
 80222ba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80222bc:	9907      	ldr	r1, [sp, #28]
 80222be:	4620      	mov	r0, r4
 80222c0:	f001 f970 	bl	80235a4 <__pow5mult>
 80222c4:	9007      	str	r0, [sp, #28]
 80222c6:	2800      	cmp	r0, #0
 80222c8:	f43f ae8e 	beq.w	8021fe8 <_strtod_l+0x498>
 80222cc:	2f00      	cmp	r7, #0
 80222ce:	dd08      	ble.n	80222e2 <_strtod_l+0x792>
 80222d0:	9907      	ldr	r1, [sp, #28]
 80222d2:	463a      	mov	r2, r7
 80222d4:	4620      	mov	r0, r4
 80222d6:	f001 f9bf 	bl	8023658 <__lshift>
 80222da:	9007      	str	r0, [sp, #28]
 80222dc:	2800      	cmp	r0, #0
 80222de:	f43f ae83 	beq.w	8021fe8 <_strtod_l+0x498>
 80222e2:	f1b9 0f00 	cmp.w	r9, #0
 80222e6:	dd08      	ble.n	80222fa <_strtod_l+0x7aa>
 80222e8:	4631      	mov	r1, r6
 80222ea:	464a      	mov	r2, r9
 80222ec:	4620      	mov	r0, r4
 80222ee:	f001 f9b3 	bl	8023658 <__lshift>
 80222f2:	4606      	mov	r6, r0
 80222f4:	2800      	cmp	r0, #0
 80222f6:	f43f ae77 	beq.w	8021fe8 <_strtod_l+0x498>
 80222fa:	9a07      	ldr	r2, [sp, #28]
 80222fc:	991e      	ldr	r1, [sp, #120]	; 0x78
 80222fe:	4620      	mov	r0, r4
 8022300:	f001 fa32 	bl	8023768 <__mdiff>
 8022304:	4605      	mov	r5, r0
 8022306:	2800      	cmp	r0, #0
 8022308:	f43f ae6e 	beq.w	8021fe8 <_strtod_l+0x498>
 802230c:	68c3      	ldr	r3, [r0, #12]
 802230e:	930f      	str	r3, [sp, #60]	; 0x3c
 8022310:	2300      	movs	r3, #0
 8022312:	60c3      	str	r3, [r0, #12]
 8022314:	4631      	mov	r1, r6
 8022316:	f001 fa0b 	bl	8023730 <__mcmp>
 802231a:	2800      	cmp	r0, #0
 802231c:	da65      	bge.n	80223ea <_strtod_l+0x89a>
 802231e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022320:	ea53 030a 	orrs.w	r3, r3, sl
 8022324:	f040 8087 	bne.w	8022436 <_strtod_l+0x8e6>
 8022328:	f3cb 0313 	ubfx	r3, fp, #0, #20
 802232c:	2b00      	cmp	r3, #0
 802232e:	f040 8082 	bne.w	8022436 <_strtod_l+0x8e6>
 8022332:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8022336:	0d1b      	lsrs	r3, r3, #20
 8022338:	051b      	lsls	r3, r3, #20
 802233a:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 802233e:	d97a      	bls.n	8022436 <_strtod_l+0x8e6>
 8022340:	696b      	ldr	r3, [r5, #20]
 8022342:	b913      	cbnz	r3, 802234a <_strtod_l+0x7fa>
 8022344:	692b      	ldr	r3, [r5, #16]
 8022346:	2b01      	cmp	r3, #1
 8022348:	dd75      	ble.n	8022436 <_strtod_l+0x8e6>
 802234a:	4629      	mov	r1, r5
 802234c:	2201      	movs	r2, #1
 802234e:	4620      	mov	r0, r4
 8022350:	f001 f982 	bl	8023658 <__lshift>
 8022354:	4631      	mov	r1, r6
 8022356:	4605      	mov	r5, r0
 8022358:	f001 f9ea 	bl	8023730 <__mcmp>
 802235c:	2800      	cmp	r0, #0
 802235e:	dd6a      	ble.n	8022436 <_strtod_l+0x8e6>
 8022360:	9904      	ldr	r1, [sp, #16]
 8022362:	4a55      	ldr	r2, [pc, #340]	; (80224b8 <_strtod_l+0x968>)
 8022364:	465b      	mov	r3, fp
 8022366:	2900      	cmp	r1, #0
 8022368:	f000 8085 	beq.w	8022476 <_strtod_l+0x926>
 802236c:	ea02 010b 	and.w	r1, r2, fp
 8022370:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8022374:	dc7f      	bgt.n	8022476 <_strtod_l+0x926>
 8022376:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 802237a:	f77f aeaa 	ble.w	80220d2 <_strtod_l+0x582>
 802237e:	4a4f      	ldr	r2, [pc, #316]	; (80224bc <_strtod_l+0x96c>)
 8022380:	2300      	movs	r3, #0
 8022382:	e9cd 3216 	strd	r3, r2, [sp, #88]	; 0x58
 8022386:	4650      	mov	r0, sl
 8022388:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
 802238c:	4659      	mov	r1, fp
 802238e:	f7de f953 	bl	8000638 <__aeabi_dmul>
 8022392:	460b      	mov	r3, r1
 8022394:	4303      	orrs	r3, r0
 8022396:	bf08      	it	eq
 8022398:	2322      	moveq	r3, #34	; 0x22
 802239a:	4682      	mov	sl, r0
 802239c:	468b      	mov	fp, r1
 802239e:	bf08      	it	eq
 80223a0:	6023      	streq	r3, [r4, #0]
 80223a2:	e62b      	b.n	8021ffc <_strtod_l+0x4ac>
 80223a4:	f04f 32ff 	mov.w	r2, #4294967295
 80223a8:	fa02 f303 	lsl.w	r3, r2, r3
 80223ac:	ea03 0a0a 	and.w	sl, r3, sl
 80223b0:	e6de      	b.n	8022170 <_strtod_l+0x620>
 80223b2:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 80223b6:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 80223ba:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 80223be:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 80223c2:	fa01 f308 	lsl.w	r3, r1, r8
 80223c6:	930c      	str	r3, [sp, #48]	; 0x30
 80223c8:	9111      	str	r1, [sp, #68]	; 0x44
 80223ca:	e741      	b.n	8022250 <_strtod_l+0x700>
 80223cc:	2300      	movs	r3, #0
 80223ce:	930c      	str	r3, [sp, #48]	; 0x30
 80223d0:	2301      	movs	r3, #1
 80223d2:	9311      	str	r3, [sp, #68]	; 0x44
 80223d4:	e73c      	b.n	8022250 <_strtod_l+0x700>
 80223d6:	991e      	ldr	r1, [sp, #120]	; 0x78
 80223d8:	4642      	mov	r2, r8
 80223da:	4620      	mov	r0, r4
 80223dc:	f001 f93c 	bl	8023658 <__lshift>
 80223e0:	901e      	str	r0, [sp, #120]	; 0x78
 80223e2:	2800      	cmp	r0, #0
 80223e4:	f47f af66 	bne.w	80222b4 <_strtod_l+0x764>
 80223e8:	e5fe      	b.n	8021fe8 <_strtod_l+0x498>
 80223ea:	465f      	mov	r7, fp
 80223ec:	d16e      	bne.n	80224cc <_strtod_l+0x97c>
 80223ee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80223f0:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80223f4:	b342      	cbz	r2, 8022448 <_strtod_l+0x8f8>
 80223f6:	4a32      	ldr	r2, [pc, #200]	; (80224c0 <_strtod_l+0x970>)
 80223f8:	4293      	cmp	r3, r2
 80223fa:	d128      	bne.n	802244e <_strtod_l+0x8fe>
 80223fc:	9b04      	ldr	r3, [sp, #16]
 80223fe:	4650      	mov	r0, sl
 8022400:	b1eb      	cbz	r3, 802243e <_strtod_l+0x8ee>
 8022402:	4a2d      	ldr	r2, [pc, #180]	; (80224b8 <_strtod_l+0x968>)
 8022404:	403a      	ands	r2, r7
 8022406:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 802240a:	f04f 31ff 	mov.w	r1, #4294967295
 802240e:	d819      	bhi.n	8022444 <_strtod_l+0x8f4>
 8022410:	0d12      	lsrs	r2, r2, #20
 8022412:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8022416:	fa01 f303 	lsl.w	r3, r1, r3
 802241a:	4298      	cmp	r0, r3
 802241c:	d117      	bne.n	802244e <_strtod_l+0x8fe>
 802241e:	4b29      	ldr	r3, [pc, #164]	; (80224c4 <_strtod_l+0x974>)
 8022420:	429f      	cmp	r7, r3
 8022422:	d102      	bne.n	802242a <_strtod_l+0x8da>
 8022424:	3001      	adds	r0, #1
 8022426:	f43f addf 	beq.w	8021fe8 <_strtod_l+0x498>
 802242a:	4b23      	ldr	r3, [pc, #140]	; (80224b8 <_strtod_l+0x968>)
 802242c:	403b      	ands	r3, r7
 802242e:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8022432:	f04f 0a00 	mov.w	sl, #0
 8022436:	9b04      	ldr	r3, [sp, #16]
 8022438:	2b00      	cmp	r3, #0
 802243a:	d1a0      	bne.n	802237e <_strtod_l+0x82e>
 802243c:	e5de      	b.n	8021ffc <_strtod_l+0x4ac>
 802243e:	f04f 33ff 	mov.w	r3, #4294967295
 8022442:	e7ea      	b.n	802241a <_strtod_l+0x8ca>
 8022444:	460b      	mov	r3, r1
 8022446:	e7e8      	b.n	802241a <_strtod_l+0x8ca>
 8022448:	ea53 030a 	orrs.w	r3, r3, sl
 802244c:	d088      	beq.n	8022360 <_strtod_l+0x810>
 802244e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022450:	b1db      	cbz	r3, 802248a <_strtod_l+0x93a>
 8022452:	423b      	tst	r3, r7
 8022454:	d0ef      	beq.n	8022436 <_strtod_l+0x8e6>
 8022456:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022458:	9a04      	ldr	r2, [sp, #16]
 802245a:	4650      	mov	r0, sl
 802245c:	4659      	mov	r1, fp
 802245e:	b1c3      	cbz	r3, 8022492 <_strtod_l+0x942>
 8022460:	f7ff fb5a 	bl	8021b18 <sulp>
 8022464:	4602      	mov	r2, r0
 8022466:	460b      	mov	r3, r1
 8022468:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 802246c:	f7dd ff2e 	bl	80002cc <__adddf3>
 8022470:	4682      	mov	sl, r0
 8022472:	468b      	mov	fp, r1
 8022474:	e7df      	b.n	8022436 <_strtod_l+0x8e6>
 8022476:	4013      	ands	r3, r2
 8022478:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 802247c:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8022480:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8022484:	f04f 3aff 	mov.w	sl, #4294967295
 8022488:	e7d5      	b.n	8022436 <_strtod_l+0x8e6>
 802248a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802248c:	ea13 0f0a 	tst.w	r3, sl
 8022490:	e7e0      	b.n	8022454 <_strtod_l+0x904>
 8022492:	f7ff fb41 	bl	8021b18 <sulp>
 8022496:	4602      	mov	r2, r0
 8022498:	460b      	mov	r3, r1
 802249a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 802249e:	f7dd ff13 	bl	80002c8 <__aeabi_dsub>
 80224a2:	2200      	movs	r2, #0
 80224a4:	2300      	movs	r3, #0
 80224a6:	4682      	mov	sl, r0
 80224a8:	468b      	mov	fp, r1
 80224aa:	f7de fb2d 	bl	8000b08 <__aeabi_dcmpeq>
 80224ae:	2800      	cmp	r0, #0
 80224b0:	d0c1      	beq.n	8022436 <_strtod_l+0x8e6>
 80224b2:	e60e      	b.n	80220d2 <_strtod_l+0x582>
 80224b4:	fffffc02 	.word	0xfffffc02
 80224b8:	7ff00000 	.word	0x7ff00000
 80224bc:	39500000 	.word	0x39500000
 80224c0:	000fffff 	.word	0x000fffff
 80224c4:	7fefffff 	.word	0x7fefffff
 80224c8:	08025390 	.word	0x08025390
 80224cc:	4631      	mov	r1, r6
 80224ce:	4628      	mov	r0, r5
 80224d0:	f001 faaa 	bl	8023a28 <__ratio>
 80224d4:	ec59 8b10 	vmov	r8, r9, d0
 80224d8:	ee10 0a10 	vmov	r0, s0
 80224dc:	2200      	movs	r2, #0
 80224de:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80224e2:	4649      	mov	r1, r9
 80224e4:	f7de fb24 	bl	8000b30 <__aeabi_dcmple>
 80224e8:	2800      	cmp	r0, #0
 80224ea:	d07c      	beq.n	80225e6 <_strtod_l+0xa96>
 80224ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80224ee:	2b00      	cmp	r3, #0
 80224f0:	d04c      	beq.n	802258c <_strtod_l+0xa3c>
 80224f2:	4b95      	ldr	r3, [pc, #596]	; (8022748 <_strtod_l+0xbf8>)
 80224f4:	2200      	movs	r2, #0
 80224f6:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 80224fa:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8022748 <_strtod_l+0xbf8>
 80224fe:	f04f 0800 	mov.w	r8, #0
 8022502:	4b92      	ldr	r3, [pc, #584]	; (802274c <_strtod_l+0xbfc>)
 8022504:	403b      	ands	r3, r7
 8022506:	9311      	str	r3, [sp, #68]	; 0x44
 8022508:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802250a:	4b91      	ldr	r3, [pc, #580]	; (8022750 <_strtod_l+0xc00>)
 802250c:	429a      	cmp	r2, r3
 802250e:	f040 80b2 	bne.w	8022676 <_strtod_l+0xb26>
 8022512:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8022516:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 802251a:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 802251e:	ec4b ab10 	vmov	d0, sl, fp
 8022522:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
 8022526:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 802252a:	f001 f9a5 	bl	8023878 <__ulp>
 802252e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8022532:	ec53 2b10 	vmov	r2, r3, d0
 8022536:	f7de f87f 	bl	8000638 <__aeabi_dmul>
 802253a:	4652      	mov	r2, sl
 802253c:	465b      	mov	r3, fp
 802253e:	f7dd fec5 	bl	80002cc <__adddf3>
 8022542:	460b      	mov	r3, r1
 8022544:	4981      	ldr	r1, [pc, #516]	; (802274c <_strtod_l+0xbfc>)
 8022546:	4a83      	ldr	r2, [pc, #524]	; (8022754 <_strtod_l+0xc04>)
 8022548:	4019      	ands	r1, r3
 802254a:	4291      	cmp	r1, r2
 802254c:	4682      	mov	sl, r0
 802254e:	d95e      	bls.n	802260e <_strtod_l+0xabe>
 8022550:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022552:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8022556:	4293      	cmp	r3, r2
 8022558:	d103      	bne.n	8022562 <_strtod_l+0xa12>
 802255a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802255c:	3301      	adds	r3, #1
 802255e:	f43f ad43 	beq.w	8021fe8 <_strtod_l+0x498>
 8022562:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8022760 <_strtod_l+0xc10>
 8022566:	f04f 3aff 	mov.w	sl, #4294967295
 802256a:	991e      	ldr	r1, [sp, #120]	; 0x78
 802256c:	4620      	mov	r0, r4
 802256e:	f000 fe57 	bl	8023220 <_Bfree>
 8022572:	9907      	ldr	r1, [sp, #28]
 8022574:	4620      	mov	r0, r4
 8022576:	f000 fe53 	bl	8023220 <_Bfree>
 802257a:	4631      	mov	r1, r6
 802257c:	4620      	mov	r0, r4
 802257e:	f000 fe4f 	bl	8023220 <_Bfree>
 8022582:	4629      	mov	r1, r5
 8022584:	4620      	mov	r0, r4
 8022586:	f000 fe4b 	bl	8023220 <_Bfree>
 802258a:	e613      	b.n	80221b4 <_strtod_l+0x664>
 802258c:	f1ba 0f00 	cmp.w	sl, #0
 8022590:	d11b      	bne.n	80225ca <_strtod_l+0xa7a>
 8022592:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8022596:	b9f3      	cbnz	r3, 80225d6 <_strtod_l+0xa86>
 8022598:	4b6b      	ldr	r3, [pc, #428]	; (8022748 <_strtod_l+0xbf8>)
 802259a:	2200      	movs	r2, #0
 802259c:	4640      	mov	r0, r8
 802259e:	4649      	mov	r1, r9
 80225a0:	f7de fabc 	bl	8000b1c <__aeabi_dcmplt>
 80225a4:	b9d0      	cbnz	r0, 80225dc <_strtod_l+0xa8c>
 80225a6:	4640      	mov	r0, r8
 80225a8:	4649      	mov	r1, r9
 80225aa:	4b6b      	ldr	r3, [pc, #428]	; (8022758 <_strtod_l+0xc08>)
 80225ac:	2200      	movs	r2, #0
 80225ae:	f7de f843 	bl	8000638 <__aeabi_dmul>
 80225b2:	4680      	mov	r8, r0
 80225b4:	4689      	mov	r9, r1
 80225b6:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80225ba:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 80225be:	931b      	str	r3, [sp, #108]	; 0x6c
 80225c0:	e9dd 231a 	ldrd	r2, r3, [sp, #104]	; 0x68
 80225c4:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 80225c8:	e79b      	b.n	8022502 <_strtod_l+0x9b2>
 80225ca:	f1ba 0f01 	cmp.w	sl, #1
 80225ce:	d102      	bne.n	80225d6 <_strtod_l+0xa86>
 80225d0:	2f00      	cmp	r7, #0
 80225d2:	f43f ad7e 	beq.w	80220d2 <_strtod_l+0x582>
 80225d6:	4b61      	ldr	r3, [pc, #388]	; (802275c <_strtod_l+0xc0c>)
 80225d8:	2200      	movs	r2, #0
 80225da:	e78c      	b.n	80224f6 <_strtod_l+0x9a6>
 80225dc:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8022758 <_strtod_l+0xc08>
 80225e0:	f04f 0800 	mov.w	r8, #0
 80225e4:	e7e7      	b.n	80225b6 <_strtod_l+0xa66>
 80225e6:	4b5c      	ldr	r3, [pc, #368]	; (8022758 <_strtod_l+0xc08>)
 80225e8:	4640      	mov	r0, r8
 80225ea:	4649      	mov	r1, r9
 80225ec:	2200      	movs	r2, #0
 80225ee:	f7de f823 	bl	8000638 <__aeabi_dmul>
 80225f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80225f4:	4680      	mov	r8, r0
 80225f6:	4689      	mov	r9, r1
 80225f8:	b933      	cbnz	r3, 8022608 <_strtod_l+0xab8>
 80225fa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80225fe:	9012      	str	r0, [sp, #72]	; 0x48
 8022600:	9313      	str	r3, [sp, #76]	; 0x4c
 8022602:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 8022606:	e7dd      	b.n	80225c4 <_strtod_l+0xa74>
 8022608:	e9cd 8912 	strd	r8, r9, [sp, #72]	; 0x48
 802260c:	e7f9      	b.n	8022602 <_strtod_l+0xab2>
 802260e:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8022612:	9b04      	ldr	r3, [sp, #16]
 8022614:	2b00      	cmp	r3, #0
 8022616:	d1a8      	bne.n	802256a <_strtod_l+0xa1a>
 8022618:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802261c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802261e:	0d1b      	lsrs	r3, r3, #20
 8022620:	051b      	lsls	r3, r3, #20
 8022622:	429a      	cmp	r2, r3
 8022624:	d1a1      	bne.n	802256a <_strtod_l+0xa1a>
 8022626:	4640      	mov	r0, r8
 8022628:	4649      	mov	r1, r9
 802262a:	f7de fb65 	bl	8000cf8 <__aeabi_d2lz>
 802262e:	f7dd ffd5 	bl	80005dc <__aeabi_l2d>
 8022632:	4602      	mov	r2, r0
 8022634:	460b      	mov	r3, r1
 8022636:	4640      	mov	r0, r8
 8022638:	4649      	mov	r1, r9
 802263a:	f7dd fe45 	bl	80002c8 <__aeabi_dsub>
 802263e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022640:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8022644:	ea43 030a 	orr.w	r3, r3, sl
 8022648:	4313      	orrs	r3, r2
 802264a:	4680      	mov	r8, r0
 802264c:	4689      	mov	r9, r1
 802264e:	d053      	beq.n	80226f8 <_strtod_l+0xba8>
 8022650:	a335      	add	r3, pc, #212	; (adr r3, 8022728 <_strtod_l+0xbd8>)
 8022652:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022656:	f7de fa61 	bl	8000b1c <__aeabi_dcmplt>
 802265a:	2800      	cmp	r0, #0
 802265c:	f47f acce 	bne.w	8021ffc <_strtod_l+0x4ac>
 8022660:	a333      	add	r3, pc, #204	; (adr r3, 8022730 <_strtod_l+0xbe0>)
 8022662:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022666:	4640      	mov	r0, r8
 8022668:	4649      	mov	r1, r9
 802266a:	f7de fa75 	bl	8000b58 <__aeabi_dcmpgt>
 802266e:	2800      	cmp	r0, #0
 8022670:	f43f af7b 	beq.w	802256a <_strtod_l+0xa1a>
 8022674:	e4c2      	b.n	8021ffc <_strtod_l+0x4ac>
 8022676:	9b04      	ldr	r3, [sp, #16]
 8022678:	b333      	cbz	r3, 80226c8 <_strtod_l+0xb78>
 802267a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802267c:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8022680:	d822      	bhi.n	80226c8 <_strtod_l+0xb78>
 8022682:	a32d      	add	r3, pc, #180	; (adr r3, 8022738 <_strtod_l+0xbe8>)
 8022684:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022688:	4640      	mov	r0, r8
 802268a:	4649      	mov	r1, r9
 802268c:	f7de fa50 	bl	8000b30 <__aeabi_dcmple>
 8022690:	b1a0      	cbz	r0, 80226bc <_strtod_l+0xb6c>
 8022692:	4649      	mov	r1, r9
 8022694:	4640      	mov	r0, r8
 8022696:	f7de faa7 	bl	8000be8 <__aeabi_d2uiz>
 802269a:	2801      	cmp	r0, #1
 802269c:	bf38      	it	cc
 802269e:	2001      	movcc	r0, #1
 80226a0:	f7dd ff50 	bl	8000544 <__aeabi_ui2d>
 80226a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80226a6:	4680      	mov	r8, r0
 80226a8:	4689      	mov	r9, r1
 80226aa:	bb13      	cbnz	r3, 80226f2 <_strtod_l+0xba2>
 80226ac:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80226b0:	9014      	str	r0, [sp, #80]	; 0x50
 80226b2:	9315      	str	r3, [sp, #84]	; 0x54
 80226b4:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 80226b8:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 80226bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80226be:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80226c0:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 80226c4:	1a9b      	subs	r3, r3, r2
 80226c6:	930d      	str	r3, [sp, #52]	; 0x34
 80226c8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80226cc:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 80226d0:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 80226d4:	f001 f8d0 	bl	8023878 <__ulp>
 80226d8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80226dc:	ec53 2b10 	vmov	r2, r3, d0
 80226e0:	f7dd ffaa 	bl	8000638 <__aeabi_dmul>
 80226e4:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80226e8:	f7dd fdf0 	bl	80002cc <__adddf3>
 80226ec:	4682      	mov	sl, r0
 80226ee:	468b      	mov	fp, r1
 80226f0:	e78f      	b.n	8022612 <_strtod_l+0xac2>
 80226f2:	e9cd 8914 	strd	r8, r9, [sp, #80]	; 0x50
 80226f6:	e7dd      	b.n	80226b4 <_strtod_l+0xb64>
 80226f8:	a311      	add	r3, pc, #68	; (adr r3, 8022740 <_strtod_l+0xbf0>)
 80226fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80226fe:	f7de fa0d 	bl	8000b1c <__aeabi_dcmplt>
 8022702:	e7b4      	b.n	802266e <_strtod_l+0xb1e>
 8022704:	2300      	movs	r3, #0
 8022706:	930e      	str	r3, [sp, #56]	; 0x38
 8022708:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802270a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802270c:	6013      	str	r3, [r2, #0]
 802270e:	f7ff ba65 	b.w	8021bdc <_strtod_l+0x8c>
 8022712:	2b65      	cmp	r3, #101	; 0x65
 8022714:	f43f ab5d 	beq.w	8021dd2 <_strtod_l+0x282>
 8022718:	2b45      	cmp	r3, #69	; 0x45
 802271a:	f43f ab5a 	beq.w	8021dd2 <_strtod_l+0x282>
 802271e:	2201      	movs	r2, #1
 8022720:	f7ff bb92 	b.w	8021e48 <_strtod_l+0x2f8>
 8022724:	f3af 8000 	nop.w
 8022728:	94a03595 	.word	0x94a03595
 802272c:	3fdfffff 	.word	0x3fdfffff
 8022730:	35afe535 	.word	0x35afe535
 8022734:	3fe00000 	.word	0x3fe00000
 8022738:	ffc00000 	.word	0xffc00000
 802273c:	41dfffff 	.word	0x41dfffff
 8022740:	94a03595 	.word	0x94a03595
 8022744:	3fcfffff 	.word	0x3fcfffff
 8022748:	3ff00000 	.word	0x3ff00000
 802274c:	7ff00000 	.word	0x7ff00000
 8022750:	7fe00000 	.word	0x7fe00000
 8022754:	7c9fffff 	.word	0x7c9fffff
 8022758:	3fe00000 	.word	0x3fe00000
 802275c:	bff00000 	.word	0xbff00000
 8022760:	7fefffff 	.word	0x7fefffff

08022764 <strtof>:
 8022764:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
 8022768:	4e26      	ldr	r6, [pc, #152]	; (8022804 <strtof+0xa0>)
 802276a:	4b27      	ldr	r3, [pc, #156]	; (8022808 <strtof+0xa4>)
 802276c:	460a      	mov	r2, r1
 802276e:	ed2d 8b02 	vpush	{d8}
 8022772:	4601      	mov	r1, r0
 8022774:	6830      	ldr	r0, [r6, #0]
 8022776:	f7ff f9eb 	bl	8021b50 <_strtod_l>
 802277a:	ec55 4b10 	vmov	r4, r5, d0
 802277e:	ee10 2a10 	vmov	r2, s0
 8022782:	ee10 0a10 	vmov	r0, s0
 8022786:	462b      	mov	r3, r5
 8022788:	4629      	mov	r1, r5
 802278a:	f7de f9ef 	bl	8000b6c <__aeabi_dcmpun>
 802278e:	b190      	cbz	r0, 80227b6 <strtof+0x52>
 8022790:	2d00      	cmp	r5, #0
 8022792:	481e      	ldr	r0, [pc, #120]	; (802280c <strtof+0xa8>)
 8022794:	da09      	bge.n	80227aa <strtof+0x46>
 8022796:	f001 f9cd 	bl	8023b34 <nanf>
 802279a:	eeb1 8a40 	vneg.f32	s16, s0
 802279e:	eeb0 0a48 	vmov.f32	s0, s16
 80227a2:	ecbd 8b02 	vpop	{d8}
 80227a6:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80227aa:	ecbd 8b02 	vpop	{d8}
 80227ae:	e8bd 4370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, lr}
 80227b2:	f001 b9bf 	b.w	8023b34 <nanf>
 80227b6:	4620      	mov	r0, r4
 80227b8:	4629      	mov	r1, r5
 80227ba:	f7de fa35 	bl	8000c28 <__aeabi_d2f>
 80227be:	ee08 0a10 	vmov	s16, r0
 80227c2:	eddf 7a13 	vldr	s15, [pc, #76]	; 8022810 <strtof+0xac>
 80227c6:	eeb0 7ac8 	vabs.f32	s14, s16
 80227ca:	eeb4 7a67 	vcmp.f32	s14, s15
 80227ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80227d2:	dde4      	ble.n	802279e <strtof+0x3a>
 80227d4:	f025 4900 	bic.w	r9, r5, #2147483648	; 0x80000000
 80227d8:	4b0e      	ldr	r3, [pc, #56]	; (8022814 <strtof+0xb0>)
 80227da:	f04f 32ff 	mov.w	r2, #4294967295
 80227de:	4620      	mov	r0, r4
 80227e0:	4649      	mov	r1, r9
 80227e2:	f7de f9c3 	bl	8000b6c <__aeabi_dcmpun>
 80227e6:	b940      	cbnz	r0, 80227fa <strtof+0x96>
 80227e8:	4b0a      	ldr	r3, [pc, #40]	; (8022814 <strtof+0xb0>)
 80227ea:	f04f 32ff 	mov.w	r2, #4294967295
 80227ee:	4620      	mov	r0, r4
 80227f0:	4649      	mov	r1, r9
 80227f2:	f7de f99d 	bl	8000b30 <__aeabi_dcmple>
 80227f6:	2800      	cmp	r0, #0
 80227f8:	d0d1      	beq.n	802279e <strtof+0x3a>
 80227fa:	6833      	ldr	r3, [r6, #0]
 80227fc:	2222      	movs	r2, #34	; 0x22
 80227fe:	601a      	str	r2, [r3, #0]
 8022800:	e7cd      	b.n	802279e <strtof+0x3a>
 8022802:	bf00      	nop
 8022804:	2000000c 	.word	0x2000000c
 8022808:	20000078 	.word	0x20000078
 802280c:	0802571f 	.word	0x0802571f
 8022810:	7f7fffff 	.word	0x7f7fffff
 8022814:	7fefffff 	.word	0x7fefffff

08022818 <_strtol_l.isra.0>:
 8022818:	2b01      	cmp	r3, #1
 802281a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802281e:	d001      	beq.n	8022824 <_strtol_l.isra.0+0xc>
 8022820:	2b24      	cmp	r3, #36	; 0x24
 8022822:	d906      	bls.n	8022832 <_strtol_l.isra.0+0x1a>
 8022824:	f7fe ffd0 	bl	80217c8 <__errno>
 8022828:	2316      	movs	r3, #22
 802282a:	6003      	str	r3, [r0, #0]
 802282c:	2000      	movs	r0, #0
 802282e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022832:	4f3a      	ldr	r7, [pc, #232]	; (802291c <_strtol_l.isra.0+0x104>)
 8022834:	468e      	mov	lr, r1
 8022836:	4676      	mov	r6, lr
 8022838:	f81e 4b01 	ldrb.w	r4, [lr], #1
 802283c:	5de5      	ldrb	r5, [r4, r7]
 802283e:	f015 0508 	ands.w	r5, r5, #8
 8022842:	d1f8      	bne.n	8022836 <_strtol_l.isra.0+0x1e>
 8022844:	2c2d      	cmp	r4, #45	; 0x2d
 8022846:	d134      	bne.n	80228b2 <_strtol_l.isra.0+0x9a>
 8022848:	f89e 4000 	ldrb.w	r4, [lr]
 802284c:	f04f 0801 	mov.w	r8, #1
 8022850:	f106 0e02 	add.w	lr, r6, #2
 8022854:	2b00      	cmp	r3, #0
 8022856:	d05c      	beq.n	8022912 <_strtol_l.isra.0+0xfa>
 8022858:	2b10      	cmp	r3, #16
 802285a:	d10c      	bne.n	8022876 <_strtol_l.isra.0+0x5e>
 802285c:	2c30      	cmp	r4, #48	; 0x30
 802285e:	d10a      	bne.n	8022876 <_strtol_l.isra.0+0x5e>
 8022860:	f89e 4000 	ldrb.w	r4, [lr]
 8022864:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8022868:	2c58      	cmp	r4, #88	; 0x58
 802286a:	d14d      	bne.n	8022908 <_strtol_l.isra.0+0xf0>
 802286c:	f89e 4001 	ldrb.w	r4, [lr, #1]
 8022870:	2310      	movs	r3, #16
 8022872:	f10e 0e02 	add.w	lr, lr, #2
 8022876:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 802287a:	f10c 3cff 	add.w	ip, ip, #4294967295
 802287e:	2600      	movs	r6, #0
 8022880:	fbbc f9f3 	udiv	r9, ip, r3
 8022884:	4635      	mov	r5, r6
 8022886:	fb03 ca19 	mls	sl, r3, r9, ip
 802288a:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 802288e:	2f09      	cmp	r7, #9
 8022890:	d818      	bhi.n	80228c4 <_strtol_l.isra.0+0xac>
 8022892:	463c      	mov	r4, r7
 8022894:	42a3      	cmp	r3, r4
 8022896:	dd24      	ble.n	80228e2 <_strtol_l.isra.0+0xca>
 8022898:	2e00      	cmp	r6, #0
 802289a:	db1f      	blt.n	80228dc <_strtol_l.isra.0+0xc4>
 802289c:	45a9      	cmp	r9, r5
 802289e:	d31d      	bcc.n	80228dc <_strtol_l.isra.0+0xc4>
 80228a0:	d101      	bne.n	80228a6 <_strtol_l.isra.0+0x8e>
 80228a2:	45a2      	cmp	sl, r4
 80228a4:	db1a      	blt.n	80228dc <_strtol_l.isra.0+0xc4>
 80228a6:	fb05 4503 	mla	r5, r5, r3, r4
 80228aa:	2601      	movs	r6, #1
 80228ac:	f81e 4b01 	ldrb.w	r4, [lr], #1
 80228b0:	e7eb      	b.n	802288a <_strtol_l.isra.0+0x72>
 80228b2:	2c2b      	cmp	r4, #43	; 0x2b
 80228b4:	bf08      	it	eq
 80228b6:	f89e 4000 	ldrbeq.w	r4, [lr]
 80228ba:	46a8      	mov	r8, r5
 80228bc:	bf08      	it	eq
 80228be:	f106 0e02 	addeq.w	lr, r6, #2
 80228c2:	e7c7      	b.n	8022854 <_strtol_l.isra.0+0x3c>
 80228c4:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 80228c8:	2f19      	cmp	r7, #25
 80228ca:	d801      	bhi.n	80228d0 <_strtol_l.isra.0+0xb8>
 80228cc:	3c37      	subs	r4, #55	; 0x37
 80228ce:	e7e1      	b.n	8022894 <_strtol_l.isra.0+0x7c>
 80228d0:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 80228d4:	2f19      	cmp	r7, #25
 80228d6:	d804      	bhi.n	80228e2 <_strtol_l.isra.0+0xca>
 80228d8:	3c57      	subs	r4, #87	; 0x57
 80228da:	e7db      	b.n	8022894 <_strtol_l.isra.0+0x7c>
 80228dc:	f04f 36ff 	mov.w	r6, #4294967295
 80228e0:	e7e4      	b.n	80228ac <_strtol_l.isra.0+0x94>
 80228e2:	2e00      	cmp	r6, #0
 80228e4:	da05      	bge.n	80228f2 <_strtol_l.isra.0+0xda>
 80228e6:	2322      	movs	r3, #34	; 0x22
 80228e8:	6003      	str	r3, [r0, #0]
 80228ea:	4665      	mov	r5, ip
 80228ec:	b942      	cbnz	r2, 8022900 <_strtol_l.isra.0+0xe8>
 80228ee:	4628      	mov	r0, r5
 80228f0:	e79d      	b.n	802282e <_strtol_l.isra.0+0x16>
 80228f2:	f1b8 0f00 	cmp.w	r8, #0
 80228f6:	d000      	beq.n	80228fa <_strtol_l.isra.0+0xe2>
 80228f8:	426d      	negs	r5, r5
 80228fa:	2a00      	cmp	r2, #0
 80228fc:	d0f7      	beq.n	80228ee <_strtol_l.isra.0+0xd6>
 80228fe:	b10e      	cbz	r6, 8022904 <_strtol_l.isra.0+0xec>
 8022900:	f10e 31ff 	add.w	r1, lr, #4294967295
 8022904:	6011      	str	r1, [r2, #0]
 8022906:	e7f2      	b.n	80228ee <_strtol_l.isra.0+0xd6>
 8022908:	2430      	movs	r4, #48	; 0x30
 802290a:	2b00      	cmp	r3, #0
 802290c:	d1b3      	bne.n	8022876 <_strtol_l.isra.0+0x5e>
 802290e:	2308      	movs	r3, #8
 8022910:	e7b1      	b.n	8022876 <_strtol_l.isra.0+0x5e>
 8022912:	2c30      	cmp	r4, #48	; 0x30
 8022914:	d0a4      	beq.n	8022860 <_strtol_l.isra.0+0x48>
 8022916:	230a      	movs	r3, #10
 8022918:	e7ad      	b.n	8022876 <_strtol_l.isra.0+0x5e>
 802291a:	bf00      	nop
 802291c:	080253de 	.word	0x080253de

08022920 <strtol>:
 8022920:	4613      	mov	r3, r2
 8022922:	460a      	mov	r2, r1
 8022924:	4601      	mov	r1, r0
 8022926:	4802      	ldr	r0, [pc, #8]	; (8022930 <strtol+0x10>)
 8022928:	6800      	ldr	r0, [r0, #0]
 802292a:	f7ff bf75 	b.w	8022818 <_strtol_l.isra.0>
 802292e:	bf00      	nop
 8022930:	2000000c 	.word	0x2000000c

08022934 <__utoa>:
 8022934:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022936:	4c1f      	ldr	r4, [pc, #124]	; (80229b4 <__utoa+0x80>)
 8022938:	b08b      	sub	sp, #44	; 0x2c
 802293a:	4605      	mov	r5, r0
 802293c:	460b      	mov	r3, r1
 802293e:	466e      	mov	r6, sp
 8022940:	f104 0c20 	add.w	ip, r4, #32
 8022944:	6820      	ldr	r0, [r4, #0]
 8022946:	6861      	ldr	r1, [r4, #4]
 8022948:	4637      	mov	r7, r6
 802294a:	c703      	stmia	r7!, {r0, r1}
 802294c:	3408      	adds	r4, #8
 802294e:	4564      	cmp	r4, ip
 8022950:	463e      	mov	r6, r7
 8022952:	d1f7      	bne.n	8022944 <__utoa+0x10>
 8022954:	7921      	ldrb	r1, [r4, #4]
 8022956:	7139      	strb	r1, [r7, #4]
 8022958:	1e91      	subs	r1, r2, #2
 802295a:	6820      	ldr	r0, [r4, #0]
 802295c:	6038      	str	r0, [r7, #0]
 802295e:	2922      	cmp	r1, #34	; 0x22
 8022960:	f04f 0100 	mov.w	r1, #0
 8022964:	d904      	bls.n	8022970 <__utoa+0x3c>
 8022966:	7019      	strb	r1, [r3, #0]
 8022968:	460b      	mov	r3, r1
 802296a:	4618      	mov	r0, r3
 802296c:	b00b      	add	sp, #44	; 0x2c
 802296e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022970:	1e58      	subs	r0, r3, #1
 8022972:	4684      	mov	ip, r0
 8022974:	fbb5 f7f2 	udiv	r7, r5, r2
 8022978:	f10d 0e28 	add.w	lr, sp, #40	; 0x28
 802297c:	fb02 5617 	mls	r6, r2, r7, r5
 8022980:	4476      	add	r6, lr
 8022982:	460c      	mov	r4, r1
 8022984:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8022988:	f80c 6f01 	strb.w	r6, [ip, #1]!
 802298c:	462e      	mov	r6, r5
 802298e:	42b2      	cmp	r2, r6
 8022990:	f101 0101 	add.w	r1, r1, #1
 8022994:	463d      	mov	r5, r7
 8022996:	d9ed      	bls.n	8022974 <__utoa+0x40>
 8022998:	2200      	movs	r2, #0
 802299a:	545a      	strb	r2, [r3, r1]
 802299c:	1919      	adds	r1, r3, r4
 802299e:	1aa5      	subs	r5, r4, r2
 80229a0:	42aa      	cmp	r2, r5
 80229a2:	dae2      	bge.n	802296a <__utoa+0x36>
 80229a4:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 80229a8:	780e      	ldrb	r6, [r1, #0]
 80229aa:	7006      	strb	r6, [r0, #0]
 80229ac:	3201      	adds	r2, #1
 80229ae:	f801 5901 	strb.w	r5, [r1], #-1
 80229b2:	e7f4      	b.n	802299e <__utoa+0x6a>
 80229b4:	080253b8 	.word	0x080253b8

080229b8 <__register_exitproc>:
 80229b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80229bc:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8022a78 <__register_exitproc+0xc0>
 80229c0:	4606      	mov	r6, r0
 80229c2:	f8d8 0000 	ldr.w	r0, [r8]
 80229c6:	461f      	mov	r7, r3
 80229c8:	460d      	mov	r5, r1
 80229ca:	4691      	mov	r9, r2
 80229cc:	f000 fbc7 	bl	802315e <__retarget_lock_acquire_recursive>
 80229d0:	4b25      	ldr	r3, [pc, #148]	; (8022a68 <__register_exitproc+0xb0>)
 80229d2:	681c      	ldr	r4, [r3, #0]
 80229d4:	b934      	cbnz	r4, 80229e4 <__register_exitproc+0x2c>
 80229d6:	4c25      	ldr	r4, [pc, #148]	; (8022a6c <__register_exitproc+0xb4>)
 80229d8:	601c      	str	r4, [r3, #0]
 80229da:	4b25      	ldr	r3, [pc, #148]	; (8022a70 <__register_exitproc+0xb8>)
 80229dc:	b113      	cbz	r3, 80229e4 <__register_exitproc+0x2c>
 80229de:	681b      	ldr	r3, [r3, #0]
 80229e0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80229e4:	6863      	ldr	r3, [r4, #4]
 80229e6:	2b1f      	cmp	r3, #31
 80229e8:	dd07      	ble.n	80229fa <__register_exitproc+0x42>
 80229ea:	f8d8 0000 	ldr.w	r0, [r8]
 80229ee:	f000 fbb8 	bl	8023162 <__retarget_lock_release_recursive>
 80229f2:	f04f 30ff 	mov.w	r0, #4294967295
 80229f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80229fa:	b34e      	cbz	r6, 8022a50 <__register_exitproc+0x98>
 80229fc:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8022a00:	b988      	cbnz	r0, 8022a26 <__register_exitproc+0x6e>
 8022a02:	4b1c      	ldr	r3, [pc, #112]	; (8022a74 <__register_exitproc+0xbc>)
 8022a04:	b923      	cbnz	r3, 8022a10 <__register_exitproc+0x58>
 8022a06:	f8d8 0000 	ldr.w	r0, [r8]
 8022a0a:	f000 fba9 	bl	8023160 <__retarget_lock_release>
 8022a0e:	e7f0      	b.n	80229f2 <__register_exitproc+0x3a>
 8022a10:	f44f 7084 	mov.w	r0, #264	; 0x108
 8022a14:	f7fe ff34 	bl	8021880 <malloc>
 8022a18:	2800      	cmp	r0, #0
 8022a1a:	d0f4      	beq.n	8022a06 <__register_exitproc+0x4e>
 8022a1c:	2300      	movs	r3, #0
 8022a1e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8022a22:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8022a26:	6863      	ldr	r3, [r4, #4]
 8022a28:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8022a2c:	2201      	movs	r2, #1
 8022a2e:	409a      	lsls	r2, r3
 8022a30:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022a34:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8022a38:	4313      	orrs	r3, r2
 8022a3a:	2e02      	cmp	r6, #2
 8022a3c:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8022a40:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8022a44:	bf02      	ittt	eq
 8022a46:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8022a4a:	431a      	orreq	r2, r3
 8022a4c:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 8022a50:	6863      	ldr	r3, [r4, #4]
 8022a52:	f8d8 0000 	ldr.w	r0, [r8]
 8022a56:	1c5a      	adds	r2, r3, #1
 8022a58:	3302      	adds	r3, #2
 8022a5a:	6062      	str	r2, [r4, #4]
 8022a5c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8022a60:	f000 fb7f 	bl	8023162 <__retarget_lock_release_recursive>
 8022a64:	2000      	movs	r0, #0
 8022a66:	e7c6      	b.n	80229f6 <__register_exitproc+0x3e>
 8022a68:	20000728 	.word	0x20000728
 8022a6c:	2000069c 	.word	0x2000069c
 8022a70:	00000000 	.word	0x00000000
 8022a74:	08021881 	.word	0x08021881
 8022a78:	20000070 	.word	0x20000070

08022a7c <rshift>:
 8022a7c:	6903      	ldr	r3, [r0, #16]
 8022a7e:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8022a82:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022a86:	ea4f 1261 	mov.w	r2, r1, asr #5
 8022a8a:	f100 0414 	add.w	r4, r0, #20
 8022a8e:	dd45      	ble.n	8022b1c <rshift+0xa0>
 8022a90:	f011 011f 	ands.w	r1, r1, #31
 8022a94:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8022a98:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8022a9c:	d10c      	bne.n	8022ab8 <rshift+0x3c>
 8022a9e:	f100 0710 	add.w	r7, r0, #16
 8022aa2:	4629      	mov	r1, r5
 8022aa4:	42b1      	cmp	r1, r6
 8022aa6:	d334      	bcc.n	8022b12 <rshift+0x96>
 8022aa8:	1a9b      	subs	r3, r3, r2
 8022aaa:	009b      	lsls	r3, r3, #2
 8022aac:	1eea      	subs	r2, r5, #3
 8022aae:	4296      	cmp	r6, r2
 8022ab0:	bf38      	it	cc
 8022ab2:	2300      	movcc	r3, #0
 8022ab4:	4423      	add	r3, r4
 8022ab6:	e015      	b.n	8022ae4 <rshift+0x68>
 8022ab8:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8022abc:	f1c1 0820 	rsb	r8, r1, #32
 8022ac0:	40cf      	lsrs	r7, r1
 8022ac2:	f105 0e04 	add.w	lr, r5, #4
 8022ac6:	46a1      	mov	r9, r4
 8022ac8:	4576      	cmp	r6, lr
 8022aca:	46f4      	mov	ip, lr
 8022acc:	d815      	bhi.n	8022afa <rshift+0x7e>
 8022ace:	1a9b      	subs	r3, r3, r2
 8022ad0:	009a      	lsls	r2, r3, #2
 8022ad2:	3a04      	subs	r2, #4
 8022ad4:	3501      	adds	r5, #1
 8022ad6:	42ae      	cmp	r6, r5
 8022ad8:	bf38      	it	cc
 8022ada:	2200      	movcc	r2, #0
 8022adc:	18a3      	adds	r3, r4, r2
 8022ade:	50a7      	str	r7, [r4, r2]
 8022ae0:	b107      	cbz	r7, 8022ae4 <rshift+0x68>
 8022ae2:	3304      	adds	r3, #4
 8022ae4:	1b1a      	subs	r2, r3, r4
 8022ae6:	42a3      	cmp	r3, r4
 8022ae8:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8022aec:	bf08      	it	eq
 8022aee:	2300      	moveq	r3, #0
 8022af0:	6102      	str	r2, [r0, #16]
 8022af2:	bf08      	it	eq
 8022af4:	6143      	streq	r3, [r0, #20]
 8022af6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022afa:	f8dc c000 	ldr.w	ip, [ip]
 8022afe:	fa0c fc08 	lsl.w	ip, ip, r8
 8022b02:	ea4c 0707 	orr.w	r7, ip, r7
 8022b06:	f849 7b04 	str.w	r7, [r9], #4
 8022b0a:	f85e 7b04 	ldr.w	r7, [lr], #4
 8022b0e:	40cf      	lsrs	r7, r1
 8022b10:	e7da      	b.n	8022ac8 <rshift+0x4c>
 8022b12:	f851 cb04 	ldr.w	ip, [r1], #4
 8022b16:	f847 cf04 	str.w	ip, [r7, #4]!
 8022b1a:	e7c3      	b.n	8022aa4 <rshift+0x28>
 8022b1c:	4623      	mov	r3, r4
 8022b1e:	e7e1      	b.n	8022ae4 <rshift+0x68>

08022b20 <__hexdig_fun>:
 8022b20:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8022b24:	2b09      	cmp	r3, #9
 8022b26:	d802      	bhi.n	8022b2e <__hexdig_fun+0xe>
 8022b28:	3820      	subs	r0, #32
 8022b2a:	b2c0      	uxtb	r0, r0
 8022b2c:	4770      	bx	lr
 8022b2e:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8022b32:	2b05      	cmp	r3, #5
 8022b34:	d801      	bhi.n	8022b3a <__hexdig_fun+0x1a>
 8022b36:	3847      	subs	r0, #71	; 0x47
 8022b38:	e7f7      	b.n	8022b2a <__hexdig_fun+0xa>
 8022b3a:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8022b3e:	2b05      	cmp	r3, #5
 8022b40:	d801      	bhi.n	8022b46 <__hexdig_fun+0x26>
 8022b42:	3827      	subs	r0, #39	; 0x27
 8022b44:	e7f1      	b.n	8022b2a <__hexdig_fun+0xa>
 8022b46:	2000      	movs	r0, #0
 8022b48:	4770      	bx	lr
	...

08022b4c <__gethex>:
 8022b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b50:	ed2d 8b02 	vpush	{d8}
 8022b54:	b089      	sub	sp, #36	; 0x24
 8022b56:	ee08 0a10 	vmov	s16, r0
 8022b5a:	9304      	str	r3, [sp, #16]
 8022b5c:	4bbc      	ldr	r3, [pc, #752]	; (8022e50 <__gethex+0x304>)
 8022b5e:	681b      	ldr	r3, [r3, #0]
 8022b60:	9301      	str	r3, [sp, #4]
 8022b62:	4618      	mov	r0, r3
 8022b64:	468b      	mov	fp, r1
 8022b66:	4690      	mov	r8, r2
 8022b68:	f7dd fba2 	bl	80002b0 <strlen>
 8022b6c:	9b01      	ldr	r3, [sp, #4]
 8022b6e:	f8db 2000 	ldr.w	r2, [fp]
 8022b72:	4403      	add	r3, r0
 8022b74:	4682      	mov	sl, r0
 8022b76:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8022b7a:	9305      	str	r3, [sp, #20]
 8022b7c:	1c93      	adds	r3, r2, #2
 8022b7e:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8022b82:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8022b86:	32fe      	adds	r2, #254	; 0xfe
 8022b88:	18d1      	adds	r1, r2, r3
 8022b8a:	461f      	mov	r7, r3
 8022b8c:	f813 0b01 	ldrb.w	r0, [r3], #1
 8022b90:	9100      	str	r1, [sp, #0]
 8022b92:	2830      	cmp	r0, #48	; 0x30
 8022b94:	d0f8      	beq.n	8022b88 <__gethex+0x3c>
 8022b96:	f7ff ffc3 	bl	8022b20 <__hexdig_fun>
 8022b9a:	4604      	mov	r4, r0
 8022b9c:	2800      	cmp	r0, #0
 8022b9e:	d13a      	bne.n	8022c16 <__gethex+0xca>
 8022ba0:	9901      	ldr	r1, [sp, #4]
 8022ba2:	4652      	mov	r2, sl
 8022ba4:	4638      	mov	r0, r7
 8022ba6:	f000 ffcb 	bl	8023b40 <strncmp>
 8022baa:	4605      	mov	r5, r0
 8022bac:	2800      	cmp	r0, #0
 8022bae:	d168      	bne.n	8022c82 <__gethex+0x136>
 8022bb0:	f817 000a 	ldrb.w	r0, [r7, sl]
 8022bb4:	eb07 060a 	add.w	r6, r7, sl
 8022bb8:	f7ff ffb2 	bl	8022b20 <__hexdig_fun>
 8022bbc:	2800      	cmp	r0, #0
 8022bbe:	d062      	beq.n	8022c86 <__gethex+0x13a>
 8022bc0:	4633      	mov	r3, r6
 8022bc2:	7818      	ldrb	r0, [r3, #0]
 8022bc4:	2830      	cmp	r0, #48	; 0x30
 8022bc6:	461f      	mov	r7, r3
 8022bc8:	f103 0301 	add.w	r3, r3, #1
 8022bcc:	d0f9      	beq.n	8022bc2 <__gethex+0x76>
 8022bce:	f7ff ffa7 	bl	8022b20 <__hexdig_fun>
 8022bd2:	2301      	movs	r3, #1
 8022bd4:	fab0 f480 	clz	r4, r0
 8022bd8:	0964      	lsrs	r4, r4, #5
 8022bda:	4635      	mov	r5, r6
 8022bdc:	9300      	str	r3, [sp, #0]
 8022bde:	463a      	mov	r2, r7
 8022be0:	4616      	mov	r6, r2
 8022be2:	3201      	adds	r2, #1
 8022be4:	7830      	ldrb	r0, [r6, #0]
 8022be6:	f7ff ff9b 	bl	8022b20 <__hexdig_fun>
 8022bea:	2800      	cmp	r0, #0
 8022bec:	d1f8      	bne.n	8022be0 <__gethex+0x94>
 8022bee:	9901      	ldr	r1, [sp, #4]
 8022bf0:	4652      	mov	r2, sl
 8022bf2:	4630      	mov	r0, r6
 8022bf4:	f000 ffa4 	bl	8023b40 <strncmp>
 8022bf8:	b980      	cbnz	r0, 8022c1c <__gethex+0xd0>
 8022bfa:	b94d      	cbnz	r5, 8022c10 <__gethex+0xc4>
 8022bfc:	eb06 050a 	add.w	r5, r6, sl
 8022c00:	462a      	mov	r2, r5
 8022c02:	4616      	mov	r6, r2
 8022c04:	3201      	adds	r2, #1
 8022c06:	7830      	ldrb	r0, [r6, #0]
 8022c08:	f7ff ff8a 	bl	8022b20 <__hexdig_fun>
 8022c0c:	2800      	cmp	r0, #0
 8022c0e:	d1f8      	bne.n	8022c02 <__gethex+0xb6>
 8022c10:	1bad      	subs	r5, r5, r6
 8022c12:	00ad      	lsls	r5, r5, #2
 8022c14:	e004      	b.n	8022c20 <__gethex+0xd4>
 8022c16:	2400      	movs	r4, #0
 8022c18:	4625      	mov	r5, r4
 8022c1a:	e7e0      	b.n	8022bde <__gethex+0x92>
 8022c1c:	2d00      	cmp	r5, #0
 8022c1e:	d1f7      	bne.n	8022c10 <__gethex+0xc4>
 8022c20:	7833      	ldrb	r3, [r6, #0]
 8022c22:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8022c26:	2b50      	cmp	r3, #80	; 0x50
 8022c28:	d13b      	bne.n	8022ca2 <__gethex+0x156>
 8022c2a:	7873      	ldrb	r3, [r6, #1]
 8022c2c:	2b2b      	cmp	r3, #43	; 0x2b
 8022c2e:	d02c      	beq.n	8022c8a <__gethex+0x13e>
 8022c30:	2b2d      	cmp	r3, #45	; 0x2d
 8022c32:	d02e      	beq.n	8022c92 <__gethex+0x146>
 8022c34:	1c71      	adds	r1, r6, #1
 8022c36:	f04f 0900 	mov.w	r9, #0
 8022c3a:	7808      	ldrb	r0, [r1, #0]
 8022c3c:	f7ff ff70 	bl	8022b20 <__hexdig_fun>
 8022c40:	1e43      	subs	r3, r0, #1
 8022c42:	b2db      	uxtb	r3, r3
 8022c44:	2b18      	cmp	r3, #24
 8022c46:	d82c      	bhi.n	8022ca2 <__gethex+0x156>
 8022c48:	f1a0 0210 	sub.w	r2, r0, #16
 8022c4c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8022c50:	f7ff ff66 	bl	8022b20 <__hexdig_fun>
 8022c54:	1e43      	subs	r3, r0, #1
 8022c56:	b2db      	uxtb	r3, r3
 8022c58:	2b18      	cmp	r3, #24
 8022c5a:	d91d      	bls.n	8022c98 <__gethex+0x14c>
 8022c5c:	f1b9 0f00 	cmp.w	r9, #0
 8022c60:	d000      	beq.n	8022c64 <__gethex+0x118>
 8022c62:	4252      	negs	r2, r2
 8022c64:	4415      	add	r5, r2
 8022c66:	f8cb 1000 	str.w	r1, [fp]
 8022c6a:	b1e4      	cbz	r4, 8022ca6 <__gethex+0x15a>
 8022c6c:	9b00      	ldr	r3, [sp, #0]
 8022c6e:	2b00      	cmp	r3, #0
 8022c70:	bf14      	ite	ne
 8022c72:	2700      	movne	r7, #0
 8022c74:	2706      	moveq	r7, #6
 8022c76:	4638      	mov	r0, r7
 8022c78:	b009      	add	sp, #36	; 0x24
 8022c7a:	ecbd 8b02 	vpop	{d8}
 8022c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022c82:	463e      	mov	r6, r7
 8022c84:	4625      	mov	r5, r4
 8022c86:	2401      	movs	r4, #1
 8022c88:	e7ca      	b.n	8022c20 <__gethex+0xd4>
 8022c8a:	f04f 0900 	mov.w	r9, #0
 8022c8e:	1cb1      	adds	r1, r6, #2
 8022c90:	e7d3      	b.n	8022c3a <__gethex+0xee>
 8022c92:	f04f 0901 	mov.w	r9, #1
 8022c96:	e7fa      	b.n	8022c8e <__gethex+0x142>
 8022c98:	230a      	movs	r3, #10
 8022c9a:	fb03 0202 	mla	r2, r3, r2, r0
 8022c9e:	3a10      	subs	r2, #16
 8022ca0:	e7d4      	b.n	8022c4c <__gethex+0x100>
 8022ca2:	4631      	mov	r1, r6
 8022ca4:	e7df      	b.n	8022c66 <__gethex+0x11a>
 8022ca6:	1bf3      	subs	r3, r6, r7
 8022ca8:	3b01      	subs	r3, #1
 8022caa:	4621      	mov	r1, r4
 8022cac:	2b07      	cmp	r3, #7
 8022cae:	dc0b      	bgt.n	8022cc8 <__gethex+0x17c>
 8022cb0:	ee18 0a10 	vmov	r0, s16
 8022cb4:	f000 fa74 	bl	80231a0 <_Balloc>
 8022cb8:	4604      	mov	r4, r0
 8022cba:	b940      	cbnz	r0, 8022cce <__gethex+0x182>
 8022cbc:	4b65      	ldr	r3, [pc, #404]	; (8022e54 <__gethex+0x308>)
 8022cbe:	4602      	mov	r2, r0
 8022cc0:	21de      	movs	r1, #222	; 0xde
 8022cc2:	4865      	ldr	r0, [pc, #404]	; (8022e58 <__gethex+0x30c>)
 8022cc4:	f000 ff5c 	bl	8023b80 <__assert_func>
 8022cc8:	3101      	adds	r1, #1
 8022cca:	105b      	asrs	r3, r3, #1
 8022ccc:	e7ee      	b.n	8022cac <__gethex+0x160>
 8022cce:	f100 0914 	add.w	r9, r0, #20
 8022cd2:	f04f 0b00 	mov.w	fp, #0
 8022cd6:	f1ca 0301 	rsb	r3, sl, #1
 8022cda:	f8cd 9008 	str.w	r9, [sp, #8]
 8022cde:	f8cd b000 	str.w	fp, [sp]
 8022ce2:	9306      	str	r3, [sp, #24]
 8022ce4:	42b7      	cmp	r7, r6
 8022ce6:	d340      	bcc.n	8022d6a <__gethex+0x21e>
 8022ce8:	9802      	ldr	r0, [sp, #8]
 8022cea:	9b00      	ldr	r3, [sp, #0]
 8022cec:	f840 3b04 	str.w	r3, [r0], #4
 8022cf0:	eba0 0009 	sub.w	r0, r0, r9
 8022cf4:	1080      	asrs	r0, r0, #2
 8022cf6:	0146      	lsls	r6, r0, #5
 8022cf8:	6120      	str	r0, [r4, #16]
 8022cfa:	4618      	mov	r0, r3
 8022cfc:	f000 fb46 	bl	802338c <__hi0bits>
 8022d00:	1a30      	subs	r0, r6, r0
 8022d02:	f8d8 6000 	ldr.w	r6, [r8]
 8022d06:	42b0      	cmp	r0, r6
 8022d08:	dd63      	ble.n	8022dd2 <__gethex+0x286>
 8022d0a:	1b87      	subs	r7, r0, r6
 8022d0c:	4639      	mov	r1, r7
 8022d0e:	4620      	mov	r0, r4
 8022d10:	f000 fee0 	bl	8023ad4 <__any_on>
 8022d14:	4682      	mov	sl, r0
 8022d16:	b1a8      	cbz	r0, 8022d44 <__gethex+0x1f8>
 8022d18:	1e7b      	subs	r3, r7, #1
 8022d1a:	1159      	asrs	r1, r3, #5
 8022d1c:	f003 021f 	and.w	r2, r3, #31
 8022d20:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8022d24:	f04f 0a01 	mov.w	sl, #1
 8022d28:	fa0a f202 	lsl.w	r2, sl, r2
 8022d2c:	420a      	tst	r2, r1
 8022d2e:	d009      	beq.n	8022d44 <__gethex+0x1f8>
 8022d30:	4553      	cmp	r3, sl
 8022d32:	dd05      	ble.n	8022d40 <__gethex+0x1f4>
 8022d34:	1eb9      	subs	r1, r7, #2
 8022d36:	4620      	mov	r0, r4
 8022d38:	f000 fecc 	bl	8023ad4 <__any_on>
 8022d3c:	2800      	cmp	r0, #0
 8022d3e:	d145      	bne.n	8022dcc <__gethex+0x280>
 8022d40:	f04f 0a02 	mov.w	sl, #2
 8022d44:	4639      	mov	r1, r7
 8022d46:	4620      	mov	r0, r4
 8022d48:	f7ff fe98 	bl	8022a7c <rshift>
 8022d4c:	443d      	add	r5, r7
 8022d4e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8022d52:	42ab      	cmp	r3, r5
 8022d54:	da4c      	bge.n	8022df0 <__gethex+0x2a4>
 8022d56:	ee18 0a10 	vmov	r0, s16
 8022d5a:	4621      	mov	r1, r4
 8022d5c:	f000 fa60 	bl	8023220 <_Bfree>
 8022d60:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022d62:	2300      	movs	r3, #0
 8022d64:	6013      	str	r3, [r2, #0]
 8022d66:	27a3      	movs	r7, #163	; 0xa3
 8022d68:	e785      	b.n	8022c76 <__gethex+0x12a>
 8022d6a:	1e73      	subs	r3, r6, #1
 8022d6c:	9a05      	ldr	r2, [sp, #20]
 8022d6e:	9303      	str	r3, [sp, #12]
 8022d70:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8022d74:	4293      	cmp	r3, r2
 8022d76:	d019      	beq.n	8022dac <__gethex+0x260>
 8022d78:	f1bb 0f20 	cmp.w	fp, #32
 8022d7c:	d107      	bne.n	8022d8e <__gethex+0x242>
 8022d7e:	9b02      	ldr	r3, [sp, #8]
 8022d80:	9a00      	ldr	r2, [sp, #0]
 8022d82:	f843 2b04 	str.w	r2, [r3], #4
 8022d86:	9302      	str	r3, [sp, #8]
 8022d88:	2300      	movs	r3, #0
 8022d8a:	9300      	str	r3, [sp, #0]
 8022d8c:	469b      	mov	fp, r3
 8022d8e:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8022d92:	f7ff fec5 	bl	8022b20 <__hexdig_fun>
 8022d96:	9b00      	ldr	r3, [sp, #0]
 8022d98:	f000 000f 	and.w	r0, r0, #15
 8022d9c:	fa00 f00b 	lsl.w	r0, r0, fp
 8022da0:	4303      	orrs	r3, r0
 8022da2:	9300      	str	r3, [sp, #0]
 8022da4:	f10b 0b04 	add.w	fp, fp, #4
 8022da8:	9b03      	ldr	r3, [sp, #12]
 8022daa:	e00d      	b.n	8022dc8 <__gethex+0x27c>
 8022dac:	9b03      	ldr	r3, [sp, #12]
 8022dae:	9a06      	ldr	r2, [sp, #24]
 8022db0:	4413      	add	r3, r2
 8022db2:	42bb      	cmp	r3, r7
 8022db4:	d3e0      	bcc.n	8022d78 <__gethex+0x22c>
 8022db6:	4618      	mov	r0, r3
 8022db8:	9901      	ldr	r1, [sp, #4]
 8022dba:	9307      	str	r3, [sp, #28]
 8022dbc:	4652      	mov	r2, sl
 8022dbe:	f000 febf 	bl	8023b40 <strncmp>
 8022dc2:	9b07      	ldr	r3, [sp, #28]
 8022dc4:	2800      	cmp	r0, #0
 8022dc6:	d1d7      	bne.n	8022d78 <__gethex+0x22c>
 8022dc8:	461e      	mov	r6, r3
 8022dca:	e78b      	b.n	8022ce4 <__gethex+0x198>
 8022dcc:	f04f 0a03 	mov.w	sl, #3
 8022dd0:	e7b8      	b.n	8022d44 <__gethex+0x1f8>
 8022dd2:	da0a      	bge.n	8022dea <__gethex+0x29e>
 8022dd4:	1a37      	subs	r7, r6, r0
 8022dd6:	4621      	mov	r1, r4
 8022dd8:	ee18 0a10 	vmov	r0, s16
 8022ddc:	463a      	mov	r2, r7
 8022dde:	f000 fc3b 	bl	8023658 <__lshift>
 8022de2:	1bed      	subs	r5, r5, r7
 8022de4:	4604      	mov	r4, r0
 8022de6:	f100 0914 	add.w	r9, r0, #20
 8022dea:	f04f 0a00 	mov.w	sl, #0
 8022dee:	e7ae      	b.n	8022d4e <__gethex+0x202>
 8022df0:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8022df4:	42a8      	cmp	r0, r5
 8022df6:	dd72      	ble.n	8022ede <__gethex+0x392>
 8022df8:	1b45      	subs	r5, r0, r5
 8022dfa:	42ae      	cmp	r6, r5
 8022dfc:	dc36      	bgt.n	8022e6c <__gethex+0x320>
 8022dfe:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8022e02:	2b02      	cmp	r3, #2
 8022e04:	d02a      	beq.n	8022e5c <__gethex+0x310>
 8022e06:	2b03      	cmp	r3, #3
 8022e08:	d02c      	beq.n	8022e64 <__gethex+0x318>
 8022e0a:	2b01      	cmp	r3, #1
 8022e0c:	d115      	bne.n	8022e3a <__gethex+0x2ee>
 8022e0e:	42ae      	cmp	r6, r5
 8022e10:	d113      	bne.n	8022e3a <__gethex+0x2ee>
 8022e12:	2e01      	cmp	r6, #1
 8022e14:	d10b      	bne.n	8022e2e <__gethex+0x2e2>
 8022e16:	9a04      	ldr	r2, [sp, #16]
 8022e18:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8022e1c:	6013      	str	r3, [r2, #0]
 8022e1e:	2301      	movs	r3, #1
 8022e20:	6123      	str	r3, [r4, #16]
 8022e22:	f8c9 3000 	str.w	r3, [r9]
 8022e26:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022e28:	2762      	movs	r7, #98	; 0x62
 8022e2a:	601c      	str	r4, [r3, #0]
 8022e2c:	e723      	b.n	8022c76 <__gethex+0x12a>
 8022e2e:	1e71      	subs	r1, r6, #1
 8022e30:	4620      	mov	r0, r4
 8022e32:	f000 fe4f 	bl	8023ad4 <__any_on>
 8022e36:	2800      	cmp	r0, #0
 8022e38:	d1ed      	bne.n	8022e16 <__gethex+0x2ca>
 8022e3a:	ee18 0a10 	vmov	r0, s16
 8022e3e:	4621      	mov	r1, r4
 8022e40:	f000 f9ee 	bl	8023220 <_Bfree>
 8022e44:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022e46:	2300      	movs	r3, #0
 8022e48:	6013      	str	r3, [r2, #0]
 8022e4a:	2750      	movs	r7, #80	; 0x50
 8022e4c:	e713      	b.n	8022c76 <__gethex+0x12a>
 8022e4e:	bf00      	nop
 8022e50:	08025558 	.word	0x08025558
 8022e54:	080254de 	.word	0x080254de
 8022e58:	080254ef 	.word	0x080254ef
 8022e5c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022e5e:	2b00      	cmp	r3, #0
 8022e60:	d1eb      	bne.n	8022e3a <__gethex+0x2ee>
 8022e62:	e7d8      	b.n	8022e16 <__gethex+0x2ca>
 8022e64:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022e66:	2b00      	cmp	r3, #0
 8022e68:	d1d5      	bne.n	8022e16 <__gethex+0x2ca>
 8022e6a:	e7e6      	b.n	8022e3a <__gethex+0x2ee>
 8022e6c:	1e6f      	subs	r7, r5, #1
 8022e6e:	f1ba 0f00 	cmp.w	sl, #0
 8022e72:	d131      	bne.n	8022ed8 <__gethex+0x38c>
 8022e74:	b127      	cbz	r7, 8022e80 <__gethex+0x334>
 8022e76:	4639      	mov	r1, r7
 8022e78:	4620      	mov	r0, r4
 8022e7a:	f000 fe2b 	bl	8023ad4 <__any_on>
 8022e7e:	4682      	mov	sl, r0
 8022e80:	117b      	asrs	r3, r7, #5
 8022e82:	2101      	movs	r1, #1
 8022e84:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8022e88:	f007 071f 	and.w	r7, r7, #31
 8022e8c:	fa01 f707 	lsl.w	r7, r1, r7
 8022e90:	421f      	tst	r7, r3
 8022e92:	4629      	mov	r1, r5
 8022e94:	4620      	mov	r0, r4
 8022e96:	bf18      	it	ne
 8022e98:	f04a 0a02 	orrne.w	sl, sl, #2
 8022e9c:	1b76      	subs	r6, r6, r5
 8022e9e:	f7ff fded 	bl	8022a7c <rshift>
 8022ea2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022ea6:	2702      	movs	r7, #2
 8022ea8:	f1ba 0f00 	cmp.w	sl, #0
 8022eac:	d048      	beq.n	8022f40 <__gethex+0x3f4>
 8022eae:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8022eb2:	2b02      	cmp	r3, #2
 8022eb4:	d015      	beq.n	8022ee2 <__gethex+0x396>
 8022eb6:	2b03      	cmp	r3, #3
 8022eb8:	d017      	beq.n	8022eea <__gethex+0x39e>
 8022eba:	2b01      	cmp	r3, #1
 8022ebc:	d109      	bne.n	8022ed2 <__gethex+0x386>
 8022ebe:	f01a 0f02 	tst.w	sl, #2
 8022ec2:	d006      	beq.n	8022ed2 <__gethex+0x386>
 8022ec4:	f8d9 0000 	ldr.w	r0, [r9]
 8022ec8:	ea4a 0a00 	orr.w	sl, sl, r0
 8022ecc:	f01a 0f01 	tst.w	sl, #1
 8022ed0:	d10e      	bne.n	8022ef0 <__gethex+0x3a4>
 8022ed2:	f047 0710 	orr.w	r7, r7, #16
 8022ed6:	e033      	b.n	8022f40 <__gethex+0x3f4>
 8022ed8:	f04f 0a01 	mov.w	sl, #1
 8022edc:	e7d0      	b.n	8022e80 <__gethex+0x334>
 8022ede:	2701      	movs	r7, #1
 8022ee0:	e7e2      	b.n	8022ea8 <__gethex+0x35c>
 8022ee2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022ee4:	f1c3 0301 	rsb	r3, r3, #1
 8022ee8:	9315      	str	r3, [sp, #84]	; 0x54
 8022eea:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022eec:	2b00      	cmp	r3, #0
 8022eee:	d0f0      	beq.n	8022ed2 <__gethex+0x386>
 8022ef0:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8022ef4:	f104 0314 	add.w	r3, r4, #20
 8022ef8:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8022efc:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8022f00:	f04f 0c00 	mov.w	ip, #0
 8022f04:	4618      	mov	r0, r3
 8022f06:	f853 2b04 	ldr.w	r2, [r3], #4
 8022f0a:	f1b2 3fff 	cmp.w	r2, #4294967295
 8022f0e:	d01c      	beq.n	8022f4a <__gethex+0x3fe>
 8022f10:	3201      	adds	r2, #1
 8022f12:	6002      	str	r2, [r0, #0]
 8022f14:	2f02      	cmp	r7, #2
 8022f16:	f104 0314 	add.w	r3, r4, #20
 8022f1a:	d13f      	bne.n	8022f9c <__gethex+0x450>
 8022f1c:	f8d8 2000 	ldr.w	r2, [r8]
 8022f20:	3a01      	subs	r2, #1
 8022f22:	42b2      	cmp	r2, r6
 8022f24:	d10a      	bne.n	8022f3c <__gethex+0x3f0>
 8022f26:	1171      	asrs	r1, r6, #5
 8022f28:	2201      	movs	r2, #1
 8022f2a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8022f2e:	f006 061f 	and.w	r6, r6, #31
 8022f32:	fa02 f606 	lsl.w	r6, r2, r6
 8022f36:	421e      	tst	r6, r3
 8022f38:	bf18      	it	ne
 8022f3a:	4617      	movne	r7, r2
 8022f3c:	f047 0720 	orr.w	r7, r7, #32
 8022f40:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022f42:	601c      	str	r4, [r3, #0]
 8022f44:	9b04      	ldr	r3, [sp, #16]
 8022f46:	601d      	str	r5, [r3, #0]
 8022f48:	e695      	b.n	8022c76 <__gethex+0x12a>
 8022f4a:	4299      	cmp	r1, r3
 8022f4c:	f843 cc04 	str.w	ip, [r3, #-4]
 8022f50:	d8d8      	bhi.n	8022f04 <__gethex+0x3b8>
 8022f52:	68a3      	ldr	r3, [r4, #8]
 8022f54:	459b      	cmp	fp, r3
 8022f56:	db19      	blt.n	8022f8c <__gethex+0x440>
 8022f58:	6861      	ldr	r1, [r4, #4]
 8022f5a:	ee18 0a10 	vmov	r0, s16
 8022f5e:	3101      	adds	r1, #1
 8022f60:	f000 f91e 	bl	80231a0 <_Balloc>
 8022f64:	4681      	mov	r9, r0
 8022f66:	b918      	cbnz	r0, 8022f70 <__gethex+0x424>
 8022f68:	4b1a      	ldr	r3, [pc, #104]	; (8022fd4 <__gethex+0x488>)
 8022f6a:	4602      	mov	r2, r0
 8022f6c:	2184      	movs	r1, #132	; 0x84
 8022f6e:	e6a8      	b.n	8022cc2 <__gethex+0x176>
 8022f70:	6922      	ldr	r2, [r4, #16]
 8022f72:	3202      	adds	r2, #2
 8022f74:	f104 010c 	add.w	r1, r4, #12
 8022f78:	0092      	lsls	r2, r2, #2
 8022f7a:	300c      	adds	r0, #12
 8022f7c:	f7fe fc9e 	bl	80218bc <memcpy>
 8022f80:	4621      	mov	r1, r4
 8022f82:	ee18 0a10 	vmov	r0, s16
 8022f86:	f000 f94b 	bl	8023220 <_Bfree>
 8022f8a:	464c      	mov	r4, r9
 8022f8c:	6923      	ldr	r3, [r4, #16]
 8022f8e:	1c5a      	adds	r2, r3, #1
 8022f90:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8022f94:	6122      	str	r2, [r4, #16]
 8022f96:	2201      	movs	r2, #1
 8022f98:	615a      	str	r2, [r3, #20]
 8022f9a:	e7bb      	b.n	8022f14 <__gethex+0x3c8>
 8022f9c:	6922      	ldr	r2, [r4, #16]
 8022f9e:	455a      	cmp	r2, fp
 8022fa0:	dd0b      	ble.n	8022fba <__gethex+0x46e>
 8022fa2:	2101      	movs	r1, #1
 8022fa4:	4620      	mov	r0, r4
 8022fa6:	f7ff fd69 	bl	8022a7c <rshift>
 8022faa:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8022fae:	3501      	adds	r5, #1
 8022fb0:	42ab      	cmp	r3, r5
 8022fb2:	f6ff aed0 	blt.w	8022d56 <__gethex+0x20a>
 8022fb6:	2701      	movs	r7, #1
 8022fb8:	e7c0      	b.n	8022f3c <__gethex+0x3f0>
 8022fba:	f016 061f 	ands.w	r6, r6, #31
 8022fbe:	d0fa      	beq.n	8022fb6 <__gethex+0x46a>
 8022fc0:	449a      	add	sl, r3
 8022fc2:	f1c6 0620 	rsb	r6, r6, #32
 8022fc6:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 8022fca:	f000 f9df 	bl	802338c <__hi0bits>
 8022fce:	42b0      	cmp	r0, r6
 8022fd0:	dbe7      	blt.n	8022fa2 <__gethex+0x456>
 8022fd2:	e7f0      	b.n	8022fb6 <__gethex+0x46a>
 8022fd4:	080254de 	.word	0x080254de

08022fd8 <L_shift>:
 8022fd8:	f1c2 0208 	rsb	r2, r2, #8
 8022fdc:	0092      	lsls	r2, r2, #2
 8022fde:	b570      	push	{r4, r5, r6, lr}
 8022fe0:	f1c2 0620 	rsb	r6, r2, #32
 8022fe4:	6843      	ldr	r3, [r0, #4]
 8022fe6:	6804      	ldr	r4, [r0, #0]
 8022fe8:	fa03 f506 	lsl.w	r5, r3, r6
 8022fec:	432c      	orrs	r4, r5
 8022fee:	40d3      	lsrs	r3, r2
 8022ff0:	6004      	str	r4, [r0, #0]
 8022ff2:	f840 3f04 	str.w	r3, [r0, #4]!
 8022ff6:	4288      	cmp	r0, r1
 8022ff8:	d3f4      	bcc.n	8022fe4 <L_shift+0xc>
 8022ffa:	bd70      	pop	{r4, r5, r6, pc}

08022ffc <__match>:
 8022ffc:	b530      	push	{r4, r5, lr}
 8022ffe:	6803      	ldr	r3, [r0, #0]
 8023000:	3301      	adds	r3, #1
 8023002:	f811 4b01 	ldrb.w	r4, [r1], #1
 8023006:	b914      	cbnz	r4, 802300e <__match+0x12>
 8023008:	6003      	str	r3, [r0, #0]
 802300a:	2001      	movs	r0, #1
 802300c:	bd30      	pop	{r4, r5, pc}
 802300e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023012:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8023016:	2d19      	cmp	r5, #25
 8023018:	bf98      	it	ls
 802301a:	3220      	addls	r2, #32
 802301c:	42a2      	cmp	r2, r4
 802301e:	d0f0      	beq.n	8023002 <__match+0x6>
 8023020:	2000      	movs	r0, #0
 8023022:	e7f3      	b.n	802300c <__match+0x10>

08023024 <__hexnan>:
 8023024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023028:	680b      	ldr	r3, [r1, #0]
 802302a:	6801      	ldr	r1, [r0, #0]
 802302c:	115e      	asrs	r6, r3, #5
 802302e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8023032:	f013 031f 	ands.w	r3, r3, #31
 8023036:	b087      	sub	sp, #28
 8023038:	bf18      	it	ne
 802303a:	3604      	addne	r6, #4
 802303c:	2500      	movs	r5, #0
 802303e:	1f37      	subs	r7, r6, #4
 8023040:	4682      	mov	sl, r0
 8023042:	4690      	mov	r8, r2
 8023044:	9301      	str	r3, [sp, #4]
 8023046:	f846 5c04 	str.w	r5, [r6, #-4]
 802304a:	46b9      	mov	r9, r7
 802304c:	463c      	mov	r4, r7
 802304e:	9502      	str	r5, [sp, #8]
 8023050:	46ab      	mov	fp, r5
 8023052:	784a      	ldrb	r2, [r1, #1]
 8023054:	1c4b      	adds	r3, r1, #1
 8023056:	9303      	str	r3, [sp, #12]
 8023058:	b342      	cbz	r2, 80230ac <__hexnan+0x88>
 802305a:	4610      	mov	r0, r2
 802305c:	9105      	str	r1, [sp, #20]
 802305e:	9204      	str	r2, [sp, #16]
 8023060:	f7ff fd5e 	bl	8022b20 <__hexdig_fun>
 8023064:	2800      	cmp	r0, #0
 8023066:	d14f      	bne.n	8023108 <__hexnan+0xe4>
 8023068:	9a04      	ldr	r2, [sp, #16]
 802306a:	9905      	ldr	r1, [sp, #20]
 802306c:	2a20      	cmp	r2, #32
 802306e:	d818      	bhi.n	80230a2 <__hexnan+0x7e>
 8023070:	9b02      	ldr	r3, [sp, #8]
 8023072:	459b      	cmp	fp, r3
 8023074:	dd13      	ble.n	802309e <__hexnan+0x7a>
 8023076:	454c      	cmp	r4, r9
 8023078:	d206      	bcs.n	8023088 <__hexnan+0x64>
 802307a:	2d07      	cmp	r5, #7
 802307c:	dc04      	bgt.n	8023088 <__hexnan+0x64>
 802307e:	462a      	mov	r2, r5
 8023080:	4649      	mov	r1, r9
 8023082:	4620      	mov	r0, r4
 8023084:	f7ff ffa8 	bl	8022fd8 <L_shift>
 8023088:	4544      	cmp	r4, r8
 802308a:	d950      	bls.n	802312e <__hexnan+0x10a>
 802308c:	2300      	movs	r3, #0
 802308e:	f1a4 0904 	sub.w	r9, r4, #4
 8023092:	f844 3c04 	str.w	r3, [r4, #-4]
 8023096:	f8cd b008 	str.w	fp, [sp, #8]
 802309a:	464c      	mov	r4, r9
 802309c:	461d      	mov	r5, r3
 802309e:	9903      	ldr	r1, [sp, #12]
 80230a0:	e7d7      	b.n	8023052 <__hexnan+0x2e>
 80230a2:	2a29      	cmp	r2, #41	; 0x29
 80230a4:	d156      	bne.n	8023154 <__hexnan+0x130>
 80230a6:	3102      	adds	r1, #2
 80230a8:	f8ca 1000 	str.w	r1, [sl]
 80230ac:	f1bb 0f00 	cmp.w	fp, #0
 80230b0:	d050      	beq.n	8023154 <__hexnan+0x130>
 80230b2:	454c      	cmp	r4, r9
 80230b4:	d206      	bcs.n	80230c4 <__hexnan+0xa0>
 80230b6:	2d07      	cmp	r5, #7
 80230b8:	dc04      	bgt.n	80230c4 <__hexnan+0xa0>
 80230ba:	462a      	mov	r2, r5
 80230bc:	4649      	mov	r1, r9
 80230be:	4620      	mov	r0, r4
 80230c0:	f7ff ff8a 	bl	8022fd8 <L_shift>
 80230c4:	4544      	cmp	r4, r8
 80230c6:	d934      	bls.n	8023132 <__hexnan+0x10e>
 80230c8:	f1a8 0204 	sub.w	r2, r8, #4
 80230cc:	4623      	mov	r3, r4
 80230ce:	f853 1b04 	ldr.w	r1, [r3], #4
 80230d2:	f842 1f04 	str.w	r1, [r2, #4]!
 80230d6:	429f      	cmp	r7, r3
 80230d8:	d2f9      	bcs.n	80230ce <__hexnan+0xaa>
 80230da:	1b3b      	subs	r3, r7, r4
 80230dc:	f023 0303 	bic.w	r3, r3, #3
 80230e0:	3304      	adds	r3, #4
 80230e2:	3401      	adds	r4, #1
 80230e4:	3e03      	subs	r6, #3
 80230e6:	42b4      	cmp	r4, r6
 80230e8:	bf88      	it	hi
 80230ea:	2304      	movhi	r3, #4
 80230ec:	4443      	add	r3, r8
 80230ee:	2200      	movs	r2, #0
 80230f0:	f843 2b04 	str.w	r2, [r3], #4
 80230f4:	429f      	cmp	r7, r3
 80230f6:	d2fb      	bcs.n	80230f0 <__hexnan+0xcc>
 80230f8:	683b      	ldr	r3, [r7, #0]
 80230fa:	b91b      	cbnz	r3, 8023104 <__hexnan+0xe0>
 80230fc:	4547      	cmp	r7, r8
 80230fe:	d127      	bne.n	8023150 <__hexnan+0x12c>
 8023100:	2301      	movs	r3, #1
 8023102:	603b      	str	r3, [r7, #0]
 8023104:	2005      	movs	r0, #5
 8023106:	e026      	b.n	8023156 <__hexnan+0x132>
 8023108:	3501      	adds	r5, #1
 802310a:	2d08      	cmp	r5, #8
 802310c:	f10b 0b01 	add.w	fp, fp, #1
 8023110:	dd06      	ble.n	8023120 <__hexnan+0xfc>
 8023112:	4544      	cmp	r4, r8
 8023114:	d9c3      	bls.n	802309e <__hexnan+0x7a>
 8023116:	2300      	movs	r3, #0
 8023118:	f844 3c04 	str.w	r3, [r4, #-4]
 802311c:	2501      	movs	r5, #1
 802311e:	3c04      	subs	r4, #4
 8023120:	6822      	ldr	r2, [r4, #0]
 8023122:	f000 000f 	and.w	r0, r0, #15
 8023126:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 802312a:	6022      	str	r2, [r4, #0]
 802312c:	e7b7      	b.n	802309e <__hexnan+0x7a>
 802312e:	2508      	movs	r5, #8
 8023130:	e7b5      	b.n	802309e <__hexnan+0x7a>
 8023132:	9b01      	ldr	r3, [sp, #4]
 8023134:	2b00      	cmp	r3, #0
 8023136:	d0df      	beq.n	80230f8 <__hexnan+0xd4>
 8023138:	f04f 32ff 	mov.w	r2, #4294967295
 802313c:	f1c3 0320 	rsb	r3, r3, #32
 8023140:	fa22 f303 	lsr.w	r3, r2, r3
 8023144:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8023148:	401a      	ands	r2, r3
 802314a:	f846 2c04 	str.w	r2, [r6, #-4]
 802314e:	e7d3      	b.n	80230f8 <__hexnan+0xd4>
 8023150:	3f04      	subs	r7, #4
 8023152:	e7d1      	b.n	80230f8 <__hexnan+0xd4>
 8023154:	2004      	movs	r0, #4
 8023156:	b007      	add	sp, #28
 8023158:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802315c <__retarget_lock_init_recursive>:
 802315c:	4770      	bx	lr

0802315e <__retarget_lock_acquire_recursive>:
 802315e:	4770      	bx	lr

08023160 <__retarget_lock_release>:
 8023160:	4770      	bx	lr

08023162 <__retarget_lock_release_recursive>:
 8023162:	4770      	bx	lr

08023164 <__ascii_mbtowc>:
 8023164:	b082      	sub	sp, #8
 8023166:	b901      	cbnz	r1, 802316a <__ascii_mbtowc+0x6>
 8023168:	a901      	add	r1, sp, #4
 802316a:	b142      	cbz	r2, 802317e <__ascii_mbtowc+0x1a>
 802316c:	b14b      	cbz	r3, 8023182 <__ascii_mbtowc+0x1e>
 802316e:	7813      	ldrb	r3, [r2, #0]
 8023170:	600b      	str	r3, [r1, #0]
 8023172:	7812      	ldrb	r2, [r2, #0]
 8023174:	1e10      	subs	r0, r2, #0
 8023176:	bf18      	it	ne
 8023178:	2001      	movne	r0, #1
 802317a:	b002      	add	sp, #8
 802317c:	4770      	bx	lr
 802317e:	4610      	mov	r0, r2
 8023180:	e7fb      	b.n	802317a <__ascii_mbtowc+0x16>
 8023182:	f06f 0001 	mvn.w	r0, #1
 8023186:	e7f8      	b.n	802317a <__ascii_mbtowc+0x16>

08023188 <__malloc_lock>:
 8023188:	4801      	ldr	r0, [pc, #4]	; (8023190 <__malloc_lock+0x8>)
 802318a:	f7ff bfe8 	b.w	802315e <__retarget_lock_acquire_recursive>
 802318e:	bf00      	nop
 8023190:	20000730 	.word	0x20000730

08023194 <__malloc_unlock>:
 8023194:	4801      	ldr	r0, [pc, #4]	; (802319c <__malloc_unlock+0x8>)
 8023196:	f7ff bfe4 	b.w	8023162 <__retarget_lock_release_recursive>
 802319a:	bf00      	nop
 802319c:	20000730 	.word	0x20000730

080231a0 <_Balloc>:
 80231a0:	b570      	push	{r4, r5, r6, lr}
 80231a2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80231a4:	4604      	mov	r4, r0
 80231a6:	460d      	mov	r5, r1
 80231a8:	b976      	cbnz	r6, 80231c8 <_Balloc+0x28>
 80231aa:	2010      	movs	r0, #16
 80231ac:	f7fe fb68 	bl	8021880 <malloc>
 80231b0:	4602      	mov	r2, r0
 80231b2:	6260      	str	r0, [r4, #36]	; 0x24
 80231b4:	b920      	cbnz	r0, 80231c0 <_Balloc+0x20>
 80231b6:	4b18      	ldr	r3, [pc, #96]	; (8023218 <_Balloc+0x78>)
 80231b8:	4818      	ldr	r0, [pc, #96]	; (802321c <_Balloc+0x7c>)
 80231ba:	2166      	movs	r1, #102	; 0x66
 80231bc:	f000 fce0 	bl	8023b80 <__assert_func>
 80231c0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80231c4:	6006      	str	r6, [r0, #0]
 80231c6:	60c6      	str	r6, [r0, #12]
 80231c8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80231ca:	68f3      	ldr	r3, [r6, #12]
 80231cc:	b183      	cbz	r3, 80231f0 <_Balloc+0x50>
 80231ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80231d0:	68db      	ldr	r3, [r3, #12]
 80231d2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80231d6:	b9b8      	cbnz	r0, 8023208 <_Balloc+0x68>
 80231d8:	2101      	movs	r1, #1
 80231da:	fa01 f605 	lsl.w	r6, r1, r5
 80231de:	1d72      	adds	r2, r6, #5
 80231e0:	0092      	lsls	r2, r2, #2
 80231e2:	4620      	mov	r0, r4
 80231e4:	f000 fc97 	bl	8023b16 <_calloc_r>
 80231e8:	b160      	cbz	r0, 8023204 <_Balloc+0x64>
 80231ea:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80231ee:	e00e      	b.n	802320e <_Balloc+0x6e>
 80231f0:	2221      	movs	r2, #33	; 0x21
 80231f2:	2104      	movs	r1, #4
 80231f4:	4620      	mov	r0, r4
 80231f6:	f000 fc8e 	bl	8023b16 <_calloc_r>
 80231fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80231fc:	60f0      	str	r0, [r6, #12]
 80231fe:	68db      	ldr	r3, [r3, #12]
 8023200:	2b00      	cmp	r3, #0
 8023202:	d1e4      	bne.n	80231ce <_Balloc+0x2e>
 8023204:	2000      	movs	r0, #0
 8023206:	bd70      	pop	{r4, r5, r6, pc}
 8023208:	6802      	ldr	r2, [r0, #0]
 802320a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 802320e:	2300      	movs	r3, #0
 8023210:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8023214:	e7f7      	b.n	8023206 <_Balloc+0x66>
 8023216:	bf00      	nop
 8023218:	0802556c 	.word	0x0802556c
 802321c:	08025583 	.word	0x08025583

08023220 <_Bfree>:
 8023220:	b570      	push	{r4, r5, r6, lr}
 8023222:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8023224:	4605      	mov	r5, r0
 8023226:	460c      	mov	r4, r1
 8023228:	b976      	cbnz	r6, 8023248 <_Bfree+0x28>
 802322a:	2010      	movs	r0, #16
 802322c:	f7fe fb28 	bl	8021880 <malloc>
 8023230:	4602      	mov	r2, r0
 8023232:	6268      	str	r0, [r5, #36]	; 0x24
 8023234:	b920      	cbnz	r0, 8023240 <_Bfree+0x20>
 8023236:	4b09      	ldr	r3, [pc, #36]	; (802325c <_Bfree+0x3c>)
 8023238:	4809      	ldr	r0, [pc, #36]	; (8023260 <_Bfree+0x40>)
 802323a:	218a      	movs	r1, #138	; 0x8a
 802323c:	f000 fca0 	bl	8023b80 <__assert_func>
 8023240:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8023244:	6006      	str	r6, [r0, #0]
 8023246:	60c6      	str	r6, [r0, #12]
 8023248:	b13c      	cbz	r4, 802325a <_Bfree+0x3a>
 802324a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 802324c:	6862      	ldr	r2, [r4, #4]
 802324e:	68db      	ldr	r3, [r3, #12]
 8023250:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023254:	6021      	str	r1, [r4, #0]
 8023256:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 802325a:	bd70      	pop	{r4, r5, r6, pc}
 802325c:	0802556c 	.word	0x0802556c
 8023260:	08025583 	.word	0x08025583

08023264 <__multadd>:
 8023264:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023268:	690e      	ldr	r6, [r1, #16]
 802326a:	4607      	mov	r7, r0
 802326c:	4698      	mov	r8, r3
 802326e:	460c      	mov	r4, r1
 8023270:	f101 0014 	add.w	r0, r1, #20
 8023274:	2300      	movs	r3, #0
 8023276:	6805      	ldr	r5, [r0, #0]
 8023278:	b2a9      	uxth	r1, r5
 802327a:	fb02 8101 	mla	r1, r2, r1, r8
 802327e:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8023282:	0c2d      	lsrs	r5, r5, #16
 8023284:	fb02 c505 	mla	r5, r2, r5, ip
 8023288:	b289      	uxth	r1, r1
 802328a:	3301      	adds	r3, #1
 802328c:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8023290:	429e      	cmp	r6, r3
 8023292:	f840 1b04 	str.w	r1, [r0], #4
 8023296:	ea4f 4815 	mov.w	r8, r5, lsr #16
 802329a:	dcec      	bgt.n	8023276 <__multadd+0x12>
 802329c:	f1b8 0f00 	cmp.w	r8, #0
 80232a0:	d022      	beq.n	80232e8 <__multadd+0x84>
 80232a2:	68a3      	ldr	r3, [r4, #8]
 80232a4:	42b3      	cmp	r3, r6
 80232a6:	dc19      	bgt.n	80232dc <__multadd+0x78>
 80232a8:	6861      	ldr	r1, [r4, #4]
 80232aa:	4638      	mov	r0, r7
 80232ac:	3101      	adds	r1, #1
 80232ae:	f7ff ff77 	bl	80231a0 <_Balloc>
 80232b2:	4605      	mov	r5, r0
 80232b4:	b928      	cbnz	r0, 80232c2 <__multadd+0x5e>
 80232b6:	4602      	mov	r2, r0
 80232b8:	4b0d      	ldr	r3, [pc, #52]	; (80232f0 <__multadd+0x8c>)
 80232ba:	480e      	ldr	r0, [pc, #56]	; (80232f4 <__multadd+0x90>)
 80232bc:	21b5      	movs	r1, #181	; 0xb5
 80232be:	f000 fc5f 	bl	8023b80 <__assert_func>
 80232c2:	6922      	ldr	r2, [r4, #16]
 80232c4:	3202      	adds	r2, #2
 80232c6:	f104 010c 	add.w	r1, r4, #12
 80232ca:	0092      	lsls	r2, r2, #2
 80232cc:	300c      	adds	r0, #12
 80232ce:	f7fe faf5 	bl	80218bc <memcpy>
 80232d2:	4621      	mov	r1, r4
 80232d4:	4638      	mov	r0, r7
 80232d6:	f7ff ffa3 	bl	8023220 <_Bfree>
 80232da:	462c      	mov	r4, r5
 80232dc:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 80232e0:	3601      	adds	r6, #1
 80232e2:	f8c3 8014 	str.w	r8, [r3, #20]
 80232e6:	6126      	str	r6, [r4, #16]
 80232e8:	4620      	mov	r0, r4
 80232ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80232ee:	bf00      	nop
 80232f0:	080254de 	.word	0x080254de
 80232f4:	08025583 	.word	0x08025583

080232f8 <__s2b>:
 80232f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80232fc:	460c      	mov	r4, r1
 80232fe:	4615      	mov	r5, r2
 8023300:	461f      	mov	r7, r3
 8023302:	2209      	movs	r2, #9
 8023304:	3308      	adds	r3, #8
 8023306:	4606      	mov	r6, r0
 8023308:	fb93 f3f2 	sdiv	r3, r3, r2
 802330c:	2100      	movs	r1, #0
 802330e:	2201      	movs	r2, #1
 8023310:	429a      	cmp	r2, r3
 8023312:	db09      	blt.n	8023328 <__s2b+0x30>
 8023314:	4630      	mov	r0, r6
 8023316:	f7ff ff43 	bl	80231a0 <_Balloc>
 802331a:	b940      	cbnz	r0, 802332e <__s2b+0x36>
 802331c:	4602      	mov	r2, r0
 802331e:	4b19      	ldr	r3, [pc, #100]	; (8023384 <__s2b+0x8c>)
 8023320:	4819      	ldr	r0, [pc, #100]	; (8023388 <__s2b+0x90>)
 8023322:	21ce      	movs	r1, #206	; 0xce
 8023324:	f000 fc2c 	bl	8023b80 <__assert_func>
 8023328:	0052      	lsls	r2, r2, #1
 802332a:	3101      	adds	r1, #1
 802332c:	e7f0      	b.n	8023310 <__s2b+0x18>
 802332e:	9b08      	ldr	r3, [sp, #32]
 8023330:	6143      	str	r3, [r0, #20]
 8023332:	2d09      	cmp	r5, #9
 8023334:	f04f 0301 	mov.w	r3, #1
 8023338:	6103      	str	r3, [r0, #16]
 802333a:	dd16      	ble.n	802336a <__s2b+0x72>
 802333c:	f104 0909 	add.w	r9, r4, #9
 8023340:	46c8      	mov	r8, r9
 8023342:	442c      	add	r4, r5
 8023344:	f818 3b01 	ldrb.w	r3, [r8], #1
 8023348:	4601      	mov	r1, r0
 802334a:	3b30      	subs	r3, #48	; 0x30
 802334c:	220a      	movs	r2, #10
 802334e:	4630      	mov	r0, r6
 8023350:	f7ff ff88 	bl	8023264 <__multadd>
 8023354:	45a0      	cmp	r8, r4
 8023356:	d1f5      	bne.n	8023344 <__s2b+0x4c>
 8023358:	f1a5 0408 	sub.w	r4, r5, #8
 802335c:	444c      	add	r4, r9
 802335e:	1b2d      	subs	r5, r5, r4
 8023360:	1963      	adds	r3, r4, r5
 8023362:	42bb      	cmp	r3, r7
 8023364:	db04      	blt.n	8023370 <__s2b+0x78>
 8023366:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802336a:	340a      	adds	r4, #10
 802336c:	2509      	movs	r5, #9
 802336e:	e7f6      	b.n	802335e <__s2b+0x66>
 8023370:	f814 3b01 	ldrb.w	r3, [r4], #1
 8023374:	4601      	mov	r1, r0
 8023376:	3b30      	subs	r3, #48	; 0x30
 8023378:	220a      	movs	r2, #10
 802337a:	4630      	mov	r0, r6
 802337c:	f7ff ff72 	bl	8023264 <__multadd>
 8023380:	e7ee      	b.n	8023360 <__s2b+0x68>
 8023382:	bf00      	nop
 8023384:	080254de 	.word	0x080254de
 8023388:	08025583 	.word	0x08025583

0802338c <__hi0bits>:
 802338c:	0c03      	lsrs	r3, r0, #16
 802338e:	041b      	lsls	r3, r3, #16
 8023390:	b9d3      	cbnz	r3, 80233c8 <__hi0bits+0x3c>
 8023392:	0400      	lsls	r0, r0, #16
 8023394:	2310      	movs	r3, #16
 8023396:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 802339a:	bf04      	itt	eq
 802339c:	0200      	lsleq	r0, r0, #8
 802339e:	3308      	addeq	r3, #8
 80233a0:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80233a4:	bf04      	itt	eq
 80233a6:	0100      	lsleq	r0, r0, #4
 80233a8:	3304      	addeq	r3, #4
 80233aa:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80233ae:	bf04      	itt	eq
 80233b0:	0080      	lsleq	r0, r0, #2
 80233b2:	3302      	addeq	r3, #2
 80233b4:	2800      	cmp	r0, #0
 80233b6:	db05      	blt.n	80233c4 <__hi0bits+0x38>
 80233b8:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80233bc:	f103 0301 	add.w	r3, r3, #1
 80233c0:	bf08      	it	eq
 80233c2:	2320      	moveq	r3, #32
 80233c4:	4618      	mov	r0, r3
 80233c6:	4770      	bx	lr
 80233c8:	2300      	movs	r3, #0
 80233ca:	e7e4      	b.n	8023396 <__hi0bits+0xa>

080233cc <__lo0bits>:
 80233cc:	6803      	ldr	r3, [r0, #0]
 80233ce:	f013 0207 	ands.w	r2, r3, #7
 80233d2:	4601      	mov	r1, r0
 80233d4:	d00b      	beq.n	80233ee <__lo0bits+0x22>
 80233d6:	07da      	lsls	r2, r3, #31
 80233d8:	d424      	bmi.n	8023424 <__lo0bits+0x58>
 80233da:	0798      	lsls	r0, r3, #30
 80233dc:	bf49      	itett	mi
 80233de:	085b      	lsrmi	r3, r3, #1
 80233e0:	089b      	lsrpl	r3, r3, #2
 80233e2:	2001      	movmi	r0, #1
 80233e4:	600b      	strmi	r3, [r1, #0]
 80233e6:	bf5c      	itt	pl
 80233e8:	600b      	strpl	r3, [r1, #0]
 80233ea:	2002      	movpl	r0, #2
 80233ec:	4770      	bx	lr
 80233ee:	b298      	uxth	r0, r3
 80233f0:	b9b0      	cbnz	r0, 8023420 <__lo0bits+0x54>
 80233f2:	0c1b      	lsrs	r3, r3, #16
 80233f4:	2010      	movs	r0, #16
 80233f6:	f013 0fff 	tst.w	r3, #255	; 0xff
 80233fa:	bf04      	itt	eq
 80233fc:	0a1b      	lsreq	r3, r3, #8
 80233fe:	3008      	addeq	r0, #8
 8023400:	071a      	lsls	r2, r3, #28
 8023402:	bf04      	itt	eq
 8023404:	091b      	lsreq	r3, r3, #4
 8023406:	3004      	addeq	r0, #4
 8023408:	079a      	lsls	r2, r3, #30
 802340a:	bf04      	itt	eq
 802340c:	089b      	lsreq	r3, r3, #2
 802340e:	3002      	addeq	r0, #2
 8023410:	07da      	lsls	r2, r3, #31
 8023412:	d403      	bmi.n	802341c <__lo0bits+0x50>
 8023414:	085b      	lsrs	r3, r3, #1
 8023416:	f100 0001 	add.w	r0, r0, #1
 802341a:	d005      	beq.n	8023428 <__lo0bits+0x5c>
 802341c:	600b      	str	r3, [r1, #0]
 802341e:	4770      	bx	lr
 8023420:	4610      	mov	r0, r2
 8023422:	e7e8      	b.n	80233f6 <__lo0bits+0x2a>
 8023424:	2000      	movs	r0, #0
 8023426:	4770      	bx	lr
 8023428:	2020      	movs	r0, #32
 802342a:	4770      	bx	lr

0802342c <__i2b>:
 802342c:	b510      	push	{r4, lr}
 802342e:	460c      	mov	r4, r1
 8023430:	2101      	movs	r1, #1
 8023432:	f7ff feb5 	bl	80231a0 <_Balloc>
 8023436:	4602      	mov	r2, r0
 8023438:	b928      	cbnz	r0, 8023446 <__i2b+0x1a>
 802343a:	4b05      	ldr	r3, [pc, #20]	; (8023450 <__i2b+0x24>)
 802343c:	4805      	ldr	r0, [pc, #20]	; (8023454 <__i2b+0x28>)
 802343e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8023442:	f000 fb9d 	bl	8023b80 <__assert_func>
 8023446:	2301      	movs	r3, #1
 8023448:	6144      	str	r4, [r0, #20]
 802344a:	6103      	str	r3, [r0, #16]
 802344c:	bd10      	pop	{r4, pc}
 802344e:	bf00      	nop
 8023450:	080254de 	.word	0x080254de
 8023454:	08025583 	.word	0x08025583

08023458 <__multiply>:
 8023458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802345c:	4614      	mov	r4, r2
 802345e:	690a      	ldr	r2, [r1, #16]
 8023460:	6923      	ldr	r3, [r4, #16]
 8023462:	429a      	cmp	r2, r3
 8023464:	bfb8      	it	lt
 8023466:	460b      	movlt	r3, r1
 8023468:	460d      	mov	r5, r1
 802346a:	bfbc      	itt	lt
 802346c:	4625      	movlt	r5, r4
 802346e:	461c      	movlt	r4, r3
 8023470:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8023474:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8023478:	68ab      	ldr	r3, [r5, #8]
 802347a:	6869      	ldr	r1, [r5, #4]
 802347c:	eb0a 0709 	add.w	r7, sl, r9
 8023480:	42bb      	cmp	r3, r7
 8023482:	b085      	sub	sp, #20
 8023484:	bfb8      	it	lt
 8023486:	3101      	addlt	r1, #1
 8023488:	f7ff fe8a 	bl	80231a0 <_Balloc>
 802348c:	b930      	cbnz	r0, 802349c <__multiply+0x44>
 802348e:	4602      	mov	r2, r0
 8023490:	4b42      	ldr	r3, [pc, #264]	; (802359c <__multiply+0x144>)
 8023492:	4843      	ldr	r0, [pc, #268]	; (80235a0 <__multiply+0x148>)
 8023494:	f240 115d 	movw	r1, #349	; 0x15d
 8023498:	f000 fb72 	bl	8023b80 <__assert_func>
 802349c:	f100 0614 	add.w	r6, r0, #20
 80234a0:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 80234a4:	4633      	mov	r3, r6
 80234a6:	2200      	movs	r2, #0
 80234a8:	4543      	cmp	r3, r8
 80234aa:	d31e      	bcc.n	80234ea <__multiply+0x92>
 80234ac:	f105 0c14 	add.w	ip, r5, #20
 80234b0:	f104 0314 	add.w	r3, r4, #20
 80234b4:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 80234b8:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 80234bc:	9202      	str	r2, [sp, #8]
 80234be:	ebac 0205 	sub.w	r2, ip, r5
 80234c2:	3a15      	subs	r2, #21
 80234c4:	f022 0203 	bic.w	r2, r2, #3
 80234c8:	3204      	adds	r2, #4
 80234ca:	f105 0115 	add.w	r1, r5, #21
 80234ce:	458c      	cmp	ip, r1
 80234d0:	bf38      	it	cc
 80234d2:	2204      	movcc	r2, #4
 80234d4:	9201      	str	r2, [sp, #4]
 80234d6:	9a02      	ldr	r2, [sp, #8]
 80234d8:	9303      	str	r3, [sp, #12]
 80234da:	429a      	cmp	r2, r3
 80234dc:	d808      	bhi.n	80234f0 <__multiply+0x98>
 80234de:	2f00      	cmp	r7, #0
 80234e0:	dc55      	bgt.n	802358e <__multiply+0x136>
 80234e2:	6107      	str	r7, [r0, #16]
 80234e4:	b005      	add	sp, #20
 80234e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80234ea:	f843 2b04 	str.w	r2, [r3], #4
 80234ee:	e7db      	b.n	80234a8 <__multiply+0x50>
 80234f0:	f8b3 a000 	ldrh.w	sl, [r3]
 80234f4:	f1ba 0f00 	cmp.w	sl, #0
 80234f8:	d020      	beq.n	802353c <__multiply+0xe4>
 80234fa:	f105 0e14 	add.w	lr, r5, #20
 80234fe:	46b1      	mov	r9, r6
 8023500:	2200      	movs	r2, #0
 8023502:	f85e 4b04 	ldr.w	r4, [lr], #4
 8023506:	f8d9 b000 	ldr.w	fp, [r9]
 802350a:	b2a1      	uxth	r1, r4
 802350c:	fa1f fb8b 	uxth.w	fp, fp
 8023510:	fb0a b101 	mla	r1, sl, r1, fp
 8023514:	4411      	add	r1, r2
 8023516:	f8d9 2000 	ldr.w	r2, [r9]
 802351a:	0c24      	lsrs	r4, r4, #16
 802351c:	0c12      	lsrs	r2, r2, #16
 802351e:	fb0a 2404 	mla	r4, sl, r4, r2
 8023522:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8023526:	b289      	uxth	r1, r1
 8023528:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 802352c:	45f4      	cmp	ip, lr
 802352e:	f849 1b04 	str.w	r1, [r9], #4
 8023532:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8023536:	d8e4      	bhi.n	8023502 <__multiply+0xaa>
 8023538:	9901      	ldr	r1, [sp, #4]
 802353a:	5072      	str	r2, [r6, r1]
 802353c:	9a03      	ldr	r2, [sp, #12]
 802353e:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8023542:	3304      	adds	r3, #4
 8023544:	f1b9 0f00 	cmp.w	r9, #0
 8023548:	d01f      	beq.n	802358a <__multiply+0x132>
 802354a:	6834      	ldr	r4, [r6, #0]
 802354c:	f105 0114 	add.w	r1, r5, #20
 8023550:	46b6      	mov	lr, r6
 8023552:	f04f 0a00 	mov.w	sl, #0
 8023556:	880a      	ldrh	r2, [r1, #0]
 8023558:	f8be b002 	ldrh.w	fp, [lr, #2]
 802355c:	fb09 b202 	mla	r2, r9, r2, fp
 8023560:	4492      	add	sl, r2
 8023562:	b2a4      	uxth	r4, r4
 8023564:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8023568:	f84e 4b04 	str.w	r4, [lr], #4
 802356c:	f851 4b04 	ldr.w	r4, [r1], #4
 8023570:	f8be 2000 	ldrh.w	r2, [lr]
 8023574:	0c24      	lsrs	r4, r4, #16
 8023576:	fb09 2404 	mla	r4, r9, r4, r2
 802357a:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 802357e:	458c      	cmp	ip, r1
 8023580:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8023584:	d8e7      	bhi.n	8023556 <__multiply+0xfe>
 8023586:	9a01      	ldr	r2, [sp, #4]
 8023588:	50b4      	str	r4, [r6, r2]
 802358a:	3604      	adds	r6, #4
 802358c:	e7a3      	b.n	80234d6 <__multiply+0x7e>
 802358e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8023592:	2b00      	cmp	r3, #0
 8023594:	d1a5      	bne.n	80234e2 <__multiply+0x8a>
 8023596:	3f01      	subs	r7, #1
 8023598:	e7a1      	b.n	80234de <__multiply+0x86>
 802359a:	bf00      	nop
 802359c:	080254de 	.word	0x080254de
 80235a0:	08025583 	.word	0x08025583

080235a4 <__pow5mult>:
 80235a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80235a8:	4615      	mov	r5, r2
 80235aa:	f012 0203 	ands.w	r2, r2, #3
 80235ae:	4606      	mov	r6, r0
 80235b0:	460f      	mov	r7, r1
 80235b2:	d007      	beq.n	80235c4 <__pow5mult+0x20>
 80235b4:	4c25      	ldr	r4, [pc, #148]	; (802364c <__pow5mult+0xa8>)
 80235b6:	3a01      	subs	r2, #1
 80235b8:	2300      	movs	r3, #0
 80235ba:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80235be:	f7ff fe51 	bl	8023264 <__multadd>
 80235c2:	4607      	mov	r7, r0
 80235c4:	10ad      	asrs	r5, r5, #2
 80235c6:	d03d      	beq.n	8023644 <__pow5mult+0xa0>
 80235c8:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80235ca:	b97c      	cbnz	r4, 80235ec <__pow5mult+0x48>
 80235cc:	2010      	movs	r0, #16
 80235ce:	f7fe f957 	bl	8021880 <malloc>
 80235d2:	4602      	mov	r2, r0
 80235d4:	6270      	str	r0, [r6, #36]	; 0x24
 80235d6:	b928      	cbnz	r0, 80235e4 <__pow5mult+0x40>
 80235d8:	4b1d      	ldr	r3, [pc, #116]	; (8023650 <__pow5mult+0xac>)
 80235da:	481e      	ldr	r0, [pc, #120]	; (8023654 <__pow5mult+0xb0>)
 80235dc:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80235e0:	f000 face 	bl	8023b80 <__assert_func>
 80235e4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80235e8:	6004      	str	r4, [r0, #0]
 80235ea:	60c4      	str	r4, [r0, #12]
 80235ec:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80235f0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80235f4:	b94c      	cbnz	r4, 802360a <__pow5mult+0x66>
 80235f6:	f240 2171 	movw	r1, #625	; 0x271
 80235fa:	4630      	mov	r0, r6
 80235fc:	f7ff ff16 	bl	802342c <__i2b>
 8023600:	2300      	movs	r3, #0
 8023602:	f8c8 0008 	str.w	r0, [r8, #8]
 8023606:	4604      	mov	r4, r0
 8023608:	6003      	str	r3, [r0, #0]
 802360a:	f04f 0900 	mov.w	r9, #0
 802360e:	07eb      	lsls	r3, r5, #31
 8023610:	d50a      	bpl.n	8023628 <__pow5mult+0x84>
 8023612:	4639      	mov	r1, r7
 8023614:	4622      	mov	r2, r4
 8023616:	4630      	mov	r0, r6
 8023618:	f7ff ff1e 	bl	8023458 <__multiply>
 802361c:	4639      	mov	r1, r7
 802361e:	4680      	mov	r8, r0
 8023620:	4630      	mov	r0, r6
 8023622:	f7ff fdfd 	bl	8023220 <_Bfree>
 8023626:	4647      	mov	r7, r8
 8023628:	106d      	asrs	r5, r5, #1
 802362a:	d00b      	beq.n	8023644 <__pow5mult+0xa0>
 802362c:	6820      	ldr	r0, [r4, #0]
 802362e:	b938      	cbnz	r0, 8023640 <__pow5mult+0x9c>
 8023630:	4622      	mov	r2, r4
 8023632:	4621      	mov	r1, r4
 8023634:	4630      	mov	r0, r6
 8023636:	f7ff ff0f 	bl	8023458 <__multiply>
 802363a:	6020      	str	r0, [r4, #0]
 802363c:	f8c0 9000 	str.w	r9, [r0]
 8023640:	4604      	mov	r4, r0
 8023642:	e7e4      	b.n	802360e <__pow5mult+0x6a>
 8023644:	4638      	mov	r0, r7
 8023646:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802364a:	bf00      	nop
 802364c:	080256d8 	.word	0x080256d8
 8023650:	0802556c 	.word	0x0802556c
 8023654:	08025583 	.word	0x08025583

08023658 <__lshift>:
 8023658:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802365c:	460c      	mov	r4, r1
 802365e:	6849      	ldr	r1, [r1, #4]
 8023660:	6923      	ldr	r3, [r4, #16]
 8023662:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8023666:	68a3      	ldr	r3, [r4, #8]
 8023668:	4607      	mov	r7, r0
 802366a:	4691      	mov	r9, r2
 802366c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8023670:	f108 0601 	add.w	r6, r8, #1
 8023674:	42b3      	cmp	r3, r6
 8023676:	db0b      	blt.n	8023690 <__lshift+0x38>
 8023678:	4638      	mov	r0, r7
 802367a:	f7ff fd91 	bl	80231a0 <_Balloc>
 802367e:	4605      	mov	r5, r0
 8023680:	b948      	cbnz	r0, 8023696 <__lshift+0x3e>
 8023682:	4602      	mov	r2, r0
 8023684:	4b28      	ldr	r3, [pc, #160]	; (8023728 <__lshift+0xd0>)
 8023686:	4829      	ldr	r0, [pc, #164]	; (802372c <__lshift+0xd4>)
 8023688:	f240 11d9 	movw	r1, #473	; 0x1d9
 802368c:	f000 fa78 	bl	8023b80 <__assert_func>
 8023690:	3101      	adds	r1, #1
 8023692:	005b      	lsls	r3, r3, #1
 8023694:	e7ee      	b.n	8023674 <__lshift+0x1c>
 8023696:	2300      	movs	r3, #0
 8023698:	f100 0114 	add.w	r1, r0, #20
 802369c:	f100 0210 	add.w	r2, r0, #16
 80236a0:	4618      	mov	r0, r3
 80236a2:	4553      	cmp	r3, sl
 80236a4:	db33      	blt.n	802370e <__lshift+0xb6>
 80236a6:	6920      	ldr	r0, [r4, #16]
 80236a8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80236ac:	f104 0314 	add.w	r3, r4, #20
 80236b0:	f019 091f 	ands.w	r9, r9, #31
 80236b4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80236b8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80236bc:	d02b      	beq.n	8023716 <__lshift+0xbe>
 80236be:	f1c9 0e20 	rsb	lr, r9, #32
 80236c2:	468a      	mov	sl, r1
 80236c4:	2200      	movs	r2, #0
 80236c6:	6818      	ldr	r0, [r3, #0]
 80236c8:	fa00 f009 	lsl.w	r0, r0, r9
 80236cc:	4302      	orrs	r2, r0
 80236ce:	f84a 2b04 	str.w	r2, [sl], #4
 80236d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80236d6:	459c      	cmp	ip, r3
 80236d8:	fa22 f20e 	lsr.w	r2, r2, lr
 80236dc:	d8f3      	bhi.n	80236c6 <__lshift+0x6e>
 80236de:	ebac 0304 	sub.w	r3, ip, r4
 80236e2:	3b15      	subs	r3, #21
 80236e4:	f023 0303 	bic.w	r3, r3, #3
 80236e8:	3304      	adds	r3, #4
 80236ea:	f104 0015 	add.w	r0, r4, #21
 80236ee:	4584      	cmp	ip, r0
 80236f0:	bf38      	it	cc
 80236f2:	2304      	movcc	r3, #4
 80236f4:	50ca      	str	r2, [r1, r3]
 80236f6:	b10a      	cbz	r2, 80236fc <__lshift+0xa4>
 80236f8:	f108 0602 	add.w	r6, r8, #2
 80236fc:	3e01      	subs	r6, #1
 80236fe:	4638      	mov	r0, r7
 8023700:	612e      	str	r6, [r5, #16]
 8023702:	4621      	mov	r1, r4
 8023704:	f7ff fd8c 	bl	8023220 <_Bfree>
 8023708:	4628      	mov	r0, r5
 802370a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802370e:	f842 0f04 	str.w	r0, [r2, #4]!
 8023712:	3301      	adds	r3, #1
 8023714:	e7c5      	b.n	80236a2 <__lshift+0x4a>
 8023716:	3904      	subs	r1, #4
 8023718:	f853 2b04 	ldr.w	r2, [r3], #4
 802371c:	f841 2f04 	str.w	r2, [r1, #4]!
 8023720:	459c      	cmp	ip, r3
 8023722:	d8f9      	bhi.n	8023718 <__lshift+0xc0>
 8023724:	e7ea      	b.n	80236fc <__lshift+0xa4>
 8023726:	bf00      	nop
 8023728:	080254de 	.word	0x080254de
 802372c:	08025583 	.word	0x08025583

08023730 <__mcmp>:
 8023730:	b530      	push	{r4, r5, lr}
 8023732:	6902      	ldr	r2, [r0, #16]
 8023734:	690c      	ldr	r4, [r1, #16]
 8023736:	1b12      	subs	r2, r2, r4
 8023738:	d10e      	bne.n	8023758 <__mcmp+0x28>
 802373a:	f100 0314 	add.w	r3, r0, #20
 802373e:	3114      	adds	r1, #20
 8023740:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8023744:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8023748:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 802374c:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8023750:	42a5      	cmp	r5, r4
 8023752:	d003      	beq.n	802375c <__mcmp+0x2c>
 8023754:	d305      	bcc.n	8023762 <__mcmp+0x32>
 8023756:	2201      	movs	r2, #1
 8023758:	4610      	mov	r0, r2
 802375a:	bd30      	pop	{r4, r5, pc}
 802375c:	4283      	cmp	r3, r0
 802375e:	d3f3      	bcc.n	8023748 <__mcmp+0x18>
 8023760:	e7fa      	b.n	8023758 <__mcmp+0x28>
 8023762:	f04f 32ff 	mov.w	r2, #4294967295
 8023766:	e7f7      	b.n	8023758 <__mcmp+0x28>

08023768 <__mdiff>:
 8023768:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802376c:	460c      	mov	r4, r1
 802376e:	4606      	mov	r6, r0
 8023770:	4611      	mov	r1, r2
 8023772:	4620      	mov	r0, r4
 8023774:	4617      	mov	r7, r2
 8023776:	f7ff ffdb 	bl	8023730 <__mcmp>
 802377a:	1e05      	subs	r5, r0, #0
 802377c:	d110      	bne.n	80237a0 <__mdiff+0x38>
 802377e:	4629      	mov	r1, r5
 8023780:	4630      	mov	r0, r6
 8023782:	f7ff fd0d 	bl	80231a0 <_Balloc>
 8023786:	b930      	cbnz	r0, 8023796 <__mdiff+0x2e>
 8023788:	4b39      	ldr	r3, [pc, #228]	; (8023870 <__mdiff+0x108>)
 802378a:	4602      	mov	r2, r0
 802378c:	f240 2132 	movw	r1, #562	; 0x232
 8023790:	4838      	ldr	r0, [pc, #224]	; (8023874 <__mdiff+0x10c>)
 8023792:	f000 f9f5 	bl	8023b80 <__assert_func>
 8023796:	2301      	movs	r3, #1
 8023798:	e9c0 3504 	strd	r3, r5, [r0, #16]
 802379c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80237a0:	bfa4      	itt	ge
 80237a2:	463b      	movge	r3, r7
 80237a4:	4627      	movge	r7, r4
 80237a6:	4630      	mov	r0, r6
 80237a8:	6879      	ldr	r1, [r7, #4]
 80237aa:	bfa6      	itte	ge
 80237ac:	461c      	movge	r4, r3
 80237ae:	2500      	movge	r5, #0
 80237b0:	2501      	movlt	r5, #1
 80237b2:	f7ff fcf5 	bl	80231a0 <_Balloc>
 80237b6:	b920      	cbnz	r0, 80237c2 <__mdiff+0x5a>
 80237b8:	4b2d      	ldr	r3, [pc, #180]	; (8023870 <__mdiff+0x108>)
 80237ba:	4602      	mov	r2, r0
 80237bc:	f44f 7110 	mov.w	r1, #576	; 0x240
 80237c0:	e7e6      	b.n	8023790 <__mdiff+0x28>
 80237c2:	693e      	ldr	r6, [r7, #16]
 80237c4:	60c5      	str	r5, [r0, #12]
 80237c6:	6925      	ldr	r5, [r4, #16]
 80237c8:	f107 0114 	add.w	r1, r7, #20
 80237cc:	f104 0914 	add.w	r9, r4, #20
 80237d0:	f100 0e14 	add.w	lr, r0, #20
 80237d4:	f107 0210 	add.w	r2, r7, #16
 80237d8:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 80237dc:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 80237e0:	46f2      	mov	sl, lr
 80237e2:	2700      	movs	r7, #0
 80237e4:	f859 3b04 	ldr.w	r3, [r9], #4
 80237e8:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80237ec:	fa1f f883 	uxth.w	r8, r3
 80237f0:	fa17 f78b 	uxtah	r7, r7, fp
 80237f4:	0c1b      	lsrs	r3, r3, #16
 80237f6:	eba7 0808 	sub.w	r8, r7, r8
 80237fa:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80237fe:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8023802:	fa1f f888 	uxth.w	r8, r8
 8023806:	141f      	asrs	r7, r3, #16
 8023808:	454d      	cmp	r5, r9
 802380a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 802380e:	f84a 3b04 	str.w	r3, [sl], #4
 8023812:	d8e7      	bhi.n	80237e4 <__mdiff+0x7c>
 8023814:	1b2b      	subs	r3, r5, r4
 8023816:	3b15      	subs	r3, #21
 8023818:	f023 0303 	bic.w	r3, r3, #3
 802381c:	3304      	adds	r3, #4
 802381e:	3415      	adds	r4, #21
 8023820:	42a5      	cmp	r5, r4
 8023822:	bf38      	it	cc
 8023824:	2304      	movcc	r3, #4
 8023826:	4419      	add	r1, r3
 8023828:	4473      	add	r3, lr
 802382a:	469e      	mov	lr, r3
 802382c:	460d      	mov	r5, r1
 802382e:	4565      	cmp	r5, ip
 8023830:	d30e      	bcc.n	8023850 <__mdiff+0xe8>
 8023832:	f10c 0203 	add.w	r2, ip, #3
 8023836:	1a52      	subs	r2, r2, r1
 8023838:	f022 0203 	bic.w	r2, r2, #3
 802383c:	3903      	subs	r1, #3
 802383e:	458c      	cmp	ip, r1
 8023840:	bf38      	it	cc
 8023842:	2200      	movcc	r2, #0
 8023844:	441a      	add	r2, r3
 8023846:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 802384a:	b17b      	cbz	r3, 802386c <__mdiff+0x104>
 802384c:	6106      	str	r6, [r0, #16]
 802384e:	e7a5      	b.n	802379c <__mdiff+0x34>
 8023850:	f855 8b04 	ldr.w	r8, [r5], #4
 8023854:	fa17 f488 	uxtah	r4, r7, r8
 8023858:	1422      	asrs	r2, r4, #16
 802385a:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 802385e:	b2a4      	uxth	r4, r4
 8023860:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8023864:	f84e 4b04 	str.w	r4, [lr], #4
 8023868:	1417      	asrs	r7, r2, #16
 802386a:	e7e0      	b.n	802382e <__mdiff+0xc6>
 802386c:	3e01      	subs	r6, #1
 802386e:	e7ea      	b.n	8023846 <__mdiff+0xde>
 8023870:	080254de 	.word	0x080254de
 8023874:	08025583 	.word	0x08025583

08023878 <__ulp>:
 8023878:	b082      	sub	sp, #8
 802387a:	ed8d 0b00 	vstr	d0, [sp]
 802387e:	9b01      	ldr	r3, [sp, #4]
 8023880:	4912      	ldr	r1, [pc, #72]	; (80238cc <__ulp+0x54>)
 8023882:	4019      	ands	r1, r3
 8023884:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8023888:	2900      	cmp	r1, #0
 802388a:	dd05      	ble.n	8023898 <__ulp+0x20>
 802388c:	2200      	movs	r2, #0
 802388e:	460b      	mov	r3, r1
 8023890:	ec43 2b10 	vmov	d0, r2, r3
 8023894:	b002      	add	sp, #8
 8023896:	4770      	bx	lr
 8023898:	4249      	negs	r1, r1
 802389a:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 802389e:	ea4f 5021 	mov.w	r0, r1, asr #20
 80238a2:	f04f 0200 	mov.w	r2, #0
 80238a6:	f04f 0300 	mov.w	r3, #0
 80238aa:	da04      	bge.n	80238b6 <__ulp+0x3e>
 80238ac:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 80238b0:	fa41 f300 	asr.w	r3, r1, r0
 80238b4:	e7ec      	b.n	8023890 <__ulp+0x18>
 80238b6:	f1a0 0114 	sub.w	r1, r0, #20
 80238ba:	291e      	cmp	r1, #30
 80238bc:	bfda      	itte	le
 80238be:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 80238c2:	fa20 f101 	lsrle.w	r1, r0, r1
 80238c6:	2101      	movgt	r1, #1
 80238c8:	460a      	mov	r2, r1
 80238ca:	e7e1      	b.n	8023890 <__ulp+0x18>
 80238cc:	7ff00000 	.word	0x7ff00000

080238d0 <__b2d>:
 80238d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80238d2:	6905      	ldr	r5, [r0, #16]
 80238d4:	f100 0714 	add.w	r7, r0, #20
 80238d8:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 80238dc:	1f2e      	subs	r6, r5, #4
 80238de:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80238e2:	4620      	mov	r0, r4
 80238e4:	f7ff fd52 	bl	802338c <__hi0bits>
 80238e8:	f1c0 0320 	rsb	r3, r0, #32
 80238ec:	280a      	cmp	r0, #10
 80238ee:	f8df c07c 	ldr.w	ip, [pc, #124]	; 802396c <__b2d+0x9c>
 80238f2:	600b      	str	r3, [r1, #0]
 80238f4:	dc14      	bgt.n	8023920 <__b2d+0x50>
 80238f6:	f1c0 0e0b 	rsb	lr, r0, #11
 80238fa:	fa24 f10e 	lsr.w	r1, r4, lr
 80238fe:	42b7      	cmp	r7, r6
 8023900:	ea41 030c 	orr.w	r3, r1, ip
 8023904:	bf34      	ite	cc
 8023906:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 802390a:	2100      	movcs	r1, #0
 802390c:	3015      	adds	r0, #21
 802390e:	fa04 f000 	lsl.w	r0, r4, r0
 8023912:	fa21 f10e 	lsr.w	r1, r1, lr
 8023916:	ea40 0201 	orr.w	r2, r0, r1
 802391a:	ec43 2b10 	vmov	d0, r2, r3
 802391e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8023920:	42b7      	cmp	r7, r6
 8023922:	bf3a      	itte	cc
 8023924:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8023928:	f1a5 0608 	subcc.w	r6, r5, #8
 802392c:	2100      	movcs	r1, #0
 802392e:	380b      	subs	r0, #11
 8023930:	d017      	beq.n	8023962 <__b2d+0x92>
 8023932:	f1c0 0c20 	rsb	ip, r0, #32
 8023936:	fa04 f500 	lsl.w	r5, r4, r0
 802393a:	42be      	cmp	r6, r7
 802393c:	fa21 f40c 	lsr.w	r4, r1, ip
 8023940:	ea45 0504 	orr.w	r5, r5, r4
 8023944:	bf8c      	ite	hi
 8023946:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 802394a:	2400      	movls	r4, #0
 802394c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8023950:	fa01 f000 	lsl.w	r0, r1, r0
 8023954:	fa24 f40c 	lsr.w	r4, r4, ip
 8023958:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 802395c:	ea40 0204 	orr.w	r2, r0, r4
 8023960:	e7db      	b.n	802391a <__b2d+0x4a>
 8023962:	ea44 030c 	orr.w	r3, r4, ip
 8023966:	460a      	mov	r2, r1
 8023968:	e7d7      	b.n	802391a <__b2d+0x4a>
 802396a:	bf00      	nop
 802396c:	3ff00000 	.word	0x3ff00000

08023970 <__d2b>:
 8023970:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8023974:	4689      	mov	r9, r1
 8023976:	2101      	movs	r1, #1
 8023978:	ec57 6b10 	vmov	r6, r7, d0
 802397c:	4690      	mov	r8, r2
 802397e:	f7ff fc0f 	bl	80231a0 <_Balloc>
 8023982:	4604      	mov	r4, r0
 8023984:	b930      	cbnz	r0, 8023994 <__d2b+0x24>
 8023986:	4602      	mov	r2, r0
 8023988:	4b25      	ldr	r3, [pc, #148]	; (8023a20 <__d2b+0xb0>)
 802398a:	4826      	ldr	r0, [pc, #152]	; (8023a24 <__d2b+0xb4>)
 802398c:	f240 310a 	movw	r1, #778	; 0x30a
 8023990:	f000 f8f6 	bl	8023b80 <__assert_func>
 8023994:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8023998:	f3c7 0313 	ubfx	r3, r7, #0, #20
 802399c:	bb35      	cbnz	r5, 80239ec <__d2b+0x7c>
 802399e:	2e00      	cmp	r6, #0
 80239a0:	9301      	str	r3, [sp, #4]
 80239a2:	d028      	beq.n	80239f6 <__d2b+0x86>
 80239a4:	4668      	mov	r0, sp
 80239a6:	9600      	str	r6, [sp, #0]
 80239a8:	f7ff fd10 	bl	80233cc <__lo0bits>
 80239ac:	9900      	ldr	r1, [sp, #0]
 80239ae:	b300      	cbz	r0, 80239f2 <__d2b+0x82>
 80239b0:	9a01      	ldr	r2, [sp, #4]
 80239b2:	f1c0 0320 	rsb	r3, r0, #32
 80239b6:	fa02 f303 	lsl.w	r3, r2, r3
 80239ba:	430b      	orrs	r3, r1
 80239bc:	40c2      	lsrs	r2, r0
 80239be:	6163      	str	r3, [r4, #20]
 80239c0:	9201      	str	r2, [sp, #4]
 80239c2:	9b01      	ldr	r3, [sp, #4]
 80239c4:	61a3      	str	r3, [r4, #24]
 80239c6:	2b00      	cmp	r3, #0
 80239c8:	bf14      	ite	ne
 80239ca:	2202      	movne	r2, #2
 80239cc:	2201      	moveq	r2, #1
 80239ce:	6122      	str	r2, [r4, #16]
 80239d0:	b1d5      	cbz	r5, 8023a08 <__d2b+0x98>
 80239d2:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80239d6:	4405      	add	r5, r0
 80239d8:	f8c9 5000 	str.w	r5, [r9]
 80239dc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80239e0:	f8c8 0000 	str.w	r0, [r8]
 80239e4:	4620      	mov	r0, r4
 80239e6:	b003      	add	sp, #12
 80239e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80239ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80239f0:	e7d5      	b.n	802399e <__d2b+0x2e>
 80239f2:	6161      	str	r1, [r4, #20]
 80239f4:	e7e5      	b.n	80239c2 <__d2b+0x52>
 80239f6:	a801      	add	r0, sp, #4
 80239f8:	f7ff fce8 	bl	80233cc <__lo0bits>
 80239fc:	9b01      	ldr	r3, [sp, #4]
 80239fe:	6163      	str	r3, [r4, #20]
 8023a00:	2201      	movs	r2, #1
 8023a02:	6122      	str	r2, [r4, #16]
 8023a04:	3020      	adds	r0, #32
 8023a06:	e7e3      	b.n	80239d0 <__d2b+0x60>
 8023a08:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8023a0c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8023a10:	f8c9 0000 	str.w	r0, [r9]
 8023a14:	6918      	ldr	r0, [r3, #16]
 8023a16:	f7ff fcb9 	bl	802338c <__hi0bits>
 8023a1a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8023a1e:	e7df      	b.n	80239e0 <__d2b+0x70>
 8023a20:	080254de 	.word	0x080254de
 8023a24:	08025583 	.word	0x08025583

08023a28 <__ratio>:
 8023a28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023a2c:	4688      	mov	r8, r1
 8023a2e:	4669      	mov	r1, sp
 8023a30:	4681      	mov	r9, r0
 8023a32:	f7ff ff4d 	bl	80238d0 <__b2d>
 8023a36:	a901      	add	r1, sp, #4
 8023a38:	4640      	mov	r0, r8
 8023a3a:	ec55 4b10 	vmov	r4, r5, d0
 8023a3e:	f7ff ff47 	bl	80238d0 <__b2d>
 8023a42:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8023a46:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8023a4a:	eba3 0c02 	sub.w	ip, r3, r2
 8023a4e:	e9dd 3200 	ldrd	r3, r2, [sp]
 8023a52:	1a9b      	subs	r3, r3, r2
 8023a54:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8023a58:	ec51 0b10 	vmov	r0, r1, d0
 8023a5c:	2b00      	cmp	r3, #0
 8023a5e:	bfd6      	itet	le
 8023a60:	460a      	movle	r2, r1
 8023a62:	462a      	movgt	r2, r5
 8023a64:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8023a68:	468b      	mov	fp, r1
 8023a6a:	462f      	mov	r7, r5
 8023a6c:	bfd4      	ite	le
 8023a6e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8023a72:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8023a76:	4620      	mov	r0, r4
 8023a78:	ee10 2a10 	vmov	r2, s0
 8023a7c:	465b      	mov	r3, fp
 8023a7e:	4639      	mov	r1, r7
 8023a80:	f7dc ff04 	bl	800088c <__aeabi_ddiv>
 8023a84:	ec41 0b10 	vmov	d0, r0, r1
 8023a88:	b003      	add	sp, #12
 8023a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023a8e <__copybits>:
 8023a8e:	3901      	subs	r1, #1
 8023a90:	b570      	push	{r4, r5, r6, lr}
 8023a92:	1149      	asrs	r1, r1, #5
 8023a94:	6914      	ldr	r4, [r2, #16]
 8023a96:	3101      	adds	r1, #1
 8023a98:	f102 0314 	add.w	r3, r2, #20
 8023a9c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8023aa0:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8023aa4:	1f05      	subs	r5, r0, #4
 8023aa6:	42a3      	cmp	r3, r4
 8023aa8:	d30c      	bcc.n	8023ac4 <__copybits+0x36>
 8023aaa:	1aa3      	subs	r3, r4, r2
 8023aac:	3b11      	subs	r3, #17
 8023aae:	f023 0303 	bic.w	r3, r3, #3
 8023ab2:	3211      	adds	r2, #17
 8023ab4:	42a2      	cmp	r2, r4
 8023ab6:	bf88      	it	hi
 8023ab8:	2300      	movhi	r3, #0
 8023aba:	4418      	add	r0, r3
 8023abc:	2300      	movs	r3, #0
 8023abe:	4288      	cmp	r0, r1
 8023ac0:	d305      	bcc.n	8023ace <__copybits+0x40>
 8023ac2:	bd70      	pop	{r4, r5, r6, pc}
 8023ac4:	f853 6b04 	ldr.w	r6, [r3], #4
 8023ac8:	f845 6f04 	str.w	r6, [r5, #4]!
 8023acc:	e7eb      	b.n	8023aa6 <__copybits+0x18>
 8023ace:	f840 3b04 	str.w	r3, [r0], #4
 8023ad2:	e7f4      	b.n	8023abe <__copybits+0x30>

08023ad4 <__any_on>:
 8023ad4:	f100 0214 	add.w	r2, r0, #20
 8023ad8:	6900      	ldr	r0, [r0, #16]
 8023ada:	114b      	asrs	r3, r1, #5
 8023adc:	4298      	cmp	r0, r3
 8023ade:	b510      	push	{r4, lr}
 8023ae0:	db11      	blt.n	8023b06 <__any_on+0x32>
 8023ae2:	dd0a      	ble.n	8023afa <__any_on+0x26>
 8023ae4:	f011 011f 	ands.w	r1, r1, #31
 8023ae8:	d007      	beq.n	8023afa <__any_on+0x26>
 8023aea:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8023aee:	fa24 f001 	lsr.w	r0, r4, r1
 8023af2:	fa00 f101 	lsl.w	r1, r0, r1
 8023af6:	428c      	cmp	r4, r1
 8023af8:	d10b      	bne.n	8023b12 <__any_on+0x3e>
 8023afa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8023afe:	4293      	cmp	r3, r2
 8023b00:	d803      	bhi.n	8023b0a <__any_on+0x36>
 8023b02:	2000      	movs	r0, #0
 8023b04:	bd10      	pop	{r4, pc}
 8023b06:	4603      	mov	r3, r0
 8023b08:	e7f7      	b.n	8023afa <__any_on+0x26>
 8023b0a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8023b0e:	2900      	cmp	r1, #0
 8023b10:	d0f5      	beq.n	8023afe <__any_on+0x2a>
 8023b12:	2001      	movs	r0, #1
 8023b14:	e7f6      	b.n	8023b04 <__any_on+0x30>

08023b16 <_calloc_r>:
 8023b16:	b513      	push	{r0, r1, r4, lr}
 8023b18:	434a      	muls	r2, r1
 8023b1a:	4611      	mov	r1, r2
 8023b1c:	9201      	str	r2, [sp, #4]
 8023b1e:	f7fd ff4d 	bl	80219bc <_malloc_r>
 8023b22:	4604      	mov	r4, r0
 8023b24:	b118      	cbz	r0, 8023b2e <_calloc_r+0x18>
 8023b26:	9a01      	ldr	r2, [sp, #4]
 8023b28:	2100      	movs	r1, #0
 8023b2a:	f7fd feef 	bl	802190c <memset>
 8023b2e:	4620      	mov	r0, r4
 8023b30:	b002      	add	sp, #8
 8023b32:	bd10      	pop	{r4, pc}

08023b34 <nanf>:
 8023b34:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8023b3c <nanf+0x8>
 8023b38:	4770      	bx	lr
 8023b3a:	bf00      	nop
 8023b3c:	7fc00000 	.word	0x7fc00000

08023b40 <strncmp>:
 8023b40:	b510      	push	{r4, lr}
 8023b42:	b16a      	cbz	r2, 8023b60 <strncmp+0x20>
 8023b44:	3901      	subs	r1, #1
 8023b46:	1884      	adds	r4, r0, r2
 8023b48:	f810 3b01 	ldrb.w	r3, [r0], #1
 8023b4c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8023b50:	4293      	cmp	r3, r2
 8023b52:	d103      	bne.n	8023b5c <strncmp+0x1c>
 8023b54:	42a0      	cmp	r0, r4
 8023b56:	d001      	beq.n	8023b5c <strncmp+0x1c>
 8023b58:	2b00      	cmp	r3, #0
 8023b5a:	d1f5      	bne.n	8023b48 <strncmp+0x8>
 8023b5c:	1a98      	subs	r0, r3, r2
 8023b5e:	bd10      	pop	{r4, pc}
 8023b60:	4610      	mov	r0, r2
 8023b62:	e7fc      	b.n	8023b5e <strncmp+0x1e>

08023b64 <__ascii_wctomb>:
 8023b64:	b149      	cbz	r1, 8023b7a <__ascii_wctomb+0x16>
 8023b66:	2aff      	cmp	r2, #255	; 0xff
 8023b68:	bf85      	ittet	hi
 8023b6a:	238a      	movhi	r3, #138	; 0x8a
 8023b6c:	6003      	strhi	r3, [r0, #0]
 8023b6e:	700a      	strbls	r2, [r1, #0]
 8023b70:	f04f 30ff 	movhi.w	r0, #4294967295
 8023b74:	bf98      	it	ls
 8023b76:	2001      	movls	r0, #1
 8023b78:	4770      	bx	lr
 8023b7a:	4608      	mov	r0, r1
 8023b7c:	4770      	bx	lr
	...

08023b80 <__assert_func>:
 8023b80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8023b82:	4614      	mov	r4, r2
 8023b84:	461a      	mov	r2, r3
 8023b86:	4b09      	ldr	r3, [pc, #36]	; (8023bac <__assert_func+0x2c>)
 8023b88:	681b      	ldr	r3, [r3, #0]
 8023b8a:	4605      	mov	r5, r0
 8023b8c:	68d8      	ldr	r0, [r3, #12]
 8023b8e:	b14c      	cbz	r4, 8023ba4 <__assert_func+0x24>
 8023b90:	4b07      	ldr	r3, [pc, #28]	; (8023bb0 <__assert_func+0x30>)
 8023b92:	9100      	str	r1, [sp, #0]
 8023b94:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8023b98:	4906      	ldr	r1, [pc, #24]	; (8023bb4 <__assert_func+0x34>)
 8023b9a:	462b      	mov	r3, r5
 8023b9c:	f000 f80e 	bl	8023bbc <fiprintf>
 8023ba0:	f7fd fe04 	bl	80217ac <abort>
 8023ba4:	4b04      	ldr	r3, [pc, #16]	; (8023bb8 <__assert_func+0x38>)
 8023ba6:	461c      	mov	r4, r3
 8023ba8:	e7f3      	b.n	8023b92 <__assert_func+0x12>
 8023baa:	bf00      	nop
 8023bac:	2000000c 	.word	0x2000000c
 8023bb0:	080256e4 	.word	0x080256e4
 8023bb4:	080256f1 	.word	0x080256f1
 8023bb8:	0802571f 	.word	0x0802571f

08023bbc <fiprintf>:
 8023bbc:	b40e      	push	{r1, r2, r3}
 8023bbe:	b503      	push	{r0, r1, lr}
 8023bc0:	4601      	mov	r1, r0
 8023bc2:	ab03      	add	r3, sp, #12
 8023bc4:	4805      	ldr	r0, [pc, #20]	; (8023bdc <fiprintf+0x20>)
 8023bc6:	f853 2b04 	ldr.w	r2, [r3], #4
 8023bca:	6800      	ldr	r0, [r0, #0]
 8023bcc:	9301      	str	r3, [sp, #4]
 8023bce:	f000 f831 	bl	8023c34 <_vfiprintf_r>
 8023bd2:	b002      	add	sp, #8
 8023bd4:	f85d eb04 	ldr.w	lr, [sp], #4
 8023bd8:	b003      	add	sp, #12
 8023bda:	4770      	bx	lr
 8023bdc:	2000000c 	.word	0x2000000c

08023be0 <__sfputc_r>:
 8023be0:	6893      	ldr	r3, [r2, #8]
 8023be2:	3b01      	subs	r3, #1
 8023be4:	2b00      	cmp	r3, #0
 8023be6:	b410      	push	{r4}
 8023be8:	6093      	str	r3, [r2, #8]
 8023bea:	da08      	bge.n	8023bfe <__sfputc_r+0x1e>
 8023bec:	6994      	ldr	r4, [r2, #24]
 8023bee:	42a3      	cmp	r3, r4
 8023bf0:	db01      	blt.n	8023bf6 <__sfputc_r+0x16>
 8023bf2:	290a      	cmp	r1, #10
 8023bf4:	d103      	bne.n	8023bfe <__sfputc_r+0x1e>
 8023bf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023bfa:	f000 badf 	b.w	80241bc <__swbuf_r>
 8023bfe:	6813      	ldr	r3, [r2, #0]
 8023c00:	1c58      	adds	r0, r3, #1
 8023c02:	6010      	str	r0, [r2, #0]
 8023c04:	7019      	strb	r1, [r3, #0]
 8023c06:	4608      	mov	r0, r1
 8023c08:	f85d 4b04 	ldr.w	r4, [sp], #4
 8023c0c:	4770      	bx	lr

08023c0e <__sfputs_r>:
 8023c0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023c10:	4606      	mov	r6, r0
 8023c12:	460f      	mov	r7, r1
 8023c14:	4614      	mov	r4, r2
 8023c16:	18d5      	adds	r5, r2, r3
 8023c18:	42ac      	cmp	r4, r5
 8023c1a:	d101      	bne.n	8023c20 <__sfputs_r+0x12>
 8023c1c:	2000      	movs	r0, #0
 8023c1e:	e007      	b.n	8023c30 <__sfputs_r+0x22>
 8023c20:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023c24:	463a      	mov	r2, r7
 8023c26:	4630      	mov	r0, r6
 8023c28:	f7ff ffda 	bl	8023be0 <__sfputc_r>
 8023c2c:	1c43      	adds	r3, r0, #1
 8023c2e:	d1f3      	bne.n	8023c18 <__sfputs_r+0xa>
 8023c30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08023c34 <_vfiprintf_r>:
 8023c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c38:	460d      	mov	r5, r1
 8023c3a:	b09d      	sub	sp, #116	; 0x74
 8023c3c:	4614      	mov	r4, r2
 8023c3e:	4698      	mov	r8, r3
 8023c40:	4606      	mov	r6, r0
 8023c42:	b118      	cbz	r0, 8023c4c <_vfiprintf_r+0x18>
 8023c44:	6983      	ldr	r3, [r0, #24]
 8023c46:	b90b      	cbnz	r3, 8023c4c <_vfiprintf_r+0x18>
 8023c48:	f000 fc92 	bl	8024570 <__sinit>
 8023c4c:	4b89      	ldr	r3, [pc, #548]	; (8023e74 <_vfiprintf_r+0x240>)
 8023c4e:	429d      	cmp	r5, r3
 8023c50:	d11b      	bne.n	8023c8a <_vfiprintf_r+0x56>
 8023c52:	6875      	ldr	r5, [r6, #4]
 8023c54:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023c56:	07d9      	lsls	r1, r3, #31
 8023c58:	d405      	bmi.n	8023c66 <_vfiprintf_r+0x32>
 8023c5a:	89ab      	ldrh	r3, [r5, #12]
 8023c5c:	059a      	lsls	r2, r3, #22
 8023c5e:	d402      	bmi.n	8023c66 <_vfiprintf_r+0x32>
 8023c60:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023c62:	f7ff fa7c 	bl	802315e <__retarget_lock_acquire_recursive>
 8023c66:	89ab      	ldrh	r3, [r5, #12]
 8023c68:	071b      	lsls	r3, r3, #28
 8023c6a:	d501      	bpl.n	8023c70 <_vfiprintf_r+0x3c>
 8023c6c:	692b      	ldr	r3, [r5, #16]
 8023c6e:	b9eb      	cbnz	r3, 8023cac <_vfiprintf_r+0x78>
 8023c70:	4629      	mov	r1, r5
 8023c72:	4630      	mov	r0, r6
 8023c74:	f000 faf4 	bl	8024260 <__swsetup_r>
 8023c78:	b1c0      	cbz	r0, 8023cac <_vfiprintf_r+0x78>
 8023c7a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023c7c:	07dc      	lsls	r4, r3, #31
 8023c7e:	d50e      	bpl.n	8023c9e <_vfiprintf_r+0x6a>
 8023c80:	f04f 30ff 	mov.w	r0, #4294967295
 8023c84:	b01d      	add	sp, #116	; 0x74
 8023c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023c8a:	4b7b      	ldr	r3, [pc, #492]	; (8023e78 <_vfiprintf_r+0x244>)
 8023c8c:	429d      	cmp	r5, r3
 8023c8e:	d101      	bne.n	8023c94 <_vfiprintf_r+0x60>
 8023c90:	68b5      	ldr	r5, [r6, #8]
 8023c92:	e7df      	b.n	8023c54 <_vfiprintf_r+0x20>
 8023c94:	4b79      	ldr	r3, [pc, #484]	; (8023e7c <_vfiprintf_r+0x248>)
 8023c96:	429d      	cmp	r5, r3
 8023c98:	bf08      	it	eq
 8023c9a:	68f5      	ldreq	r5, [r6, #12]
 8023c9c:	e7da      	b.n	8023c54 <_vfiprintf_r+0x20>
 8023c9e:	89ab      	ldrh	r3, [r5, #12]
 8023ca0:	0598      	lsls	r0, r3, #22
 8023ca2:	d4ed      	bmi.n	8023c80 <_vfiprintf_r+0x4c>
 8023ca4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023ca6:	f7ff fa5c 	bl	8023162 <__retarget_lock_release_recursive>
 8023caa:	e7e9      	b.n	8023c80 <_vfiprintf_r+0x4c>
 8023cac:	2300      	movs	r3, #0
 8023cae:	9309      	str	r3, [sp, #36]	; 0x24
 8023cb0:	2320      	movs	r3, #32
 8023cb2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8023cb6:	f8cd 800c 	str.w	r8, [sp, #12]
 8023cba:	2330      	movs	r3, #48	; 0x30
 8023cbc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8023e80 <_vfiprintf_r+0x24c>
 8023cc0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8023cc4:	f04f 0901 	mov.w	r9, #1
 8023cc8:	4623      	mov	r3, r4
 8023cca:	469a      	mov	sl, r3
 8023ccc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8023cd0:	b10a      	cbz	r2, 8023cd6 <_vfiprintf_r+0xa2>
 8023cd2:	2a25      	cmp	r2, #37	; 0x25
 8023cd4:	d1f9      	bne.n	8023cca <_vfiprintf_r+0x96>
 8023cd6:	ebba 0b04 	subs.w	fp, sl, r4
 8023cda:	d00b      	beq.n	8023cf4 <_vfiprintf_r+0xc0>
 8023cdc:	465b      	mov	r3, fp
 8023cde:	4622      	mov	r2, r4
 8023ce0:	4629      	mov	r1, r5
 8023ce2:	4630      	mov	r0, r6
 8023ce4:	f7ff ff93 	bl	8023c0e <__sfputs_r>
 8023ce8:	3001      	adds	r0, #1
 8023cea:	f000 80aa 	beq.w	8023e42 <_vfiprintf_r+0x20e>
 8023cee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023cf0:	445a      	add	r2, fp
 8023cf2:	9209      	str	r2, [sp, #36]	; 0x24
 8023cf4:	f89a 3000 	ldrb.w	r3, [sl]
 8023cf8:	2b00      	cmp	r3, #0
 8023cfa:	f000 80a2 	beq.w	8023e42 <_vfiprintf_r+0x20e>
 8023cfe:	2300      	movs	r3, #0
 8023d00:	f04f 32ff 	mov.w	r2, #4294967295
 8023d04:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8023d08:	f10a 0a01 	add.w	sl, sl, #1
 8023d0c:	9304      	str	r3, [sp, #16]
 8023d0e:	9307      	str	r3, [sp, #28]
 8023d10:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8023d14:	931a      	str	r3, [sp, #104]	; 0x68
 8023d16:	4654      	mov	r4, sl
 8023d18:	2205      	movs	r2, #5
 8023d1a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023d1e:	4858      	ldr	r0, [pc, #352]	; (8023e80 <_vfiprintf_r+0x24c>)
 8023d20:	f7dc fa76 	bl	8000210 <memchr>
 8023d24:	9a04      	ldr	r2, [sp, #16]
 8023d26:	b9d8      	cbnz	r0, 8023d60 <_vfiprintf_r+0x12c>
 8023d28:	06d1      	lsls	r1, r2, #27
 8023d2a:	bf44      	itt	mi
 8023d2c:	2320      	movmi	r3, #32
 8023d2e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023d32:	0713      	lsls	r3, r2, #28
 8023d34:	bf44      	itt	mi
 8023d36:	232b      	movmi	r3, #43	; 0x2b
 8023d38:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023d3c:	f89a 3000 	ldrb.w	r3, [sl]
 8023d40:	2b2a      	cmp	r3, #42	; 0x2a
 8023d42:	d015      	beq.n	8023d70 <_vfiprintf_r+0x13c>
 8023d44:	9a07      	ldr	r2, [sp, #28]
 8023d46:	4654      	mov	r4, sl
 8023d48:	2000      	movs	r0, #0
 8023d4a:	f04f 0c0a 	mov.w	ip, #10
 8023d4e:	4621      	mov	r1, r4
 8023d50:	f811 3b01 	ldrb.w	r3, [r1], #1
 8023d54:	3b30      	subs	r3, #48	; 0x30
 8023d56:	2b09      	cmp	r3, #9
 8023d58:	d94e      	bls.n	8023df8 <_vfiprintf_r+0x1c4>
 8023d5a:	b1b0      	cbz	r0, 8023d8a <_vfiprintf_r+0x156>
 8023d5c:	9207      	str	r2, [sp, #28]
 8023d5e:	e014      	b.n	8023d8a <_vfiprintf_r+0x156>
 8023d60:	eba0 0308 	sub.w	r3, r0, r8
 8023d64:	fa09 f303 	lsl.w	r3, r9, r3
 8023d68:	4313      	orrs	r3, r2
 8023d6a:	9304      	str	r3, [sp, #16]
 8023d6c:	46a2      	mov	sl, r4
 8023d6e:	e7d2      	b.n	8023d16 <_vfiprintf_r+0xe2>
 8023d70:	9b03      	ldr	r3, [sp, #12]
 8023d72:	1d19      	adds	r1, r3, #4
 8023d74:	681b      	ldr	r3, [r3, #0]
 8023d76:	9103      	str	r1, [sp, #12]
 8023d78:	2b00      	cmp	r3, #0
 8023d7a:	bfbb      	ittet	lt
 8023d7c:	425b      	neglt	r3, r3
 8023d7e:	f042 0202 	orrlt.w	r2, r2, #2
 8023d82:	9307      	strge	r3, [sp, #28]
 8023d84:	9307      	strlt	r3, [sp, #28]
 8023d86:	bfb8      	it	lt
 8023d88:	9204      	strlt	r2, [sp, #16]
 8023d8a:	7823      	ldrb	r3, [r4, #0]
 8023d8c:	2b2e      	cmp	r3, #46	; 0x2e
 8023d8e:	d10c      	bne.n	8023daa <_vfiprintf_r+0x176>
 8023d90:	7863      	ldrb	r3, [r4, #1]
 8023d92:	2b2a      	cmp	r3, #42	; 0x2a
 8023d94:	d135      	bne.n	8023e02 <_vfiprintf_r+0x1ce>
 8023d96:	9b03      	ldr	r3, [sp, #12]
 8023d98:	1d1a      	adds	r2, r3, #4
 8023d9a:	681b      	ldr	r3, [r3, #0]
 8023d9c:	9203      	str	r2, [sp, #12]
 8023d9e:	2b00      	cmp	r3, #0
 8023da0:	bfb8      	it	lt
 8023da2:	f04f 33ff 	movlt.w	r3, #4294967295
 8023da6:	3402      	adds	r4, #2
 8023da8:	9305      	str	r3, [sp, #20]
 8023daa:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8023e90 <_vfiprintf_r+0x25c>
 8023dae:	7821      	ldrb	r1, [r4, #0]
 8023db0:	2203      	movs	r2, #3
 8023db2:	4650      	mov	r0, sl
 8023db4:	f7dc fa2c 	bl	8000210 <memchr>
 8023db8:	b140      	cbz	r0, 8023dcc <_vfiprintf_r+0x198>
 8023dba:	2340      	movs	r3, #64	; 0x40
 8023dbc:	eba0 000a 	sub.w	r0, r0, sl
 8023dc0:	fa03 f000 	lsl.w	r0, r3, r0
 8023dc4:	9b04      	ldr	r3, [sp, #16]
 8023dc6:	4303      	orrs	r3, r0
 8023dc8:	3401      	adds	r4, #1
 8023dca:	9304      	str	r3, [sp, #16]
 8023dcc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023dd0:	482c      	ldr	r0, [pc, #176]	; (8023e84 <_vfiprintf_r+0x250>)
 8023dd2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8023dd6:	2206      	movs	r2, #6
 8023dd8:	f7dc fa1a 	bl	8000210 <memchr>
 8023ddc:	2800      	cmp	r0, #0
 8023dde:	d03f      	beq.n	8023e60 <_vfiprintf_r+0x22c>
 8023de0:	4b29      	ldr	r3, [pc, #164]	; (8023e88 <_vfiprintf_r+0x254>)
 8023de2:	bb1b      	cbnz	r3, 8023e2c <_vfiprintf_r+0x1f8>
 8023de4:	9b03      	ldr	r3, [sp, #12]
 8023de6:	3307      	adds	r3, #7
 8023de8:	f023 0307 	bic.w	r3, r3, #7
 8023dec:	3308      	adds	r3, #8
 8023dee:	9303      	str	r3, [sp, #12]
 8023df0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023df2:	443b      	add	r3, r7
 8023df4:	9309      	str	r3, [sp, #36]	; 0x24
 8023df6:	e767      	b.n	8023cc8 <_vfiprintf_r+0x94>
 8023df8:	fb0c 3202 	mla	r2, ip, r2, r3
 8023dfc:	460c      	mov	r4, r1
 8023dfe:	2001      	movs	r0, #1
 8023e00:	e7a5      	b.n	8023d4e <_vfiprintf_r+0x11a>
 8023e02:	2300      	movs	r3, #0
 8023e04:	3401      	adds	r4, #1
 8023e06:	9305      	str	r3, [sp, #20]
 8023e08:	4619      	mov	r1, r3
 8023e0a:	f04f 0c0a 	mov.w	ip, #10
 8023e0e:	4620      	mov	r0, r4
 8023e10:	f810 2b01 	ldrb.w	r2, [r0], #1
 8023e14:	3a30      	subs	r2, #48	; 0x30
 8023e16:	2a09      	cmp	r2, #9
 8023e18:	d903      	bls.n	8023e22 <_vfiprintf_r+0x1ee>
 8023e1a:	2b00      	cmp	r3, #0
 8023e1c:	d0c5      	beq.n	8023daa <_vfiprintf_r+0x176>
 8023e1e:	9105      	str	r1, [sp, #20]
 8023e20:	e7c3      	b.n	8023daa <_vfiprintf_r+0x176>
 8023e22:	fb0c 2101 	mla	r1, ip, r1, r2
 8023e26:	4604      	mov	r4, r0
 8023e28:	2301      	movs	r3, #1
 8023e2a:	e7f0      	b.n	8023e0e <_vfiprintf_r+0x1da>
 8023e2c:	ab03      	add	r3, sp, #12
 8023e2e:	9300      	str	r3, [sp, #0]
 8023e30:	462a      	mov	r2, r5
 8023e32:	4b16      	ldr	r3, [pc, #88]	; (8023e8c <_vfiprintf_r+0x258>)
 8023e34:	a904      	add	r1, sp, #16
 8023e36:	4630      	mov	r0, r6
 8023e38:	f3af 8000 	nop.w
 8023e3c:	4607      	mov	r7, r0
 8023e3e:	1c78      	adds	r0, r7, #1
 8023e40:	d1d6      	bne.n	8023df0 <_vfiprintf_r+0x1bc>
 8023e42:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8023e44:	07d9      	lsls	r1, r3, #31
 8023e46:	d405      	bmi.n	8023e54 <_vfiprintf_r+0x220>
 8023e48:	89ab      	ldrh	r3, [r5, #12]
 8023e4a:	059a      	lsls	r2, r3, #22
 8023e4c:	d402      	bmi.n	8023e54 <_vfiprintf_r+0x220>
 8023e4e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023e50:	f7ff f987 	bl	8023162 <__retarget_lock_release_recursive>
 8023e54:	89ab      	ldrh	r3, [r5, #12]
 8023e56:	065b      	lsls	r3, r3, #25
 8023e58:	f53f af12 	bmi.w	8023c80 <_vfiprintf_r+0x4c>
 8023e5c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023e5e:	e711      	b.n	8023c84 <_vfiprintf_r+0x50>
 8023e60:	ab03      	add	r3, sp, #12
 8023e62:	9300      	str	r3, [sp, #0]
 8023e64:	462a      	mov	r2, r5
 8023e66:	4b09      	ldr	r3, [pc, #36]	; (8023e8c <_vfiprintf_r+0x258>)
 8023e68:	a904      	add	r1, sp, #16
 8023e6a:	4630      	mov	r0, r6
 8023e6c:	f000 f880 	bl	8023f70 <_printf_i>
 8023e70:	e7e4      	b.n	8023e3c <_vfiprintf_r+0x208>
 8023e72:	bf00      	nop
 8023e74:	08025774 	.word	0x08025774
 8023e78:	08025794 	.word	0x08025794
 8023e7c:	08025754 	.word	0x08025754
 8023e80:	08025720 	.word	0x08025720
 8023e84:	0802572a 	.word	0x0802572a
 8023e88:	00000000 	.word	0x00000000
 8023e8c:	08023c0f 	.word	0x08023c0f
 8023e90:	08025726 	.word	0x08025726

08023e94 <_printf_common>:
 8023e94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023e98:	4616      	mov	r6, r2
 8023e9a:	4699      	mov	r9, r3
 8023e9c:	688a      	ldr	r2, [r1, #8]
 8023e9e:	690b      	ldr	r3, [r1, #16]
 8023ea0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8023ea4:	4293      	cmp	r3, r2
 8023ea6:	bfb8      	it	lt
 8023ea8:	4613      	movlt	r3, r2
 8023eaa:	6033      	str	r3, [r6, #0]
 8023eac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8023eb0:	4607      	mov	r7, r0
 8023eb2:	460c      	mov	r4, r1
 8023eb4:	b10a      	cbz	r2, 8023eba <_printf_common+0x26>
 8023eb6:	3301      	adds	r3, #1
 8023eb8:	6033      	str	r3, [r6, #0]
 8023eba:	6823      	ldr	r3, [r4, #0]
 8023ebc:	0699      	lsls	r1, r3, #26
 8023ebe:	bf42      	ittt	mi
 8023ec0:	6833      	ldrmi	r3, [r6, #0]
 8023ec2:	3302      	addmi	r3, #2
 8023ec4:	6033      	strmi	r3, [r6, #0]
 8023ec6:	6825      	ldr	r5, [r4, #0]
 8023ec8:	f015 0506 	ands.w	r5, r5, #6
 8023ecc:	d106      	bne.n	8023edc <_printf_common+0x48>
 8023ece:	f104 0a19 	add.w	sl, r4, #25
 8023ed2:	68e3      	ldr	r3, [r4, #12]
 8023ed4:	6832      	ldr	r2, [r6, #0]
 8023ed6:	1a9b      	subs	r3, r3, r2
 8023ed8:	42ab      	cmp	r3, r5
 8023eda:	dc26      	bgt.n	8023f2a <_printf_common+0x96>
 8023edc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8023ee0:	1e13      	subs	r3, r2, #0
 8023ee2:	6822      	ldr	r2, [r4, #0]
 8023ee4:	bf18      	it	ne
 8023ee6:	2301      	movne	r3, #1
 8023ee8:	0692      	lsls	r2, r2, #26
 8023eea:	d42b      	bmi.n	8023f44 <_printf_common+0xb0>
 8023eec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8023ef0:	4649      	mov	r1, r9
 8023ef2:	4638      	mov	r0, r7
 8023ef4:	47c0      	blx	r8
 8023ef6:	3001      	adds	r0, #1
 8023ef8:	d01e      	beq.n	8023f38 <_printf_common+0xa4>
 8023efa:	6823      	ldr	r3, [r4, #0]
 8023efc:	68e5      	ldr	r5, [r4, #12]
 8023efe:	6832      	ldr	r2, [r6, #0]
 8023f00:	f003 0306 	and.w	r3, r3, #6
 8023f04:	2b04      	cmp	r3, #4
 8023f06:	bf08      	it	eq
 8023f08:	1aad      	subeq	r5, r5, r2
 8023f0a:	68a3      	ldr	r3, [r4, #8]
 8023f0c:	6922      	ldr	r2, [r4, #16]
 8023f0e:	bf0c      	ite	eq
 8023f10:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8023f14:	2500      	movne	r5, #0
 8023f16:	4293      	cmp	r3, r2
 8023f18:	bfc4      	itt	gt
 8023f1a:	1a9b      	subgt	r3, r3, r2
 8023f1c:	18ed      	addgt	r5, r5, r3
 8023f1e:	2600      	movs	r6, #0
 8023f20:	341a      	adds	r4, #26
 8023f22:	42b5      	cmp	r5, r6
 8023f24:	d11a      	bne.n	8023f5c <_printf_common+0xc8>
 8023f26:	2000      	movs	r0, #0
 8023f28:	e008      	b.n	8023f3c <_printf_common+0xa8>
 8023f2a:	2301      	movs	r3, #1
 8023f2c:	4652      	mov	r2, sl
 8023f2e:	4649      	mov	r1, r9
 8023f30:	4638      	mov	r0, r7
 8023f32:	47c0      	blx	r8
 8023f34:	3001      	adds	r0, #1
 8023f36:	d103      	bne.n	8023f40 <_printf_common+0xac>
 8023f38:	f04f 30ff 	mov.w	r0, #4294967295
 8023f3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023f40:	3501      	adds	r5, #1
 8023f42:	e7c6      	b.n	8023ed2 <_printf_common+0x3e>
 8023f44:	18e1      	adds	r1, r4, r3
 8023f46:	1c5a      	adds	r2, r3, #1
 8023f48:	2030      	movs	r0, #48	; 0x30
 8023f4a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8023f4e:	4422      	add	r2, r4
 8023f50:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8023f54:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8023f58:	3302      	adds	r3, #2
 8023f5a:	e7c7      	b.n	8023eec <_printf_common+0x58>
 8023f5c:	2301      	movs	r3, #1
 8023f5e:	4622      	mov	r2, r4
 8023f60:	4649      	mov	r1, r9
 8023f62:	4638      	mov	r0, r7
 8023f64:	47c0      	blx	r8
 8023f66:	3001      	adds	r0, #1
 8023f68:	d0e6      	beq.n	8023f38 <_printf_common+0xa4>
 8023f6a:	3601      	adds	r6, #1
 8023f6c:	e7d9      	b.n	8023f22 <_printf_common+0x8e>
	...

08023f70 <_printf_i>:
 8023f70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023f74:	460c      	mov	r4, r1
 8023f76:	4691      	mov	r9, r2
 8023f78:	7e27      	ldrb	r7, [r4, #24]
 8023f7a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8023f7c:	2f78      	cmp	r7, #120	; 0x78
 8023f7e:	4680      	mov	r8, r0
 8023f80:	469a      	mov	sl, r3
 8023f82:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8023f86:	d807      	bhi.n	8023f98 <_printf_i+0x28>
 8023f88:	2f62      	cmp	r7, #98	; 0x62
 8023f8a:	d80a      	bhi.n	8023fa2 <_printf_i+0x32>
 8023f8c:	2f00      	cmp	r7, #0
 8023f8e:	f000 80d8 	beq.w	8024142 <_printf_i+0x1d2>
 8023f92:	2f58      	cmp	r7, #88	; 0x58
 8023f94:	f000 80a3 	beq.w	80240de <_printf_i+0x16e>
 8023f98:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8023f9c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8023fa0:	e03a      	b.n	8024018 <_printf_i+0xa8>
 8023fa2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8023fa6:	2b15      	cmp	r3, #21
 8023fa8:	d8f6      	bhi.n	8023f98 <_printf_i+0x28>
 8023faa:	a001      	add	r0, pc, #4	; (adr r0, 8023fb0 <_printf_i+0x40>)
 8023fac:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8023fb0:	08024009 	.word	0x08024009
 8023fb4:	0802401d 	.word	0x0802401d
 8023fb8:	08023f99 	.word	0x08023f99
 8023fbc:	08023f99 	.word	0x08023f99
 8023fc0:	08023f99 	.word	0x08023f99
 8023fc4:	08023f99 	.word	0x08023f99
 8023fc8:	0802401d 	.word	0x0802401d
 8023fcc:	08023f99 	.word	0x08023f99
 8023fd0:	08023f99 	.word	0x08023f99
 8023fd4:	08023f99 	.word	0x08023f99
 8023fd8:	08023f99 	.word	0x08023f99
 8023fdc:	08024129 	.word	0x08024129
 8023fe0:	0802404d 	.word	0x0802404d
 8023fe4:	0802410b 	.word	0x0802410b
 8023fe8:	08023f99 	.word	0x08023f99
 8023fec:	08023f99 	.word	0x08023f99
 8023ff0:	0802414b 	.word	0x0802414b
 8023ff4:	08023f99 	.word	0x08023f99
 8023ff8:	0802404d 	.word	0x0802404d
 8023ffc:	08023f99 	.word	0x08023f99
 8024000:	08023f99 	.word	0x08023f99
 8024004:	08024113 	.word	0x08024113
 8024008:	680b      	ldr	r3, [r1, #0]
 802400a:	1d1a      	adds	r2, r3, #4
 802400c:	681b      	ldr	r3, [r3, #0]
 802400e:	600a      	str	r2, [r1, #0]
 8024010:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8024014:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8024018:	2301      	movs	r3, #1
 802401a:	e0a3      	b.n	8024164 <_printf_i+0x1f4>
 802401c:	6825      	ldr	r5, [r4, #0]
 802401e:	6808      	ldr	r0, [r1, #0]
 8024020:	062e      	lsls	r6, r5, #24
 8024022:	f100 0304 	add.w	r3, r0, #4
 8024026:	d50a      	bpl.n	802403e <_printf_i+0xce>
 8024028:	6805      	ldr	r5, [r0, #0]
 802402a:	600b      	str	r3, [r1, #0]
 802402c:	2d00      	cmp	r5, #0
 802402e:	da03      	bge.n	8024038 <_printf_i+0xc8>
 8024030:	232d      	movs	r3, #45	; 0x2d
 8024032:	426d      	negs	r5, r5
 8024034:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8024038:	485e      	ldr	r0, [pc, #376]	; (80241b4 <_printf_i+0x244>)
 802403a:	230a      	movs	r3, #10
 802403c:	e019      	b.n	8024072 <_printf_i+0x102>
 802403e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8024042:	6805      	ldr	r5, [r0, #0]
 8024044:	600b      	str	r3, [r1, #0]
 8024046:	bf18      	it	ne
 8024048:	b22d      	sxthne	r5, r5
 802404a:	e7ef      	b.n	802402c <_printf_i+0xbc>
 802404c:	680b      	ldr	r3, [r1, #0]
 802404e:	6825      	ldr	r5, [r4, #0]
 8024050:	1d18      	adds	r0, r3, #4
 8024052:	6008      	str	r0, [r1, #0]
 8024054:	0628      	lsls	r0, r5, #24
 8024056:	d501      	bpl.n	802405c <_printf_i+0xec>
 8024058:	681d      	ldr	r5, [r3, #0]
 802405a:	e002      	b.n	8024062 <_printf_i+0xf2>
 802405c:	0669      	lsls	r1, r5, #25
 802405e:	d5fb      	bpl.n	8024058 <_printf_i+0xe8>
 8024060:	881d      	ldrh	r5, [r3, #0]
 8024062:	4854      	ldr	r0, [pc, #336]	; (80241b4 <_printf_i+0x244>)
 8024064:	2f6f      	cmp	r7, #111	; 0x6f
 8024066:	bf0c      	ite	eq
 8024068:	2308      	moveq	r3, #8
 802406a:	230a      	movne	r3, #10
 802406c:	2100      	movs	r1, #0
 802406e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8024072:	6866      	ldr	r6, [r4, #4]
 8024074:	60a6      	str	r6, [r4, #8]
 8024076:	2e00      	cmp	r6, #0
 8024078:	bfa2      	ittt	ge
 802407a:	6821      	ldrge	r1, [r4, #0]
 802407c:	f021 0104 	bicge.w	r1, r1, #4
 8024080:	6021      	strge	r1, [r4, #0]
 8024082:	b90d      	cbnz	r5, 8024088 <_printf_i+0x118>
 8024084:	2e00      	cmp	r6, #0
 8024086:	d04d      	beq.n	8024124 <_printf_i+0x1b4>
 8024088:	4616      	mov	r6, r2
 802408a:	fbb5 f1f3 	udiv	r1, r5, r3
 802408e:	fb03 5711 	mls	r7, r3, r1, r5
 8024092:	5dc7      	ldrb	r7, [r0, r7]
 8024094:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8024098:	462f      	mov	r7, r5
 802409a:	42bb      	cmp	r3, r7
 802409c:	460d      	mov	r5, r1
 802409e:	d9f4      	bls.n	802408a <_printf_i+0x11a>
 80240a0:	2b08      	cmp	r3, #8
 80240a2:	d10b      	bne.n	80240bc <_printf_i+0x14c>
 80240a4:	6823      	ldr	r3, [r4, #0]
 80240a6:	07df      	lsls	r7, r3, #31
 80240a8:	d508      	bpl.n	80240bc <_printf_i+0x14c>
 80240aa:	6923      	ldr	r3, [r4, #16]
 80240ac:	6861      	ldr	r1, [r4, #4]
 80240ae:	4299      	cmp	r1, r3
 80240b0:	bfde      	ittt	le
 80240b2:	2330      	movle	r3, #48	; 0x30
 80240b4:	f806 3c01 	strble.w	r3, [r6, #-1]
 80240b8:	f106 36ff 	addle.w	r6, r6, #4294967295
 80240bc:	1b92      	subs	r2, r2, r6
 80240be:	6122      	str	r2, [r4, #16]
 80240c0:	f8cd a000 	str.w	sl, [sp]
 80240c4:	464b      	mov	r3, r9
 80240c6:	aa03      	add	r2, sp, #12
 80240c8:	4621      	mov	r1, r4
 80240ca:	4640      	mov	r0, r8
 80240cc:	f7ff fee2 	bl	8023e94 <_printf_common>
 80240d0:	3001      	adds	r0, #1
 80240d2:	d14c      	bne.n	802416e <_printf_i+0x1fe>
 80240d4:	f04f 30ff 	mov.w	r0, #4294967295
 80240d8:	b004      	add	sp, #16
 80240da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80240de:	4835      	ldr	r0, [pc, #212]	; (80241b4 <_printf_i+0x244>)
 80240e0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80240e4:	6823      	ldr	r3, [r4, #0]
 80240e6:	680e      	ldr	r6, [r1, #0]
 80240e8:	061f      	lsls	r7, r3, #24
 80240ea:	f856 5b04 	ldr.w	r5, [r6], #4
 80240ee:	600e      	str	r6, [r1, #0]
 80240f0:	d514      	bpl.n	802411c <_printf_i+0x1ac>
 80240f2:	07d9      	lsls	r1, r3, #31
 80240f4:	bf44      	itt	mi
 80240f6:	f043 0320 	orrmi.w	r3, r3, #32
 80240fa:	6023      	strmi	r3, [r4, #0]
 80240fc:	b91d      	cbnz	r5, 8024106 <_printf_i+0x196>
 80240fe:	6823      	ldr	r3, [r4, #0]
 8024100:	f023 0320 	bic.w	r3, r3, #32
 8024104:	6023      	str	r3, [r4, #0]
 8024106:	2310      	movs	r3, #16
 8024108:	e7b0      	b.n	802406c <_printf_i+0xfc>
 802410a:	6823      	ldr	r3, [r4, #0]
 802410c:	f043 0320 	orr.w	r3, r3, #32
 8024110:	6023      	str	r3, [r4, #0]
 8024112:	2378      	movs	r3, #120	; 0x78
 8024114:	4828      	ldr	r0, [pc, #160]	; (80241b8 <_printf_i+0x248>)
 8024116:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802411a:	e7e3      	b.n	80240e4 <_printf_i+0x174>
 802411c:	065e      	lsls	r6, r3, #25
 802411e:	bf48      	it	mi
 8024120:	b2ad      	uxthmi	r5, r5
 8024122:	e7e6      	b.n	80240f2 <_printf_i+0x182>
 8024124:	4616      	mov	r6, r2
 8024126:	e7bb      	b.n	80240a0 <_printf_i+0x130>
 8024128:	680b      	ldr	r3, [r1, #0]
 802412a:	6826      	ldr	r6, [r4, #0]
 802412c:	6960      	ldr	r0, [r4, #20]
 802412e:	1d1d      	adds	r5, r3, #4
 8024130:	600d      	str	r5, [r1, #0]
 8024132:	0635      	lsls	r5, r6, #24
 8024134:	681b      	ldr	r3, [r3, #0]
 8024136:	d501      	bpl.n	802413c <_printf_i+0x1cc>
 8024138:	6018      	str	r0, [r3, #0]
 802413a:	e002      	b.n	8024142 <_printf_i+0x1d2>
 802413c:	0671      	lsls	r1, r6, #25
 802413e:	d5fb      	bpl.n	8024138 <_printf_i+0x1c8>
 8024140:	8018      	strh	r0, [r3, #0]
 8024142:	2300      	movs	r3, #0
 8024144:	6123      	str	r3, [r4, #16]
 8024146:	4616      	mov	r6, r2
 8024148:	e7ba      	b.n	80240c0 <_printf_i+0x150>
 802414a:	680b      	ldr	r3, [r1, #0]
 802414c:	1d1a      	adds	r2, r3, #4
 802414e:	600a      	str	r2, [r1, #0]
 8024150:	681e      	ldr	r6, [r3, #0]
 8024152:	6862      	ldr	r2, [r4, #4]
 8024154:	2100      	movs	r1, #0
 8024156:	4630      	mov	r0, r6
 8024158:	f7dc f85a 	bl	8000210 <memchr>
 802415c:	b108      	cbz	r0, 8024162 <_printf_i+0x1f2>
 802415e:	1b80      	subs	r0, r0, r6
 8024160:	6060      	str	r0, [r4, #4]
 8024162:	6863      	ldr	r3, [r4, #4]
 8024164:	6123      	str	r3, [r4, #16]
 8024166:	2300      	movs	r3, #0
 8024168:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802416c:	e7a8      	b.n	80240c0 <_printf_i+0x150>
 802416e:	6923      	ldr	r3, [r4, #16]
 8024170:	4632      	mov	r2, r6
 8024172:	4649      	mov	r1, r9
 8024174:	4640      	mov	r0, r8
 8024176:	47d0      	blx	sl
 8024178:	3001      	adds	r0, #1
 802417a:	d0ab      	beq.n	80240d4 <_printf_i+0x164>
 802417c:	6823      	ldr	r3, [r4, #0]
 802417e:	079b      	lsls	r3, r3, #30
 8024180:	d413      	bmi.n	80241aa <_printf_i+0x23a>
 8024182:	68e0      	ldr	r0, [r4, #12]
 8024184:	9b03      	ldr	r3, [sp, #12]
 8024186:	4298      	cmp	r0, r3
 8024188:	bfb8      	it	lt
 802418a:	4618      	movlt	r0, r3
 802418c:	e7a4      	b.n	80240d8 <_printf_i+0x168>
 802418e:	2301      	movs	r3, #1
 8024190:	4632      	mov	r2, r6
 8024192:	4649      	mov	r1, r9
 8024194:	4640      	mov	r0, r8
 8024196:	47d0      	blx	sl
 8024198:	3001      	adds	r0, #1
 802419a:	d09b      	beq.n	80240d4 <_printf_i+0x164>
 802419c:	3501      	adds	r5, #1
 802419e:	68e3      	ldr	r3, [r4, #12]
 80241a0:	9903      	ldr	r1, [sp, #12]
 80241a2:	1a5b      	subs	r3, r3, r1
 80241a4:	42ab      	cmp	r3, r5
 80241a6:	dcf2      	bgt.n	802418e <_printf_i+0x21e>
 80241a8:	e7eb      	b.n	8024182 <_printf_i+0x212>
 80241aa:	2500      	movs	r5, #0
 80241ac:	f104 0619 	add.w	r6, r4, #25
 80241b0:	e7f5      	b.n	802419e <_printf_i+0x22e>
 80241b2:	bf00      	nop
 80241b4:	08025731 	.word	0x08025731
 80241b8:	08025742 	.word	0x08025742

080241bc <__swbuf_r>:
 80241bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80241be:	460e      	mov	r6, r1
 80241c0:	4614      	mov	r4, r2
 80241c2:	4605      	mov	r5, r0
 80241c4:	b118      	cbz	r0, 80241ce <__swbuf_r+0x12>
 80241c6:	6983      	ldr	r3, [r0, #24]
 80241c8:	b90b      	cbnz	r3, 80241ce <__swbuf_r+0x12>
 80241ca:	f000 f9d1 	bl	8024570 <__sinit>
 80241ce:	4b21      	ldr	r3, [pc, #132]	; (8024254 <__swbuf_r+0x98>)
 80241d0:	429c      	cmp	r4, r3
 80241d2:	d12b      	bne.n	802422c <__swbuf_r+0x70>
 80241d4:	686c      	ldr	r4, [r5, #4]
 80241d6:	69a3      	ldr	r3, [r4, #24]
 80241d8:	60a3      	str	r3, [r4, #8]
 80241da:	89a3      	ldrh	r3, [r4, #12]
 80241dc:	071a      	lsls	r2, r3, #28
 80241de:	d52f      	bpl.n	8024240 <__swbuf_r+0x84>
 80241e0:	6923      	ldr	r3, [r4, #16]
 80241e2:	b36b      	cbz	r3, 8024240 <__swbuf_r+0x84>
 80241e4:	6923      	ldr	r3, [r4, #16]
 80241e6:	6820      	ldr	r0, [r4, #0]
 80241e8:	1ac0      	subs	r0, r0, r3
 80241ea:	6963      	ldr	r3, [r4, #20]
 80241ec:	b2f6      	uxtb	r6, r6
 80241ee:	4283      	cmp	r3, r0
 80241f0:	4637      	mov	r7, r6
 80241f2:	dc04      	bgt.n	80241fe <__swbuf_r+0x42>
 80241f4:	4621      	mov	r1, r4
 80241f6:	4628      	mov	r0, r5
 80241f8:	f000 f926 	bl	8024448 <_fflush_r>
 80241fc:	bb30      	cbnz	r0, 802424c <__swbuf_r+0x90>
 80241fe:	68a3      	ldr	r3, [r4, #8]
 8024200:	3b01      	subs	r3, #1
 8024202:	60a3      	str	r3, [r4, #8]
 8024204:	6823      	ldr	r3, [r4, #0]
 8024206:	1c5a      	adds	r2, r3, #1
 8024208:	6022      	str	r2, [r4, #0]
 802420a:	701e      	strb	r6, [r3, #0]
 802420c:	6963      	ldr	r3, [r4, #20]
 802420e:	3001      	adds	r0, #1
 8024210:	4283      	cmp	r3, r0
 8024212:	d004      	beq.n	802421e <__swbuf_r+0x62>
 8024214:	89a3      	ldrh	r3, [r4, #12]
 8024216:	07db      	lsls	r3, r3, #31
 8024218:	d506      	bpl.n	8024228 <__swbuf_r+0x6c>
 802421a:	2e0a      	cmp	r6, #10
 802421c:	d104      	bne.n	8024228 <__swbuf_r+0x6c>
 802421e:	4621      	mov	r1, r4
 8024220:	4628      	mov	r0, r5
 8024222:	f000 f911 	bl	8024448 <_fflush_r>
 8024226:	b988      	cbnz	r0, 802424c <__swbuf_r+0x90>
 8024228:	4638      	mov	r0, r7
 802422a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802422c:	4b0a      	ldr	r3, [pc, #40]	; (8024258 <__swbuf_r+0x9c>)
 802422e:	429c      	cmp	r4, r3
 8024230:	d101      	bne.n	8024236 <__swbuf_r+0x7a>
 8024232:	68ac      	ldr	r4, [r5, #8]
 8024234:	e7cf      	b.n	80241d6 <__swbuf_r+0x1a>
 8024236:	4b09      	ldr	r3, [pc, #36]	; (802425c <__swbuf_r+0xa0>)
 8024238:	429c      	cmp	r4, r3
 802423a:	bf08      	it	eq
 802423c:	68ec      	ldreq	r4, [r5, #12]
 802423e:	e7ca      	b.n	80241d6 <__swbuf_r+0x1a>
 8024240:	4621      	mov	r1, r4
 8024242:	4628      	mov	r0, r5
 8024244:	f000 f80c 	bl	8024260 <__swsetup_r>
 8024248:	2800      	cmp	r0, #0
 802424a:	d0cb      	beq.n	80241e4 <__swbuf_r+0x28>
 802424c:	f04f 37ff 	mov.w	r7, #4294967295
 8024250:	e7ea      	b.n	8024228 <__swbuf_r+0x6c>
 8024252:	bf00      	nop
 8024254:	08025774 	.word	0x08025774
 8024258:	08025794 	.word	0x08025794
 802425c:	08025754 	.word	0x08025754

08024260 <__swsetup_r>:
 8024260:	4b32      	ldr	r3, [pc, #200]	; (802432c <__swsetup_r+0xcc>)
 8024262:	b570      	push	{r4, r5, r6, lr}
 8024264:	681d      	ldr	r5, [r3, #0]
 8024266:	4606      	mov	r6, r0
 8024268:	460c      	mov	r4, r1
 802426a:	b125      	cbz	r5, 8024276 <__swsetup_r+0x16>
 802426c:	69ab      	ldr	r3, [r5, #24]
 802426e:	b913      	cbnz	r3, 8024276 <__swsetup_r+0x16>
 8024270:	4628      	mov	r0, r5
 8024272:	f000 f97d 	bl	8024570 <__sinit>
 8024276:	4b2e      	ldr	r3, [pc, #184]	; (8024330 <__swsetup_r+0xd0>)
 8024278:	429c      	cmp	r4, r3
 802427a:	d10f      	bne.n	802429c <__swsetup_r+0x3c>
 802427c:	686c      	ldr	r4, [r5, #4]
 802427e:	89a3      	ldrh	r3, [r4, #12]
 8024280:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024284:	0719      	lsls	r1, r3, #28
 8024286:	d42c      	bmi.n	80242e2 <__swsetup_r+0x82>
 8024288:	06dd      	lsls	r5, r3, #27
 802428a:	d411      	bmi.n	80242b0 <__swsetup_r+0x50>
 802428c:	2309      	movs	r3, #9
 802428e:	6033      	str	r3, [r6, #0]
 8024290:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8024294:	81a3      	strh	r3, [r4, #12]
 8024296:	f04f 30ff 	mov.w	r0, #4294967295
 802429a:	e03e      	b.n	802431a <__swsetup_r+0xba>
 802429c:	4b25      	ldr	r3, [pc, #148]	; (8024334 <__swsetup_r+0xd4>)
 802429e:	429c      	cmp	r4, r3
 80242a0:	d101      	bne.n	80242a6 <__swsetup_r+0x46>
 80242a2:	68ac      	ldr	r4, [r5, #8]
 80242a4:	e7eb      	b.n	802427e <__swsetup_r+0x1e>
 80242a6:	4b24      	ldr	r3, [pc, #144]	; (8024338 <__swsetup_r+0xd8>)
 80242a8:	429c      	cmp	r4, r3
 80242aa:	bf08      	it	eq
 80242ac:	68ec      	ldreq	r4, [r5, #12]
 80242ae:	e7e6      	b.n	802427e <__swsetup_r+0x1e>
 80242b0:	0758      	lsls	r0, r3, #29
 80242b2:	d512      	bpl.n	80242da <__swsetup_r+0x7a>
 80242b4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80242b6:	b141      	cbz	r1, 80242ca <__swsetup_r+0x6a>
 80242b8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80242bc:	4299      	cmp	r1, r3
 80242be:	d002      	beq.n	80242c6 <__swsetup_r+0x66>
 80242c0:	4630      	mov	r0, r6
 80242c2:	f7fd fb2b 	bl	802191c <_free_r>
 80242c6:	2300      	movs	r3, #0
 80242c8:	6363      	str	r3, [r4, #52]	; 0x34
 80242ca:	89a3      	ldrh	r3, [r4, #12]
 80242cc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80242d0:	81a3      	strh	r3, [r4, #12]
 80242d2:	2300      	movs	r3, #0
 80242d4:	6063      	str	r3, [r4, #4]
 80242d6:	6923      	ldr	r3, [r4, #16]
 80242d8:	6023      	str	r3, [r4, #0]
 80242da:	89a3      	ldrh	r3, [r4, #12]
 80242dc:	f043 0308 	orr.w	r3, r3, #8
 80242e0:	81a3      	strh	r3, [r4, #12]
 80242e2:	6923      	ldr	r3, [r4, #16]
 80242e4:	b94b      	cbnz	r3, 80242fa <__swsetup_r+0x9a>
 80242e6:	89a3      	ldrh	r3, [r4, #12]
 80242e8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80242ec:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80242f0:	d003      	beq.n	80242fa <__swsetup_r+0x9a>
 80242f2:	4621      	mov	r1, r4
 80242f4:	4630      	mov	r0, r6
 80242f6:	f000 f9fd 	bl	80246f4 <__smakebuf_r>
 80242fa:	89a0      	ldrh	r0, [r4, #12]
 80242fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024300:	f010 0301 	ands.w	r3, r0, #1
 8024304:	d00a      	beq.n	802431c <__swsetup_r+0xbc>
 8024306:	2300      	movs	r3, #0
 8024308:	60a3      	str	r3, [r4, #8]
 802430a:	6963      	ldr	r3, [r4, #20]
 802430c:	425b      	negs	r3, r3
 802430e:	61a3      	str	r3, [r4, #24]
 8024310:	6923      	ldr	r3, [r4, #16]
 8024312:	b943      	cbnz	r3, 8024326 <__swsetup_r+0xc6>
 8024314:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8024318:	d1ba      	bne.n	8024290 <__swsetup_r+0x30>
 802431a:	bd70      	pop	{r4, r5, r6, pc}
 802431c:	0781      	lsls	r1, r0, #30
 802431e:	bf58      	it	pl
 8024320:	6963      	ldrpl	r3, [r4, #20]
 8024322:	60a3      	str	r3, [r4, #8]
 8024324:	e7f4      	b.n	8024310 <__swsetup_r+0xb0>
 8024326:	2000      	movs	r0, #0
 8024328:	e7f7      	b.n	802431a <__swsetup_r+0xba>
 802432a:	bf00      	nop
 802432c:	2000000c 	.word	0x2000000c
 8024330:	08025774 	.word	0x08025774
 8024334:	08025794 	.word	0x08025794
 8024338:	08025754 	.word	0x08025754

0802433c <__sflush_r>:
 802433c:	898a      	ldrh	r2, [r1, #12]
 802433e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024342:	4605      	mov	r5, r0
 8024344:	0710      	lsls	r0, r2, #28
 8024346:	460c      	mov	r4, r1
 8024348:	d458      	bmi.n	80243fc <__sflush_r+0xc0>
 802434a:	684b      	ldr	r3, [r1, #4]
 802434c:	2b00      	cmp	r3, #0
 802434e:	dc05      	bgt.n	802435c <__sflush_r+0x20>
 8024350:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8024352:	2b00      	cmp	r3, #0
 8024354:	dc02      	bgt.n	802435c <__sflush_r+0x20>
 8024356:	2000      	movs	r0, #0
 8024358:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802435c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802435e:	2e00      	cmp	r6, #0
 8024360:	d0f9      	beq.n	8024356 <__sflush_r+0x1a>
 8024362:	2300      	movs	r3, #0
 8024364:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8024368:	682f      	ldr	r7, [r5, #0]
 802436a:	602b      	str	r3, [r5, #0]
 802436c:	d032      	beq.n	80243d4 <__sflush_r+0x98>
 802436e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8024370:	89a3      	ldrh	r3, [r4, #12]
 8024372:	075a      	lsls	r2, r3, #29
 8024374:	d505      	bpl.n	8024382 <__sflush_r+0x46>
 8024376:	6863      	ldr	r3, [r4, #4]
 8024378:	1ac0      	subs	r0, r0, r3
 802437a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802437c:	b10b      	cbz	r3, 8024382 <__sflush_r+0x46>
 802437e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8024380:	1ac0      	subs	r0, r0, r3
 8024382:	2300      	movs	r3, #0
 8024384:	4602      	mov	r2, r0
 8024386:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8024388:	6a21      	ldr	r1, [r4, #32]
 802438a:	4628      	mov	r0, r5
 802438c:	47b0      	blx	r6
 802438e:	1c43      	adds	r3, r0, #1
 8024390:	89a3      	ldrh	r3, [r4, #12]
 8024392:	d106      	bne.n	80243a2 <__sflush_r+0x66>
 8024394:	6829      	ldr	r1, [r5, #0]
 8024396:	291d      	cmp	r1, #29
 8024398:	d82c      	bhi.n	80243f4 <__sflush_r+0xb8>
 802439a:	4a2a      	ldr	r2, [pc, #168]	; (8024444 <__sflush_r+0x108>)
 802439c:	40ca      	lsrs	r2, r1
 802439e:	07d6      	lsls	r6, r2, #31
 80243a0:	d528      	bpl.n	80243f4 <__sflush_r+0xb8>
 80243a2:	2200      	movs	r2, #0
 80243a4:	6062      	str	r2, [r4, #4]
 80243a6:	04d9      	lsls	r1, r3, #19
 80243a8:	6922      	ldr	r2, [r4, #16]
 80243aa:	6022      	str	r2, [r4, #0]
 80243ac:	d504      	bpl.n	80243b8 <__sflush_r+0x7c>
 80243ae:	1c42      	adds	r2, r0, #1
 80243b0:	d101      	bne.n	80243b6 <__sflush_r+0x7a>
 80243b2:	682b      	ldr	r3, [r5, #0]
 80243b4:	b903      	cbnz	r3, 80243b8 <__sflush_r+0x7c>
 80243b6:	6560      	str	r0, [r4, #84]	; 0x54
 80243b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80243ba:	602f      	str	r7, [r5, #0]
 80243bc:	2900      	cmp	r1, #0
 80243be:	d0ca      	beq.n	8024356 <__sflush_r+0x1a>
 80243c0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80243c4:	4299      	cmp	r1, r3
 80243c6:	d002      	beq.n	80243ce <__sflush_r+0x92>
 80243c8:	4628      	mov	r0, r5
 80243ca:	f7fd faa7 	bl	802191c <_free_r>
 80243ce:	2000      	movs	r0, #0
 80243d0:	6360      	str	r0, [r4, #52]	; 0x34
 80243d2:	e7c1      	b.n	8024358 <__sflush_r+0x1c>
 80243d4:	6a21      	ldr	r1, [r4, #32]
 80243d6:	2301      	movs	r3, #1
 80243d8:	4628      	mov	r0, r5
 80243da:	47b0      	blx	r6
 80243dc:	1c41      	adds	r1, r0, #1
 80243de:	d1c7      	bne.n	8024370 <__sflush_r+0x34>
 80243e0:	682b      	ldr	r3, [r5, #0]
 80243e2:	2b00      	cmp	r3, #0
 80243e4:	d0c4      	beq.n	8024370 <__sflush_r+0x34>
 80243e6:	2b1d      	cmp	r3, #29
 80243e8:	d001      	beq.n	80243ee <__sflush_r+0xb2>
 80243ea:	2b16      	cmp	r3, #22
 80243ec:	d101      	bne.n	80243f2 <__sflush_r+0xb6>
 80243ee:	602f      	str	r7, [r5, #0]
 80243f0:	e7b1      	b.n	8024356 <__sflush_r+0x1a>
 80243f2:	89a3      	ldrh	r3, [r4, #12]
 80243f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80243f8:	81a3      	strh	r3, [r4, #12]
 80243fa:	e7ad      	b.n	8024358 <__sflush_r+0x1c>
 80243fc:	690f      	ldr	r7, [r1, #16]
 80243fe:	2f00      	cmp	r7, #0
 8024400:	d0a9      	beq.n	8024356 <__sflush_r+0x1a>
 8024402:	0793      	lsls	r3, r2, #30
 8024404:	680e      	ldr	r6, [r1, #0]
 8024406:	bf08      	it	eq
 8024408:	694b      	ldreq	r3, [r1, #20]
 802440a:	600f      	str	r7, [r1, #0]
 802440c:	bf18      	it	ne
 802440e:	2300      	movne	r3, #0
 8024410:	eba6 0807 	sub.w	r8, r6, r7
 8024414:	608b      	str	r3, [r1, #8]
 8024416:	f1b8 0f00 	cmp.w	r8, #0
 802441a:	dd9c      	ble.n	8024356 <__sflush_r+0x1a>
 802441c:	6a21      	ldr	r1, [r4, #32]
 802441e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8024420:	4643      	mov	r3, r8
 8024422:	463a      	mov	r2, r7
 8024424:	4628      	mov	r0, r5
 8024426:	47b0      	blx	r6
 8024428:	2800      	cmp	r0, #0
 802442a:	dc06      	bgt.n	802443a <__sflush_r+0xfe>
 802442c:	89a3      	ldrh	r3, [r4, #12]
 802442e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8024432:	81a3      	strh	r3, [r4, #12]
 8024434:	f04f 30ff 	mov.w	r0, #4294967295
 8024438:	e78e      	b.n	8024358 <__sflush_r+0x1c>
 802443a:	4407      	add	r7, r0
 802443c:	eba8 0800 	sub.w	r8, r8, r0
 8024440:	e7e9      	b.n	8024416 <__sflush_r+0xda>
 8024442:	bf00      	nop
 8024444:	20400001 	.word	0x20400001

08024448 <_fflush_r>:
 8024448:	b538      	push	{r3, r4, r5, lr}
 802444a:	690b      	ldr	r3, [r1, #16]
 802444c:	4605      	mov	r5, r0
 802444e:	460c      	mov	r4, r1
 8024450:	b913      	cbnz	r3, 8024458 <_fflush_r+0x10>
 8024452:	2500      	movs	r5, #0
 8024454:	4628      	mov	r0, r5
 8024456:	bd38      	pop	{r3, r4, r5, pc}
 8024458:	b118      	cbz	r0, 8024462 <_fflush_r+0x1a>
 802445a:	6983      	ldr	r3, [r0, #24]
 802445c:	b90b      	cbnz	r3, 8024462 <_fflush_r+0x1a>
 802445e:	f000 f887 	bl	8024570 <__sinit>
 8024462:	4b14      	ldr	r3, [pc, #80]	; (80244b4 <_fflush_r+0x6c>)
 8024464:	429c      	cmp	r4, r3
 8024466:	d11b      	bne.n	80244a0 <_fflush_r+0x58>
 8024468:	686c      	ldr	r4, [r5, #4]
 802446a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802446e:	2b00      	cmp	r3, #0
 8024470:	d0ef      	beq.n	8024452 <_fflush_r+0xa>
 8024472:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8024474:	07d0      	lsls	r0, r2, #31
 8024476:	d404      	bmi.n	8024482 <_fflush_r+0x3a>
 8024478:	0599      	lsls	r1, r3, #22
 802447a:	d402      	bmi.n	8024482 <_fflush_r+0x3a>
 802447c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802447e:	f7fe fe6e 	bl	802315e <__retarget_lock_acquire_recursive>
 8024482:	4628      	mov	r0, r5
 8024484:	4621      	mov	r1, r4
 8024486:	f7ff ff59 	bl	802433c <__sflush_r>
 802448a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802448c:	07da      	lsls	r2, r3, #31
 802448e:	4605      	mov	r5, r0
 8024490:	d4e0      	bmi.n	8024454 <_fflush_r+0xc>
 8024492:	89a3      	ldrh	r3, [r4, #12]
 8024494:	059b      	lsls	r3, r3, #22
 8024496:	d4dd      	bmi.n	8024454 <_fflush_r+0xc>
 8024498:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802449a:	f7fe fe62 	bl	8023162 <__retarget_lock_release_recursive>
 802449e:	e7d9      	b.n	8024454 <_fflush_r+0xc>
 80244a0:	4b05      	ldr	r3, [pc, #20]	; (80244b8 <_fflush_r+0x70>)
 80244a2:	429c      	cmp	r4, r3
 80244a4:	d101      	bne.n	80244aa <_fflush_r+0x62>
 80244a6:	68ac      	ldr	r4, [r5, #8]
 80244a8:	e7df      	b.n	802446a <_fflush_r+0x22>
 80244aa:	4b04      	ldr	r3, [pc, #16]	; (80244bc <_fflush_r+0x74>)
 80244ac:	429c      	cmp	r4, r3
 80244ae:	bf08      	it	eq
 80244b0:	68ec      	ldreq	r4, [r5, #12]
 80244b2:	e7da      	b.n	802446a <_fflush_r+0x22>
 80244b4:	08025774 	.word	0x08025774
 80244b8:	08025794 	.word	0x08025794
 80244bc:	08025754 	.word	0x08025754

080244c0 <std>:
 80244c0:	2300      	movs	r3, #0
 80244c2:	b510      	push	{r4, lr}
 80244c4:	4604      	mov	r4, r0
 80244c6:	e9c0 3300 	strd	r3, r3, [r0]
 80244ca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80244ce:	6083      	str	r3, [r0, #8]
 80244d0:	8181      	strh	r1, [r0, #12]
 80244d2:	6643      	str	r3, [r0, #100]	; 0x64
 80244d4:	81c2      	strh	r2, [r0, #14]
 80244d6:	6183      	str	r3, [r0, #24]
 80244d8:	4619      	mov	r1, r3
 80244da:	2208      	movs	r2, #8
 80244dc:	305c      	adds	r0, #92	; 0x5c
 80244de:	f7fd fa15 	bl	802190c <memset>
 80244e2:	4b05      	ldr	r3, [pc, #20]	; (80244f8 <std+0x38>)
 80244e4:	6263      	str	r3, [r4, #36]	; 0x24
 80244e6:	4b05      	ldr	r3, [pc, #20]	; (80244fc <std+0x3c>)
 80244e8:	62a3      	str	r3, [r4, #40]	; 0x28
 80244ea:	4b05      	ldr	r3, [pc, #20]	; (8024500 <std+0x40>)
 80244ec:	62e3      	str	r3, [r4, #44]	; 0x2c
 80244ee:	4b05      	ldr	r3, [pc, #20]	; (8024504 <std+0x44>)
 80244f0:	6224      	str	r4, [r4, #32]
 80244f2:	6323      	str	r3, [r4, #48]	; 0x30
 80244f4:	bd10      	pop	{r4, pc}
 80244f6:	bf00      	nop
 80244f8:	08024775 	.word	0x08024775
 80244fc:	08024797 	.word	0x08024797
 8024500:	080247cf 	.word	0x080247cf
 8024504:	080247f3 	.word	0x080247f3

08024508 <_cleanup_r>:
 8024508:	4901      	ldr	r1, [pc, #4]	; (8024510 <_cleanup_r+0x8>)
 802450a:	f000 b8af 	b.w	802466c <_fwalk_reent>
 802450e:	bf00      	nop
 8024510:	08024449 	.word	0x08024449

08024514 <__sfmoreglue>:
 8024514:	b570      	push	{r4, r5, r6, lr}
 8024516:	1e4a      	subs	r2, r1, #1
 8024518:	2568      	movs	r5, #104	; 0x68
 802451a:	4355      	muls	r5, r2
 802451c:	460e      	mov	r6, r1
 802451e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8024522:	f7fd fa4b 	bl	80219bc <_malloc_r>
 8024526:	4604      	mov	r4, r0
 8024528:	b140      	cbz	r0, 802453c <__sfmoreglue+0x28>
 802452a:	2100      	movs	r1, #0
 802452c:	e9c0 1600 	strd	r1, r6, [r0]
 8024530:	300c      	adds	r0, #12
 8024532:	60a0      	str	r0, [r4, #8]
 8024534:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8024538:	f7fd f9e8 	bl	802190c <memset>
 802453c:	4620      	mov	r0, r4
 802453e:	bd70      	pop	{r4, r5, r6, pc}

08024540 <__sfp_lock_acquire>:
 8024540:	4801      	ldr	r0, [pc, #4]	; (8024548 <__sfp_lock_acquire+0x8>)
 8024542:	f7fe be0c 	b.w	802315e <__retarget_lock_acquire_recursive>
 8024546:	bf00      	nop
 8024548:	20000734 	.word	0x20000734

0802454c <__sfp_lock_release>:
 802454c:	4801      	ldr	r0, [pc, #4]	; (8024554 <__sfp_lock_release+0x8>)
 802454e:	f7fe be08 	b.w	8023162 <__retarget_lock_release_recursive>
 8024552:	bf00      	nop
 8024554:	20000734 	.word	0x20000734

08024558 <__sinit_lock_acquire>:
 8024558:	4801      	ldr	r0, [pc, #4]	; (8024560 <__sinit_lock_acquire+0x8>)
 802455a:	f7fe be00 	b.w	802315e <__retarget_lock_acquire_recursive>
 802455e:	bf00      	nop
 8024560:	20000733 	.word	0x20000733

08024564 <__sinit_lock_release>:
 8024564:	4801      	ldr	r0, [pc, #4]	; (802456c <__sinit_lock_release+0x8>)
 8024566:	f7fe bdfc 	b.w	8023162 <__retarget_lock_release_recursive>
 802456a:	bf00      	nop
 802456c:	20000733 	.word	0x20000733

08024570 <__sinit>:
 8024570:	b510      	push	{r4, lr}
 8024572:	4604      	mov	r4, r0
 8024574:	f7ff fff0 	bl	8024558 <__sinit_lock_acquire>
 8024578:	69a3      	ldr	r3, [r4, #24]
 802457a:	b11b      	cbz	r3, 8024584 <__sinit+0x14>
 802457c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024580:	f7ff bff0 	b.w	8024564 <__sinit_lock_release>
 8024584:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8024588:	6523      	str	r3, [r4, #80]	; 0x50
 802458a:	4b13      	ldr	r3, [pc, #76]	; (80245d8 <__sinit+0x68>)
 802458c:	4a13      	ldr	r2, [pc, #76]	; (80245dc <__sinit+0x6c>)
 802458e:	681b      	ldr	r3, [r3, #0]
 8024590:	62a2      	str	r2, [r4, #40]	; 0x28
 8024592:	42a3      	cmp	r3, r4
 8024594:	bf04      	itt	eq
 8024596:	2301      	moveq	r3, #1
 8024598:	61a3      	streq	r3, [r4, #24]
 802459a:	4620      	mov	r0, r4
 802459c:	f000 f820 	bl	80245e0 <__sfp>
 80245a0:	6060      	str	r0, [r4, #4]
 80245a2:	4620      	mov	r0, r4
 80245a4:	f000 f81c 	bl	80245e0 <__sfp>
 80245a8:	60a0      	str	r0, [r4, #8]
 80245aa:	4620      	mov	r0, r4
 80245ac:	f000 f818 	bl	80245e0 <__sfp>
 80245b0:	2200      	movs	r2, #0
 80245b2:	60e0      	str	r0, [r4, #12]
 80245b4:	2104      	movs	r1, #4
 80245b6:	6860      	ldr	r0, [r4, #4]
 80245b8:	f7ff ff82 	bl	80244c0 <std>
 80245bc:	68a0      	ldr	r0, [r4, #8]
 80245be:	2201      	movs	r2, #1
 80245c0:	2109      	movs	r1, #9
 80245c2:	f7ff ff7d 	bl	80244c0 <std>
 80245c6:	68e0      	ldr	r0, [r4, #12]
 80245c8:	2202      	movs	r2, #2
 80245ca:	2112      	movs	r1, #18
 80245cc:	f7ff ff78 	bl	80244c0 <std>
 80245d0:	2301      	movs	r3, #1
 80245d2:	61a3      	str	r3, [r4, #24]
 80245d4:	e7d2      	b.n	802457c <__sinit+0xc>
 80245d6:	bf00      	nop
 80245d8:	08025358 	.word	0x08025358
 80245dc:	08024509 	.word	0x08024509

080245e0 <__sfp>:
 80245e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80245e2:	4607      	mov	r7, r0
 80245e4:	f7ff ffac 	bl	8024540 <__sfp_lock_acquire>
 80245e8:	4b1e      	ldr	r3, [pc, #120]	; (8024664 <__sfp+0x84>)
 80245ea:	681e      	ldr	r6, [r3, #0]
 80245ec:	69b3      	ldr	r3, [r6, #24]
 80245ee:	b913      	cbnz	r3, 80245f6 <__sfp+0x16>
 80245f0:	4630      	mov	r0, r6
 80245f2:	f7ff ffbd 	bl	8024570 <__sinit>
 80245f6:	3648      	adds	r6, #72	; 0x48
 80245f8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80245fc:	3b01      	subs	r3, #1
 80245fe:	d503      	bpl.n	8024608 <__sfp+0x28>
 8024600:	6833      	ldr	r3, [r6, #0]
 8024602:	b30b      	cbz	r3, 8024648 <__sfp+0x68>
 8024604:	6836      	ldr	r6, [r6, #0]
 8024606:	e7f7      	b.n	80245f8 <__sfp+0x18>
 8024608:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802460c:	b9d5      	cbnz	r5, 8024644 <__sfp+0x64>
 802460e:	4b16      	ldr	r3, [pc, #88]	; (8024668 <__sfp+0x88>)
 8024610:	60e3      	str	r3, [r4, #12]
 8024612:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8024616:	6665      	str	r5, [r4, #100]	; 0x64
 8024618:	f7fe fda0 	bl	802315c <__retarget_lock_init_recursive>
 802461c:	f7ff ff96 	bl	802454c <__sfp_lock_release>
 8024620:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8024624:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8024628:	6025      	str	r5, [r4, #0]
 802462a:	61a5      	str	r5, [r4, #24]
 802462c:	2208      	movs	r2, #8
 802462e:	4629      	mov	r1, r5
 8024630:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8024634:	f7fd f96a 	bl	802190c <memset>
 8024638:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802463c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8024640:	4620      	mov	r0, r4
 8024642:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024644:	3468      	adds	r4, #104	; 0x68
 8024646:	e7d9      	b.n	80245fc <__sfp+0x1c>
 8024648:	2104      	movs	r1, #4
 802464a:	4638      	mov	r0, r7
 802464c:	f7ff ff62 	bl	8024514 <__sfmoreglue>
 8024650:	4604      	mov	r4, r0
 8024652:	6030      	str	r0, [r6, #0]
 8024654:	2800      	cmp	r0, #0
 8024656:	d1d5      	bne.n	8024604 <__sfp+0x24>
 8024658:	f7ff ff78 	bl	802454c <__sfp_lock_release>
 802465c:	230c      	movs	r3, #12
 802465e:	603b      	str	r3, [r7, #0]
 8024660:	e7ee      	b.n	8024640 <__sfp+0x60>
 8024662:	bf00      	nop
 8024664:	08025358 	.word	0x08025358
 8024668:	ffff0001 	.word	0xffff0001

0802466c <_fwalk_reent>:
 802466c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024670:	4606      	mov	r6, r0
 8024672:	4688      	mov	r8, r1
 8024674:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8024678:	2700      	movs	r7, #0
 802467a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802467e:	f1b9 0901 	subs.w	r9, r9, #1
 8024682:	d505      	bpl.n	8024690 <_fwalk_reent+0x24>
 8024684:	6824      	ldr	r4, [r4, #0]
 8024686:	2c00      	cmp	r4, #0
 8024688:	d1f7      	bne.n	802467a <_fwalk_reent+0xe>
 802468a:	4638      	mov	r0, r7
 802468c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024690:	89ab      	ldrh	r3, [r5, #12]
 8024692:	2b01      	cmp	r3, #1
 8024694:	d907      	bls.n	80246a6 <_fwalk_reent+0x3a>
 8024696:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802469a:	3301      	adds	r3, #1
 802469c:	d003      	beq.n	80246a6 <_fwalk_reent+0x3a>
 802469e:	4629      	mov	r1, r5
 80246a0:	4630      	mov	r0, r6
 80246a2:	47c0      	blx	r8
 80246a4:	4307      	orrs	r7, r0
 80246a6:	3568      	adds	r5, #104	; 0x68
 80246a8:	e7e9      	b.n	802467e <_fwalk_reent+0x12>

080246aa <__swhatbuf_r>:
 80246aa:	b570      	push	{r4, r5, r6, lr}
 80246ac:	460e      	mov	r6, r1
 80246ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80246b2:	2900      	cmp	r1, #0
 80246b4:	b096      	sub	sp, #88	; 0x58
 80246b6:	4614      	mov	r4, r2
 80246b8:	461d      	mov	r5, r3
 80246ba:	da07      	bge.n	80246cc <__swhatbuf_r+0x22>
 80246bc:	2300      	movs	r3, #0
 80246be:	602b      	str	r3, [r5, #0]
 80246c0:	89b3      	ldrh	r3, [r6, #12]
 80246c2:	061a      	lsls	r2, r3, #24
 80246c4:	d410      	bmi.n	80246e8 <__swhatbuf_r+0x3e>
 80246c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80246ca:	e00e      	b.n	80246ea <__swhatbuf_r+0x40>
 80246cc:	466a      	mov	r2, sp
 80246ce:	f000 f8b7 	bl	8024840 <_fstat_r>
 80246d2:	2800      	cmp	r0, #0
 80246d4:	dbf2      	blt.n	80246bc <__swhatbuf_r+0x12>
 80246d6:	9a01      	ldr	r2, [sp, #4]
 80246d8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80246dc:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80246e0:	425a      	negs	r2, r3
 80246e2:	415a      	adcs	r2, r3
 80246e4:	602a      	str	r2, [r5, #0]
 80246e6:	e7ee      	b.n	80246c6 <__swhatbuf_r+0x1c>
 80246e8:	2340      	movs	r3, #64	; 0x40
 80246ea:	2000      	movs	r0, #0
 80246ec:	6023      	str	r3, [r4, #0]
 80246ee:	b016      	add	sp, #88	; 0x58
 80246f0:	bd70      	pop	{r4, r5, r6, pc}
	...

080246f4 <__smakebuf_r>:
 80246f4:	898b      	ldrh	r3, [r1, #12]
 80246f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80246f8:	079d      	lsls	r5, r3, #30
 80246fa:	4606      	mov	r6, r0
 80246fc:	460c      	mov	r4, r1
 80246fe:	d507      	bpl.n	8024710 <__smakebuf_r+0x1c>
 8024700:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8024704:	6023      	str	r3, [r4, #0]
 8024706:	6123      	str	r3, [r4, #16]
 8024708:	2301      	movs	r3, #1
 802470a:	6163      	str	r3, [r4, #20]
 802470c:	b002      	add	sp, #8
 802470e:	bd70      	pop	{r4, r5, r6, pc}
 8024710:	ab01      	add	r3, sp, #4
 8024712:	466a      	mov	r2, sp
 8024714:	f7ff ffc9 	bl	80246aa <__swhatbuf_r>
 8024718:	9900      	ldr	r1, [sp, #0]
 802471a:	4605      	mov	r5, r0
 802471c:	4630      	mov	r0, r6
 802471e:	f7fd f94d 	bl	80219bc <_malloc_r>
 8024722:	b948      	cbnz	r0, 8024738 <__smakebuf_r+0x44>
 8024724:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024728:	059a      	lsls	r2, r3, #22
 802472a:	d4ef      	bmi.n	802470c <__smakebuf_r+0x18>
 802472c:	f023 0303 	bic.w	r3, r3, #3
 8024730:	f043 0302 	orr.w	r3, r3, #2
 8024734:	81a3      	strh	r3, [r4, #12]
 8024736:	e7e3      	b.n	8024700 <__smakebuf_r+0xc>
 8024738:	4b0d      	ldr	r3, [pc, #52]	; (8024770 <__smakebuf_r+0x7c>)
 802473a:	62b3      	str	r3, [r6, #40]	; 0x28
 802473c:	89a3      	ldrh	r3, [r4, #12]
 802473e:	6020      	str	r0, [r4, #0]
 8024740:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8024744:	81a3      	strh	r3, [r4, #12]
 8024746:	9b00      	ldr	r3, [sp, #0]
 8024748:	6163      	str	r3, [r4, #20]
 802474a:	9b01      	ldr	r3, [sp, #4]
 802474c:	6120      	str	r0, [r4, #16]
 802474e:	b15b      	cbz	r3, 8024768 <__smakebuf_r+0x74>
 8024750:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8024754:	4630      	mov	r0, r6
 8024756:	f000 f885 	bl	8024864 <_isatty_r>
 802475a:	b128      	cbz	r0, 8024768 <__smakebuf_r+0x74>
 802475c:	89a3      	ldrh	r3, [r4, #12]
 802475e:	f023 0303 	bic.w	r3, r3, #3
 8024762:	f043 0301 	orr.w	r3, r3, #1
 8024766:	81a3      	strh	r3, [r4, #12]
 8024768:	89a0      	ldrh	r0, [r4, #12]
 802476a:	4305      	orrs	r5, r0
 802476c:	81a5      	strh	r5, [r4, #12]
 802476e:	e7cd      	b.n	802470c <__smakebuf_r+0x18>
 8024770:	08024509 	.word	0x08024509

08024774 <__sread>:
 8024774:	b510      	push	{r4, lr}
 8024776:	460c      	mov	r4, r1
 8024778:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802477c:	f000 f894 	bl	80248a8 <_read_r>
 8024780:	2800      	cmp	r0, #0
 8024782:	bfab      	itete	ge
 8024784:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8024786:	89a3      	ldrhlt	r3, [r4, #12]
 8024788:	181b      	addge	r3, r3, r0
 802478a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802478e:	bfac      	ite	ge
 8024790:	6563      	strge	r3, [r4, #84]	; 0x54
 8024792:	81a3      	strhlt	r3, [r4, #12]
 8024794:	bd10      	pop	{r4, pc}

08024796 <__swrite>:
 8024796:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802479a:	461f      	mov	r7, r3
 802479c:	898b      	ldrh	r3, [r1, #12]
 802479e:	05db      	lsls	r3, r3, #23
 80247a0:	4605      	mov	r5, r0
 80247a2:	460c      	mov	r4, r1
 80247a4:	4616      	mov	r6, r2
 80247a6:	d505      	bpl.n	80247b4 <__swrite+0x1e>
 80247a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80247ac:	2302      	movs	r3, #2
 80247ae:	2200      	movs	r2, #0
 80247b0:	f000 f868 	bl	8024884 <_lseek_r>
 80247b4:	89a3      	ldrh	r3, [r4, #12]
 80247b6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80247ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80247be:	81a3      	strh	r3, [r4, #12]
 80247c0:	4632      	mov	r2, r6
 80247c2:	463b      	mov	r3, r7
 80247c4:	4628      	mov	r0, r5
 80247c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80247ca:	f000 b817 	b.w	80247fc <_write_r>

080247ce <__sseek>:
 80247ce:	b510      	push	{r4, lr}
 80247d0:	460c      	mov	r4, r1
 80247d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80247d6:	f000 f855 	bl	8024884 <_lseek_r>
 80247da:	1c43      	adds	r3, r0, #1
 80247dc:	89a3      	ldrh	r3, [r4, #12]
 80247de:	bf15      	itete	ne
 80247e0:	6560      	strne	r0, [r4, #84]	; 0x54
 80247e2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80247e6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80247ea:	81a3      	strheq	r3, [r4, #12]
 80247ec:	bf18      	it	ne
 80247ee:	81a3      	strhne	r3, [r4, #12]
 80247f0:	bd10      	pop	{r4, pc}

080247f2 <__sclose>:
 80247f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80247f6:	f000 b813 	b.w	8024820 <_close_r>
	...

080247fc <_write_r>:
 80247fc:	b538      	push	{r3, r4, r5, lr}
 80247fe:	4d07      	ldr	r5, [pc, #28]	; (802481c <_write_r+0x20>)
 8024800:	4604      	mov	r4, r0
 8024802:	4608      	mov	r0, r1
 8024804:	4611      	mov	r1, r2
 8024806:	2200      	movs	r2, #0
 8024808:	602a      	str	r2, [r5, #0]
 802480a:	461a      	mov	r2, r3
 802480c:	f7f2 fe77 	bl	80174fe <_write>
 8024810:	1c43      	adds	r3, r0, #1
 8024812:	d102      	bne.n	802481a <_write_r+0x1e>
 8024814:	682b      	ldr	r3, [r5, #0]
 8024816:	b103      	cbz	r3, 802481a <_write_r+0x1e>
 8024818:	6023      	str	r3, [r4, #0]
 802481a:	bd38      	pop	{r3, r4, r5, pc}
 802481c:	2000073c 	.word	0x2000073c

08024820 <_close_r>:
 8024820:	b538      	push	{r3, r4, r5, lr}
 8024822:	4d06      	ldr	r5, [pc, #24]	; (802483c <_close_r+0x1c>)
 8024824:	2300      	movs	r3, #0
 8024826:	4604      	mov	r4, r0
 8024828:	4608      	mov	r0, r1
 802482a:	602b      	str	r3, [r5, #0]
 802482c:	f7f2 fe83 	bl	8017536 <_close>
 8024830:	1c43      	adds	r3, r0, #1
 8024832:	d102      	bne.n	802483a <_close_r+0x1a>
 8024834:	682b      	ldr	r3, [r5, #0]
 8024836:	b103      	cbz	r3, 802483a <_close_r+0x1a>
 8024838:	6023      	str	r3, [r4, #0]
 802483a:	bd38      	pop	{r3, r4, r5, pc}
 802483c:	2000073c 	.word	0x2000073c

08024840 <_fstat_r>:
 8024840:	b538      	push	{r3, r4, r5, lr}
 8024842:	4d07      	ldr	r5, [pc, #28]	; (8024860 <_fstat_r+0x20>)
 8024844:	2300      	movs	r3, #0
 8024846:	4604      	mov	r4, r0
 8024848:	4608      	mov	r0, r1
 802484a:	4611      	mov	r1, r2
 802484c:	602b      	str	r3, [r5, #0]
 802484e:	f7f2 fe7e 	bl	801754e <_fstat>
 8024852:	1c43      	adds	r3, r0, #1
 8024854:	d102      	bne.n	802485c <_fstat_r+0x1c>
 8024856:	682b      	ldr	r3, [r5, #0]
 8024858:	b103      	cbz	r3, 802485c <_fstat_r+0x1c>
 802485a:	6023      	str	r3, [r4, #0]
 802485c:	bd38      	pop	{r3, r4, r5, pc}
 802485e:	bf00      	nop
 8024860:	2000073c 	.word	0x2000073c

08024864 <_isatty_r>:
 8024864:	b538      	push	{r3, r4, r5, lr}
 8024866:	4d06      	ldr	r5, [pc, #24]	; (8024880 <_isatty_r+0x1c>)
 8024868:	2300      	movs	r3, #0
 802486a:	4604      	mov	r4, r0
 802486c:	4608      	mov	r0, r1
 802486e:	602b      	str	r3, [r5, #0]
 8024870:	f7f2 fe7d 	bl	801756e <_isatty>
 8024874:	1c43      	adds	r3, r0, #1
 8024876:	d102      	bne.n	802487e <_isatty_r+0x1a>
 8024878:	682b      	ldr	r3, [r5, #0]
 802487a:	b103      	cbz	r3, 802487e <_isatty_r+0x1a>
 802487c:	6023      	str	r3, [r4, #0]
 802487e:	bd38      	pop	{r3, r4, r5, pc}
 8024880:	2000073c 	.word	0x2000073c

08024884 <_lseek_r>:
 8024884:	b538      	push	{r3, r4, r5, lr}
 8024886:	4d07      	ldr	r5, [pc, #28]	; (80248a4 <_lseek_r+0x20>)
 8024888:	4604      	mov	r4, r0
 802488a:	4608      	mov	r0, r1
 802488c:	4611      	mov	r1, r2
 802488e:	2200      	movs	r2, #0
 8024890:	602a      	str	r2, [r5, #0]
 8024892:	461a      	mov	r2, r3
 8024894:	f7f2 fe76 	bl	8017584 <_lseek>
 8024898:	1c43      	adds	r3, r0, #1
 802489a:	d102      	bne.n	80248a2 <_lseek_r+0x1e>
 802489c:	682b      	ldr	r3, [r5, #0]
 802489e:	b103      	cbz	r3, 80248a2 <_lseek_r+0x1e>
 80248a0:	6023      	str	r3, [r4, #0]
 80248a2:	bd38      	pop	{r3, r4, r5, pc}
 80248a4:	2000073c 	.word	0x2000073c

080248a8 <_read_r>:
 80248a8:	b538      	push	{r3, r4, r5, lr}
 80248aa:	4d07      	ldr	r5, [pc, #28]	; (80248c8 <_read_r+0x20>)
 80248ac:	4604      	mov	r4, r0
 80248ae:	4608      	mov	r0, r1
 80248b0:	4611      	mov	r1, r2
 80248b2:	2200      	movs	r2, #0
 80248b4:	602a      	str	r2, [r5, #0]
 80248b6:	461a      	mov	r2, r3
 80248b8:	f7f2 fe04 	bl	80174c4 <_read>
 80248bc:	1c43      	adds	r3, r0, #1
 80248be:	d102      	bne.n	80248c6 <_read_r+0x1e>
 80248c0:	682b      	ldr	r3, [r5, #0]
 80248c2:	b103      	cbz	r3, 80248c6 <_read_r+0x1e>
 80248c4:	6023      	str	r3, [r4, #0]
 80248c6:	bd38      	pop	{r3, r4, r5, pc}
 80248c8:	2000073c 	.word	0x2000073c

080248cc <_init>:
 80248cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80248ce:	bf00      	nop
 80248d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80248d2:	bc08      	pop	{r3}
 80248d4:	469e      	mov	lr, r3
 80248d6:	4770      	bx	lr

080248d8 <_fini>:
 80248d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80248da:	bf00      	nop
 80248dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80248de:	bc08      	pop	{r3}
 80248e0:	469e      	mov	lr, r3
 80248e2:	4770      	bx	lr
